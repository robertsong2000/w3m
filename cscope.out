cscope 15 $HOME/rpmdir/BUILD/w3m-0.5.2               0003354823
	@.pc/google.patch/fm.h

10 #i‚de‡
FM_H


11 
	#FM_H


	)

14 #i‚de‡
_GNU_SOURCE


15 
	#_GNU_SOURCE


	)

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/°©.h
>

24 
	~<uni°d.h
>

25 
	~"c⁄fig.h
"

26 
	~"hi°‹y.h
"

28 #ifde‡
USE_MENU


29 
	#MENU_SELECT


	)

30 
	#MENU_MAP


	)

33 #i‚de‡
USE_COLOR


34 #unde‡
USE_ANSI_COLOR


35 #unde‡
USE_BG_COLOR


38 
	~"˘æcode.h
"

39 
	~"html.h
"

40 
	~<gc.h
>

41 
	~"Så.h
"

42 #ifde‡
USE_M17N


43 
	~"wc.h
"

44 
	~"wtf.h
"

46 
	twc_˚s
;

49 #ifde‡
HAVE_LOCALE_H


50 
	~<loˇÀ.h
>

52 #i‡!
HAVE_SETLOCALE


53 
	#£éoˇÀ
(
ˇãg‹y
, 
loˇÀ
Ë

	)

56 #ifde‡
ENABLE_NLS


57 
	~<liböé.h
>

58 
	#_
(
Såög
Ë
	`gëãxt
 (Såög)

	)

59 
	#N_
(
Såög
Ë(Såög)

	)

61 #unde‡
bödãxtdomaö


62 
	#bödãxtdomaö
(
Domaö
, 
Dúe˘‹y
Ë

	)

63 #unde‡
ãxtdomaö


64 
	#ãxtdomaö
(
Domaö
Ë

	)

65 
	#_
(
Text
Ë
	)
Text

66 
	#N_
(
Text
Ë
	)
Text

67 
	#gëãxt
(
Text
Ë
	)
Text

70 
	~"f‹m.h
"

71 
	~"‰ame.h
"

72 
	~"∑r£èg.h
"

73 
	~"∑r£ègx.h
"

74 
	~"func.h
"

75 
	~"míu.h
"

76 
	~"ãxéi°.h
"

77 
	~"fun˙ame1.h
"

78 
	~"ãrms.h
"

80 #i‚de‡
HAVE_BCOPY


81 
bc›y
(const *, *, );

82 
bzîo
(*, );

84 #ifde‡
__EMX__


85 
	~<°rögs.h
>

88 #ifde‡
MAINPROGRAM


89 
	#globÆ


	)

90 
	#öô
(
x
Ë=(x)

	)

92 
	#globÆ
 

	)

93 
	#öô
(
x
)

	)

96 
	#DEFUN
(
fun˙ame
, 
ma¸⁄ame
, 
doc°rög
Ë
	`fun˙ame
()

	)

101 
	#LINELEN
 256

	)

102 
	#PAGER_MAX_LINE
 10000

	)

104 #ifde‡
USE_IMAGE


105 
	#MAX_IMAGE
 1000

	)

106 
	#MAX_IMAGE_SIZE
 2048

	)

108 
	#DEFAULT_PIXEL_PER_CHAR
 7.0

	)

109 
	#DEFAULT_PIXEL_PER_LINE
 14.0

	)

111 
	#DEFAULT_PIXEL_PER_CHAR
 8.0

	)

113 
	#MINIMUM_PIXEL_PER_CHAR
 4.0

	)

114 
	#MAXIMUM_PIXEL_PER_CHAR
 32.0

	)

116 #ifde‡
FALSE


117 #unde‡
FALSE


120 #ifde‡
TRUE


121 #unde‡
TRUE


124 
	#FALSE
 0

	)

125 
	#TRUE
 1

	)

127 
	#SHELLBUFFERNAME
 "*Shñlout*"

	)

128 
	#PIPEBUFFERNAME
 "*°ªam*"

	)

129 
	#CPIPEBUFFERNAME
 "*°ªam(˛o£d)*"

	)

130 #ifde‡
USE_DICT


131 
	#DICTBUFFERNAME
 "*di˘i⁄¨y*"

	)

138 
	#P_CHARTYPE
 0x3f00

	)

139 #ifde‡
USE_M17N


140 
	#PC_ASCII
 (
WTF_TYPE_ASCII
 << 8)

	)

141 
	#PC_CTRL
 (
WTF_TYPE_CTRL
 << 8)

	)

142 
	#PC_WCHAR1
 (
WTF_TYPE_WCHAR1
 << 8)

	)

143 
	#PC_WCHAR2
 (
WTF_TYPE_WCHAR2
 << 8)

	)

144 
	#PC_KANJI
 (
WTF_TYPE_WIDE
 << 8)

	)

145 
	#PC_KANJI1
 (
PC_WCHAR1
 | 
PC_KANJI
)

	)

146 
	#PC_KANJI2
 (
PC_WCHAR2
 | 
PC_KANJI
)

	)

147 
	#PC_UNKNOWN
 (
WTF_TYPE_UNKNOWN
 << 8)

	)

148 
	#PC_UNDEF
 (
WTF_TYPE_UNDEF
 << 8)

	)

150 
	#PC_ASCII
 0x0000

	)

151 
	#PC_CTRL
 0x0100

	)

153 
	#PC_SYMBOL
 0x8000

	)

156 
	#P_EFFECT
 0x40ff

	)

157 
	#PE_NORMAL
 0x00

	)

158 
	#PE_MARK
 0x01

	)

159 
	#PE_UNDER
 0x02

	)

160 
	#PE_STAND
 0x04

	)

161 
	#PE_BOLD
 0x08

	)

162 
	#PE_ANCHOR
 0x10

	)

163 
	#PE_EMPH
 0x08

	)

164 
	#PE_IMAGE
 0x20

	)

165 
	#PE_FORM
 0x40

	)

166 
	#PE_ACTIVE
 0x80

	)

167 
	#PE_VISITED
 0x4000

	)

170 
	#PE_EX_ITALIC
 0x01

	)

171 
	#PE_EX_INSERT
 0x02

	)

172 
	#PE_EX_STRIKE
 0x04

	)

174 
	#PE_EX_ITALIC_E
 
PE_UNDER


	)

175 
	#PE_EX_INSERT_E
 
PE_UNDER


	)

176 
	#PE_EX_STRIKE_E
 
PE_STAND


	)

178 
	#Ch¨Ty≥
(
c
Ë((c)&
P_CHARTYPE
)

	)

179 
	#Ch¨Ef„˘
(
c
Ë((c)&(
P_EFFECT
|
PC_SYMBOL
))

	)

180 
	#SëCh¨Ty≥
(
v
,
c
Ë((v)=(((v)&~
P_CHARTYPE
)|(c)))

	)

183 
	#COLPOS
(
l
,
c
Ë
	`ˇlcPosôi⁄
÷->
löeBuf
,l->
¥›Buf
,l->
Àn
,c,0,
CP_AUTO
)

	)

186 
	#B_NORMAL
 0

	)

187 
	#B_FORCE_REDRAW
 1

	)

188 
	#B_REDRAW
 2

	)

189 
	#B_SCROLL
 3

	)

190 
	#B_REDRAW_IMAGE
 4

	)

193 
	#BP_NORMAL
 0x0

	)

194 
	#BP_PIPE
 0x1

	)

195 
	#BP_FRAME
 0x2

	)

196 
	#BP_INTERNAL
 0x8

	)

197 
	#BP_NO_URL
 0x10

	)

198 
	#BP_REDIRECTED
 0x20

	)

199 
	#BP_CLOSE
 0x40

	)

202 
	#LB_NOLINK
 -1

	)

203 
	#LB_FRAME
 0

	)

204 
	#LB_N_FRAME
 1

	)

205 
	#LB_INFO
 2

	)

206 
	#LB_N_INFO
 3

	)

207 
	#LB_SOURCE
 4

	)

208 
	#LB_N_SOURCE
 
LB_SOURCE


	)

209 
	#MAX_LB
 5

	)

212 
	#SR_FOUND
 0x1

	)

213 
	#SR_NOTFOUND
 0x2

	)

214 
	#SR_WRAPPED
 0x4

	)

216 #ifde‡
MAINPROGRAM


217 
REV_LB
[
MAX_LB
] = {

218 
LB_N_FRAME
, 
LB_FRAME
, 
LB_N_INFO
, 
LB_INFO
, 
LB_N_SOURCE
,

221 
REV_LB
[];

225 
	#CHK_URL
 1

	)

226 
	#CHK_NMID
 2

	)

229 
	#CP_AUTO
 0

	)

230 
	#CP_FORCE
 1

	)

233 
	#CPL_OK
 0

	)

234 
	#CPL_AMBIG
 1

	)

235 
	#CPL_FAIL
 2

	)

236 
	#CPL_MENU
 3

	)

238 
	#CPL_NEVER
 0x0

	)

239 
	#CPL_OFF
 0x1

	)

240 
	#CPL_ON
 0x2

	)

241 
	#CPL_ALWAYS
 0x4

	)

242 
	#CPL_URL
 0x8

	)

245 
	#IN_STRING
 0x10

	)

246 
	#IN_FILENAME
 0x20

	)

247 
	#IN_PASSWORD
 0x40

	)

248 
	#IN_COMMAND
 0x80

	)

249 
	#IN_URL
 0x100

	)

250 
	#IN_CHAR
 0x200

	)

252 
	#IMG_FLAG_SKIP
 1

	)

253 
	#IMG_FLAG_AUTO
 2

	)

255 
	#IMG_FLAG_START
 0

	)

256 
	#IMG_FLAG_STOP
 1

	)

257 
	#IMG_FLAG_NEXT
 2

	)

259 
	#IMG_FLAG_UNLOADED
 0

	)

260 
	#IMG_FLAG_LOADED
 1

	)

261 
	#IMG_FLAG_ERROR
 2

	)

262 
	#IMG_FLAG_DONT_REMOVE
 4

	)

268 
	#öputLöeHi°
(
p
,
d
,
f
,
h
Ë
	`öputLöeHi°Sórch
’,d,f,h,
NULL
)

	)

269 
	#öputLöe
(
p
,
d
,
f
Ë
	`öputLöeHi°
’,d,f,
NULL
)

	)

270 
	#öputSå
(
p
,
d
Ë
	`öputLöe
’,d,
IN_STRING
)

	)

271 
	#öputSåHi°
(
p
,
d
,
h
Ë
	`öputLöeHi°
’,d,
IN_STRING
,h)

	)

272 
	#öputFûíame
(
p
,
d
Ë
	`öputLöe
’,d,
IN_FILENAME
)

	)

273 
	#öputFûíameHi°
(
p
,
d
,
h
Ë
	`öputLöeHi°
’,d,
IN_FILENAME
,h)

	)

274 
	#öputCh¨
(
p
Ë
	`öputLöe
’,"",
IN_CHAR
)

	)

276 
	#‰ì
(
x
Ë
	`GC_‰ì
(xË

	)

278 #ifde‡
__EMX__


279 
	#HAVE_STRCASECMP


	)

280 
	#°rˇ£cmp
 
°ricmp


	)

281 
	#°∫ˇ£cmp
 
°∫icmp


	)

285 
	#SKIP_BLANKS
(
p
Ë{*’)&&
	`IS_SPACE
(*’)))’)++;}

	)

286 
	#SKIP_NON_BLANKS
(
p
Ë{*’)&&!
	`IS_SPACE
(*’)))’)++;}

	)

287 
	#IS_ENDL
(
c
Ë((c)=='\0'||(c)=='\r'||(c)=='\n')

	)

288 
	#IS_ENDT
(
c
Ë(
	`IS_ENDL
(c)||(c)==';')

	)

290 
	#bpcmp
(
a
,
b
) \

291 (((
a
).
löe
 - (
b
).löeË? (◊).löê- (b).löeË: (◊).
pos
 - (b).pos))

	)

293 
	#RELATIVE_WIDTH
(
w
Ë(((w)>=0)?()((w)/
pixñ_≥r_ch¨
):(w))

	)

294 
	#REAL_WIDTH
(
w
,
limô
Ë(((w)>=0)?()((w)/
pixñ_≥r_ch¨
):-(w)*÷imô)/100)

	)

296 
	#EOL
(
l
Ë(&÷)->
±r
[÷)->
Àngth
])

	)

297 
	#IS_EOL
(
p
,
l
Ë(’)==&÷)->
±r
[÷)->
Àngth
])

	)

303 
	tLöïr›
;

304 #ifde‡
USE_ANSI_COLOR


305 
	tLöecﬁ‹
;

308 
	s_M≠Aªa
 {

309 *
	muæ
;

310 *
	mèrgë
;

311 *
	mÆt
;

312 #ifde‡
USE_IMAGE


313 
	msh≠e
;

314 *
	mco‹ds
;

315 
	mnco‹ds
;

316 
	m˚¡î_x
;

317 
	m˚¡î_y
;

319 } 
	tM≠Aªa
;

321 
	s_M≠Li°
 {

322 
Så
 
	m«me
;

323 
GíîÆLi°
 *
	m¨ó
;

324 
_M≠Li°
 *
	m√xt
;

325 } 
	tM≠Li°
;

327 
	s_Löe
 {

328 *
	mlöeBuf
;

329 
Löïr›
 *
	m¥›Buf
;

330 #ifde‡
USE_ANSI_COLOR


331 
Löecﬁ‹
 *
	mcﬁ‹Buf
;

333 
_Löe
 *
	m√xt
;

334 
_Löe
 *
	m¥ev
;

335 
	mÀn
;

336 
	mwidth
;

337 
	mlöíumbî
;

338 
	mªÆ_löíumbî
;

339 
	mu§Êags
;

340 
	msize
;

341 
	mbpos
;

342 
	mbwidth
;

343 } 
	tLöe
;

346 
	mlöe
;

347 
	mpos
;

348 
	mövÆid
;

349 } 
	tBuf„rPoöt
;

351 #ifde‡
USE_IMAGE


352 
	s_imageCache
 {

353 *
	muæ
;

354 
P¨£dURL
 *
	mcuºít
;

355 *
	mfûe
;

356 *
	mtouch
;

357 
pid_t
 
	mpid
;

358 
	mlﬂded
;

359 
	mödex
;

360 
	mwidth
;

361 
	mheight
;

362 } 
	tImageCache
;

364 
	s_image
 {

365 *
	muæ
;

366 *
	mext
;

367 
	mwidth
;

368 
	mheight
;

369 
	mxoff£t
;

370 
	myoff£t
;

371 
	my
;

372 
	mrows
;

373 *
	mm≠
;

374 
	mism≠
;

375 
	mtouch
;

376 
ImageCache
 *
	mˇche
;

377 } 
	tImage
;

380 
	s_™ch‹
 {

381 *
	muæ
;

382 *
	mèrgë
;

383 *
	mª„ªr
;

384 *
	mtôÀ
;

385 
	mac˚sskey
;

386 
Buf„rPoöt
 
	m°¨t
;

387 
Buf„rPoöt
 
	míd
;

388 
	mh£q
;

389 
	m¶ave
;

390 
	my
;

391 
	mrows
;

392 #ifde‡
USE_IMAGE


393 
Image
 *
	mimage
;

395 } 
	tAnch‹
;

397 
	#NO_REFERER
 ((*)-1)

	)

399 
	s_™ch‹Li°
 {

400 
Anch‹
 *
	m™ch‹s
;

401 
	m«nch‹
;

402 
	m™ch‹max
;

403 
	maˇche
;

404 } 
	tAnch‹Li°
;

407 
Buf„rPoöt
 *
	mm¨ks
;

408 
	mnm¨k
;

409 
	mm¨kmax
;

410 
	m¥evh£q
;

411 } 
	tHm¨kîLi°
;

413 
	#LINK_TYPE_NONE
 0

	)

414 
	#LINK_TYPE_REL
 1

	)

415 
	#LINK_TYPE_REV
 2

	)

416 
	s_LökLi°
 {

417 *
	muæ
;

418 *
	mtôÀ
;

419 *
	m˘y≥
;

420 
	mty≥
;

421 
_LökLi°
 *
	m√xt
;

422 } 
	tLökLi°
;

424 
	s_Buf„r
 {

425 *
	mfûíame
;

426 *
	mbuf„∫ame
;

427 
Löe
 *
	mfú°Löe
;

428 
Löe
 *
	mt›Löe
;

429 
Löe
 *
	mcuºítLöe
;

430 
Löe
 *
	mœ°Löe
;

431 
_Buf„r
 *
	m√xtBuf„r
;

432 
_Buf„r
 *
	mlökBuf„r
[
MAX_LB
];

433 
	mwidth
;

434 
	mheight
;

435 *
	mty≥
;

436 *
	mªÆ_ty≥
;

437 
	mÆlLöe
;

438 
	mbuf„Ωr›
;

439 
	mcuºítCﬁumn
;

440 
	mcurs‹X
;

441 
	mcurs‹Y
;

442 
	mpos
;

443 
	mvisuÆpos
;

444 
	mroŸX
;

445 
	mroŸY
;

446 
	mCOLS
;

447 
	mLINES
;

448 
I≈utSåóm
 
	m∑gîSour˚
;

449 
Anch‹Li°
 *
	mhªf
;

450 
Anch‹Li°
 *
	m«me
;

451 
Anch‹Li°
 *
	mimg
;

452 
Anch‹Li°
 *
	mf‹môem
;

453 
LökLi°
 *
	mlökli°
;

454 
F‹mLi°
 *
	mf‹mli°
;

455 
M≠Li°
 *
	mm≠li°
;

456 
Hm¨kîLi°
 *
	mhm¨kli°
;

457 
Hm¨kîLi°
 *
	mim¨kli°
;

458 
P¨£dURL
 
	mcuºítURL
;

459 
P¨£dURL
 *
	mba£URL
;

460 *
	mba£T¨gë
;

461 
	mªÆ_scheme
;

462 *
	msour˚fûe
;

463 
‰ame£t
 *
	m‰ame£t
;

464 
‰ame£t_queue
 *
	m‰ameQ
;

465 *
	m˛⁄e
;

466 
size_t
 
	måbyã
;

467 
	mcheck_uæ
;

468 #ifde‡
USE_M17N


469 
wc_˚s
 
	mdocumít_ch¨£t
;

470 
wc_uöt8
 
	mauto_dëe˘
;

472 
TextLi°
 *
	mdocumít_hódî
;

473 
F‹mIãmLi°
 *
	mf‹m_submô
;

474 *
	mßveˇche
;

475 *
	medô
;

476 
maûˇp
 *
	mmaûˇp
;

477 *
	mmaûˇp_sour˚
;

478 *
	mhódî_sour˚
;

479 
	m£¨ch_hódî
;

480 #ifde‡
USE_SSL


481 *
	ms¶_˚πifiˇã
;

483 
	mimage_Êag
;

484 
	mimage_lﬂded
;

485 
	m√ed_ªsh≠e
;

486 
Anch‹
 *
	msubmô
;

487 
_Buf„rPos
 *
	mundo
;

488 #ifde‡
USE_ALARM


489 
_AœrmEvít
 *
	mevít
;

491 } 
	tBuf„r
;

493 
	s_Buf„rPos
 {

494 
	mt›_löíumbî
;

495 
	mcur_löíumbî
;

496 
	mcuºítCﬁumn
;

497 
	mpos
;

498 
	mbpos
;

499 
_Buf„rPos
 *
	m√xt
;

500 
_Buf„rPos
 *
	m¥ev
;

501 } 
	tBuf„rPos
;

503 
	s_TabBuf„r
 {

504 
_TabBuf„r
 *
	m√xtTab
;

505 
_TabBuf„r
 *
	m¥evTab
;

506 
Buf„r
 *
	mcuºítBuf„r
;

507 
Buf„r
 *
	mfú°Buf„r
;

508 
	mx1
;

509 
	mx2
;

510 
	my
;

511 } 
	tTabBuf„r
;

513 
	s_Dow∆ﬂdLi°
 {

514 
pid_t
 
	mpid
;

515 *
	muæ
;

516 *
	mßve
;

517 *
	mlock
;

518 
˛í_t
 
	msize
;

519 
time_t
 
	mtime
;

520 
	mok
;

521 
_Dow∆ﬂdLi°
 *
	m√xt
;

522 
_Dow∆ﬂdLi°
 *
	m¥ev
;

523 } 
	tDow∆ﬂdLi°
;

524 
	#DOWNLOAD_LIST_TITLE
 "Dow∆ﬂd Li° P™ñ"

	)

526 
	#COPY_BUFROOT
(
d°buf
, 
§cbuf
) {\

527 (
d°buf
)->
roŸX
 = (
§cbuf
)->rootX; \

528 (
d°buf
)->
roŸY
 = (
§cbuf
)->rootY; \

529 (
d°buf
)->
COLS
 = (
§cbuf
)->COLS; \

530 (
d°buf
)->
LINES
 = (
§cbuf
)->LINES; \

531 }

	)

533 
	#COPY_BUFPOSITION
(
d°buf
, 
§cbuf
) {\

534 (
d°buf
)->
t›Löe
 = (
§cbuf
)->topLine; \

535 (
d°buf
)->
cuºítLöe
 = (
§cbuf
)->currentLine; \

536 (
d°buf
)->
pos
 = (
§cbuf
)->pos; \

537 (
d°buf
)->
curs‹X
 = (
§cbuf
)->cursorX; \

538 (
d°buf
)->
curs‹Y
 = (
§cbuf
)->cursorY; \

539 (
d°buf
)->
visuÆpos
 = (
§cbuf
)->visualpos; \

540 (
d°buf
)->
cuºítCﬁumn
 = (
§cbuf
)->currentColumn; \

541 }

	)

542 
	#SAVE_BUFPOSITION
(
sbuÂ
Ë
	`COPY_BUFPOSITION
(sbuÂ, 
Cuºítbuf
)

	)

543 
	#RESTORE_BUFPOSITION
(
sbuÂ
Ë
	`COPY_BUFPOSITION
(
Cuºítbuf
, sbuÂ)

	)

544 
	#TOP_LINENUMBER
(
buf
Ë((buf)->
t›Löe
 ? (buf)->t›Löe->
löíumbî
 : 1)

	)

545 
	#CUR_LINENUMBER
(
buf
Ë((buf)->
cuºítLöe
 ? (buf)->cuºítLöe->
löíumbî
 : 1)

	)

547 
	#NO_BUFFER
 ((
Buf„r
*)1)

	)

549 
	#RB_STACK_SIZE
 10

	)

551 
	#TAG_STACK_SIZE
 10

	)

553 
	#FONT_STACK_SIZE
 5

	)

555 
	#FONTSTAT_SIZE
 7

	)

557 
	#_INIT_BUFFER_WIDTH
 (
COLS
 - (
showLöeNum
 ? 6 : 1))

	)

558 
	#INIT_BUFFER_WIDTH
 ((
_INIT_BUFFER_WIDTH
 > 0Ë? _INIT_BUFFER_WIDTH : 0)

	)

559 
	#FOLD_BUFFER_WIDTH
 (
FﬁdLöe
 ? (
INIT_BUFFER_WIDTH
 + 1Ë: -1)

	)

562 
	mpos
;

563 
	mÀn
;

564 
	méí
;

565 
	mÊag
;

566 
Anch‹
 
	m™ch‹
;

567 
Så
 
	mimg_Æt
;

568 
	mf⁄t°©
[
FONTSTAT_SIZE
];

569 
	mnobr_Àvñ
;

570 
Löïr›
 
	m¥ev_˘y≥
;

571 
	möô_Êag
;

572 
	mt›_m¨gö
;

573 
	mbŸtom_m¨gö
;

574 } 
	tBªakpoöt
;

576 
	sªadbuf„r
 {

577 
Så
 
	mlöe
;

578 
Löïr›
 
	m˝r›
;

579 
	mpos
;

580 
Så
 
	m¥evch¨
;

581 
	mÊag
;

582 
	mÊag_°ack
[
RB_STACK_SIZE
];

583 
	mÊag_•
;

584 
	m°©us
;

585 
	míd_èg
;

586 
	mèbÀ_Àvñ
;

587 
	mnobr_Àvñ
;

588 
Anch‹
 
	m™ch‹
;

589 
Så
 
	mimg_Æt
;

590 
	mf⁄t°©
[
FONTSTAT_SIZE
];

591 
	mf⁄t°©_°ack
[
FONT_STACK_SIZE
][
FONTSTAT_SIZE
];

592 
	mf⁄t°©_•
;

593 
Löïr›
 
	m¥ev_˘y≥
;

594 
Bªakpoöt
 
	mbp
;

595 
cmdèbÀ
 *
	mèg_°ack
[
TAG_STACK_SIZE
];

596 
	mèg_•
;

597 
	mt›_m¨gö
;

598 
	mbŸtom_m¨gö
;

601 
	#ö_bﬁd
 
f⁄t°©
[0]

	)

602 
	#ö_undî
 
f⁄t°©
[1]

	)

603 
	#ö_ôÆic
 
f⁄t°©
[2]

	)

604 
	#ö_°rike
 
f⁄t°©
[3]

	)

605 
	#ö_ös
 
f⁄t°©
[4]

	)

606 
	#ö_°™d
 
f⁄t°©
[5]

	)

608 
	#RB_PRE
 0x01

	)

609 
	#RB_SCRIPT
 0x02

	)

610 
	#RB_STYLE
 0x04

	)

611 
	#RB_PLAIN
 0x08

	)

612 
	#RB_LEFT
 0x10

	)

613 
	#RB_CENTER
 0x20

	)

614 
	#RB_RIGHT
 0x40

	)

615 
	#RB_ALIGN
 (
RB_LEFT
| 
RB_CENTER
 | 
RB_RIGHT
)

	)

616 
	#RB_NOBR
 0x80

	)

617 
	#RB_P
 0x100

	)

618 
	#RB_PRE_INT
 0x200

	)

619 
	#RB_IN_DT
 0x400

	)

620 
	#RB_INTXTA
 0x800

	)

621 
	#RB_INSELECT
 0x1000

	)

622 
	#RB_IGNORE_P
 0x2000

	)

623 
	#RB_TITLE
 0x4000

	)

624 
	#RB_NFLUSHED
 0x8000

	)

625 
	#RB_NOFRAMES
 0x10000

	)

626 
	#RB_INTABLE
 0x20000

	)

627 
	#RB_PREMODE
 (
RB_PRE
 | 
RB_PRE_INT
 | 
RB_SCRIPT
 | 
RB_STYLE
 | 
RB_PLAIN
 | 
RB_INTXTA
)

	)

628 
	#RB_SPECIAL
 (
RB_PRE
 | 
RB_PRE_INT
 | 
RB_SCRIPT
 | 
RB_STYLE
 | 
RB_PLAIN
 | 
RB_NOBR
)

	)

629 
	#RB_PLAIN_PRE
 0x40000

	)

631 #ifde‡
FORMAT_NICE


632 
	#RB_FILL
 0x80000

	)

634 
	#RB_DEL
 0x100000

	)

635 
	#RB_S
 0x200000

	)

637 
	#RB_GET_ALIGN
(
obuf
Ë((obuf)->
Êag
&
RB_ALIGN
)

	)

638 
	#RB_SET_ALIGN
(
obuf
,
Æign
Ë{(obuf)->
Êag
 &~
RB_ALIGN
; (obuf)->Êag |◊lign); }

	)

639 
	#RB_SAVE_FLAG
(
obuf
) {\

640 i‡((
obuf
)->
Êag_•
 < 
RB_STACK_SIZE
) \

641 (
obuf
)->
Êag_°ack
[(obuf)->
Êag_•
++] = 
	`RB_GET_ALIGN
(obuf); \

642 }

	)

643 
	#RB_RESTORE_FLAG
(
obuf
) {\

644 i‡((
obuf
)->
Êag_•
 > 0) \

645 
	`RB_SET_ALIGN
(
obuf
,(obuf)->
Êag_°ack
[--(obuf)->
Êag_•
]); \

646 }

	)

649 
	#R_ST_NORMAL
 0

	)

650 
	#R_ST_TAG0
 1

	)

651 
	#R_ST_TAG
 2

	)

652 
	#R_ST_QUOTE
 3

	)

653 
	#R_ST_DQUOTE
 4

	)

654 
	#R_ST_EQL
 5

	)

655 
	#R_ST_AMP
 6

	)

656 
	#R_ST_EOL
 7

	)

657 
	#R_ST_CMNT1
 8

	)

658 
	#R_ST_CMNT2
 9

	)

659 
	#R_ST_CMNT
 10

	)

660 
	#R_ST_NCMNT1
 11

	)

661 
	#R_ST_NCMNT2
 12

	)

662 
	#R_ST_NCMNT3
 13

	)

663 
	#R_ST_IRRTAG
 14

	)

664 
	#R_ST_VALUE
 15

	)

666 
	#ST_IS_REAL_TAG
(
s
Ë((s)==
R_ST_TAG
||(s)==
R_ST_TAG0
||(s)==
R_ST_EQL
||(s)==
R_ST_VALUE
)

	)

669 
	#REALLY_THE_BEGINNING_OF_A_TAG
(
p
) \

670 (
	`IS_ALPHA
(
p
[1]Ë||Ö[1] ='/' ||Ö[1] ='!' ||Ö[1] ='?' ||Ö[1] ='\0' ||Ö[1] ='_')

	)

673 
	#RG_NOCACHE
 1

	)

674 
	#RG_FRAME
 2

	)

675 
	#RG_FRAME_SRC
 4

	)

677 
	shtml_„ed_ívú⁄
 {

678 
ªadbuf„r
 *
	mobuf
;

679 
TextLöeLi°
 *
	mbuf
;

680 
FILE
 *
	mf
;

681 
Så
 
	mègbuf
;

682 
	mlimô
;

683 
	mmaxlimô
;

684 
ívú⁄mít
 *
	mívs
;

685 
	m√nv
;

686 
	mívc
;

687 
	mívc_ªÆ
;

688 *
	mtôÀ
;

689 
	mbœnk_löes
;

692 #ifde‡
USE_COOKIE


693 
	sp‹éi°
 {

694 
	mp‹t
;

695 
p‹éi°
 *
	m√xt
;

698 
	scookõ
 {

699 
P¨£dURL
 
	muæ
;

700 
Så
 
	m«me
;

701 
Så
 
	mvÆue
;

702 
time_t
 
	mexpúes
;

703 
Så
 
	m∑th
;

704 
Så
 
	mdomaö
;

705 
Så
 
	mcommít
;

706 
Så
 
	mcommítURL
;

707 
p‹éi°
 *
	mp‹é
;

708 
	mvîsi⁄
;

709 
	mÊag
;

710 
cookõ
 *
	m√xt
;

712 
	#COO_USE
 1

	)

713 
	#COO_SECURE
 2

	)

714 
	#COO_DOMAIN
 4

	)

715 
	#COO_PATH
 8

	)

716 
	#COO_DISCARD
 16

	)

717 
	#COO_OVERRIDE
 32

	)

719 
	#COO_OVERRIDE_OK
 32

	)

723 
	#COO_EINTERNAL
 (1Ë

	)

724 
	#COO_ETAIL
 (2 | 
COO_OVERRIDE_OK
Ë

	)

725 
	#COO_ESPECIAL
 (3Ë

	)

726 
	#COO_EPATH
 (4Ë

	)

727 
	#COO_ENODOT
 (5 | 
COO_OVERRIDE_OK
Ë

	)

728 
	#COO_ENOTV1DOM
 (6 | 
COO_OVERRIDE_OK
Ë

	)

729 
	#COO_EDOM
 (7 | 
COO_OVERRIDE_OK
Ë

	)

730 
	#COO_EBADHOST
 (8 | 
COO_OVERRIDE_OK
Ë

	)

731 
	#COO_EPORT
 (9Ë

	)

732 
	#COO_EMAX
 
COO_EPORT


	)

737 
	#ALIGN_CENTER
 0

	)

738 
	#ALIGN_LEFT
 1

	)

739 
	#ALIGN_RIGHT
 2

	)

740 
	#ALIGN_MIDDLE
 4

	)

741 
	#ALIGN_TOP
 5

	)

742 
	#ALIGN_BOTTOM
 6

	)

744 
	#VALIGN_MIDDLE
 0

	)

745 
	#VALIGN_TOP
 1

	)

746 
	#VALIGN_BOTTOM
 2

	)

748 
	shâp_ªque°
 {

749 
	mcomm™d
;

750 
	mÊag
;

751 *
	mª„ªr
;

752 
F‹mLi°
 *
	mªque°
;

753 } 
	tHReque°
;

755 
	#HR_COMMAND_GET
 0

	)

756 
	#HR_COMMAND_POST
 1

	)

757 
	#HR_COMMAND_CONNECT
 2

	)

758 
	#HR_COMMAND_HEAD
 3

	)

760 
	#HR_FLAG_LOCAL
 1

	)

761 
	#HR_FLAG_PROXY
 2

	)

763 
	#HTST_UNKNOWN
 255

	)

764 
	#HTST_MISSING
 254

	)

765 
	#HTST_NORMAL
 0

	)

766 
	#HTST_CONNECT
 1

	)

768 
	#TMPF_DFL
 0

	)

769 
	#TMPF_SRC
 1

	)

770 
	#TMPF_FRAME
 2

	)

771 
	#TMPF_CACHE
 3

	)

772 
	#TMPF_COOKIE
 4

	)

773 
	#MAX_TMPF_TYPE
 5

	)

775 
	#£t_no_¥oxy
(
domaös
Ë(
NO_¥oxy_domaös
=
	`make_domaö_li°
(domaös))

	)

781 
LINES
, 
COLS
;

782 #i‡
deföed
(
__CYGWIN__
)

783 
LASTLINE
;

785 
	#LASTLINE
 (
LINES
-1)

	)

788 
globÆ
 
Tab°›
 
öô
(8);

789 
globÆ
 
IndítIn¸
 
öô
(4);

790 
globÆ
 
ShowEf„˘
 
öô
(
TRUE
);

791 
globÆ
 
PagîMax
 
öô
(
PAGER_MAX_LINE
);

793 
globÆ
 
SórchHódî
 
öô
(
FALSE
);

794 
globÆ
 *
DeÁu…Ty≥
 
öô
(
NULL
);

795 
globÆ
 
RídîFøme
 
öô
(
FALSE
);

796 
globÆ
 
T¨gëSñf
 
öô
(
FALSE
);

797 
globÆ
 
PîmôSaveToPùe
 
öô
(
FALSE
);

798 
globÆ
 
DecodeCTE
 
öô
(
FALSE
);

799 
globÆ
 
AutoUncom¥ess
 
öô
(
FALSE
);

800 
globÆ
 
Pª£rveTime°amp
 
öô
(
TRUE
);

801 
globÆ
 
ArgvIsURL
 
öô
(
FALSE
);

802 
globÆ
 
MëaRe‰esh
 
öô
(
FALSE
);

804 
globÆ
 
fmInôülized
 
öô
(
FALSE
);

805 
globÆ
 
QuõtMesßge
 
öô
(
FALSE
);

806 
globÆ
 
TøpSig«l
 
öô
(
TRUE
);

807 
	#TRAP_ON
 i‡(
TøpSig«l
) { \

808 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
KeyAb‹t
); \

809 i‡(
fmInôülized
) \

810 
	`ãrm_cbªak
(); \

811 }

	)

812 
	#TRAP_OFF
 i‡(
TøpSig«l
) { \

813 i‡(
fmInôülized
) \

814 
	`ãrm_øw
(); \

815 i‡(
¥evå≠
) \

816 
	`mySig«l
(
SIGINT
, 
¥evå≠
); \

817 }

	)

819 
GlobÆKeym≠
[];

820 
EscKeym≠
[];

821 
EscBKeym≠
[];

822 
EscDKeym≠
[];

823 #ifde‡
__EMX__


824 
PcKeym≠
[];

826 
FuncLi°
 
w3mFuncLi°
[];

828 
globÆ
 *
HTTP_¥oxy
 
öô
(
NULL
);

829 #ifde‡
USE_SSL


830 
globÆ
 *
HTTPS_¥oxy
 
öô
(
NULL
);

832 #ifde‡
USE_GOPHER


833 
globÆ
 *
GOPHER_¥oxy
 
öô
(
NULL
);

835 
globÆ
 *
FTP_¥oxy
 
öô
(
NULL
);

836 
globÆ
 
P¨£dURL
 
	gHTTP_¥oxy_∑r£d
;

837 #ifde‡
USE_SSL


838 
globÆ
 
P¨£dURL
 
	gHTTPS_¥oxy_∑r£d
;

840 #ifde‡
USE_GOPHER


841 
globÆ
 
P¨£dURL
 
	gGOPHER_¥oxy_∑r£d
;

843 
globÆ
 
P¨£dURL
 
	gFTP_¥oxy_∑r£d
;

844 
globÆ
 *
NO_¥oxy
 
öô
(
NULL
);

845 
globÆ
 
NO¥oxy_√èddr
 
öô
(
TRUE
);

846 #ifde‡
INET6


847 
	#DNS_ORDER_UNSPEC
 0

	)

848 
	#DNS_ORDER_INET_INET6
 1

	)

849 
	#DNS_ORDER_INET6_INET
 2

	)

850 
	#DNS_ORDER_INET_ONLY
 4

	)

851 
	#DNS_ORDER_INET6_ONLY
 6

	)

852 
globÆ
 
DNS_‹dî
 
öô
(
DNS_ORDER_UNSPEC
);

853 
ai_Ámûy_‹dî_èbÀ
[7][3];

855 
globÆ
 
TextLi°
 *
	gNO_¥oxy_domaös
;

856 
globÆ
 
NoCache
 
öô
(
FALSE
);

857 
globÆ
 
u£_¥oxy
 
öô
(
TRUE
);

858 
	#Do_nŸ_u£_¥oxy
 (!
u£_¥oxy
)

	)

859 
globÆ
 
Do_nŸ_u£_ti_ã
 
öô
(
FALSE
);

860 #ifde‡
USE_NNTP


861 
globÆ
 *
NNTP_£rvî
 
öô
(
NULL
);

862 
globÆ
 *
NNTP_mode
 
öô
(
NULL
);

863 
globÆ
 
MaxNewsMesßge
 
öô
(50);

866 
globÆ
 *
documít_roŸ
 
öô
(
NULL
);

867 
globÆ
 *
≥rs⁄Æ_documít_roŸ
 
öô
(
NULL
);

868 
globÆ
 *
cgi_bö
 
öô
(
NULL
);

869 
globÆ
 *
ödex_fûe
 
öô
(
NULL
);

871 
globÆ
 *
	gCuºítDú
;

872 
globÆ
 
	gCuºítPid
;

877 
globÆ
 
TabBuf„r
 *
	gCuºítTab
;

878 
globÆ
 
TabBuf„r
 *
	gFú°Tab
;

879 
globÆ
 
TabBuf„r
 *
	gLa°Tab
;

880 
globÆ
 
›í_èb_bœnk
 
öô
(
FALSE
);

881 
globÆ
 
›í_èb_dl_li°
 
öô
(
FALSE
);

882 
globÆ
 
˛o£_èb_back
 
öô
(
FALSE
);

883 
globÆ
 
	gnTab
;

884 
globÆ
 
TabCﬁs
 
öô
(10);

885 
	#NO_TABBUFFER
 ((
TabBuf„r
 *)1)

	)

886 
	#Cuºítbuf
 (
CuºítTab
->
cuºítBuf„r
)

	)

887 
	#Fú°buf
 (
CuºítTab
->
fú°Buf„r
)

	)

888 
globÆ
 
Dow∆ﬂdLi°
 *
Fú°DL
 
öô
(
NULL
);

889 
globÆ
 
Dow∆ﬂdLi°
 *
La°DL
 
öô
(
NULL
);

890 
globÆ
 
	gCuºítKey
;

891 
globÆ
 *
	gCuºítKeyD©a
;

892 
globÆ
 *
	gCuºítCmdD©a
;

893 
globÆ
 *
	gw3m_ªqlog
;

894 *
w3m_vîsi⁄
;

896 
	#DUMP_BUFFER
 0x01

	)

897 
	#DUMP_HEAD
 0x02

	)

898 
	#DUMP_SOURCE
 0x04

	)

899 
	#DUMP_EXTRA
 0x08

	)

900 
	#DUMP_HALFDUMP
 0x10

	)

901 
	#DUMP_FRAME
 0x20

	)

902 
globÆ
 
	gw3m_debug
;

903 
globÆ
 
w3m_dump
 
öô
(0);

904 
	#w3m_hÆfdump
 (
w3m_dump
 & 
DUMP_HALFDUMP
)

	)

905 
globÆ
 
w3m_hÆÊﬂd
 
öô
(
FALSE
);

906 
globÆ
 
Så
 
hódî_°rög
 
öô
(
NULL
);

907 
globÆ
 
ovîride_c⁄ã¡_ty≥
 
öô
(
FALSE
);

909 #ifde‡
USE_COLOR


910 
globÆ
 
u£Cﬁ‹
 
öô
(
TRUE
);

911 
globÆ
 
basic_cﬁ‹
 
öô
(8);

912 
globÆ
 
™ch‹_cﬁ‹
 
öô
(4);

913 
globÆ
 
image_cﬁ‹
 
öô
(2);

914 
globÆ
 
f‹m_cﬁ‹
 
öô
(1);

915 #ifde‡
USE_BG_COLOR


916 
globÆ
 
bg_cﬁ‹
 
öô
(8);

917 
globÆ
 
m¨k_cﬁ‹
 
öô
(6);

919 
globÆ
 
u£A˘iveCﬁ‹
 
öô
(
FALSE
);

920 
globÆ
 
a˘ive_cﬁ‹
 
öô
(6);

921 
globÆ
 
u£VisôedCﬁ‹
 
öô
(
FALSE
);

922 
globÆ
 
visôed_cﬁ‹
 
öô
(5);

924 
globÆ
 
c⁄fúm_⁄_quô
 
öô
(
TRUE
);

925 #ifde‡
USE_MARK


926 
globÆ
 
u£_m¨k
 
öô
(
FALSE
);

928 
globÆ
 
emacs_like_löìdô
 
öô
(
FALSE
);

929 
globÆ
 
vi_¥ec_num
 
öô
(
FALSE
);

930 
globÆ
 
œbñ_t›löe
 
öô
(
FALSE
);

931 
globÆ
 
√xçage_t›löe
 
öô
(
FALSE
);

932 
globÆ
 *
di•œyTôÀTîm
 
öô
(
NULL
);

933 
globÆ
 
di•œyLök
 
öô
(
FALSE
);

934 
globÆ
 
di•œyLöeInfo
 
öô
(
FALSE
);

935 
globÆ
 
DecodeURL
 
öô
(
FALSE
);

936 
globÆ
 
ªåyAsHâp
 
öô
(
TRUE
);

937 
globÆ
 
showLöeNum
 
öô
(
FALSE
);

938 
globÆ
 
show_§ch_°r
 
öô
(
TRUE
);

939 #ifde‡
USE_IMAGE


940 
globÆ
 *
Imgdi•œy
 
öô
(
IMGDISPLAY
);

941 
globÆ
 
a˘iveImage
 
öô
(
FALSE
);

942 
globÆ
 
di•œyImage
 
öô
(
TRUE
);

943 
globÆ
 
autoImage
 
öô
(
TRUE
);

944 
globÆ
 
u£ExtImageVõwî
 
öô
(
TRUE
);

945 
globÆ
 
maxLﬂdImage
 
öô
(4);

946 
globÆ
 
image_m≠_li°
 
öô
(
TRUE
);

948 
globÆ
 
di•œyImage
 
öô
(
FALSE
);

950 
globÆ
 *
Edô‹
 
öô
(
DEF_EDITOR
);

951 #ifde‡
USE_W3MMAILER


952 
globÆ
 *
Maûî
 
öô
(
NULL
);

954 
globÆ
 *
Maûî
 
öô
(
DEF_MAILER
);

956 
globÆ
 *
ExtBrow£r
 
öô
(
DEF_EXT_BROWSER
);

957 
globÆ
 *
ExtBrow£r2
 
öô
(
NULL
);

958 
globÆ
 *
ExtBrow£r3
 
öô
(
NULL
);

959 
globÆ
 
BackgroundExtVõwî
 
öô
(
TRUE
);

960 
globÆ
 
dißbÀ_£¸ë_£curôy_check
 
öô
(
FALSE
);

961 
globÆ
 *
∑sswd_fûe
 
öô
(
PASSWD_FILE
);

962 
globÆ
 *
¥e_f‹m_fûe
 
öô
(
PRE_FORM_FILE
);

963 
globÆ
 *
·µasswd
 
öô
(
NULL
);

964 
globÆ
 
·µass_ho°«megí
 
öô
(
TRUE
);

965 
globÆ
 
do_dow∆ﬂd
 
öô
(
FALSE
);

966 #ifde‡
USE_IMAGE


967 
globÆ
 *
image_sour˚
 
öô
(
NULL
);

969 
globÆ
 *
U£rAgít
 
öô
(
NULL
);

970 
globÆ
 
NoSídRe„ªr
 
öô
(
FALSE
);

971 
globÆ
 *
Ac˚±L™g
 
öô
(
NULL
);

972 
globÆ
 *
Ac˚±Encodög
 
öô
(
NULL
);

973 
globÆ
 *
Ac˚±Medü
 
öô
(
NULL
);

974 
globÆ
 
WøpDeÁu…
 
öô
(
FALSE
);

975 
globÆ
 
Ign‹eCa£
 
öô
(
TRUE
);

976 
globÆ
 
WøpSórch
 
öô
(
FALSE
);

977 
globÆ
 
squìzeBœnkLöe
 
öô
(
FALSE
);

978 
globÆ
 *
Bookm¨kFûe
 
öô
(
NULL
);

979 
globÆ
 *
∑uth
 
öô
(
NULL
);

980 
globÆ
 
Så
 
¥oxy_auth_cookõ
 
öô
(
NULL
);

981 
globÆ
 
U£Exã∫ÆDúBuf„r
 
öô
(
TRUE
);

982 
globÆ
 *
DúBuf„rComm™d
 
öô
("fûe:///$LIB/dúli°" 
CGI_EXTENSION
);

983 #ifde‡
USE_DICT


984 
globÆ
 
U£Di˘Comm™d
 
öô
(
FALSE
);

985 
globÆ
 *
Di˘Comm™d
 
öô
("fûe:///$LIB/w3mdi˘" 
CGI_EXTENSION
);

987 
globÆ
 
ign‹e_nuŒ_img_Æt
 
öô
(
TRUE
);

988 
	#DISPLAY_INS_DEL_SIMPLE
 0

	)

989 
	#DISPLAY_INS_DEL_NORMAL
 1

	)

990 
	#DISPLAY_INS_DEL_FONTIFY
 2

	)

991 
globÆ
 
di•œyInsDñ
 
öô
(
DISPLAY_INS_DEL_NORMAL
);

992 
globÆ
 
FﬁdTexèªa
 
öô
(
FALSE
);

993 
globÆ
 
FﬁdLöe
 
öô
(
FALSE
);

994 
	#DEFAULT_URL_EMPTY
 0

	)

995 
	#DEFAULT_URL_CURRENT
 1

	)

996 
	#DEFAULT_URL_LINK
 2

	)

997 
globÆ
 
DeÁu…URLSåög
 
öô
(
DEFAULT_URL_EMPTY
);

998 
globÆ
 
M¨kAŒPages
 
öô
(
FALSE
);

1000 #ifde‡
USE_MIGEMO


1001 
globÆ
 
u£_migemo
 
öô
(
FALSE
);

1002 
globÆ
 
migemo_a˘ive
 
öô
(0);

1003 
globÆ
 *
migemo_comm™d
 
öô
(
DEF_MIGEMO_COMMAND
);

1006 
globÆ
 
auth_cookõ
 *
Auth_cookõ
 
öô
(
NULL
);

1007 #ifde‡
USE_COOKIE


1008 
globÆ
 
cookõ
 *
Fú°_cookõ
 
öô
(
NULL
);

1011 
globÆ
 *
maûˇp_fûes
 
öô
(
USER_MAILCAP
 ", " 
SYS_MAILCAP
);

1012 
globÆ
 *
mimëy≥s_fûes
 
öô
(
USER_MIMETYPES
 ", " 
SYS_MIMETYPES
);

1013 #ifde‡
USE_EXTERNAL_URI_LOADER


1014 
globÆ
 *
urimëhodm≠_fûes
 
öô
(
USER_URIMETHODMAP
 ", " 
SYS_URIMETHODMAP
);

1017 
globÆ
 
TextLi°
 *
	gfûeToDñëe
;

1019 
Hi°
 *
LﬂdHi°
;

1020 
Hi°
 *
SaveHi°
;

1021 
Hi°
 *
URLHi°
;

1022 
Hi°
 *
ShñlHi°
;

1023 
Hi°
 *
TextHi°
;

1024 #ifde‡
USE_HISTORY


1025 
globÆ
 
U£Hi°‹y
 
öô
(
TRUE
);

1026 
globÆ
 
URLHi°Size
 
öô
(100);

1027 
globÆ
 
SaveURLHi°
 
öô
(
TRUE
);

1029 
globÆ
 
mu…icﬁLi°
 
öô
(
FALSE
);

1031 #ifde‡
USE_M17N


1032 
globÆ
 
wc_˚s
 
I¬îCh¨£t
 
öô
(
WC_CES_WTF
);

1033 
globÆ
 
wc_˚s
 
Di•œyCh¨£t
 
öô
(
DISPLAY_CHARSET
);

1034 
globÆ
 
wc_˚s
 
DocumítCh¨£t
 
öô
(
DOCUMENT_CHARSET
);

1035 
globÆ
 
wc_˚s
 
Sy°emCh¨£t
 
öô
(
SYSTEM_CHARSET
);

1036 
globÆ
 
wc_˚s
 
Bookm¨kCh¨£t
 
öô
(
SYSTEM_CHARSET
);

1037 
globÆ
 
ExtHÆfdump
 
öô
(
FALSE
);

1038 
globÆ
 
FﬁlowLoˇÀ
 
öô
(
TRUE
);

1039 
globÆ
 
U£C⁄ã¡Ch¨£t
 
öô
(
TRUE
);

1040 
globÆ
 
SórchC⁄v
 
öô
(
TRUE
);

1041 
	#Så_c⁄v_‰om_sy°em
(
x
Ë
	`wc_Så_c⁄v
((x), 
Sy°emCh¨£t
, 
I¬îCh¨£t
)

	)

1042 
	#Så_c⁄v_to_sy°em
(
x
Ë
	`wc_Så_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, 
Sy°emCh¨£t
)

	)

1043 
	#Så_c⁄v_to_hÆfdump
(
x
Ë(
ExtHÆfdump
 ? 
	`wc_Så_c⁄v
((x), 
I¬îCh¨£t
, 
Di•œyCh¨£t
Ë: (x))

	)

1044 
	#c⁄v_‰om_sy°em
(
x
Ë
	`wc_c⁄v
((x), 
Sy°emCh¨£t
, 
I¬îCh¨£t
)->
±r


	)

1045 
	#c⁄v_to_sy°em
(
x
Ë
	`wc_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, 
Sy°emCh¨£t
)->
±r


	)

1046 
	#uæ_quŸe_c⁄v
(
x
,
c
Ë
	`uæ_quŸe
(
	`wc_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, (c))->
±r
)

	)

1048 
	#Så_c⁄v_‰om_sy°em
(
x
Ë(x)

	)

1049 
	#Så_c⁄v_to_sy°em
(
x
Ë(x)

	)

1050 
	#Så_c⁄v_to_hÆfdump
(
x
Ë(x)

	)

1051 
	#c⁄v_‰om_sy°em
(
x
Ë(x)

	)

1052 
	#c⁄v_to_sy°em
(
x
Ë(x)

	)

1053 
	#uæ_quŸe_c⁄v
(
x
,
c
Ë
	`uæ_quŸe
(x)

	)

1054 
	#wc_Så_c⁄v
(
x
,
ch¨£t0
,
ch¨£t1
Ë(x)

	)

1055 
	#wc_Så_c⁄v_°ri˘
(
x
,
ch¨£t0
,
ch¨£t1
Ë(x)

	)

1057 
globÆ
 
U£A…E¡ôy
 
öô
(
TRUE
);

1058 
globÆ
 
U£GøphicCh¨
 
öô
(
FALSE
);

1059 *
gøph_symbﬁ
[];

1060 *
gøph2_symbﬁ
[];

1061 
symbﬁ_width
;

1062 
symbﬁ_width0
;

1063 
	#N_GRAPH_SYMBOL
 32

	)

1064 
	#SYMBOL_BASE
 0x20

	)

1065 
globÆ
 
no_rc_dú
 
öô
(
FALSE
);

1066 
globÆ
 *
rc_dú
 
öô
(
NULL
);

1067 
globÆ
 *
	gtmp_dú
;

1068 
globÆ
 *
c⁄fig_fûe
 
öô
(
NULL
);

1070 #ifde‡
USE_MOUSE


1071 
globÆ
 
u£_mou£
 
öô
(
TRUE
);

1072 
mou£A˘ive
;

1073 
globÆ
 
ªvî£_mou£
 
öô
(
FALSE
);

1074 
globÆ
 
ªœtive_whìl_s¸ﬁl
 
öô
(
FALSE
);

1075 
globÆ
 
fixed_whìl_s¸ﬁl_cou¡
 
öô
(5);

1076 
globÆ
 
ªœtive_whìl_s¸ﬁl_øtio
 
öô
(30);

1077 
	s_Mou£A˘i⁄M≠
 {

1078 (*
	mfunc
) ();

1079 *
	md©a
;

1080 } 
	tMou£A˘i⁄M≠
;

1081 
	s_Mou£A˘i⁄
 {

1082 *
	mmíu_°r
;

1083 *
	mœ°löe_°r
;

1084 
	mmíu_width
;

1085 
	mœ°löe_width
;

1086 
	mö_a˘i⁄
;

1087 
	mcurs‹X
;

1088 
	mcurs‹Y
;

1089 
Mou£A˘i⁄M≠
 
	mdeÁu…_m≠
[3];

1090 
Mou£A˘i⁄M≠
 
	m™ch‹_m≠
[3];

1091 
Mou£A˘i⁄M≠
 
	ma˘ive_m≠
[3];

1092 
Mou£A˘i⁄M≠
 
	mèb_m≠
[3];

1093 
Mou£A˘i⁄M≠
 *
	mmíu_m≠
[3];

1094 
Mou£A˘i⁄M≠
 *
	mœ°löe_m≠
[3];

1095 } 
	tMou£A˘i⁄
;

1096 
globÆ
 
Mou£A˘i⁄
 
	gmou£_a˘i⁄
;

1097 
	#LIMIT_MOUSE_MENU
 100

	)

1100 #ifde‡
USE_COOKIE


1101 
globÆ
 
deÁu…_u£_cookõ
 
öô
(
TRUE
);

1102 
globÆ
 
u£_cookõ
 
öô
(
FALSE
);

1103 
globÆ
 
show_cookõ
 
öô
(
TRUE
);

1104 
globÆ
 
ac˚±_cookõ
 
öô
(
FALSE
);

1105 
	#ACCEPT_BAD_COOKIE_DISCARD
 0

	)

1106 
	#ACCEPT_BAD_COOKIE_ACCEPT
 1

	)

1107 
	#ACCEPT_BAD_COOKIE_ASK
 2

	)

1108 
globÆ
 
ac˚±_bad_cookõ
 
öô
(
ACCEPT_BAD_COOKIE_DISCARD
);

1109 
globÆ
 *
cookõ_ªje˘_domaös
 
öô
(
NULL
);

1110 
globÆ
 *
cookõ_ac˚±_domaös
 
öô
(
NULL
);

1111 
globÆ
 
TextLi°
 *
	gCookõ_ªje˘_domaös
;

1112 
globÆ
 
TextLi°
 *
	gCookõ_ac˚±_domaös
;

1115 #ifde‡
USE_IMAGE


1116 
globÆ
 
võw_un£íobje˘
 
öô
(
FALSE
);

1118 
globÆ
 
võw_un£íobje˘
 
öô
(
TRUE
);

1121 #i‡
deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

1122 
globÆ
 
s¶_vîify_£rvî
 
öô
(
FALSE
);

1123 
globÆ
 *
s¶_˚π_fûe
 
öô
(
NULL
);

1124 
globÆ
 *
s¶_key_fûe
 
öô
(
NULL
);

1125 
globÆ
 *
s¶_ˇ_∑th
 
öô
(
NULL
);

1126 
globÆ
 *
s¶_ˇ_fûe
 
öô
(
NULL
);

1127 
globÆ
 
s¶_∑th_modifõd
 
öô
(
FALSE
);

1129 * 
deföed
(
USE_SSL_VERIFY
) */

1130 #ifde‡
USE_SSL


1131 
globÆ
 *
s¶_f‹bid_mëhod
 
öô
(
NULL
);

1134 
globÆ
 
is_ªdi•œy
 
öô
(
FALSE
);

1135 
globÆ
 
˛ór_buf„r
 
öô
(
TRUE
);

1136 
globÆ
 
pixñ_≥r_ch¨
 
öô
(
DEFAULT_PIXEL_PER_CHAR
);

1137 
globÆ
 
£t_pixñ_≥r_ch¨
 
öô
(
FALSE
);

1138 #ifde‡
USE_IMAGE


1139 
globÆ
 
pixñ_≥r_löe
 
öô
(
DEFAULT_PIXEL_PER_LINE
);

1140 
globÆ
 
£t_pixñ_≥r_löe
 
öô
(
FALSE
);

1141 
globÆ
 
image_sˇÀ
 
öô
(100);

1143 
globÆ
 
u£_Àss›í
 
öô
(
FALSE
);

1145 
globÆ
 *
keym≠_fûe
 
öô
(
KEYMAP_FILE
);

1147 #ifde‡
USE_M17N


1148 
	#gë_m˘y≥
(
c
Ë((
Löïr›
)
	`wtf_ty≥
((
wc_uch¨
 *)(c)Ë<< 8)

	)

1149 
	#gë_m˛í
(
c
Ë
	`wtf_Àn1
((
wc_uch¨
 *)(c))

	)

1150 
	#gë_mcwidth
(
c
Ë
	`wtf_width
((
wc_uch¨
 *)(c))

	)

1151 
	#gë_°rwidth
(
c
Ë
	`wtf_°rwidth
((
wc_uch¨
 *)(c))

	)

1152 
	#gë_Så_°rwidth
(
c
Ë
	`wtf_°rwidth
((
wc_uch¨
 *)((c)->
±r
))

	)

1154 
	#gë_m˘y≥
(
c
Ë(
	`IS_CNTRL
(*(c)Ë? 
PC_CTRL
 : 
PC_ASCII
)

	)

1155 
	#gë_m˛í
(
c
Ë1

	)

1156 
	#gë_mcwidth
(
c
Ë1

	)

1157 
	#gë_°rwidth
(
c
Ë
	`°æí
(c)

	)

1158 
	#gë_Så_°rwidth
(
c
Ë((c)->
Àngth
)

	)

1161 
globÆ
 
FﬁlowRedúe˘i⁄
 
öô
(10);

1163 
globÆ
 
w3m_backíd
 
öô
(
FALSE
);

1164 
globÆ
 
TextLöeLi°
 *
	gbackíd_hÆfdump_buf
;

1165 
globÆ
 
TextLi°
 *
backíd_b©ch_comm™ds
 
öô
(
NULL
);

1166 
backíd
();

1167 
dñëeFûes
();

1168 
w3m_exô
(
i
);

1170 #ifde‡
USE_ALARM


1171 
	#AL_UNSET
 0

	)

1172 
	#AL_EXPLICIT
 1

	)

1173 
	#AL_IMPLICIT
 2

	)

1174 
	#AL_IMPLICIT_ONCE
 3

	)

1176 
	s_AœrmEvít
 {

1177 
	m£c
;

1178 
	m°©us
;

1179 
	mcmd
;

1180 *
	md©a
;

1181 } 
	tAœrmEvít
;

1188 
	~"èbÀ.h
"

1189 
	~"¥Ÿo.h
"

	@.pc/google.patch/main.c

2 
	#MAINPROGRAM


	)

3 
	~"fm.h
"

4 
	~<sig«l.h
>

5 
	~<£tjmp.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<uni°d.h
>

9 
	~<f˙é.h
>

10 #i‡
deföed
(
HAVE_WAITPID
Ë|| deföed(
HAVE_WAIT3
)

11 
	~<sys/waô.h
>

13 
	~<time.h
>

14 
	~"ãrms.h
"

15 
	~"my˘y≥.h
"

16 
	~"ªgex.h
"

17 #ifde‡
USE_MOUSE


18 #ifde‡
USE_GPM


19 
	~<gpm.h
>

21 #i‡
deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

22 
do_gëch
();

23 
	#gëch
(Ë
	`do_gëch
()

	)

27 #ifde‡
__MINGW32_VERSION


28 
	~<wösock.h
>

30 
WSADATA
 
	gWSAD©a
;

33 
	#DSTR_LEN
 256

	)

35 
Hi°
 *
	gLﬂdHi°
;

36 
Hi°
 *
	gSaveHi°
;

37 
Hi°
 *
	gURLHi°
;

38 
Hi°
 *
	gShñlHi°
;

39 
Hi°
 *
	gTextHi°
;

41 
	s_Evít
 {

42 
	mcmd
;

43 *
	md©a
;

44 
_Evít
 *
	m√xt
;

45 } 
	tEvít
;

46 
Evít
 *
	gCuºítEvít
 = 
NULL
;

47 
Evít
 *
	gLa°Evít
 = 
NULL
;

49 #ifde‡
USE_ALARM


50 
AœrmEvít
 
	gDeÁu…Aœrm
 = {

51 0, 
AL_UNSET
, 
FUNCNAME_nulcmd
, 
NULL


53 
AœrmEvít
 *
	gCuºítAœrm
 = &
DeÁu…Aœrm
;

54 
MySig«lH™dÀr
 
SigAœrm
(
SIGNAL_ARG
);

57 #ifde‡
SIGWINCH


58 
	g√ed_ªsize_s¸ìn
 = 
FALSE
;

59 
MySig«lH™dÀr
 
ªsize_hook
(
SIGNAL_ARG
);

60 
ªsize_s¸ìn
();

63 #ifde‡
SIGPIPE


64 
MySig«lH™dÀr
 
SigPùe
(
SIGNAL_ARG
);

67 #ifde‡
USE_MARK


68 *
	gM¨kSåög
 = 
NULL
;

70 *
	gSórchSåög
 = 
NULL
;

71 (*
£¨chRoutöe
Ë(
Buf„r
 *, *);

73 #i‚de‡
__MINGW32_VERSION


74 
JMP_BUF
 
I¡Rëu∫
;

76 
_JBTYPE
 
I¡Rëu∫
[
_JBLEN
];

79 
	`dñBuf„r
(
Buf„r
 *
buf
);

80 
	`cmd_lﬂdfûe
(*
∑th
);

81 
	`cmd_lﬂdURL
(*
uæ
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
,

82 
F‹mLi°
 *
ªque°
);

83 
	`cmd_lﬂdBuf„r
(
Buf„r
 *
buf
, 
¥›
, 
lökid
);

84 
	`keyPªssEvítProc
(
c
);

85 
show_∑øms_p
 = 0;

86 
	`show_∑øms
(
FILE
 * 
Â
);

88 *
	`gëCurW‹d
(
Buf„r
 *
buf
, *
•os
, *
ïos
,

89 c⁄° *
badch¨s
);

91 
di•œy_ok
 = 
FALSE
;

92 
	`do_dump
(
Buf„r
 *);

93 
¥ec_num
 = 0;

94 
¥ev_key
 = -1;

95 
⁄_èrgë
 = 1;

96 
add_dow∆ﬂd_li°
 = 
FALSE
;

98 
	`£t_buf„r_ívú⁄
(
Buf„r
 *);

99 
	`ßve_buf„r_posôi⁄
(
Buf„r
 *
buf
);

101 
	`_fﬁlowF‹m
();

102 
	`_goLöe
(*);

103 
	`_√wT
();

104 
	`fﬁlowTab
(
TabBuf„r
 * 
èb
);

105 
	`moveTab
(
TabBuf„r
 * 
t
, TabBuf„∏* 
t2
, 
right
);

106 
	`_√xtA
();

107 
	`_¥evA
();

108 
check_èrgë
 = 
TRUE
;

109 
	#PREC_NUM
 (
¥ec_num
 ?Öªc_num : 1)

	)

110 
	#PREC_LIMIT
 10000

	)

111 
	`£¨chKeyNum
();

113 
	#hñp
(Ë
	`fußge
(
°dout
, 0)

	)

114 
	#ußge
(Ë
	`fußge
(
°dîr
, 1)

	)

117 
	$fvîsi⁄
(
FILE
 * 
f
)

119 
	`Ârötf
(
f
, "w3m vîsi⁄ %s, o±i⁄†%s\n", 
w3m_vîsi⁄
,

120 #i‡
LANG
 =
JA


125 #ifde‡
USE_M17N


128 #ifde‡
USE_IMAGE


131 #ifde‡
USE_COLOR


133 #ifde‡
USE_ANSI_COLOR


137 #ifde‡
USE_MOUSE


139 #ifde‡
USE_GPM


142 #ifde‡
USE_SYSMOUSE


146 #ifde‡
USE_MENU


149 #ifde‡
USE_COOKIE


152 #ifde‡
USE_SSL


154 #ifde‡
USE_SSL_VERIFY


158 #ifde‡
USE_EXTERNAL_URI_LOADER


161 #ifde‡
USE_W3MMAILER


164 #ifde‡
USE_NNTP


167 #ifde‡
USE_GOPHER


170 #ifde‡
INET6


173 #ifde‡
USE_ALARM


176 #ifde‡
USE_MARK


179 #ifde‡
USE_MIGEMO


183 
	}
}

186 
	$fußge
(
FILE
 * 
f
, 
îr
)

188 
	`fvîsi⁄
(
f
);

190 
	`Ârötf
(
f
, "usage: w3m [options] [URL or filename]\noptions:\n");

191 
	`Ârötf
(
f
, " -tÅab setÅab width\n");

192 
	`Ârötf
(
f
, " -r ignore backspaceÉffect\n");

193 
	`Ârötf
(
f
, " -lÜine # ofÖreservedÜine (default 10000)\n");

194 #ifde‡
USE_M17N


195 
	`Ârötf
(
f
, " -I charset document charset\n");

196 
	`Ârötf
(
f
, " -O charset display/output charset\n");

197 #i‚de‡
DEBIAN


198 
	`Ârötf
(
f
, " -e EUC-JP\n");

199 
	`Ârötf
(
f
, " -s Shift_JIS\n");

200 
	`Ârötf
(
f
, " -j JIS\n");

203 
	`Ârötf
(
f
, " -BÜoad bookmark\n");

204 
	`Ârötf
(
f
, " -bookmark file specify bookmark file\n");

205 
	`Ârötf
(
f
, " -TÅype specify content-type\n");

206 
	`Ârötf
(
f
, " -m internet message mode\n");

207 
	`Ârötf
(
f
, " -v visual startup mode\n");

208 #ifde‡
USE_COLOR


209 
	`Ârötf
(
f
, " -M monochrome display\n");

211 
	`Ârötf
(
f
,

213 
	`Ârötf
(
f
, " -FáutomaticallyÑender frame\n");

214 
	`Ârötf
(
f
,

216 
	`Ârötf
(
f
,

218 #ifde‡
USE_IMAGE


219 
	`Ârötf
(
f
,

222 
	`Ârötf
(
f
, " -dump dump formattedÖage into stdout\n");

223 
	`Ârötf
(
f
,

225 
	`Ârötf
(
f
, " -dump_source dumpÖage source into stdout\n");

226 
	`Ârötf
(
f
, " -dump_both dump HEADánd source into stdout\n");

227 
	`Ârötf
(
f
,

229 
	`Ârötf
(
f
, " -post file use POST method with file content\n");

230 
	`Ârötf
(
f
, " -header string insert stringásá header\n");

231 
	`Ârötf
(
f
, " +<num> goto <num>Üine\n");

232 
	`Ârötf
(
f
, " -num showÜineÇumber\n");

233 
	`Ârötf
(
f
, " -no-proxy don't useÖroxy\n");

234 #ifde‡
INET6


235 
	`Ârötf
(
f
, " -4 IPv4 only (-o dns_order=4)\n");

236 
	`Ârötf
(
f
, " -6 IPv6 only (-o dns_order=6)\n");

238 #ifde‡
USE_MOUSE


239 
	`Ârötf
(
f
, " -no-mouse don't use mouse\n");

241 #ifde‡
USE_COOKIE


242 
	`Ârötf
(
f
,

245 
	`Ârötf
(
f
, " -pauth user:passÖroxyáuthentication\n");

246 
	`Ârötf
(
f
, " -graph use graphic character\n");

247 
	`Ârötf
(
f
, " -no-graph don't use graphic character\n");

248 #ifde‡
DEBIAN


249 
	`Ârötf
(
f
, " -s squeeze multiple blankÜines\n");

251 
	`Ârötf
(
f
, " -S squeeze multiple blankÜines\n");

253 
	`Ârötf
(
f
, " -WÅoggle wrap search mode\n");

254 
	`Ârötf
(
f
, " -X don't useÅermcap init/deinit\n");

255 
	`Ârötf
(
f
,

257 
	`Ârötf
(
f
, " -o opt=valueássign valueÅo config option\n");

258 
	`Ârötf
(
f
, " -show-optionÖrintáll config options\n");

259 
	`Ârötf
(
f
, " -config file specify config file\n");

260 
	`Ârötf
(
f
, " -helpÖrintÅhis usage message\n");

261 
	`Ârötf
(
f
, " -versionÖrint w3m version\n");

262 
	`Ârötf
(
f
, " -reqlog writeÑequestÜogfile\n");

263 
	`Ârötf
(
f
, " -debug DO NOT USE\n");

264 i‡(
show_∑øms_p
)

265 
	`show_∑øms
(
f
);

266 
	`exô
(
îr
);

267 
	}
}

269 #ifde‡
USE_M17N


270 #ifde‡
__EMX__


271 *
gëCodePage
();

275 
GC_w¨n_¥oc
 
	g‹ig_GC_w¨n_¥oc
 = 
NULL
;

276 
	#GC_WARN_KEEP_MAX
 (20)

	)

279 
	$wøp_GC_w¨n_¥oc
(*
msg
, 
GC_w‹d
 
¨g
)

281 i‡(
fmInôülized
) {

284 *
msg
;

285 
GC_w‹d
 
¨g
;

286 } 
msg_rög
[
GC_WARN_KEEP_MAX
];

288 
i
 = 0;

289 
n
 = 0;

290 
lock
 = 0;

291 
j
;

293 
j
 = (
i
 + 
n
Ë% ((
msg_rög
) / (msg_ring[0]));

294 
msg_rög
[
j
].
msg
 = msg;

295 
msg_rög
[
j
].
¨g
 =árg;

297 i‡(
n
 < (
msg_rög
) / (msg_ring[0]))

298 ++
n
;

300 ++
i
;

302 i‡(!
lock
) {

303 
lock
 = 1;

305 ; 
n
 > 0; --n, ++
i
) {

306 
i
 %(
msg_rög
) / (msg_ring[0]);

308 
	`¥ötf
(
msg_rög
[
i
].
msg
, ()msg_rög[i].
¨g
);

309 
	`¶ìp_tûl_™ykey
(1, 1);

312 
lock
 = 0;

315 i‡(
‹ig_GC_w¨n_¥oc
)

316 
	`‹ig_GC_w¨n_¥oc
(
msg
, 
¨g
);

318 
	`Ârötf
(
°dîr
, 
msg
, ()
¨g
);

319 
	}
}

321 #ifde‡
SIGCHLD


323 
	$sig_chld
(
signo
)

325 
p_°©
;

326 #ifde‡
HAVE_WAITPID


327 
pid_t
 
pid
;

329 (
pid
 = 
	`waôpid
(-1, &
p_°©
, 
WNOHANG
)) > 0) {

332 #ñi‡
HAVE_WAIT3


333 
pid
;

335 (
pid
 = 
	`waô3
(&
p_°©
, 
WNOHANG
, 
NULL
)) > 0) {

339 
	`waô
(&
p_°©
);

341 
	`mySig«l
(
SIGCHLD
, 
sig_chld
);

343 
	}
}

346 
Så


347 
	$make_›ti⁄Æ_hódî_°rög
(*
s
)

349 *
p
;

350 
Så
 
hs
;

352 i‡(
	`°rchr
(
s
, '\n') || strchr(s, '\r'))

353  
NULL
;

354 
p
 = 
s
; *p && *p != ':';Ö++) ;

355 i‡(*
p
 !':' ||Ö =
s
)

356  
NULL
;

357 
hs
 = 
	`Så√w_size
(
	`°æí
(
s
) + 3);

358 
	`Såc›y_ch¨p_n
(
hs
, 
s
, 
p
 - s);

359 i‡(!
	`Såˇ£cmp_ch¨p
(
hs
, "content-type"))

360 
ovîride_c⁄ã¡_ty≥
 = 
TRUE
;

361 
	`Såˇt_ch¨p
(
hs
, ": ");

362 i‡(*(++
p
)) {

363 
	`SKIP_BLANKS
(
p
);

364 
	`Såˇt_ch¨p
(
hs
, 
p
);

366 
	`Såˇt_ch¨p
(
hs
, "\r\n");

367  
hs
;

368 
	}
}

371 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

373 
Buf„r
 *
√wbuf
 = 
NULL
;

374 *
p
, 
c
;

375 
i
;

376 
I≈utSåóm
 
ªdö
;

377 *
löe_°r
 = 
NULL
;

378 **
lﬂd_¨gv
;

379 
F‹mLi°
 *
ªque°
;

380 
lﬂd_¨gc
 = 0;

381 
lﬂd_bookm¨k
 = 
FALSE
;

382 
visuÆ_°¨t
 = 
FALSE
;

383 
›í_√w_èb
 = 
FALSE
;

384 
£¨ch_hódî
 = 
FALSE
;

385 *
deÁu…_ty≥
 = 
NULL
;

386 *
po°_fûe
 = 
NULL
;

387 
Så
 
îr_msg
;

388 #ifde‡
USE_M17N


389 *
LoˇÀ
 = 
NULL
;

390 
wc_uöt8
 
auto_dëe˘
;

391 #ifde‡
__EMX__


392 
wc_˚s
 
CodePage
;

395 
	`GC_INIT
();

396 #i‡
	`deföed
(
ENABLE_NLS
Ë|| (deföed(
USE_M17N
Ë&& deföed(
HAVE_LANGINFO_CODESET
))

397 
	`£éoˇÀ
(
LC_ALL
, "");

399 #ifde‡
ENABLE_NLS


400 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

401 
	`ãxtdomaö
(
PACKAGE
);

404 #i‚de‡
HAVE_SYS_ERRLIST


405 
	`¥ï¨e_sys_îæi°
();

408 
NO_¥oxy_domaös
 = 
	`√wTextLi°
();

409 
fûeToDñëe
 = 
	`√wTextLi°
();

411 
lﬂd_¨gv
 = 
	`New_N
(*, 
¨gc
 - 1);

412 
lﬂd_¨gc
 = 0;

414 
CuºítDú
 = 
	`cuºítdú
();

415 
CuºítPid
 = ()
	`gëpid
();

416 
Bookm¨kFûe
 = 
NULL
;

417 
c⁄fig_fûe
 = 
NULL
;

420 
i
 = 1; i < 
¨gc
; i++) {

421 i‡(*
¨gv
[
i
] == '-') {

422 i‡(!
	`°rcmp
("-c⁄fig", 
¨gv
[
i
])) {

423 
¨gv
[
i
] = "-dummy";

424 i‡(++
i
 >
¨gc
)

425 
	`ußge
();

426 
c⁄fig_fûe
 = 
¨gv
[
i
];

427 
¨gv
[
i
] = "-dummy";

429 i‡(!
	`°rcmp
("-h", 
¨gv
[
i
]) || !strcmp("-help",árgv[i]))

430 
	`hñp
();

431 i‡(!
	`°rcmp
("-V", 
¨gv
[
i
]) || !strcmp("-version",árgv[i])) {

432 
	`fvîsi⁄
(
°dout
);

433 
	`exô
(0);

438 #ifde‡
USE_M17N


439 i‡(
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LC_ALL")) ||

440 
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LC_CTYPE")) ||

441 
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LANG"))) {

442 
Di•œyCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DisplayCharset);

443 
DocumítCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DocumentCharset);

444 
Sy°emCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, SystemCharset);

446 #ifde‡
__EMX__


447 
CodePage
 = 
	`wc_guess_ch¨£t
(
	`gëCodePage
(), 0);

448 i‡(
CodePage
)

449 
Di•œyCh¨£t
 = 
DocumítCh¨£t
 = 
Sy°emCh¨£t
 = 
CodePage
;

454 
	`öô_rc
();

456 
LﬂdHi°
 = 
	`√wHi°
();

457 
SaveHi°
 = 
	`√wHi°
();

458 
ShñlHi°
 = 
	`√wHi°
();

459 
TextHi°
 = 
	`√wHi°
();

460 
URLHi°
 = 
	`√wHi°
();

462 #ifde‡
USE_M17N


463 i‡(
FﬁlowLoˇÀ
 && 
LoˇÀ
) {

464 
Di•œyCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DisplayCharset);

465 
Sy°emCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, SystemCharset);

467 
auto_dëe˘
 = 
WcO±i⁄
.auto_detect;

468 
Bookm¨kCh¨£t
 = 
DocumítCh¨£t
;

471 i‡(!
	`n⁄_nuŒ
(
HTTP_¥oxy
) &&

472 ((
p
 = 
	`gëív
("HTTP_PROXY")) ||

473 (
p
 = 
	`gëív
("http_proxy")) || (p = getenv("HTTP_proxy"))))

474 
HTTP_¥oxy
 = 
p
;

475 #ifde‡
USE_SSL


476 i‡(!
	`n⁄_nuŒ
(
HTTPS_¥oxy
) &&

477 ((
p
 = 
	`gëív
("HTTPS_PROXY")) ||

478 (
p
 = 
	`gëív
("https_proxy")) || (p = getenv("HTTPS_proxy"))))

479 
HTTPS_¥oxy
 = 
p
;

480 i‡(
HTTPS_¥oxy
 =
NULL
 && 
	`n⁄_nuŒ
(
HTTP_¥oxy
))

481 
HTTPS_¥oxy
 = 
HTTP_¥oxy
;

483 #ifde‡
USE_GOPHER


484 i‡(!
	`n⁄_nuŒ
(
GOPHER_¥oxy
) &&

485 ((
p
 = 
	`gëív
("GOPHER_PROXY")) ||

486 (
p
 = 
	`gëív
("gopher_proxy")) || (p = getenv("GOPHER_proxy"))))

487 
GOPHER_¥oxy
 = 
p
;

489 i‡(!
	`n⁄_nuŒ
(
FTP_¥oxy
) &&

490 ((
p
 = 
	`gëív
("FTP_PROXY")) ||

491 (
p
 = 
	`gëív
("ftp_proxy")) || (p = getenv("FTP_proxy"))))

492 
FTP_¥oxy
 = 
p
;

493 i‡(!
	`n⁄_nuŒ
(
NO_¥oxy
) &&

494 ((
p
 = 
	`gëív
("NO_PROXY")) ||

495 (
p
 = 
	`gëív
("no_proxy")) || (p = getenv("NO_proxy"))))

496 
NO_¥oxy
 = 
p
;

497 #ifde‡
USE_NNTP


498 i‡(!
	`n⁄_nuŒ
(
NNTP_£rvî
Ë&& (
p
 = 
	`gëív
("NNTPSERVER")Ë!
NULL
)

499 
NNTP_£rvî
 = 
p
;

500 i‡(!
	`n⁄_nuŒ
(
NNTP_mode
Ë&& (
p
 = 
	`gëív
("NNTPMODE")Ë!
NULL
)

501 
NNTP_mode
 = 
p
;

504 i‡(!
	`n⁄_nuŒ
(
Edô‹
Ë&& (
p
 = 
	`gëív
("EDITOR")Ë!
NULL
)

505 
Edô‹
 = 
p
;

506 i‡(!
	`n⁄_nuŒ
(
Maûî
Ë&& (
p
 = 
	`gëív
("MAILER")Ë!
NULL
)

507 
Maûî
 = 
p
;

510 
i
 = 1;

511 
i
 < 
¨gc
) {

512 i‡(*
¨gv
[
i
] == '-') {

513 i‡(!
	`°rcmp
("-t", 
¨gv
[
i
])) {

514 i‡(++
i
 >
¨gc
)

515 
	`ußge
();

516 i‡(
	`©oi
(
¨gv
[
i
]) > 0)

517 
Tab°›
 = 
	`©oi
(
¨gv
[
i
]);

519 i‡(!
	`°rcmp
("-r", 
¨gv
[
i
]))

520 
ShowEf„˘
 = 
FALSE
;

521 i‡(!
	`°rcmp
("-l", 
¨gv
[
i
])) {

522 i‡(++
i
 >
¨gc
)

523 
	`ußge
();

524 i‡(
	`©oi
(
¨gv
[
i
]) > 0)

525 
PagîMax
 = 
	`©oi
(
¨gv
[
i
]);

527 #ifde‡
USE_M17N


528 #i‚de‡
DEBIAN


529 i‡(!
	`°rcmp
("-s", 
¨gv
[
i
]))

530 
Di•œyCh¨£t
 = 
WC_CES_SHIFT_JIS
;

531 i‡(!
	`°rcmp
("-j", 
¨gv
[
i
]))

532 
Di•œyCh¨£t
 = 
WC_CES_ISO_2022_JP
;

533 i‡(!
	`°rcmp
("-e", 
¨gv
[
i
]))

534 
Di•œyCh¨£t
 = 
WC_CES_EUC_JP
;

536 i‡(!
	`°∫cmp
("-I", 
¨gv
[
i
], 2)) {

537 i‡(
¨gv
[
i
][2] != '\0')

538 
p
 = 
¨gv
[
i
] + 2;

540 i‡(++
i
 >
¨gc
)

541 
	`ußge
();

542 
p
 = 
¨gv
[
i
];

544 
DocumítCh¨£t
 = 
	`wc_guess_ch¨£t_sh‹t
(
p
, DocumentCharset);

545 
WcO±i⁄
.
auto_dëe˘
 = 
WC_OPT_DETECT_OFF
;

546 
U£C⁄ã¡Ch¨£t
 = 
FALSE
;

548 i‡(!
	`°∫cmp
("-O", 
¨gv
[
i
], 2)) {

549 i‡(
¨gv
[
i
][2] != '\0')

550 
p
 = 
¨gv
[
i
] + 2;

552 i‡(++
i
 >
¨gc
)

553 
	`ußge
();

554 
p
 = 
¨gv
[
i
];

556 
Di•œyCh¨£t
 = 
	`wc_guess_ch¨£t_sh‹t
(
p
, DisplayCharset);

559 i‡(!
	`°rcmp
("-gøph", 
¨gv
[
i
]))

560 
U£GøphicCh¨
 = 
TRUE
;

561 i‡(!
	`°rcmp
("-no-gøph", 
¨gv
[
i
]))

562 
U£GøphicCh¨
 = 
FALSE
;

563 i‡(!
	`°rcmp
("-T", 
¨gv
[
i
])) {

564 i‡(++
i
 >
¨gc
)

565 
	`ußge
();

566 
DeÁu…Ty≥
 = 
deÁu…_ty≥
 = 
¨gv
[
i
];

568 i‡(!
	`°rcmp
("-m", 
¨gv
[
i
]))

569 
SórchHódî
 = 
£¨ch_hódî
 = 
TRUE
;

570 i‡(!
	`°rcmp
("-v", 
¨gv
[
i
]))

571 
visuÆ_°¨t
 = 
TRUE
;

572 i‡(!
	`°rcmp
("-N", 
¨gv
[
i
]))

573 
›í_√w_èb
 = 
TRUE
;

574 #ifde‡
USE_COLOR


575 i‡(!
	`°rcmp
("-M", 
¨gv
[
i
]))

576 
u£Cﬁ‹
 = 
FALSE
;

578 i‡(!
	`°rcmp
("-B", 
¨gv
[
i
]))

579 
lﬂd_bookm¨k
 = 
TRUE
;

580 i‡(!
	`°rcmp
("-bookm¨k", 
¨gv
[
i
])) {

581 i‡(++
i
 >
¨gc
)

582 
	`ußge
();

583 
Bookm¨kFûe
 = 
¨gv
[
i
];

584 i‡(
Bookm¨kFûe
[0] != '~' && BookmarkFile[0] != '/') {

585 
Så
 
tmp
 = 
	`Så√w_ch¨p
(
CuºítDú
);

586 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

587 
	`Såˇt_ch¨
(
tmp
, '/');

588 
	`Såˇt_ch¨p
(
tmp
, 
Bookm¨kFûe
);

589 
Bookm¨kFûe
 = 
	`˛ónupName
(
tmp
->
±r
);

592 i‡(!
	`°rcmp
("-F", 
¨gv
[
i
]))

593 
RídîFøme
 = 
TRUE
;

594 i‡(!
	`°rcmp
("-W", 
¨gv
[
i
])) {

595 i‡(
WøpDeÁu…
)

596 
WøpDeÁu…
 = 
FALSE
;

598 
WøpDeÁu…
 = 
TRUE
;

600 i‡(!
	`°rcmp
("-dump", 
¨gv
[
i
]))

601 
w3m_dump
 = 
DUMP_BUFFER
;

602 i‡(!
	`°rcmp
("-dump_sour˚", 
¨gv
[
i
]))

603 
w3m_dump
 = 
DUMP_SOURCE
;

604 i‡(!
	`°rcmp
("-dump_hód", 
¨gv
[
i
]))

605 
w3m_dump
 = 
DUMP_HEAD
;

606 i‡(!
	`°rcmp
("-dump_bŸh", 
¨gv
[
i
]))

607 
w3m_dump
 = (
DUMP_HEAD
 | 
DUMP_SOURCE
);

608 i‡(!
	`°rcmp
("-dump_exåa", 
¨gv
[
i
]))

609 
w3m_dump
 = (
DUMP_HEAD
 | 
DUMP_SOURCE
 | 
DUMP_EXTRA
);

610 i‡(!
	`°rcmp
("-hÆfdump", 
¨gv
[
i
]))

611 
w3m_dump
 = 
DUMP_HALFDUMP
;

612 i‡(!
	`°rcmp
("-hÆÊﬂd", 
¨gv
[
i
])) {

613 
w3m_dump
 = 0;

614 
w3m_hÆÊﬂd
 = 
TRUE
;

615 
DeÁu…Ty≥
 = 
deÁu…_ty≥
 = "text/html";

617 i‡(!
	`°rcmp
("-backíd", 
¨gv
[
i
])) {

618 
w3m_backíd
 = 
TRUE
;

620 i‡(!
	`°rcmp
("-backíd_b©ch", 
¨gv
[
i
])) {

621 
w3m_backíd
 = 
TRUE
;

622 i‡(++
i
 >
¨gc
)

623 
	`ußge
();

624 i‡(!
backíd_b©ch_comm™ds
)

625 
backíd_b©ch_comm™ds
 = 
	`√wTextLi°
();

626 
	`pushText
(
backíd_b©ch_comm™ds
, 
¨gv
[
i
]);

628 i‡(!
	`°rcmp
("-cﬁs", 
¨gv
[
i
])) {

629 i‡(++
i
 >
¨gc
)

630 
	`ußge
();

631 
COLS
 = 
	`©oi
(
¨gv
[
i
]);

633 i‡(!
	`°rcmp
("-µc", 
¨gv
[
i
])) {

634 
µc
;

635 i‡(++
i
 >
¨gc
)

636 
	`ußge
();

637 
µc
 = 
	`©of
(
¨gv
[
i
]);

638 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&

639 
µc
 <
MAXIMUM_PIXEL_PER_CHAR
) {

640 
pixñ_≥r_ch¨
 = 
µc
;

641 
£t_pixñ_≥r_ch¨
 = 
TRUE
;

644 #ifde‡
USE_IMAGE


645 i‡(!
	`°rcmp
("-µl", 
¨gv
[
i
])) {

646 
µc
;

647 i‡(++
i
 >
¨gc
)

648 
	`ußge
();

649 
µc
 = 
	`©of
(
¨gv
[
i
]);

650 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&

651 
µc
 <
MAXIMUM_PIXEL_PER_CHAR
 * 2) {

652 
pixñ_≥r_löe
 = 
µc
;

653 
£t_pixñ_≥r_löe
 = 
TRUE
;

657 i‡(!
	`°rcmp
("-num", 
¨gv
[
i
]))

658 
showLöeNum
 = 
TRUE
;

659 i‡(!
	`°rcmp
("-no-¥oxy", 
¨gv
[
i
]))

660 
u£_¥oxy
 = 
FALSE
;

661 #ifde‡
INET6


662 i‡(!
	`°rcmp
("-4", 
¨gv
[
i
]) || !strcmp("-6",árgv[i]))

663 
	`£t_∑øm_›ti⁄
(
	`S¥ötf
("dns_‹dî=%c", 
¨gv
[
i
][1])->
±r
);

665 i‡(!
	`°rcmp
("-po°", 
¨gv
[
i
])) {

666 i‡(++
i
 >
¨gc
)

667 
	`ußge
();

668 
po°_fûe
 = 
¨gv
[
i
];

670 i‡(!
	`°rcmp
("-hódî", 
¨gv
[
i
])) {

671 
Så
 
hs
;

672 i‡(++
i
 >
¨gc
)

673 
	`ußge
();

674 i‡((
hs
 = 
	`make_›ti⁄Æ_hódî_°rög
(
¨gv
[
i
])Ë!
NULL
) {

675 i‡(
hódî_°rög
 =
NULL
)

676 
hódî_°rög
 = 
hs
;

678 
	`Såˇt
(
hódî_°rög
, 
hs
);

680 
¨gv
[
i
][0]) {

681 
¨gv
[
i
][0] = '\0';

682 
¨gv
[
i
]++;

685 #ifde‡
USE_MOUSE


686 i‡(!
	`°rcmp
("-no-mou£", 
¨gv
[
i
])) {

687 
u£_mou£
 = 
FALSE
;

690 #ifde‡
USE_COOKIE


691 i‡(!
	`°rcmp
("-no-cookõ", 
¨gv
[
i
])) {

692 
u£_cookõ
 = 
FALSE
;

693 
ac˚±_cookõ
 = 
FALSE
;

695 i‡(!
	`°rcmp
("-cookõ", 
¨gv
[
i
])) {

696 
u£_cookõ
 = 
TRUE
;

697 
ac˚±_cookõ
 = 
TRUE
;

700 i‡(!
	`°rcmp
("-∑uth", 
¨gv
[
i
])) {

701 i‡(++
i
 >
¨gc
)

702 
	`ußge
();

703 
¥oxy_auth_cookõ
 = 
	`Så√w_m_ch¨p
("Basic ",

704 
	`ícodeB
(
¨gv
[
i
])->
±r
,

705 
NULL
);

706 
¨gv
[
i
][0]) {

707 
¨gv
[
i
][0] = '\0';

708 
¨gv
[
i
]++;

711 #ifde‡
DEBIAN


712 i‡(!
	`°rcmp
("-s", 
¨gv
[
i
]))

714 i‡(!
	`°rcmp
("-S", 
¨gv
[
i
]))

716 
squìzeBœnkLöe
 = 
TRUE
;

717 i‡(!
	`°rcmp
("-X", 
¨gv
[
i
]))

718 
Do_nŸ_u£_ti_ã
 = 
TRUE
;

719 i‡(!
	`°rcmp
("-tôÀ", 
¨gv
[
i
]))

720 
di•œyTôÀTîm
 = 
	`gëív
("TERM");

721 i‡(!
	`°∫cmp
("-tôÀ=", 
¨gv
[
i
], 7))

722 
di•œyTôÀTîm
 = 
¨gv
[
i
] + 7;

723 i‡(!
	`°rcmp
("-o", 
¨gv
[
i
]) ||

724 !
	`°rcmp
("-show-›ti⁄", 
¨gv
[
i
])) {

725 i‡(!
	`°rcmp
("-show-›ti⁄", 
¨gv
[
i
]Ë|| ++ò>
¨gc
 ||

726 !
	`°rcmp
(
¨gv
[
i
], "?")) {

727 
	`show_∑øms
(
°dout
);

728 
	`exô
(0);

730 i‡(!
	`£t_∑øm_›ti⁄
(
¨gv
[
i
])) {

733 
	`Ârötf
(
°dîr
, "%s: bad o±i⁄\n", 
¨gv
[
i
]);

734 
show_∑øms_p
 = 1;

735 
	`ußge
();

738 i‡(!
	`°rcmp
("-dummy", 
¨gv
[
i
])) {

741 i‡(!
	`°rcmp
("-debug", 
¨gv
[
i
])) {

742 
w3m_debug
 = 
TRUE
;

744 i‡(!
	`°rcmp
("-ªqlog",
¨gv
[
i
])) {

745 
w3m_ªqlog
=
	`rcFûe
("request.log");

748 
	`ußge
();

751 i‡(*
¨gv
[
i
] == '+') {

752 
löe_°r
 = 
¨gv
[
i
] + 1;

755 
lﬂd_¨gv
[
lﬂd_¨gc
++] = 
¨gv
[
i
];

757 
i
++;

760 #ifdef 
__WATT32__


761 i‡(
w3m_debug
)

762 
	`dbug_öô
();

763 
	`sock_öô
();

766 #ifde‡
__MINGW32_VERSION


768 
îr
;

769 
WORD
 
wVîReq
;

771 
wVîReq
 = 
	`MAKEWORD
(1, 1);

773 
îr
 = 
	`WSASèπup
(
wVîReq
, &
WSAD©a
);

774 i‡(
îr
 != 0)

776 
	`Ârötf
(
°dîr
, "Can't find winsock\n");

779 
_fmode
 = 
_O_BINARY
;

783 
Fú°Tab
 = 
NULL
;

784 
La°Tab
 = 
NULL
;

785 
nTab
 = 0;

786 
CuºítTab
 = 
NULL
;

787 
CuºítKey
 = -1;

788 i‡(
Bookm¨kFûe
 =
NULL
)

789 
Bookm¨kFûe
 = 
	`rcFûe
(
BOOKMARK
);

791 i‡(!
	`ißây
(1Ë&& !
w3m_dump
) {

793 
w3m_dump
 = 
DUMP_BUFFER
;

795 i‡(
w3m_dump
) {

796 i‡(
COLS
 == 0)

797 
COLS
 = 80;

800 #ifde‡
USE_BINMODE_STREAM


801 
	`£tmode
(
	`fûío
(
°dout
), 
O_BINARY
);

803 i‡(!
w3m_dump
 && !
w3m_backíd
) {

804 
	`fmInô
();

805 #ifde‡
SIGWINCH


806 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

808 
	`£éöescﬁs
();

809 
	`£tups¸ìn
();

812 #ifde‡
USE_IMAGE


813 i‡(
w3m_hÆfdump
 && 
di•œyImage
)

814 
a˘iveImage
 = 
TRUE
;

817 
	`sync_wôh_›ti⁄
();

818 #ifde‡
USE_COOKIE


819 
	`öôCookõ
();

821 #ifde‡
USE_HISTORY


822 i‡(
U£Hi°‹y
)

823 
	`lﬂdHi°‹y
(
URLHi°
);

826 #ifde‡
USE_M17N


827 
	`wtf_öô
(
DocumítCh¨£t
, 
Di•œyCh¨£t
);

833 i‡(
w3m_backíd
)

834 
	`backíd
();

836 i‡(
w3m_dump
)

837 
	`mySig«l
(
SIGINT
, 
SIG_IGN
);

838 #ifde‡
SIGCHLD


839 
	`mySig«l
(
SIGCHLD
, 
sig_chld
);

841 #ifde‡
SIGPIPE


842 
	`mySig«l
(
SIGPIPE
, 
SigPùe
);

845 
‹ig_GC_w¨n_¥oc
 = 
	`GC_£t_w¨n_¥oc
(
wøp_GC_w¨n_¥oc
);

846 
îr_msg
 = 
	`Så√w
();

847 i‡(
lﬂd_¨gc
 == 0) {

849 i‡(!
	`ißây
(0)) {

850 
ªdö
 = 
	`√wFûeSåóm
(
	`fd›í
(
	`dup
(0), "rb"), ((*)())
p˛o£
);

851 
√wbuf
 = 
	`›íGíîÆPagîBuf„r
(
ªdö
);

852 
	`dup2
(1, 0);

854 i‡(
lﬂd_bookm¨k
) {

855 
√wbuf
 = 
	`lﬂdGíîÆFûe
(
Bookm¨kFûe
, 
NULL
, 
NO_REFERER
, 0, NULL);

856 i‡(
√wbuf
 =
NULL
)

857 
	`Såˇt_ch¨p
(
îr_msg
, "w3m: Can'tÜoad bookmark.\n");

859 i‡(
visuÆ_°¨t
) {

861 
Så
 
s_∑ge
;

862 
s_∑ge
 =

863 
Så√w_ch¨p


865 
	`Såˇt_ch¨p
(
s_∑ge
, "<a href='http://w3m.sourceforge.net/'>");

866 
	`Såˇt_m_ch¨p
(
s_∑ge
,

868 
w3m_vîsi⁄
,

870 
NULL
);

871 #ifde‡
DEBIAN


872 
	`Såˇt_m_ch¨p
(
s_∑ge
,

875 
NULL
);

877 
√wbuf
 = 
	`lﬂdHTMLSåög
(
s_∑ge
);

878 i‡(
√wbuf
 =
NULL
)

879 
	`Såˇt_ch¨p
(
îr_msg
, "w3m: Can'tÜoad string.\n");

880 i‡(
√wbuf
 !
NO_BUFFER
)

881 
√wbuf
->
buf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

883 i‡((
p
 = 
	`gëív
("HTTP_HOME")Ë!
NULL
 ||

884 (
p
 = 
	`gëív
("WWW_HOME")Ë!
NULL
) {

885 
√wbuf
 = 
	`lﬂdGíîÆFûe
(
p
, 
NULL
, 
NO_REFERER
, 0, NULL);

886 i‡(
√wbuf
 =
NULL
)

887 
	`Såˇt
(
îr_msg
, 
	`S¥ötf
("w3m: C™'àlﬂd %s.\n", 
p
));

888 i‡(
√wbuf
 !
NO_BUFFER
)

889 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
√wbuf
->
cuºítURL
)->
±r
);

892 i‡(
fmInôülized
)

893 
	`fmTîm
();

894 
	`ußge
();

896 i‡(
√wbuf
 =
NULL
) {

897 i‡(
fmInôülized
)

898 
	`fmTîm
();

899 i‡(
îr_msg
->
Àngth
)

900 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

901 
	`w3m_exô
(2);

903 
i
 = -1;

906 
i
 = 0;

908 ; 
i
 < 
lﬂd_¨gc
; i++) {

909 i‡(
i
 >= 0) {

910 
SórchHódî
 = 
£¨ch_hódî
;

911 
DeÁu…Ty≥
 = 
deÁu…_ty≥
;

912 i‡(
w3m_dump
 =
DUMP_HEAD
) {

913 
ªque°
 = 
	`New
(
F‹mLi°
);

914 
ªque°
->
mëhod
 = 
FORM_METHOD_HEAD
;

915 
√wbuf
 =

916 
	`lﬂdGíîÆFûe
(
lﬂd_¨gv
[
i
], 
NULL
, 
NO_REFERER
, 0,

917 
ªque°
);

920 i‡(
po°_fûe
 && 
i
 == 0) {

921 
FILE
 *
Â
;

922 
Så
 
body
;

923 i‡(!
	`°rcmp
(
po°_fûe
, "-"))

924 
Â
 = 
°dö
;

926 
Â
 = 
	`f›í
(
po°_fûe
, "r");

927 i‡(
Â
 =
NULL
) {

929 
	`Såˇt
(
îr_msg
,

930 
	`S¥ötf
("w3m: C™'à›í %s.\n", 
po°_fûe
));

933 
body
 = 
	`SåfgëÆl
(
Â
);

934 i‡(
Â
 !
°dö
)

935 
	`f˛o£
(
Â
);

936 
ªque°
 =

937 
	`√wF‹mLi°
(
NULL
, "post", NULL, NULL, NULL, NULL,

938 
NULL
);

939 
ªque°
->
body
 = body->
±r
;

940 
ªque°
->
bound¨y
 = 
NULL
;

941 
ªque°
->
Àngth
 = 
body
->length;

944 
ªque°
 = 
NULL
;

946 
√wbuf
 =

947 
	`lﬂdGíîÆFûe
(
lﬂd_¨gv
[
i
], 
NULL
, 
NO_REFERER
, 0,

948 
ªque°
);

950 i‡(
√wbuf
 =
NULL
) {

952 
	`Såˇt
(
îr_msg
,

953 
	`S¥ötf
("w3m: C™'àlﬂd %s.\n", 
lﬂd_¨gv
[
i
]));

956 i‡(
√wbuf
 =
NO_BUFFER
)

958 
√wbuf
->
ªÆ_scheme
) {

959 
SCM_MAILTO
:

961 
SCM_LOCAL
:

962 
SCM_LOCAL_CGI
:

963 
	`unshi·Hi°
(
LﬂdHi°
, 
	`c⁄v_‰om_sy°em
(
lﬂd_¨gv
[
i
]));

965 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
√wbuf
->
cuºítURL
)->
±r
);

969 i‡(
√wbuf
 =
NO_BUFFER
)

971 i‡(
√wbuf
->
∑gîSour˚
 ||

972 (
√wbuf
->
ªÆ_scheme
 =
SCM_LOCAL
 &&Çewbuf->
hódî_sour˚
 &&

973 
√wbuf
->
cuºítURL
.
fûe
 && 
	`°rcmp
(newbuf->currentURL.file, "-")))

974 
√wbuf
->
£¨ch_hódî
 = search_header;

975 i‡(
CuºítTab
 =
NULL
) {

976 
Fú°Tab
 = 
La°Tab
 = 
CuºítTab
 = 
	`√wTab
();

977 
nTab
 = 1;

978 
Fú°buf
 = 
Cuºítbuf
 = 
√wbuf
;

980 i‡(
›í_√w_èb
) {

981 
	`_√wT
();

982 
Cuºítbuf
->
√xtBuf„r
 = 
√wbuf
;

983 
	`dñBuf„r
(
Cuºítbuf
);

986 
Cuºítbuf
->
√xtBuf„r
 = 
√wbuf
;

987 
Cuºítbuf
 = 
√wbuf
;

989 i‡(!
w3m_dump
 || w3m_dum∞=
DUMP_BUFFER
) {

990 i‡(
Cuºítbuf
->
‰ame£t
 !
NULL
 && 
RídîFøme
)

991 
	`rFøme
();

993 i‡(
w3m_dump
)

994 
	`do_dump
(
Cuºítbuf
);

996 
Cuºítbuf
 = 
√wbuf
;

997 #ifde‡
USE_BUFINFO


998 
	`ßveBuf„rInfo
();

1002 i‡(
w3m_dump
) {

1003 i‡(
îr_msg
->
Àngth
)

1004 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

1005 #ifde‡
USE_COOKIE


1006 
	`ßve_cookõs
();

1008 
	`w3m_exô
(0);

1011 i‡(
add_dow∆ﬂd_li°
) {

1012 
add_dow∆ﬂd_li°
 = 
FALSE
;

1013 
CuºítTab
 = 
La°Tab
;

1014 i‡(!
Fú°Tab
) {

1015 
Fú°Tab
 = 
La°Tab
 = 
CuºítTab
 = 
	`√wTab
();

1016 
nTab
 = 1;

1018 i‡(!
Fú°buf
 || Fú°bu‡=
NO_BUFFER
) {

1019 
Fú°buf
 = 
Cuºítbuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

1020 
Cuºítbuf
->
buf„Ωr›
 = 
BP_INTERNAL
 | 
BP_NO_URL
;

1021 
Cuºítbuf
->
buf„∫ame
 = 
DOWNLOAD_LIST_TITLE
;

1024 
Cuºítbuf
 = 
Fú°buf
;

1025 
	`ldDL
();

1028 
CuºítTab
 = 
Fú°Tab
;

1029 i‡(!
Fú°Tab
 || !
Fú°buf
 || Fú°bu‡=
NO_BUFFER
) {

1030 i‡(
√wbuf
 =
NO_BUFFER
) {

1031 i‡(
fmInôülized
)

1033 
	`öputCh¨
("Hitány keyÅo quit w3m:");

1035 i‡(
fmInôülized
)

1036 
	`fmTîm
();

1037 i‡(
îr_msg
->
Àngth
)

1038 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

1039 i‡(
√wbuf
 =
NO_BUFFER
) {

1040 #ifde‡
USE_COOKIE


1041 
	`ßve_cookõs
();

1043 i‡(!
îr_msg
->
Àngth
)

1044 
	`w3m_exô
(0);

1046 
	`w3m_exô
(2);

1048 i‡(
îr_msg
->
Àngth
)

1049 
	`di•_mesßge_n£c
(
îr_msg
->
±r
, 
FALSE
, 1, 
TRUE
, FALSE);

1051 
SórchHódî
 = 
FALSE
;

1052 
DeÁu…Ty≥
 = 
NULL
;

1053 #ifde‡
USE_M17N


1054 
U£C⁄ã¡Ch¨£t
 = 
TRUE
;

1055 
WcO±i⁄
.
auto_dëe˘
 =áuto_detect;

1058 
Cuºítbuf
 = 
Fú°buf
;

1059 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1060 i‡(
löe_°r
) {

1061 
	`_goLöe
(
löe_°r
);

1064 i‡(
add_dow∆ﬂd_li°
) {

1065 
add_dow∆ﬂd_li°
 = 
FALSE
;

1066 
	`ldDL
();

1068 i‡(
Cuºítbuf
->
submô
) {

1069 
Anch‹
 *
a
 = 
Cuºítbuf
->
submô
;

1070 
Cuºítbuf
->
submô
 = 
NULL
;

1071 
	`gŸoLöe
(
Cuºítbuf
, 
a
->
°¨t
.
löe
);

1072 
Cuºítbuf
->
pos
 = 
a
->
°¨t
.pos;

1073 
	`_fﬁlowF‹m
(
TRUE
);

1077 i‡(
CuºítEvít
) {

1078 
CuºítKey
 = -1;

1079 
CuºítKeyD©a
 = 
NULL
;

1080 
CuºítCmdD©a
 = (*)
CuºítEvít
->
d©a
;

1081 
w3mFuncLi°
[
CuºítEvít
->
cmd
].
	`func
();

1082 
CuºítCmdD©a
 = 
NULL
;

1083 
CuºítEvít
 = CuºítEvít->
√xt
;

1087 #ifde‡
USE_ALARM


1088 i‡(
Cuºítbuf
->
evít
) {

1089 i‡(
Cuºítbuf
->
evít
->
°©us
 !
AL_UNSET
) {

1090 
CuºítAœrm
 = 
Cuºítbuf
->
evít
;

1091 i‡(
CuºítAœrm
->
£c
 == 0) {

1092 
Cuºítbuf
->
evít
 = 
NULL
;

1093 
CuºítKey
 = -1;

1094 
CuºítKeyD©a
 = 
NULL
;

1095 
CuºítCmdD©a
 = (*)
CuºítAœrm
->
d©a
;

1096 
w3mFuncLi°
[
CuºítAœrm
->
cmd
].
	`func
();

1097 
CuºítCmdD©a
 = 
NULL
;

1102 
Cuºítbuf
->
evít
 = 
NULL
;

1104 i‡(!
Cuºítbuf
->
evít
)

1105 
CuºítAœrm
 = &
DeÁu…Aœrm
;

1107 #ifde‡
USE_MOUSE


1108 
mou£_a˘i⁄
.
ö_a˘i⁄
 = 
FALSE
;

1109 i‡(
u£_mou£
)

1110 
	`mou£_a˘ive
();

1112 #ifde‡
USE_ALARM


1113 i‡(
CuºítAœrm
->
£c
 > 0) {

1114 
	`mySig«l
(
SIGALRM
, 
SigAœrm
);

1115 
	`Æ¨m
(
CuºítAœrm
->
£c
);

1118 #ifde‡
SIGWINCH


1119 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

1121 #ifde‡
USE_IMAGE


1122 i‡(
a˘iveImage
 && 
di•œyImage
 && 
Cuºítbuf
->
img
 &&

1123 !
Cuºítbuf
->
image_lﬂded
) {

1125 #ifde‡
SIGWINCH


1126 i‡(
√ed_ªsize_s¸ìn
)

1127 
	`ªsize_s¸ìn
();

1129 
	`lﬂdImage
(
Cuºítbuf
, 
IMG_FLAG_NEXT
);

1130 } 
	`¶ìp_tûl_™ykey
(1, 0) <= 0);

1132 #ifde‡
SIGWINCH


1136 #ifde‡
SIGWINCH


1139 i‡(
√ed_ªsize_s¸ìn
)

1140 
	`ªsize_s¸ìn
();

1141 } 
	`¶ìp_tûl_™ykey
(1, 0) <= 0);

1144 
c
 = 
	`gëch
();

1145 #ifde‡
USE_ALARM


1146 i‡(
CuºítAœrm
->
£c
 > 0) {

1147 
	`Æ¨m
(0);

1150 #ifde‡
USE_MOUSE


1151 i‡(
u£_mou£
)

1152 
	`mou£_öa˘ive
();

1154 i‡(
	`IS_ASCII
(
c
)) {

1155 if–
vi_¥ec_num
 ){

1156 if(((
¥ec_num
 && 
c
 == '0') || '1' <= c) && (c <= '9')) {

1157 
¥ec_num
 =Öªc_num * 10 + ()(
c
 - '0');

1158 i‡(
¥ec_num
 > 
PREC_LIMIT
)

1159 
¥ec_num
 = 
PREC_LIMIT
;

1162 
	`£t_buf„r_ívú⁄
(
Cuºítbuf
);

1163 
	`ßve_buf„r_posôi⁄
(
Cuºítbuf
);

1164 
	`keyPªssEvítProc
(()
c
);

1165 
¥ec_num
 = 0;

1169 
	`£t_buf„r_ívú⁄
(
Cuºítbuf
);

1170 
	`ßve_buf„r_posôi⁄
(
Cuºítbuf
);

1171 
	`keyPªssEvítProc
(()
c
);

1172 
¥ec_num
 = 0;

1175 
¥ev_key
 = 
CuºítKey
;

1176 
CuºítKey
 = -1;

1177 
CuºítKeyD©a
 = 
NULL
;

1179 
	}
}

1182 
	$keyPªssEvítProc
(
c
)

1184 
CuºítKey
 = 
c
;

1185 
w3mFuncLi°
[()
GlobÆKeym≠
[
c
]].
	`func
();

1186 
	}
}

1189 
	$pushEvít
(
cmd
, *
d©a
)

1191 
Evít
 *
evít
;

1193 
evít
 = 
	`New
(
Evít
);

1194 
evít
->
cmd
 = cmd;

1195 
evít
->
d©a
 = data;

1196 
evít
->
√xt
 = 
NULL
;

1197 i‡(
CuºítEvít
)

1198 
La°Evít
->
√xt
 = 
evít
;

1200 
CuºítEvít
 = 
evít
;

1201 
La°Evít
 = 
evít
;

1202 
	}
}

1205 
	$dump_sour˚
(
Buf„r
 *
buf
)

1207 
FILE
 *
f
;

1208 
c
;

1209 i‡(
buf
->
sour˚fûe
 =
NULL
)

1211 
f
 = 
	`f›í
(
buf
->
sour˚fûe
, "r");

1212 i‡(
f
 =
NULL
)

1214 
c
 = 
	`fgëc
(
f
), !
	`„of
(f)) {

1215 
	`putch¨
(
c
);

1217 
	`f˛o£
(
f
);

1218 
	}
}

1221 
	$dump_hód
(
Buf„r
 *
buf
)

1223 
TextLi°Iãm
 *
ti
;

1225 i‡(
buf
->
documít_hódî
 =
NULL
) {

1226 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

1227 
	`¥ötf
("\n");

1230 
ti
 = 
buf
->
documít_hódî
->
fú°
;Åi;Åòti->
√xt
) {

1231 #ifde‡
USE_M17N


1232 
	`¥ötf
("%s",

1233 
	`wc_c⁄v_°ri˘
(
ti
->
±r
, 
I¬îCh¨£t
,

1234 
buf
->
documít_ch¨£t
)->
±r
);

1236 
	`¥ötf
("%s", 
ti
->
±r
);

1239 
	`puts
("");

1240 
	}
}

1243 
	$dump_exåa
(
Buf„r
 *
buf
)

1245 
	`¥ötf
("W3m-cuºít-uæ: %s\n", 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

1246 i‡(
buf
->
ba£URL
)

1247 
	`¥ötf
("W3m-ba£-uæ: %s\n", 
	`∑r£dURL2Så
(
buf
->
ba£URL
)->
±r
);

1248 #ifde‡
USE_M17N


1249 
	`¥ötf
("W3m-document-charset: %s\n",

1250 
	`wc_˚s_to_ch¨£t
(
buf
->
documít_ch¨£t
));

1252 #ifde‡
USE_SSL


1253 i‡(
buf
->
s¶_˚πifiˇã
) {

1254 
Så
 
tmp
 = 
	`Så√w
();

1255 *
p
;

1256 
p
 = 
buf
->
s¶_˚πifiˇã
; *p;Ö++) {

1257 
	`Såˇt_ch¨
(
tmp
, *
p
);

1258 i‡(*
p
 == '\n') {

1259 ; *(
p
 + 1) == '\n';Ö++) ;

1260 i‡(*(
p
 + 1))

1261 
	`Såˇt_ch¨
(
tmp
, '\t');

1264 i‡(
	`Såœ°ch¨
(
tmp
) != '\n')

1265 
	`Såˇt_ch¨
(
tmp
, '\n');

1266 
	`¥ötf
("W3m-s¶-˚πifiˇã: %s", 
tmp
->
±r
);

1269 
	}
}

1272 
	$do_dump
(
Buf„r
 *
buf
)

1274 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

1276 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
ötTøp
);

1277 i‡(
	`SETJMP
(
I¡Rëu∫
) != 0) {

1278 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1281 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

1282 
	`dump_exåa
(
buf
);

1283 i‡(
w3m_dump
 & 
DUMP_HEAD
)

1284 
	`dump_hód
(
buf
);

1285 i‡(
w3m_dump
 & 
DUMP_SOURCE
)

1286 
	`dump_sour˚
(
buf
);

1287 i‡(
w3m_dump
 =
DUMP_BUFFER
)

1288 
	`ßveBuf„r
(
buf
, 
°dout
, 
FALSE
);

1289 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1290 
	}
}

1292 
DEFUN
(
nulcmd
, 
NOTHING
 
NULL
 @@@, "DoÇothing")

1296 #ifde‡
__EMX__


1297 
DEFUN
(
pcm≠
, 
PCMAP
, "pcmap")

1299 
	gw3mFuncLi°
[()
PcKeym≠
[()
gëch
()]].
func
();

1303 
	$pcm≠
()

1305 
	}
}

1309 
	$escKeyProc
(
c
, 
esc
, *
m≠
)

1311 i‡(
CuºítKey
 >0 && CuºítKey & 
K_MULTI
) {

1312 **
mm≠
;

1313 
mm≠
 = (**)
	`gëKeyD©a
(
	`MULTI_KEY
(
CuºítKey
));

1314 i‡(!
mm≠
)

1316 
esc
) {

1317 
K_ESCD
:

1318 
m≠
 = 
mm≠
[3];

1320 
K_ESCB
:

1321 
m≠
 = 
mm≠
[2];

1323 
K_ESC
:

1324 
m≠
 = 
mm≠
[1];

1327 
m≠
 = 
mm≠
[0];

1330 
esc
 |(
CuºítKey
 & ~0xFFFF);

1332 
CuºítKey
 = 
esc
 | 
c
;

1333 
w3mFuncLi°
[()
m≠
[
c
]].
	`func
();

1334 
	}
}

1336 
DEFUN
(
escm≠
, 
ESCMAP
, "ESC map")

1338 
	gc
;

1339 
	gc
 = 
gëch
();

1340 i‡(
IS_ASCII
(
c
))

1341 
escKeyProc
(()
c
, 
K_ESC
, 
EscKeym≠
);

1344 
DEFUN
(
escbm≠
, 
ESCBMAP
, "ESC [ map")

1346 
	gc
;

1347 
	gc
 = 
gëch
();

1348 i‡(
IS_DIGIT
(
c
)) {

1349 
escdm≠
(
c
);

1352 i‡(
IS_ASCII
(
c
))

1353 
escKeyProc
(()
c
, 
K_ESCB
, 
EscBKeym≠
);

1357 
	$escdm≠
(
c
)

1359 
d
;

1360 
d
 = ()
c
 - ()'0';

1361 
c
 = 
	`gëch
();

1362 i‡(
	`IS_DIGIT
(
c
)) {

1363 
d
 = d * 10 + ()
c
 - ()'0';

1364 
c
 = 
	`gëch
();

1366 i‡(
c
 == '~')

1367 
	`escKeyProc
(()
d
, 
K_ESCD
, 
EscDKeym≠
);

1368 
	}
}

1370 
DEFUN
(
mu…im≠
, 
MULTIMAP
, "multimap")

1372 
	gc
;

1373 
	gc
 = 
gëch
();

1374 i‡(
IS_ASCII
(
c
)) {

1375 
	gCuºítKey
 = 
K_MULTI
 | (
CuºítKey
 << 16Ë| 
c
;

1376 
escKeyProc
(()
c
, 0, 
NULL
);

1381 
	$tmpCÀ¨Buf„r
(
Buf„r
 *
buf
)

1383 i‡(
buf
->
∑gîSour˚
 =
NULL
 && 
	`wrôeBuf„rCache
(buf) == 0) {

1384 
buf
->
fú°Löe
 = 
NULL
;

1385 
buf
->
t›Löe
 = 
NULL
;

1386 
buf
->
cuºítLöe
 = 
NULL
;

1387 
buf
->
œ°Löe
 = 
NULL
;

1389 
	}
}

1391 
Så
 
cuºítURL
();

1393 #ifde‡
USE_BUFINFO


1395 
	$ßveBuf„rInfo
()

1397 
FILE
 *
Â
;

1399 i‡(
w3m_dump
)

1401 i‡((
Â
 = 
	`f›í
(
	`rcFûe
("buföfo"), "w")Ë=
NULL
) {

1404 
	`Ârötf
(
Â
, "%s\n", 
	`cuºítURL
()->
±r
);

1405 
	`f˛o£
(
Â
);

1406 
	}
}

1410 
	$pushBuf„r
(
Buf„r
 *
buf
)

1412 
Buf„r
 *
b
;

1414 #ifde‡
USE_IMAGE


1415 
	`dñëeImage
(
Cuºítbuf
);

1417 i‡(
˛ór_buf„r
)

1418 
	`tmpCÀ¨Buf„r
(
Cuºítbuf
);

1419 i‡(
Fú°buf
 =
Cuºítbuf
) {

1420 
buf
->
√xtBuf„r
 = 
Fú°buf
;

1421 
Fú°buf
 = 
Cuºítbuf
 = 
buf
;

1423 i‡((
b
 = 
	`¥evBuf„r
(
Fú°buf
, 
Cuºítbuf
)Ë!
NULL
) {

1424 
b
->
√xtBuf„r
 = 
buf
;

1425 
buf
->
√xtBuf„r
 = 
Cuºítbuf
;

1426 
Cuºítbuf
 = 
buf
;

1428 #ifde‡
USE_BUFINFO


1429 
	`ßveBuf„rInfo
();

1432 
	}
}

1435 
	$dñBuf„r
(
Buf„r
 *
buf
)

1437 i‡(
buf
 =
NULL
)

1439 i‡(
Cuºítbuf
 =
buf
)

1440 
Cuºítbuf
 = 
buf
->
√xtBuf„r
;

1441 
Fú°buf
 = 
	`dñëeBuf„r
(Fú°buf, 
buf
);

1442 i‡(!
Cuºítbuf
)

1443 
Cuºítbuf
 = 
Fú°buf
;

1444 
	}
}

1447 
	$ªpBuf„r
(
Buf„r
 *
ﬁdbuf
, Buf„∏*
buf
)

1449 
Fú°buf
 = 
	`ª∂a˚Buf„r
(Fú°buf, 
ﬁdbuf
, 
buf
);

1450 
Cuºítbuf
 = 
buf
;

1451 
	}
}

1454 
MySig«lH™dÀr


1455 
	$ötTøp
(
SIGNAL_ARG
)

1457 
	`LONGJMP
(
I¡Rëu∫
, 0);

1458 
SIGNAL_RETURN
;

1459 
	}
}

1461 #ifde‡
SIGWINCH


1462 
MySig«lH™dÀr


1463 
	$ªsize_hook
(
SIGNAL_ARG
)

1465 
√ed_ªsize_s¸ìn
 = 
TRUE
;

1466 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

1467 
SIGNAL_RETURN
;

1468 
	}
}

1471 
	$ªsize_s¸ìn
()

1473 
√ed_ªsize_s¸ìn
 = 
FALSE
;

1474 
	`£éöescﬁs
();

1475 
	`£tups¸ìn
();

1476 i‡(
CuºítTab
)

1477 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1478 
	}
}

1481 #ifde‡
SIGPIPE


1482 
MySig«lH™dÀr


1483 
	$SigPùe
(
SIGNAL_ARG
)

1485 #ifde‡
USE_MIGEMO


1486 
	`öô_migemo
();

1488 
	`mySig«l
(
SIGPIPE
, 
SigPùe
);

1489 
SIGNAL_RETURN
;

1490 
	}
}

1498 
	$ns¸ﬁl
(
n
, 
mode
)

1500 
Buf„r
 *
buf
 = 
Cuºítbuf
;

1501 
Löe
 *
t›
 = 
buf
->
t›Löe
, *
cur
 = buf->
cuºítLöe
;

1502 
 um
, 
énum
, 
Œnum
, 
diff_n
;

1504 i‡(
buf
->
fú°Löe
 =
NULL
)

1506 
 um
 = 
cur
->
löíumbî
;

1507 
buf
->
t›Löe
 = 
	`löeSkù
(buf, 
t›
, 
n
, 
FALSE
);

1508 i‡(
buf
->
t›Löe
 =
t›
) {

1509 
 um
 +
n
;

1510 i‡(
 um
 < 
buf
->
t›Löe
->
löíumbî
)

1511 
 um
 = 
buf
->
t›Löe
->
löíumbî
;

1512 i‡(
 um
 > 
buf
->
œ°Löe
->
löíumbî
)

1513 
 um
 = 
buf
->
œ°Löe
->
löíumbî
;

1516 
énum
 = 
buf
->
t›Löe
->
löíumbî
;

1517 
Œnum
 = 
buf
->
t›Löe
->
löíumbî
 + buf->
LINES
 - 1;

1518 i‡(
√xçage_t›löe
)

1519 
diff_n
 = 0;

1521 
diff_n
 = 
n
 - (
énum
 - 
t›
->
löíumbî
);

1522 i‡(
 um
 < 
énum
)

1523 
 um
 = 
énum
 + 
diff_n
;

1524 i‡(
 um
 > 
Œnum
)

1525 
 um
 = 
Œnum
 + 
diff_n
;

1527 
	`gŸoLöe
(
buf
, 
 um
);

1528 
	`¨øngeLöe
(
buf
);

1529 i‡(
n
 > 0) {

1530 i‡(
buf
->
cuºítLöe
->
bpos
 &&

1531 
buf
->
cuºítLöe
->
bwidth
 >buf->
cuºítCﬁumn
 + buf->
visuÆpos
)

1532 
	`curs‹Down
(
buf
, 1);

1534 
buf
->
cuºítLöe
->
√xt
 && buf->cuºítLöe->√xt->
bpos
 &&

1535 
buf
->
cuºítLöe
->
bwidth
 + buf->cuºítLöe->
width
 <

1536 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1537 
	`curs‹Down0
(
buf
, 1);

1541 i‡(
buf
->
cuºítLöe
->
bwidth
 + buf->cuºítLöe->
width
 <

1542 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1543 
	`curs‹Up
(
buf
, 1);

1545 
buf
->
cuºítLöe
->
¥ev
 && buf->cuºítLöe->
bpos
 &&

1546 
buf
->
cuºítLöe
->
bwidth
 >=

1547 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1548 
	`curs‹Up0
(
buf
, 1);

1551 
	`di•œyBuf„r
(
buf
, 
mode
);

1552 
	}
}

1555 
DEFUN
(
pgF‹e
, 
NEXT_PAGE
, "MoveÅoÇextÖage")

1557 i‡(
	gvi_¥ec_num
)

1558 
ns¸ﬁl
(
£¨chKeyNum
(Ë* (
Cuºítbuf
->
LINES
 - 1), 
B_NORMAL
);

1560 
ns¸ﬁl
(
¥ec_num
 ? 
£¨chKeyNum
() : searchKeyNum()

1561 * (
Cuºítbuf
->
LINES
 - 1), 
¥ec_num
 ? 
B_SCROLL
 : 
B_NORMAL
);

1565 
DEFUN
(
pgBack
, 
PREV_PAGE
, "MoveÅoÖreviousÖage")

1567 i‡(
	gvi_¥ec_num
)

1568 
ns¸ﬁl
(-
£¨chKeyNum
(Ë* (
Cuºítbuf
->
LINES
 - 1), 
B_NORMAL
);

1570 
ns¸ﬁl
(-(
¥ec_num
 ? 
£¨chKeyNum
() : searchKeyNum()

1571 * (
Cuºítbuf
->
LINES
 - 1)), 
¥ec_num
 ? 
B_SCROLL
 : 
B_NORMAL
);

1575 
DEFUN
(
lup1
, 
UP
, "Scroll up oneÜine")

1577 
ns¸ﬁl
(
£¨chKeyNum
(), 
B_SCROLL
);

1581 
DEFUN
(
ldown1
, 
DOWN
, "Scroll down oneÜine")

1583 
ns¸ﬁl
(-
£¨chKeyNum
(), 
B_SCROLL
);

1587 
DEFUN
(
˘rC§V
, 
CENTER_V
, "MoveÅoÅhe center column")

1589 
	goff£ty
;

1590 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1592 
	goff£ty
 = 
Cuºítbuf
->
LINES
 / 2 - Cuºítbuf->
curs‹Y
;

1593 i‡(
	goff£ty
 != 0) {

1595 
Cuºítbuf
->
cuºítLöe
 = 
löeSkù
(Currentbuf,

1596 
Cuºítbuf
->
cuºítLöe
, 
off£ty
,

1597 
FALSE
);

1599 
	gCuºítbuf
->
	gt›Löe
 =

1600 
löeSkù
(
Cuºítbuf
, Cuºítbuf->
t›Löe
, -
off£ty
, 
FALSE
);

1601 
¨øngeLöe
(
Cuºítbuf
);

1602 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1606 
DEFUN
(
˘rC§H
, 
CENTER_H
, "MoveÅoÅhe centerÜine")

1608 
	goff£tx
;

1609 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1611 
	goff£tx
 = 
Cuºítbuf
->
curs‹X
 - Cuºítbuf->
COLS
 / 2;

1612 i‡(
	goff£tx
 != 0) {

1613 
cﬁumnSkù
(
Cuºítbuf
, 
off£tx
);

1614 
¨øngeCurs‹
(
Cuºítbuf
);

1615 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1620 
DEFUN
(
rdrwSc
, 
REDRAW
, "Redraw screen")

1622 
˛ór
();

1623 
¨øngeCurs‹
(
Cuºítbuf
);

1624 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1628 
	$˛ór_m¨k
(
Löe
 *
l
)

1630 
pos
;

1631 i‡(!
l
)

1633 
pos
 = 0;Öo†< 
l
->
size
;Öos++)

1634 
l
->
¥›Buf
[
pos
] &~
PE_MARK
;

1635 
	}
}

1639 
§chc‹e
(*vﬁ©ûê
°r
, (*
func
Ë(
Buf„r
 *, *))

1641 
	`MySig«lH™dÀr
(*
¥evå≠
) ();

1642 vﬁ©ûê
i
, 
ªsu…
 = 
SR_NOTFOUND
;

1644 i‡(
°r
 !
NULL
 && så !
SórchSåög
)

1645 
SórchSåög
 = 
°r
;

1646 i‡(
SórchSåög
 =
NULL
 || *SearchString == '\0')

1647  
SR_NOTFOUND
;

1649 
°r
 = 
	`c⁄v_£¨ch_°rög
(
SórchSåög
, 
Di•œyCh¨£t
);

1650 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
ötTøp
);

1651 
	`¸mode
();

1652 i‡(
	`SETJMP
(
I¡Rëu∫
) == 0) {

1653 
i
 = 0; i < 
PREC_NUM
; i++) {

1654 
ªsu…
 = 
	`func
(
Cuºítbuf
, 
°r
);

1655 i‡(
i
 < 
PREC_NUM
 - 1 && 
ªsu…
 & 
SR_FOUND
)

1656 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1659 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1660 
	`ãrm_øw
();

1661  
ªsu…
;

1662 
	}
}

1665 
	$di•_§chªsu…
(
ªsu…
, *
¥om±
, *
°r
)

1667 i‡(
°r
 =
NULL
)

1668 
°r
 = "";

1669 i‡(
ªsu…
 & 
SR_NOTFOUND
)

1670 
	`di•_mesßge
(
	`S¥ötf
("NŸ found: %s", 
°r
)->
±r
, 
TRUE
);

1671 i‡(
ªsu…
 & 
SR_WRAPPED
)

1672 
	`di•_mesßge
(
	`S¥ötf
("Sórch wøµed: %s", 
°r
)->
±r
, 
TRUE
);

1673 i‡(
show_§ch_°r
)

1674 
	`di•_mesßge
(
	`S¥ötf
("%s%s", 
¥om±
, 
°r
)->
±r
, 
TRUE
);

1675 
	}
}

1678 
	$di•öc§ch
(
ch
, 
Så
 
buf
, 
Löïr›
 *
¥›
)

1680 
Buf„r
 
sbuf
;

1681 
Löe
 *
cuºítLöe
;

1682 
pos
;

1683 *
°r
;

1684 
do_√xt_£¨ch
 = 
FALSE
;

1686 i‡(
ch
 =0 && 
buf
 =
NULL
) {

1687 
	`SAVE_BUFPOSITION
(&
sbuf
);

1688 
cuºítLöe
 = 
sbuf
.currentLine;

1689 
pos
 = 
sbuf
.pos;

1693 
°r
 = 
buf
->
±r
;

1694 
ch
) {

1696 
£¨chRoutöe
 = 
backw¨dSórch
;

1697 
do_√xt_£¨ch
 = 
TRUE
;

1700 
£¨chRoutöe
 = 
f‹w¨dSórch
;

1701 
do_√xt_£¨ch
 = 
TRUE
;

1704 #ifde‡
USE_MIGEMO


1706 
migemo_a˘ive
 = -migemo_active;

1707 
d⁄e
;

1711 i‡(
ch
 >= 0)

1712  
ch
;

1715 i‡(
do_√xt_£¨ch
) {

1716 i‡(*
°r
) {

1717 i‡(
£¨chRoutöe
 =
f‹w¨dSórch
)

1718 
Cuºítbuf
->
pos
 += 1;

1719 
	`SAVE_BUFPOSITION
(&
sbuf
);

1720 i‡(
	`§chc‹e
(
°r
, 
£¨chRoutöe
Ë=
SR_NOTFOUND


1721 && 
£¨chRoutöe
 =
f‹w¨dSórch
) {

1722 
Cuºítbuf
->
pos
 -= 1;

1723 
	`SAVE_BUFPOSITION
(&
sbuf
);

1725 
	`¨øngeCurs‹
(
Cuºítbuf
);

1726 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1727 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1733 i‡(*
°r
) {

1734 
	`RESTORE_BUFPOSITION
(&
sbuf
);

1735 
	`¨øngeCurs‹
(
Cuºítbuf
);

1736 
	`§chc‹e
(
°r
, 
£¨chRoutöe
);

1737 
	`¨øngeCurs‹
(
Cuºítbuf
);

1738 
cuºítLöe
 = 
Cuºítbuf
->currentLine;

1739 
pos
 = 
Cuºítbuf
->pos;

1741 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1742 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1743 #ifde‡
USE_MIGEMO


1744 
d⁄e
:

1745 *
°r
++ != '\0') {

1746 i‡(
migemo_a˘ive
 > 0)

1747 *
¥›
++ |
PE_UNDER
;

1749 *
¥›
++ &~
PE_UNDER
;

1753 
	}
}

1756 
i§ch
((*
func
Ë(
Buf„r
 *, *), *
¥om±
)

1758 *
°r
;

1759 
Buf„r
 
sbuf
;

1760 
	`SAVE_BUFPOSITION
(&
sbuf
);

1761 
	`di•öc§ch
(0, 
NULL
, NULL);

1763 
£¨chRoutöe
 = 
func
;

1764 
°r
 = 
	`öputLöeHi°Sórch
(
¥om±
, 
NULL
, 
IN_STRING
, 
TextHi°
, 
di•öc§ch
);

1765 i‡(
°r
 =
NULL
) {

1766 
	`RESTORE_BUFPOSITION
(&
sbuf
);

1768 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1769 
	}
}

1772 
§ch
((*
func
Ë(
Buf„r
 *, *), *
¥om±
)

1774 *
°r
;

1775 
ªsu…
;

1776 
di•
 = 
FALSE
;

1777 
pos
;

1779 
°r
 = 
	`£¨chKeyD©a
();

1780 i‡(
°r
 =
NULL
 || *str == '\0') {

1781 
°r
 = 
	`öputSåHi°
(
¥om±
, 
NULL
, 
TextHi°
);

1782 i‡(
°r
 !
NULL
 && *str == '\0')

1783 
°r
 = 
SórchSåög
;

1784 i‡(
°r
 =
NULL
) {

1785 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1788 
di•
 = 
TRUE
;

1790 
pos
 = 
Cuºítbuf
->pos;

1791 i‡(
func
 =
f‹w¨dSórch
)

1792 
Cuºítbuf
->
pos
 += 1;

1793 
ªsu…
 = 
	`§chc‹e
(
°r
, 
func
);

1794 i‡(
ªsu…
 & 
SR_FOUND
)

1795 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1797 
Cuºítbuf
->
pos
 =Öos;

1798 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1799 i‡(
di•
)

1800 
	`di•_§chªsu…
(
ªsu…
, 
¥om±
, 
°r
);

1801 
£¨chRoutöe
 = 
func
;

1802 
	}
}

1806 
DEFUN
(
§chf‹
, 
SEARCH
 
SEARCH_FORE
 
WHEREIS
, "Search forward")

1808 
§ch
(
f‹w¨dSórch
, "Forward: ");

1811 
DEFUN
(
i§chf‹
, 
ISEARCH
, "Incremental search forward")

1813 
i§ch
(
f‹w¨dSórch
, "I-search: ");

1818 
DEFUN
(
§chbak
, 
SEARCH_BACK
, "Search backward")

1820 
§ch
(
backw¨dSórch
, "Backward: ");

1823 
DEFUN
(
i§chbak
, 
ISEARCH_BACK
, "Incremental search backward")

1825 
i§ch
(
backw¨dSórch
, "I-search backward: ");

1829 
	$§ch_nxçrv
(
ªvî£
)

1831 
ªsu…
;

1833 (*
routöe
[2]Ë(
Buf„r
 *, *) = {

1834 
f‹w¨dSórch
, 
backw¨dSórch


1838 i‡(
£¨chRoutöe
 =
NULL
) {

1840 
	`di•_mesßge
("Nÿ¥eviou†ªguœ∏ex¥essi⁄", 
TRUE
);

1843 i‡(
ªvî£
 != 0)

1844 
ªvî£
 = 1;

1845 i‡(
£¨chRoutöe
 =
backw¨dSórch
)

1846 
ªvî£
 ^= 1;

1847 i‡(
ªvî£
 == 0)

1848 
Cuºítbuf
->
pos
 += 1;

1849 
ªsu…
 = 
	`§chc‹e
(
SórchSåög
, 
routöe
[
ªvî£
]);

1850 i‡(
ªsu…
 & 
SR_FOUND
)

1851 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1852 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1853 
	`di•_§chªsu…
(
ªsu…
, (
ªvî£
 ? "Backward: " : "Forward: "),

1854 
SórchSåög
);

1855 
	}
}

1858 
DEFUN
(
§chnxt
, 
SEARCH_NEXT
, "SearchÇextÑegexp")

1860 
§ch_nxçrv
(0);

1864 
DEFUN
(
§ch¥v
, 
SEARCH_PREV
, "SearchÖreviousÑegexp")

1866 
§ch_nxçrv
(1);

1870 
	$shi·visuÆpos
(
Buf„r
 *
buf
, 
shi·
)

1872 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1873 
buf
->
visuÆpos
 -
shi·
;

1874 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 >buf->
COLS
)

1875 
buf
->
visuÆpos
 = 
l
->
bwidth
 + buf->
COLS
 - 1;

1876 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 < 0)

1877 
buf
->
visuÆpos
 = 
l
->
bwidth
;

1878 
	`¨øngeLöe
(
buf
);

1879 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 =-
shi·
 && buf->
curs‹X
 == 0)

1880 
buf
->
visuÆpos
 = 
l
->
bwidth
;

1881 
	}
}

1884 
DEFUN
(
shi·l
, 
SHIFT_LEFT
, "Shift screenÜeft")

1886 
	gcﬁumn
;

1888 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1890 
	gcﬁumn
 = 
Cuºítbuf
->
cuºítCﬁumn
;

1891 
cﬁumnSkù
(
Cuºítbuf
, 
£¨chKeyNum
(Ë* (-Cuºítbuf->
COLS
 + 1) + 1);

1892 
shi·visuÆpos
(
Cuºítbuf
, Cuºítbuf->
cuºítCﬁumn
 - 
cﬁumn
);

1893 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1897 
DEFUN
(
shi·r
, 
SHIFT_RIGHT
, "Shift screenÑight")

1899 
	gcﬁumn
;

1901 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1903 
	gcﬁumn
 = 
Cuºítbuf
->
cuºítCﬁumn
;

1904 
cﬁumnSkù
(
Cuºítbuf
, 
£¨chKeyNum
(Ë* (Cuºítbuf->
COLS
 - 1) - 1);

1905 
shi·visuÆpos
(
Cuºítbuf
, Cuºítbuf->
cuºítCﬁumn
 - 
cﬁumn
);

1906 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1909 
DEFUN
(
cﬁ1R
, 
RIGHT
, "Shift screen one columnÑight")

1911 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
;

1912 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

1913 
	gj
, 
	gcﬁumn
, 
	gn
 = 
£¨chKeyNum
();

1915 i‡(
	gl
 =
NULL
)

1917 
	gj
 = 0; j < 
	gn
; j++) {

1918 
	gcﬁumn
 = 
buf
->
cuºítCﬁumn
;

1919 
cﬁumnSkù
(
Cuºítbuf
, 1);

1920 i‡(
	gcﬁumn
 =
buf
->
cuºítCﬁumn
)

1922 
shi·visuÆpos
(
Cuºítbuf
, 1);

1924 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1927 
DEFUN
(
cﬁ1L
, 
LEFT
, "Shift screen one column")

1929 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
;

1930 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

1931 
	gj
, 
	gn
 = 
£¨chKeyNum
();

1933 i‡(
	gl
 =
NULL
)

1935 
	gj
 = 0; j < 
	gn
; j++) {

1936 i‡(
	gbuf
->
	gcuºítCﬁumn
 == 0)

1938 
cﬁumnSkù
(
Cuºítbuf
, -1);

1939 
shi·visuÆpos
(
Cuºítbuf
, -1);

1941 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1944 
DEFUN
(
£tEnv
, 
SETENV
, "SetÉnvironment variable")

1946 *
	gív
;

1947 *
	gv¨
, *
	gvÆue
;

1949 
	gCuºítKeyD©a
 = 
NULL
;

1950 
	gív
 = 
£¨chKeyD©a
();

1951 i‡(
	gív
 =
NULL
 || *
ív
 ='\0' || 
°rchr
(env, '=') == NULL) {

1952 i‡(
ív
 !
NULL
 && *env != '\0')

1953 
ív
 = 
S¥ötf
("%s=",Énv)->
	g±r
;

1954 
	gív
 = 
öputSåHi°
("SëÉnvú⁄: ", 
ív
, 
TextHi°
);

1955 i‡(
	gív
 =
NULL
 || *
ív
 == '\0') {

1956 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1960 i‡((
	gvÆue
 = 
°rchr
(
ív
, '=')Ë!
NULL
 && 
vÆue
 >Énv) {

1961 
v¨
 = 
ÆlocSå
(
ív
, 
vÆue
 -Énv);

1962 
	gvÆue
++;

1963 
£t_ívú⁄
(
v¨
, 
vÆue
);

1965 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1968 
DEFUN
(
pùeBuf
, 
PIPE_BUF
, "SendÑendered documentÅoÖipe")

1970 
Buf„r
 *
	gbuf
;

1971 *
	gcmd
, *
	gtmpf
;

1972 
FILE
 *
	gf
;

1974 
	gCuºítKeyD©a
 = 
NULL
;

1975 
	gcmd
 = 
£¨chKeyD©a
();

1976 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

1978 
cmd
 = 
öputLöeHi°
("Pùêbuf„∏to: ", "", 
IN_COMMAND
, 
ShñlHi°
);

1980 i‡(
	gcmd
 !
NULL
)

1981 
cmd
 = 
c⁄v_to_sy°em
(cmd);

1982 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

1983 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1986 
	gtmpf
 = 
tmp‚ame
(
TMPF_DFL
, 
NULL
)->
	g±r
;

1987 
	gf
 = 
f›í
(
tmpf
, "w");

1988 i‡(
	gf
 =
NULL
) {

1990 
di•_mesßge
(
S¥ötf
("C™'àßvêbuf„∏tÿ%s", 
cmd
)->
±r
, 
TRUE
);

1993 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

1994 
f˛o£
(
f
);

1995 
	gbuf
 = 
gëpùe
(
myExtComm™d
(
cmd
, 
shñl_quŸe
(
tmpf
), 
TRUE
)->
±r
);

1996 i‡(
	gbuf
 =
NULL
) {

1997 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2001 
	gbuf
->
	gfûíame
 = 
cmd
;

2002 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
PIPEBUFFERNAME
,

2003 
c⁄v_‰om_sy°em
(
cmd
))->
	g±r
;

2004 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2005 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2006 
buf
->
ty≥
 = "text/plain";

2007 
	gbuf
->
	gcuºítURL
.
	gfûe
 = "-";

2008 
pushBuf„r
(
buf
);

2010 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2014 
DEFUN
(
pùesh
, 
PIPE_SHELL
, "Execute shell commandánd browse")

2016 
Buf„r
 *
	gbuf
;

2017 *
	gcmd
;

2019 
	gCuºítKeyD©a
 = 
NULL
;

2020 
	gcmd
 = 
£¨chKeyD©a
();

2021 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2022 
cmd
 = 
öputLöeHi°
("‘ód shñl[pùe])!", "", 
IN_COMMAND
, 
ShñlHi°
);

2024 i‡(
	gcmd
 !
NULL
)

2025 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2026 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2027 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2030 
	gbuf
 = 
gëpùe
(
cmd
);

2031 i‡(
	gbuf
 =
NULL
) {

2032 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2036 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2037 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2038 
buf
->
ty≥
 = "text/plain";

2039 
pushBuf„r
(
buf
);

2041 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2045 
DEFUN
(
ªadsh
, 
READ_SHELL
, "Execute shell commandándÜoad")

2047 
Buf„r
 *
	gbuf
;

2048 
MySig«lH™dÀr
(*
¥evå≠
) ();

2049 *
	gcmd
;

2051 
	gCuºítKeyD©a
 = 
NULL
;

2052 
	gcmd
 = 
£¨chKeyD©a
();

2053 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2054 
cmd
 = 
öputLöeHi°
("‘ód shñl)!", "", 
IN_COMMAND
, 
ShñlHi°
);

2056 i‡(
	gcmd
 !
NULL
)

2057 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2058 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2059 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2062 
	g¥evå≠
 = 
mySig«l
(
SIGINT
, 
ötTøp
);

2063 
¸mode
();

2064 
	gbuf
 = 
gëshñl
(
cmd
);

2065 
mySig«l
(
SIGINT
, 
¥evå≠
);

2066 
ãrm_øw
();

2067 i‡(
	gbuf
 =
NULL
) {

2069 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2073 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2074 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2075 
buf
->
ty≥
 = "text/plain";

2076 
pushBuf„r
(
buf
);

2078 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2082 
DEFUN
(
execsh
, 
EXEC_SHELL
 
SHELL
, "Execute shell command")

2084 *
	gcmd
;

2086 
	gCuºítKeyD©a
 = 
NULL
;

2087 
	gcmd
 = 
£¨chKeyD©a
();

2088 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2089 
cmd
 = 
öputLöeHi°
("”xe¯shñl)!", "", 
IN_COMMAND
, 
ShñlHi°
);

2091 i‡(
	gcmd
 !
NULL
)

2092 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2093 i‡(
	gcmd
 !
NULL
 && *
cmd
 != '\0') {

2094 
fmTîm
();

2095 
¥ötf
("\n");

2096 
sy°em
(
cmd
);

2098 
¥ötf
("\n[Hitány key]");

2099 
fÊush
(
°dout
);

2100 
fmInô
();

2101 
gëch
();

2103 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2107 
DEFUN
(
ldfûe
, 
LOAD
, "LoadÜocal file")

2109 *
	g‚
;

2111 
	g‚
 = 
£¨chKeyD©a
();

2112 i‡(
	g‚
 =
NULL
 || *
‚
 == '\0') {

2114 
‚
 = 
öputFûíameHi°
("(Lﬂd)Fûíame? ", 
NULL
, 
LﬂdHi°
);

2116 i‡(
	g‚
 !
NULL
)

2117 
‚
 = 
c⁄v_to_sy°em
(fn);

2118 i‡(
	g‚
 =
NULL
 || *
‚
 == '\0') {

2119 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2122 
cmd_lﬂdfûe
(
‚
);

2126 
DEFUN
(
ldhñp
, 
HELP
, "View help")

2128 #ifde‡
USE_HELP_CGI


2129 *
	gœng
;

2130 
	gn
;

2131 
Så
 
	gtmp
;

2133 
	gœng
 = 
Ac˚±L™g
;

2134 
	gn
 = 
°rc•n
(
œng
, ";, \t");

2135 
	gtmp
 = 
S¥ötf
("fûe:///$LIB/" 
HELP_CGI
 
CGI_EXTENSION
 "?version=%s&lang=%s",

2136 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w3m_vîsi⁄
))->
±r
,

2137 
Så_f‹m_quŸe
(
Så√w_ch¨p_n
(
œng
, 
n
))->
±r
);

2138 
cmd_lﬂdURL
(
tmp
->
±r
, 
NULL
, 
NO_REFERER
, NULL);

2140 
cmd_lﬂdURL
(
hñpFûe
(
HELP_FILE
), 
NULL
, 
NO_REFERER
, NULL);

2145 
	$cmd_lﬂdfûe
(*
‚
)

2147 
Buf„r
 *
buf
;

2149 
buf
 = 
	`lﬂdGíîÆFûe
(
	`fûe_to_uæ
(
‚
), 
NULL
, 
NO_REFERER
, 0, NULL);

2150 i‡(
buf
 =
NULL
) {

2152 *
emsg
 = 
	`S¥ötf
("%†nŸ found", 
	`c⁄v_‰om_sy°em
(
‚
))->
±r
;

2153 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

2155 i‡(
buf
 !
NO_BUFFER
) {

2156 
	`pushBuf„r
(
buf
);

2157 i‡(
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

2158 
	`rFøme
();

2160 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2161 
	}
}

2165 
	$_movL
(
n
)

2167 
i
, 
m
 = 
	`£¨chKeyNum
();

2168 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2170 
i
 = 0; i < 
m
; i++)

2171 
	`curs‹Le·
(
Cuºítbuf
, 
n
);

2172 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2173 
	}
}

2175 
DEFUN
(
movL
, 
MOVE_LEFT
,

2178 
_movL
(
Cuºítbuf
->
COLS
 / 2);

2181 
DEFUN
(
movL1
, 
MOVE_LEFT1
, "Move cursorÜeft (1 columns shiftátÅheÜeftÉdge)")

2183 
_movL
(1);

2188 
	$_movD
(
n
)

2190 
i
, 
m
 = 
	`£¨chKeyNum
();

2191 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2193 
i
 = 0; i < 
m
; i++)

2194 
	`curs‹Down
(
Cuºítbuf
, 
n
);

2195 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2196 
	}
}

2198 
DEFUN
(
movD
, 
MOVE_DOWN
,

2201 
_movD
((
Cuºítbuf
->
LINES
 + 1) / 2);

2204 
DEFUN
(
movD1
, 
MOVE_DOWN1
,

2207 
_movD
(1);

2212 
	$_movU
(
n
)

2214 
i
, 
m
 = 
	`£¨chKeyNum
();

2215 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2217 
i
 = 0; i < 
m
; i++)

2218 
	`curs‹Up
(
Cuºítbuf
, 
n
);

2219 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2220 
	}
}

2222 
DEFUN
(
movU
, 
MOVE_UP
,

2225 
_movU
((
Cuºítbuf
->
LINES
 + 1) / 2);

2228 
DEFUN
(
movU1
, 
MOVE_UP1
, "Move cursor up (1Üine scrolátÅheÅop of screen)")

2230 
_movU
(1);

2235 
	$_movR
(
n
)

2237 
i
, 
m
 = 
	`£¨chKeyNum
();

2238 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2240 
i
 = 0; i < 
m
; i++)

2241 
	`curs‹Right
(
Cuºítbuf
, 
n
);

2242 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2243 
	}
}

2245 
DEFUN
(
movR
, 
MOVE_RIGHT
,

2248 
_movR
(
Cuºítbuf
->
COLS
 / 2);

2251 
DEFUN
(
movR1
, 
MOVE_RIGHT1
,

2254 
_movR
(1);

2262 
	#IS_WORD_CHAR
(
c
,
p
Ë(
	`IS_ALNUM
(cË&& 
	`Ch¨Ty≥
’Ë=
PC_ASCII
)

	)

2265 
	$¥ev_n⁄nuŒ_löe
(
Löe
 *
löe
)

2267 
Löe
 *
l
;

2269 
l
 = 
löe
;Ü !
NULL
 &&Ü->
Àn
 =0;Ü =Ü->
¥ev
) ;

2270 i‡(
l
 =
NULL
 ||Ü->
Àn
 == 0)

2273 
Cuºítbuf
->
cuºítLöe
 = 
l
;

2274 i‡(
l
 !
löe
)

2275 
Cuºítbuf
->
pos
 = Cuºítbuf->
cuºítLöe
->
Àn
;

2277 
	}
}

2279 
DEFUN
(
movLW
, 
PREV_WORD
, "MoveÅoÖrevious word")

2281 *
	glb
;

2282 
Löïr›
 *
	gpb
;

2283 
Löe
 *
	g∂öe
;

2284 
	gµos
;

2285 
	gi
, 
	gn
 = 
£¨chKeyNum
();

2287 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2290 
	gi
 = 0; i < 
	gn
; i++) {

2291 
	g∂öe
 = 
Cuºítbuf
->
cuºítLöe
;

2292 
	gµos
 = 
Cuºítbuf
->
pos
;

2294 i‡(
¥ev_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
) < 0)

2295 
	gíd
;

2298 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2299 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2300 
	gCuºítbuf
->
	gpos
 > 0 &&

2301 !
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
 - 1],

2302 
pb
[
Cuºítbuf
->
pos
 - 1])) {

2303 
	gCuºítbuf
->
	gpos
--;

2305 i‡(
	gCuºítbuf
->
	gpos
 > 0)

2307 i‡(
¥ev_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
->
¥ev
) < 0) {

2308 
	gCuºítbuf
->
	gcuºítLöe
 = 
∂öe
;

2309 
	gCuºítbuf
->
	gpos
 = 
µos
;

2310 
	gíd
;

2312 
	gCuºítbuf
->
	gpos
 = 
Cuºítbuf
->
cuºítLöe
->
Àn
;

2315 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2316 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2317 
	gCuºítbuf
->
	gpos
 > 0 &&

2318 
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
 - 1],

2319 
pb
[
Cuºítbuf
->
pos
 - 1])) {

2320 
	gCuºítbuf
->
	gpos
--;

2323 
	gíd
:

2324 
¨øngeCurs‹
(
Cuºítbuf
);

2325 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2329 
	$√xt_n⁄nuŒ_löe
(
Löe
 *
löe
)

2331 
Löe
 *
l
;

2333 
l
 = 
löe
;Ü !
NULL
 &&Ü->
Àn
 =0;Ü =Ü->
√xt
) ;

2335 i‡(
l
 =
NULL
 ||Ü->
Àn
 == 0)

2338 
Cuºítbuf
->
cuºítLöe
 = 
l
;

2339 i‡(
l
 !
löe
)

2340 
Cuºítbuf
->
pos
 = 0;

2342 
	}
}

2344 
DEFUN
(
movRW
, 
NEXT_WORD
, "MoveÅoÇext word")

2346 *
	glb
;

2347 
Löïr›
 *
	gpb
;

2348 
Löe
 *
	g∂öe
;

2349 
	gµos
;

2350 
	gi
, 
	gn
 = 
£¨chKeyNum
();

2352 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2355 
	gi
 = 0; i < 
	gn
; i++) {

2356 
	g∂öe
 = 
Cuºítbuf
->
cuºítLöe
;

2357 
	gµos
 = 
Cuºítbuf
->
pos
;

2359 i‡(
√xt_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
) < 0)

2360 
	gíd
;

2362 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2363 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2365 
	glb
[
Cuºítbuf
->
pos
] &&

2366 
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
], 
pb
[Currentbuf->pos]))

2367 
	gCuºítbuf
->
	gpos
++;

2370 
	glb
[
Cuºítbuf
->
pos
] &&

2371 !
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
], 
pb
[Currentbuf->pos]))

2372 
	gCuºítbuf
->
	gpos
++;

2373 i‡(
	glb
[
Cuºítbuf
->
pos
])

2375 i‡(
√xt_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
->
√xt
) < 0) {

2376 
	gCuºítbuf
->
	gcuºítLöe
 = 
∂öe
;

2377 
	gCuºítbuf
->
	gpos
 = 
µos
;

2378 
	gíd
;

2380 
	gCuºítbuf
->
	gpos
 = 0;

2381 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2382 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2385 
	gíd
:

2386 
¨øngeCurs‹
(
Cuºítbuf
);

2387 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2391 
	$_quôfm
(
c⁄fúm
)

2393 *
™s
 = "y";

2395 i‡(
	`checkDow∆ﬂdLi°
())

2397 
™s
 = 
	`öputCh¨
("DownloadÖrocessÑetains. "

2399 i‡(
c⁄fúm
)

2401 
™s
 = 
	`öputCh¨
("Do you wantÅoÉxit w3m? (y/n)");

2402 i‡(!(
™s
 && 
	`TOLOWER
(*ans) == 'y')) {

2403 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2407 
	`ãrm_tôÀ
("");

2408 #ifde‡
USE_IMAGE


2409 i‡(
a˘iveImage
)

2410 
	`ãrmImage
();

2412 
	`fmTîm
();

2413 #ifde‡
USE_COOKIE


2414 
	`ßve_cookõs
();

2416 #ifde‡
USE_HISTORY


2417 i‡(
U£Hi°‹y
 && 
SaveURLHi°
)

2418 
	`ßveHi°‹y
(
URLHi°
, 
URLHi°Size
);

2420 
	`w3m_exô
(0);

2421 
	}
}

2424 
DEFUN
(
quôfm
, 
ABORT
 
EXIT
, "Quit w3m without confirmation")

2426 
_quôfm
(
FALSE
);

2430 
DEFUN
(
qquôfm
, 
QUIT
, "Quit w3m")

2432 
_quôfm
(
c⁄fúm_⁄_quô
);

2436 
DEFUN
(
£lBuf
, 
SELECT
, "GoÅo buffer selectionÖanel")

2438 
Buf„r
 *
	gbuf
;

2439 
	gok
;

2440 
	gcmd
;

2442 
	gok
 = 
FALSE
;

2444 
	gbuf
 = 
£À˘Buf„r
(
Fú°buf
, 
Cuºítbuf
, &
cmd
);

2445 
	gcmd
) {

2447 
ok
 = 
TRUE
;

2451 
Cuºítbuf
 = 
buf
;

2452 
	gok
 = 
TRUE
;

2455 
dñBuf„r
(
buf
);

2456 i‡(
	gFú°buf
 =
NULL
) {

2458 
Fú°buf
 = 
nuŒBuf„r
();

2459 
	gCuºítbuf
 = 
Fú°buf
;

2463 
qquôfm
();

2466 
quôfm
();

2469 } !
	gok
);

2471 
	gbuf
 = 
Fú°buf
; bu‡!
NULL
; bu‡
buf
->
√xtBuf„r
) {

2472 i‡(
buf
 =
Cuºítbuf
)

2474 #ifde‡
USE_IMAGE


2475 
dñëeImage
(
buf
);

2477 i‡(
	g˛ór_buf„r
)

2478 
tmpCÀ¨Buf„r
(
buf
);

2480 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2484 
DEFUN
(
su•
, 
INTERRUPT
 
SUSPEND
, "StopÜoading document")

2486 #i‚de‡
SIGSTOP


2487 *
	gshñl
;

2489 
move
(
LASTLINE
, 0);

2490 
˛π€ﬁx
();

2491 
ª‰esh
();

2492 
fmTîm
();

2493 #i‚de‡
SIGSTOP


2494 
	gshñl
 = 
gëív
("SHELL");

2495 i‡(
	gshñl
 =
NULL
)

2496 
shñl
 = "/bin/sh";

2497 
sy°em
(
shñl
);

2499 
kûl
((
pid_t
Ë0, 
SIGSTOP
);

2501 
fmInô
();

2502 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2507 
	$_goLöe
(*
l
)

2509 i‡(
l
 =
NULL
 || *»='\0' || 
Cuºítbuf
->
cuºítLöe
 == NULL) {

2510 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2513 
Cuºítbuf
->
pos
 = 0;

2514 i‡(((*
l
 ='^'Ë|| (*»='$')Ë&& 
¥ec_num
) {

2515 
	`gŸoRólLöe
(
Cuºítbuf
, 
¥ec_num
);

2517 i‡(*
l
 == '^') {

2518 
Cuºítbuf
->
t›Löe
 = Cuºítbuf->
cuºítLöe
 = Cuºítbuf->
fú°Löe
;

2520 i‡(*
l
 == '$') {

2521 
Cuºítbuf
->
t›Löe
 =

2522 
	`löeSkù
(
Cuºítbuf
, Cuºítbuf->
œ°Löe
,

2523 -(
Cuºítbuf
->
LINES
 + 1Ë/ 2, 
TRUE
);

2524 
Cuºítbuf
->
cuºítLöe
 = Cuºítbuf->
œ°Löe
;

2527 
	`gŸoRólLöe
(
Cuºítbuf
, 
	`©oi
(
l
));

2528 
	`¨øngeCurs‹
(
Cuºítbuf
);

2529 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2530 
	}
}

2532 
DEFUN
(
goLöe
, 
GOTO_LINE
, "GoÅo specifiedÜine")

2535 *
	g°r
 = 
£¨chKeyD©a
();

2536 i‡(
	g¥ec_num
)

2537 
_goLöe
("^");

2538 i‡(
	g°r
)

2539 
_goLöe
(
°r
);

2542 
_goLöe
(
öputSå
("GotoÜine: ", ""));

2546 
DEFUN
(
goLöeF
, 
BEGIN
, "GoÅoÅhe firstÜine")

2548 
_goLöe
("^");

2551 
DEFUN
(
goLöeL
, 
END
, "GoÅoÅheÜastÜine")

2553 
_goLöe
("$");

2557 
DEFUN
(
löbeg
, 
LINE_BEGIN
, "GoÅoÅhe beginning ofÜine")

2559 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2561 
	gCuºítbuf
->
	gcuºítLöe
->
	g¥ev
 && Cuºítbuf->cuºítLöe->
	gbpos
)

2562 
curs‹Up0
(
Cuºítbuf
, 1);

2563 
	gCuºítbuf
->
	gpos
 = 0;

2564 
¨øngeCurs‹
(
Cuºítbuf
);

2565 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2569 
DEFUN
(
löíd
, 
LINE_END
, "GoÅoÅheÉnd ofÜine")

2571 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2573 
	gCuºítbuf
->
	gcuºítLöe
->
	g√xt


2574 && 
	gCuºítbuf
->
	gcuºítLöe
->
	g√xt
->
	gbpos
)

2575 
curs‹Down0
(
Cuºítbuf
, 1);

2576 
	gCuºítbuf
->
	gpos
 = 
Cuºítbuf
->
cuºítLöe
->
Àn
 - 1;

2577 
¨øngeCurs‹
(
Cuºítbuf
);

2578 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2582 
	$cur_ªÆ_löíumbî
(
Buf„r
 *
buf
)

2584 
Löe
 *
l
, *
cur
 = 
buf
->
cuºítLöe
;

2585 
n
;

2587 i‡(!
cur
)

2589 
n
 = 
cur
->
ªÆ_löíumbî
 ? cur->real_linenumber : 1;

2590 
l
 = 
buf
->
fú°Löe
;Ü &&Ü !
cur
 &&Ü->
ªÆ_löíumbî
 =0;Ü =Ü->
√xt
) {

2591 i‡(
l
->
bpos
 == 0)

2592 
n
++;

2594  
n
;

2595 
	}
}

2598 
DEFUN
(
edôBf
, 
EDIT
, "Edit current document")

2600 *
	g‚
 = 
Cuºítbuf
->
fûíame
;

2601 
Så
 
	gcmd
;

2603 i‡(
	g‚
 =
NULL
 || 
Cuºítbuf
->
∑gîSour˚
 != NULL ||

2604 (
Cuºítbuf
->
ty≥
 =
NULL
 && Cuºítbuf->
edô
 == NULL) ||

2605 
Cuºítbuf
->
ªÆ_scheme
 !
SCM_LOCAL
 || !
°rcmp
(Cuºítbuf->
cuºítURL
.
fûe
, "-") ||

2606 
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_FRAME
) {

2607 
di•_îr_mesßge
("C™'àedô othîÅh™Üoˇ»fûe", 
TRUE
);

2610 i‡(
	gCuºítbuf
->
	gedô
)

2611 
	gcmd
 = 
unquŸe_maûˇp
(
Cuºítbuf
->
edô
, Cuºítbuf->
ªÆ_ty≥
, 
‚
,

2612 
checkHódî
(
Cuºítbuf
, "C⁄ã¡-Ty≥:"), 
NULL
);

2614 
	gcmd
 = 
myEdô‹
(
Edô‹
, 
shñl_quŸe
(
‚
),

2615 
cur_ªÆ_löíumbî
(
Cuºítbuf
));

2616 
fmTîm
();

2617 
sy°em
(
cmd
->
±r
);

2618 
fmInô
();

2620 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2621 
ªlﬂd
();

2625 
DEFUN
(
edôS¸
, 
EDIT_SCREEN
, "Edit currentlyÑendered document")

2627 *
	gtmpf
;

2628 
FILE
 *
	gf
;

2630 
	gtmpf
 = 
tmp‚ame
(
TMPF_DFL
, 
NULL
)->
	g±r
;

2631 
	gf
 = 
f›í
(
tmpf
, "w");

2632 i‡(
	gf
 =
NULL
) {

2634 
di•_îr_mesßge
(
S¥ötf
("C™'à›í %s", 
tmpf
)->
±r
, 
TRUE
);

2637 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

2638 
f˛o£
(
f
);

2639 
fmTîm
();

2640 
sy°em
(
myEdô‹
(
Edô‹
, 
shñl_quŸe
(
tmpf
),

2641 
cur_ªÆ_löíumbî
(
Cuºítbuf
))->
±r
);

2642 
fmInô
();

2643 
u∆ök
(
tmpf
);

2644 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2647 #ifde‡
USE_MARK


2650 
DEFUN
(
_m¨k
, 
MARK
, "Set/unset mark")

2652 
Löe
 *
	gl
;

2653 i‡(!
	gu£_m¨k
)

2655 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2657 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2658 
	gl
->
	g¥›Buf
[
Cuºítbuf
->
pos
] ^
PE_MARK
;

2659 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2663 
DEFUN
(
√xtMk
, 
NEXT_MARK
, "MoveÅoÇext word")

2665 
Löe
 *
	gl
;

2666 
	gi
;

2668 i‡(!
	gu£_m¨k
)

2670 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2672 
	gi
 = 
Cuºítbuf
->
pos
 + 1;

2673 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2674 i‡(
	gi
 >
l
->
Àn
) {

2675 
i
 = 0;

2676 
	gl
 = 
l
->
√xt
;

2678 
	gl
 !
NULL
) {

2679 ; 
	gi
 < 
	gl
->
	gÀn
; i++) {

2680 i‡(
	gl
->
	g¥›Buf
[
i
] & 
	gPE_MARK
) {

2681 
	gCuºítbuf
->
	gcuºítLöe
 = 
l
;

2682 
	gCuºítbuf
->
	gpos
 = 
i
;

2683 
¨øngeCurs‹
(
Cuºítbuf
);

2684 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2688 
	gl
 = 
l
->
√xt
;

2689 
	gi
 = 0;

2692 
di•_mesßge
("Nÿm¨kÉxi°á·î hîe", 
TRUE
);

2696 
DEFUN
(
¥evMk
, 
PREV_MARK
, "MoveÅoÖrevious mark")

2698 
Löe
 *
	gl
;

2699 
	gi
;

2701 i‡(!
	gu£_m¨k
)

2703 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2705 
	gi
 = 
Cuºítbuf
->
pos
 - 1;

2706 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2707 i‡(
	gi
 < 0) {

2708 
	gl
 = 
l
->
¥ev
;

2709 i‡(
	gl
 !
NULL
)

2710 
i
 = 
l
->
Àn
 - 1;

2712 
	gl
 !
NULL
) {

2713 ; 
	gi
 >= 0; i--) {

2714 i‡(
	gl
->
	g¥›Buf
[
i
] & 
	gPE_MARK
) {

2715 
	gCuºítbuf
->
	gcuºítLöe
 = 
l
;

2716 
	gCuºítbuf
->
	gpos
 = 
i
;

2717 
¨øngeCurs‹
(
Cuºítbuf
);

2718 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2722 
	gl
 = 
l
->
¥ev
;

2723 i‡(
	gl
 !
NULL
)

2724 
i
 = 
l
->
Àn
 - 1;

2727 
di•_mesßge
("Nÿm¨kÉxi° bef‹êhîe", 
TRUE
);

2731 
DEFUN
(
ªM¨k
, 
REG_MARK
, "Set mark usingÑegexp")

2733 
Löe
 *
	gl
;

2734 *
	g°r
;

2735 *
	gp
, *
	gp1
, *
	gp2
;

2737 i‡(!
	gu£_m¨k
)

2739 
	g°r
 = 
£¨chKeyD©a
();

2740 i‡(
	g°r
 =
NULL
 || *
°r
 == '\0') {

2741 
°r
 = 
öputSåHi°
("(M¨k)Regexp: ", 
M¨kSåög
, 
TextHi°
);

2742 i‡(
	g°r
 =
NULL
 || *
°r
 == '\0') {

2743 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2747 
	g°r
 = 
c⁄v_£¨ch_°rög
(
°r
, 
Di•œyCh¨£t
);

2748 i‡((
	g°r
 = 
ªgexCompûe
(
°r
, 1)Ë!
NULL
) {

2749 
di•_mesßge
(
°r
, 
TRUE
);

2752 
	gM¨kSåög
 = 
°r
;

2753 
	gl
 = 
Cuºítbuf
->
fú°Löe
;Ü !
NULL
;Ü = 
l
->
√xt
) {

2754 
p
 = 
l
->
löeBuf
;

2756 i‡(
ªgexM©ch
(
p
, &
l
->
löeBuf
[l->
Àn
] -Ö,Ö ==Ü->lineBuf) == 1) {

2757 
m©chedPosôi⁄
(&
p1
, &
p2
);

2758 
	gl
->
	g¥›Buf
[
p1
 - 
l
->
löeBuf
] |
PE_MARK
;

2759 
	gp
 = 
p2
;

2766 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2770 
Buf„r
 *

2771 
	$lﬂdN‹mÆBuf
(
Buf„r
 *
buf
, 
ªndî‰ame
)

2773 
	`pushBuf„r
(
buf
);

2774 i‡(
ªndî‰ame
 && 
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

2775 
	`rFøme
();

2776  
buf
;

2777 
	}
}

2779 
Buf„r
 *

2780 
	$lﬂdLök
(*
uæ
, *
èrgë
, *
ª„ªr
, 
F‹mLi°
 *
ªque°
)

2782 
Buf„r
 *
buf
, *
nfbuf
;

2783 
‰ame£t_ñemít
 *
f_ñemít
 = 
NULL
;

2784 
Êag
 = 0;

2785 
P¨£dURL
 *
ba£
, 
pu
;

2787 
	`mesßge
(
	`S¥ötf
("lﬂdög %s", 
uæ
)->
±r
, 0, 0);

2788 
	`ª‰esh
();

2790 
ba£
 = 
	`ba£URL
(
Cuºítbuf
);

2791 i‡(
ba£
 =
NULL
 ||

2792 
ba£
->
scheme
 =
SCM_LOCAL
 || ba£->schemê=
SCM_LOCAL_CGI
)

2793 
ª„ªr
 = 
NO_REFERER
;

2794 i‡(
ª„ªr
 =
NULL
)

2795 
ª„ªr
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
;

2796 
buf
 = 
	`lﬂdGíîÆFûe
(
uæ
, 
	`ba£URL
(
Cuºítbuf
), 
ª„ªr
, 
Êag
, 
ªque°
);

2797 i‡(
buf
 =
NULL
) {

2798 *
emsg
 = 
	`S¥ötf
("C™'àlﬂd %s", 
uæ
)->
±r
;

2799 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

2800  
NULL
;

2803 
	`∑r£URL2
(
uæ
, &
pu
, 
ba£
);

2804 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
pu
)->
±r
);

2806 i‡(
buf
 =
NO_BUFFER
) {

2807  
NULL
;

2809 i‡(!
⁄_èrgë
)

2810  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2812 i‡(
do_dow∆ﬂd
)

2813  
	`lﬂdN‹mÆBuf
(
buf
, 
FALSE
);

2815 i‡(
èrgë
 =
NULL
 ||

2816 !
	`°rcmp
(
èrgë
, "_top") ||

2817 !(
Cuºítbuf
->
buf„Ωr›
 & 
BP_FRAME
)

2819  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2821 
nfbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
];

2822 i‡(
nfbuf
 =
NULL
) {

2824  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2827 
f_ñemít
 = 
	`£¨ch_‰ame
(
nfbuf
->
‰ame£t
, 
èrgë
);

2828 i‡(
f_ñemít
 =
NULL
) {

2830  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2836 
	`pushFømeTªe
(&(
nfbuf
->
‰ameQ
), 
	`c›yFømeSë
“fbuf->
‰ame£t
), 
Cuºítbuf
);

2838 
	`dñBuf„r
(
Cuºítbuf
);

2839 
Cuºítbuf
 = 
nfbuf
;

2841 
	`ª£tFømeEÀmít
(
f_ñemít
, 
buf
, 
ª„ªr
, 
ªque°
);

2842 
	`disˇrdBuf„r
(
buf
);

2843 
	`rFøme
();

2845 
Anch‹
 *
Æ
 = 
NULL
;

2846 *
œbñ
 = 
pu
.label;

2848 i‡(
œbñ
 && 
f_ñemít
->
ñemít
->
©å
 =
F_BODY
) {

2849 
Æ
 = 
	`£¨chAnch‹
(
f_ñemít
->
body
->
«meLi°
, 
œbñ
);

2851 i‡(!
Æ
) {

2852 
œbñ
 = 
	`Så√w_m_ch¨p
("_", 
èrgë
, 
NULL
)->
±r
;

2853 
Æ
 = 
	`£¨chURLLabñ
(
Cuºítbuf
, 
œbñ
);

2855 i‡(
Æ
) {

2856 
	`gŸoLöe
(
Cuºítbuf
, 
Æ
->
°¨t
.
löe
);

2857 i‡(
œbñ_t›löe
)

2858 
Cuºítbuf
->
t›Löe
 = 
	`löeSkù
(Currentbuf, Currentbuf->topLine,

2859 
Cuºítbuf
->
cuºítLöe
->

2860 
löíumbî
 -

2861 
Cuºítbuf
->
t›Löe
->
löíumbî
,

2862 
FALSE
);

2863 
Cuºítbuf
->
pos
 = 
Æ
->
°¨t
.pos;

2864 
	`¨øngeCurs‹
(
Cuºítbuf
);

2867 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2868  
buf
;

2869 
	}
}

2872 
	$gŸoLabñ
(*
œbñ
)

2874 
Buf„r
 *
buf
;

2875 
Anch‹
 *
Æ
;

2876 
i
;

2878 
Æ
 = 
	`£¨chURLLabñ
(
Cuºítbuf
, 
œbñ
);

2879 i‡(
Æ
 =
NULL
) {

2881 
	`di•_mesßge
(
	`S¥ötf
("%†i†nŸ found", 
œbñ
)->
±r
, 
TRUE
);

2884 
buf
 = 
	`√wBuf„r
(
Cuºítbuf
->
width
);

2885 
	`c›yBuf„r
(
buf
, 
Cuºítbuf
);

2886 
i
 = 0; i < 
MAX_LB
; i++)

2887 
buf
->
lökBuf„r
[
i
] = 
NULL
;

2888 
buf
->
cuºítURL
.
œbñ
 = 
	`ÆlocSå
(label, -1);

2889 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

2890 (*
buf
->
˛⁄e
)++;

2891 
	`pushBuf„r
(
buf
);

2892 
	`gŸoLöe
(
Cuºítbuf
, 
Æ
->
°¨t
.
löe
);

2893 i‡(
œbñ_t›löe
)

2894 
Cuºítbuf
->
t›Löe
 = 
	`löeSkù
(Currentbuf, Currentbuf->topLine,

2895 
Cuºítbuf
->
cuºítLöe
->
löíumbî


2896 - 
Cuºítbuf
->
t›Löe
->
löíumbî
,

2897 
FALSE
);

2898 
Cuºítbuf
->
pos
 = 
Æ
->
°¨t
.pos;

2899 
	`¨øngeCurs‹
(
Cuºítbuf
);

2900 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2902 
	}
}

2905 
DEFUN
(
fﬁlowA
, 
GOTO_LINK
, "GoÅo currentÜink")

2907 
Löe
 *
	gl
;

2908 
Anch‹
 *
	ga
;

2909 
P¨£dURL
 
	gu
;

2910 #ifde‡
USE_IMAGE


2911 
	gx
 = 0, 
	gy
 = 0, 
	gm≠
 = 0;

2913 *
	guæ
;

2915 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2917 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2919 #ifde‡
USE_IMAGE


2920 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

2921 i‡(
	ga
 &&á->
	gimage
 &&á->image->
	gm≠
) {

2922 
_fﬁlowF‹m
(
FALSE
);

2925 i‡(
	ga
 &&á->
	gimage
 &&á->image->
	gism≠
) {

2926 
gëM≠XY
(
Cuºítbuf
, 
a
, &
x
, &
y
);

2927 
	gm≠
 = 1;

2930 
	ga
 = 
ªåõveCuºítM≠
(
Cuºítbuf
);

2931 i‡(
	ga
) {

2932 
_fﬁlowF‹m
(
FALSE
);

2936 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

2937 i‡(
	ga
 =
NULL
) {

2938 
_fﬁlowF‹m
(
FALSE
);

2941 i‡(*
	ga
->
	guæ
 == '#') {

2942 
gŸoLabñ
(
a
->
uæ
 + 1);

2945 
∑r£URL2
(
a
->
uæ
, &
u
, 
ba£URL
(
Cuºítbuf
));

2946 i‡(
Såcmp
(
∑r£dURL2Så
(&
u
),Ö¨£dURL2Så(&
Cuºítbuf
->
cuºítURL
)) == 0) {

2948 i‡(
u
.
œbñ
) {

2949 
gŸoLabñ
(
u
.
œbñ
);

2953 i‡(!
°∫ˇ£cmp
(
a
->
uæ
, "mailto:", 7)

2954 #ifde‡
USE_W3MMAILER


2955 && 
n⁄_nuŒ
(
Maûî
Ë&& 
°rchr
(
a
->
uæ
, '?'Ë=
NULL


2959 
Så
 
to
 = 
Så√w_ch¨p
(
a
->
uæ
 + 7);

2960 #i‚de‡
USE_W3MMAILER


2961 *
	gpos
;

2962 i‡(!
n⁄_nuŒ
(
Maûî
)) {

2964 
di•_îr_mesßge
("nÿmaûî i†•ecifõd", 
TRUE
);

2967 i‡((
	gpos
 = 
°rchr
(
to
->
±r
, '?')Ë!
NULL
)

2968 
Sååunˇã
(
to
, 
pos
 -Åo->
±r
);

2970 
fmTîm
();

2971 
sy°em
(
myExtComm™d
(
Maûî
, 
shñl_quŸe
(
fûe_unquŸe
(
to
->
±r
)),

2972 
FALSE
)->
±r
);

2973 
fmInô
();

2974 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2975 
pushHashHi°
(
URLHi°
, 
a
->
uæ
);

2979 i‡(!
°∫ˇ£cmp
(
a
->
uæ
, "√ws:", 5Ë&& 
°rchr
◊->uæ, '@'Ë=
NULL
) {

2982 
di•_îr_mesßge
("√ws:√wsgroup_«mêi†nŸ suµ‹ãd", 
TRUE
);

2986 
	guæ
 = 
a
->
uæ
;

2987 #ifde‡
USE_IMAGE


2988 i‡(
	gm≠
)

2989 
	guæ
 = 
S¥ötf
("%s?%d,%d", 
a
->
uæ
, 
x
, 
y
)->
	g±r
;

2992 i‡(
	gcheck_èrgë
 && 
	g›í_èb_bœnk
 && 
	ga
->
	gèrgë
 &&

2993 (!
°rˇ£cmp
(
a
->
èrgë
, "_new") || !strcasecmp(a->target, "_blank"))) {

2994 
Buf„r
 *
	gbuf
;

2996 
_√wT
();

2997 
	gbuf
 = 
Cuºítbuf
;

2998 
lﬂdLök
(
uæ
, 
a
->
èrgë
,á->
ª„ªr
, 
NULL
);

2999 i‡(
	gbuf
 !
Cuºítbuf
)

3000 
dñBuf„r
(
buf
);

3002 
dñëeTab
(
CuºítTab
);

3003 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3006 
lﬂdLök
(
uæ
, 
a
->
èrgë
,á->
ª„ªr
, 
NULL
);

3007 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3012 
	$buf„rA
()

3014 
⁄_èrgë
 = 
FALSE
;

3015 
	`fﬁlowA
();

3016 
⁄_èrgë
 = 
TRUE
;

3017 
	}
}

3020 
DEFUN
(
fﬁlowI
, 
VIEW_IMAGE
, "View image")

3022 
Löe
 *
	gl
;

3023 
Anch‹
 *
	ga
;

3024 
Buf„r
 *
	gbuf
;

3026 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3028 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

3030 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

3031 i‡(
	ga
 =
NULL
)

3034 
mesßge
(
S¥ötf
("lﬂdög %s", 
a
->
uæ
)->
±r
, 0, 0);

3035 
ª‰esh
();

3036 
	gbuf
 = 
lﬂdGíîÆFûe
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
), 
NULL
, 0, NULL);

3037 i‡(
	gbuf
 =
NULL
) {

3039 *
emsg
 = 
S¥ötf
("C™'àlﬂd %s", 
a
->
uæ
)->
	g±r
;

3040 
di•_îr_mesßge
(
emsg
, 
FALSE
);

3042 i‡(
	gbuf
 !
NO_BUFFER
) {

3043 
pushBuf„r
(
buf
);

3045 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3048 
F‹mIãmLi°
 *

3049 
	$ßve_submô_f‹mli°
(
F‹mIãmLi°
 *
§c
)

3051 
F‹mLi°
 *
li°
;

3052 
F‹mLi°
 *
§˛i°
;

3053 
F‹mIãmLi°
 *
§côem
;

3054 
F‹mIãmLi°
 *
ôem
;

3055 
F‹mIãmLi°
 *
ªt
 = 
NULL
;

3056 #ifde‡
MENU_SELECT


3057 
F‹mSñe˘O±i⁄Iãm
 *
›t
;

3058 
F‹mSñe˘O±i⁄Iãm
 *
cur›t
;

3059 
F‹mSñe˘O±i⁄Iãm
 *
§c›t
;

3062 i‡(
§c
 =
NULL
)

3063  
NULL
;

3064 
§˛i°
 = 
§c
->
∑ª¡
;

3065 
li°
 = 
	`New
(
F‹mLi°
);

3066 
li°
->
mëhod
 = 
§˛i°
->method;

3067 
li°
->
a˘i⁄
 = 
	`Sådup
(
§˛i°
->action);

3068 #ifde‡
USE_M17N


3069 
li°
->
ch¨£t
 = 
§˛i°
->charset;

3071 
li°
->
í˘y≥
 = 
§˛i°
->enctype;

3072 
li°
->
nôems
 = 
§˛i°
->nitems;

3073 
li°
->
body
 = 
§˛i°
->body;

3074 
li°
->
bound¨y
 = 
§˛i°
->boundary;

3075 
li°
->
Àngth
 = 
§˛i°
->length;

3077 
§côem
 = 
§˛i°
->
ôem
; srcôem; srcôem = srcôem->
√xt
) {

3078 
ôem
 = 
	`New
(
F‹mIãmLi°
);

3079 
ôem
->
ty≥
 = 
§côem
->type;

3080 
ôem
->
«me
 = 
	`Sådup
(
§côem
->name);

3081 
ôem
->
vÆue
 = 
	`Sådup
(
§côem
->value);

3082 
ôem
->
checked
 = 
§côem
->checked;

3083 
ôem
->
ac˚±
 = 
§côem
->accept;

3084 
ôem
->
size
 = 
§côem
->size;

3085 
ôem
->
rows
 = 
§côem
->rows;

3086 
ôem
->
maxÀngth
 = 
§côem
->maxlength;

3087 
ôem
->
ªad⁄ly
 = 
§côem
->readonly;

3088 #ifde‡
MENU_SELECT


3089 
›t
 = 
cur›t
 = 
NULL
;

3090 
§c›t
 = 
§côem
->
£À˘_›ti⁄
; src›t; src›à§c›t->
√xt
) {

3091 i‡(!
§c›t
->
checked
)

3093 
›t
 = 
	`New
(
F‹mSñe˘O±i⁄Iãm
);

3094 
›t
->
vÆue
 = 
	`Sådup
(
§c›t
->value);

3095 
›t
->
œbñ
 = 
	`Sådup
(
§c›t
->label);

3096 
›t
->
checked
 = 
§c›t
->checked;

3097 i‡(
ôem
->
£À˘_›ti⁄
 =
NULL
) {

3098 
ôem
->
£À˘_›ti⁄
 = 
cur›t
 = 
›t
;

3101 
cur›t
->
√xt
 = 
›t
;

3102 
cur›t
 = cur›t->
√xt
;

3105 
ôem
->
£À˘_›ti⁄
 = 
›t
;

3106 i‡(
§côem
->
œbñ
)

3107 
ôem
->
œbñ
 = 
	`Sådup
(
§côem
->label);

3109 
ôem
->
∑ª¡
 = 
li°
;

3110 
ôem
->
√xt
 = 
NULL
;

3112 i‡(
li°
->
œ°ôem
 =
NULL
) {

3113 
li°
->
ôem
 =Üi°->
œ°ôem
 = item;

3116 
li°
->
œ°ôem
->
√xt
 = 
ôem
;

3117 
li°
->
œ°ôem
 = 
ôem
;

3120 i‡(
§côem
 =
§c
)

3121 
ªt
 = 
ôem
;

3124  
ªt
;

3125 
	}
}

3127 #ifde‡
USE_M17N


3128 
Så


3129 
	$c⁄v_f‹m_ícodög
(
Så
 
vÆ
, 
F‹mIãmLi°
 *
fi
, 
Buf„r
 *
buf
)

3131 
wc_˚s
 
ch¨£t
 = 
Sy°emCh¨£t
;

3133 i‡(
fi
->
∑ª¡
->
ch¨£t
)

3134 
ch¨£t
 = 
fi
->
∑ª¡
->charset;

3135 i‡(
buf
->
documít_ch¨£t
 && buf->documít_ch¨£à!
WC_CES_US_ASCII
)

3136 
ch¨£t
 = 
buf
->
documít_ch¨£t
;

3137  
	`wc_Så_c⁄v_°ri˘
(
vÆ
, 
I¬îCh¨£t
, 
ch¨£t
);

3138 
	}
}

3140 
	#c⁄v_f‹m_ícodög
(
vÆ
, 
fi
, 
buf
Ë(vÆ)

	)

3144 
	$quîy_‰om_fﬁlowf‹m
(
Så
 *
quîy
, 
F‹mIãmLi°
 *
fi
, 
mu…ù¨t
)

3146 
F‹mIãmLi°
 *
f2
;

3147 
FILE
 *
body
 = 
NULL
;

3149 i‡(
mu…ù¨t
) {

3150 *
quîy
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
);

3151 
body
 = 
	`f›í
((*
quîy
)->
±r
, "w");

3152 i‡(
body
 =
NULL
) {

3155 
fi
->
∑ª¡
->
body
 = (*
quîy
)->
±r
;

3156 
fi
->
∑ª¡
->
bound¨y
 =

3157 
	`S¥ötf
("------------------------------%d%ld%ld%ld", 
CuºítPid
,

3158 
fi
->
∑ª¡
, fi->∑ª¡->
body
, fi->∑ª¡->
bound¨y
)->
±r
;

3160 *
quîy
 = 
	`Så√w
();

3161 
f2
 = 
fi
->
∑ª¡
->
ôem
; f2; f2 = f2->
√xt
) {

3162 i‡(
f2
->
«me
 =
NULL
)

3165 i‡(
f2
->
«me
->
Àngth
 == 0 &&

3166 (
mu…ù¨t
 || 
f2
->
ty≥
 !
FORM_INPUT_TEXT
))

3168 
f2
->
ty≥
) {

3169 
FORM_INPUT_RESET
:

3172 
FORM_INPUT_SUBMIT
:

3173 
FORM_INPUT_IMAGE
:

3174 i‡(
f2
 !
fi
 || f2->
vÆue
 =
NULL
)

3177 
FORM_INPUT_RADIO
:

3178 
FORM_INPUT_CHECKBOX
:

3179 i‡(!
f2
->
checked
)

3182 i‡(
mu…ù¨t
) {

3183 i‡(
f2
->
ty≥
 =
FORM_INPUT_IMAGE
) {

3184 
x
 = 0, 
y
 = 0;

3185 #ifde‡
USE_IMAGE


3186 
	`gëM≠XY
(
Cuºítbuf
, 
	`ªåõveCuºítImg
(Cuºítbuf), &
x
, &
y
);

3188 *
quîy
 = 
	`Sådup
(
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
, 
Cuºítbuf
));

3189 
	`Såˇt_ch¨p
(*
quîy
, ".x");

3190 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
, (*
quîy
)->
±r
,

3191 
	`S¥ötf
("%d", 
x
)->
±r
);

3192 *
quîy
 = 
	`Sådup
(
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
, 
Cuºítbuf
));

3193 
	`Såˇt_ch¨p
(*
quîy
, ".y");

3194 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
, (*
quîy
)->
±r
,

3195 
	`S¥ötf
("%d", 
y
)->
±r
);

3197 i‡(
f2
->
«me
 && f2->«me->
Àngth
 > 0 && f2->
vÆue
 !
NULL
) {

3199 *
quîy
 = 
	`c⁄v_f‹m_ícodög
(
f2
->
vÆue
, 
fi
, 
Cuºítbuf
);

3200 i‡(
f2
->
ty≥
 =
FORM_INPUT_FILE
)

3201 
	`f‹m_wrôe_‰om_fûe
(
body
, 
fi
->
∑ª¡
->
bound¨y
,

3202 
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
,

3203 
Cuºítbuf
)->
±r
,

3204 (*
quîy
)->
±r
,

3205 
	`Så_c⁄v_to_sy°em
(
f2
->
vÆue
)->
±r
);

3207 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
,

3208 
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
,

3209 
Cuºítbuf
)->
±r
,

3210 (*
quîy
)->
±r
);

3215 i‡(
f2
->
ty≥
 =
FORM_INPUT_IMAGE
) {

3216 
x
 = 0, 
y
 = 0;

3217 #ifde‡
USE_IMAGE


3218 
	`gëM≠XY
(
Cuºítbuf
, 
	`ªåõveCuºítImg
(Cuºítbuf), &
x
, &
y
);

3220 
	`Såˇt
(*
quîy
,

3221 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3222 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3223 
	`Såˇt
(*
quîy
, 
	`S¥ötf
(".x=%d&", 
x
));

3224 
	`Såˇt
(*
quîy
,

3225 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3226 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3227 
	`Såˇt
(*
quîy
, 
	`S¥ötf
(".y=%d", 
y
));

3231 i‡(
f2
->
«me
 && f2->«me->
Àngth
 > 0) {

3232 
	`Såˇt
(*
quîy
,

3233 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3234 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3235 
	`Såˇt_ch¨
(*
quîy
, '=');

3237 i‡(
f2
->
vÆue
 !
NULL
) {

3238 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
)

3239 
	`Såˇt
(*
quîy
, 
	`Så_f‹m_quŸe
(
f2
->
vÆue
));

3241 
	`Såˇt
(*
quîy
,

3242 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3243 (
f2
->
vÆue
, 
fi
, 
Cuºítbuf
)));

3247 i‡(
f2
->
√xt
)

3248 
	`Såˇt_ch¨
(*
quîy
, '&');

3251 i‡(
mu…ù¨t
) {

3252 
	`Ârötf
(
body
, "--%s--\r\n", 
fi
->
∑ª¡
->
bound¨y
);

3253 
	`f˛o£
(
body
);

3257 
	`Såœ°ch¨
(*
quîy
) == '&')

3258 
	`Såshrök
(*
quîy
, 1);

3260 
	}
}

3263 
DEFUN
(
submôF‹m
, 
SUBMIT
, "Submit form")

3265 
_fﬁlowF‹m
(
TRUE
);

3270 
	$fﬁlowF‹m
()

3272 
	`_fﬁlowF‹m
(
FALSE
);

3273 
	}
}

3276 
	$_fﬁlowF‹m
(
submô
)

3278 
Löe
 *
l
;

3279 
Anch‹
 *
a
, *
a2
;

3280 *
p
;

3281 
F‹mIãmLi°
 *
fi
, *
f2
;

3282 
Så
 
tmp
, 
tmp2
;

3283 
mu…ù¨t
 = 0, 
i
;

3285 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3287 
l
 = 
Cuºítbuf
->
cuºítLöe
;

3289 
a
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3290 i‡(
a
 =
NULL
)

3292 
fi
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

3293 
fi
->
ty≥
) {

3294 
FORM_INPUT_TEXT
:

3295 i‡(
submô
)

3296 
do_submô
;

3297 i‡(
fi
->
ªad⁄ly
)

3299 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3301 
p
 = 
	`öputSåHi°
("TEXT:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
, 
TextHi°
);

3302 i‡(
p
 =
NULL
 || 
fi
->
ªad⁄ly
)

3304 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3305 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3306 i‡(
fi
->
ac˚±
 || fi->
∑ª¡
->
nôems
 == 1)

3307 
do_submô
;

3309 
FORM_INPUT_FILE
:

3310 i‡(
submô
)

3311 
do_submô
;

3312 i‡(
fi
->
ªad⁄ly
)

3314 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3316 
p
 = 
	`öputFûíameHi°
("Fûíame:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
,

3317 
NULL
);

3318 i‡(
p
 =
NULL
 || 
fi
->
ªad⁄ly
)

3320 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3321 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3322 i‡(
fi
->
ac˚±
 || fi->
∑ª¡
->
nôems
 == 1)

3323 
do_submô
;

3325 
FORM_INPUT_PASSWORD
:

3326 i‡(
submô
)

3327 
do_submô
;

3328 i‡(
fi
->
ªad⁄ly
) {

3330 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3334 
p
 = 
	`öputLöe
("Passw‹d:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
,

3335 
IN_PASSWORD
);

3336 i‡(
p
 =
NULL
)

3338 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3339 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3340 i‡(
fi
->
ac˚±
)

3341 
do_submô
;

3343 
FORM_TEXTAREA
:

3344 i‡(
submô
)

3345 
do_submô
;

3346 i‡(
fi
->
ªad⁄ly
)

3348 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3349 
	`öput_ãxèªa
(
fi
);

3350 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3352 
FORM_INPUT_RADIO
:

3353 i‡(
submô
)

3354 
do_submô
;

3355 i‡(
fi
->
ªad⁄ly
) {

3357 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3360 
	`f‹mRecheckRadio
(
a
, 
Cuºítbuf
, 
fi
);

3362 
FORM_INPUT_CHECKBOX
:

3363 i‡(
submô
)

3364 
do_submô
;

3365 i‡(
fi
->
ªad⁄ly
) {

3367 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3370 
fi
->
checked
 = !fi->checked;

3371 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3373 #ifde‡
MENU_SELECT


3374 
FORM_SELECT
:

3375 i‡(
submô
)

3376 
do_submô
;

3377 i‡(!
	`f‹mChoo£O±i⁄ByMíu
(
fi
,

3378 
Cuºítbuf
->
curs‹X
 - Cuºítbuf->
pos
 +

3379 
a
->
°¨t
.
pos
 + 
Cuºítbuf
->
roŸX
,

3380 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
))

3382 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3383 i‡(
fi
->
∑ª¡
->
nôems
 == 1)

3384 
do_submô
;

3387 
FORM_INPUT_IMAGE
:

3388 
FORM_INPUT_SUBMIT
:

3389 
FORM_INPUT_BUTTON
:

3390 
do_submô
:

3391 
tmp
 = 
	`Så√w
();

3392 
tmp2
 = 
	`Så√w
();

3393 
mu…ù¨t
 = (
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_POST
 &&

3394 
fi
->
∑ª¡
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
);

3395 
	`quîy_‰om_fﬁlowf‹m
(&
tmp
, 
fi
, 
mu…ù¨t
);

3397 
tmp2
 = 
	`Sådup
(
fi
->
∑ª¡
->
a˘i⁄
);

3398 i‡(!
	`Såcmp_ch¨p
(
tmp2
, "!CURRENT_URL!")) {

3400 
tmp2
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

3401 i‡((
p
 = 
	`°rchr
(
tmp2
->
±r
, '?')Ë!
NULL
)

3402 
	`Såshrök
(
tmp2
, (tmp2->
±r
 +Åmp2->
Àngth
Ë- 
p
);

3405 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_GET
) {

3406 i‡((
p
 = 
	`°rchr
(
tmp2
->
±r
, '?')Ë!
NULL
)

3407 
	`Såshrök
(
tmp2
, (tmp2->
±r
 +Åmp2->
Àngth
Ë- 
p
);

3408 
	`Såˇt_ch¨p
(
tmp2
, "?");

3409 
	`Såˇt
(
tmp2
, 
tmp
);

3410 
	`lﬂdLök
(
tmp2
->
±r
, 
a
->
èrgë
, 
NULL
, NULL);

3412 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_POST
) {

3413 
Buf„r
 *
buf
;

3414 i‡(
mu…ù¨t
) {

3415 
°©
 
°
;

3416 
	`°©
(
fi
->
∑ª¡
->
body
, &
°
);

3417 
fi
->
∑ª¡
->
Àngth
 = 
°
.
°_size
;

3420 
fi
->
∑ª¡
->
body
 = 
tmp
->
±r
;

3421 
fi
->
∑ª¡
->
Àngth
 = 
tmp
->length;

3423 
buf
 = 
	`lﬂdLök
(
tmp2
->
±r
, 
a
->
èrgë
, 
NULL
, 
fi
->
∑ª¡
);

3424 i‡(
mu…ù¨t
) {

3425 
	`u∆ök
(
fi
->
∑ª¡
->
body
);

3427 i‡(
buf
 && !(buf->
buf„Ωr›
 & 
BP_REDIRECTED
)) {

3432 
buf
->
f‹m_submô
 = 
	`ßve_submô_f‹mli°
(
fi
);

3435 i‡((
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
 && (!
	`Såcmp_ch¨p
(fi->∑ª¡->
a˘i⁄
, "m≠"Ë|| !Såcmp_ch¨p(fi->∑ª¡->a˘i⁄, "n⁄e"))Ë|| 
Cuºítbuf
->
buf„Ωr›
 & 
BP_INTERNAL
) {

3436 
	`do_öã∫Æ
(
tmp2
->
±r
, 
tmp
->ptr);

3439 
	`di•_îr_mesßge
("Can't send form because of illegal method.",

3440 
FALSE
);

3443 
FORM_INPUT_RESET
:

3444 
i
 = 0; i < 
Cuºítbuf
->
f‹môem
->
«nch‹
; i++) {

3445 
a2
 = &
Cuºítbuf
->
f‹môem
->
™ch‹s
[
i
];

3446 
f2
 = (
F‹mIãmLi°
 *)
a2
->
uæ
;

3447 i‡(
f2
->
∑ª¡
 =
fi
->parent &&

3448 
f2
->
«me
 && f2->
vÆue
 &&

3449 
f2
->
ty≥
 !
FORM_INPUT_SUBMIT
 &&

3450 
f2
->
ty≥
 !
FORM_INPUT_HIDDEN
 &&

3451 
f2
->
ty≥
 !
FORM_INPUT_RESET
) {

3452 
f2
->
vÆue
 = f2->
öô_vÆue
;

3453 
f2
->
checked
 = f2->
öô_checked
;

3454 #ifde‡
MENU_SELECT


3455 
f2
->
œbñ
 = f2->
öô_œbñ
;

3456 
f2
->
£À˘ed
 = f2->
öô_£À˘ed
;

3458 
	`f‹mUpd©eBuf„r
(
a2
, 
Cuºítbuf
, 
f2
);

3462 
FORM_INPUT_HIDDEN
:

3466 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3467 
	}
}

3470 
DEFUN
(
t›A
, 
LINK_BEGIN
, "GoÅoÅhe firstÜink")

3472 
Hm¨kîLi°
 *
	ghl
 = 
Cuºítbuf
->
hm¨kli°
;

3473 
Buf„rPoöt
 *
	gpo
;

3474 
Anch‹
 *
	g™
;

3475 
	gh£q
 = 0;

3477 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3479 i‡(!
	ghl
 || hl->
	gnm¨k
 == 0)

3482 i‡(
	g¥ec_num
 > 
	ghl
->
	gnm¨k
)

3483 
	gh£q
 = 
hl
->
nm¨k
 - 1;

3484 i‡(
	g¥ec_num
 > 0)

3485 
	gh£q
 = 
¥ec_num
 - 1;

3487 i‡(
	gh£q
 >
hl
->
nm¨k
)

3489 
	gpo
 = 
hl
->
m¨ks
 + 
h£q
;

3490 
	g™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3491 i‡(
	g™
 =
NULL
)

3492 
™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,Öo->
pos
);

3493 
	gh£q
++;

3494 } 
	g™
 =
NULL
);

3496 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3497 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

3498 
¨øngeCurs‹
(
Cuºítbuf
);

3499 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3503 
DEFUN
(
œ°A
, 
LINK_END
, "GoÅoÅheÜastÜink")

3505 
Hm¨kîLi°
 *
	ghl
 = 
Cuºítbuf
->
hm¨kli°
;

3506 
Buf„rPoöt
 *
	gpo
;

3507 
Anch‹
 *
	g™
;

3508 
	gh£q
;

3510 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3512 i‡(!
	ghl
 || hl->
	gnm¨k
 == 0)

3515 i‡(
	g¥ec_num
 >
hl
->
nm¨k
)

3516 
h£q
 = 0;

3517 i‡(
	g¥ec_num
 > 0)

3518 
	gh£q
 = 
hl
->
nm¨k
 - 
¥ec_num
;

3520 
	gh£q
 = 
hl
->
nm¨k
 - 1;

3522 i‡(
	gh£q
 < 0)

3524 
	gpo
 = 
hl
->
m¨ks
 + 
h£q
;

3525 
	g™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3526 i‡(
	g™
 =
NULL
)

3527 
™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,Öo->
pos
);

3528 
	gh£q
--;

3529 } 
	g™
 =
NULL
);

3531 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3532 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

3533 
¨øngeCurs‹
(
Cuºítbuf
);

3534 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3538 
DEFUN
(
√xtA
, 
NEXT_LINK
, "MoveÅoÇextÜink")

3540 
_√xtA
(
FALSE
);

3544 
DEFUN
(
¥evA
, 
PREV_LINK
, "MoveÅoÖreviousÜink")

3546 
_¥evA
(
FALSE
);

3550 
DEFUN
(
√xtVA
, 
NEXT_VISITED
, "MoveÅoÇext visitedÜink")

3552 
_√xtA
(
TRUE
);

3556 
DEFUN
(
¥evVA
, 
PREV_VISITED
, "MoveÅoÖrevious visitedÜink")

3558 
_¥evA
(
TRUE
);

3563 
	$_√xtA
(
visôed
)

3565 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3566 
Buf„rPoöt
 *
po
;

3567 
Anch‹
 *
™
, *
∑n
;

3568 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3569 
P¨£dURL
 
uæ
;

3571 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3573 i‡(!
hl
 || hl->
nm¨k
 == 0)

3576 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3577 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3578 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3580 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
;

3581 
x
 = 
Cuºítbuf
->
pos
;

3583 i‡(
visôed
 =
TRUE
) {

3584 
n
 = 
hl
->
nm¨k
;

3587 
i
 = 0; i < 
n
; i++) {

3588 
∑n
 = 
™
;

3589 i‡(
™
 &&án->
h£q
 >= 0) {

3590 
h£q
 = 
™
->hseq + 1;

3592 i‡(
h£q
 >
hl
->
nm¨k
) {

3593 i‡(
visôed
 =
TRUE
)

3595 
™
 = 
∑n
;

3596 
_íd
;

3598 
po
 = &
hl
->
m¨ks
[
h£q
];

3599 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3600 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3601 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,

3602 
po
->
pos
);

3603 
h£q
++;

3604 i‡(
visôed
 =
TRUE
 && 
™
) {

3605 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3606 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3607 
_íd
;

3610 } 
™
 =
NULL
 ||á¿=
∑n
);

3613 
™
 = 
	`˛o£°_√xt_™ch‹
(
Cuºítbuf
->
hªf
, 
NULL
, 
x
, 
y
);

3614 i‡(
visôed
 !
TRUE
)

3615 
™
 = 
	`˛o£°_√xt_™ch‹
(
Cuºítbuf
->
f‹môem
,án, 
x
, 
y
);

3616 i‡(
™
 =
NULL
) {

3617 i‡(
visôed
 =
TRUE
)

3619 
™
 = 
∑n
;

3622 
x
 = 
™
->
°¨t
.
pos
;

3623 
y
 = 
™
->
°¨t
.
löe
;

3624 i‡(
visôed
 =
TRUE
) {

3625 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3626 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3627 
_íd
;

3632 i‡(
visôed
 =
TRUE
)

3635 
_íd
:

3636 i‡(
™
 =
NULL
 ||án->
h£q
 < 0)

3638 
po
 = &
hl
->
m¨ks
[
™
->
h£q
];

3639 
	`gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3640 
Cuºítbuf
->
pos
 = 
po
->pos;

3641 
	`¨øngeCurs‹
(
Cuºítbuf
);

3642 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3643 
	}
}

3647 
	$_¥evA
(
visôed
)

3649 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3650 
Buf„rPoöt
 *
po
;

3651 
Anch‹
 *
™
, *
∑n
;

3652 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3653 
P¨£dURL
 
uæ
;

3655 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3657 i‡(!
hl
 || hl->
nm¨k
 == 0)

3660 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3661 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3662 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3664 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
;

3665 
x
 = 
Cuºítbuf
->
pos
;

3667 i‡(
visôed
 =
TRUE
) {

3668 
n
 = 
hl
->
nm¨k
;

3671 
i
 = 0; i < 
n
; i++) {

3672 
∑n
 = 
™
;

3673 i‡(
™
 &&án->
h£q
 >= 0) {

3674 
h£q
 = 
™
->hseq - 1;

3676 i‡(
h£q
 < 0) {

3677 i‡(
visôed
 =
TRUE
)

3679 
™
 = 
∑n
;

3680 
_íd
;

3682 
po
 = 
hl
->
m¨ks
 + 
h£q
;

3683 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3684 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3685 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,

3686 
po
->
pos
);

3687 
h£q
--;

3688 i‡(
visôed
 =
TRUE
 && 
™
) {

3689 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3690 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3691 
_íd
;

3694 } 
™
 =
NULL
 ||á¿=
∑n
);

3697 
™
 = 
	`˛o£°_¥ev_™ch‹
(
Cuºítbuf
->
hªf
, 
NULL
, 
x
, 
y
);

3698 i‡(
visôed
 !
TRUE
)

3699 
™
 = 
	`˛o£°_¥ev_™ch‹
(
Cuºítbuf
->
f‹môem
,án, 
x
, 
y
);

3700 i‡(
™
 =
NULL
) {

3701 i‡(
visôed
 =
TRUE
)

3703 
™
 = 
∑n
;

3706 
x
 = 
™
->
°¨t
.
pos
;

3707 
y
 = 
™
->
°¨t
.
löe
;

3708 i‡(
visôed
 =
TRUE
 && 
™
) {

3709 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3710 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3711 
_íd
;

3716 i‡(
visôed
 =
TRUE
)

3719 
_íd
:

3720 i‡(
™
 =
NULL
 ||án->
h£q
 < 0)

3722 
po
 = 
hl
->
m¨ks
 + 
™
->
h£q
;

3723 
	`gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3724 
Cuºítbuf
->
pos
 = 
po
->pos;

3725 
	`¨øngeCurs‹
(
Cuºítbuf
);

3726 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3727 
	}
}

3731 
	$√xtX
(
d
, 
dy
)

3733 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3734 
Anch‹
 *
™
, *
∑n
;

3735 
Löe
 *
l
;

3736 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3738 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3740 i‡(!
hl
 || hl->
nm¨k
 == 0)

3743 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3744 i‡(
™
 =
NULL
)

3745 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3747 
l
 = 
Cuºítbuf
->
cuºítLöe
;

3748 
x
 = 
Cuºítbuf
->
pos
;

3749 
y
 = 
l
->
löíumbî
;

3750 
∑n
 = 
NULL
;

3751 
i
 = 0; i < 
n
; i++) {

3752 i‡(
™
)

3753 
x
 = (
d
 > 0Ë? 
™
->
íd
.
pos
 :án->
°¨t
.pos - 1;

3754 
™
 = 
NULL
;

3756 ; 
x
 >0 && x < 
l
->
Àn
; x +
d
) {

3757 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
y
, 
x
);

3758 i‡(!
™
)

3759 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
y
, 
x
);

3760 i‡(
™
) {

3761 
∑n
 = 
™
;

3765 i‡(!
dy
 || 
™
)

3767 
l
 = (
dy
 > 0Ë?Ü->
√xt
 :Ü->
¥ev
;

3768 i‡(!
l
)

3770 
x
 = (
d
 > 0Ë? 0 : 
l
->
Àn
 - 1;

3771 
y
 = 
l
->
löíumbî
;

3773 i‡(!
™
)

3777 i‡(
∑n
 =
NULL
)

3779 
	`gŸoLöe
(
Cuºítbuf
, 
y
);

3780 
Cuºítbuf
->
pos
 = 
∑n
->
°¨t
.pos;

3781 
	`¨øngeCurs‹
(
Cuºítbuf
);

3782 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3783 
	}
}

3787 
	$√xtY
(
d
)

3789 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3790 
Anch‹
 *
™
, *
∑n
;

3791 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3792 
h£q
;

3794 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3796 i‡(!
hl
 || hl->
nm¨k
 == 0)

3799 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3800 i‡(
™
 =
NULL
)

3801 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3803 
x
 = 
Cuºítbuf
->
pos
;

3804 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
 + 
d
;

3805 
∑n
 = 
NULL
;

3806 
h£q
 = -1;

3807 
i
 = 0; i < 
n
; i++) {

3808 i‡(
™
)

3809 
h£q
 = 
	`abs
(
™
->hseq);

3810 
™
 = 
NULL
;

3811 ; 
y
 >0 && y <
Cuºítbuf
->
œ°Löe
->
löíumbî
; y +
d
) {

3812 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
y
, 
x
);

3813 i‡(!
™
)

3814 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
y
, 
x
);

3815 i‡(
™
 && 
h£q
 !
	`abs
(an->hseq)) {

3816 
∑n
 = 
™
;

3820 i‡(!
™
)

3824 i‡(
∑n
 =
NULL
)

3826 
	`gŸoLöe
(
Cuºítbuf
, 
∑n
->
°¨t
.
löe
);

3827 
	`¨øngeLöe
(
Cuºítbuf
);

3828 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3829 
	}
}

3832 
DEFUN
(
√xtL
, 
NEXT_LEFT
, "MoveÅoÇextÜeftÜink")

3834 
√xtX
(-1, 0);

3838 
DEFUN
(
√xtLU
, 
NEXT_LEFT_UP
, "MoveÅoÇextÜeft (or upward)Üink")

3840 
√xtX
(-1, -1);

3844 
DEFUN
(
√xtR
, 
NEXT_RIGHT
, "MoveÅoÇextÑightÜink")

3846 
√xtX
(1, 0);

3850 
DEFUN
(
√xtRD
, 
NEXT_RIGHT_DOWN
, "MoveÅoÇextÑight (or downward)Üink")

3852 
√xtX
(1, 1);

3856 
DEFUN
(
√xtD
, 
NEXT_DOWN
, "MoveÅoÇext downwardÜink")

3858 
√xtY
(1);

3862 
DEFUN
(
√xtU
, 
NEXT_UP
, "MoveÅoÇext upwardÜink")

3864 
√xtY
(-1);

3868 
DEFUN
(
√xtBf
, 
NEXT
, "MoveÅoÇext buffer")

3870 
Buf„r
 *
	gbuf
;

3871 
	gi
;

3873 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

3874 
	gbuf
 = 
¥evBuf„r
(
Fú°buf
, 
Cuºítbuf
);

3875 i‡(!
	gbuf
) {

3876 i‡(
	gi
 == 0)

3880 
	gCuºítbuf
 = 
buf
;

3882 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3886 
DEFUN
(
¥evBf
, 
PREV
, "MoveÅoÖrevious buffer")

3888 
Buf„r
 *
	gbuf
;

3889 
	gi
;

3891 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

3892 
	gbuf
 = 
Cuºítbuf
->
√xtBuf„r
;

3893 i‡(!
	gbuf
) {

3894 i‡(
	gi
 == 0)

3898 
	gCuºítbuf
 = 
buf
;

3900 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3904 
	$checkBackBuf„r
(
Buf„r
 *
buf
)

3906 
Buf„r
 *
fbuf
 = 
buf
->
lökBuf„r
[
LB_N_FRAME
];

3908 i‡(
fbuf
) {

3909 i‡(
fbuf
->
‰ameQ
)

3910  
TRUE
;

3913 i‡(
RídîFøme
 && 
fbuf
 =
buf
->
√xtBuf„r
) {

3914 i‡(
fbuf
->
√xtBuf„r
 !
NULL
)

3915  
TRUE
;

3917  
FALSE
;

3921 i‡(
buf
->
√xtBuf„r
)

3922  
TRUE
;

3924  
FALSE
;

3925 
	}
}

3928 
DEFUN
(
backBf
, 
BACK
, "BackÅoÖrevious buffer")

3930 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
];

3932 i‡(!
checkBackBuf„r
(
Cuºítbuf
)) {

3933 i‡(
	g˛o£_èb_back
 && 
	gnTab
 >= 1) {

3934 
dñëeTab
(
CuºítTab
);

3935 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3939 
di•_mesßge
("C™'àback...", 
TRUE
);

3943 
dñBuf„r
(
Cuºítbuf
);

3945 i‡(
	gbuf
) {

3946 i‡(
	gbuf
->
	g‰ameQ
) {

3947 
‰ame£t
 *
	gfs
;

3948 
	glöíumbî
 = 
buf
->
‰ameQ
->
löíumbî
;

3949 
	gt›
 = 
buf
->
‰ameQ
->
t›_löíumbî
;

3950 
	gpos
 = 
buf
->
‰ameQ
->
pos
;

3951 
	gcuºítCﬁumn
 = 
buf
->
‰ameQ
->
cuºítCﬁumn
;

3952 
Anch‹Li°
 *
	gf‹môem
 = 
buf
->
‰ameQ
->
f‹môem
;

3954 
	gfs
 = 
p›FømeTªe
(&(
buf
->
‰ameQ
));

3955 
dñëeFømeSë
(
buf
->
‰ame£t
);

3956 
	gbuf
->
	g‰ame£t
 = 
fs
;

3958 i‡(
	gbuf
 =
Cuºítbuf
) {

3959 
rFøme
();

3960 
	gCuºítbuf
->
	gt›Löe
 = 
löeSkù
(
Cuºítbuf
,

3961 
Cuºítbuf
->
fú°Löe
, 
t›
 - 1,

3962 
FALSE
);

3963 
gŸoLöe
(
Cuºítbuf
, 
löíumbî
);

3964 
	gCuºítbuf
->
	gpos
 = 
pos
;

3965 
	gCuºítbuf
->
	gcuºítCﬁumn
 = 
cuºítCﬁumn
;

3966 
¨øngeCurs‹
(
Cuºítbuf
);

3967 
f‹mRe£tBuf„r
(
Cuºítbuf
, 
f‹môem
);

3970 i‡(
	gRídîFøme
 && 
	gbuf
 =
Cuºítbuf
) {

3971 
dñBuf„r
(
Cuºítbuf
);

3974 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3977 
DEFUN
(
dñëePªvBuf
, 
DELETE_PREVBUF
,

3980 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
√xtBuf„r
;

3981 i‡(
	gbuf
)

3982 
dñBuf„r
(
buf
);

3986 
	$cmd_lﬂdURL
(*
uæ
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
, 
F‹mLi°
 *
ªque°
)

3988 
Buf„r
 *
buf
;

3990 i‡(!
	`°∫ˇ£cmp
(
uæ
, "mailto:", 7)

3991 #ifde‡
USE_W3MMAILER


3992 && 
	`n⁄_nuŒ
(
Maûî
Ë&& 
	`°rchr
(
uæ
, '?'Ë=
NULL


3996 
Så
 
to
 = 
	`Så√w_ch¨p
(
uæ
 + 7);

3997 #i‚de‡
USE_W3MMAILER


3998 *
pos
;

3999 i‡(!
	`n⁄_nuŒ
(
Maûî
)) {

4001 
	`di•_îr_mesßge
("nÿmaûî i†•ecifõd", 
TRUE
);

4004 i‡((
pos
 = 
	`°rchr
(
to
->
±r
, '?')Ë!
NULL
)

4005 
	`Sååunˇã
(
to
, 
pos
 -Åo->
±r
);

4007 
	`fmTîm
();

4008 
	`sy°em
(
	`myExtComm™d
(
Maûî
, 
	`shñl_quŸe
(
	`fûe_unquŸe
(
to
->
±r
)),

4009 
FALSE
)->
±r
);

4010 
	`fmInô
();

4011 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4012 
	`pushHashHi°
(
URLHi°
, 
uæ
);

4016 i‡(!
	`°∫ˇ£cmp
(
uæ
, "√ws:", 5Ë&& 
	`°rchr
(uæ, '@'Ë=
NULL
) {

4019 
	`di•_îr_mesßge
("√ws:√wsgroup_«mêi†nŸ suµ‹ãd", 
TRUE
);

4024 
	`ª‰esh
();

4025 
buf
 = 
	`lﬂdGíîÆFûe
(
uæ
, 
cuºít
, 
ª„ªr
, 0, 
ªque°
);

4026 i‡(
buf
 =
NULL
) {

4028 *
emsg
 = 
	`S¥ötf
("C™'àlﬂd %s", 
	`c⁄v_‰om_sy°em
(
uæ
))->
±r
;

4029 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

4031 i‡(
buf
 !
NO_BUFFER
) {

4032 
	`pushBuf„r
(
buf
);

4033 i‡(
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

4034 
	`rFøme
();

4036 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4037 
	}
}

4042 
	$goURL0
(*
¥om±
, 
ªœtive
)

4044 *
uæ
, *
ª„ªr
;

4045 
P¨£dURL
 
p_uæ
, *
cuºít
;

4046 
Buf„r
 *
cur_buf
 = 
Cuºítbuf
;

4048 
uæ
 = 
	`£¨chKeyD©a
();

4049 i‡(
uæ
 =
NULL
) {

4050 
Hi°
 *
hi°
 = 
	`c›yHi°
(
URLHi°
);

4051 
Anch‹
 *
a
;

4053 
cuºít
 = 
	`ba£URL
(
Cuºítbuf
);

4054 i‡(
cuºít
) {

4055 *
c_uæ
 = 
	`∑r£dURL2Så
(
cuºít
)->
±r
;

4056 i‡(
DeÁu…URLSåög
 =
DEFAULT_URL_CURRENT
) {

4057 
uæ
 = 
c_uæ
;

4058 i‡(
DecodeURL
)

4059 
uæ
 = 
	`uæ_unquŸe_c⁄v
(url, 0);

4062 
	`pushHi°
(
hi°
, 
c_uæ
);

4064 
a
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

4065 i‡(
a
) {

4066 *
a_uæ
;

4067 
	`∑r£URL2
(
a
->
uæ
, &
p_uæ
, 
cuºít
);

4068 
a_uæ
 = 
	`∑r£dURL2Så
(&
p_uæ
)->
±r
;

4069 i‡(
DeÁu…URLSåög
 =
DEFAULT_URL_LINK
) {

4070 
uæ
 = 
a_uæ
;

4071 i‡(
DecodeURL
)

4072 
uæ
 = 
	`uæ_unquŸe_c⁄v
(uæ, 
Cuºítbuf
->
documít_ch¨£t
);

4075 
	`pushHi°
(
hi°
, 
a_uæ
);

4077 
uæ
 = 
	`öputLöeHi°
(
¥om±
, uæ, 
IN_URL
, 
hi°
);

4078 i‡(
uæ
 !
NULL
)

4079 
	`SKIP_BLANKS
(
uæ
);

4081 #ifde‡
USE_M17N


4082 i‡(
uæ
 !
NULL
) {

4083 i‡((
ªœtive
 || *
uæ
 ='#'Ë&& 
Cuºítbuf
->
documít_ch¨£t
)

4084 
uæ
 = 
	`wc_c⁄v_°ri˘
(uæ, 
I¬îCh¨£t
,

4085 
Cuºítbuf
->
documít_ch¨£t
)->
±r
;

4087 
uæ
 = 
	`c⁄v_to_sy°em
(url);

4090 i‡(
uæ
 =
NULL
 || *url == '\0') {

4091 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4094 i‡(*
uæ
 == '#') {

4095 
	`gŸoLabñ
(
uæ
 + 1);

4098 i‡(
ªœtive
) {

4099 
cuºít
 = 
	`ba£URL
(
Cuºítbuf
);

4100 
ª„ªr
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
;

4103 
cuºít
 = 
NULL
;

4104 
ª„ªr
 = 
NULL
;

4106 
	`∑r£URL2
(
uæ
, &
p_uæ
, 
cuºít
);

4107 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
p_uæ
)->
±r
);

4108 
	`cmd_lﬂdURL
(
uæ
, 
cuºít
, 
ª„ªr
, 
NULL
);

4109 i‡(
Cuºítbuf
 !
cur_buf
)

4110 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
);

4111 
	}
}

4113 
DEFUN
(
goURL
, 
GOTO
, "GoÅo URL")

4115 
goURL0
("GŸÿURL: ", 
FALSE
);

4118 
DEFUN
(
g‹URL
, 
GOTO_RELATIVE
, "GoÅoÑelative URL")

4120 
goURL0
("GŸÿªœtivêURL: ", 
TRUE
);

4124 
	$cmd_lﬂdBuf„r
(
Buf„r
 *
buf
, 
¥›
, 
lökid
)

4126 i‡(
buf
 =
NULL
) {

4127 
	`di•_îr_mesßge
("C™'àlﬂd såög", 
FALSE
);

4129 i‡(
buf
 !
NO_BUFFER
) {

4130 
buf
->
buf„Ωr›
 |(
BP_INTERNAL
 | 
¥›
);

4131 i‡(!(
buf
->
buf„Ωr›
 & 
BP_NO_URL
))

4132 
	`c›yP¨£dURL
(&
buf
->
cuºítURL
, &
Cuºítbuf
->currentURL);

4133 i‡(
lökid
 !
LB_NOLINK
) {

4134 
buf
->
lökBuf„r
[
REV_LB
[
lökid
]] = 
Cuºítbuf
;

4135 
Cuºítbuf
->
lökBuf„r
[
lökid
] = 
buf
;

4137 
	`pushBuf„r
(
buf
);

4139 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4140 
	}
}

4143 
DEFUN
(
ldBm¨k
, 
BOOKMARK
 
VIEW_BOOKMARK
, "Read bookmark")

4145 
cmd_lﬂdURL
(
Bookm¨kFûe
, 
NULL
, 
NO_REFERER
, NULL);

4150 
DEFUN
(
adBm¨k
, 
ADD_BOOKMARK
, "Add currentÖageÅo bookmark")

4152 
Så
 
	gtmp
;

4153 
F‹mLi°
 *
	gªque°
;

4155 
	gtmp
 = 
S¥ötf
("mode=panel&cookie=%s&bmark=%s&url=%s&title=%s"

4156 #ifde‡
USE_M17N


4160 (
Så_f‹m_quŸe
(
loˇlCookõ
()))->
±r
,

4161 (
Så_f‹m_quŸe
(
Så√w_ch¨p
(
Bookm¨kFûe
)))->
±r
,

4162 (
Så_f‹m_quŸe
(
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)))->

4163 
±r
,

4164 #ifde‡
USE_M17N


4165 (
Så_f‹m_quŸe
(
wc_c⁄v_°ri˘
(
Cuºítbuf
->
buf„∫ame
,

4166 
I¬îCh¨£t
,

4167 
Bookm¨kCh¨£t
)))->
±r
,

4168 
wc_˚s_to_ch¨£t
(
Bookm¨kCh¨£t
));

4170 (
Så_f‹m_quŸe
(
Så√w_ch¨p
(
Cuºítbuf
->
buf„∫ame
)))->
	g±r
);

4172 
	gªque°
 = 
√wF‹mLi°
(
NULL
, "post", NULL, NULL, NULL, NULL, NULL);

4173 
	gªque°
->
	gbody
 = 
tmp
->
±r
;

4174 
	gªque°
->
	gÀngth
 = 
tmp
->
Àngth
;

4175 
cmd_lﬂdURL
("fûe:///$LIB/" 
W3MBOOKMARK_CMDNAME
, 
NULL
, 
NO_REFERER
,

4176 
ªque°
);

4180 
DEFUN
(
ldO±
, 
OPTIONS
, "Option settingÖanel")

4182 
cmd_lﬂdBuf„r
(
lﬂd_›ti⁄_∑√l
(), 
BP_NO_URL
, 
LB_NOLINK
);

4186 
DEFUN
(
£tO±
, 
SET_OPTION
, "Set option")

4188 *
	g›t
;

4190 
	gCuºítKeyD©a
 = 
NULL
;

4191 
	g›t
 = 
£¨chKeyD©a
();

4192 i‡(
	g›t
 =
NULL
 || *
›t
 ='\0' || 
°rchr
(opt, '=') == NULL) {

4193 i‡(
›t
 !
NULL
 && *opt != '\0') {

4194 *
v
 = 
gë_∑øm_›ti⁄
(
›t
);

4195 
	g›t
 = 
S¥ötf
("%s=%s", 
›t
, 
v
 ? v : "")->
±r
;

4197 
	g›t
 = 
öputSåHi°
("Së o±i⁄: ", 
›t
, 
TextHi°
);

4198 i‡(
	g›t
 =
NULL
 || *
›t
 == '\0') {

4199 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4203 i‡(
£t_∑øm_›ti⁄
(
›t
))

4204 
sync_wôh_›ti⁄
();

4205 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

4209 
DEFUN
(
msgs
, 
MSGS
, "DisplayÉrror messages")

4211 
cmd_lﬂdBuf„r
(
mesßge_li°_∑√l
(), 
BP_NO_URL
, 
LB_NOLINK
);

4215 
DEFUN
(
pgöfo
, 
INFO
, "View info of current document")

4217 
Buf„r
 *
	gbuf
;

4219 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_INFO
]Ë!
NULL
) {

4220 
Cuºítbuf
 = 
buf
;

4221 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4224 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_INFO
]Ë!
NULL
)

4225 
dñBuf„r
(
buf
);

4226 
	gbuf
 = 
∑ge_öfo_∑√l
(
Cuºítbuf
);

4227 
cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_INFO
);

4231 
	$fﬁlow_m≠
(
∑r£d_èg¨g
 *
¨g
)

4233 *
«me
 = 
	`èg_gë_vÆue
(
¨g
, "link");

4234 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

4235 
Anch‹
 *
™
;

4236 
M≠Aªa
 *
a
;

4237 
x
, 
y
;

4238 
P¨£dURL
 
p_uæ
;

4240 
™
 = 
	`ªåõveCuºítImg
(
Cuºítbuf
);

4241 
x
 = 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
;

4242 
y
 = 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
;

4243 
a
 = 
	`fﬁlow_m≠_míu
(
Cuºítbuf
, 
«me
, 
™
, 
x
, 
y
);

4244 i‡(
a
 =
NULL
 ||á->
uæ
 == NULL || *(a->url) == '\0') {

4246 #i‚de‡
MENU_MAP


4247 
Buf„r
 *
buf
 = 
	`fﬁlow_m≠_∑√l
(
Cuºítbuf
, 
«me
);

4249 i‡(
buf
 !
NULL
)

4250 
	`cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_NOLINK
);

4252 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

4254 
	}
}

4255 i‡(*(
	ga
->
	guæ
) == '#') {

4256 
gŸoLabñ
(
a
->
uæ
 + 1);

4259 
∑r£URL2
(
a
->
uæ
, &
p_uæ
, 
ba£URL
(
Cuºítbuf
));

4260 
pushHashHi°
(
URLHi°
, 
∑r£dURL2Så
(&
p_uæ
)->
±r
);

4261 i‡(
	gcheck_èrgë
 && 
	g›í_èb_bœnk
 && 
	ga
->
	gèrgë
 &&

4262 (!
°rˇ£cmp
(
a
->
èrgë
, "_new") || !strcasecmp(a->target, "_blank"))) {

4263 
Buf„r
 *
	gbuf
;

4265 
_√wT
();

4266 
	gbuf
 = 
Cuºítbuf
;

4267 
cmd_lﬂdURL
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4268 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4269 i‡(
	gbuf
 !
Cuºítbuf
)

4270 
dñBuf„r
(
buf
);

4272 
dñëeTab
(
CuºítTab
);

4273 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4276 
cmd_lﬂdURL
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4277 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4281 #ifde‡
USE_MENU


4283 
DEFUN
(
lökMn
, 
LINK_MENU
, "PopupÜinkÉlement menu")

4285 
LökLi°
 *
	gl
 = 
lök_míu
(
Cuºítbuf
);

4286 
P¨£dURL
 
	gp_uæ
;

4288 i‡(!
	gl
 || !l->
	guæ
)

4290 i‡(*(
	gl
->
	guæ
) == '#') {

4291 
gŸoLabñ
(
l
->
uæ
 + 1);

4294 
∑r£URL2
(
l
->
uæ
, &
p_uæ
, 
ba£URL
(
Cuºítbuf
));

4295 
pushHashHi°
(
URLHi°
, 
∑r£dURL2Så
(&
p_uæ
)->
±r
);

4296 
cmd_lﬂdURL
(
l
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4297 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4301 
™ch‹Mn
(
Anch‹
 *(*
míu_func
Ë(
Buf„r
 *), 
go
)

4303 
Anch‹
 *
	ga
;

4304 
Buf„rPoöt
 *
	gpo
;

4306 i‡(!
	gCuºítbuf
->
	ghªf
 || !Cuºítbuf->
	ghm¨kli°
)

4308 
	ga
 = 
míu_func
(
Cuºítbuf
);

4309 i‡(!
	ga
 ||á->
	gh£q
 < 0)

4311 
	gpo
 = &
Cuºítbuf
->
hm¨kli°
->
m¨ks
[
a
->
h£q
];

4312 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

4313 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

4314 
¨øngeCurs‹
(
Cuºítbuf
);

4315 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4316 i‡(
	ggo
)

4317 
fﬁlowA
();

4321 
DEFUN
(
ac˚ssKey
, 
ACCESSKEY
, "Popupácceskey menu")

4323 
™ch‹Mn
(
ac˚sskey_míu
, 
TRUE
);

4327 
DEFUN
(
li°Mn
, 
LIST_MENU
, "PopupÜinkÜist menuánd goÅo selectedÜink")

4329 
™ch‹Mn
(
li°_míu
, 
TRUE
);

4332 
DEFUN
(
movli°Mn
, 
MOVE_LIST_MENU
,

4335 
™ch‹Mn
(
li°_míu
, 
FALSE
);

4340 
DEFUN
(
lökL°
, 
LIST
, "ShowállÜinksánd images")

4342 
Buf„r
 *
	gbuf
;

4344 
	gbuf
 = 
lök_li°_∑√l
(
Cuºítbuf
);

4345 i‡(
	gbuf
 !
NULL
) {

4346 #ifde‡
USE_M17N


4347 
buf
->
documít_ch¨£t
 = 
Cuºítbuf
->document_charset;

4349 
cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_NOLINK
);

4353 #ifde‡
USE_COOKIE


4355 
DEFUN
(
cooL°
, 
COOKIE
, "View cookieÜist")

4357 
Buf„r
 *
	gbuf
;

4359 
	gbuf
 = 
cookõ_li°_∑√l
();

4360 i‡(
	gbuf
 !
NULL
)

4361 
cmd_lﬂdBuf„r
(
buf
, 
BP_NO_URL
, 
LB_NOLINK
);

4365 #ifde‡
USE_HISTORY


4367 
DEFUN
(
ldHi°
, 
HISTORY
, "View history of URL")

4369 
cmd_lﬂdBuf„r
(
hi°‹yBuf„r
(
URLHi°
), 
BP_NO_URL
, 
LB_NOLINK
);

4374 
DEFUN
(
svA
, 
SAVE_LINK
, "SaveÜinkÅo file")

4376 
	gCuºítKeyD©a
 = 
NULL
;

4377 
	gdo_dow∆ﬂd
 = 
TRUE
;

4378 
fﬁlowA
();

4379 
	gdo_dow∆ﬂd
 = 
FALSE
;

4383 
DEFUN
(
svI
, 
SAVE_IMAGE
, "Save imageÅo file")

4385 
	gCuºítKeyD©a
 = 
NULL
;

4386 
	gdo_dow∆ﬂd
 = 
TRUE
;

4387 
fﬁlowI
();

4388 
	gdo_dow∆ﬂd
 = 
FALSE
;

4392 
DEFUN
(
svBuf
, 
PRINT
 
SAVE_SCREEN
, "SaveÑendered documentÅo file")

4394 *
	gqfûe
 = 
NULL
, *
	gfûe
;

4395 
FILE
 *
	gf
;

4396 
	gis_pùe
;

4398 
	gCuºítKeyD©a
 = 
NULL
;

4399 
	gfûe
 = 
£¨chKeyD©a
();

4400 i‡(
	gfûe
 =
NULL
 || *
fûe
 == '\0') {

4402 
qfûe
 = 
öputLöeHi°
("Savêbuf„∏to: ", 
NULL
, 
IN_COMMAND
, 
SaveHi°
);

4403 i‡(
	gqfûe
 =
NULL
 || *
qfûe
 == '\0') {

4404 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4408 
	gfûe
 = 
c⁄v_to_sy°em
(
qfûe
 ? qfûê: 
fûe
);

4409 i‡(*
	gfûe
 == '|') {

4410 
is_pùe
 = 
TRUE
;

4411 
	gf
 = 
p›í
(
fûe
 + 1, "w");

4414 i‡(
	gqfûe
) {

4415 
	gfûe
 = 
u√sˇ≥_•a˚s
(
Så√w_ch¨p
(
qfûe
))->
±r
;

4416 
	gfûe
 = 
c⁄v_to_sy°em
(
fûe
);

4418 
	gfûe
 = 
ex∑ndP©h
(
fûe
);

4419 i‡(
checkOvîWrôe
(
fûe
) < 0) {

4420 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4423 
	gf
 = 
f›í
(
fûe
, "w");

4424 
	gis_pùe
 = 
FALSE
;

4426 i‡(
	gf
 =
NULL
) {

4428 *
emsg
 = 
S¥ötf
("C™'à›í %s", 
c⁄v_‰om_sy°em
(
fûe
))->
	g±r
;

4429 
di•_îr_mesßge
(
emsg
, 
TRUE
);

4432 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

4433 i‡(
	gis_pùe
)

4434 
p˛o£
(
f
);

4436 
f˛o£
(
f
);

4437 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4441 
DEFUN
(
svSrc
, 
DOWNLOAD
 
SAVE
, "Save document sourceÅo file")

4443 *
	gfûe
;

4445 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
)

4447 
	gCuºítKeyD©a
 = 
NULL
;

4448 
	gPîmôSaveToPùe
 = 
TRUE
;

4449 i‡(
	gCuºítbuf
->
	gªÆ_scheme
 =
SCM_LOCAL
)

4450 
fûe
 = 
c⁄v_‰om_sy°em
(
guess_ßve_«me
(
NULL
,

4451 
Cuºítbuf
->
cuºítURL
.

4452 
ªÆ_fûe
));

4454 
	gfûe
 = 
guess_ßve_«me
(
Cuºítbuf
, Cuºítbuf->
cuºítURL
.
fûe
);

4455 
doFûeC›y
(
Cuºítbuf
->
sour˚fûe
, 
fûe
);

4456 
	gPîmôSaveToPùe
 = 
FALSE
;

4457 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4461 
_≥ekURL
(
⁄ly_img
)

4464 
Anch‹
 *
	ga
;

4465 
P¨£dURL
 
	gpu
;

4466 
Så
 
	gs
 = 
NULL
;

4467 #ifde‡
USE_M17N


4468 
Löïr›
 *
	gp
 = 
NULL
;

4469 
Löïr›
 *
	gµ
;

4471 
	goff£t
 = 0, 
	gn
;

4473 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

4475 i‡(
	gCuºítKey
 =
¥ev_key
 && 
s
 !
NULL
) {

4476 i‡(
s
->
Àngth
 - 
off£t
 >
COLS
)

4477 
off£t
++;

4478 i‡(
	gs
->
	gÀngth
 <
off£t
)

4479 
off£t
 = 0;

4480 
	gdi•
;

4483 
	goff£t
 = 0;

4485 
	gs
 = 
NULL
;

4486 
	ga
 = (
⁄ly_img
 ? 
NULL
 : 
ªåõveCuºítAnch‹
(
Cuºítbuf
));

4487 i‡(
	ga
 =
NULL
) {

4488 
a
 = (
⁄ly_img
 ? 
NULL
 : 
ªåõveCuºítF‹m
(
Cuºítbuf
));

4489 i‡(
	ga
 =
NULL
) {

4490 
a
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

4491 i‡(
	ga
 =
NULL
)

4495 
	gs
 = 
Så√w_ch¨p
(
f‹m2°r
((
F‹mIãmLi°
 *)
a
->
uæ
));

4497 i‡(
	gs
 =
NULL
) {

4498 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
Cuºítbuf
));

4499 
	gs
 = 
∑r£dURL2Så
(&
pu
);

4501 i‡(
	gDecodeURL
)

4502 
	gs
 = 
Så√w_ch¨p
(
uæ_unquŸe_c⁄v


4503 (
s
->
±r
, 
Cuºítbuf
->
documít_ch¨£t
));

4504 #ifde‡
USE_M17N


4505 
	gs
 = 
checkTy≥
(
s
, &
µ
, 
NULL
);

4506 
	gp
 = 
NewAtom_N
(
Löïr›
, 
s
->
Àngth
);

4507 
bc›y
((*)
µ
, (*)
p
, 
s
->
Àngth
 * (
Löïr›
));

4509 
	gdi•
:

4510 
n
 = 
£¨chKeyNum
();

4511 i‡(
	gn
 > 1 && 
	gs
->
	gÀngth
 > (¿- 1Ë* (
	gCOLS
 - 1))

4512 
	goff£t
 = (
n
 - 1Ë* (
COLS
 - 1);

4513 #ifde‡
USE_M17N


4514 
	goff£t
 < 
	gs
->
	gÀngth
 && 
	gp
[
off£t
] & 
	gPC_WCHAR2
)

4515 
	goff£t
++;

4517 
di•_mesßge_nomou£
(&
s
->
±r
[
off£t
], 
TRUE
);

4521 
DEFUN
(
≥ekURL
, 
PEEK_LINK
, "PeekÜink URL")

4523 
_≥ekURL
(0);

4527 
DEFUN
(
≥ekIMG
, 
PEEK_IMG
, "Peek image URL")

4529 
_≥ekURL
(1);

4533 
Så


4534 
cuºítURL
()

4536 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4537  
Så√w_size
(0);

4538  
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

4541 
DEFUN
(
curURL
, 
PEEK
, "Peek current URL")

4543 
Så
 
	gs
 = 
NULL
;

4544 #ifde‡
USE_M17N


4545 
Löïr›
 *
	gp
 = 
NULL
;

4546 
Löïr›
 *
	gµ
;

4548 
	goff£t
 = 0, 
	gn
;

4550 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4552 i‡(
	gCuºítKey
 =
¥ev_key
 && 
s
 !
NULL
) {

4553 i‡(
s
->
Àngth
 - 
off£t
 >
COLS
)

4554 
off£t
++;

4555 i‡(
	gs
->
	gÀngth
 <
off£t
)

4556 
off£t
 = 0;

4559 
	goff£t
 = 0;

4560 
	gs
 = 
cuºítURL
();

4561 i‡(
	gDecodeURL
)

4562 
	gs
 = 
Så√w_ch¨p
(
uæ_unquŸe_c⁄v
(
s
->
±r
, 0));

4563 #ifde‡
USE_M17N


4564 
	gs
 = 
checkTy≥
(
s
, &
µ
, 
NULL
);

4565 
	gp
 = 
NewAtom_N
(
Löïr›
, 
s
->
Àngth
);

4566 
bc›y
((*)
µ
, (*)
p
, 
s
->
Àngth
 * (
Löïr›
));

4569 
	gn
 = 
£¨chKeyNum
();

4570 i‡(
	gn
 > 1 && 
	gs
->
	gÀngth
 > (¿- 1Ë* (
	gCOLS
 - 1))

4571 
	goff£t
 = (
n
 - 1Ë* (
COLS
 - 1);

4572 #ifde‡
USE_M17N


4573 
	goff£t
 < 
	gs
->
	gÀngth
 && 
	gp
[
off£t
] & 
	gPC_WCHAR2
)

4574 
	goff£t
++;

4576 
di•_mesßge_nomou£
(&
s
->
±r
[
off£t
], 
TRUE
);

4580 
DEFUN
(
vwSrc
, 
SOURCE
 
VIEW
, "View HTML source")

4582 
Buf„r
 *
	gbuf
;

4584 i‡(
	gCuºítbuf
->
	gty≥
 =
NULL
 || 
Cuºítbuf
->
buf„Ωr›
 & 
BP_FRAME
)

4586 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_SOURCE
]Ë!
NULL
 ||

4587 (
buf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_SOURCE
]Ë!
NULL
) {

4588 
Cuºítbuf
 = 
buf
;

4589 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4592 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
) {

4593 i‡(
Cuºítbuf
->
∑gîSour˚
 &&

4594 !
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/plain")) {

4595 #ifde‡
USE_M17N


4596 
wc_˚s
 
ﬁd_ch¨£t
;

4597 
wc_boﬁ
 
	gﬁd_fix_width_c⁄v
;

4599 
FILE
 *
	gf
;

4600 
Så
 
	gtmpf
 = 
tmp‚ame
(
TMPF_SRC
, 
NULL
);

4601 
	gf
 = 
f›í
(
tmpf
->
±r
, "w");

4602 i‡(
	gf
 =
NULL
)

4604 #ifde‡
USE_M17N


4605 
	gﬁd_ch¨£t
 = 
Di•œyCh¨£t
;

4606 
	gﬁd_fix_width_c⁄v
 = 
WcO±i⁄
.
fix_width_c⁄v
;

4607 
	gDi•œyCh¨£t
 = (
Cuºítbuf
->
documít_ch¨£t
 !
WC_CES_US_ASCII
)

4608 ? 
Cuºítbuf
->
documít_ch¨£t
 : 0;

4609 
	gWcO±i⁄
.
	gfix_width_c⁄v
 = 
WC_FALSE
;

4611 
ßveBuf„rBody
(
Cuºítbuf
, 
f
, 
TRUE
);

4612 #ifde‡
USE_M17N


4613 
	gDi•œyCh¨£t
 = 
ﬁd_ch¨£t
;

4614 
	gWcO±i⁄
.
	gfix_width_c⁄v
 = 
ﬁd_fix_width_c⁄v
;

4616 
f˛o£
(
f
);

4617 
	gCuºítbuf
->
	gsour˚fûe
 = 
tmpf
->
±r
;

4624 
	gbuf
 = 
√wBuf„r
(
INIT_BUFFER_WIDTH
);

4626 i‡(!
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/html")) {

4627 
	gbuf
->
	gty≥
 = "text/plain";

4628 i‡(
	gCuºítbuf
->
	gªÆ_ty≥
 &&

4629 !
°rˇ£cmp
(
Cuºítbuf
->
ªÆ_ty≥
, "text/html"))

4630 
	gbuf
->
	gªÆ_ty≥
 = "text/plain";

4632 
	gbuf
->
	gªÆ_ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4633 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("sour˚ o‡%s", 
Cuºítbuf
->
buf„∫ame
)->
	g±r
;

4634 
	gbuf
->
	glökBuf„r
[
LB_N_SOURCE
] = 
Cuºítbuf
;

4635 
	gCuºítbuf
->
	glökBuf„r
[
LB_SOURCE
] = 
buf
;

4637 i‡(!
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/plain")) {

4638 
	gbuf
->
	gty≥
 = "text/html";

4639 i‡(
	gCuºítbuf
->
	gªÆ_ty≥
 &&

4640 !
°rˇ£cmp
(
Cuºítbuf
->
ªÆ_ty≥
, "text/plain"))

4641 
	gbuf
->
	gªÆ_ty≥
 = "text/html";

4643 
	gbuf
->
	gªÆ_ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4644 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("HTML view of %s",

4645 
Cuºítbuf
->
buf„∫ame
)->
	g±r
;

4646 
	gbuf
->
	glökBuf„r
[
LB_SOURCE
] = 
Cuºítbuf
;

4647 
	gCuºítbuf
->
	glökBuf„r
[
LB_N_SOURCE
] = 
buf
;

4652 
	gbuf
->
	gcuºítURL
 = 
Cuºítbuf
->
cuºítURL
;

4653 
	gbuf
->
	gªÆ_scheme
 = 
Cuºítbuf
->
ªÆ_scheme
;

4654 
	gbuf
->
	gfûíame
 = 
Cuºítbuf
->
fûíame
;

4655 
	gbuf
->
	gsour˚fûe
 = 
Cuºítbuf
->
sour˚fûe
;

4656 
	gbuf
->
	ghódî_sour˚
 = 
Cuºítbuf
->
hódî_sour˚
;

4657 
	gbuf
->
	g£¨ch_hódî
 = 
Cuºítbuf
->
£¨ch_hódî
;

4658 #ifde‡
USE_M17N


4659 
	gbuf
->
	gdocumít_ch¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4661 
	gbuf
->
	g˛⁄e
 = 
Cuºítbuf
->
˛⁄e
;

4662 (*
	gbuf
->
	g˛⁄e
)++;

4664 
	gbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4665 
ªsh≠eBuf„r
(
buf
);

4666 
pushBuf„r
(
buf
);

4667 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4671 
DEFUN
(
ªlﬂd
, 
RELOAD
, "Reload buffer")

4673 
Buf„r
 *
	gbuf
, *
	gfbuf
 = 
NULL
, 
	gsbuf
;

4674 #ifde‡
USE_M17N


4675 
wc_˚s
 
	gﬁd_ch¨£t
;

4677 
Så
 
	guæ
;

4678 
F‹mLi°
 *
	gªque°
;

4679 
	gmu…ù¨t
;

4681 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
) {

4682 i‡(!
°rcmp
(
Cuºítbuf
->
buf„∫ame
, 
DOWNLOAD_LIST_TITLE
)) {

4683 
ldDL
();

4687 
di•_îr_mesßge
("C™'àªlﬂd...", 
TRUE
);

4690 i‡(
	gCuºítbuf
->
	gcuºítURL
.
	gscheme
 =
SCM_LOCAL
 &&

4691 !
°rcmp
(
Cuºítbuf
->
cuºítURL
.
fûe
, "-")) {

4694 
di•_îr_mesßge
("C™'àªlﬂd stdö", 
TRUE
);

4697 
c›yBuf„r
(&
sbuf
, 
Cuºítbuf
);

4698 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_FRAME
 &&

4699 (
	gfbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
])) {

4700 i‡(
fmInôülized
) {

4701 
mesßge
("Rendering frame", 0, 0);

4702 
ª‰esh
();

4704 i‡(!(
	gbuf
 = 
ªndîFøme
(
fbuf
, 1))) {

4705 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4708 i‡(
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]) {

4709 i‡(
	gbuf
->
	gsour˚fûe
 &&

4710 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]->
	gsour˚fûe
 &&

4711 !
°rcmp
(
buf
->
sour˚fûe
,

4712 
fbuf
->
lökBuf„r
[
LB_FRAME
]->
sour˚fûe
))

4713 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]->
	gsour˚fûe
 = 
NULL
;

4714 
dñBuf„r
(
fbuf
->
lökBuf„r
[
LB_FRAME
]);

4716 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
] = 
buf
;

4717 
	gbuf
->
	glökBuf„r
[
LB_N_FRAME
] = 
fbuf
;

4718 
pushBuf„r
(
buf
);

4719 
	gCuºítbuf
 = 
buf
;

4720 i‡(
	gCuºítbuf
->
	gfú°Löe
) {

4721 
COPY_BUFROOT
(
Cuºítbuf
, &
sbuf
);

4722 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
sbuf
);

4724 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4727 i‡(
	gCuºítbuf
->
	g‰ame£t
 !
NULL
)

4728 
fbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_FRAME
];

4729 
	gmu…ù¨t
 = 0;

4730 i‡(
	gCuºítbuf
->
	gf‹m_submô
) {

4731 
	gªque°
 = 
Cuºítbuf
->
f‹m_submô
->
∑ª¡
;

4732 i‡(
	gªque°
->
	gmëhod
 =
FORM_METHOD_POST


4733 && 
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

4734 
Så
 
quîy
;

4735 
°©
 
	g°
;

4736 
	gmu…ù¨t
 = 1;

4737 
quîy_‰om_fﬁlowf‹m
(&
quîy
, 
Cuºítbuf
->
f‹m_submô
, 
mu…ù¨t
);

4738 
°©
(
ªque°
->
body
, &
°
);

4739 
	gªque°
->
	gÀngth
 = 
°
.
°_size
;

4743 
	gªque°
 = 
NULL
;

4745 
	guæ
 = 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

4747 
mesßge
("Reloading...", 0, 0);

4748 
ª‰esh
();

4749 #ifde‡
USE_M17N


4750 
	gﬁd_ch¨£t
 = 
DocumítCh¨£t
;

4751 i‡(
	gCuºítbuf
->
	gdocumít_ch¨£t
 !
WC_CES_US_ASCII
)

4752 
DocumítCh¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4754 
	gSórchHódî
 = 
Cuºítbuf
->
£¨ch_hódî
;

4755 
	gDeÁu…Ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4756 
	gbuf
 = 
lﬂdGíîÆFûe
(
uæ
->
±r
, 
NULL
, 
NO_REFERER
, 
RG_NOCACHE
, 
ªque°
);

4757 #ifde‡
USE_M17N


4758 
	gDocumítCh¨£t
 = 
ﬁd_ch¨£t
;

4760 
	gSórchHódî
 = 
FALSE
;

4761 
	gDeÁu…Ty≥
 = 
NULL
;

4763 i‡(
	gmu…ù¨t
)

4764 
u∆ök
(
ªque°
->
body
);

4765 i‡(
	gbuf
 =
NULL
) {

4767 
di•_îr_mesßge
("C™'àªlﬂd...", 
TRUE
);

4770 i‡(
	gbuf
 =
NO_BUFFER
) {

4771 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4774 i‡(
	gfbuf
 !
NULL
)

4775 
Fú°buf
 = 
dñëeBuf„r
(Fú°buf, 
fbuf
);

4776 
ªpBuf„r
(
Cuºítbuf
, 
buf
);

4777 i‡((
	gbuf
->
	gty≥
 !
NULL
Ë&& (
sbuf
.
ty≥
 != NULL) &&

4778 ((!
°rˇ£cmp
(
buf
->
ty≥
, "text/plain") &&

4779 !
°rˇ£cmp
(
sbuf
.
ty≥
, "text/html")) ||

4780 (!
°rˇ£cmp
(
buf
->
ty≥
, "text/html") &&

4781 !
°rˇ£cmp
(
sbuf
.
ty≥
, "text/plain")))) {

4782 
vwSrc
();

4783 i‡(
	gCuºítbuf
 !
buf
)

4784 
Fú°buf
 = 
dñëeBuf„r
(Fú°buf, 
buf
);

4786 
	gCuºítbuf
->
	g£¨ch_hódî
 = 
sbuf
.
£¨ch_hódî
;

4787 
	gCuºítbuf
->
	gf‹m_submô
 = 
sbuf
.
f‹m_submô
;

4788 i‡(
	gCuºítbuf
->
	gfú°Löe
) {

4789 
COPY_BUFROOT
(
Cuºítbuf
, &
sbuf
);

4790 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
sbuf
);

4792 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4796 
DEFUN
(
ªsh≠e
, 
RESHAPE
, "Re-render buffer")

4798 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4799 
ªsh≠eBuf„r
(
Cuºítbuf
);

4800 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4803 #ifde‡
USE_M17N


4805 
_docCSë
(
wc_˚s
 
ch¨£t
)

4807 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4809 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
) {

4810 
di•_mesßge
("C™'àªlﬂd...", 
FALSE
);

4813 
	gCuºítbuf
->
	gdocumít_ch¨£t
 = 
ch¨£t
;

4814 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4815 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4819 
ch™ge_ch¨£t
(
∑r£d_èg¨g
 *
¨g
)

4821 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_INFO
];

4822 
wc_˚s
 
	gch¨£t
;

4824 i‡(
	gbuf
 =
NULL
)

4826 
dñBuf„r
(
Cuºítbuf
);

4827 
	gCuºítbuf
 = 
buf
;

4828 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4830 
	gch¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4831 ; 
	g¨g
;árg = 
¨g
->
√xt
) {

4832 i‡(!
°rcmp
(
¨g
->arg, "charset"))

4833 
ch¨£t
 = 
©oi
(
¨g
->
vÆue
);

4835 
_docCSë
(
ch¨£t
);

4838 
DEFUN
(
docCSë
, 
CHARSET
, "ChangeÅhe current document charset")

4840 *
	gcs
;

4841 
wc_˚s
 
	gch¨£t
;

4843 
	gcs
 = 
£¨chKeyD©a
();

4844 i‡(
	gcs
 =
NULL
 || *
cs
 == '\0')

4846 
cs
 = 
öputSå
("Document charset: ",

4847 
wc_˚s_to_ch¨£t
(
Cuºítbuf
->
documít_ch¨£t
));

4848 
	gch¨£t
 = 
wc_guess_ch¨£t_sh‹t
(
cs
, 0);

4849 i‡(
	gch¨£t
 == 0) {

4850 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4853 
_docCSë
(
ch¨£t
);

4856 
DEFUN
(
defCSë
, 
DEFAULT_CHARSET
, "ChangeÅhe default document charset")

4858 *
	gcs
;

4859 
wc_˚s
 
	gch¨£t
;

4861 
	gcs
 = 
£¨chKeyD©a
();

4862 i‡(
	gcs
 =
NULL
 || *
cs
 == '\0')

4864 
cs
 = 
öputSå
("Default document charset: ",

4865 
wc_˚s_to_ch¨£t
(
DocumítCh¨£t
));

4866 
	gch¨£t
 = 
wc_guess_ch¨£t_sh‹t
(
cs
, 0);

4867 i‡(
	gch¨£t
 != 0)

4868 
DocumítCh¨£t
 = 
ch¨£t
;

4869 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4875 
chkURLBuf„r
(
Buf„r
 *
buf
)

4877 *
	guæ_like_∑t
[] = {

4880 #ifde‡
USE_GOPHER


4884 #ifde‡
USE_NNTP


4888 #i‚de‡
USE_W3MMAILER


4891 #ifde‡
INET6


4895 
NULL


4897 
	gi
;

4898 
	gi
 = 0; 
	guæ_like_∑t
[
i
]; i++) {

4899 
ªAnch‹
(
buf
, 
uæ_like_∑t
[
i
]);

4901 #ifde‡
USE_EXTERNAL_URI_LOADER


4902 
chkExã∫ÆURIBuf„r
(
buf
);

4904 
	gbuf
->
	gcheck_uæ
 |
CHK_URL
;

4907 
DEFUN
(
chkURL
, 
MARK_URL
, "Mark URL-like stringsásánchors")

4909 
chkURLBuf„r
(
Cuºítbuf
);

4910 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4913 
DEFUN
(
chkWORD
, 
MARK_WORD
, "Mark current wordásánchor")

4915 *
	gp
;

4916 
	g•os
, 
	gïos
;

4917 
	gp
 = 
gëCurW‹d
(
Cuºítbuf
, &
•os
, &
ïos
, ":\"\'`<>()[]{}&|;*?$");

4918 i‡(
	gp
 =
NULL
)

4920 
ªAnch‹W‹d
(
Cuºítbuf
, Cuºítbuf->
cuºítLöe
, 
•os
, 
ïos
);

4921 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4924 #ifde‡
USE_NNTP


4927 
chkNMIDBuf„r
(
Buf„r
 *
buf
)

4929 *
	guæ_like_∑t
[] = {

4931 
NULL
,

4933 
	gi
;

4934 
	gi
 = 0; 
	guæ_like_∑t
[
i
]; i++) {

4935 
ªAnch‹News
(
buf
, 
uæ_like_∑t
[
i
]);

4937 
	gbuf
->
	gcheck_uæ
 |
CHK_NMID
;

4940 
DEFUN
(
chkNMID
, 
MARK_MID
, "Mark Message-ID-like stringsásánchors")

4942 
chkNMIDBuf„r
(
Cuºítbuf
);

4943 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4948 
DEFUN
(
rFøme
, 
FRAME
, "Render frame")

4950 
Buf„r
 *
	gbuf
;

4952 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_FRAME
]Ë!
NULL
) {

4953 
Cuºítbuf
 = 
buf
;

4954 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4957 i‡(
	gCuºítbuf
->
	g‰ame£t
 =
NULL
) {

4958 i‡((
buf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
]Ë!
NULL
) {

4959 
Cuºítbuf
 = 
buf
;

4960 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4964 i‡(
	gfmInôülized
) {

4965 
mesßge
("Rendering frame", 0, 0);

4966 
ª‰esh
();

4968 
	gbuf
 = 
ªndîFøme
(
Cuºítbuf
, 0);

4969 i‡(
	gbuf
 =
NULL
) {

4970 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4973 
	gbuf
->
	glökBuf„r
[
LB_N_FRAME
] = 
Cuºítbuf
;

4974 
	gCuºítbuf
->
	glökBuf„r
[
LB_FRAME
] = 
buf
;

4975 
pushBuf„r
(
buf
);

4976 i‡(
	gfmInôülized
 && 
	gdi•œy_ok
)

4977 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4982 
övoke_brow£r
(*
uæ
)

4984 
Så
 
	gcmd
;

4985 *
	gbrow£r
 = 
NULL
;

4986 
	gbg
 = 0, 
	gÀn
;

4988 
	gCuºítKeyD©a
 = 
NULL
;

4989 
	gbrow£r
 = 
£¨chKeyD©a
();

4990 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

4991 
¥ec_num
) {

4994 
brow£r
 = 
ExtBrow£r
;

4997 
brow£r
 = 
ExtBrow£r2
;

5000 
brow£r
 = 
ExtBrow£r3
;

5003 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

5004 
brow£r
 = 
öputSå
("Brow£ comm™d: ", 
NULL
);

5005 i‡(
	gbrow£r
 !
NULL
)

5006 
brow£r
 = 
c⁄v_to_sy°em
(browser);

5010 
	gbrow£r
 = 
c⁄v_to_sy°em
(
brow£r
);

5012 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

5013 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5017 i‡((
	gÀn
 = 
°æí
(
brow£r
)Ë>2 && brow£r[
Àn
 - 1] == '&' &&

5018 
brow£r
[
Àn
 - 2] != '\\') {

5019 
brow£r
 = 
ÆlocSå
(brow£r, 
Àn
 - 2);

5020 
	gbg
 = 1;

5022 
	gcmd
 = 
myExtComm™d
(
brow£r
, 
shñl_quŸe
(
uæ
), 
FALSE
);

5023 
Såªmovëøûög•a˚s
(
cmd
);

5024 
fmTîm
();

5025 
mySy°em
(
cmd
->
±r
, 
bg
);

5026 
fmInô
();

5027 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5030 
DEFUN
(
extbrz
, 
EXTERN
, "ExecuteÉxternal browser")

5032 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
) {

5034 
di•_îr_mesßge
("C™'àbrow£...", 
TRUE
);

5037 i‡(
	gCuºítbuf
->
	gcuºítURL
.
	gscheme
 =
SCM_LOCAL
 &&

5038 !
°rcmp
(
Cuºítbuf
->
cuºítURL
.
fûe
, "-")) {

5041 
di•_îr_mesßge
("C™'àbrow£ stdö", 
TRUE
);

5044 
övoke_brow£r
(
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
);

5047 
DEFUN
(
lökbrz
, 
EXTERN_LINK
, "View currentÜink usingÉxternal browser")

5049 
Anch‹
 *
	ga
;

5050 
P¨£dURL
 
	gpu
;

5052 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

5054 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

5055 i‡(
	ga
 =
NULL
)

5057 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
Cuºítbuf
));

5058 
övoke_brow£r
(
∑r£dURL2Så
(&
pu
)->
±r
);

5062 
DEFUN
(
cuæno
, 
LINE_INFO
, "Show currentÜineÇumber")

5064 
Löe
 *
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

5065 
Så
 
	gtmp
;

5066 
	gcur
 = 0, 
	gÆl
 = 0, 
	gcﬁ
 = 0, 
	gÀn
 = 0;

5068 i‡(
	gl
 !
NULL
) {

5069 
cur
 = 
l
->
ªÆ_löíumbî
;

5070 
	gcﬁ
 = 
l
->
bwidth
 + 
Cuºítbuf
->
cuºítCﬁumn
 + Cuºítbuf->
curs‹X
 + 1;

5071 
	gl
->
	g√xt
 &&Ü->√xt->
	gbpos
)

5072 
	gl
 = 
l
->
√xt
;

5073 i‡(
	gl
->
	gwidth
 < 0)

5074 
	gl
->
	gwidth
 = 
COLPOS
(
l
,Ü->
Àn
);

5075 
	gÀn
 = 
l
->
bwidth
 +Ü->
width
;

5077 i‡(
	gCuºítbuf
->
	gœ°Löe
)

5078 
	gÆl
 = 
Cuºítbuf
->
œ°Löe
->
ªÆ_löíumbî
;

5079 i‡(
	gCuºítbuf
->
	g∑gîSour˚
 && !(Cuºítbuf->
	gbuf„Ωr›
 & 
	gBP_CLOSE
))

5080 
	gtmp
 = 
S¥ötf
("löê%d cﬁ %d/%d", 
cur
, 
cﬁ
, 
Àn
);

5082 
	gtmp
 = 
S¥ötf
("löê%d/%d (%d%%Ëcﬁ %d/%d", 
cur
, 
Æl
,

5083 ()(()
cur
 * 100.0 / ()(
Æl
 ?áll : 1)

5084 + 0.5), 
cﬁ
, 
Àn
);

5085 #ifde‡
USE_M17N


5086 
Såˇt_ch¨p
(
tmp
, " ");

5087 
Såˇt_ch¨p
(
tmp
, 
wc_˚s_to_ch¨£t_desc
(
Cuºítbuf
->
documít_ch¨£t
));

5090 
di•_mesßge
(
tmp
->
±r
, 
FALSE
);

5093 #ifde‡
USE_IMAGE


5094 
DEFUN
(
di•I
, 
DISPLAY_IMAGE
, "RestartÜoadingánd drawing of images")

5096 i‡(!
	gdi•œyImage
)

5097 
öôImage
();

5098 i‡(!
	ga˘iveImage
)

5100 
	gdi•œyImage
 = 
TRUE
;

5105 
	gCuºítbuf
->
	gimage_Êag
 = 
IMG_FLAG_AUTO
;

5106 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

5107 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5110 
DEFUN
(
°›I
, 
STOP_IMAGE
, "StopÜoadingánd drawing of images")

5112 i‡(!
	ga˘iveImage
)

5118 
	gCuºítbuf
->
	gimage_Êag
 = 
IMG_FLAG_SKIP
;

5119 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5123 #ifde‡
USE_MOUSE


5126 
mou£_s¸ﬁl_löe
()

5128 i‡(
	gªœtive_whìl_s¸ﬁl
)

5129  (
ªœtive_whìl_s¸ﬁl_øtio
 * 
	gLASTLINE
 + 99) / 100;

5131  
	gfixed_whìl_s¸ﬁl_cou¡
;

5134 
TabBuf„r
 *

5135 
posTab
(
x
, 
y
)

5137 
TabBuf„r
 *
	gèb
;

5139 i‡(
	gmou£_a˘i⁄
.
	gmíu_°r
 && 
	gx
 < mou£_a˘i⁄.
	gmíu_width
 && 
	gy
 == 0)

5140  
NO_TABBUFFER
;

5141 i‡(
	gy
 > 
	gLa°Tab
->y)

5142  
	gNULL
;

5143 
	gèb
 = 
Fú°Tab
;Åab;Åab = 
èb
->
√xtTab
) {

5144 i‡(
èb
->
x1
 <
x
 && x <èb->
x2
 &&Åab->
y
 == y)

5145  
èb
;

5147  
	gNULL
;

5151 
do_mou£_a˘i⁄
(
bä
, 
x
, 
y
)

5153 
Mou£A˘i⁄M≠
 *
	gm≠
 = 
NULL
;

5154 
	gny
 = -1;

5156 i‡(
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
)

5157 
	gny
 = 
La°Tab
->
y
 + 1;

5159 
	gbä
) {

5160 
	gMOUSE_BTN1_DOWN
:

5161 
bä
 = 0;

5163 
	gMOUSE_BTN2_DOWN
:

5164 
bä
 = 1;

5166 
	gMOUSE_BTN3_DOWN
:

5167 
bä
 = 2;

5172 i‡(
	gy
 < 
	gny
) {

5173 i‡(
	gmou£_a˘i⁄
.
	gmíu_°r
 && 
	gx
 >0 && 
x
 < 
mou£_a˘i⁄
.
míu_width
) {

5174 i‡(
mou£_a˘i⁄
.
míu_m≠
[
bä
])

5175 
m≠
 = &
mou£_a˘i⁄
.
míu_m≠
[
bä
][
x
];

5178 
	gm≠
 = &
mou£_a˘i⁄
.
èb_m≠
[
bä
];

5180 i‡(
	gy
 =
LASTLINE
) {

5181 i‡(
mou£_a˘i⁄
.
œ°löe_°r
 && 
x
 >= 0 &&

5182 
x
 < 
mou£_a˘i⁄
.
œ°löe_width
) {

5183 i‡(
mou£_a˘i⁄
.
œ°löe_m≠
[
bä
])

5184 
m≠
 = &
mou£_a˘i⁄
.
œ°löe_m≠
[
bä
][
x
];

5187 i‡(
	gy
 > 
	gny
) {

5188 i‡(
	gy
 =
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
 &&

5189 (
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX


5190 #ifde‡
USE_M17N


5191 || (
WcO±i⁄
.
u£_wide
 && 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5192 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->
¥›Buf
[Cuºítbuf->
pos
])

5193 =
PC_KANJI1
)

5194 && 
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
 + 1)

5197 i‡(
ªåõveCuºítAnch‹
(
Cuºítbuf
) ||

5198 
ªåõveCuºítF‹m
(
Cuºítbuf
)) {

5199 
m≠
 = &
mou£_a˘i⁄
.
a˘ive_m≠
[
bä
];

5200 i‡(!(
	gm≠
 && m≠->
	gfunc
))

5201 
	gm≠
 = &
mou£_a˘i⁄
.
™ch‹_m≠
[
bä
];

5205 
	gcx
 = 
Cuºítbuf
->
curs‹X
, 
	gcy
 = Cuºítbuf->
curs‹Y
;

5206 
curs‹XY
(
Cuºítbuf
, 
x
 - Cuºítbuf->
roŸX
, 
y
 - Cuºítbuf->
roŸY
);

5207 i‡(
	gy
 =
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
 &&

5208 (
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX


5209 #ifde‡
USE_M17N


5210 || (
WcO±i⁄
.
u£_wide
 && 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5211 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->

5212 
¥›Buf
[
Cuºítbuf
->
pos
]Ë=
PC_KANJI1
)

5213 && 
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
 + 1)

5216 (
ªåõveCuºítAnch‹
(
Cuºítbuf
) ||

5217 
ªåõveCuºítF‹m
(
Cuºítbuf
)))

5218 
m≠
 = &
mou£_a˘i⁄
.
™ch‹_m≠
[
bä
];

5219 
curs‹XY
(
Cuºítbuf
, 
cx
, 
cy
);

5225 i‡(!(
	gm≠
 && m≠->
	gfunc
))

5226 
	gm≠
 = &
mou£_a˘i⁄
.
deÁu…_m≠
[
bä
];

5227 i‡(
	gm≠
 && m≠->
	gfunc
) {

5228 
	gmou£_a˘i⁄
.
	gö_a˘i⁄
 = 
TRUE
;

5229 
	gmou£_a˘i⁄
.
	gcurs‹X
 = 
x
;

5230 
	gmou£_a˘i⁄
.
	gcurs‹Y
 = 
y
;

5231 
	gCuºítKey
 = -1;

5232 
	gCuºítKeyD©a
 = 
NULL
;

5233 
	gCuºítCmdD©a
 = 
m≠
->
d©a
;

5234 (*
	gm≠
->
	gfunc
) ();

5235 
	gCuºítCmdD©a
 = 
NULL
;

5240 
¥o˚ss_mou£
(
bä
, 
x
, 
y
)

5242 
	gdñè_x
, 
	gdñè_y
, 
	gi
;

5243 
	g¥ess_bä
 = 
MOUSE_BTN_RESET
, 
	g¥ess_x
, 
	g¥ess_y
;

5244 
TabBuf„r
 *
	gt
;

5245 
	gny
 = -1;

5247 i‡(
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
)

5248 
	gny
 = 
La°Tab
->
y
 + 1;

5249 i‡(
	gbä
 =
MOUSE_BTN_UP
) {

5250 
¥ess_bä
) {

5251 
MOUSE_BTN1_DOWN
:

5252 i‡(
¥ess_y
 =
y
 && 
¥ess_x
 =
x
)

5253 
do_mou£_a˘i⁄
(
¥ess_bä
, 
x
, 
y
);

5254 i‡(
	gny
 > 0 && 
	gy
 <Çy) {

5255 i‡(
	g¥ess_y
 < 
	gny
) {

5256 
moveTab
(
posTab
(
¥ess_x
, 
¥ess_y
),ÖosTab(
x
, 
y
),

5257 (
¥ess_y
 =
y
Ë? (
¥ess_x
 < 
x
) : (press_y < y));

5260 i‡(
	g¥ess_x
 >
Cuºítbuf
->
roŸX
) {

5261 
Buf„r
 *
buf
 = 
Cuºítbuf
;

5262 
	gcx
 = 
Cuºítbuf
->
curs‹X
, 
	gcy
 = Cuºítbuf->
curs‹Y
;

5264 
	gt
 = 
posTab
(
x
, 
y
);

5265 i‡(
	gt
 =
NULL
)

5267 i‡(
	gt
 =
NO_TABBUFFER
)

5268 
t
 = 
NULL
;

5269 
curs‹XY
(
Cuºítbuf
, 
¥ess_x
 - Cuºítbuf->
roŸX
,

5270 
¥ess_y
 - 
Cuºítbuf
->
roŸY
);

5271 i‡(
	gCuºítbuf
->
	gcurs‹Y
 =
¥ess_y
 - 
Cuºítbuf
->
roŸY
 &&

5272 (
Cuºítbuf
->
curs‹X
 =
¥ess_x
 - Cuºítbuf->
roŸX


5273 #ifde‡
USE_M17N


5274 || (
WcO±i⁄
.
u£_wide
 &&

5275 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5276 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->

5277 
¥›Buf
[
Cuºítbuf
->
pos
]Ë=
PC_KANJI1
)

5278 && 
Cuºítbuf
->
curs‹X
 =
¥ess_x


5279 - 
Cuºítbuf
->
roŸX
 - 1)

5282 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5283 
fﬁlowTab
(
t
);

5285 i‡(
	gbuf
 =
Cuºítbuf
)

5286 
curs‹XY
(
Cuºítbuf
, 
cx
, 
cy
);

5291 
	gdñè_x
 = 
x
 - 
¥ess_x
;

5292 
	gdñè_y
 = 
y
 - 
¥ess_y
;

5294 i‡(
abs
(
dñè_x
Ë<ábs(
dñè_y
) / 3)

5295 
	gdñè_x
 = 0;

5296 i‡(
abs
(
dñè_y
Ë<ábs(
dñè_x
) / 3)

5297 
	gdñè_y
 = 0;

5298 i‡(
	gªvî£_mou£
) {

5299 
	gdñè_y
 = -
dñè_y
;

5300 
	gdñè_x
 = -
dñè_x
;

5302 i‡(
	gdñè_y
 > 0) {

5303 
	g¥ec_num
 = 
dñè_y
;

5304 
ldown1
();

5306 i‡(
	gdñè_y
 < 0) {

5307 
	g¥ec_num
 = -
dñè_y
;

5308 
lup1
();

5310 i‡(
	gdñè_x
 > 0) {

5311 
	g¥ec_num
 = 
dñè_x
;

5312 
cﬁ1L
();

5314 i‡(
	gdñè_x
 < 0) {

5315 
	g¥ec_num
 = -
dñè_x
;

5316 
cﬁ1R
();

5320 
	gMOUSE_BTN2_DOWN
:

5321 
MOUSE_BTN3_DOWN
:

5322 i‡(
¥ess_y
 =
y
 && 
¥ess_x
 =
x
)

5323 
do_mou£_a˘i⁄
(
¥ess_bä
, 
x
, 
y
);

5325 
	gMOUSE_BTN4_DOWN_RXVT
:

5326 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5327 
ldown1
();

5329 
	gMOUSE_BTN5_DOWN_RXVT
:

5330 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5331 
lup1
();

5335 i‡(
	gbä
 =
MOUSE_BTN4_DOWN_XTERM
) {

5336 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5337 
ldown1
();

5339 i‡(
	gbä
 =
MOUSE_BTN5_DOWN_XTERM
) {

5340 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5341 
lup1
();

5344 i‡(
	gbä
 !
MOUSE_BTN4_DOWN_RXVT
 || 
¥ess_bä
 =
MOUSE_BTN_RESET
) {

5345 
¥ess_bä
 = 
bä
;

5346 
	g¥ess_x
 = 
x
;

5347 
	g¥ess_y
 = 
y
;

5350 
	g¥ess_bä
 = 
MOUSE_BTN_RESET
;

5354 
DEFUN
(
msToggÀ
, 
MOUSE_TOGGLE
, "Toggleáctivity of mouse")

5356 i‡(
	gu£_mou£
) {

5357 
	gu£_mou£
 = 
FALSE
;

5360 
	gu£_mou£
 = 
TRUE
;

5362 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5365 
DEFUN
(
mou£
, 
MOUSE
, "mouse operation")

5367 
	gbä
, 
	gx
, 
	gy
;

5369 
	gbä
 = ()
gëch
() - 32;

5370 #i‡
deföed
(
__CYGWIN__
Ë&& 
CYGWIN_VERSION_DLL_MAJOR
 < 1005

5371 i‡(
	gcygwö_mou£_bä_sw≠≥d
) {

5372 i‡(
	gbä
 =
MOUSE_BTN2_DOWN
)

5373 
bä
 = 
MOUSE_BTN3_DOWN
;

5374 i‡(
	gbä
 =
MOUSE_BTN3_DOWN
)

5375 
bä
 = 
MOUSE_BTN2_DOWN
;

5378 
	gx
 = ()
gëch
() - 33;

5379 i‡(
	gx
 < 0)

5380 
	gx
 += 0x100;

5381 
	gy
 = ()
gëch
() - 33;

5382 i‡(
	gy
 < 0)

5383 
	gy
 += 0x100;

5385 i‡(
	gx
 < 0 || x >
COLS
 || 
y
 < 0 || y > 
LASTLINE
)

5387 
¥o˚ss_mou£
(
bä
, 
x
, 
y
);

5390 #ifde‡
USE_GPM


5392 
gpm_¥o˚ss_mou£
(
Gpm_Evít
 * 
evít
, *
d©a
)

5394 
	gbä
 = 
MOUSE_BTN_RESET
, 
	gx
, 
	gy
;

5395 i‡(
	gevít
->
	gty≥
 & 
	gGPM_UP
)

5396 
	gbä
 = 
MOUSE_BTN_UP
;

5397 i‡(
	gevít
->
	gty≥
 & 
	gGPM_DOWN
) {

5398 
	gevít
->
	gbuâ⁄s
) {

5399 
	gGPM_B_LEFT
:

5400 
bä
 = 
MOUSE_BTN1_DOWN
;

5402 
	gGPM_B_MIDDLE
:

5403 
bä
 = 
MOUSE_BTN2_DOWN
;

5405 
	gGPM_B_RIGHT
:

5406 
bä
 = 
MOUSE_BTN3_DOWN
;

5411 
GPM_DRAWPOINTER
(
evít
);

5414 
	gx
 = 
evít
->
x
;

5415 
	gy
 = 
evít
->
y
;

5416 
¥o˚ss_mou£
(
bä
, 
x
 - 1, 
y
 - 1);

5421 #ifde‡
USE_SYSMOUSE


5423 
sysm_¥o˚ss_mou£
(
x
, 
y
, 
nbs
, 
obs
)

5425 
	gbä
;

5426 
	gbôs
;

5428 i‡(
	gobs
 & ~
	gnbs
)

5429 
	gbä
 = 
MOUSE_BTN_UP
;

5430 i‡(
	gnbs
 & ~
	gobs
) {

5431 
	gbôs
 = 
nbs
 & ~
obs
;

5432 
	gbä
 = 
bôs
 & 0x1 ? 
MOUSE_BTN1_DOWN
 :

5433 (
bôs
 & 0x2 ? 
MOUSE_BTN2_DOWN
 :

5434 (
bôs
 & 0x4 ? 
MOUSE_BTN3_DOWN
 : 0));

5438 
¥o˚ss_mou£
(
bä
, 
x
, 
y
);

5443 
DEFUN
(
movMs
, 
MOVE_MOUSE
, "Move cursorÅo mouse cursor (for mouseáction)")

5445 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5447 i‡((
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
) &&

5448 
	gmou£_a˘i⁄
.
	gcurs‹Y
 < 
	gLa°Tab
->
	gy
 + 1)

5450 i‡(
	gmou£_a˘i⁄
.
	gcurs‹X
 >
Cuºítbuf
->
roŸX
 &&

5451 
mou£_a˘i⁄
.
curs‹Y
 < 
LASTLINE
) {

5452 
curs‹XY
(
Cuºítbuf
, 
mou£_a˘i⁄
.
curs‹X
 - Cuºítbuf->
roŸX
,

5453 
mou£_a˘i⁄
.
curs‹Y
 - 
Cuºítbuf
->
roŸY
);

5455 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5458 #ifde‡
USE_MENU


5459 #ifde‡
KANJI_SYMBOLS


5460 
	#FRAME_WIDTH
 2

	)

5462 
	#FRAME_WIDTH
 1

	)

5465 
DEFUN
(
míuMs
, 
MENU_MOUSE
, "Popup menuát mouse cursor (for mouseáction)")

5467 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5469 i‡((
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
) &&

5470 
	gmou£_a˘i⁄
.
	gcurs‹Y
 < 
	gLa°Tab
->
	gy
 + 1)

5471 
	gmou£_a˘i⁄
.
	gcurs‹X
 -
FRAME_WIDTH
 + 1;

5472 i‡(
	gmou£_a˘i⁄
.
	gcurs‹X
 >
Cuºítbuf
->
roŸX
 &&

5473 
mou£_a˘i⁄
.
curs‹Y
 < 
LASTLINE
) {

5474 
curs‹XY
(
Cuºítbuf
, 
mou£_a˘i⁄
.
curs‹X
 - Cuºítbuf->
roŸX
,

5475 
mou£_a˘i⁄
.
curs‹Y
 - 
Cuºítbuf
->
roŸY
);

5476 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5478 
maöMn
();

5482 
DEFUN
(
èbMs
, 
TAB_MOUSE
, "MoveÅoÅab on mouse cursor (for mouseáction)")

5484 
TabBuf„r
 *
	gèb
;

5486 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5488 
	gèb
 = 
posTab
(
mou£_a˘i⁄
.
curs‹X
, mou£_a˘i⁄.
curs‹Y
);

5489 i‡(!
	gèb
 ||Åab =
NO_TABBUFFER
)

5491 
	gCuºítTab
 = 
èb
;

5492 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5495 
DEFUN
(
˛o£TMs
, 
CLOSE_TAB_MOUSE
,

5498 
TabBuf„r
 *
	gèb
;

5500 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5502 
	gèb
 = 
posTab
(
mou£_a˘i⁄
.
curs‹X
, mou£_a˘i⁄.
curs‹Y
);

5503 i‡(!
	gèb
 ||Åab =
NO_TABBUFFER
)

5505 
dñëeTab
(
èb
);

5506 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5510 
DEFUN
(
di•Vî
, 
VERSION
, "Display version of w3m")

5512 
di•_mesßge
(
S¥ötf
("w3m vîsi⁄ %s", 
w3m_vîsi⁄
)->
±r
, 
TRUE
);

5515 
DEFUN
(
wøpToggÀ
, 
WRAP_TOGGLE
, "Toggle wrap search mode")

5517 i‡(
	gWøpSórch
) {

5518 
	gWøpSórch
 = 
FALSE
;

5520 
di•_mesßge
("Wø∞£¨ch off", 
TRUE
);

5523 
	gWøpSórch
 = 
TRUE
;

5525 
di•_mesßge
("Wø∞£¨ch on", 
TRUE
);

5530 
is_w‹dch¨
(
c
, c⁄° *
badch¨s
)

5532 i‡(
	gbadch¨s
)

5533  !(
IS_SPACE
(
c
Ë|| 
°rchr
(
badch¨s
, c));

5535  
IS_ALPHA
(
c
);

5539 
gëCurW‹d
(
Buf„r
 *
buf
, *
•os
, *
ïos
, c⁄° *
badch¨s
)

5541 *
	gp
;

5542 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

5543 
	gb
, 
	ge
;

5545 *
	g•os
 = 0;

5546 *
	gïos
 = 0;

5547 i‡(
	gl
 =
NULL
)

5548  
NULL
;

5549 
	gp
 = 
l
->
löeBuf
;

5550 
	ge
 = 
buf
->
pos
;

5551 
	ge
 > 0 && !
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5552 
	ge
--;

5553 i‡(!
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5554  
	gNULL
;

5555 
	gb
 = 
e
;

5556 
	gb
 > 0 && 
is_w‹dch¨
(
p
[
b
 - 1], 
badch¨s
))

5557 
	gb
--;

5558 
	ge
 < 
	gl
->
	gÀn
 && 
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5559 
	ge
++;

5560 *
	g•os
 = 
b
;

5561 *
	gïos
 = 
e
;

5562  &
	gp
[
b
];

5566 
GëW‹d
(
Buf„r
 *
buf
)

5568 
	gb
, 
	ge
;

5569 *
	gp
;

5571 i‡((
	gp
 = 
gëCurW‹d
(
buf
, &
b
, &
e
, 0)Ë!
NULL
) {

5572  
Så√w_ch¨p_n
(
p
, 
e
 - 
b
)->
±r
;

5574  
	gNULL
;

5577 #ifde‡
USE_DICT


5579 
execdi˘
(*
w‹d
)

5581 *
	gw
, *
	gdi˘cmd
;

5582 
Buf„r
 *
	gbuf
;

5584 i‡(!
	gU£Di˘Comm™d
 || 
	gw‹d
 =
NULL
 || *
w‹d
 == '\0') {

5585 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5588 
	gw
 = 
c⁄v_to_sy°em
(
w‹d
);

5589 i‡(*
	gw
 == '\0') {

5590 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5593 
	gdi˘cmd
 = 
S¥ötf
("%s?%s", 
Di˘Comm™d
,

5594 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w
))->
±r
)->
	g±r
;

5595 
	gbuf
 = 
lﬂdGíîÆFûe
(
di˘cmd
, 
NULL
, 
NO_REFERER
, 0, NULL);

5596 i‡(
	gbuf
 =
NULL
) {

5597 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

5601 
	gbuf
->
	gfûíame
 = 
w
;

5602 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
DICTBUFFERNAME
, 
w‹d
)->
	g±r
;

5603 i‡(
	gbuf
->
	gty≥
 =
NULL
)

5604 
buf
->
ty≥
 = "text/plain";

5605 
pushBuf„r
(
buf
);

5607 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5610 
DEFUN
(
di˘w‹d
, 
DICT_WORD
, "Execute dictionary command (see README.dict)")

5612 
execdi˘
(
öputSå
("(dictionary)!", ""));

5615 
DEFUN
(
di˘w‹d©
, 
DICT_WORD_AT
,

5618 
execdi˘
(
GëW‹d
(
Cuºítbuf
));

5623 
£t_buf„r_ívú⁄
(
Buf„r
 *
buf
)

5625 
Buf„r
 *
	g¥ev_buf
 = 
NULL
;

5626 
Löe
 *
	g¥ev_löe
 = 
NULL
;

5627 
	g¥ev_pos
 = -1;

5628 
Löe
 *
	gl
;

5630 i‡(
	gbuf
 =
NULL
)

5632 i‡(
	gbuf
 !
¥ev_buf
) {

5633 
£t_ívú⁄
("W3M_SOURCEFILE", 
buf
->
sour˚fûe
);

5634 
£t_ívú⁄
("W3M_FILENAME", 
buf
->
fûíame
);

5635 
£t_ívú⁄
("W3M_TITLE", 
buf
->
buf„∫ame
);

5636 
£t_ívú⁄
("W3M_URL", 
∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

5637 
£t_ívú⁄
("W3M_TYPE", 
buf
->
ªÆ_ty≥
 ? buf->real_type : "unknown");

5638 #ifde‡
USE_M17N


5639 
£t_ívú⁄
("W3M_CHARSET", 
wc_˚s_to_ch¨£t
(
buf
->
documít_ch¨£t
));

5642 
	gl
 = 
buf
->
cuºítLöe
;

5643 i‡(
	gl
 && (
	gbuf
 !
¥ev_buf
 || 
l
 !
¥ev_löe
 || 
buf
->
pos
 !
¥ev_pos
)) {

5644 
Anch‹
 *
a
;

5645 
P¨£dURL
 
	gpu
;

5646 *
	gs
 = 
GëW‹d
(
buf
);

5647 
£t_ívú⁄
("W3M_CURRENT_WORD", 
s
 ? s : "");

5648 
	ga
 = 
ªåõveCuºítAnch‹
(
buf
);

5649 i‡(
	ga
) {

5650 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
buf
));

5651 
£t_ívú⁄
("W3M_CURRENT_LINK", 
∑r£dURL2Så
(&
pu
)->
±r
);

5654 
£t_ívú⁄
("W3M_CURRENT_LINK", "");

5655 
	ga
 = 
ªåõveCuºítImg
(
buf
);

5656 i‡(
	ga
) {

5657 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
buf
));

5658 
£t_ívú⁄
("W3M_CURRENT_IMG", 
∑r£dURL2Så
(&
pu
)->
±r
);

5661 
£t_ívú⁄
("W3M_CURRENT_IMG", "");

5662 
	ga
 = 
ªåõveCuºítF‹m
(
buf
);

5663 i‡(
	ga
)

5664 
£t_ívú⁄
("W3M_CURRENT_FORM", 
f‹m2°r
((
F‹mIãmLi°
 *)
a
->
uæ
));

5666 
£t_ívú⁄
("W3M_CURRENT_FORM", "");

5667 
£t_ívú⁄
("W3M_CURRENT_LINE", 
S¥ötf
("%d",

5668 
l
->
ªÆ_löíumbî
)->
±r
);

5669 
£t_ívú⁄
("W3M_CURRENT_COLUMN", 
S¥ötf
("%d",

5670 
buf
->
cuºítCﬁumn
 +

5671 
buf
->
curs‹X
 + 1)->
±r
);

5673 i‡(!
	gl
) {

5674 
£t_ívú⁄
("W3M_CURRENT_WORD", "");

5675 
£t_ívú⁄
("W3M_CURRENT_LINK", "");

5676 
£t_ívú⁄
("W3M_CURRENT_IMG", "");

5677 
£t_ívú⁄
("W3M_CURRENT_FORM", "");

5678 
£t_ívú⁄
("W3M_CURRENT_LINE", "0");

5679 
£t_ívú⁄
("W3M_CURRENT_COLUMN", "0");

5681 
	g¥ev_buf
 = 
buf
;

5682 
	g¥ev_löe
 = 
l
;

5683 
	g¥ev_pos
 = 
buf
->
pos
;

5687 
£¨chKeyD©a
()

5689 *
	gd©a
 = 
NULL
;

5691 i‡(
	gCuºítKeyD©a
 !
NULL
 && *
CuºítKeyD©a
 != '\0')

5692 
d©a
 = 
CuºítKeyD©a
;

5693 i‡(
	gCuºítCmdD©a
 !
NULL
 && *
CuºítCmdD©a
 != '\0')

5694 
d©a
 = 
CuºítCmdD©a
;

5695 i‡(
	gCuºítKey
 >= 0)

5696 
d©a
 = 
gëKeyD©a
(
CuºítKey
);

5697 
	gCuºítKeyD©a
 = 
NULL
;

5698 
	gCuºítCmdD©a
 = 
NULL
;

5699 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0')

5700  
NULL
;

5701  
ÆlocSå
(
d©a
, -1);

5705 
£¨chKeyNum
()

5707 *
	gd
;

5708 
	gn
 = 1;

5710 
	gd
 = 
£¨chKeyD©a
();

5711 i‡(
	gd
 !
NULL
)

5712 
n
 = 
©oi
(
d
);

5713  
n
 * 
	gPREC_NUM
;

5716 #ifde‡
__EMX__


5717 #ifde‡
USE_M17N


5719 
gëCodePage
()

5721 
	gCpLi°
[8], 
	gCpSize
;

5723 i‡(!
gëív
("WINDOWID"Ë&& !
DosQuîyCp
((
CpLi°
), CpLi°, &
CpSize
))

5724  
S¥ötf
("CP%d", *
CpLi°
)->
	g±r
;

5725  
	gNULL
;

5731 
dñëeFûes
()

5733 
Buf„r
 *
	gbuf
;

5734 *
	gf
;

5736 
	gCuºítTab
 = 
Fú°Tab
; CuºítTab; CuºítTab = 
CuºítTab
->
√xtTab
) {

5737 
Fú°buf
 && Fú°bu‡!
NO_BUFFER
) {

5738 
buf
 = 
Fú°buf
->
√xtBuf„r
;

5739 
disˇrdBuf„r
(
Fú°buf
);

5740 
	gFú°buf
 = 
buf
;

5743 (
	gf
 = 
p›Text
(
fûeToDñëe
)Ë!
NULL
)

5744 
u∆ök
(
f
);

5748 
w3m_exô
(
i
)

5750 #ifde‡
USE_MIGEMO


5751 
öô_migemo
();

5753 
°›Dow∆ﬂd
();

5754 
dñëeFûes
();

5755 #ifde‡
USE_SSL


5756 
‰ì_s¶_˘x
();

5758 
disc⁄√˘FTP
();

5759 #ifde‡
USE_NNTP


5760 
disc⁄√˘News
();

5762 #ifde‡
__MINGW32_VERSION


5763 
WSACÀ™up
();

5765 
exô
(
i
);

5768 
DEFUN
(
execCmd
, 
COMMAND
, "Execute w3m command(s)")

5770 *
	gd©a
, *
	gp
;

5771 
	gcmd
;

5773 
	gCuºítKeyD©a
 = 
NULL
;

5774 
	gd©a
 = 
£¨chKeyD©a
();

5775 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5776 
d©a
 = 
öputSåHi°
("comm™d [; ...]: ", "", 
TextHi°
);

5777 i‡(
	gd©a
 =
NULL
) {

5778 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5783 *
	gd©a
) {

5784 
SKIP_BLANKS
(
d©a
);

5785 i‡(*
	gd©a
 == ';') {

5786 
d©a
++;

5789 
	gp
 = 
gëW‹d
(&
d©a
);

5790 
	gcmd
 = 
gëFuncLi°
(
p
);

5791 i‡(
	gcmd
 < 0)

5793 
	gp
 = 
gëQW‹d
(&
d©a
);

5794 
	gCuºítKey
 = -1;

5795 
	gCuºítKeyD©a
 = 
NULL
;

5796 
	gCuºítCmdD©a
 = *
p
 ?Ö : 
NULL
;

5797 #ifde‡
USE_MOUSE


5798 i‡(
	gu£_mou£
)

5799 
mou£_öa˘ive
();

5801 
	gw3mFuncLi°
[
cmd
].
func
();

5802 #ifde‡
USE_MOUSE


5803 i‡(
	gu£_mou£
)

5804 
mou£_a˘ive
();

5806 
	gCuºítCmdD©a
 = 
NULL
;

5808 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5811 #ifde‡
USE_ALARM


5812 
MySig«lH™dÀr


5813 
SigAœrm
(
SIGNAL_ARG
)

5815 *
	gd©a
;

5817 i‡(
	gCuºítAœrm
->
	g£c
 > 0) {

5818 
	gCuºítKey
 = -1;

5819 
	gCuºítKeyD©a
 = 
NULL
;

5820 
	gCuºítCmdD©a
 = 
d©a
 = (*)
CuºítAœrm
->data;

5821 #ifde‡
USE_MOUSE


5822 i‡(
	gu£_mou£
)

5823 
mou£_öa˘ive
();

5825 
	gw3mFuncLi°
[
CuºítAœrm
->
cmd
].
func
();

5826 #ifde‡
USE_MOUSE


5827 i‡(
	gu£_mou£
)

5828 
mou£_a˘ive
();

5830 
	gCuºítCmdD©a
 = 
NULL
;

5831 i‡(
	gCuºítAœrm
->
	g°©us
 =
AL_IMPLICIT_ONCE
) {

5832 
CuºítAœrm
->
£c
 = 0;

5833 
	gCuºítAœrm
->
	g°©us
 = 
AL_UNSET
;

5835 i‡(
	gCuºítbuf
->
	gevít
) {

5836 i‡(
	gCuºítbuf
->
	gevít
->
	g°©us
 !
AL_UNSET
)

5837 
CuºítAœrm
 = 
Cuºítbuf
->
evít
;

5839 
	gCuºítbuf
->
	gevít
 = 
NULL
;

5841 i‡(!
	gCuºítbuf
->
	gevít
)

5842 
	gCuºítAœrm
 = &
DeÁu…Aœrm
;

5843 i‡(
	gCuºítAœrm
->
	g£c
 > 0) {

5844 
mySig«l
(
SIGALRM
, 
SigAœrm
);

5845 
Æ¨m
(
CuºítAœrm
->
£c
);

5848 
	gSIGNAL_RETURN
;

5852 
DEFUN
(
£tAœrm
, 
ALARM
, "Setálarm")

5854 *
	gd©a
;

5855 
	g£c
 = 0, 
	gcmd
 = -1;

5857 
	gCuºítKeyD©a
 = 
NULL
;

5858 
	gd©a
 = 
£¨chKeyD©a
();

5859 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5860 
d©a
 = 
öputSåHi°
("(Aœrm)£¯comm™d: ", "", 
TextHi°
);

5861 i‡(
	gd©a
 =
NULL
) {

5862 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5866 i‡(*
	gd©a
 != '\0') {

5867 
£c
 = 
©oi
(
gëW‹d
(&
d©a
));

5868 i‡(
	g£c
 > 0)

5869 
	gcmd
 = 
gëFuncLi°
(
gëW‹d
(&
d©a
));

5871 i‡(
	gcmd
 >= 0) {

5872 
d©a
 = 
gëQW‹d
(&data);

5873 
£tAœrmEvít
(&
DeÁu…Aœrm
, 
£c
, 
AL_EXPLICIT
, 
cmd
, 
d©a
);

5874 
di•_mesßge_n£c
(
S¥ötf
("%d£¯%†%s", 
£c
, 
w3mFuncLi°
[
cmd
].
id
,

5875 
d©a
)->
±r
, 
FALSE
, 1, FALSE, 
TRUE
);

5878 
£tAœrmEvít
(&
DeÁu…Aœrm
, 0, 
AL_UNSET
, 
FUNCNAME_nulcmd
, 
NULL
);

5880 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5883 
AœrmEvít
 *

5884 
£tAœrmEvít
(
AœrmEvít
 * 
evít
, 
£c
, 
°©us
, 
cmd
, *
d©a
)

5886 i‡(
	gevít
 =
NULL
)

5887 
evít
 = 
New
(
AœrmEvít
);

5888 
	gevít
->
	g£c
 = 
£c
;

5889 
	gevít
->
	g°©us
 = 
°©us
;

5890 
	gevít
->
	gcmd
 = 
cmd
;

5891 
	gevít
->
	gd©a
 = 
d©a
;

5892  
	gevít
;

5896 
DEFUN
(
ªöô
, 
REINIT
, "Reload configuration files")

5898 *
	gªsour˚
 = 
£¨chKeyD©a
();

5900 i‡(
	gªsour˚
 =
NULL
) {

5901 
öô_rc
();

5902 
sync_wôh_›ti⁄
();

5903 #ifde‡
USE_COOKIE


5904 
öôCookõ
();

5906 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5910 i‡(!
°rˇ£cmp
(
ªsour˚
, "CONFIG") || !strcasecmp(resource, "RC")) {

5911 
öô_rc
();

5912 
sync_wôh_›ti⁄
();

5913 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5917 #ifde‡
USE_COOKIE


5918 i‡(!
°rˇ£cmp
(
ªsour˚
, "COOKIE")) {

5919 
öôCookõ
();

5924 i‡(!
°rˇ£cmp
(
ªsour˚
, "KEYMAP")) {

5925 
öôKeym≠
(
TRUE
);

5929 i‡(!
°rˇ£cmp
(
ªsour˚
, "MAILCAP")) {

5930 
öôMaûˇp
();

5934 #ifde‡
USE_MOUSE


5935 i‡(!
°rˇ£cmp
(
ªsour˚
, "MOUSE")) {

5936 
öôMou£A˘i⁄
();

5937 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5942 #ifde‡
USE_MENU


5943 i‡(!
°rˇ£cmp
(
ªsour˚
, "MENU")) {

5944 
öôMíu
();

5949 i‡(!
°rˇ£cmp
(
ªsour˚
, "MIMETYPES")) {

5950 
öôMimeTy≥s
();

5954 #ifde‡
USE_EXTERNAL_URI_LOADER


5955 i‡(!
°rˇ£cmp
(
ªsour˚
, "URIMETHODS")) {

5956 
öôURIMëhods
();

5961 
di•_îr_mesßge
(
S¥ötf
("D⁄'àknow howÅÿªöôülizê'%s'", 
ªsour˚
)->

5962 
±r
, 
FALSE
);

5965 
DEFUN
(
defKey
, 
DEFINE_KEY
,

5968 *
	gd©a
;

5970 
	gCuºítKeyD©a
 = 
NULL
;

5971 
	gd©a
 = 
£¨chKeyD©a
();

5972 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5973 
d©a
 = 
öputSåHi°
("Key deföôi⁄: ", "", 
TextHi°
);

5974 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5975 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5979 
£tKeym≠
(
ÆlocSå
(
d©a
, -1), -1, 
TRUE
);

5980 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5983 
TabBuf„r
 *

5984 
√wTab
()

5986 
TabBuf„r
 *
	gn
;

5988 
	gn
 = 
New
(
TabBuf„r
);

5989 i‡(
	gn
 =
NULL
)

5990  
NULL
;

5991 
	gn
->
	g√xtTab
 = 
NULL
;

5992 
	gn
->
	gcuºítBuf„r
 = 
NULL
;

5993 
	gn
->
	gfú°Buf„r
 = 
NULL
;

5994  
	gn
;

5998 
_√wT
()

6000 
TabBuf„r
 *
	gèg
;

6001 
Buf„r
 *
	gbuf
;

6002 
	gi
;

6004 
	gèg
 = 
√wTab
();

6005 i‡(!
	gèg
)

6008 
	gbuf
 = 
√wBuf„r
(
Cuºítbuf
->
width
);

6009 
c›yBuf„r
(
buf
, 
Cuºítbuf
);

6010 
	gbuf
->
	g√xtBuf„r
 = 
NULL
;

6011 
	gi
 = 0; i < 
	gMAX_LB
; i++)

6012 
	gbuf
->
	glökBuf„r
[
i
] = 
NULL
;

6013 (*
	gbuf
->
	g˛⁄e
)++;

6014 
	gèg
->
	gfú°Buf„r
 = 
èg
->
cuºítBuf„r
 = 
buf
;

6016 
	gèg
->
	g√xtTab
 = 
CuºítTab
->
√xtTab
;

6017 
	gèg
->
	g¥evTab
 = 
CuºítTab
;

6018 i‡(
	gCuºítTab
->
	g√xtTab
)

6019 
	gCuºítTab
->
	g√xtTab
->
	g¥evTab
 = 
èg
;

6021 
	gLa°Tab
 = 
èg
;

6022 
	gCuºítTab
->
	g√xtTab
 = 
èg
;

6023 
	gCuºítTab
 = 
èg
;

6024 
	gnTab
++;

6027 
DEFUN
(
√wT
, 
NEW_TAB
, "OpenÇewÅab")

6029 
_√wT
();

6030 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6033 
TabBuf„r
 *

6034 
numTab
(
n
)

6036 
TabBuf„r
 *
	gèb
;

6037 
	gi
;

6039 i‡(
	gn
 == 0)

6040  
CuºítTab
;

6041 i‡(
	gn
 == 1)

6042  
Fú°Tab
;

6043 i‡(
	gnTab
 <= 1)

6044  
NULL
;

6045 
	gèb
 = 
Fú°Tab
, 
	gi
 = 1;Åab && i < 
	gn
;Åab = 
èb
->
√xtTab
, i++) ;

6046  
	gèb
;

6050 
ˇlcTabPos
()

6052 
TabBuf„r
 *
	gèb
;

6054 
	glcﬁ
 = 0, 
	grcﬁ
 = 2, 
	gcﬁ
;

6056 
	glcﬁ
 = 0, 
	grcﬁ
 = 0, 
	gcﬁ
;

6058 
	gn1
, 
	gn2
, 
	g«
, 
	gnx
, 
	gny
, 
	gix
, 
	giy
;

6060 #ifde‡
USE_MOUSE


6061 
	glcﬁ
 = 
mou£_a˘i⁄
.
míu_°r
 ? mou£_a˘i⁄.
míu_width
 : 0;

6064 i‡(
	gnTab
 <= 0)

6066 
	gn1
 = (
COLS
 - 
rcﬁ
 - 
lcﬁ
Ë/ 
TabCﬁs
;

6067 i‡(
	gn1
 >
nTab
) {

6068 
n2
 = 1;

6069 
	gny
 = 1;

6072 i‡(
	gn1
 < 0)

6073 
	gn1
 = 0;

6074 
	gn2
 = 
COLS
 / 
TabCﬁs
;

6075 i‡(
	gn2
 == 0)

6076 
n2
 = 1;

6077 
	gny
 = (
nTab
 - 
n1
 - 1Ë/ 
n2
 + 2;

6079 
	g«
 = 
n1
 + 
n2
 * (
ny
 - 1);

6080 
	gn1
 -(
«
 - 
nTab
Ë/ 
ny
;

6081 i‡(
	gn1
 < 0)

6082 
	gn1
 = 0;

6083 
	g«
 = 
n1
 + 
n2
 * (
ny
 - 1);

6084 
	gèb
 = 
Fú°Tab
;

6085 
	giy
 = 0; iy < 
	gny
 && 
	gèb
; iy++) {

6086 i‡(
	giy
 == 0) {

6087 
nx
 = 
n1
;

6088 
	gcﬁ
 = 
COLS
 - 
rcﬁ
 - 
lcﬁ
;

6091 
	gnx
 = 
n2
 - (
«
 - 
nTab
 + (
iy
 - 1)Ë/ (
ny
 - 1);

6092 
	gcﬁ
 = 
COLS
;

6094 
	gix
 = 0; ix < 
	gnx
 && 
	gèb
; ix++,Åab = 
èb
->
√xtTab
) {

6095 
èb
->
x1
 = 
cﬁ
 * 
ix
 / 
nx
;

6096 
	gèb
->
	gx2
 = 
cﬁ
 * (
ix
 + 1Ë/ 
nx
 - 1;

6097 
	gèb
->
	gy
 = 
iy
;

6098 i‡(
	giy
 == 0) {

6099 
èb
->
x1
 +
lcﬁ
;

6100 
	gèb
->
	gx2
 +
lcﬁ
;

6106 
TabBuf„r
 *

6107 
dñëeTab
(
TabBuf„r
 * 
èb
)

6109 
Buf„r
 *
	gbuf
, *
	g√xt
;

6111 i‡(
	gnTab
 <= 1)

6112  
Fú°Tab
;

6113 i‡(
	gèb
->
	g¥evTab
) {

6114 i‡(
	gèb
->
	g√xtTab
)

6115 
	gèb
->
	g√xtTab
->
	g¥evTab
 = 
èb
->
¥evTab
;

6117 
	gLa°Tab
 = 
èb
->
¥evTab
;

6118 
	gèb
->
	g¥evTab
->
	g√xtTab
 = 
èb
->
√xtTab
;

6119 i‡(
	gèb
 =
CuºítTab
)

6120 
CuºítTab
 = 
èb
->
¥evTab
;

6123 
	gèb
->
	g√xtTab
->
	g¥evTab
 = 
NULL
;

6124 
	gFú°Tab
 = 
èb
->
√xtTab
;

6125 i‡(
	gèb
 =
CuºítTab
)

6126 
CuºítTab
 = 
èb
->
√xtTab
;

6128 
	gnTab
--;

6129 
	gbuf
 = 
èb
->
fú°Buf„r
;

6130 
	gbuf
 && bu‡!
NO_BUFFER
) {

6131 
√xt
 = 
buf
->
√xtBuf„r
;

6132 
disˇrdBuf„r
(
buf
);

6133 
	gbuf
 = 
√xt
;

6135  
	gFú°Tab
;

6138 
DEFUN
(
˛o£T
, 
CLOSE_TAB
, "Close currentÅab")

6140 
TabBuf„r
 *
	gèb
;

6142 i‡(
	gnTab
 <= 1)

6144 i‡(
	g¥ec_num
)

6145 
	gèb
 = 
numTab
(
PREC_NUM
);

6147 
	gèb
 = 
CuºítTab
;

6148 i‡(
	gèb
)

6149 
dñëeTab
(
èb
);

6150 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6153 
DEFUN
(
√xtT
, 
NEXT_TAB
, "MoveÅoÇextÅab")

6155 
	gi
;

6157 i‡(
	gnTab
 <= 1)

6159 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

6160 i‡(
	gCuºítTab
->
	g√xtTab
)

6161 
	gCuºítTab
 = 
CuºítTab
->
√xtTab
;

6163 
	gCuºítTab
 = 
Fú°Tab
;

6165 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6168 
DEFUN
(
¥evT
, 
PREV_TAB
, "MoveÅoÖreviousÅab")

6170 
	gi
;

6172 i‡(
	gnTab
 <= 1)

6174 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

6175 i‡(
	gCuºítTab
->
	g¥evTab
)

6176 
	gCuºítTab
 = 
CuºítTab
->
¥evTab
;

6178 
	gCuºítTab
 = 
La°Tab
;

6180 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6184 
fﬁlowTab
(
TabBuf„r
 * 
èb
)

6186 
Buf„r
 *
	gbuf
;

6187 
Anch‹
 *
	ga
;

6189 #ifde‡
USE_IMAGE


6190 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

6191 i‡(!(
	ga
 &&á->
	gimage
 &&á->image->
	gm≠
))

6193 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

6194 i‡(
	ga
 =
NULL
)

6197 i‡(
	gèb
 =
CuºítTab
) {

6198 
check_èrgë
 = 
FALSE
;

6199 
fﬁlowA
();

6200 
	gcheck_èrgë
 = 
TRUE
;

6203 
_√wT
();

6204 
	gbuf
 = 
Cuºítbuf
;

6205 
	gcheck_èrgë
 = 
FALSE
;

6206 
fﬁlowA
();

6207 
	gcheck_èrgë
 = 
TRUE
;

6208 i‡(
	gèb
 =
NULL
) {

6209 i‡(
buf
 !
Cuºítbuf
)

6210 
dñBuf„r
(
buf
);

6212 
dñëeTab
(
CuºítTab
);

6214 i‡(
	gbuf
 !
Cuºítbuf
) {

6216 
Buf„r
 *
c
, *
p
;

6218 
	gc
 = 
Cuºítbuf
;

6219 
	gp
 = 
¥evBuf„r
(
c
, 
buf
);

6220 
	gp
->
	g√xtBuf„r
 = 
NULL
;

6221 
	gFú°buf
 = 
buf
;

6222 
dñëeTab
(
CuºítTab
);

6223 
	gCuºítTab
 = 
èb
;

6224 
	gbuf
 = 
p
; buf; buf =Ö) {

6225 
p
 = 
¥evBuf„r
(
c
, 
buf
);

6226 
pushBuf„r
(
buf
);

6229 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6232 
DEFUN
(
èbA
, 
TAB_LINK
, "Open currentÜink onÇewÅab")

6234 
fﬁlowTab
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
);

6238 
èbURL0
(
TabBuf„r
 * 
èb
, *
¥om±
, 
ªœtive
)

6240 
Buf„r
 *
	gbuf
;

6242 i‡(
	gèb
 =
CuºítTab
) {

6243 
goURL0
(
¥om±
, 
ªœtive
);

6246 
_√wT
();

6247 
	gbuf
 = 
Cuºítbuf
;

6248 
goURL0
(
¥om±
, 
ªœtive
);

6249 i‡(
	gèb
 =
NULL
) {

6250 i‡(
buf
 !
Cuºítbuf
)

6251 
dñBuf„r
(
buf
);

6253 
dñëeTab
(
CuºítTab
);

6255 i‡(
	gbuf
 !
Cuºítbuf
) {

6257 
Buf„r
 *
c
, *
p
;

6259 
	gc
 = 
Cuºítbuf
;

6260 
	gp
 = 
¥evBuf„r
(
c
, 
buf
);

6261 
	gp
->
	g√xtBuf„r
 = 
NULL
;

6262 
	gFú°buf
 = 
buf
;

6263 
dñëeTab
(
CuºítTab
);

6264 
	gCuºítTab
 = 
èb
;

6265 
	gbuf
 = 
p
; buf; buf =Ö) {

6266 
p
 = 
¥evBuf„r
(
c
, 
buf
);

6267 
pushBuf„r
(
buf
);

6270 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6273 
DEFUN
(
èbURL
, 
TAB_GOTO
, "Open URL onÇewÅab")

6275 
èbURL0
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
,

6276 "GŸÿURL o¿√wÅab: ", 
FALSE
);

6279 
DEFUN
(
èbrURL
, 
TAB_GOTO_RELATIVE
, "OpenÑelative URL onÇewÅab")

6281 
èbURL0
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
,

6282 "GŸÿªœtivêURL o¿√wÅab: ", 
TRUE
);

6286 
moveTab
(
TabBuf„r
 * 
t
, TabBuf„∏* 
t2
, 
right
)

6288 i‡(
	gt2
 =
NO_TABBUFFER
)

6289 
t2
 = 
Fú°Tab
;

6290 i‡(!
	gt
 || !
	gt2
 ||Å =
t2
 || 
t
 =
NO_TABBUFFER
)

6292 i‡(
	gt
->
	g¥evTab
) {

6293 i‡(
	gt
->
	g√xtTab
)

6294 
	gt
->
	g√xtTab
->
	g¥evTab
 = 
t
->
¥evTab
;

6296 
	gLa°Tab
 = 
t
->
¥evTab
;

6297 
	gt
->
	g¥evTab
->
	g√xtTab
 = 
t
->
√xtTab
;

6300 
	gt
->
	g√xtTab
->
	g¥evTab
 = 
NULL
;

6301 
	gFú°Tab
 = 
t
->
√xtTab
;

6303 i‡(
	gright
) {

6304 
	gt
->
	g√xtTab
 = 
t2
->
√xtTab
;

6305 
	gt
->
	g¥evTab
 = 
t2
;

6306 i‡(
	gt2
->
	g√xtTab
)

6307 
	gt2
->
	g√xtTab
->
	g¥evTab
 = 
t
;

6309 
	gLa°Tab
 = 
t
;

6310 
	gt2
->
	g√xtTab
 = 
t
;

6313 
	gt
->
	g¥evTab
 = 
t2
->
¥evTab
;

6314 
	gt
->
	g√xtTab
 = 
t2
;

6315 i‡(
	gt2
->
	g¥evTab
)

6316 
	gt2
->
	g¥evTab
->
	g√xtTab
 = 
t
;

6318 
	gFú°Tab
 = 
t
;

6319 
	gt2
->
	g¥evTab
 = 
t
;

6321 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6324 
DEFUN
(
èbR
, 
TAB_RIGHT
, "Move currentÅabÑight")

6326 
TabBuf„r
 *
	gèb
;

6327 
	gi
;

6329 
	gèb
 = 
CuºítTab
, 
	gi
 = 0;Åab && i < 
	gPREC_NUM
;

6330 
	gèb
 = 
èb
->
√xtTab
, 
	gi
++) ;

6331 
moveTab
(
CuºítTab
, 
èb
 ?Åab : 
La°Tab
, 
TRUE
);

6334 
DEFUN
(
èbL
, 
TAB_LEFT
, "Move currentÅabÜeft")

6336 
TabBuf„r
 *
	gèb
;

6337 
	gi
;

6339 
	gèb
 = 
CuºítTab
, 
	gi
 = 0;Åab && i < 
	gPREC_NUM
;

6340 
	gèb
 = 
èb
->
¥evTab
, 
	gi
++) ;

6341 
moveTab
(
CuºítTab
, 
èb
 ?Åab : 
Fú°Tab
, 
FALSE
);

6345 
addDow∆ﬂdLi°
(
pid_t
 
pid
, *
uæ
, *
ßve
, *
lock
, 
˛í_t
 
size
)

6347 
Dow∆ﬂdLi°
 *
	gd
;

6349 
	gd
 = 
New
(
Dow∆ﬂdLi°
);

6350 
	gd
->
	gpid
 = 
pid
;

6351 
	gd
->
	guæ
 = 
uæ
;

6352 i‡(
	gßve
[0] !'/' && 
ßve
[0] != '~')

6353 
ßve
 = 
Så√w_m_ch¨p
(
CuºítDú
, "/", save, 
NULL
)->
	g±r
;

6354 
	gd
->
	gßve
 = 
ex∑ndP©h
(
ßve
);

6355 
	gd
->
	glock
 = 
lock
;

6356 
	gd
->
	gsize
 = 
size
;

6357 
	gd
->
	gtime
 = 
time
(0);

6358 
	gd
->
	gok
 = 
FALSE
;

6359 
	gd
->
	g√xt
 = 
NULL
;

6360 
	gd
->
	g¥ev
 = 
La°DL
;

6361 i‡(
	gLa°DL
)

6362 
	gLa°DL
->
	g√xt
 = 
d
;

6364 
	gFú°DL
 = 
d
;

6365 
	gLa°DL
 = 
d
;

6366 
	gadd_dow∆ﬂd_li°
 = 
TRUE
;

6370 
checkDow∆ﬂdLi°
()

6372 
Dow∆ﬂdLi°
 *
	gd
;

6373 
°©
 
	g°
;

6375 i‡(!
	gFú°DL
)

6376  
	gFALSE
;

6377 
	gd
 = 
Fú°DL
; d !
NULL
; d = 
d
->
√xt
) {

6378 i‡(!
d
->
ok
 && !
l°©
(d->
lock
, &
°
))

6379  
TRUE
;

6381  
	gFALSE
;

6385 
c⁄vît_size3
(
˛í_t
 
size
)

6387 
Så
 
	gtmp
 = 
Så√w
();

6388 
	gn
;

6391 
	gn
 = 
size
 % 1000;

6392 
	gsize
 /= 1000;

6393 
	gtmp
 = 
S¥ötf
(
size
 ? ",%.3d%s" : "%d%s", 
n
, 
tmp
->
±r
);

6394 } 
	gsize
);

6395  
	gtmp
->
	g±r
;

6398 
Buf„r
 *

6399 
Dow∆ﬂdLi°Buf„r
()

6401 
Dow∆ﬂdLi°
 *
	gd
;

6402 
Så
 
	g§c
 = 
NULL
;

6403 
°©
 
	g°
;

6404 
time_t
 
	gcur_time
;

6405 
	gduøti⁄
, 
	gøã
, 
	gëa
;

6406 
size_t
 
	gsize
;

6408 i‡(!
	gFú°DL
)

6409  
	gNULL
;

6410 
	gcur_time
 = 
time
(0);

6412 
	g§c
 = 
Så√w_ch¨p
("<html><hód><tôÀ>" 
DOWNLOAD_LIST_TITLE


6414 
DOWNLOAD_LIST_TITLE
 "</h1>\n"

6416 
	gd
 = 
La°DL
; d !
NULL
; d = 
d
->
¥ev
) {

6417 i‡(
l°©
(
d
->
lock
, &
°
))

6418 
d
->
ok
 = 
TRUE
;

6419 
Såˇt_ch¨p
(
§c
, "<pre>\n");

6420 
Såˇt
(
§c
, 
S¥ötf
("%s\¿ --&gt; %s\¿ ", 
html_quŸe
(
d
->
uæ
),

6421 
html_quŸe
(
c⁄v_‰om_sy°em
(
d
->
ßve
))));

6422 
	gduøti⁄
 = 
cur_time
 - 
d
->
time
;

6423 i‡(!
°©
(
d
->
ßve
, &
°
)) {

6424 
	gsize
 = 
°
.
°_size
;

6425 i‡(
	gd
->
	gok
) {

6426 
	gd
->
	gsize
 = 
size
;

6427 
	gduøti⁄
 = 
°
.
°_mtime
 - 
d
->
time
;

6431 
	gsize
 = 0;

6432 i‡(
	gd
->
	gsize
) {

6433 
	gi
, 
	gl
 = 
COLS
 - 6;

6434 i‡(
	gsize
 < 
	gd
->size)

6435 
	gi
 = 1.0 * 
l
 * 
size
 / 
d
->size;

6437 
	gi
 = 
l
;

6438 
	gl
 -
i
;

6439 
	gi
-- > 0)

6440 
Såˇt_ch¨
(
§c
, '#');

6441 
	gl
-- > 0)

6442 
Såˇt_ch¨
(
§c
, '_');

6443 
Såˇt_ch¨
(
§c
, '\n');

6445 i‡(!
	gd
->
	gok
 && 
	gsize
 < d->size)

6446 
Såˇt
(
§c
, 
S¥ötf
(" %s / %s bytes (%d%%)",

6447 
c⁄vît_size3
(
size
), c⁄vît_size3(
d
->size),

6448 ()(100.0 * 
size
 / 
d
->size)));

6450 
Såˇt
(
§c
, 
S¥ötf
(" %†byã†lﬂded", 
c⁄vît_size3
(
size
)));

6451 i‡(
	gduøti⁄
 > 0) {

6452 
	gøã
 = 
size
 / 
duøti⁄
;

6453 
Såˇt
(
§c
, 
S¥ötf
(" %02d:%02d:%02dÑate %s/sec",

6454 
duøti⁄
 / (60 * 60), (duration / 60) % 60,

6455 
duøti⁄
 % 60, 
c⁄vît_size
(
øã
, 1)));

6456 i‡(!
	gd
->
	gok
 && 
	gsize
 < d->sizê&& 
	gøã
) {

6457 
	gëa
 = (
d
->
size
 - sizeË/ 
øã
;

6458 
Såˇt
(
§c
, 
S¥ötf
("Éè %02d:%02d:%02d", 
ëa
 / (60 * 60),

6459 (
ëa
 / 60) % 60,Éta % 60));

6462 
Såˇt_ch¨
(
§c
, '\n');

6463 i‡(
	gd
->
	gok
) {

6464 
Såˇt
(
§c
, 
S¥ötf
("<inputÅype=submitÇame=ok%d value=OK>",

6465 
d
->
pid
));

6466 i‡(
	gsize
 < 
	gd
->size)

6467 
Såˇt_ch¨p
(
§c
, " Download incompleted");

6469 
Såˇt_ch¨p
(
§c
, " Download completed");

6472 
Såˇt
(
§c
, 
S¥ötf
("<inputÅype=submitÇame=stop%d value=STOP>",

6473 
d
->
pid
));

6474 
Såˇt_ch¨p
(
§c
, "\n</pre><hr>\n");

6476 
Såˇt_ch¨p
(
§c
, "</form></body></html>");

6477  
lﬂdHTMLSåög
(
§c
);

6481 
dow∆ﬂd_a˘i⁄
(
∑r£d_èg¨g
 *
¨g
)

6483 
Dow∆ﬂdLi°
 *
	gd
;

6484 
pid_t
 
	gpid
;

6486 ; 
	g¨g
;árg = 
¨g
->
√xt
) {

6487 i‡(!
°∫cmp
(
¨g
->arg, "stop", 4)) {

6488 
pid
 = (
pid_t
Ë
©oi
(&
¨g
->arg[4]);

6489 #i‚de‡
__MINGW32_VERSION


6490 
kûl
(
pid
, 
SIGKILL
);

6493 i‡(!
°∫cmp
(
¨g
->arg, "ok", 2))

6494 
	gpid
 = (
pid_t
Ë
©oi
(&
¨g
->arg[2]);

6497 
	gd
 = 
Fú°DL
; d; d = 
d
->
√xt
) {

6498 i‡(
d
->
pid
 ==Öid) {

6499 
u∆ök
(
d
->
lock
);

6500 i‡(
	gd
->
	g¥ev
)

6501 
	gd
->
	g¥ev
->
	g√xt
 = 
d
->
√xt
;

6503 
	gFú°DL
 = 
d
->
√xt
;

6504 i‡(
	gd
->
	g√xt
)

6505 
	gd
->
	g√xt
->
	g¥ev
 = 
d
->
¥ev
;

6507 
	gLa°DL
 = 
d
->
¥ev
;

6512 
ldDL
();

6516 
°›Dow∆ﬂd
()

6518 
Dow∆ﬂdLi°
 *
	gd
;

6520 i‡(!
	gFú°DL
)

6522 
	gd
 = 
Fú°DL
; d !
NULL
; d = 
d
->
√xt
) {

6523 i‡(
d
->
ok
)

6525 #i‚de‡
__MINGW32_VERSION


6526 
kûl
(
d
->
pid
, 
SIGKILL
);

6528 
u∆ök
(
d
->
lock
);

6533 
DEFUN
(
ldDL
, 
DOWNLOAD_LIST
, "Display downloadÜistÖanel")

6535 
Buf„r
 *
	gbuf
;

6536 
	gª∂a˚
 = 
FALSE
, 
	g√w_èb
 = FALSE;

6537 #ifde‡
USE_ALARM


6538 
	gªlﬂd
;

6541 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
 &&

6542 !
°rcmp
(
Cuºítbuf
->
buf„∫ame
, 
DOWNLOAD_LIST_TITLE
))

6543 
	gª∂a˚
 = 
TRUE
;

6544 i‡(!
	gFú°DL
) {

6545 i‡(
	gª∂a˚
) {

6546 i‡(
	gCuºítbuf
 =
Fú°buf
 && 
Cuºítbuf
->
√xtBuf„r
 =
NULL
) {

6547 i‡(
nTab
 > 1)

6548 
dñëeTab
(
CuºítTab
);

6551 
dñBuf„r
(
Cuºítbuf
);

6552 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6556 #ifde‡
USE_ALARM


6557 
	gªlﬂd
 = 
checkDow∆ﬂdLi°
();

6559 
	gbuf
 = 
Dow∆ﬂdLi°Buf„r
();

6560 i‡(!
	gbuf
) {

6561 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

6564 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

6565 i‡(
	gª∂a˚
) {

6566 
COPY_BUFROOT
(
buf
, 
Cuºítbuf
);

6567 
ª°‹ePosôi⁄
(
buf
, 
Cuºítbuf
);

6569 i‡(!
	gª∂a˚
 && 
	g›í_èb_dl_li°
) {

6570 
_√wT
();

6571 
	g√w_èb
 = 
TRUE
;

6573 
pushBuf„r
(
buf
);

6574 i‡(
	gª∂a˚
 || 
	g√w_èb
)

6575 
dñëePªvBuf
();

6576 #ifde‡
USE_ALARM


6577 i‡(
	gªlﬂd
)

6578 
	gCuºítbuf
->
	gevít
 = 
£tAœrmEvít
(
Cuºítbuf
->
evít
, 1, 
AL_IMPLICIT
,

6579 
FUNCNAME_ªlﬂd
, 
NULL
);

6581 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6585 
ßve_buf„r_posôi⁄
(
Buf„r
 *
buf
)

6587 
Buf„rPos
 *
	gb
 = 
buf
->
undo
;

6589 i‡(!
	gbuf
->
	gfú°Löe
)

6591 i‡(
	gb
 && b->
	gt›_löíumbî
 =
TOP_LINENUMBER
(
buf
) &&

6592 
b
->
cur_löíumbî
 =
CUR_LINENUMBER
(
buf
) &&

6593 
b
->
cuºítCﬁumn
 =
buf
->cuºítCﬁum¿&& b->
pos
 == buf->pos)

6595 
	gb
 = 
New
(
Buf„rPos
);

6596 
	gb
->
	gt›_löíumbî
 = 
TOP_LINENUMBER
(
buf
);

6597 
	gb
->
	gcur_löíumbî
 = 
CUR_LINENUMBER
(
buf
);

6598 
	gb
->
	gcuºítCﬁumn
 = 
buf
->
cuºítCﬁumn
;

6599 
	gb
->
	gpos
 = 
buf
->
pos
;

6600 
	gb
->
	gbpos
 = 
buf
->
cuºítLöe
 ? buf->cuºítLöe->
bpos
 : 0;

6601 
	gb
->
	g√xt
 = 
NULL
;

6602 
	gb
->
	g¥ev
 = 
buf
->
undo
;

6603 i‡(
	gbuf
->
	gundo
)

6604 
	gbuf
->
	gundo
->
	g√xt
 = 
b
;

6605 
	gbuf
->
	gundo
 = 
b
;

6609 
ª£tPos
(
Buf„rPos
 * 
b
)

6611 
Buf„r
 
	gbuf
;

6612 
Löe
 
	gt›
, 
	gcur
;

6614 
	gt›
.
	glöíumbî
 = 
b
->
t›_löíumbî
;

6615 
	gcur
.
	glöíumbî
 = 
b
->
cur_löíumbî
;

6616 
	gcur
.
	gbpos
 = 
b
->
bpos
;

6617 
	gbuf
.
	gt›Löe
 = &
t›
;

6618 
	gbuf
.
	gcuºítLöe
 = &
cur
;

6619 
	gbuf
.
	gpos
 = 
b
->
pos
;

6620 
	gbuf
.
	gcuºítCﬁumn
 = 
b
->
cuºítCﬁumn
;

6621 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
buf
);

6622 
	gCuºítbuf
->
	gundo
 = 
b
;

6623 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6626 
DEFUN
(
undoPos
, 
UNDO
, "CancelÅheÜast cursor movement")

6628 
Buf„rPos
 *
	gb
 = 
Cuºítbuf
->
undo
;

6629 
	gi
;

6631 i‡(!
	gCuºítbuf
->
	gfú°Löe
)

6633 i‡(!
	gb
 || !b->
	g¥ev
)

6635 
	gi
 = 0; i < 
	gPREC_NUM
 && 
	gb
->
	g¥ev
; i++, b = 
b
->
¥ev
) ;

6636 
ª£tPos
(
b
);

6639 
DEFUN
(
ªdoPos
, 
REDO
, "CancelÅheÜast undo")

6641 
Buf„rPos
 *
	gb
 = 
Cuºítbuf
->
undo
;

6642 
	gi
;

6644 i‡(!
	gCuºítbuf
->
	gfú°Löe
)

6646 i‡(!
	gb
 || !b->
	g√xt
)

6648 
	gi
 = 0; i < 
	gPREC_NUM
 && 
	gb
->
	g√xt
; i++, b = 
b
->
√xt
) ;

6649 
ª£tPos
(
b
);

	@.pc/google.patch/proto.h

8 
maö
(
¨gc
, **
¨gv
, **
ívp
);

9 
nulcmd
();

10 
pushEvít
(
cmd
, *
d©a
);

11 
MySig«lH™dÀr
 
ötTøp
(
SIGNAL_ARG
);

12 
pgF‹e
();

13 
pgBack
();

14 
lup1
();

15 
ldown1
();

16 
˘rC§V
();

17 
˘rC§H
();

18 
rdrwSc
();

19 
§chf‹
();

20 
i§chf‹
();

21 
§chbak
();

22 
i§chbak
();

23 
§chnxt
();

24 
§ch¥v
();

25 
shi·l
();

26 
shi·r
();

27 
cﬁ1R
();

28 
cﬁ1L
();

29 
£tEnv
();

30 
pùeBuf
();

31 
pùesh
();

32 
ªadsh
();

33 
execsh
();

34 
ldfûe
();

35 
ldhñp
();

36 
movL
();

37 
movL1
();

38 
movD
();

39 
movD1
();

40 
movU
();

41 
movU1
();

42 
movR
();

43 
movR1
();

44 
movLW
();

45 
movRW
();

46 
qquôfm
();

47 
quôfm
();

48 
£lBuf
();

49 
su•
();

50 
goLöe
();

51 
goLöeF
();

52 
goLöeL
();

53 
löbeg
();

54 
löíd
();

55 
edôBf
();

56 
edôS¸
();

57 
fﬁlowA
();

58 
buf„rA
();

59 
fﬁlowI
();

60 
submôF‹m
();

61 
fﬁlowF‹m
();

62 
t›A
();

63 
œ°A
();

64 
⁄A
();

66 
√xtA
();

67 
¥evA
();

68 
√xtVA
();

69 
¥evVA
();

70 
√xtL
();

71 
√xtLU
();

72 
√xtR
();

73 
√xtRD
();

74 
√xtD
();

75 
√xtU
();

76 
√xtBf
();

77 
¥evBf
();

78 
backBf
();

79 
dñëePªvBuf
();

80 
goURL
();

81 
g‹URL
();

82 
ldBm¨k
();

83 
adBm¨k
();

84 
ldO±
();

85 
£tO±
();

86 
pgöfo
();

87 
msgs
();

88 
svA
();

89 
svI
();

90 
svBuf
();

91 
svSrc
();

92 
≥ekURL
();

93 
≥ekIMG
();

94 
curURL
();

95 
vwSrc
();

96 
ªlﬂd
();

97 
ªsh≠e
();

98 
chkURL
();

99 
chkURLBuf„r
(
Buf„r
 *
buf
);

100 
chkWORD
();

101 #ifde‡
USE_NNTP


102 
chkNMID
();

103 
chkNMIDBuf„r
(
Buf„r
 *
buf
);

105 
	#chkNMID
 
nulcmd


	)

107 
rFøme
();

108 
extbrz
();

109 
lökbrz
();

110 
cuæno
();

111 
execCmd
();

112 #ifde‡
USE_IMAGE


113 
di•I
();

114 
°›I
();

116 
	#di•I
 
nulcmd


	)

117 
	#°›I
 
nulcmd


	)

119 #ifde‡
USE_ALARM


120 
£tAœrm
();

121 
AœrmEvít
 *
£tAœrmEvít
(AœrmEvíà* 
evít
, 
£c
, 
°©us
,

122 
cmd
, *
d©a
);

124 
	#£tAœrm
 
nulcmd


	)

126 
ªöô
();

127 
defKey
();

128 
√wT
();

129 
˛o£T
();

130 
√xtT
();

131 
¥evT
();

132 
èbA
();

133 
èbURL
();

134 
èbrURL
();

135 
èbR
();

136 
èbL
();

137 
ldDL
();

138 
lökL°
();

139 #ifde‡
USE_MENU


140 
lökMn
();

141 
LökLi°
 *
lök_míu
(
Buf„r
 *
buf
);

142 
ac˚ssKey
();

143 
Anch‹
 *
ac˚sskey_míu
(
Buf„r
 *
buf
);

144 
li°Mn
();

145 
movli°Mn
();

146 
Anch‹
 *
li°_míu
(
Buf„r
 *
buf
);

148 
	#lökMn
 
nulcmd


	)

149 
	#ac˚ssKey
 
nulcmd


	)

150 
	#li°Mn
 
nulcmd


	)

151 
	#movli°Mn
 
nulcmd


	)

153 
undoPos
();

154 
ªdoPos
();

156 
cuºítLn
(
Buf„r
 *
buf
);

157 
tmpCÀ¨Buf„r
(
Buf„r
 *
buf
);

158 *
fûíame_exãnsi⁄
(*
∑tch
, 
is_uæ
);

159 #ifde‡
USE_EXTERNAL_URI_LOADER


160 
öôURIMëhods
();

161 
Så
 
£¨chURIMëhods
(
P¨£dURL
 *
pu
);

162 
chkExã∫ÆURIBuf„r
(
Buf„r
 *
buf
);

164 
P¨£dURL
 *
schemeToProxy
(
scheme
);

165 
examöeFûe
(*
∑th
, 
URLFûe
 *
uf
);

166 *
ac˚±abÀEncodög
();

167 
dú_exi°
(*
∑th
);

168 #ifde‡
USE_M17N


169 **
gë_symbﬁ
(
wc_˚s
 
ch¨£t
, *
width
);

170 **
£t_symbﬁ
(
width
);

171 
Så
 
c⁄vîtLöe
(
URLFûe
 *
uf
, Så 
löe
, 
mode
, 
wc_˚s
 * 
ch¨£t
,

172 
wc_˚s
 
doc_ch¨£t
);

174 **
gë_symbﬁ
();

175 
Så
 
c⁄vîtLöe0
(
URLFûe
 *
uf
, Så 
löe
, 
mode
);

176 
	#c⁄vîtLöe
(
uf
,
löe
,
mode
,
ch¨£t
,
dch¨£t
Ë
	`c⁄vîtLöe0
(uf,löe,mode)

	)

178 
push_symbﬁ
(
Så
 
°r
, 
symbﬁ
, 
width
, 
n
);

179 
Buf„r
 *
lﬂdFûe
(*
∑th
);

180 
Buf„r
 *
lﬂdGíîÆFûe
(*
∑th
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
,

181 
Êag
, 
F‹mLi°
 *
ªque°
);

182 
is_bound¨y
(*, *);

183 
is_bœnk_löe
(*
löe
, 
ödít
);

184 
push_ªndî_image
(
Så
 
°r
, 
width
, 
limô
,

185 
html_„ed_ívú⁄
 *
h_ív
);

186 
Êushlöe
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
,

187 
ödít
, 
f‹˚
, 
width
);

188 
do_bœnklöe
(
html_„ed_ívú⁄
 *
h_ív
,

189 
ªadbuf„r
 *
obuf
, 
ödít
, 
ödít_ö¸
,

190 
width
);

191 
purgñöe
(
html_„ed_ívú⁄
 *
h_ív
);

192 
ßve_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
,

193 
ªadbuf„r
 *
obuf
);

194 
ª°‹e_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
,

195 
ªadbuf„r
 *
obuf
);

196 #ifde‡
USE_IMAGE


197 
dñëeImage
(
Buf„r
 *
buf
);

198 
gëAŒImage
(
Buf„r
 *
buf
);

199 
lﬂdImage
(
Buf„r
 *
buf
, 
Êag
);

200 
ImageCache
 *
gëImage
(
Image
 * 
image
, 
P¨£dURL
 *
cuºít
, 
Êag
);

201 
gëImageSize
(
ImageCache
 * 
ˇche
);

203 
Så
 
¥o˚ss_img
(
∑r£d_èg
 *
èg
, 
width
);

204 
Så
 
¥o˚ss_™ch‹
(
∑r£d_èg
 *
èg
, *
ègbuf
);

205 
Så
 
¥o˚ss_öput
(
∑r£d_èg
 *
èg
);

206 
Så
 
¥o˚ss_£À˘
(
∑r£d_èg
 *
èg
);

207 
Så
 
¥o˚ss_n_£À˘
();

208 
„ed_£À˘
(*
°r
);

209 
¥o˚ss_›ti⁄
();

210 
Så
 
¥o˚ss_ãxèªa
(
∑r£d_èg
 *
èg
, 
width
);

211 
Så
 
¥o˚ss_n_ãxèªa
();

212 
„ed_ãxèªa
(*
°r
);

213 
Så
 
¥o˚ss_f‹m
(
∑r£d_èg
 *
èg
);

214 
Så
 
¥o˚ss_n_f‹m
();

215 
gëMëaRe‰eshP¨am
(*
q
, 
Så
 *
ª‰esh_uri
);

216 
HTMLèg¥oc1
(
∑r£d_èg
 *
èg
,

217 
html_„ed_ívú⁄
 *
h_ív
);

218 
HTMLlöïroc2
(
Buf„r
 *
buf
, 
TextLöeLi°
 *
é
);

219 
HTMLlöïroc0
(*
i°r
, 
html_„ed_ívú⁄
 *
h_ív
,

220 
öã∫Æ
);

221 
	#HTMLlöïroc1
(
x
,
y
Ë
	`HTMLlöïroc0
(x,y,
TRUE
)

	)

222 
Buf„r
 *
lﬂdHTMLBuf„r
(
URLFûe
 *
f
, Buf„∏*
√wBuf
);

223 *
c⁄vît_size
(
˛í_t
 
size
, 
u£Êﬂt
);

224 *
c⁄vît_size2
(
˛í_t
 
size1
, cÀn_à
size2
, 
u£Êﬂt
);

225 
showProgªss
(
˛í_t
 * 
löñí
, cÀn_à* 
åbyã
);

226 
öô_hív
(
html_„ed_ívú⁄
 *, 
ªadbuf„r
 *,

227 
ívú⁄mít
 *, , 
TextLöeLi°
 *, , );

228 
com∂ëeHTML°ªam
(
html_„ed_ívú⁄
 *,

229 
ªadbuf„r
 *);

230 
lﬂdHTML°ªam
(
URLFûe
 *
f
, 
Buf„r
 *
√wBuf
, 
FILE
 * 
§c
,

231 
öã∫Æ
);

232 
Buf„r
 *
lﬂdHTMLSåög
(
Så
 
∑ge
);

233 #ifde‡
USE_GOPHER


234 
Så
 
lﬂdG›hîDú
(
URLFûe
 *
uf
, 
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

236 
Buf„r
 *
lﬂdBuf„r
(
URLFûe
 *
uf
, Buf„∏*
√wBuf
);

237 #ifde‡
USE_IMAGE


238 
Buf„r
 *
lﬂdImageBuf„r
(
URLFûe
 *
uf
, Buf„∏*
√wBuf
);

240 
ßveBuf„r
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
);

241 
ßveBuf„rBody
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
);

242 
Buf„r
 *
gëshñl
(*
cmd
);

243 
Buf„r
 *
gëpùe
(*
cmd
);

244 
Buf„r
 *
›íPagîBuf„r
(
I≈utSåóm
 
°ªam
, Buf„∏*
buf
);

245 
Buf„r
 *
›íGíîÆPagîBuf„r
(
I≈utSåóm
 
°ªam
);

246 
Löe
 *
gëNextPage
(
Buf„r
 *
buf
, 
∂í
);

247 
ßve2tmp
(
URLFûe
 
uf
, *
tmpf
);

248 
doExã∫Æ
(
URLFûe
 
uf
, *
∑th
, *
ty≥
, 
Buf„r
 **
buÂ
,

249 
Buf„r
 *
deÁu…buf
);

250 
_doFûeC›y
(*
tmpf
, *
def°r
, 
dow∆ﬂd
);

251 
	#doFûeC›y
(
tmpf
, 
def°r
Ë
	`_doFûeC›y
—mpf, def°r, 
FALSE
);

	)

252 
doFûeMove
(*
tmpf
, *
def°r
);

253 
doFûeSave
(
URLFûe
 
uf
, *
def°r
);

254 
checkC›yFûe
(*
∑th1
, *
∑th2
);

255 
checkSaveFûe
(
I≈utSåóm
 
°ªam
, *
∑th
);

256 
checkOvîWrôe
(*
∑th
);

257 *
öputAnswî
(*
¥om±
);

258 
m©ch©å
(*
p
, *
©å
, 
Àn
, 
Så
 *
vÆue
);

259 
ªadHódî
(
URLFûe
 *
uf
, 
Buf„r
 *
√wBuf
, 
thru
, 
P¨£dURL
 *
pu
);

260 *
checkHódî
(
Buf„r
 *
buf
, *
fõld
);

261 
TabBuf„r
 *
√wTab
();

262 
ˇlcTabPos
();

263 
TabBuf„r
 *
dñëeTab
(TabBuf„∏* 
èb
);

264 
addDow∆ﬂdLi°
(
pid_t
 
pid
, *
uæ
, *
ßve
, *
lock
,

265 
˛í_t
 
size
);

266 
°›Dow∆ﬂd
();

267 
checkDow∆ﬂdLi°
();

268 
dow∆ﬂd_a˘i⁄
(
∑r£d_èg¨g
 *
¨g
);

269 
Buf„r
 *
√wBuf„r
(
width
);

270 
Buf„r
 *
nuŒBuf„r
();

271 
˛órBuf„r
(
Buf„r
 *
buf
);

272 
disˇrdBuf„r
(
Buf„r
 *
buf
);

273 
Buf„r
 *
«medBuf„r
(Buf„∏*
fú°
, *
«me
);

274 
Buf„r
 *
dñëeBuf„r
(Buf„∏*
fú°
, Buf„∏*
dñbuf
);

275 
Buf„r
 *
ª∂a˚Buf„r
(Buf„∏*
fú°
, Buf„∏*
dñbuf
, Buf„∏*
√wbuf
);

276 
Buf„r
 *
¡hBuf„r
(Buf„∏*
fú°buf
, 
n
);

277 
gŸoRólLöe
(
Buf„r
 *
buf
, 
n
);

278 
gŸoLöe
(
Buf„r
 *
buf
, 
n
);

279 
Buf„r
 *
£À˘Buf„r
(Buf„∏*
fú°buf
, Buf„∏*
cuºítbuf
,

280 *
£À˘ch¨
);

281 
ªsh≠eBuf„r
(
Buf„r
 *
buf
);

282 
c›yBuf„r
(
Buf„r
 *
a
, Buf„∏*
b
);

283 
Buf„r
 *
¥evBuf„r
(Buf„∏*
fú°
, Buf„∏*
buf
);

284 
wrôeBuf„rCache
(
Buf„r
 *
buf
);

285 
ªadBuf„rCache
(
Buf„r
 *
buf
);

286 
fmTîm
();

287 
fmInô
();

288 
di•œyBuf„r
(
Buf„r
 *
buf
, 
mode
);

289 
addCh¨
(
c
, 
Löïr›
 
mode
);

290 #ifde‡
USE_M17N


291 
addMCh¨
(*
c
, 
Löïr›
 
mode
, 
size_t
 
Àn
);

293 
ªc‹d_îr_mesßge
(*
s
);

294 
Buf„r
 *
mesßge_li°_∑√l
();

295 
mesßge
(*
s
, 
ªtu∫_x
, 
ªtu∫_y
);

296 
di•_îr_mesßge
(*
s
, 
ªdøw_cuºít
);

297 
di•_mesßge_n£c
(*
s
, 
ªdøw_cuºít
, 
£c
, 
purge
,

298 
mou£
);

299 
di•_mesßge
(*
s
, 
ªdøw_cuºít
);

300 #ifde‡
USE_MOUSE


301 
di•_mesßge_nomou£
(*
s
, 
ªdøw_cuºít
);

303 
	#di•_mesßge_nomou£
 
di•_mesßge


	)

305 
£t_dñayed_mesßge
(*
s
);

306 
curs‹Up0
(
Buf„r
 *
buf
, 
n
);

307 
curs‹Up
(
Buf„r
 *
buf
, 
n
);

308 
curs‹Down0
(
Buf„r
 *
buf
, 
n
);

309 
curs‹Down
(
Buf„r
 *
buf
, 
n
);

310 
curs‹UpDown
(
Buf„r
 *
buf
, 
n
);

311 
curs‹Right
(
Buf„r
 *
buf
, 
n
);

312 
curs‹Le·
(
Buf„r
 *
buf
, 
n
);

313 
curs‹Home
(
Buf„r
 *
buf
);

314 
¨øngeCurs‹
(
Buf„r
 *
buf
);

315 
¨øngeLöe
(
Buf„r
 *
buf
);

316 
curs‹XY
(
Buf„r
 *
buf
, 
x
, 
y
);

317 
ª°‹ePosôi⁄
(
Buf„r
 *
buf
, Buf„∏*
‹ig
);

318 
cﬁumnSkù
(
Buf„r
 *
buf
, 
off£t
);

319 
cﬁumnPos
(
Löe
 *
löe
, 
cﬁumn
);

320 
cﬁumnLí
(
Löe
 *
löe
, 
cﬁumn
);

321 
Löe
 *
löeSkù
(
Buf„r
 *
buf
, Löê*
löe
, 
off£t
, 
œ°
);

322 
Löe
 *
cuºítLöeSkù
(
Buf„r
 *
buf
, Löê*
löe
, 
off£t
, 
œ°
);

323 
gëhtmlcmd
(**
s
);

324 #i‚de‡
USE_ANSI_COLOR


325 
	#checkTy≥
(
a
,
b
,
c
Ë
	`_checkTy≥
◊,b)

	)

327 
Så
 
checkTy≥
(Så 
s
, 
Löïr›
 **
›r›
, 
Löecﬁ‹
 **
ocﬁ‹
);

328 
ˇlcPosôi⁄
(*
l
, 
Löïr›
 *
¥
, 
Àn
, 
pos
, 
bpos
,

329 
mode
);

330 *
œ°FûeName
(*
∑th
);

331 *
myba£«me
(*
s
);

332 *
mydú«me
(*
s
);

333 
√xt_°©us
(
c
, *
°©us
);

334 
ªad_tokí
(
Så
 
buf
, **
ö°r
, *
°©us
, 
¥e
, 
≠≥nd
);

335 
Så
 
c‹ª˘_úπag
(
°©us
);

336 #ifde‡
USE_MIGEMO


337 
öô_migemo
();

339 #ifde‡
USE_M17N


340 *
c⁄v_£¨ch_°rög
(*
°r
, 
wc_˚s
 
f_˚s
);

342 
	#c⁄v_£¨ch_°rög
(
°r
, 
f_˚s
Ë
	)
str

344 
f‹w¨dSórch
(
Buf„r
 *
buf
, *
°r
);

345 
backw¨dSórch
(
Buf„r
 *
buf
, *
°r
);

346 
pcm≠
();

347 
escm≠
();

348 
escbm≠
();

349 
escdm≠
(
c
);

350 
mu…im≠
();

351 *
öputLöeHi°Sórch
(*
¥om±
, *
def_°r
, 
Êag
,

352 
Hi°
 *
hi°
, (*
öcfunc
Ë(
ch
, 
Så
 
buf
,

353 
Löïr›
 *
¥›
));

354 
Så
 
	`u√sˇ≥_•a˚s
(Så 
s
);

355 #ifde‡
USE_HISTORY


356 
Buf„r
 *
	`hi°‹yBuf„r
(
Hi°
 *
hi°
);

357 
	`lﬂdHi°‹y
(
Hi°
 *
hi°
);

358 
	`ßveHi°‹y
(
Hi°
 *
hi°
, 
size_t
 
size
);

359 
	`ldHi°
();

361 
	#ldHi°
 
nulcmd


	)

363 
	`log_like
(
x
);

364 
èbÀ
 *
	`√wTabÀ
();

365 
	`pushd©a
(
èbÀ
 *
t
, 
row
, 
cﬁ
, *
d©a
);

366 
	`visibÀ_Àngth
(*
°r
);

367 
	`Æign
(
TextLöe
 *
lbuf
, 
width
, 
mode
);

368 
	`¥öt_ôem
(
èbÀ
 *
t
, 
row
, 
cﬁ
, 
width
, 
Så
 
buf
);

369 
	`¥öt_£p
(
èbÀ
 *
t
, 
row
, 
ty≥
, 
maxcﬁ
, 
Så
 
buf
);

370 
	`do_ªfûl
(
èbÀ
 *
tbl
, 
row
, 
cﬁ
, 
maxlimô
);

371 
	`ªndîTabÀ
(
èbÀ
 *
t
, 
max_width
,

372 
html_„ed_ívú⁄
 *
h_ív
);

373 
èbÀ
 *
	`begö_èbÀ
(
b‹dî
, 
•acög
, 
∑ddög
,

374 
v•a˚
);

375 
	`íd_èbÀ
(
èbÀ
 *
tbl
);

376 
	`check_rowcﬁ
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
);

377 
	`möimum_Àngth
(*
löe
);

378 
	`„ed_èbÀ
(
èbÀ
 *
tbl
, *
löe
, 
èbÀ_mode
 *
mode
,

379 
width
, 
öã∫Æ
);

380 
	`„ed_èbÀ1
(
èbÀ
 *
tbl
, 
Så
 
tok
, 
èbÀ_mode
 *
mode
,

381 
width
);

382 
	`pushTabÀ
(
èbÀ
 *, table *);

383 
f‹m_li°
 *
	`√wF‹mLi°
(*
a˘i⁄
, *
mëhod
, *
ch¨£t
,

384 *
í˘y≥
, *
èrgë
, *
«me
,

385 
f‹m_li°
 *
_√xt
);

386 
f‹m_ôem_li°
 *
	`f‹mLi°_addI≈ut
(
f‹m_li°
 *
Ê
,

387 
∑r£d_èg
 *
èg
);

388 *
	`f‹m2°r
(
F‹mIãmLi°
 *
fi
);

389 
	`f‹mty≥
(*
ty≥°r
);

390 
	`f‹mRecheckRadio
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
f‹m
);

391 
	`f‹mRe£tBuf„r
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
f‹môem
);

392 
	`f‹mUpd©eBuf„r
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
f‹m
);

393 
	`¥eF‹mUpd©eBuf„r
(
Buf„r
 *
buf
);

394 
Så
 
	`ãxtfõldªp
(Så 
s
, 
width
);

395 
	`öput_ãxèªa
(
F‹mIãmLi°
 *
fi
);

396 
	`do_öã∫Æ
(*
a˘i⁄
, *
d©a
);

397 
	`f‹m_wrôe_d©a
(
FILE
 * 
f
, *
bound¨y
, *
«me
, *
vÆue
);

398 
	`f‹m_wrôe_‰om_fûe
(
FILE
 * 
f
, *
bound¨y
, *
«me
,

399 *
fûíame
, *
fûe
);

400 
M≠Li°
 *
	`£¨chM≠Li°
(
Buf„r
 *
buf
, *
«me
);

401 
	`fﬁlow_m≠
(
∑r£d_èg¨g
 *
¨g
);

402 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

403 
M≠Aªa
 *
	`fﬁlow_m≠_míu
(
Buf„r
 *
buf
, *
«me
, 
Anch‹
 *
a_img
, 
x
,

404 
y
);

406 #i‚de‡
MENU_MAP


407 
Buf„r
 *
	`fﬁlow_m≠_∑√l
(Buf„∏*
buf
, *
«me
);

409 #ifde‡
USE_IMAGE


410 
	`gëM≠XY
(
Buf„r
 *
buf
, 
Anch‹
 *
a
, *
x
, *
y
);

411 
M≠Aªa
 *
	`ªåõveCuºítM≠Aªa
(
Buf„r
 *
buf
);

413 
Anch‹
 *
	`ªåõveCuºítM≠
(
Buf„r
 *
buf
);

414 
M≠Aªa
 *
	`√wM≠Aªa
(*
uæ
, *
èrgë
, *
Æt
, *
sh≠e
,

415 *
co‹ds
);

416 
Buf„r
 *
	`∑ge_öfo_∑√l
(Buf„∏*
buf
);

417 
‰ame_body
 *
	`√wFøme
(
∑r£d_èg
 *
èg
, 
Buf„r
 *
buf
);

418 
‰ame£t
 *
	`√wFømeSë
(
∑r£d_èg
 *
èg
);

419 
	`addFømeSëEÀmít
(
‰ame£t
 *
f
,

420 
‰ame£t_ñemít
 
ñemít
);

421 
	`dñëeFøme
(
‰ame_body
 *
b
);

422 
	`dñëeFømeSë
(
‰ame£t
 *
f
);

423 
	`dñëeFømeSëEÀmít
(
‰ame£t_ñemít
 
e
);

424 
‰ame£t
 *
	`c›yFømeSë
(‰ame£à*
of
);

425 
	`pushFømeTªe
(
‰ame£t_queue
 **
fqµ
, 
‰ame£t
 *
fs
,

426 
Buf„r
 *
buf
);

427 
‰ame£t
 *
	`p›FømeTªe
(
‰ame£t_queue
 **
fqµ
);

428 
	`ª£tFømeEÀmít
(
‰ame£t_ñemít
 *
f_ñemít
, 
Buf„r
 *
buf
,

429 *
ª„ªr
, 
F‹mLi°
 *
ªque°
);

430 
Buf„r
 *
	`ªndîFøme
(Buf„∏*
Cbuf
, 
f‹˚_ªlﬂd
);

431 
‰ame£t_ñemít
 *
	`£¨ch_‰ame
(
‰ame£t
 *
f£t
, *
«me
);

432 
	`£t_ây
();

433 
	`£t_cc
(
•ec
, 
vÆ
);

434 
	`˛o£_ây
();

435 *
	`ây«me_ây
();

436 
	`ª£t_ây
();

437 
MySig«lH™dÀr
 
	`ª£t_exô
(
SIGNAL_ARG
);

438 
MySig«lH™dÀr
 
	`îr‹_dump
(
SIGNAL_ARG
);

439 
	`£t_öt
();

440 
	`gëTC°r
();

441 
	`£éöescﬁs
();

442 
	`£tups¸ìn
();

443 
pid_t
 
	`›í_pùe_rw
(
FILE
 ** 
‰
, FILE ** 
fw
);

444 
	`öôs¸
();

445 
	`move
(
löe
, 
cﬁumn
);

446 #ifde‡
USE_M17N


447 
	`addmch
(*
p
, 
size_t
 
Àn
);

449 
	`addch
(
c
);

450 
	`wøp
();

451 
	`touch_löe
();

452 
	`°™dout
();

453 
	`°™díd
();

454 
	`bﬁd
();

455 
	`bﬁdíd
();

456 
	`undîlöe
();

457 
	`undîlöìnd
();

458 
	`gøph°¨t
();

459 
	`gøphíd
();

460 
	`gøph_ok
();

461 #ifde‡
USE_COLOR


462 
	`£tfcﬁ‹
(
cﬁ‹
);

463 #ifde‡
USE_BG_COLOR


464 
	`£tbcﬁ‹
(
cﬁ‹
);

467 
	`ª‰esh
();

468 
	`˛ór
();

469 #ifde‡
USE_RAW_SCROLL


470 
	`s¸ﬁl
();

471 
	`rs¸ﬁl
();

474 
	`√ed_˛π€ﬁ
();

476 
	`˛π€ﬁ
();

477 
	`˛π€ﬁx
();

478 
	`˛πobŸ
();

479 
	`˛πobŸx
();

480 
	`no_˛π€ﬁ
();

481 
	`add°r
(*
s
);

482 
	`addn°r
(*
s
, 
n
);

483 
	`addn°r_sup
(*
s
, 
n
);

484 
	`¸mode
();

485 
	`no¸mode
();

486 
	`ãrm_echo
();

487 
	`ãrm_n€cho
();

488 
	`ãrm_øw
();

489 
	`ãrm_cooked
();

490 
	`ãrm_cbªak
();

491 
	`ãrm_tôÀ
(*
s
);

492 
	`Êush_ây
();

493 
	`toggÀ_°™d
();

494 
	`gëch
();

495 
	`bñl
();

496 
	`¶ìp_tûl_™ykey
(
£c
, 
purge
);

497 #ifde‡
USE_IMAGE


498 
	`touch_curs‹
();

500 
	`öôMimeTy≥s
();

501 
	`‰ì_s¶_˘x
();

502 
P¨£dURL
 *
	`ba£URL
(
Buf„r
 *
buf
);

503 
	`›íSockë
(*
ho°«me
, *
ªmŸï‹t_«me
,

504 
ªmŸï‹t_num
);

505 
	`∑r£URL
(*
uæ
, 
P¨£dURL
 *
p_uæ
, P¨£dURL *
cuºít
);

506 
	`c›yP¨£dURL
(
P¨£dURL
 *
p
, P¨£dURL *
q
);

507 
	`∑r£URL2
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
);

508 
Så
 
	`∑r£dURL2Så
(
P¨£dURL
 *
pu
);

509 
	`gëURLScheme
(**
uæ
);

510 
	`öô_°ªam
(
URLFûe
 *
uf
, 
scheme
, 
I≈utSåóm
 
°ªam
);

511 
Så
 
	`HTTPªque°Mëhod
(
HReque°
 *
hr
);

512 
Så
 
	`HTTPªque°URI
(
P¨£dURL
 *
pu
, 
HReque°
 *
hr
);

513 
URLFûe
 
	`›íURL
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
,

514 
URLO±i⁄
 *
›ti⁄
, 
F‹mLi°
 *
ªque°
,

515 
TextLi°
 *
exåa_hódî
, 
URLFûe
 *
ouf
,

516 
HReque°
 *
hr
, *
°©us
);

517 
	`maûˇpM©ch
(
maûˇp
 *
mˇp
, *
ty≥
);

518 
maûˇp
 *
	`£¨chMaûˇp
(maûˇ∞*
èbÀ
, *
ty≥
);

519 
	`öôMaûˇp
();

520 *
	`ac˚±abÀMimeTy≥s
();

521 
maûˇp
 *
	`£¨chExtVõwî
(*
ty≥
);

522 
Så
 
	`unquŸe_maûˇp
(*
q°r
, *
ty≥
, *
«me
, *
©å
,

523 *
mc_°©
);

524 *
	`guessC⁄ã¡Ty≥
(*
fûíame
);

525 
TextLi°
 *
	`make_domaö_li°
(*
domaö_li°
);

526 
	`check_no_¥oxy
(*
domaö
);

527 
I≈utSåóm
 
	`›íFTPSåóm
(
P¨£dURL
 *
pu
, 
URLFûe
 *
uf
);

528 #ifde‡
USE_M17N


529 
Så
 
	`lﬂdFTPDú
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

531 
Så
 
	`lﬂdFTPDú0
(
P¨£dURL
 *
pu
);

532 
	#lﬂdFTPDú
(
pu
,
ch¨£t
Ë
	`lﬂdFTPDú0
’u)

	)

534 
	`˛o£FTP
();

535 
	`disc⁄√˘FTP
();

536 #ifde‡
USE_NNTP


537 
I≈utSåóm
 
	`›íNewsSåóm
(
P¨£dURL
 *
pu
);

538 #ifde‡
USE_M17N


539 
Så
 
	`lﬂdNewsgroup
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

541 
Så
 
	`lﬂdNewsgroup0
(
P¨£dURL
 *
pu
);

542 
	#lﬂdNewsgroup
(
pu
,
ch¨£t
Ë
	`lﬂdNewsgroup0
’u)

	)

544 
	`˛o£News
();

545 
	`disc⁄√˘News
();

547 
Anch‹Li°
 *
	`putAnch‹
(Anch‹Li° *
Æ
, *
uæ
, *
èrgë
,

548 
Anch‹
 **
™ch‹_ªtu∫
, *
ª„ªr
,

549 *
tôÀ
, 
key
, 
löe
,

550 
pos
);

551 
Anch‹
 *
	`ªgi°îHªf
(
Buf„r
 *
buf
, *
uæ
, *
èrgë
,

552 *
ª„ªr
, *
tôÀ
, 
key
,

553 
löe
, 
pos
);

554 
Anch‹
 *
	`ªgi°îName
(
Buf„r
 *
buf
, *
uæ
, 
löe
, 
pos
);

555 
Anch‹
 *
	`ªgi°îImg
(
Buf„r
 *
buf
, *
uæ
, *
tôÀ
, 
löe
,

556 
pos
);

557 
Anch‹
 *
	`ªgi°îF‹m
(
Buf„r
 *
buf
, 
F‹mLi°
 *
Êi°
,

558 
∑r£d_èg
 *
èg
, 
löe
, 
pos
);

559 
	`⁄Anch‹
(
Anch‹
 *
a
, 
löe
, 
pos
);

560 
Anch‹
 *
	`ªåõveAnch‹
(
Anch‹Li°
 *
Æ
, 
löe
, 
pos
);

561 
Anch‹
 *
	`ªåõveCuºítAnch‹
(
Buf„r
 *
buf
);

562 
Anch‹
 *
	`ªåõveCuºítImg
(
Buf„r
 *
buf
);

563 
Anch‹
 *
	`ªåõveCuºítF‹m
(
Buf„r
 *
buf
);

564 
Anch‹
 *
	`£¨chAnch‹
(
Anch‹Li°
 *
Æ
, *
°r
);

565 
Anch‹
 *
	`£¨chURLLabñ
(
Buf„r
 *
buf
, *
uæ
);

566 
	`ªAnch‹W‹d
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
•os
, 
ïos
);

567 *
	`ªAnch‹
(
Buf„r
 *
buf
, *
ª
);

568 #ifde‡
USE_NNTP


569 *
	`ªAnch‹News
(
Buf„r
 *
buf
, *
ª
);

570 *
	`ªAnch‹Newshódî
(
Buf„r
 *
buf
);

572 
	`addMu…úowsF‹m
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
);

573 
Anch‹
 *
	`˛o£°_√xt_™ch‹
(
Anch‹Li°
 *
a
, Anch‹ *
™
, 
x
, 
y
);

574 
Anch‹
 *
	`˛o£°_¥ev_™ch‹
(
Anch‹Li°
 *
a
, Anch‹ *
™
, 
x
, 
y
);

575 #ifde‡
USE_IMAGE


576 
	`addMu…úowsImg
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
);

578 
Hm¨kîLi°
 *
	`putHm¨kî
(Hm¨kîLi° *
ml
, 
löe
, 
pos
, 
£q
);

579 
	`shi·Anch‹Posôi⁄
(
Anch‹Li°
 *
a
, 
Hm¨kîLi°
 *
hl
, 
löe
,

580 
pos
, 
shi·
);

581 *
	`gëAnch‹Text
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
, 
Anch‹
 *
a
);

582 
Buf„r
 *
	`lök_li°_∑√l
(Buf„∏*
buf
);

584 
Så
 
	`decodeB
(**
ww
);

585 
Så
 
	`decodeQ
(**
ww
);

586 
Så
 
	`decodeQP
(**
ww
);

587 
Så
 
	`decodeU
(**
ww
);

588 #ifde‡
USE_M17N


589 
Så
 
	`decodeW‹d
(**
ow
, 
wc_˚s
 * 
ch¨£t
);

590 
Så
 
	`decodeMIME
(Så 
‹g°r
, 
wc_˚s
 * 
ch¨£t
);

592 
Så
 
	`decodeW‹d0
(**
ow
);

593 
Så
 
	`decodeMIME0
(Så 
‹g°r
);

594 
	#decodeW‹d
(
ow
,
ch¨£t
Ë
	`decodeW‹d0
(ow)

	)

595 
	#decodeMIME
(
‹g°r
,
ch¨£t
Ë
	`decodeMIME0
(‹g°r)

	)

597 
Så
 
	`ícodeB
(*
a
);

598 
	`£t_∑øm_›ti⁄
(*
›ti⁄
);

599 *
	`gë_∑øm_›ti⁄
(*
«me
);

600 
	`öô_rc
();

601 
Buf„r
 *
	`lﬂd_›ti⁄_∑√l
();

602 
	`∑√l_£t_›ti⁄
(
∑r£d_èg¨g
 *);

603 
	`sync_wôh_›ti⁄
();

604 *
	`rcFûe
(*
ba£
);

605 *
	`ëcFûe
(*
ba£
);

606 *
	`c⁄fFûe
(*
ba£
);

607 *
	`auxböFûe
(*
ba£
);

608 *
	`libFûe
(*
ba£
);

609 *
	`hñpFûe
(*
ba£
);

610 
Så
 
	`loˇlCookõ
();

611 
Så
 
	`lﬂdLoˇlDú
(*
dú«me
);

612 
	`£t_ívú⁄
(*
v¨
, *
vÆue
);

613 
FILE
 *
	`loˇlcgi_po°
(*, *, 
F‹mLi°
 *, *);

614 
	#loˇlcgi_gë
(
u
, 
q
, 
r
Ë
	`loˇlcgi_po°
((u), (q), 
NULL
, (r))

	)

615 
FILE
 *
	`›íSe¸ëFûe
(*
‚ame
);

616 
	`lﬂdPasswd
();

617 
	`lﬂdPªF‹m
();

618 
	`föd_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

619 
Så
 *
u«me
, Så *
pwd
, 
is_¥oxy
);

620 
	`add_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

621 
Så
 
u«me
, Så 
pwd
, 
is_¥oxy
);

622 
	`övÆid©e_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

623 
Så
 
u«me
, Så 
pwd
, 
is_¥oxy
);

624 *
	`œ°_modifõd
(
Buf„r
 *
buf
);

625 
Så
 
	`rom™NumîÆ
(
n
);

626 
Så
 
	`rom™AÕhabë
(
n
);

627 
	`£tup_chûd
(
chûd
, 
i
, 
f
);

628 
	`myExec
(*
comm™d
);

629 
	`mySy°em
(*
comm™d
, 
background
);

630 
Så
 
	`myExtComm™d
(*
cmd
, *
¨g
, 
ªdúe˘
);

631 
Så
 
	`myEdô‹
(*
cmd
, *
fûe
, 
löe
);

632 *
	`fûe_to_uæ
(*
fûe
);

633 #ifde‡
USE_M17N


634 *
	`uæ_unquŸe_c⁄v
(*
uæ
, 
wc_˚s
 
ch¨£t
);

636 *
	`uæ_unquŸe_c⁄v0
(*
uæ
);

637 
	#uæ_unquŸe_c⁄v
(
uæ
, 
ch¨£t
Ë
	`uæ_unquŸe_c⁄v0
(uæ)

	)

639 *
	`ex∑ndName
(*
«me
);

640 
Så
 
	`tmp‚ame
(
ty≥
, *
ext
);

641 
time_t
 
	`mymktime
(*
time°r
);

642 (*
	`mySig«l
(
sig«l_numbî
, (*
a˘i⁄
) ())) ();

643 #ifde‡
USE_COOKIE


644 *
	`FQDN
(*
ho°
);

645 
Så
 
	`föd_cookõ
(
P¨£dURL
 *
pu
);

646 
	`add_cookõ
(
P¨£dURL
 *
pu
, 
Så
 
«me
, Så 
vÆue
, 
time_t
 
expúes
,

647 
Så
 
domaö
, Så 
∑th
, 
Êag
, Så 
commít
, 
vîsi⁄
,

648 
Så
 
p‹t
, Så 
commítURL
);

649 
	`ßve_cookõs
();

650 
	`lﬂd_cookõs
();

651 
	`öôCookõ
();

652 
	`cooL°
();

653 
Buf„r
 *
	`cookõ_li°_∑√l
();

654 
	`£t_cookõ_Êag
(
∑r£d_èg¨g
 *
¨g
);

655 
	`check_cookõ_ac˚±_domaö
(*
domaö
);

657 
	#cooL°
 
nulcmd


	)

659 #ifde‡
USE_M17N


660 
	`docCSë
();

661 
	`defCSë
();

662 
	`ch™ge_ch¨£t
(
∑r£d_èg¨g
 *
¨g
);

664 
	#docCSë
 
nulcmd


	)

665 
	#defCSë
 
nulcmd


	)

668 #ifde‡
USE_MARK


669 
	`_m¨k
();

670 
	`√xtMk
();

671 
	`¥evMk
();

672 
	`ªM¨k
();

674 
	#_m¨k
 
nulcmd


	)

675 
	#√xtMk
 
nulcmd


	)

676 
	#¥evMk
 
nulcmd


	)

677 
	#ªM¨k
 
nulcmd


	)

680 #ifde‡
USE_MOUSE


681 
	`mou£
();

682 
	`mou£_öô
();

683 
	`mou£_íd
();

684 
	`mou£_a˘ive
();

685 
	`mou£_öa˘ive
();

686 
	`msToggÀ
();

687 
	`movMs
();

688 #ifde‡
USE_MENU


689 
	`míuMs
();

691 
	#míuMs
 
nulcmd


	)

693 
	`èbMs
();

694 
	`˛o£TMs
();

696 
	#mou£
 
nulcmd


	)

697 
	#msToggÀ
 
nulcmd


	)

698 
	#movMs
 
nulcmd


	)

699 
	#míuMs
 
nulcmd


	)

700 
	#èbMs
 
nulcmd


	)

701 
	#˛o£TMs
 
nulcmd


	)

704 #ifde‡
USE_IMAGE


705 
	`öôImage
();

706 
	`ãrmImage
();

707 
	`addImage
(
ImageCache
 * 
ˇche
, 
x
, 
y
, 
sx
, 
sy
, 
w
,

708 
h
);

709 
	`døwImage
();

710 
	`˛órImage
();

713 *
	`£¨chKeyD©a
();

715 
	`£tKeym≠
(*
p
, 
löío
, 
vîbo£
);

716 
	`öôKeym≠
(
f‹˚
);

717 
	`gëFuncLi°
(*
id
);

718 
	`gëKey
(*
s
);

719 *
	`gëKeyD©a
(
key
);

720 *
	`gëW‹d
(**
°r
);

721 *
	`gëQW‹d
(**
°r
);

722 #ifde‡
USE_MOUSE


723 
	`öôMou£A˘i⁄
();

726 #ifde‡
USE_MENU


727 
	`√w_míu
(
Míu
 *
míu
, 
MíuIãm
 *
ôem
);

728 
	`geom_míu
(
Míu
 *
míu
, 
x
, 
y
, 
m£À˘
);

729 
	`døw_Æl_míu
(
Míu
 *
míu
);

730 
	`døw_míu
(
Míu
 *
míu
);

731 
	`døw_míu_ôem
(
Míu
 *
míu
, 
m£À˘
);

732 
	`£À˘_míu
(
Míu
 *
míu
, 
m£À˘
);

733 
	`gŸo_míu
(
Míu
 *
míu
, 
m£À˘
, 
down
);

734 
	`up_míu
(
Míu
 *
míu
, 
n
);

735 
	`down_míu
(
Míu
 *
míu
, 
n
);

736 
	`a˘i⁄_míu
(
Míu
 *
míu
);

737 
	`p›up_míu
(
Míu
 *
∑ª¡
, Míu *
míu
);

738 
	`guess_míu_xy
(
Míu
 *
míu
, 
width
, *
x
, *
y
);

739 
	`√w_›ti⁄_míu
(
Míu
 *
míu
, **
œbñ
, *
v¨übÀ
,

740 (*
func
) ());

742 
	`£tMíuIãm
(
MíuIãm
 *
ôem
, *
ty≥
, *
löe
);

743 
	`addMíuLi°
(
MíuLi°
 **
li°
, *
id
);

744 
	`gëMíuN
(
MíuLi°
 *
li°
, *
id
);

746 
	`p›upMíu
(
x
, 
y
, 
Míu
 *
míu
);

747 
	`maöMíu
(
x
, 
y
);

748 
	`maöMn
();

749 
	`£lMn
();

750 
	`èbMn
();

751 
	`›ti⁄Míu
(
x
, 
y
, **
œbñ
, *
v¨übÀ
, 
öôül
,

752 (*
func
) ());

753 
	`öôMíu
();

755 
	#maöMn
 
nulcmd


	)

756 
	#£lMn
 
£lBuf


	)

757 
	#èbMn
 
nulcmd


	)

760 #ifde‡
USE_DICT


761 
	`di˘w‹d
();

762 
	`di˘w‹d©
();

764 
	#di˘w‹d
 
nulcmd


	)

765 
	#di˘w‹d©
 
nulcmd


	)

768 
	`ªlﬂdBuf„r
(
Buf„r
 *
buf
);

770 *
	`guess_ßve_«me
(
Buf„r
 *
buf
, *
fûe
);

772 
	`wøpToggÀ
();

773 #ifde‡
USE_BUFINFO


774 
	`ßveBuf„rInfo
();

777 
	`di•Vî
();

779 #ifde‡
USE_INCLUDED_SRAND48


780 
	`§™d48
();

781 
	`Ã™d48
();

784 
	~"ödï.h
"

	@.pc/google.patch/rc.c

5 
	~"fm.h
"

6 
	~"my˘y≥.h
"

7 
	~"¥Ÿo.h
"

8 
	~<°dio.h
>

9 
	~<î∫o.h
>

10 
	~"∑r£èg.h
"

11 
	~"loˇl.h
"

12 
	~<°dlib.h
>

14 
	s∑øm_±r
 {

15 *
	m«me
;

16 
	mty≥
;

17 
	möpuây≥
;

18 *
	mv¨±r
;

19 *
	mcommít
;

20 *
	m£À˘
;

23 
	s∑øm_£˘i⁄
 {

24 *
	m«me
;

25 
∑øm_±r
 *
	m∑øms
;

28 
	src_£¨ch_èbÀ
 {

29 
∑øm_±r
 *
	m∑øm
;

30 
	muniq_pos
;

33 
rc_£¨ch_èbÀ
 *
	gRC_£¨ch_èbÀ
;

34 
	gRC_èbÀ_size
;

36 
	#P_INT
 0

	)

37 
	#P_SHORT
 1

	)

38 
	#P_CHARINT
 2

	)

39 
	#P_CHAR
 3

	)

40 
	#P_STRING
 4

	)

41 #i‡
deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

42 
	#P_SSLPATH
 5

	)

44 #ifde‡
USE_COLOR


45 
	#P_COLOR
 6

	)

47 #ifde‡
USE_M17N


48 
	#P_CODE
 7

	)

50 
	#P_PIXELS
 8

	)

51 
	#P_NZINT
 9

	)

52 
	#P_SCALE
 10

	)

55 #ifde‡
USE_M17N


56 
wc_˚s
 
	gO±i⁄Ch¨£t
 = 
WC_CES_US_ASCII
;

57 
	gO±i⁄Encode
 = 
FALSE
;

60 
	#CMT_HELPER
 
	`N_
("Exã∫Æ Võwî Sëup")

	)

61 
	#CMT_TABSTOP
 
	`N_
("Tab width i¿ch¨a˘îs")

	)

62 
	#CMT_INDENT_INCR
 
	`N_
("Indíàf‹ HTMLÑídîög")

	)

63 
	#CMT_PIXEL_PER_CHAR
 
	`N_
("Numbî o‡pixñ†≥∏ch¨a˘î (4.0...32.0)")

	)

64 
	#CMT_PIXEL_PER_LINE
 
	`N_
("Numbî o‡pixñ†≥∏löê(4.0...64.0)")

	)

65 
	#CMT_PAGERLINE
 
	`N_
("Numbî o‡ªmembîedÜöe†whí u£dá†®∑gî")

	)

66 
	#CMT_HISTORY
 
	`N_
("U£ URL hi°‹y")

	)

67 
	#CMT_HISTSIZE
 
	`N_
("Numbî o‡ªmembîed URL")

	)

68 
	#CMT_SAVEHIST
 
	`N_
("SavêURL hi°‹y")

	)

69 
	#CMT_FRAME
 
	`N_
("Rídî føme†autom©iˇŒy")

	)

70 
	#CMT_ARGV_IS_URL
 
	`N_
("Tª©árgumíàwôhouàschemêa†URL")

	)

71 
	#CMT_TSELF
 
	`N_
("U£ _£l‡a†deÁu…Å¨gë")

	)

72 
	#CMT_OPEN_TAB_BLANK
 
	`N_
("O≥¿lök o¿√wÅab i‡èrgë i†_bœnk o∏_√w")

	)

73 
	#CMT_OPEN_TAB_DL_LIST
 
	`N_
("O≥¿dow∆ﬂdÜi°Ö™ñ o¿√wÅab")

	)

74 
	#CMT_DISPLINK
 
	`N_
("Di•œyÜök URLáutom©iˇŒy")

	)

75 
	#CMT_DECODE_URL
 
	`N_
("Di•œy decoded URL")

	)

76 
	#CMT_DISPLINEINFO
 
	`N_
("Di•œy cuºíàlöênumbî")

	)

77 
	#CMT_DISP_IMAGE
 
	`N_
("Di•œy i∆öêimages")

	)

78 #ifde‡
USE_IMAGE


79 
	#CMT_AUTO_IMAGE
 
	`N_
("Lﬂd i∆öêimage†autom©iˇŒy")

	)

80 
	#CMT_MAX_LOAD_IMAGE
 
	`N_
("MaximumÖro˚s£†f‹Ö¨ÆÀ»imagêlﬂdög")

	)

81 
	#CMT_EXT_IMAGE_VIEWER
 
	`N_
("U£Éxã∫Æ imagêvõwî")

	)

82 
	#CMT_IMAGE_SCALE
 
	`N_
("SˇÀ o‡imagê(%)")

	)

83 
	#CMT_IMGDISPLAY
 
	`N_
("Exã∫Æ comm™dÅÿdi•œy image")

	)

84 
	#CMT_IMAGE_MAP_LIST
 
	`N_
("U£ÜökÜi° o‡imagêm≠")

	)

86 
	#CMT_MULTICOL
 
	`N_
("Di•œy fûê«me†ö mu…i-cﬁum¿f‹m©")

	)

87 
	#CMT_ALT_ENTITY
 
	`N_
("U£ ASCIIÉquivÆít†tÿdi•œyÉ¡ôõs")

	)

88 
	#CMT_GRAPHIC_CHAR
 
	`N_
("U£ gøphi¯ch¨ f‹ b‹dî o‡èbÀánd míu")

	)

89 
	#CMT_FOLD_TEXTAREA
 
	`N_
("FﬁdÜöe†ö TEXTAREA")

	)

90 
	#CMT_DISP_INS_DEL
 
	`N_
("Di•œy INS, DEL, Sánd STRIKEÉÀmít")

	)

91 
	#CMT_COLOR
 
	`N_
("Di•œy wôh cﬁ‹")

	)

92 
	#CMT_B_COLOR
 
	`N_
("Cﬁ‹ o‡n‹mÆ ch¨a˘î")

	)

93 
	#CMT_A_COLOR
 
	`N_
("Cﬁ‹ o‡™ch‹")

	)

94 
	#CMT_I_COLOR
 
	`N_
("Cﬁ‹ o‡imagêlök")

	)

95 
	#CMT_F_COLOR
 
	`N_
("Cﬁ‹ o‡f‹m")

	)

96 
	#CMT_ACTIVE_STYLE
 
	`N_
("E«bÀ cﬁ‹ög o‡a˘ivêlök")

	)

97 
	#CMT_C_COLOR
 
	`N_
("Cﬁ‹ o‡cuºíéyá˘ivêlök")

	)

98 
	#CMT_VISITED_ANCHOR
 
	`N_
("U£ visôedÜök cﬁ‹")

	)

99 
	#CMT_V_COLOR
 
	`N_
("Cﬁ‹ o‡visôedÜök")

	)

100 
	#CMT_BG_COLOR
 
	`N_
("Cﬁ‹ o‡background")

	)

101 
	#CMT_MARK_COLOR
 
	`N_
("Cﬁ‹ o‡m¨k")

	)

102 
	#CMT_USE_PROXY
 
	`N_
("U£Öroxy")

	)

103 
	#CMT_HTTP_PROXY
 
	`N_
("URL o‡HTTPÖroxy ho°")

	)

104 #ifde‡
USE_SSL


105 
	#CMT_HTTPS_PROXY
 
	`N_
("URL o‡HTTPSÖroxy ho°")

	)

107 #ifde‡
USE_GOPHER


108 
	#CMT_GOPHER_PROXY
 
	`N_
("URL o‡GOPHERÖroxy ho°")

	)

110 
	#CMT_FTP_PROXY
 
	`N_
("URL o‡FTPÖroxy ho°")

	)

111 
	#CMT_NO_PROXY
 
	`N_
("Domaö†tÿbêac˚s£d dúe˘ly (nÿ¥oxy)")

	)

112 
	#CMT_NOPROXY_NETADDR
 
	`N_
("CheckÇ›roxy byÇëw‹káddªss")

	)

113 
	#CMT_NO_CACHE
 
	`N_
("DißbÀ cache")

	)

114 #ifde‡
USE_NNTP


115 
	#CMT_NNTP_SERVER
 
	`N_
("New†£rvî")

	)

116 
	#CMT_NNTP_MODE
 
	`N_
("Modêo‡√w†£rvî")

	)

117 
	#CMT_MAX_NEWS
 
	`N_
("Numbî o‡√w†mesßges")

	)

119 
	#CMT_DNS_ORDER
 
	`N_
("Ordî o‡«mêªsﬁuti⁄")

	)

120 
	#CMT_DROOT
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/ (documíàroŸ)")

	)

121 
	#CMT_PDROOT
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/~u£r")

	)

122 
	#CMT_CGIBIN
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/cgi-bö")

	)

123 
	#CMT_CONFIRM_QQ
 
	`N_
("C⁄fúm whí quôtög wôh q")

	)

124 
	#CMT_CLOSE_TAB_BACK
 
	`N_
("Clo£Åab i‡buf„∏i†œ° whí back")

	)

125 #ifde‡
USE_MARK


126 
	#CMT_USE_MARK
 
	`N_
("E«bÀ m¨k o≥øti⁄s")

	)

128 
	#CMT_EMACS_LIKE_LINEEDIT
 
	`N_
("E«bÀ Emacs-°yÀÜöêedôög")

	)

129 
	#CMT_VI_PREC_NUM
 
	`N_
("E«bÀ vi-likênumîi¯¥efix")

	)

130 
	#CMT_LABEL_TOPLINE
 
	`N_
("Movêcurs‹Åÿt›Üöêwhí goögÅÿœbñ")

	)

131 
	#CMT_NEXTPAGE_TOPLINE
 
	`N_
("Movêcurs‹Åÿt›Üöêwhí movögÅÿ√xà∑ge")

	)

132 
	#CMT_FOLD_LINE
 
	`N_
("FﬁdÜöe†o‡∂aöÅexàfûe")

	)

133 
	#CMT_SHOW_NUM
 
	`N_
("ShowÜöênumbîs")

	)

134 
	#CMT_SHOW_SRCH_STR
 
	`N_
("Show sórch såög")

	)

135 
	#CMT_MIMETYPES
 
	`N_
("Li° o‡mime.ty≥†fûes")

	)

136 
	#CMT_MAILCAP
 
	`N_
("Li° o‡maûˇ∞fûes")

	)

137 
	#CMT_URIMETHODMAP
 
	`N_
("Li° o‡urimëhodm≠ fûes")

	)

138 
	#CMT_EDITOR
 
	`N_
("Edô‹")

	)

139 
	#CMT_MAILER
 
	`N_
("Maûî")

	)

140 
	#CMT_EXTBRZ
 
	`N_
("Exã∫Æ Brow£r")

	)

141 
	#CMT_EXTBRZ2
 
	`N_
("Sec⁄d Exã∫Æ Brow£r")

	)

142 
	#CMT_EXTBRZ3
 
	`N_
("Thúd Exã∫Æ Brow£r")

	)

143 
	#CMT_DISABLE_SECRET_SECURITY_CHECK
 
	`N_
("DißbÀ se¸ë fûê£curôy check")

	)

144 
	#CMT_PASSWDFILE
 
	`N_
("Passw‹d fûe")

	)

145 
	#CMT_PRE_FORM_FILE
 
	`N_
("Fûêf‹ sëtög f‹m o¿lﬂdög")

	)

146 
	#CMT_FTPPASS
 
	`N_
("Passw‹d f‹án⁄ymou†FTP (you∏maûáddªss)")

	)

147 
	#CMT_FTPPASS_HOSTNAMEGEN
 
	`N_
("Gíî©êdomaöÖ¨ào‡∑ssw‹d f‹ FTP")

	)

148 
	#CMT_USERAGENT
 
	`N_
("U£r-Agíàidítifiˇti⁄ såög")

	)

149 
	#CMT_ACCEPTENCODING
 
	`N_
("Ac˚±-Encodög hódî")

	)

150 
	#CMT_ACCEPTMEDIA
 
	`N_
("Ac˚± hódî")

	)

151 
	#CMT_ACCEPTLANG
 
	`N_
("Ac˚±-L™guagêhódî")

	)

152 
	#CMT_MARK_ALL_PAGES
 
	`N_
("Tª© URL-likê°rög†a†lök†öáŒÖages")

	)

153 
	#CMT_WRAP
 
	`N_
("Wø∞£¨ch")

	)

154 
	#CMT_VIEW_UNSEENOBJECTS
 
	`N_
("Di•œy un£í obje˘†”.g. bgimagêèg)")

	)

155 
	#CMT_AUTO_UNCOMPRESS
 
	`N_
("Uncom¥es†com¥es£d d©®autom©iˇŒy whí dow∆ﬂdög")

	)

156 #ifde‡
__EMX__


157 
	#CMT_BGEXTVIEW
 
	`N_
("Ru¿exã∫Æ võwî i¿®£∑øã sessi⁄")

	)

159 
	#CMT_BGEXTVIEW
 
	`N_
("Ru¿exã∫Æ võwî i¿thêbackground")

	)

161 
	#CMT_EXT_DIRLIST
 
	`N_
("U£Éxã∫ÆÖrogøm f‹ dúe˘‹yÜi°ög")

	)

162 
	#CMT_DIRLIST_CMD
 
	`N_
("URL o‡dúe˘‹yÜi°ög comm™d")

	)

163 #ifde‡
USE_DICT


164 
	#CMT_USE_DICTCOMMAND
 
	`N_
("E«bÀ di˘i⁄¨yÜooku∞through CGI")

	)

165 
	#CMT_DICTCOMMAND
 
	`N_
("URL o‡di˘i⁄¨yÜooku∞comm™d")

	)

167 
	#CMT_IGNORE_NULL_IMG_ALT
 
	`N_
("Di•œyÜökÇamêf‹ image†œckög ALT")

	)

168 
	#CMT_IFILE
 
	`N_
("Index fûêf‹ dúe˘‹õs")

	)

169 
	#CMT_RETRY_HTTP
 
	`N_
("Pª≥nd hâp://ÅÿURLáutom©iˇŒy")

	)

170 
	#CMT_DEFAULT_URL
 
	`N_
("DeÁu… vÆuêf‹ o≥n-URL comm™d")

	)

171 
	#CMT_DECODE_CTE
 
	`N_
("DecodêC⁄ã¡-Tøns„r-Encodög whí savög")

	)

172 
	#CMT_PRESERVE_TIMESTAMP
 
	`N_
("Pª£rvêtime°am∞whí savög")

	)

173 #ifde‡
USE_MOUSE


174 
	#CMT_MOUSE
 
	`N_
("E«bÀ mou£")

	)

175 
	#CMT_REVERSE_MOUSE
 
	`N_
("S¸ﬁ»öÑevî£ dúe˘i⁄ o‡mou£ døg")

	)

176 
	#CMT_RELATIVE_WHEEL_SCROLL
 
	`N_
("Behavi‹ o‡whì»s¸ﬁ»•ìd")

	)

177 
	#CMT_RELATIVE_WHEEL_SCROLL_RATIO
 
	`N_
("(A o∆y)S¸ﬁ»by # (%Ëo‡s¸ìn")

	)

178 
	#CMT_FIXED_WHEEL_SCROLL_COUNT
 
	`N_
("(B o∆y)S¸ﬁ»by #Üöes")

	)

180 
	#CMT_CLEAR_BUF
 
	`N_
("Fªêmem‹y o‡undi•œyed buf„rs")

	)

181 
	#CMT_NOSENDREFERER
 
	`N_
("Suµªs†`Re„ªr:' hódî")

	)

182 
	#CMT_IGNORE_CASE
 
	`N_
("Sórch ca£-ö£nsôivñy")

	)

183 
	#CMT_USE_LESSOPEN
 
	`N_
("U£ LESSOPEN")

	)

184 #ifde‡
USE_SSL


185 #ifde‡
USE_SSL_VERIFY


186 
	#CMT_SSL_VERIFY_SERVER
 
	`N_
("Pîf‹m SSL sîvî vîifiˇti⁄")

	)

187 
	#CMT_SSL_CERT_FILE
 
	`N_
("PEMÉncoded cîtifiˇã fûêo‡˛õ¡")

	)

188 
	#CMT_SSL_KEY_FILE
 
	`N_
("PEMÉncodedÖriv©êkey fûêo‡˛õ¡")

	)

189 
	#CMT_SSL_CA_PATH
 
	`N_
("P©hÅÿdúe˘‹y f‹ PEMÉncoded cîtifiˇã†o‡CAs")

	)

190 
	#CMT_SSL_CA_FILE
 
	`N_
("Fûêc⁄si°ög o‡PEMÉncoded cîtifiˇã†o‡CAs")

	)

192 
	#CMT_SSL_FORBID_METHOD
 
	`N_
("Li° o‡f‹biddí SSL mëhod†(2: SSLv2, 3: SSLv3,Å:TLSv1)")

	)

194 #ifde‡
USE_COOKIE


195 
	#CMT_USECOOKIE
 
	`N_
("E«bÀ cookõÖro˚ssög")

	)

196 
	#CMT_SHOWCOOKIE
 
	`N_
("Pröà®mesßgêwhíÑe˚ivögá cookõ")

	)

197 
	#CMT_ACCEPTCOOKIE
 
	`N_
("Ac˚± cookõs")

	)

198 
	#CMT_ACCEPTBADCOOKIE
 
	`N_
("A˘i⁄Åÿbêèkí o¿övÆid cookõ")

	)

199 
	#CMT_COOKIE_REJECT_DOMAINS
 
	`N_
("Domaö†tÿªje˘ cookõ†‰om")

	)

200 
	#CMT_COOKIE_ACCEPT_DOMAINS
 
	`N_
("Domaö†tÿac˚± cookõ†‰om")

	)

202 
	#CMT_FOLLOW_REDIRECTION
 
	`N_
("Numbî o‡ªdúe˘i⁄†tÿfﬁlow")

	)

203 
	#CMT_META_REFRESH
 
	`N_
("E«bÀÖro˚ssög o‡mëa-ª‰eshÅag")

	)

205 #ifde‡
USE_MIGEMO


206 
	#CMT_USE_MIGEMO
 
	`N_
("E«bÀ Migemÿ(Roma-jò£¨ch)")

	)

207 
	#CMT_MIGEMO_COMMAND
 
	`N_
("Migemÿcomm™d")

	)

210 #ifde‡
USE_M17N


211 
	#CMT_DISPLAY_CHARSET
 
	`N_
("Di•œy ch¨£t")

	)

212 
	#CMT_DOCUMENT_CHARSET
 
	`N_
("DeÁu… documíàch¨£t")

	)

213 
	#CMT_AUTO_DETECT
 
	`N_
("Autom©i¯ch¨£àdëe˘ whíÜﬂdög")

	)

214 
	#CMT_SYSTEM_CHARSET
 
	`N_
("Sy°em ch¨£t")

	)

215 
	#CMT_FOLLOW_LOCALE
 
	`N_
("Sy°em ch¨£àfﬁlow†loˇÀ(LC_CTYPE)")

	)

216 
	#CMT_EXT_HALFDUMP
 
	`N_
("OuçuàhÆfdum∞wôh di•œy ch¨£t")

	)

217 
	#CMT_USE_WIDE
 
	`N_
("U£ mu…òcﬁum¿ch¨a˘îs")

	)

218 
	#CMT_USE_COMBINING
 
	`N_
("U£ comböög ch¨a˘îs")

	)

219 
	#CMT_USE_LANGUAGE_TAG
 
	`N_
("U£ Unicodêœnguagêègs")

	)

220 
	#CMT_UCS_CONV
 
	`N_
("Ch¨£àc⁄vîsi⁄ usög Unicodêm≠")

	)

221 
	#CMT_PRE_CONV
 
	`N_
("Ch¨£àc⁄vîsi⁄ whíÜﬂdög")

	)

222 
	#CMT_SEARCH_CONV
 
	`N_
("Adju° sórch såög f‹ documíàch¨£t")

	)

223 
	#CMT_FIX_WIDTH_CONV
 
	`N_
("Fix ch¨a˘î width whí c⁄vîsi⁄")

	)

224 
	#CMT_USE_GB12345_MAP
 
	`N_
("U£ GB 12345 Unicodêm≠ in°ód o‡GB 2312's")

	)

225 
	#CMT_USE_JISX0201
 
	`N_
("U£ JIS X 0201 Rom™ f‹ ISO-2022-JP")

	)

226 
	#CMT_USE_JISC6226
 
	`N_
("U£ JIS C 6226:1978 f‹ ISO-2022-JP")

	)

227 
	#CMT_USE_JISX0201K
 
	`N_
("U£ JIS X 0201 K©ak™a")

	)

228 
	#CMT_USE_JISX0212
 
	`N_
("U£ JIS X 0212:1990 (SuµÀmíè»K™ji)")

	)

229 
	#CMT_USE_JISX0213
 
	`N_
("U£ JIS X 0213:2000 (2000JIS)")

	)

230 
	#CMT_STRICT_ISO2022
 
	`N_
("Såi˘ ISO-2022-JP/KR/CN")

	)

231 
	#CMT_GB18030_AS_UCS
 
	`N_
("Tª© 4 byã†ch¨. o‡GB18030á†Unicode")

	)

234 
	#CMT_KEYMAP_FILE
 
	`N_
("keym≠ fûe")

	)

236 
	#PI_TEXT
 0

	)

237 
	#PI_ONOFF
 1

	)

238 
	#PI_SEL_C
 2

	)

239 #ifde‡
USE_M17N


240 
	#PI_CODE
 3

	)

243 
	s£l_c
 {

244 
	mvÆue
;

245 *
	mcvÆue
;

246 *
	mãxt
;

249 #ifde‡
USE_COLOR


250 
£l_c
 
	gcﬁ‹°r
[] = {

251 {0, "bœck", 
N_
("black")},

252 {1, "ªd", 
N_
("red")},

253 {2, "gªí", 
N_
("green")},

254 {3, "yñlow", 
N_
("yellow")},

255 {4, "blue", 
N_
("blue")},

256 {5, "magíè", 
N_
("magenta")},

257 {6, "cy™", 
N_
("cyan")},

258 {7, "whôe", 
N_
("white")},

259 {8, "ãrmöÆ", 
N_
("terminal")},

260 {0, 
NULL
, NULL}

265 
	#N_STR
(
x
Ë#x

	)

266 
	#N_S
(
x
Ë(x), 
	`N_STR
(x)

	)

268 
	gn_s
[][2] = {

273 
	#N_S
(
x
Ë(x), 
n_s
[(x)]

	)

277 
£l_c
 
	gdeÁu…uæs
[] = {

278 {
N_S
(
DEFAULT_URL_EMPTY
), 
N_
("none")},

279 {
N_S
(
DEFAULT_URL_CURRENT
), 
N_
("current URL")},

280 {
N_S
(
DEFAULT_URL_LINK
), 
N_
("link URL")},

281 {0, 
NULL
, NULL}

284 
£l_c
 
	gdi•œyösdñ
[] = {

285 {
N_S
(
DISPLAY_INS_DEL_SIMPLE
), 
N_
("simple")},

286 {
N_S
(
DISPLAY_INS_DEL_NORMAL
), 
N_
("useÅag")},

287 {
N_S
(
DISPLAY_INS_DEL_FONTIFY
), 
N_
("fontify")},

288 {0, 
NULL
, NULL}

291 #ifde‡
USE_MOUSE


292 
£l_c
 
	gwhìlmode
[] = {

293 {
TRUE
, "1", 
N_
("A:relativeÅo screen height")},

294 {
FALSE
, "0", 
N_
("B:fixed speed")},

295 {0, 
NULL
, NULL}

299 #ifde‡
INET6


300 
£l_c
 
	gdns‹dîs
[] = {

301 {
N_S
(
DNS_ORDER_UNSPEC
), 
N_
("unspecified")},

302 {
N_S
(
DNS_ORDER_INET_INET6
), 
N_
("inet inet6")},

303 {
N_S
(
DNS_ORDER_INET6_INET
), 
N_
("inet6 inet")},

304 {
N_S
(
DNS_ORDER_INET_ONLY
), 
N_
("inet only")},

305 {
N_S
(
DNS_ORDER_INET6_ONLY
), 
N_
("inet6 only")},

306 {0, 
NULL
, NULL}

310 #ifde‡
USE_COOKIE


311 
£l_c
 
	gbadcookõ°r
[] = {

312 {
N_S
(
ACCEPT_BAD_COOKIE_DISCARD
), 
N_
("discard")},

314 {
N_S
(
ACCEPT_BAD_COOKIE_ACCEPT
), 
N_
("accept")},

316 {
N_S
(
ACCEPT_BAD_COOKIE_ASK
), 
N_
("ask")},

317 {0, 
NULL
, NULL}

321 #ifde‡
USE_M17N


322 
wc_˚s_li°
 *
	gdi•œy_ch¨£t_°r
 = 
NULL
;

323 
wc_˚s_li°
 *
	gdocumít_ch¨£t_°r
 = 
NULL
;

324 
wc_˚s_li°
 *
	gsy°em_ch¨£t_°r
 = 
NULL
;

325 
£l_c
 
	gauto_dëe˘_°r
[] = {

326 {
N_S
(
WC_OPT_DETECT_OFF
), 
N_
("OFF")},

327 {
N_S
(
WC_OPT_DETECT_ISO_2022
), 
N_
("Only ISO 2022")},

328 {
N_S
(
WC_OPT_DETECT_ON
), 
N_
("ON")},

329 {0, 
NULL
, NULL}

333 
∑øm_±r
 
	g∑øms1
[] = {

334 {"èb°›", 
P_NZINT
, 
PI_TEXT
, (*)&
Tab°›
, 
CMT_TABSTOP
, 
NULL
},

335 {"ödít_ö¸", 
P_NZINT
, 
PI_TEXT
, (*)&
IndítIn¸
, 
CMT_INDENT_INCR
,

336 
NULL
},

337 {"pixñ_≥r_ch¨", 
P_PIXELS
, 
PI_TEXT
, (*)&
pixñ_≥r_ch¨
,

338 
CMT_PIXEL_PER_CHAR
, 
NULL
},

339 #ifde‡
USE_IMAGE


340 {"pixñ_≥r_löe", 
P_PIXELS
, 
PI_TEXT
, (*)&
pixñ_≥r_löe
,

341 
CMT_PIXEL_PER_LINE
, 
NULL
},

343 {"‰ame", 
P_CHARINT
, 
PI_ONOFF
, (*)&
RídîFøme
, 
CMT_FRAME
, 
NULL
},

344 {"èrgë_£lf", 
P_CHARINT
, 
PI_ONOFF
, (*)&
T¨gëSñf
, 
CMT_TSELF
, 
NULL
},

345 {"›í_èb_bœnk", 
P_INT
, 
PI_ONOFF
, (*)&
›í_èb_bœnk
,

346 
CMT_OPEN_TAB_BLANK
, 
NULL
},

347 {"›í_èb_dl_li°", 
P_INT
, 
PI_ONOFF
, (*)&
›í_èb_dl_li°
,

348 
CMT_OPEN_TAB_DL_LIST
, 
NULL
},

349 {"di•œy_lök", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyLök
, 
CMT_DISPLINK
,

350 
NULL
},

351 {"decode_uæ", 
P_INT
, 
PI_ONOFF
, (*)&
DecodeURL
, 
CMT_DECODE_URL
, 
NULL
},

352 {"di•œy_löeöfo", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyLöeInfo
,

353 
CMT_DISPLINEINFO
, 
NULL
},

354 {"ext_dúli°", 
P_INT
, 
PI_ONOFF
, (*)&
U£Exã∫ÆDúBuf„r
,

355 
CMT_EXT_DIRLIST
, 
NULL
},

356 {"dúli°_cmd", 
P_STRING
, 
PI_TEXT
, (*)&
DúBuf„rComm™d
,

357 
CMT_DIRLIST_CMD
, 
NULL
},

358 #ifde‡
USE_DICT


359 {"u£_di˘comm™d", 
P_INT
, 
PI_ONOFF
, (*)&
U£Di˘Comm™d
,

360 
CMT_USE_DICTCOMMAND
, 
NULL
},

361 {"di˘comm™d", 
P_STRING
, 
PI_TEXT
, (*)&
Di˘Comm™d
,

362 
CMT_DICTCOMMAND
, 
NULL
},

364 {"mu…icﬁ", 
P_INT
, 
PI_ONOFF
, (*)&
mu…icﬁLi°
, 
CMT_MULTICOL
, 
NULL
},

365 {"Æt_ítôy", 
P_CHARINT
, 
PI_ONOFF
, (*)&
U£A…E¡ôy
, 
CMT_ALT_ENTITY
,

366 
NULL
},

367 {"gøphic_ch¨", 
P_CHARINT
, 
PI_ONOFF
, (*)&
U£GøphicCh¨
,

368 
CMT_GRAPHIC_CHAR
, 
NULL
},

369 {"fﬁd_ãxèªa", 
P_CHARINT
, 
PI_ONOFF
, (*)&
FﬁdTexèªa
,

370 
CMT_FOLD_TEXTAREA
, 
NULL
},

371 {"di•œy_ös_dñ", 
P_INT
, 
PI_SEL_C
, (*)&
di•œyInsDñ
,

372 
CMT_DISP_INS_DEL
, 
di•œyösdñ
},

373 {"ign‹e_nuŒ_img_Æt", 
P_INT
, 
PI_ONOFF
, (*)&
ign‹e_nuŒ_img_Æt
,

374 
CMT_IGNORE_NULL_IMG_ALT
, 
NULL
},

375 {"võw_un£íobje˘", 
P_INT
, 
PI_ONOFF
, (*)&
võw_un£íobje˘
,

376 
CMT_VIEW_UNSEENOBJECTS
, 
NULL
},

378 {"di•œy_image", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyImage
, 
CMT_DISP_IMAGE
,

379 
NULL
},

380 #ifde‡
USE_IMAGE


381 {"auto_image", 
P_INT
, 
PI_ONOFF
, (*)&
autoImage
, 
CMT_AUTO_IMAGE
, 
NULL
},

382 {"max_lﬂd_image", 
P_INT
, 
PI_TEXT
, (*)&
maxLﬂdImage
,

383 
CMT_MAX_LOAD_IMAGE
, 
NULL
},

384 {"ext_image_võwî", 
P_INT
, 
PI_ONOFF
, (*)&
u£ExtImageVõwî
,

385 
CMT_EXT_IMAGE_VIEWER
, 
NULL
},

386 {"image_sˇÀ", 
P_SCALE
, 
PI_TEXT
, (*)&
image_sˇÀ
, 
CMT_IMAGE_SCALE
,

387 
NULL
},

388 {"imgdi•œy", 
P_STRING
, 
PI_TEXT
, (*)&
Imgdi•œy
, 
CMT_IMGDISPLAY
,

389 
NULL
},

390 {"image_m≠_li°", 
P_INT
, 
PI_ONOFF
, (*)&
image_m≠_li°
,

391 
CMT_IMAGE_MAP_LIST
, 
NULL
},

393 {"fﬁd_löe", 
P_INT
, 
PI_ONOFF
, (*)&
FﬁdLöe
, 
CMT_FOLD_LINE
, 
NULL
},

394 {"show_ um", 
P_INT
, 
PI_ONOFF
, (*)&
showLöeNum
, 
CMT_SHOW_NUM
, 
NULL
},

395 {"show_§ch_°r", 
P_INT
, 
PI_ONOFF
, (*)&
show_§ch_°r
,

396 
CMT_SHOW_SRCH_STR
, 
NULL
},

397 {"œbñ_t›löe", 
P_INT
, 
PI_ONOFF
, (*)&
œbñ_t›löe
,

398 
CMT_LABEL_TOPLINE
, 
NULL
},

399 {"√xçage_t›löe", 
P_INT
, 
PI_ONOFF
, (*)&
√xçage_t›löe
,

400 
CMT_NEXTPAGE_TOPLINE
, 
NULL
},

401 {
NULL
, 0, 0, NULL, NULL, NULL},

404 #ifde‡
USE_COLOR


405 
∑øm_±r
 
	g∑øms2
[] = {

406 {"cﬁ‹", 
P_INT
, 
PI_ONOFF
, (*)&
u£Cﬁ‹
, 
CMT_COLOR
, 
NULL
},

407 {"basic_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
basic_cﬁ‹
, 
CMT_B_COLOR
,

408 (*)
cﬁ‹°r
},

409 {"™ch‹_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
™ch‹_cﬁ‹
, 
CMT_A_COLOR
,

410 (*)
cﬁ‹°r
},

411 {"image_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
image_cﬁ‹
, 
CMT_I_COLOR
,

412 (*)
cﬁ‹°r
},

413 {"f‹m_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
f‹m_cﬁ‹
, 
CMT_F_COLOR
,

414 (*)
cﬁ‹°r
},

415 #ifde‡
USE_BG_COLOR


416 {"m¨k_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
m¨k_cﬁ‹
, 
CMT_MARK_COLOR
,

417 (*)
cﬁ‹°r
},

418 {"bg_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
bg_cﬁ‹
, 
CMT_BG_COLOR
,

419 (*)
cﬁ‹°r
},

421 {"a˘ive_°yÀ", 
P_INT
, 
PI_ONOFF
, (*)&
u£A˘iveCﬁ‹
,

422 
CMT_ACTIVE_STYLE
, 
NULL
},

423 {"a˘ive_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
a˘ive_cﬁ‹
, 
CMT_C_COLOR
,

424 (*)
cﬁ‹°r
},

425 {"visôed_™ch‹", 
P_INT
, 
PI_ONOFF
, (*)&
u£VisôedCﬁ‹
,

426 
CMT_VISITED_ANCHOR
, 
NULL
},

427 {"visôed_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
visôed_cﬁ‹
, 
CMT_V_COLOR
,

428 (*)
cﬁ‹°r
},

429 {
NULL
, 0, 0, NULL, NULL, NULL},

434 
∑øm_±r
 
	g∑øms3
[] = {

435 {"∑gîlöe", 
P_NZINT
, 
PI_TEXT
, (*)&
PagîMax
, 
CMT_PAGERLINE
, 
NULL
},

436 #ifde‡
USE_HISTORY


437 {"u£_hi°‹y", 
P_INT
, 
PI_ONOFF
, (*)&
U£Hi°‹y
, 
CMT_HISTORY
, 
NULL
},

438 {"hi°‹y", 
P_INT
, 
PI_TEXT
, (*)&
URLHi°Size
, 
CMT_HISTSIZE
, 
NULL
},

439 {"ßve_hi°", 
P_INT
, 
PI_ONOFF
, (*)&
SaveURLHi°
, 
CMT_SAVEHIST
, 
NULL
},

441 {"c⁄fúm_qq", 
P_INT
, 
PI_ONOFF
, (*)&
c⁄fúm_⁄_quô
, 
CMT_CONFIRM_QQ
,

442 
NULL
},

443 {"˛o£_èb_back", 
P_INT
, 
PI_ONOFF
, (*)&
˛o£_èb_back
,

444 
CMT_CLOSE_TAB_BACK
, 
NULL
},

445 #ifde‡
USE_MARK


446 {"m¨k", 
P_INT
, 
PI_ONOFF
, (*)&
u£_m¨k
, 
CMT_USE_MARK
, 
NULL
},

448 {"emacs_like_löìdô", 
P_INT
, 
PI_ONOFF
, (*)&
emacs_like_löìdô
,

449 
CMT_EMACS_LIKE_LINEEDIT
, 
NULL
},

450 {"vi_¥ec_num", 
P_INT
, 
PI_ONOFF
, (*)&
vi_¥ec_num
, 
CMT_VI_PREC_NUM
,

451 
NULL
},

452 {"m¨k_Æl_∑ges", 
P_INT
, 
PI_ONOFF
, (*)&
M¨kAŒPages
,

453 
CMT_MARK_ALL_PAGES
, 
NULL
},

454 {"wøp_£¨ch", 
P_INT
, 
PI_ONOFF
, (*)&
WøpDeÁu…
, 
CMT_WRAP
, 
NULL
},

455 {"ign‹eˇ£_£¨ch", 
P_INT
, 
PI_ONOFF
, (*)&
Ign‹eCa£
,

456 
CMT_IGNORE_CASE
, 
NULL
},

457 #ifde‡
USE_MIGEMO


458 {"u£_migemo", 
P_INT
, 
PI_ONOFF
, (*)&
u£_migemo
, 
CMT_USE_MIGEMO
,

459 
NULL
},

460 {"migemo_comm™d", 
P_STRING
, 
PI_TEXT
, (*)&
migemo_comm™d
,

461 
CMT_MIGEMO_COMMAND
, 
NULL
},

463 #ifde‡
USE_MOUSE


464 {"u£_mou£", 
P_INT
, 
PI_ONOFF
, (*)&
u£_mou£
, 
CMT_MOUSE
, 
NULL
},

465 {"ªvî£_mou£", 
P_INT
, 
PI_ONOFF
, (*)&
ªvî£_mou£
,

466 
CMT_REVERSE_MOUSE
, 
NULL
},

467 {"ªœtive_whìl_s¸ﬁl", 
P_INT
, 
PI_SEL_C
, (*)&
ªœtive_whìl_s¸ﬁl
,

468 
CMT_RELATIVE_WHEEL_SCROLL
, (*)
whìlmode
},

469 {"ªœtive_whìl_s¸ﬁl_øtio", 
P_INT
, 
PI_TEXT
,

470 (*)&
ªœtive_whìl_s¸ﬁl_øtio
,

471 
CMT_RELATIVE_WHEEL_SCROLL_RATIO
, 
NULL
},

472 {"fixed_whìl_s¸ﬁl_cou¡", 
P_INT
, 
PI_TEXT
,

473 (*)&
fixed_whìl_s¸ﬁl_cou¡
,

474 
CMT_FIXED_WHEEL_SCROLL_COUNT
, 
NULL
},

476 {"˛ór_buf„r", 
P_INT
, 
PI_ONOFF
, (*)&
˛ór_buf„r
, 
CMT_CLEAR_BUF
,

477 
NULL
},

478 {"decode_˘e", 
P_CHARINT
, 
PI_ONOFF
, (*)&
DecodeCTE
, 
CMT_DECODE_CTE
,

479 
NULL
},

480 {"auto_uncom¥ess", 
P_CHARINT
, 
PI_ONOFF
, (*)&
AutoUncom¥ess
,

481 
CMT_AUTO_UNCOMPRESS
, 
NULL
},

482 {"¥e£rve_time°amp", 
P_CHARINT
, 
PI_ONOFF
, (*)&
Pª£rveTime°amp
,

483 
CMT_PRESERVE_TIMESTAMP
, 
NULL
},

484 {"keym≠_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
keym≠_fûe
, 
CMT_KEYMAP_FILE
,

485 
NULL
},

486 {
NULL
, 0, 0, NULL, NULL, NULL},

489 
∑øm_±r
 
	g∑øms4
[] = {

490 {"u£_¥oxy", 
P_CHARINT
, 
PI_ONOFF
, (*)&
u£_¥oxy
, 
CMT_USE_PROXY
,

491 
NULL
},

492 {"hâp_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
HTTP_¥oxy
, 
CMT_HTTP_PROXY
,

493 
NULL
},

494 #ifde‡
USE_SSL


495 {"hâps_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
HTTPS_¥oxy
, 
CMT_HTTPS_PROXY
,

496 
NULL
},

498 #ifde‡
USE_GOPHER


499 {"g›hî_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
GOPHER_¥oxy
,

500 
CMT_GOPHER_PROXY
, 
NULL
},

502 {"·p_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
FTP_¥oxy
, 
CMT_FTP_PROXY
, 
NULL
},

503 {"no_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
NO_¥oxy
, 
CMT_NO_PROXY
, 
NULL
},

504 {"n›roxy_√èddr", 
P_INT
, 
PI_ONOFF
, (*)&
NO¥oxy_√èddr
,

505 
CMT_NOPROXY_NETADDR
, 
NULL
},

506 {"no_ˇche", 
P_CHARINT
, 
PI_ONOFF
, (*)&
NoCache
, 
CMT_NO_CACHE
, 
NULL
},

508 {
NULL
, 0, 0, NULL, NULL, NULL},

511 
∑øm_±r
 
	g∑øms5
[] = {

512 {"documít_roŸ", 
P_STRING
, 
PI_TEXT
, (*)&
documít_roŸ
, 
CMT_DROOT
,

513 
NULL
},

514 {"≥rs⁄Æ_documít_roŸ", 
P_STRING
, 
PI_TEXT
,

515 (*)&
≥rs⁄Æ_documít_roŸ
, 
CMT_PDROOT
, 
NULL
},

516 {"cgi_bö", 
P_STRING
, 
PI_TEXT
, (*)&
cgi_bö
, 
CMT_CGIBIN
, 
NULL
},

517 {"ödex_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
ödex_fûe
, 
CMT_IFILE
, 
NULL
},

518 {
NULL
, 0, 0, NULL, NULL, NULL},

521 
∑øm_±r
 
	g∑øms6
[] = {

522 {"mime_ty≥s", 
P_STRING
, 
PI_TEXT
, (*)&
mimëy≥s_fûes
, 
CMT_MIMETYPES
,

523 
NULL
},

524 {"maûˇp", 
P_STRING
, 
PI_TEXT
, (*)&
maûˇp_fûes
, 
CMT_MAILCAP
, 
NULL
},

525 #ifde‡
USE_EXTERNAL_URI_LOADER


526 {"urimëhodm≠", 
P_STRING
, 
PI_TEXT
, (*)&
urimëhodm≠_fûes
,

527 
CMT_URIMETHODMAP
, 
NULL
},

529 {"edô‹", 
P_STRING
, 
PI_TEXT
, (*)&
Edô‹
, 
CMT_EDITOR
, 
NULL
},

530 {"maûî", 
P_STRING
, 
PI_TEXT
, (*)&
Maûî
, 
CMT_MAILER
, 
NULL
},

531 {"extbrow£r", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r
, 
CMT_EXTBRZ
, 
NULL
},

532 {"extbrow£r2", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r2
, 
CMT_EXTBRZ2
,

533 
NULL
},

534 {"extbrow£r3", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r3
, 
CMT_EXTBRZ3
,

535 
NULL
},

536 {"bgextvõwî", 
P_INT
, 
PI_ONOFF
, (*)&
BackgroundExtVõwî
,

537 
CMT_BGEXTVIEW
, 
NULL
},

538 {"u£_Àss›í", 
P_INT
, 
PI_ONOFF
, (*)&
u£_Àss›í
, 
CMT_USE_LESSOPEN
,

539 
NULL
},

540 {
NULL
, 0, 0, NULL, NULL, NULL},

543 #ifde‡
USE_SSL


544 
∑øm_±r
 
	g∑øms7
[] = {

545 {"s¶_f‹bid_mëhod", 
P_STRING
, 
PI_TEXT
, (*)&
s¶_f‹bid_mëhod
,

546 
CMT_SSL_FORBID_METHOD
, 
NULL
},

547 #ifde‡
USE_SSL_VERIFY


548 {"s¶_vîify_£rvî", 
P_INT
, 
PI_ONOFF
, (*)&
s¶_vîify_£rvî
,

549 
CMT_SSL_VERIFY_SERVER
, 
NULL
},

550 {"s¶_˚π_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_˚π_fûe
,

551 
CMT_SSL_CERT_FILE
, 
NULL
},

552 {"s¶_key_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_key_fûe
,

553 
CMT_SSL_KEY_FILE
, 
NULL
},

554 {"s¶_ˇ_∑th", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_ˇ_∑th
, 
CMT_SSL_CA_PATH
,

555 
NULL
},

556 {"s¶_ˇ_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_ˇ_fûe
, 
CMT_SSL_CA_FILE
,

557 
NULL
},

559 {
NULL
, 0, 0, NULL, NULL, NULL},

563 #ifde‡
USE_COOKIE


564 
∑øm_±r
 
	g∑øms8
[] = {

565 {"u£_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
u£_cookõ
, 
CMT_USECOOKIE
, 
NULL
},

566 {"show_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
show_cookõ
,

567 
CMT_SHOWCOOKIE
, 
NULL
},

568 {"ac˚±_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
ac˚±_cookõ
,

569 
CMT_ACCEPTCOOKIE
, 
NULL
},

570 {"ac˚±_bad_cookõ", 
P_INT
, 
PI_SEL_C
, (*)&
ac˚±_bad_cookõ
,

571 
CMT_ACCEPTBADCOOKIE
, (*)
badcookõ°r
},

572 {"cookõ_ªje˘_domaös", 
P_STRING
, 
PI_TEXT
,

573 (*)&
cookõ_ªje˘_domaös
, 
CMT_COOKIE_REJECT_DOMAINS
, 
NULL
},

574 {"cookõ_ac˚±_domaös", 
P_STRING
, 
PI_TEXT
,

575 (*)&
cookõ_ac˚±_domaös
, 
CMT_COOKIE_ACCEPT_DOMAINS
, 
NULL
},

576 {
NULL
, 0, 0, NULL, NULL, NULL},

580 
∑øm_±r
 
	g∑øms9
[] = {

581 {"∑sswd_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
∑sswd_fûe
, 
CMT_PASSWDFILE
,

582 
NULL
},

583 {"dißbÀ_£¸ë_£curôy_check", 
P_INT
, 
PI_ONOFF
,

584 (*)&
dißbÀ_£¸ë_£curôy_check
, 
CMT_DISABLE_SECRET_SECURITY_CHECK
,

585 
NULL
},

586 {"·µasswd", 
P_STRING
, 
PI_TEXT
, (*)&
·µasswd
, 
CMT_FTPPASS
, 
NULL
},

587 {"·µass_ho°«megí", 
P_INT
, 
PI_ONOFF
, (*)&
·µass_ho°«megí
,

588 
CMT_FTPPASS_HOSTNAMEGEN
, 
NULL
},

589 {"¥e_f‹m_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
¥e_f‹m_fûe
,

590 
CMT_PRE_FORM_FILE
, 
NULL
},

591 {"u£r_agít", 
P_STRING
, 
PI_TEXT
, (*)&
U£rAgít
, 
CMT_USERAGENT
, 
NULL
},

592 {"no_ª„ªr", 
P_INT
, 
PI_ONOFF
, (*)&
NoSídRe„ªr
, 
CMT_NOSENDREFERER
,

593 
NULL
},

594 {"ac˚±_œnguage", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±L™g
, 
CMT_ACCEPTLANG
,

595 
NULL
},

596 {"ac˚±_ícodög", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±Encodög
,

597 
CMT_ACCEPTENCODING
,

598 
NULL
},

599 {"ac˚±_medü", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±Medü
, 
CMT_ACCEPTMEDIA
,

600 
NULL
},

601 {"¨gv_is_uæ", 
P_CHARINT
, 
PI_ONOFF
, (*)&
ArgvIsURL
, 
CMT_ARGV_IS_URL
,

602 
NULL
},

603 {"ªåy_hâp", 
P_INT
, 
PI_ONOFF
, (*)&
ªåyAsHâp
, 
CMT_RETRY_HTTP
,

604 
NULL
},

605 {"deÁu…_uæ", 
P_INT
, 
PI_SEL_C
, (*)&
DeÁu…URLSåög
,

606 
CMT_DEFAULT_URL
, (*)
deÁu…uæs
},

607 {"fﬁlow_ªdúe˘i⁄", 
P_INT
, 
PI_TEXT
, &
FﬁlowRedúe˘i⁄
,

608 
CMT_FOLLOW_REDIRECTION
, 
NULL
},

609 {"mëa_ª‰esh", 
P_CHARINT
, 
PI_ONOFF
, (*)&
MëaRe‰esh
,

610 
CMT_META_REFRESH
, 
NULL
},

611 #ifde‡
INET6


612 {"dns_‹dî", 
P_INT
, 
PI_SEL_C
, (*)&
DNS_‹dî
, 
CMT_DNS_ORDER
,

613 (*)
dns‹dîs
},

615 #ifde‡
USE_NNTP


616 {"¬ç£rvî", 
P_STRING
, 
PI_TEXT
, (*)&
NNTP_£rvî
, 
CMT_NNTP_SERVER
,

617 
NULL
},

618 {"¬çmode", 
P_STRING
, 
PI_TEXT
, (*)&
NNTP_mode
, 
CMT_NNTP_MODE
, 
NULL
},

619 {"max_√ws", 
P_INT
, 
PI_TEXT
, (*)&
MaxNewsMesßge
, 
CMT_MAX_NEWS
, 
NULL
},

621 {
NULL
, 0, 0, NULL, NULL, NULL},

624 #ifde‡
USE_M17N


625 
∑øm_±r
 
	g∑øms10
[] = {

626 {"di•œy_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
Di•œyCh¨£t
,

627 
CMT_DISPLAY_CHARSET
, (*)&
di•œy_ch¨£t_°r
},

628 {"documít_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
DocumítCh¨£t
,

629 
CMT_DOCUMENT_CHARSET
, (*)&
documít_ch¨£t_°r
},

630 {"auto_dëe˘", 
P_CHARINT
, 
PI_SEL_C
, (*)&
WcO±i⁄
.
auto_dëe˘
,

631 
CMT_AUTO_DETECT
, (*)
auto_dëe˘_°r
},

632 {"sy°em_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
Sy°emCh¨£t
,

633 
CMT_SYSTEM_CHARSET
, (*)&
sy°em_ch¨£t_°r
},

634 {"fﬁlow_loˇÀ", 
P_CHARINT
, 
PI_ONOFF
, (*)&
FﬁlowLoˇÀ
,

635 
CMT_FOLLOW_LOCALE
, 
NULL
},

636 {"ext_hÆfdump", 
P_CHARINT
, 
PI_ONOFF
, (*)&
ExtHÆfdump
,

637 
CMT_EXT_HALFDUMP
, 
NULL
},

638 {"u£_wide", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_wide
, 
CMT_USE_WIDE
,

639 
NULL
},

640 {"u£_comböög", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_comböög
,

641 
CMT_USE_COMBINING
, 
NULL
},

642 #ifde‡
USE_UNICODE


643 {"u£_œnguage_èg", 
P_CHARINT
, 
PI_ONOFF
,

644 (*)&
WcO±i⁄
.
u£_œnguage_èg
, 
CMT_USE_LANGUAGE_TAG
, 
NULL
},

645 {"ucs_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
ucs_c⁄v
, 
CMT_UCS_CONV
,

646 
NULL
},

648 {"¥e_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
¥e_c⁄v
, 
CMT_PRE_CONV
,

649 
NULL
},

650 {"£¨ch_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
SórchC⁄v
, 
CMT_SEARCH_CONV
,

651 
NULL
},

652 {"fix_width_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
fix_width_c⁄v
,

653 
CMT_FIX_WIDTH_CONV
, 
NULL
},

654 #ifde‡
USE_UNICODE


655 {"u£_gb12345_m≠", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_gb12345_m≠
,

656 
CMT_USE_GB12345_MAP
, 
NULL
},

658 {"u£_jisx0201", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0201
,

659 
CMT_USE_JISX0201
, 
NULL
},

660 {"u£_jisc6226", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisc6226
,

661 
CMT_USE_JISC6226
, 
NULL
},

662 {"u£_jisx0201k", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0201k
,

663 
CMT_USE_JISX0201K
, 
NULL
},

664 {"u£_jisx0212", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0212
,

665 
CMT_USE_JISX0212
, 
NULL
},

666 {"u£_jisx0213", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0213
,

667 
CMT_USE_JISX0213
, 
NULL
},

668 {"°ri˘_iso2022", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
°ri˘_iso2022
,

669 
CMT_STRICT_ISO2022
, 
NULL
},

670 #ifde‡
USE_UNICODE


671 {"gb18030_as_ucs", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
gb18030_as_ucs
,

672 
CMT_GB18030_AS_UCS
, 
NULL
},

674 {
NULL
, 0, 0, NULL, NULL, NULL},

678 
∑øm_£˘i⁄
 
	g£˘i⁄s
[] = {

679 {
N_
("Di•œy Sëtögs"), 
∑øms1
},

680 #ifde‡
USE_COLOR


681 {
N_
("Cﬁ‹ Sëtögs"), 
∑øms2
},

683 {
N_
("Mis˚Œ™eou†Sëtögs"), 
∑øms3
},

684 {
N_
("Dúe˘‹y Sëtögs"), 
∑øms5
},

685 {
N_
("Exã∫Æ Progøm Sëtögs"), 
∑øms6
},

686 {
N_
("Nëw‹k Sëtögs"), 
∑øms9
},

687 {
N_
("Proxy Sëtögs"), 
∑øms4
},

688 #ifde‡
USE_SSL


689 {
N_
("SSL Sëtögs"), 
∑øms7
},

691 #ifde‡
USE_COOKIE


692 {
N_
("Cookõ Sëtögs"), 
∑øms8
},

694 #ifde‡
USE_M17N


695 {
N_
("Ch¨£àSëtögs"), 
∑øms10
},

697 {
NULL
, NULL}

700 
Så
 
to_°r
(
∑øm_±r
 *
p
);

703 
	$com∑ª_èbÀ
(
rc_£¨ch_èbÀ
 *
a
, rc_£¨ch_èbÀ *
b
)

705  
	`°rcmp
(
a
->
∑øm
->
«me
, 
b
->param->name);

706 
	}
}

709 
	$¸óã_›ti⁄_£¨ch_èbÀ
()

711 
i
, 
j
, 
k
;

712 
diff1
, 
diff2
;

713 *
p
, *
q
;

716 
RC_èbÀ_size
 = 0;

717 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

718 
i
 = 0;

719 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

720 
i
++;

721 
RC_èbÀ_size
++;

725 
RC_£¨ch_èbÀ
 = 
	`New_N
(
rc_£¨ch_èbÀ
, 
RC_èbÀ_size
);

726 
k
 = 0;

727 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

728 
i
 = 0;

729 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

730 
RC_£¨ch_èbÀ
[
k
].
∑øm
 = &
£˘i⁄s
[
j
].
∑øms
[
i
];

731 
k
++;

732 
i
++;

736 
	`qs‹t
(
RC_£¨ch_èbÀ
, 
RC_èbÀ_size
, (
rc_£¨ch_èbÀ
),

737 ((*)(c⁄° *, c⁄° *))
com∑ª_èbÀ
);

739 
diff1
 = 
diff2
 = 0;

740 
i
 = 0; i < 
RC_èbÀ_size
 - 1; i++) {

741 
p
 = 
RC_£¨ch_èbÀ
[
i
].
∑øm
->
«me
;

742 
q
 = 
RC_£¨ch_èbÀ
[
i
 + 1].
∑øm
->
«me
;

743 
j
 = 0; 
p
[j] !'\0' && 
q
[j] != '\0' &&Ö[j] == q[j]; j++) ;

744 
diff1
 = 
j
;

745 i‡(
diff1
 > 
diff2
)

746 
RC_£¨ch_èbÀ
[
i
].
uniq_pos
 = 
diff1
 + 1;

748 
RC_£¨ch_èbÀ
[
i
].
uniq_pos
 = 
diff2
 + 1;

749 
diff2
 = 
diff1
;

751 
	}
}

753 
∑øm_±r
 *

754 
	$£¨ch_∑øm
(*
«me
)

756 
size_t
 
b
, 
e
, 
i
;

757 
cmp
;

758 
Àn
 = 
	`°æí
(
«me
);

760 
b
 = 0, 
e
 = 
RC_èbÀ_size
 - 1; b <=É;) {

761 
i
 = (
b
 + 
e
) / 2;

762 
cmp
 = 
	`°∫cmp
(
«me
, 
RC_£¨ch_èbÀ
[
i
].
∑øm
->«me, 
Àn
);

764 i‡(!
cmp
) {

765 i‡(
Àn
 >
RC_£¨ch_èbÀ
[
i
].
uniq_pos
) {

766  
RC_£¨ch_èbÀ
[
i
].
∑øm
;

769 (
cmp
 =

770 
	`°rcmp
(
«me
, 
RC_£¨ch_èbÀ
[
i
].
∑øm
->name)) <= 0)

771 i‡(!
cmp
)

772  
RC_£¨ch_èbÀ
[
i
].
∑øm
;

773 i‡(
i
 == 0)

774  
NULL
;

776 
i
--;

778  
NULL
;

781 i‡(
cmp
 < 0) {

782 i‡(
i
 == 0)

783  
NULL
;

784 
e
 = 
i
 - 1;

787 
b
 = 
i
 + 1;

789  
NULL
;

790 
	}
}

794 
	$show_∑øms
(
FILE
 * 
Â
)

796 
i
, 
j
, 
l
;

797 *
t
 = 
NULL
;

798 *
cmt
;

800 #ifde‡
USE_M17N


801 #ifde‡
ENABLE_NLS


802 
O±i⁄Ch¨£t
 = 
Sy°emCh¨£t
;

806 
	`Âuts
("\nc⁄figuøti⁄Ö¨amëîs\n", 
Â
);

807 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

808 #ifde‡
USE_M17N


809 i‡(!
O±i⁄Encode
)

810 
cmt
 =

811 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
j
].
«me
), 
O±i⁄Ch¨£t
,

812 
I¬îCh¨£t
)->
±r
;

815 
cmt
 = 
£˘i⁄s
[
j
].
«me
;

816 
	`Ârötf
(
Â
, " se˘i⁄[%d]: %s\n", 
j
, 
	`c⁄v_to_sy°em
(
cmt
));

817 
i
 = 0;

818 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

819 
£˘i⁄s
[
j
].
∑øms
[
i
].
ty≥
) {

820 
P_INT
:

821 
P_SHORT
:

822 
P_CHARINT
:

823 
P_NZINT
:

824 
t
 = (
£˘i⁄s
[
j
].
∑øms
[
i
].
öpuây≥
 ==

825 
PI_ONOFF
) ? "bool" : "number";

827 
P_CHAR
:

828 
t
 = "char";

830 
P_STRING
:

831 
t
 = "string";

833 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

834 
P_SSLPATH
:

835 
t
 = "path";

838 #ifde‡
USE_COLOR


839 
P_COLOR
:

840 
t
 = "color";

843 #ifde‡
USE_M17N


844 
P_CODE
:

845 
t
 = "charset";

848 
P_PIXELS
:

849 
t
 = "number";

851 
P_SCALE
:

852 
t
 = "percent";

855 #ifde‡
USE_M17N


856 i‡(!
O±i⁄Encode
)

857 
cmt
 = 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
j
].
∑øms
[
i
].
commít
),

858 
O±i⁄Ch¨£t
, 
I¬îCh¨£t
)->
±r
;

861 
cmt
 = 
£˘i⁄s
[
j
].
∑øms
[
i
].
commít
;

862 
l
 = 30 - (
	`°æí
(
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
Ë+ såÀn(
t
));

863 i‡(
l
 < 0)

864 
l
 = 1;

865 
	`Ârötf
(
Â
, " -o %s=<%s>%*s%s\n",

866 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
, 
t
, 
l
, " ",

867 
	`c⁄v_to_sy°em
(
cmt
));

868 
i
++;

871 
	}
}

874 
	$°r_to_boﬁ
(*
vÆue
, 
ﬁd
)

876 i‡(
vÆue
 =
NULL
)

878 
	`TOLOWER
(*
vÆue
)) {

885 i‡(
	`TOLOWER
(
vÆue
[1]) == 'f')

889 i‡(
	`TOLOWER
(
vÆue
[1]) == 'o')

890  !
ﬁd
;

895  !
ﬁd
;

898 
	}
}

900 #ifde‡
USE_COLOR


902 
	$°r_to_cﬁ‹
(*
vÆue
)

904 i‡(
vÆue
 =
NULL
)

906 
	`TOLOWER
(*
vÆue
)) {

933 i‡(!
	`°∫ˇ£cmp
(
vÆue
, "blu", 3))

939 
	}
}

943 
	$£t_∑øm
(*
«me
, *
vÆue
)

945 
∑øm_±r
 *
p
;

946 
µc
;

948 i‡(
vÆue
 =
NULL
)

950 
p
 = 
	`£¨ch_∑øm
(
«me
);

951 i‡(
p
 =
NULL
)

953 
p
->
ty≥
) {

954 
P_INT
:

955 i‡(
	`©oi
(
vÆue
) >= 0)

956 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

957 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

959 
P_NZINT
:

960 i‡(
	`©oi
(
vÆue
) > 0)

961 *(*)
p
->
v¨±r
 = 
	`©oi
(
vÆue
);

963 
P_SHORT
:

964 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

965 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

967 
P_CHARINT
:

968 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

969 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

971 
P_CHAR
:

972 *(*)
p
->
v¨±r
 = 
vÆue
[0];

974 
P_STRING
:

975 *(**)
p
->
v¨±r
 = 
vÆue
;

977 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

978 
P_SSLPATH
:

979 i‡(
vÆue
 !
NULL
 && value[0] != '\0')

980 *(**)
p
->
v¨±r
 = 
	`rcFûe
(
vÆue
);

982 *(**)
p
->
v¨±r
 = 
NULL
;

983 
s¶_∑th_modifõd
 = 1;

986 #ifde‡
USE_COLOR


987 
P_COLOR
:

988 *(*)
p
->
v¨±r
 = 
	`°r_to_cﬁ‹
(
vÆue
);

991 #ifde‡
USE_M17N


992 
P_CODE
:

993 *(
wc_˚s
 *Ë
p
->
v¨±r
 =

994 
	`wc_guess_ch¨£t_sh‹t
(
vÆue
, *(
wc_˚s
 *Ë
p
->
v¨±r
);

997 
P_PIXELS
:

998 
µc
 = 
	`©of
(
vÆue
);

999 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&Öp¯<
MAXIMUM_PIXEL_PER_CHAR
 * 2)

1000 *(*)
p
->
v¨±r
 = 
µc
;

1002 
P_SCALE
:

1003 
µc
 = 
	`©of
(
vÆue
);

1004 i‡(
µc
 >= 10 &&Öpc <= 1000)

1005 *(*)
p
->
v¨±r
 = 
µc
;

1009 
	}
}

1012 
	$£t_∑øm_›ti⁄
(*
›ti⁄
)

1014 
Så
 
tmp
 = 
	`Så√w
();

1015 *
p
 = 
›ti⁄
, *
q
;

1017 *
p
 && !
	`IS_SPACE
(*p) && *p != '=')

1018 
	`Såˇt_ch¨
(
tmp
, *
p
++);

1019 *
p
 && 
	`IS_SPACE
(*p))

1020 
p
++;

1021 i‡(*
p
 == '=') {

1022 
p
++;

1023 *
p
 && 
	`IS_SPACE
(*p))

1024 
p
++;

1026 
	`Sålowî
(
tmp
);

1027 i‡(
	`£t_∑øm
(
tmp
->
±r
, 
p
))

1028 
›ti⁄_assig√d
;

1029 
q
 = 
tmp
->
±r
;

1030 i‡(!
	`°∫cmp
(
q
, "no", 2)) {

1031 
q
 += 2;

1032 i‡(*
q
 == '-' || *q == '_')

1033 
q
++;

1035 i‡(
tmp
->
±r
[0] == '-')

1036 
q
++;

1039 i‡(
	`£t_∑øm
(
q
, "0"))

1040 
›ti⁄_assig√d
;

1042 
›ti⁄_assig√d
:

1044 
	}
}

1047 
	$gë_∑øm_›ti⁄
(*
«me
)

1049 
∑øm_±r
 *
p
;

1051 
p
 = 
	`£¨ch_∑øm
(
«me
);

1052  
p
 ? 
	`to_°r
’)->
±r
 : 
NULL
;

1053 
	}
}

1056 
	$öãΩªt_rc
(
FILE
 * 
f
)

1058 
Så
 
löe
;

1059 
Så
 
tmp
;

1060 *
p
;

1063 
löe
 = 
	`Såfgës
(
f
);

1064 
	`Såch›
(
löe
);

1065 i‡(
löe
->
Àngth
 == 0)

1067 
	`Såªmovefú°•a˚s
(
löe
);

1068 i‡(
löe
->
±r
[0] == '#')

1070 
tmp
 = 
	`Så√w
();

1071 
p
 = 
löe
->
±r
;

1072 *
p
 && !
	`IS_SPACE
(*p))

1073 
	`Såˇt_ch¨
(
tmp
, *
p
++);

1074 *
p
 && 
	`IS_SPACE
(*p))

1075 
p
++;

1076 
	`Sålowî
(
tmp
);

1077 
	`£t_∑øm
(
tmp
->
±r
, 
p
);

1079 
	}
}

1082 
	$∑r£_¥oxy
()

1084 i‡(
	`n⁄_nuŒ
(
HTTP_¥oxy
))

1085 
	`∑r£URL
(
HTTP_¥oxy
, &
HTTP_¥oxy_∑r£d
, 
NULL
);

1086 #ifde‡
USE_SSL


1087 i‡(
	`n⁄_nuŒ
(
HTTPS_¥oxy
))

1088 
	`∑r£URL
(
HTTPS_¥oxy
, &
HTTPS_¥oxy_∑r£d
, 
NULL
);

1090 #ifde‡
USE_GOPHER


1091 i‡(
	`n⁄_nuŒ
(
GOPHER_¥oxy
))

1092 
	`∑r£URL
(
GOPHER_¥oxy
, &
GOPHER_¥oxy_∑r£d
, 
NULL
);

1094 i‡(
	`n⁄_nuŒ
(
FTP_¥oxy
))

1095 
	`∑r£URL
(
FTP_¥oxy
, &
FTP_¥oxy_∑r£d
, 
NULL
);

1096 i‡(
	`n⁄_nuŒ
(
NO_¥oxy
))

1097 
	`£t_no_¥oxy
(
NO_¥oxy
);

1098 
	}
}

1100 #ifde‡
USE_COOKIE


1102 
	$∑r£_cookõ
()

1104 i‡(
	`n⁄_nuŒ
(
cookõ_ªje˘_domaös
))

1105 
Cookõ_ªje˘_domaös
 = 
	`make_domaö_li°
(
cookõ_ªje˘_domaös
);

1106 i‡(
	`n⁄_nuŒ
(
cookõ_ac˚±_domaös
))

1107 
Cookõ_ac˚±_domaös
 = 
	`make_domaö_li°
(
cookõ_ac˚±_domaös
);

1108 
	}
}

1111 #ifde‡
__EMX__


1113 
	$do_mkdú
(c⁄° *
dú
, 
mode
)

1115 *
r
, 
abs
[
_MAX_PATH
];

1116 
size_t
 
n
;

1118 
	`_ab•©h
(
abs
, 
rc_dú
, 
_MAX_PATH
);

1120 i‡(!(
n
 = 
	`°æí
(
abs
)))

1123 i‡(*(
r
 = 
abs
 + 
n
 - 1) == '/')

1124 *
r
 = 0;

1126  
	`mkdú
(
abs
, 
mode
);

1127 
	}
}

1129 #ifde‡
__MINGW32_VERSION


1130 
	#do_mkdú
(
dú
,
mode
Ë
	`mkdú
(dú)

	)

1132 
	#do_mkdú
(
dú
,
mode
Ë
	`mkdú
(dú,mode)

	)

1137 
	$sync_wôh_›ti⁄
()

1139 i‡(
PagîMax
 < 
LINES
)

1140 
PagîMax
 = 
LINES
;

1141 
WøpSórch
 = 
WøpDeÁu…
;

1142 
	`∑r£_¥oxy
();

1143 #ifde‡
USE_COOKIE


1144 
	`∑r£_cookõ
();

1146 
	`öôMaûˇp
();

1147 
	`öôMimeTy≥s
();

1148 #ifde‡
USE_EXTERNAL_URI_LOADER


1149 
	`öôURIMëhods
();

1151 #ifde‡
USE_MIGEMO


1152 
	`öô_migemo
();

1154 #ifde‡
USE_IMAGE


1155 i‡(
fmInôülized
 && 
di•œyImage
)

1156 
	`öôImage
();

1158 
di•œyImage
 = 
FALSE
;

1160 
	`lﬂdPasswd
();

1161 
	`lﬂdPªF‹m
();

1163 i‡(
Ac˚±L™g
 =
NULL
 || *AcceptLang == '\0') {

1169 
Ac˚±L™g
 = 
	`_
("en;q=1.0");

1171 i‡(
Ac˚±Encodög
 =
NULL
 || *AcceptEncoding == '\0')

1172 
Ac˚±Encodög
 = 
	`ac˚±abÀEncodög
();

1173 i‡(
Ac˚±Medü
 =
NULL
 || *AcceptMedia == '\0')

1174 
Ac˚±Medü
 = 
	`ac˚±abÀMimeTy≥s
();

1175 i‡(
fmInôülized
) {

1176 
	`öôKeym≠
(
FALSE
);

1177 #ifde‡
USE_MOUSE


1178 
	`öôMou£A˘i⁄
();

1180 #ifde‡
USE_MENU


1181 
	`öôMíu
();

1184 
	}
}

1187 
	$öô_rc
()

1189 
i
;

1190 
°©
 
°
;

1191 
FILE
 *
f
;

1193 i‡(
rc_dú
 !
NULL
)

1194 
›í_rc
;

1196 
rc_dú
 = 
	`ex∑ndP©h
(
RC_DIR
);

1197 
i
 = 
	`°æí
(
rc_dú
);

1198 i‡(
i
 > 1 && 
rc_dú
[i - 1] == '/')

1199 
rc_dú
[
i
 - 1] = '\0';

1201 #ifde‡
USE_M17N


1202 
di•œy_ch¨£t_°r
 = 
	`wc_gë_˚s_li°
();

1203 
documít_ch¨£t_°r
 = 
di•œy_ch¨£t_°r
;

1204 
sy°em_ch¨£t_°r
 = 
di•œy_ch¨£t_°r
;

1207 i‡(
	`°©
(
rc_dú
, &
°
) < 0) {

1208 i‡(
î∫o
 =
ENOENT
) {

1209 i‡(
	`do_mkdú
(
rc_dú
, 0700) < 0) {

1210 
	`Ârötf
(
°dîr
, "C™'à¸óã c⁄fig dúe˘‹y (%s)!", 
rc_dú
);

1211 
rc_dú_îr
;

1214 
	`°©
(
rc_dú
, &
°
);

1218 
	`Ârötf
(
°dîr
, "C™'à›í c⁄fig dúe˘‹y (%s)!", 
rc_dú
);

1219 
rc_dú_îr
;

1222 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

1224 
	`Ârötf
(
°dîr
, "%†i†nŸá dúe˘‹y!", 
rc_dú
);

1225 
rc_dú_îr
;

1227 i‡(!(
°
.
°_mode
 & 
S_IWUSR
)) {

1228 
	`Ârötf
(
°dîr
, "%†i†nŸ wrôabÀ!", 
rc_dú
);

1229 
rc_dú_îr
;

1231 
no_rc_dú
 = 
FALSE
;

1232 
tmp_dú
 = 
rc_dú
;

1234 i‡(
c⁄fig_fûe
 =
NULL
)

1235 
c⁄fig_fûe
 = 
	`rcFûe
(
CONFIG_FILE
);

1237 
	`¸óã_›ti⁄_£¨ch_èbÀ
();

1239 
›í_rc
:

1241 i‡((
f
 = 
	`f›í
(
	`ëcFûe
(
W3MCONFIG
), "π")Ë!
NULL
) {

1242 
	`öãΩªt_rc
(
f
);

1243 
	`f˛o£
(
f
);

1245 i‡((
f
 = 
	`f›í
(
	`c⁄fFûe
(
CONFIG_FILE
), "π")Ë!
NULL
) {

1246 
	`öãΩªt_rc
(
f
);

1247 
	`f˛o£
(
f
);

1249 i‡((
f
 = 
	`f›í
(
c⁄fig_fûe
, "π")Ë!
NULL
) {

1250 
	`öãΩªt_rc
(
f
);

1251 
	`f˛o£
(
f
);

1255 
rc_dú_îr
:

1256 
no_rc_dú
 = 
TRUE
;

1257 i‡(((
tmp_dú
 = 
	`gëív
("TMPDIR")Ë=
NULL
 || *tmp_dir == '\0') &&

1258 ((
tmp_dú
 = 
	`gëív
("TMP")Ë=
NULL
 || *tmp_dir == '\0') &&

1259 ((
tmp_dú
 = 
	`gëív
("TEMP")Ë=
NULL
 || *tmp_dir == '\0'))

1260 
tmp_dú
 = "/tmp";

1261 
	}
}

1264 
	g›ti⁄∑√l_§c1
[] =

1265 "<html><hód><tôÀ>O±i⁄ Sëtög P™ñ</tôÀ></hód><body>\
<h1álign=˚¡î>O±i⁄ Sëtög P™ñ<br>(w3m vîsi⁄ %s)</b></h1>\
<f‹m mëhodıo°á˘i⁄=\"fûe:///$LIB/" 
W3MHELPERPANEL_CMDNAME
 "\">\
<inputÅype=hiddenÇame=mode value=panel>\
<inputÅype=hiddenÇame=cookie value=\"%s\">\
<inputÅype=submit value=\"%s\">\
</form><br>\
<form method=internaláction=option>";

1274 
Så
 
	g›ti⁄∑√l_°r
 = 
NULL
;

1276 
Så


1277 
	$to_°r
(
∑øm_±r
 *
p
)

1279 
p
->
ty≥
) {

1280 
P_INT
:

1281 #ifde‡
USE_COLOR


1282 
P_COLOR
:

1284 #ifde‡
USE_M17N


1285 
P_CODE
:

1286  
	`S¥ötf
("%d", ()(*(
wc_˚s
 *Ë
p
->
v¨±r
));

1288 
P_NZINT
:

1289  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1290 
P_SHORT
:

1291  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1292 
P_CHARINT
:

1293  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1294 
P_CHAR
:

1295  
	`S¥ötf
("%c", *(*)
p
->
v¨±r
);

1296 
P_STRING
:

1297 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

1298 
P_SSLPATH
:

1301  
	`Så√w_ch¨p
(
	`c⁄v_‰om_sy°em
(*(**)
p
->
v¨±r
));

1302 
P_PIXELS
:

1303 
P_SCALE
:

1304  
	`S¥ötf
("%g", *(*)
p
->
v¨±r
);

1307  
NULL
;

1308 
	}
}

1310 
Buf„r
 *

1311 
	$lﬂd_›ti⁄_∑√l
()

1313 
Så
 
§c
;

1314 
∑øm_±r
 *
p
;

1315 
£l_c
 *
s
;

1316 #ifde‡
USE_M17N


1317 
wc_˚s_li°
 *
c
;

1319 
x
, 
i
;

1320 
Så
 
tmp
;

1321 
Buf„r
 *
buf
;

1323 i‡(
›ti⁄∑√l_°r
 =
NULL
)

1324 
›ti⁄∑√l_°r
 = 
	`S¥ötf
(
›ti⁄∑√l_§c1
, 
w3m_vîsi⁄
,

1325 
	`html_quŸe
(
	`loˇlCookõ
()->
±r
), 
	`_
(
CMT_HELPER
));

1326 #ifde‡
USE_M17N


1327 #ifde‡
ENABLE_NLS


1328 
O±i⁄Ch¨£t
 = 
Sy°emCh¨£t
;

1330 i‡(!
O±i⁄Encode
) {

1331 
›ti⁄∑√l_°r
 =

1332 
	`wc_Så_c⁄v
(
›ti⁄∑√l_°r
, 
O±i⁄Ch¨£t
, 
I¬îCh¨£t
);

1333 
i
 = 0; 
£˘i⁄s
[i].
«me
 !
NULL
; i++) {

1334 
£˘i⁄s
[
i
].
«me
 =

1335 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
i
].
«me
), 
O±i⁄Ch¨£t
,

1336 
I¬îCh¨£t
)->
±r
;

1337 
p
 = 
£˘i⁄s
[
i
].
∑øms
;Ö->
«me
;Ö++) {

1338 
p
->
commít
 =

1339 
	`wc_c⁄v
(
	`_
(
p
->
commít
), 
O±i⁄Ch¨£t
,

1340 
I¬îCh¨£t
)->
±r
;

1341 i‡(
p
->
öpuây≥
 =
PI_SEL_C


1342 #ifde‡
USE_COLOR


1343 && 
p
->
£À˘
 !
cﬁ‹°r


1346 
s
 = (
£l_c
 *)
p
->
£À˘
; s->
ãxt
 !
NULL
; s++) {

1347 
s
->
ãxt
 =

1348 
	`wc_c⁄v
(
	`_
(
s
->
ãxt
), 
O±i⁄Ch¨£t
,

1349 
I¬îCh¨£t
)->
±r
;

1354 #ifde‡
USE_COLOR


1355 
s
 = 
cﬁ‹°r
; s->
ãxt
; s++)

1356 
s
->
ãxt
 = 
	`wc_c⁄v
(
	`_
(s->ãxt), 
O±i⁄Ch¨£t
,

1357 
I¬îCh¨£t
)->
±r
;

1359 
O±i⁄Encode
 = 
TRUE
;

1362 
§c
 = 
	`Sådup
(
›ti⁄∑√l_°r
);

1364 
	`Såˇt_ch¨p
(
§c
, "<table><tr><td>");

1365 
i
 = 0; 
£˘i⁄s
[i].
«me
 !
NULL
; i++) {

1366 
	`Såˇt_m_ch¨p
(
§c
, "<h1>", 
£˘i⁄s
[
i
].
«me
, "</h1>", 
NULL
);

1367 
p
 = 
£˘i⁄s
[
i
].
∑øms
;

1368 
	`Såˇt_ch¨p
(
§c
, "<table width=100% cellpadding=0>");

1369 
p
->
«me
) {

1370 
	`Såˇt_m_ch¨p
(
§c
, "<å><td>", 
p
->
commít
, 
NULL
);

1371 
	`Såˇt
(
§c
, 
	`S¥ötf
("</td><td width=%d>",

1372 ()(28 * 
pixñ_≥r_ch¨
)));

1373 
p
->
öpuây≥
) {

1374 
PI_TEXT
:

1375 
	`Såˇt_m_ch¨p
(
§c
, "<inputÅype=textÇame=",

1376 
p
->
«me
,

1378 
	`html_quŸe
(
	`to_°r
(
p
)->
±r
), "\">", 
NULL
);

1380 
PI_ONOFF
:

1381 
x
 = 
	`©oi
(
	`to_°r
(
p
)->
±r
);

1382 
	`Såˇt_m_ch¨p
(
§c
, "<inputÅype=radioÇame=",

1383 
p
->
«me
,

1385 (
x
 ? " checked" : ""),

1387 
p
->
«me
,

1388 " vÆue=0", (
x
 ? "" : " checked"), ">NO", 
NULL
);

1390 
PI_SEL_C
:

1391 
tmp
 = 
	`to_°r
(
p
);

1392 
	`Såˇt_m_ch¨p
(
§c
, "<£À˘Çame=", 
p
->
«me
, ">", 
NULL
);

1393 
s
 = (
£l_c
 *)
p
->
£À˘
; s->
ãxt
 !
NULL
; s++) {

1394 
	`Såˇt_ch¨p
(
§c
, "<option value=");

1395 
	`Såˇt
(
§c
, 
	`S¥ötf
("%s\n", 
s
->
cvÆue
));

1396 i‡((
p
->
ty≥
 !
P_CHAR
 && 
s
->
vÆue
 =
	`©oi
(
tmp
->
±r
)) ||

1397 (
p
->
ty≥
 =
P_CHAR
 && ()
s
->
vÆue
 =*(
tmp
->
±r
)))

1398 
	`Såˇt_ch¨p
(
§c
, " selected");

1399 
	`Såˇt_ch¨
(
§c
, '>');

1400 
	`Såˇt_ch¨p
(
§c
, 
s
->
ãxt
);

1402 
	`Såˇt_ch¨p
(
§c
, "</select>");

1404 #ifde‡
USE_M17N


1405 
PI_CODE
:

1406 
tmp
 = 
	`to_°r
(
p
);

1407 
	`Såˇt_m_ch¨p
(
§c
, "<£À˘Çame=", 
p
->
«me
, ">", 
NULL
);

1408 
c
 = *(
wc_˚s_li°
 **Ë
p
->
£À˘
; c->
desc
 !
NULL
; c++) {

1409 
	`Såˇt_ch¨p
(
§c
, "<option value=");

1410 
	`Såˇt
(
§c
, 
	`S¥ötf
("%s\n", 
c
->
«me
));

1411 i‡(
c
->
id
 =
	`©oi
(
tmp
->
±r
))

1412 
	`Såˇt_ch¨p
(
§c
, " selected");

1413 
	`Såˇt_ch¨
(
§c
, '>');

1414 
	`Såˇt_ch¨p
(
§c
, 
c
->
desc
);

1416 
	`Såˇt_ch¨p
(
§c
, "</select>");

1420 
	`Såˇt_ch¨p
(
§c
, "</td></tr>\n");

1421 
p
++;

1423 
	`Såˇt_ch¨p
(
§c
,

1425 
	`Såˇt_ch¨p
(
§c
, "</table><hr width=50%>");

1427 
	`Såˇt_ch¨p
(
§c
, "</table></form></body></html>");

1428 
buf
 = 
	`lﬂdHTMLSåög
(
§c
);

1429 #ifde‡
USE_M17N


1430 i‡(
buf
)

1431 
buf
->
documít_ch¨£t
 = 
O±i⁄Ch¨£t
;

1433  
buf
;

1434 
	}
}

1437 
	$∑√l_£t_›ti⁄
(
∑r£d_èg¨g
 *
¨g
)

1439 
FILE
 *
f
 = 
NULL
;

1440 *
p
;

1442 i‡(
no_rc_dú
) {

1443 
	`di•_mesßge
("Thîe'†nÿ~/.w3m dúe˘‹y... c⁄figÇŸ saved", 
FALSE
);

1446 
f
 = 
	`f›í
(
c⁄fig_fûe
, "wt");

1447 i‡(
f
 =
NULL
) {

1448 
	`di•_mesßge
("C™'àwrôê›ti⁄!", 
FALSE
);

1451 
¨g
) {

1453 i‡(
¨g
->
vÆue
) {

1454 
p
 = 
	`c⁄v_to_sy°em
(
¨g
->
vÆue
);

1455 i‡(
	`£t_∑øm
(
¨g
->¨g, 
p
)) {

1456 i‡(
f
)

1457 
	`Ârötf
(
f
, "%†%s\n", 
¨g
->¨g, 
p
);

1460 
¨g
 =árg->
√xt
;

1462 i‡(
f
)

1463 
	`f˛o£
(
f
);

1464 
	`sync_wôh_›ti⁄
();

1465 
	`backBf
();

1466 
	}
}

1469 
	$rcFûe
(*
ba£
)

1471 i‡(
ba£
 &&

1472 (
ba£
[0] == '/' ||

1473 (
ba£
[0] == '.'

1474 && (
ba£
[1] == '/' || (base[1] == '.' && base[2] == '/')))

1475 || (
ba£
[0] == '~' && base[1] == '/')))

1477  
	`ex∑ndP©h
(
ba£
);

1478  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
rc_dú
, "/", 
ba£
, 
NULL
)->
±r
);

1479 
	}
}

1482 
	$auxböFûe
(*
ba£
)

1484  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_auxbö_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1485 
	}
}

1489 
	$libFûe
(*
ba£
)

1491  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_lib_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1492 
	}
}

1496 
	$ëcFûe
(*
ba£
)

1498  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_ëc_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1499 
	}
}

1502 
	$c⁄fFûe
(*
ba£
)

1504  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_c⁄f_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1505 
	}
}

1507 #i‚de‡
USE_HELP_CGI


1509 
	$hñpFûe
(*
ba£
)

1511  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_hñp_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1512 
	}
}

	@Str.c

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<gc.h
>

19 
	~<°d¨g.h
>

20 
	~<°rög.h
>

21 #ifde‡
__EMX__


22 
	~<°rögs.h
>

24 
	~"Så.h
"

25 
	~"my˘y≥.h
"

27 
	#INITIAL_STR_SIZE
 32

	)

29 #ifde‡
STR_DEBUG


31 
	#STR_LENGTH_CHECK
(
x
Ëi‡(((x)->
±r
==0&&(x)->
Àngth
!=0)||(
	`°æí
((x)->±r)!=(x)->Àngth))
	`ab‹t
();

	)

33 
	#STR_LENGTH_CHECK
(
x
)

	)

36 
Så


37 
	$Så√w
()

39 
Så
 
x
 = 
	`GC_MALLOC
((
_Så
));

40 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
INITIAL_STR_SIZE
);

41 
x
->
±r
[0] = '\0';

42 
x
->
¨ó_size
 = 
INITIAL_STR_SIZE
;

43 
x
->
Àngth
 = 0;

44  
x
;

45 
	}
}

47 
Så


48 
	$Så√w_size
(
n
)

50 
Så
 
x
 = 
	`GC_MALLOC
((
_Så
));

51 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
n
 + 1);

52 
x
->
±r
[0] = '\0';

53 
x
->
¨ó_size
 = 
n
 + 1;

54 
x
->
Àngth
 = 0;

55  
x
;

56 
	}
}

58 
Så


59 
	$Så√w_ch¨p
(*
p
)

61 
Så
 
x
;

62 
n
;

64 i‡(
p
 =
NULL
)

65  
	`Så√w
();

66 
x
 = 
	`GC_MALLOC
((
_Så
));

67 
n
 = 
	`°æí
(
p
) + 1;

68 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
n
);

69 
x
->
¨ó_size
 = 
n
;

70 
x
->
Àngth
 = 
n
 - 1;

71 
	`bc›y
((*)
p
, (*)
x
->
±r
, 
n
);

72  
x
;

73 
	}
}

75 
Så


76 
	$Så√w_m_ch¨p
(*
p
, ...)

78 
va_li°
 
≠
;

79 
Så
 
r
 = 
	`Så√w
();

81 
	`va_°¨t
(
≠
, 
p
);

82 
p
 !
NULL
) {

83 
	`Såˇt_ch¨p
(
r
, 
p
);

84 
p
 = 
	`va_¨g
(
≠
, *);

86  
r
;

87 
	}
}

89 
Så


90 
	$Så√w_ch¨p_n
(*
p
, 
n
)

92 
Så
 
x
;

94 i‡(
p
 =
NULL
)

95  
	`Så√w_size
(
n
);

96 
x
 = 
	`GC_MALLOC
((
_Så
));

97 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
n
 + 1);

98 
x
->
¨ó_size
 = 
n
 + 1;

99 
x
->
Àngth
 = 
n
;

100 
	`bc›y
((*)
p
, (*)
x
->
±r
, 
n
);

101 
x
->
±r
[
n
] = '\0';

102  
x
;

103 
	}
}

105 
Så


106 
	$Sådup
(
Så
 
s
)

108 
Så
 
n
 = 
	`Så√w_size
(
s
->
Àngth
);

109 
	`STR_LENGTH_CHECK
(
s
);

110 
	`Såc›y
(
n
, 
s
);

111  
n
;

112 
	}
}

115 
	$Så˛ór
(
Så
 
s
)

117 
s
->
Àngth
 = 0;

118 
s
->
±r
[0] = '\0';

119 
	}
}

122 
	$Så‰ì
(
Så
 
x
)

124 
	`GC_‰ì
(
x
->
±r
);

125 
	`GC_‰ì
(
x
);

126 
	}
}

129 
	$Såc›y
(
Så
 
x
, Så 
y
)

131 
	`STR_LENGTH_CHECK
(
x
);

132 
	`STR_LENGTH_CHECK
(
y
);

133 i‡(
x
->
¨ó_size
 < 
y
->
Àngth
 + 1) {

134 
	`GC_‰ì
(
x
->
±r
);

135 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
y
->
Àngth
 + 1);

136 
x
->
¨ó_size
 = 
y
->
Àngth
 + 1;

138 
	`bc›y
((*)
y
->
±r
, (*)
x
->±r, y->
Àngth
 + 1);

139 
x
->
Àngth
 = 
y
->length;

140 
	}
}

143 
	$Såc›y_ch¨p
(
Så
 
x
, *
y
)

145 
Àn
;

147 
	`STR_LENGTH_CHECK
(
x
);

148 i‡(
y
 =
NULL
) {

149 
x
->
Àngth
 = 0;

152 
Àn
 = 
	`°æí
(
y
);

153 i‡(
x
->
¨ó_size
 < 
Àn
 + 1) {

154 
	`GC_‰ì
(
x
->
±r
);

155 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
Àn
 + 1);

156 
x
->
¨ó_size
 = 
Àn
 + 1;

158 
	`bc›y
((*)
y
, (*)
x
->
±r
, 
Àn
 + 1);

159 
x
->
Àngth
 = 
Àn
;

160 
	}
}

163 
	$Såc›y_ch¨p_n
(
Så
 
x
, *
y
, 
n
)

165 
Àn
 = 
n
;

167 
	`STR_LENGTH_CHECK
(
x
);

168 i‡(
y
 =
NULL
) {

169 
x
->
Àngth
 = 0;

172 i‡(
x
->
¨ó_size
 < 
Àn
 + 1) {

173 
	`GC_‰ì
(
x
->
±r
);

174 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
Àn
 + 1);

175 
x
->
¨ó_size
 = 
Àn
 + 1;

177 
	`bc›y
((*)
y
, (*)
x
->
±r
, 
n
);

178 
x
->
±r
[
n
] = '\0';

179 
x
->
Àngth
 = 
n
;

180 
	}
}

183 
	$Såˇt_ch¨p_n
(
Så
 
x
, *
y
, 
n
)

185 
√wÀn
;

187 
	`STR_LENGTH_CHECK
(
x
);

188 i‡(
y
 =
NULL
)

190 
√wÀn
 = 
x
->
Àngth
 + 
n
 + 1;

191 i‡(
x
->
¨ó_size
 < 
√wÀn
) {

192 *
ﬁd
 = 
x
->
±r
;

193 
√wÀn
 =Çewlen * 3 / 2;

194 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
√wÀn
);

195 
x
->
¨ó_size
 = 
√wÀn
;

196 
	`bc›y
((*)
ﬁd
, (*)
x
->
±r
, x->
Àngth
);

197 
	`GC_‰ì
(
ﬁd
);

199 
	`bc›y
((*)
y
, (*)&
x
->
±r
[x->
Àngth
], 
n
);

200 
x
->
Àngth
 +
n
;

201 
x
->
±r
[x->
Àngth
] = '\0';

202 
	}
}

205 
	$Såˇt
(
Så
 
x
, Så 
y
)

207 
	`STR_LENGTH_CHECK
(
y
);

208 
	`Såˇt_ch¨p_n
(
x
, 
y
->
±r
, y->
Àngth
);

209 
	}
}

212 
	$Såˇt_ch¨p
(
Så
 
x
, *
y
)

214 i‡(
y
 =
NULL
)

216 
	`Såˇt_ch¨p_n
(
x
, 
y
, 
	`°æí
(y));

217 
	}
}

220 
	$Såˇt_m_ch¨p
(
Så
 
x
, ...)

222 
va_li°
 
≠
;

223 *
p
;

225 
	`va_°¨t
(
≠
, 
x
);

226 (
p
 = 
	`va_¨g
(
≠
, *)Ë!
NULL
)

227 
	`Såˇt_ch¨p_n
(
x
, 
p
, 
	`°æí
(p));

228 
	}
}

231 
	$Sågrow
(
Så
 
x
)

233 *
ﬁd
 = 
x
->
±r
;

234 
√wÀn
;

235 
√wÀn
 = 
x
->
Àngth
 * 6 / 5;

236 i‡(
√wÀn
 =
x
->
Àngth
)

237 
√wÀn
 += 2;

238 
x
->
±r
 = 
	`GC_MALLOC_ATOMIC
(
√wÀn
);

239 
x
->
¨ó_size
 = 
√wÀn
;

240 
	`bc›y
((*)
ﬁd
, (*)
x
->
±r
, x->
Àngth
);

241 
	`GC_‰ì
(
ﬁd
);

242 
	}
}

244 
Så


245 
	$Såsub°r
(
Så
 
s
, 
beg
, 
Àn
)

247 
Så
 
√w_s
;

248 
i
;

250 
	`STR_LENGTH_CHECK
(
s
);

251 
√w_s
 = 
	`Så√w
();

252 i‡(
beg
 >
s
->
Àngth
)

253  
√w_s
;

254 
i
 = 0; i < 
Àn
 && 
beg
 + i < 
s
->
Àngth
; i++)

255 
	`Såˇt_ch¨
(
√w_s
, 
s
->
±r
[
beg
 + 
i
]);

256  
√w_s
;

257 
	}
}

260 
	$Sålowî
(
Så
 
s
)

262 
i
;

263 
	`STR_LENGTH_CHECK
(
s
);

264 
i
 = 0; i < 
s
->
Àngth
; i++)

265 
s
->
±r
[
i
] = 
	`TOLOWER
(s->ptr[i]);

266 
	}
}

269 
	$Såuµî
(
Så
 
s
)

271 
i
;

272 
	`STR_LENGTH_CHECK
(
s
);

273 
i
 = 0; i < 
s
->
Àngth
; i++)

274 
s
->
±r
[
i
] = 
	`TOUPPER
(s->ptr[i]);

275 
	}
}

278 
	$Såch›
(
Så
 
s
)

280 
	`STR_LENGTH_CHECK
(
s
);

281 (
s
->
±r
[s->
Àngth
 - 1] == '\n' || s->ptr[s->length - 1] == '\r') &&

282 
s
->
Àngth
 > 0) {

283 
s
->
Àngth
--;

285 
s
->
±r
[s->
Àngth
] = '\0';

286 
	}
}

289 
	$Såö£π_ch¨
(
Så
 
s
, 
pos
, 
c
)

291 
i
;

292 
	`STR_LENGTH_CHECK
(
s
);

293 i‡(
pos
 < 0 || 
s
->
Àngth
 <Öos)

295 i‡(
s
->
Àngth
 + 2 > s->
¨ó_size
)

296 
	`Sågrow
(
s
);

297 
i
 = 
s
->
Àngth
; i > 
pos
; i--)

298 
s
->
±r
[
i
] = s->ptr[i - 1];

299 
s
->
±r
[++s->
Àngth
] = '\0';

300 
s
->
±r
[
pos
] = 
c
;

301 
	}
}

304 
	$Såö£π_ch¨p
(
Så
 
s
, 
pos
, *
p
)

306 
	`STR_LENGTH_CHECK
(
s
);

307 *
p
)

308 
	`Såö£π_ch¨
(
s
, 
pos
++, *(
p
++));

309 
	}
}

312 
	$Sådñëe
(
Så
 
s
, 
pos
, 
n
)

314 
i
;

315 
	`STR_LENGTH_CHECK
(
s
);

316 i‡(
s
->
Àngth
 <
pos
 + 
n
) {

317 
s
->
±r
[
pos
] = '\0';

318 
s
->
Àngth
 = 
pos
;

321 
i
 = 
pos
; i < 
s
->
Àngth
 - 
n
; i++)

322 
s
->
±r
[
i
] = s->±r[ò+ 
n
];

323 
s
->
±r
[
i
] = '\0';

324 
s
->
Àngth
 = 
i
;

325 
	}
}

328 
	$Sååunˇã
(
Så
 
s
, 
pos
)

330 
	`STR_LENGTH_CHECK
(
s
);

331 
s
->
±r
[
pos
] = '\0';

332 
s
->
Àngth
 = 
pos
;

333 
	}
}

336 
	$Såshrök
(
Så
 
s
, 
n
)

338 
	`STR_LENGTH_CHECK
(
s
);

339 i‡(
n
 >
s
->
Àngth
) {

340 
s
->
Àngth
 = 0;

341 
s
->
±r
[0] = '\0';

344 
s
->
Àngth
 -
n
;

345 
s
->
±r
[s->
Àngth
] = '\0';

347 
	}
}

350 
	$Såªmovefú°•a˚s
(
Så
 
s
)

352 
i
;

354 
	`STR_LENGTH_CHECK
(
s
);

355 
i
 = 0; i < 
s
->
Àngth
 && 
	`IS_SPACE
(s->
±r
[i]); i++) ;

356 i‡(
i
 == 0)

358 
	`Sådñëe
(
s
, 0, 
i
);

359 
	}
}

362 
	$Såªmovëøûög•a˚s
(
Så
 
s
)

364 
i
;

366 
	`STR_LENGTH_CHECK
(
s
);

367 
i
 = 
s
->
Àngth
 - 1; i >0 && 
	`IS_SPACE
(s->
±r
[i]); i--) ;

368 
s
->
Àngth
 = 
i
 + 1;

369 
s
->
±r
[
i
 + 1] = '\0';

370 
	}
}

372 
Så


373 
	$SåÆign_À·
(
Så
 
s
, 
width
)

375 
Så
 
n
;

376 
i
;

378 
	`STR_LENGTH_CHECK
(
s
);

379 i‡(
s
->
Àngth
 >
width
)

380  
	`Sådup
(
s
);

381 
n
 = 
	`Så√w_size
(
width
);

382 
	`Såc›y
(
n
, 
s
);

383 
i
 = 
s
->
Àngth
; i < 
width
; i++)

384 
	`Såˇt_ch¨
(
n
, ' ');

385  
n
;

386 
	}
}

388 
Så


389 
	$SåÆign_right
(
Så
 
s
, 
width
)

391 
Så
 
n
;

392 
i
;

394 
	`STR_LENGTH_CHECK
(
s
);

395 i‡(
s
->
Àngth
 >
width
)

396  
	`Sådup
(
s
);

397 
n
 = 
	`Så√w_size
(
width
);

398 
i
 = 
s
->
Àngth
; i < 
width
; i++)

399 
	`Såˇt_ch¨
(
n
, ' ');

400 
	`Såˇt
(
n
, 
s
);

401  
n
;

402 
	}
}

404 
Så


405 
	$SåÆign_˚¡î
(
Så
 
s
, 
width
)

407 
Så
 
n
;

408 
i
, 
w
;

410 
	`STR_LENGTH_CHECK
(
s
);

411 i‡(
s
->
Àngth
 >
width
)

412  
	`Sådup
(
s
);

413 
n
 = 
	`Så√w_size
(
width
);

414 
w
 = (
width
 - 
s
->
Àngth
) / 2;

415 
i
 = 0; i < 
w
; i++)

416 
	`Såˇt_ch¨
(
n
, ' ');

417 
	`Såˇt
(
n
, 
s
);

418 
i
 = 
w
 + 
s
->
Àngth
; i < 
width
; i++)

419 
	`Såˇt_ch¨
(
n
, ' ');

420  
n
;

421 
	}
}

423 
	#SP_NORMAL
 0

	)

424 
	#SP_PREC
 1

	)

425 
	#SP_PREC2
 2

	)

427 
Så


428 
	$S¥ötf
(*
fmt
, ...)

430 
Àn
 = 0;

431 
°©us
 = 
SP_NORMAL
;

432 
p
 = 0;

433 *
f
;

434 
Så
 
s
;

435 
va_li°
 
≠
;

437 
	`va_°¨t
(
≠
, 
fmt
);

438 
f
 = 
fmt
; *f; f++) {

439 
ªdo
:

440 
°©us
) {

441 
SP_NORMAL
:

442 i‡(*
f
 == '%') {

443 
°©us
 = 
SP_PREC
;

444 
p
 = 0;

447 
Àn
++;

449 
SP_PREC
:

450 i‡(
	`IS_ALPHA
(*
f
)) {

452 
vd
;

453 
vi
;

454 *
vs
;

455 *
vp
;

457 *
f
) {

469 
vi
 = 
	`va_¨g
(
≠
, );

470 
Àn
 +(
p
 > 0) ?Ö : 10;

477 
vd
 = 
	`va_¨g
(
≠
, );

478 
Àn
 +(
p
 > 0) ?Ö : 15;

481 
Àn
 += 1;

482 
vi
 = 
	`va_¨g
(
≠
, );

485 
vs
 = 
	`va_¨g
(
≠
, *);

486 
vi
 = 
	`°æí
(
vs
);

487 
Àn
 +(
p
 > 
vi
) ?Ö : vi;

490 
vp
 = 
	`va_¨g
(
≠
, *);

491 
Àn
 += 10;

494 
vp
 = 
	`va_¨g
(
≠
, *);

497 
°©us
 = 
SP_NORMAL
;

499 i‡(
	`IS_DIGIT
(*
f
))

500 
p
 =Ö * 10 + *
f
 - '0';

501 i‡(*
f
 == '.')

502 
°©us
 = 
SP_PREC2
;

503 i‡(*
f
 == '%') {

504 
°©us
 = 
SP_NORMAL
;

505 
Àn
++;

508 
SP_PREC2
:

509 i‡(
	`IS_ALPHA
(*
f
)) {

510 
°©us
 = 
SP_PREC
;

511 
ªdo
;

516 
	`va_íd
(
≠
);

517 
s
 = 
	`Så√w_size
(
Àn
 * 2);

518 
	`va_°¨t
(
≠
, 
fmt
);

519 
	`v•rötf
(
s
->
±r
, 
fmt
, 
≠
);

520 
	`va_íd
(
≠
);

521 
s
->
Àngth
 = 
	`°æí
(s->
±r
);

522 i‡(
s
->
Àngth
 > 
Àn
 * 2) {

523 
	`Ârötf
(
°dîr
, "Sprintf: stringÅooÜong\n");

524 
	`exô
(1);

526  
s
;

527 
	}
}

529 
Så


530 
	$Såfgës
(
FILE
 * 
f
)

532 
Så
 
s
 = 
	`Så√w
();

533 
c
;

535 
c
 = 
	`fgëc
(
f
);

536 i‡(
	`„of
(
f
Ë|| 
	`„º‹
(f))

538 
	`Såˇt_ch¨
(
s
, 
c
);

539 i‡(
c
 == '\n')

542  
s
;

543 
	}
}

545 
Så


546 
	$SåfgëÆl
(
FILE
 * 
f
)

548 
Så
 
s
 = 
	`Så√w
();

549 
c
;

551 
c
 = 
	`fgëc
(
f
);

552 i‡(
	`„of
(
f
Ë|| 
	`„º‹
(f))

554 
	`Såˇt_ch¨
(
s
, 
c
);

556  
s
;

557 
	}
}

	@Str.h

16 #i‚de‡
GC_STR_H


17 
	#GC_STR_H


	)

18 
	~<°dio.h
>

19 
	~<°rög.h
>

20 #ifde‡
__EMX__


21 
	#°rˇ£cmp
 
°ricmp


	)

22 
	#°∫ˇ£cmp
 
°∫icmp


	)

25 
	s_Så
 {

26 *
	m±r
;

27 
	mÀngth
;

28 
	m¨ó_size
;

29 } *
	tSå
;

31 
Så
 
Så√w
();

32 
Så
 
Så√w_size
();

33 
Så
 
Så√w_ch¨p
(*);

34 
Så
 
Så√w_ch¨p_n
(*, );

35 
Så
 
Så√w_m_ch¨p
(*, ...);

36 
Så
 
Sådup
(Str);

37 
Så˛ór
(
Så
);

38 
Så‰ì
(
Så
);

39 
Såc›y
(
Så
, Str);

40 
Såc›y_ch¨p
(
Så
, *);

41 
Såc›y_ch¨p_n
(
Så
, *, );

42 
Såˇt_ch¨p_n
(
Så
, *, );

43 
Såˇt
(
Så
, Str);

44 
Såˇt_ch¨p
(
Så
, *);

45 
Såˇt_m_ch¨p
(
Så
, ...);

46 
Så
 
Såsub°r
(Str, , );

47 
Såö£π_ch¨
(
Så
, , );

48 
Såö£π_ch¨p
(
Så
, , *);

49 
Sådñëe
(
Så
, , );

50 
Sååunˇã
(
Så
, );

51 
Sålowî
(
Så
);

52 
Såuµî
(
Så
);

53 
Såch›
(
Så
);

54 
Såshrök
(
Så
, );

55 
Såshrökfú°
(
Så
, );

56 
Såªmovefú°•a˚s
(
Så
);

57 
Såªmovëøûög•a˚s
(
Så
);

58 
Så
 
SåÆign_À·
(Str, );

59 
Så
 
SåÆign_right
(Str, );

60 
Så
 
SåÆign_˚¡î
(Str, );

62 
Så
 
S¥ötf
(*
fmt
, ...);

64 
Så
 
Såfgës
(
FILE
 *);

65 
Så
 
SåfgëÆl
(
FILE
 *);

67 
Sågrow
(
Så
 
s
);

69 
	#Såˇt_ch¨
(
x
,
y
Ë(((x)->
Àngth
+1>=(x)->
¨ó_size
)?
	`Sågrow
(x),0:0,(x)->
±r
[(x)->Àngth++]=(y),(x)->±r[(x)->Àngth]=0)

	)

70 
	#Såcmp
(
x
,
y
Ë
	`°rcmp
((x)->
±r
,(y)->±r)

	)

71 
	#Såcmp_ch¨p
(
x
,
y
Ë
	`°rcmp
((x)->
±r
,(y))

	)

72 
	#Såncmp
(
x
,
y
,
n
Ë
	`°∫cmp
((x)->
±r
,(y)->±r,“))

	)

73 
	#Såncmp_ch¨p
(
x
,
y
,
n
Ë
	`°∫cmp
((x)->
±r
,(y),“))

	)

74 
	#Såˇ£cmp
(
x
,
y
Ë
	`°rˇ£cmp
((x)->
±r
,(y)->±r)

	)

75 
	#Såˇ£cmp_ch¨p
(
x
,
y
Ë
	`°rˇ£cmp
((x)->
±r
,(y))

	)

76 
	#Sånˇ£cmp
(
x
,
y
,
n
Ë
	`°∫ˇ£cmp
((x)->
±r
,(y)->±r,“))

	)

77 
	#Sånˇ£cmp_ch¨p
(
x
,
y
,
n
Ë
	`°∫ˇ£cmp
((x)->
±r
,(y),“))

	)

79 
	#Såœ°ch¨
(
s
Ë((s)->
Àngth
>0?(s)->
±r
[(s)->Àngth-1]:'\0')

	)

80 
	#Såö£π
(
s
,
n
,
p
Ë
	`Såö£π_ch¨p
((s),“),’)->
±r
)

	)

81 
	#Såshrökfú°
(
s
,
n
Ë
	`Sådñëe
((s),0,“))

	)

82 
	#SåÂuts
(
s
,
f
Ë
	`fwrôe
((s)->
±r
,1,(s)->
Àngth
,(f))

	)

	@anchor.c

2 
	~"fm.h
"

3 
	~"my˘y≥.h
"

4 
	~"ªgex.h
"

6 
	#FIRST_ANCHOR_SIZE
 30

	)

8 
Anch‹Li°
 *

9 
	$putAnch‹
(
Anch‹Li°
 *
Æ
, *
uæ
, *
èrgë
, 
Anch‹
 **
™ch‹_ªtu∫
,

10 *
ª„ªr
, *
tôÀ
, 
key
, 
löe
, 
pos
)

12 
n
, 
i
, 
j
;

13 
Anch‹
 *
a
;

14 
Buf„rPoöt
 
bp
;

15 i‡(
Æ
 =
NULL
) {

16 
Æ
 = 
	`New
(
Anch‹Li°
);

17 
Æ
->
™ch‹s
 = 
NULL
;

18 
Æ
->
«nch‹
 =ál->
™ch‹max
 = 0;

19 
Æ
->
aˇche
 = -1;

21 i‡(
Æ
->
™ch‹max
 == 0) {

23 
Æ
->
™ch‹s
 = 
	`New_N
(
Anch‹
, 
FIRST_ANCHOR_SIZE
);

24 
Æ
->
™ch‹max
 = 
FIRST_ANCHOR_SIZE
;

26 i‡(
Æ
->
«nch‹
 =Æ->
™ch‹max
) {

27 
Æ
->
™ch‹max
 *= 2;

28 
Æ
->
™ch‹s
 = 
	`New_Reu£
(
Anch‹
,ál->™ch‹s,ál->
™ch‹max
);

30 
bp
.
löe
 =Üine;

31 
bp
.
pos
 =Öos;

32 
n
 = 
Æ
->
«nch‹
;

33 i‡(!
n
 || 
	`bpcmp
(
Æ
->
™ch‹s
[¿- 1].
°¨t
, 
bp
) < 0)

34 
i
 = 
n
;

36 
i
 = 0; i < 
n
; i++) {

37 i‡(
	`bpcmp
(
Æ
->
™ch‹s
[
i
].
°¨t
, 
bp
) >= 0) {

38 
j
 = 
n
; j > 
i
; j--)

39 
Æ
->
™ch‹s
[
j
] =ál->anchors[j - 1];

43 
a
 = &
Æ
->
™ch‹s
[
i
];

44 
a
->
uæ
 = url;

45 
a
->
èrgë
 =Åarget;

46 
a
->
ª„ªr
 =Ñeferer;

47 
a
->
tôÀ
 =Åitle;

48 
a
->
ac˚sskey
 = 
key
;

49 
a
->
¶ave
 = 
FALSE
;

50 
a
->
°¨t
 = 
bp
;

51 
a
->
íd
 = 
bp
;

52 
Æ
->
«nch‹
++;

53 i‡(
™ch‹_ªtu∫
)

54 *
™ch‹_ªtu∫
 = 
a
;

55  
Æ
;

56 
	}
}

59 
Anch‹
 *

60 
	$ªgi°îHªf
(
Buf„r
 *
buf
, *
uæ
, *
èrgë
, *
ª„ªr
, *
tôÀ
,

61 
key
, 
löe
, 
pos
)

63 
Anch‹
 *
a
;

64 
buf
->
hªf
 = 
	`putAnch‹
(buf->hªf, 
uæ
, 
èrgë
, &
a
, 
ª„ªr
, 
tôÀ
, 
key
,

65 
löe
, 
pos
);

66  
a
;

67 
	}
}

69 
Anch‹
 *

70 
	$ªgi°îName
(
Buf„r
 *
buf
, *
uæ
, 
löe
, 
pos
)

72 
Anch‹
 *
a
;

73 
buf
->
«me
 = 
	`putAnch‹
(buf->«me, 
uæ
, 
NULL
, &
a
, NULL, NULL, '\0', 
löe
,

74 
pos
);

75  
a
;

76 
	}
}

78 
Anch‹
 *

79 
	$ªgi°îImg
(
Buf„r
 *
buf
, *
uæ
, *
tôÀ
, 
löe
, 
pos
)

81 
Anch‹
 *
a
;

82 
buf
->
img
 = 
	`putAnch‹
(buf->img, 
uæ
, 
NULL
, &
a
, NULL, 
tôÀ
, '\0', 
löe
,

83 
pos
);

84  
a
;

85 
	}
}

87 
Anch‹
 *

88 
	$ªgi°îF‹m
(
Buf„r
 *
buf
, 
F‹mLi°
 *
Êi°
, 
∑r£d_èg
 *
èg
, 
löe
,

89 
pos
)

91 
Anch‹
 *
a
;

92 
F‹mIãmLi°
 *
fi
;

94 
fi
 = 
	`f‹mLi°_addI≈ut
(
Êi°
, 
èg
);

95 i‡(
fi
 =
NULL
)

96  
NULL
;

97 
buf
->
f‹môem
 = 
	`putAnch‹
(buf->f‹môem, (*)
fi
, 
Êi°
->
èrgë
, &
a
,

98 
NULL
, NULL, '\0', 
löe
, 
pos
);

99  
a
;

100 
	}
}

103 
	$⁄Anch‹
(
Anch‹
 *
a
, 
löe
, 
pos
)

105 
Buf„rPoöt
 
bp
;

106 
bp
.
löe
 =Üine;

107 
bp
.
pos
 =Öos;

109 i‡(
	`bpcmp
(
bp
, 
a
->
°¨t
) < 0)

111 i‡(
	`bpcmp
(
a
->
íd
, 
bp
) <= 0)

114 
	}
}

116 
Anch‹
 *

117 
	$ªåõveAnch‹
(
Anch‹Li°
 *
Æ
, 
löe
, 
pos
)

119 
Anch‹
 *
a
;

120 
size_t
 
b
, 
e
;

121 
cmp
;

123 i‡(
Æ
 =
NULL
 ||ál->
«nch‹
 == 0)

124  
NULL
;

126 i‡(
Æ
->
aˇche
 < 0 ||ál->aˇchê>Æ->
«nch‹
)

127 
Æ
->
aˇche
 = 0;

129 
b
 = 0, 
e
 = 
Æ
->
«nch‹
 - 1; b <e;ál->
aˇche
 = (b +É) / 2) {

130 
a
 = &
Æ
->
™ch‹s
[Æ->
aˇche
];

131 
cmp
 = 
	`⁄Anch‹
(
a
, 
löe
, 
pos
);

132 i‡(
cmp
 == 0)

133  
a
;

134 i‡(
cmp
 > 0)

135 
b
 = 
Æ
->
aˇche
 + 1;

136 i‡(
Æ
->
aˇche
 == 0)

137  
NULL
;

139 
e
 = 
Æ
->
aˇche
 - 1;

141  
NULL
;

142 
	}
}

144 
Anch‹
 *

145 
	$ªåõveCuºítAnch‹
(
Buf„r
 *
buf
)

147 i‡(
buf
->
cuºítLöe
 =
NULL
)

148  
NULL
;

149  
	`ªåõveAnch‹
(
buf
->
hªf
, buf->
cuºítLöe
->
löíumbî
, buf->
pos
);

150 
	}
}

152 
Anch‹
 *

153 
	$ªåõveCuºítImg
(
Buf„r
 *
buf
)

155 i‡(
buf
->
cuºítLöe
 =
NULL
)

156  
NULL
;

157  
	`ªåõveAnch‹
(
buf
->
img
, buf->
cuºítLöe
->
löíumbî
, buf->
pos
);

158 
	}
}

160 
Anch‹
 *

161 
	$ªåõveCuºítF‹m
(
Buf„r
 *
buf
)

163 i‡(
buf
->
cuºítLöe
 =
NULL
)

164  
NULL
;

165  
	`ªåõveAnch‹
(
buf
->
f‹môem
,

166 
buf
->
cuºítLöe
->
löíumbî
, buf->
pos
);

167 
	}
}

169 
Anch‹
 *

170 
	$£¨chAnch‹
(
Anch‹Li°
 *
Æ
, *
°r
)

172 
i
;

173 
Anch‹
 *
a
;

174 i‡(
Æ
 =
NULL
)

175  
NULL
;

176 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

177 
a
 = &
Æ
->
™ch‹s
[
i
];

178 i‡(
a
->
h£q
 < 0)

180 i‡(!
	`°rcmp
(
a
->
uæ
, 
°r
))

181  
a
;

183  
NULL
;

184 
	}
}

186 
Anch‹
 *

187 
	$£¨chURLLabñ
(
Buf„r
 *
buf
, *
uæ
)

189  
	`£¨chAnch‹
(
buf
->
«me
, 
uæ
);

190 
	}
}

192 #ifde‡
USE_NNTP


193 
Anch‹
 *

194 
	$_put_™ch‹_√ws
(
Buf„r
 *
buf
, *
p1
, *
p2
, 
löe
, 
pos
)

196 
Så
 
tmp
;

198 i‡(*
p1
 == '<') {

199 
p1
++;

200 i‡(*(
p2
 - 1) == '>')

201 
p2
--;

203 
tmp
 = 
	`wc_Så_c⁄v_°ri˘
(
	`Så√w_ch¨p_n
(
p1
, 
p2
 -Ö1), 
I¬îCh¨£t
,

204 
buf
->
documít_ch¨£t
);

205 
tmp
 = 
	`S¥ötf
("√ws:%s", 
	`fûe_quŸe
—mp->
±r
));

206  
	`ªgi°îHªf
(
buf
, 
tmp
->
±r
, 
NULL
, 
NO_REFERER
, NULL, '\0', 
löe
,

207 
pos
);

208 
	}
}

211 
Anch‹
 *

212 
	$_put_™ch‹_Æl
(
Buf„r
 *
buf
, *
p1
, *
p2
, 
löe
, 
pos
)

214 
Så
 
tmp
;

216 
tmp
 = 
	`wc_Så_c⁄v_°ri˘
(
	`Så√w_ch¨p_n
(
p1
, 
p2
 -Ö1), 
I¬îCh¨£t
,

217 
buf
->
documít_ch¨£t
);

218  
	`ªgi°îHªf
(
buf
, 
	`uæ_quŸe
(
tmp
->
±r
), 
NULL
, 
NO_REFERER
, NULL,

219 '\0', 
löe
, 
pos
);

220 
	}
}

223 
	$ª£q_™ch‹0
(
Anch‹Li°
 *
Æ
, *
£qm≠
)

225 
i
;

226 
Anch‹
 *
a
;

228 i‡(!
Æ
)

231 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

232 
a
 = &
Æ
->
™ch‹s
[
i
];

233 i‡(
a
->
h£q
 >= 0) {

234 
a
->
h£q
 = 
£qm≠
[a->hseq];

237 
	}
}

241 
	$ª£q_™ch‹
(
Buf„r
 *
buf
)

243 
i
, 
j
, 
n
, 
nm¨k
 = (
buf
->
hm¨kli°
) ? buf->hmarklist->nmark : 0;

244 *
£qm≠
;

245 
Anch‹
 *
a
, *
a1
;

246 
Hm¨kîLi°
 *
ml
 = 
NULL
;

248 i‡(!
buf
->
hªf
)

251 
n
 = 
nm¨k
;

252 
i
 = 0; i < 
buf
->
hªf
->
«nch‹
; i++) {

253 
a
 = &
buf
->
hªf
->
™ch‹s
[
i
];

254 i‡(
a
->
h£q
 == -2)

255 
n
++;

258 i‡(
n
 =
nm¨k
)

261 
£qm≠
 = 
	`NewAtom_N
(, 
n
);

263 
i
 = 0; i < 
n
; i++)

264 
£qm≠
[
i
] = i;

266 
n
 = 
nm¨k
;

267 
i
 = 0; i < 
buf
->
hªf
->
«nch‹
; i++) {

268 
a
 = &
buf
->
hªf
->
™ch‹s
[
i
];

269 i‡(
a
->
h£q
 == -2) {

270 
a
->
h£q
 = 
n
;

271 
a1
 = 
	`˛o£°_√xt_™ch‹
(
buf
->
hªf
, 
NULL
, 
a
->
°¨t
.
pos
,

272 
a
->
°¨t
.
löe
);

273 
a1
 = 
	`˛o£°_√xt_™ch‹
(
buf
->
f‹môem
,á1, 
a
->
°¨t
.
pos
,

274 
a
->
°¨t
.
löe
);

275 i‡(
a1
 &&á1->
h£q
 >= 0) {

276 
£qm≠
[
n
] = seqm≠[
a1
->
h£q
];

277 
j
 = 
a1
->
h£q
; j < 
nm¨k
; j++)

278 
£qm≠
[
j
]++;

280 
ml
 = 
	`putHm¨kî
(ml, 
a
->
°¨t
.
löe
,á->°¨t.
pos
, 
£qm≠
[
n
]);

281 
n
++;

285 
i
 = 0; i < 
nm¨k
; i++) {

286 
ml
 = 
	`putHm¨kî
(ml, 
buf
->
hm¨kli°
->
m¨ks
[
i
].
löe
,

287 
buf
->
hm¨kli°
->
m¨ks
[
i
].
pos
, 
£qm≠
[i]);

289 
buf
->
hm¨kli°
 = 
ml
;

291 
	`ª£q_™ch‹0
(
buf
->
hªf
, 
£qm≠
);

292 
	`ª£q_™ch‹0
(
buf
->
f‹môem
, 
£qm≠
);

293 
	}
}

296 
ªAnch‹Pos
(
Buf„r
 *
buf
, 
Löe
 *
l
, *
p1
, *
p2
,

297 
Anch‹
 *(*
™ch‹¥oc
Ë(
Buf„r
 *, *, *, , ))

299 
Anch‹
 *
	ga
;

300 
	g•os
, 
	gïos
;

301 
	gi
, 
	gh£q
 = -2;

303 
	g•os
 = 
p1
 - 
l
->
löeBuf
;

304 
	gïos
 = 
p2
 - 
l
->
löeBuf
;

305 
	gi
 = 
•os
; i < 
	gïos
; i++) {

306 i‡(
	gl
->
	g¥›Buf
[
i
] & (
	gPE_ANCHOR
 | 
	gPE_FORM
))

307  
	gp2
;

309 
	gi
 = 
•os
; i < 
	gïos
; i++)

310 
	gl
->
	g¥›Buf
[
i
] |
PE_ANCHOR
;

311 
	g•os
 > 
	gl
->
	gÀn
 &&Ü->
	g√xt
 &&Ü->√xt->
	gbpos
) {

312 
	g•os
 -
l
->
Àn
;

313 
	gïos
 -
l
->
Àn
;

314 
	gl
 = 
l
->
√xt
;

317 
	ga
 = 
™ch‹¥oc
(
buf
, 
p1
, 
p2
, 
l
->
löíumbî
, 
•os
);

318 
	ga
->
	gh£q
 = 
h£q
;

319 i‡(
	gh£q
 == -2) {

320 
ª£q_™ch‹
(
buf
);

321 
	gh£q
 = 
a
->
h£q
;

323 
	ga
->
	gíd
.
	glöe
 = 
l
->
löíumbî
;

324 i‡(
	gïos
 > 
	gl
->
	gÀn
 &&Ü->
	g√xt
 &&Ü->√xt->
	gbpos
) {

325 
	ga
->
	gíd
.
	gpos
 = 
l
->
Àn
;

326 
	g•os
 = 0;

327 
	gïos
 -
l
->
Àn
;

328 
	gl
 = 
l
->
√xt
;

331 
	ga
->
	gíd
.
	gpos
 = 
ïos
;

335  
	gp2
;

339 
	$ªAnch‹W‹d
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
•os
, 
ïos
)

341 
	`ªAnch‹Pos
(
buf
, 
l
, &l->
löeBuf
[
•os
], &l->löeBuf[
ïos
], 
_put_™ch‹_Æl
);

342 
	}
}

347 
ªAnch‹Any
(
Buf„r
 *
buf
, *
ª
,

348 
Anch‹
 *(*
™ch‹¥oc
Ë(
Buf„r
 *, *, *, , ))

350 
Löe
 *
	gl
;

351 *
	gp
 = 
NULL
, *
	gp1
, *
	gp2
;

353 i‡(
	gª
 =
NULL
 || *
ª
 == '\0') {

354  
NULL
;

356 i‡((
	gª
 = 
ªgexCompûe
(
ª
, 1)Ë!
NULL
) {

357  
ª
;

359 
	gl
 = 
M¨kAŒPages
 ? 
buf
->
fú°Löe
 : buf->
t›Löe
;Ü !
NULL
 &&

360 (
M¨kAŒPages
 || 
l
->
löíumbî
 < 
buf
->
t›Löe
->löíumbî + 
LASTLINE
);

361 
	gl
 = 
l
->
√xt
) {

362 i‡(
p
 && 
l
->
bpos
)

363 
√xt_löe
;

364 
	gp
 = 
l
->
löeBuf
;

366 i‡(
ªgexM©ch
(
p
, &
l
->
löeBuf
[l->
size
] -Ö,Ö ==Ü->lineBuf) == 1) {

367 
m©chedPosôi⁄
(&
p1
, &
p2
);

368 
	gp
 = 
ªAnch‹Pos
(
buf
, 
l
, 
p1
, 
p2
, 
™ch‹¥oc
);

373 
	g√xt_löe
:

374 i‡(
M¨kAŒPages
 && 
l
->
√xt
 =
NULL
 && 
buf
->
∑gîSour˚
 &&

375 !(
buf
->
buf„Ωr›
 & 
BP_CLOSE
))

376 
gëNextPage
(
buf
, 
PagîMax
);

378  
	gNULL
;

382 
	$ªAnch‹
(
Buf„r
 *
buf
, *
ª
)

384  
	`ªAnch‹Any
(
buf
, 
ª
, 
_put_™ch‹_Æl
);

385 
	}
}

387 #ifde‡
USE_NNTP


389 
	$ªAnch‹News
(
Buf„r
 *
buf
, *
ª
)

391  
	`ªAnch‹Any
(
buf
, 
ª
, 
_put_™ch‹_√ws
);

392 
	}
}

395 
	$ªAnch‹Newshódî
(
Buf„r
 *
buf
)

397 
Löe
 *
l
;

398 *
p
, *
p1
, *
p2
;

399 *
hódî_mid
[] = {

400 "Mesßge-Id:", "Re„ªn˚s:", "In-Rïly-To:", 
NULL


402 *
hódî_group
[] = {

403 "Newsgroups:", 
NULL


405 **
hódî
, **
q
;

406 
i
, 
£¨ch
 = 
FALSE
;

408 i‡(!
buf
 || !buf->
fú°Löe
)

409  
NULL
;

410 
i
 = 0; i <= 1; i++) {

411 i‡(
i
 == 0) {

412 
	`ªgexCompûe
("<[!-;=?-~]+@[a-zA-Z0-9\\.\\-_]+>", 1);

413 
hódî
 = 
hódî_mid
;

416 
	`ªgexCompûe
("[a-zA-Z0-9\\.\\-_]+", 1);

417 
hódî
 = 
hódî_group
;

419 
l
 = 
buf
->
fú°Löe
;Ü !
NULL
 &&Ü->
ªÆ_löíumbî
 == 0;

420 
l
 =Ü->
√xt
) {

421 i‡(
l
->
bpos
)

423 
p
 = 
l
->
löeBuf
;

424 i‡(!
	`IS_SPACE
(*
p
)) {

425 
£¨ch
 = 
FALSE
;

426 
q
 = 
hódî
; *q; q++) {

427 i‡(!
	`°∫ˇ£cmp
(
p
, *
q
, 
	`°æí
(*q))) {

428 
£¨ch
 = 
TRUE
;

429 
p
 = 
	`°rchr
(p, ':') + 1;

434 i‡(!
£¨ch
)

437 i‡(
	`ªgexM©ch
(
p
, &
l
->
löeBuf
[l->
size
] -Ö,Ö ==Ü->lineBuf)

439 
	`m©chedPosôi⁄
(&
p1
, &
p2
);

440 
p
 = 
	`ªAnch‹Pos
(
buf
, 
l
, 
p1
, 
p2
, 
_put_™ch‹_√ws
);

447 
	`ª£q_™ch‹
(
buf
);

448  
NULL
;

449 
	}
}

452 
	#FIRST_MARKER_SIZE
 30

	)

453 
Hm¨kîLi°
 *

454 
	$putHm¨kî
(
Hm¨kîLi°
 *
ml
, 
löe
, 
pos
, 
£q
)

456 i‡(
ml
 =
NULL
) {

457 
ml
 = 
	`New
(
Hm¨kîLi°
);

458 
ml
->
m¨ks
 = 
NULL
;

459 
ml
->
nm¨k
 = 0;

460 
ml
->
m¨kmax
 = 0;

461 
ml
->
¥evh£q
 = -1;

463 i‡(
ml
->
m¨kmax
 == 0) {

464 
ml
->
m¨kmax
 = 
FIRST_MARKER_SIZE
;

465 
ml
->
m¨ks
 = 
	`NewAtom_N
(
Buf„rPoöt
, ml->
m¨kmax
);

466 
	`bzîo
(
ml
->
m¨ks
, (
Buf„rPoöt
Ë* ml->
m¨kmax
);

468 i‡(
£q
 + 1 > 
ml
->
nm¨k
)

469 
ml
->
nm¨k
 = 
£q
 + 1;

470 i‡(
ml
->
nm¨k
 >ml->
m¨kmax
) {

471 
ml
->
m¨kmax
 = ml->
nm¨k
 * 2;

472 
ml
->
m¨ks
 = 
	`New_Reu£
(
Buf„rPoöt
, ml->m¨ks, ml->
m¨kmax
);

474 
ml
->
m¨ks
[
£q
].
löe
 =Üine;

475 
ml
->
m¨ks
[
£q
].
pos
 =Öos;

476 
ml
->
m¨ks
[
£q
].
övÆid
 = 0;

477  
ml
;

478 
	}
}

480 
Anch‹
 *

481 
	$˛o£°_√xt_™ch‹
(
Anch‹Li°
 *
a
, 
Anch‹
 *
™
, 
x
, 
y
)

483 
i
;

485 i‡(
a
 =
NULL
 ||á->
«nch‹
 == 0)

486  
™
;

487 
i
 = 0; i < 
a
->
«nch‹
; i++) {

488 i‡(
a
->
™ch‹s
[
i
].
h£q
 < 0)

490 i‡(
a
->
™ch‹s
[
i
].
°¨t
.
löe
 > 
y
 ||

491 (
a
->
™ch‹s
[
i
].
°¨t
.
löe
 =
y
 &&á->™ch‹s[i].°¨t.
pos
 > 
x
)) {

492 i‡(
™
 =
NULL
 ||án->
°¨t
.
löe
 > 
a
->
™ch‹s
[
i
].start.line ||

493 (
™
->
°¨t
.
löe
 =
a
->
™ch‹s
[
i
].start.line &&

494 
™
->
°¨t
.
pos
 > 
a
->
™ch‹s
[
i
].start.pos))

495 
™
 = &
a
->
™ch‹s
[
i
];

498  
™
;

499 
	}
}

501 
Anch‹
 *

502 
	$˛o£°_¥ev_™ch‹
(
Anch‹Li°
 *
a
, 
Anch‹
 *
™
, 
x
, 
y
)

504 
i
;

506 i‡(
a
 =
NULL
 ||á->
«nch‹
 == 0)

507  
™
;

508 
i
 = 0; i < 
a
->
«nch‹
; i++) {

509 i‡(
a
->
™ch‹s
[
i
].
h£q
 < 0)

511 i‡(
a
->
™ch‹s
[
i
].
íd
.
löe
 < 
y
 ||

512 (
a
->
™ch‹s
[
i
].
íd
.
löe
 =
y
 &&á->™ch‹s[i].íd.
pos
 <
x
)) {

513 i‡(
™
 =
NULL
 ||án->
íd
.
löe
 < 
a
->
™ch‹s
[
i
].end.line ||

514 (
™
->
íd
.
löe
 =
a
->
™ch‹s
[
i
].end.line &&

515 
™
->
íd
.
pos
 < 
a
->
™ch‹s
[
i
].end.pos))

516 
™
 = &
a
->
™ch‹s
[
i
];

519  
™
;

520 
	}
}

523 
	$shi·Anch‹Posôi⁄
(
Anch‹Li°
 *
Æ
, 
Hm¨kîLi°
 *
hl
, 
löe
, 
pos
,

524 
shi·
)

526 
Anch‹
 *
a
;

527 
size_t
 
b
, 
e
, 
s
 = 0;

528 
cmp
;

530 i‡(
Æ
 =
NULL
 ||ál->
«nch‹
 == 0)

533 
s
 = 
Æ
->
«nch‹
 / 2;

534 
b
 = 0, 
e
 = 
Æ
->
«nch‹
 - 1; b <e; 
s
 = (b +É + 1) / 2) {

535 
a
 = &
Æ
->
™ch‹s
[
s
];

536 
cmp
 = 
	`⁄Anch‹
(
a
, 
löe
, 
pos
);

537 i‡(
cmp
 == 0)

539 i‡(
cmp
 > 0)

540 
b
 = 
s
 + 1;

541 i‡(
s
 == 0)

544 
e
 = 
s
 - 1;

546 ; 
s
 < 
Æ
->
«nch‹
; s++) {

547 
a
 = &
Æ
->
™ch‹s
[
s
];

548 i‡(
a
->
°¨t
.
löe
 >Üine)

550 i‡(
a
->
°¨t
.
pos
 >Öos) {

551 
a
->
°¨t
.
pos
 +
shi·
;

552 i‡(
hl
->
m¨ks
[
a
->
h£q
].
löe
 ==Üine)

553 
hl
->
m¨ks
[
a
->
h£q
].
pos
 =á->
°¨t
.pos;

555 i‡(
a
->
íd
.
pos
 >=Öos)

556 
a
->
íd
.
pos
 +
shi·
;

558 
	}
}

560 #ifde‡
USE_IMAGE


562 
	$addMu…úowsImg
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
)

564 
i
, 
j
, 
k
, 
cﬁ
, 
ecﬁ
, 
pos
;

565 
Image
 *
img
;

566 
Anch‹
 
a_img
, 
a_hªf
, 
a_f‹m
, *
a
;

567 
Löe
 *
l
, *
ls
;

569 i‡(
Æ
 =
NULL
 ||ál->
«nch‹
 == 0)

571 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

572 
a_img
 = 
Æ
->
™ch‹s
[
i
];

573 
img
 = 
a_img
.
image
;

574 i‡(
a_img
.
h£q
 < 0 || !
img
 || img->
rows
 <= 1)

576 
l
 = 
buf
->
fú°Löe
;Ü !
NULL
;Ü =Ü->
√xt
) {

577 i‡(
l
->
löíumbî
 =
img
->
y
)

580 i‡(!
l
)

582 i‡(
a_img
.
y
 =a_img.
°¨t
.
löe
)

583 
ls
 = 
l
;

585 
ls
 = 
l
;Ü†!
NULL
;

586 
ls
 = (
a_img
.
y
 <á_img.
°¨t
.
löe
Ë?Üs->
√xt
 :Üs->
¥ev
) {

587 i‡(
ls
->
löíumbî
 =
a_img
.
°¨t
.
löe
)

590 i‡(!
ls
)

593 
a
 = 
	`ªåõveAnch‹
(
buf
->
hªf
, 
a_img
.
°¨t
.
löe
,á_img.°¨t.
pos
);

594 i‡(
a
)

595 
a_hªf
 = *
a
;

597 
a_hªf
.
uæ
 = 
NULL
;

598 
a
 = 
	`ªåõveAnch‹
(
buf
->
f‹môem
, 
a_img
.
°¨t
.
löe
,á_img.°¨t.
pos
);

599 i‡(
a
)

600 
a_f‹m
 = *
a
;

602 
a_f‹m
.
uæ
 = 
NULL
;

603 
cﬁ
 = 
	`COLPOS
(
ls
, 
a_img
.
°¨t
.
pos
);

604 
ecﬁ
 = 
	`COLPOS
(
ls
, 
a_img
.
íd
.
pos
);

605 
j
 = 0; 
l
 && j < 
img
->
rows
;Ü =Ü->
√xt
, j++) {

606 i‡(
a_img
.
°¨t
.
löe
 =
l
->
löíumbî
)

608 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁ
);

609 
a
 = 
	`ªgi°îImg
(
buf
, 
a_img
.
uæ
,á_img.
tôÀ
, 
l
->
löíumbî
, 
pos
);

610 
a
->
h£q
 = -
a_img
.hseq;

611 
a
->
¶ave
 = 
TRUE
;

612 
a
->
image
 = 
img
;

613 
a
->
íd
.
pos
 =Öo†+ 
ecﬁ
 - 
cﬁ
;

614 
k
 = 
pos
; k < 
a
->
íd
.pos; k++)

615 
l
->
¥›Buf
[
k
] |
PE_IMAGE
;

616 i‡(
a_hªf
.
uæ
) {

617 
a
 = 
	`ªgi°îHªf
(
buf
, 
a_hªf
.
uæ
,á_hªf.
èrgë
,

618 
a_hªf
.
ª„ªr
,á_hªf.
tôÀ
,

619 
a_hªf
.
ac˚sskey
, 
l
->
löíumbî
, 
pos
);

620 
a
->
h£q
 = 
a_hªf
.hseq;

621 
a
->
¶ave
 = 
TRUE
;

622 
a
->
íd
.
pos
 =Öo†+ 
ecﬁ
 - 
cﬁ
;

623 
k
 = 
pos
; k < 
a
->
íd
.pos; k++)

624 
l
->
¥›Buf
[
k
] |
PE_ANCHOR
;

626 i‡(
a_f‹m
.
uæ
) {

627 
buf
->
f‹môem
 = 
	`putAnch‹
(buf->f‹môem, 
a_f‹m
.
uæ
,

628 
a_f‹m
.
èrgë
, &
a
, 
NULL
, NULL, '\0',

629 
l
->
löíumbî
, 
pos
);

630 
a
->
h£q
 = 
a_f‹m
.hseq;

631 
a
->
íd
.
pos
 =Öo†+ 
ecﬁ
 - 
cﬁ
;

634 
img
->
rows
 = 0;

636 
	}
}

640 
	$addMu…úowsF‹m
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
)

642 
i
, 
j
, 
k
, 
cﬁ
, 
ecﬁ
, 
pos
;

643 
Anch‹
 
a_f‹m
, *
a
;

644 
F‹mIãmLi°
 *
fi
;

645 
Löe
 *
l
, *
ls
;

647 i‡(
Æ
 =
NULL
 ||ál->
«nch‹
 == 0)

649 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

650 
a_f‹m
 = 
Æ
->
™ch‹s
[
i
];

651 
Æ
->
™ch‹s
[
i
].
rows
 = 1;

652 i‡(
a_f‹m
.
h£q
 < 0 ||á_f‹m.
rows
 <= 1)

654 
l
 = 
buf
->
fú°Löe
;Ü !
NULL
;Ü =Ü->
√xt
) {

655 i‡(
l
->
löíumbî
 =
a_f‹m
.
y
)

658 i‡(!
l
)

660 i‡(
a_f‹m
.
y
 =a_f‹m.
°¨t
.
löe
)

661 
ls
 = 
l
;

663 
ls
 = 
l
;Ü†!
NULL
;

664 
ls
 = (
a_f‹m
.
y
 <á_f‹m.
°¨t
.
löe
Ë?Üs->
√xt
 :Üs->
¥ev
) {

665 i‡(
ls
->
löíumbî
 =
a_f‹m
.
°¨t
.
löe
)

668 i‡(!
ls
)

671 
fi
 = (
F‹mIãmLi°
 *)
a_f‹m
.
uæ
;

672 
cﬁ
 = 
	`COLPOS
(
ls
, 
a_f‹m
.
°¨t
.
pos
);

673 
ecﬁ
 = 
	`COLPOS
(
ls
, 
a_f‹m
.
íd
.
pos
);

674 
j
 = 0; 
l
 && j < 
a_f‹m
.
rows
;Ü =Ü->
√xt
, j++) {

675 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁ
);

676 i‡(
j
 == 0) {

677 
buf
->
hm¨kli°
->
m¨ks
[
a_f‹m
.
h£q
].
löe
 = 
l
->
löíumbî
;

678 
buf
->
hm¨kli°
->
m¨ks
[
a_f‹m
.
h£q
].
pos
 =Öos;

680 i‡(
a_f‹m
.
°¨t
.
löe
 =
l
->
löíumbî
)

682 
buf
->
f‹môem
 = 
	`putAnch‹
(buf->f‹môem, 
a_f‹m
.
uæ
,

683 
a_f‹m
.
èrgë
, &
a
, 
NULL
, NULL, '\0',

684 
l
->
löíumbî
, 
pos
);

685 
a
->
h£q
 = 
a_f‹m
.hseq;

686 
a
->
y
 = 
a_f‹m
.y;

687 
a
->
íd
.
pos
 =Öo†+ 
ecﬁ
 - 
cﬁ
;

688 
l
->
löeBuf
[
pos
 - 1] = '[';

689 
l
->
löeBuf
[
a
->
íd
.
pos
] = ']';

690 
k
 = 
pos
; k < 
a
->
íd
.pos; k++)

691 
l
->
¥›Buf
[
k
] |
PE_FORM
;

694 
	}
}

697 
	$gëAnch‹Text
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
, 
Anch‹
 *
a
)

699 
h£q
, 
i
;

700 
Löe
 *
l
;

701 
Så
 
tmp
 = 
NULL
;

702 *
p
, *
ï
;

704 i‡(!
a
 ||á->
h£q
 < 0)

705  
NULL
;

706 
h£q
 = 
a
->hseq;

707 
l
 = 
buf
->
fú°Löe
;

708 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

709 
a
 = &
Æ
->
™ch‹s
[
i
];

710 i‡(
a
->
h£q
 != hseq)

712 ; 
l
;Ü =Ü->
√xt
) {

713 i‡(
l
->
löíumbî
 =
a
->
°¨t
.
löe
)

716 i‡(!
l
)

718 
p
 = 
l
->
löeBuf
 + 
a
->
°¨t
.
pos
;

719 
ï
 = 
l
->
löeBuf
 + 
a
->
íd
.
pos
;

720 ; 
p
 < 
ï
 && 
	`IS_SPACE
(*p);Ö++) ;

721 i‡(
p
 =
ï
)

723 i‡(!
tmp
)

724 
tmp
 = 
	`Så√w_size
(
ï
 - 
p
);

726 
	`Såˇt_ch¨
(
tmp
, ' ');

727 
	`Såˇt_ch¨p_n
(
tmp
, 
p
, 
ï
 -Ö);

729  
tmp
 ?Åmp->
±r
 : 
NULL
;

730 
	}
}

732 
Buf„r
 *

733 
	$lök_li°_∑√l
(
Buf„r
 *
buf
)

735 
LökLi°
 *
l
;

736 
Anch‹Li°
 *
Æ
;

737 
Anch‹
 *
a
;

738 
F‹mIãmLi°
 *
fi
;

739 
i
;

740 *
t
, *
u
, *
p
;

741 
P¨£dURL
 
pu
;

743 
Så
 
tmp
 = 
	`Så√w_ch¨p
("<title>Link List</title>\
<h1álign=center>Link List</h1>\n");

746 i‡(
buf
->
buf„Ωr›
 & 
BP_INTERNAL
 ||

747 (
buf
->
lökli°
 =
NULL
 && buf->
hªf
 =NULL && buf->
img
 == NULL)) {

748  
NULL
;

751 i‡(
buf
->
lökli°
) {

752 
	`Såˇt_ch¨p
(
tmp
, "<hr><h2>Links</h2>\n<ol>\n");

753 
l
 = 
buf
->
lökli°
;Ü;Ü =Ü->
√xt
) {

754 i‡(
l
->
uæ
) {

755 
	`∑r£URL2
(
l
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

756 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

757 
u
 = 
	`html_quŸe
(
p
);

758 i‡(
DecodeURL
)

759 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

761 
p
 = 
u
;

764 
u
 = 
p
 = "";

765 i‡(
l
->
ty≥
 =
LINK_TYPE_REL
)

766 
t
 = " [Rel]";

767 i‡(
l
->
ty≥
 =
LINK_TYPE_REV
)

768 
t
 = " [Rev]";

770 
t
 = "";

771 
t
 = 
	`S¥ötf
("%s%s\n", 
l
->
tôÀ
 ?Ü->tôÀ : "",Å)->
±r
;

772 
t
 = 
	`html_quŸe
(t);

773 
	`Såˇt_m_ch¨p
(
tmp
, "<li><®hªf=\"", 
u
, "\">", 
t
, "</a><br>", 
p
,

774 "\n", 
NULL
);

776 
	`Såˇt_ch¨p
(
tmp
, "</ol>\n");

779 i‡(
buf
->
hªf
) {

780 
	`Såˇt_ch¨p
(
tmp
, "<hr><h2>Anchors</h2>\n<ol>\n");

781 
Æ
 = 
buf
->
hªf
;

782 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

783 
a
 = &
Æ
->
™ch‹s
[
i
];

784 i‡(
a
->
h£q
 < 0 ||á->
¶ave
)

786 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

787 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

788 
u
 = 
	`html_quŸe
(
p
);

789 i‡(
DecodeURL
)

790 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

792 
p
 = 
u
;

793 
t
 = 
	`gëAnch‹Text
(
buf
, 
Æ
, 
a
);

794 
t
 =Å ? 
	`html_quŸe
(t) : "";

795 
	`Såˇt_m_ch¨p
(
tmp
, "<li><®hªf=\"", 
u
, "\">", 
t
, "</a><br>", 
p
,

796 "\n", 
NULL
);

798 
	`Såˇt_ch¨p
(
tmp
, "</ol>\n");

801 i‡(
buf
->
img
) {

802 
	`Såˇt_ch¨p
(
tmp
, "<hr><h2>Images</h2>\n<ol>\n");

803 
Æ
 = 
buf
->
img
;

804 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

805 
a
 = &
Æ
->
™ch‹s
[
i
];

806 i‡(
a
->
¶ave
)

808 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

809 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

810 
u
 = 
	`html_quŸe
(
p
);

811 i‡(
DecodeURL
)

812 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

814 
p
 = 
u
;

815 i‡(
a
->
tôÀ
 && *a->title)

816 
t
 = 
	`html_quŸe
(
a
->
tôÀ
);

817 i‡(
DecodeURL
)

818 
t
 = 
	`html_quŸe
(
uæ_unquŸe_c⁄v


819 (
a
->
uæ
, 
buf
->
documít_ch¨£t
));

821 
t
 = 
	`html_quŸe
(
a
->
uæ
);

822 
	`Såˇt_m_ch¨p
(
tmp
, "<li><®hªf=\"", 
u
, "\">", 
t
, "</a><br>", 
p
,

823 "\n", 
NULL
);

824 
a
 = 
	`ªåõveAnch‹
(
buf
->
f‹môem
,á->
°¨t
.
löe
,á->°¨t.
pos
);

825 i‡(!
a
)

827 
fi
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

828 
fi
 = fi->
∑ª¡
->
ôem
;

829 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
 &&

830 !
	`Såcmp_ch¨p
(
fi
->
∑ª¡
->
a˘i⁄
, "m≠"Ë&& fi->
vÆue
) {

831 
M≠Li°
 *
ml
 = 
	`£¨chM≠Li°
(
buf
, 
fi
->
vÆue
->
±r
);

832 
Li°Iãm
 *
mi
;

833 
M≠Aªa
 *
m
;

834 i‡(!
ml
)

836 
	`Såˇt_ch¨p
(
tmp
, "<br>\n<b>Image map</b>\n<ol>\n");

837 
mi
 = 
ml
->
¨ó
->
fú°
; mò!
NULL
; mòmi->
√xt
) {

838 
m
 = (
M≠Aªa
 *Ë
mi
->
±r
;

839 i‡(!
m
)

841 
	`∑r£URL2
(
m
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

842 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

843 
u
 = 
	`html_quŸe
(
p
);

844 i‡(
DecodeURL
)

845 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(p,

846 
buf
->

847 
documít_ch¨£t
));

849 
p
 = 
u
;

850 i‡(
m
->
Æt
 && *m->alt)

851 
t
 = 
	`html_quŸe
(
m
->
Æt
);

852 i‡(
DecodeURL
)

853 
t
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(
m
->
uæ
,

854 
buf
->

855 
documít_ch¨£t
));

857 
t
 = 
	`html_quŸe
(
m
->
uæ
);

858 
	`Såˇt_m_ch¨p
(
tmp
, "<li><®hªf=\"", 
u
, "\">", 
t
,

859 "</a><br>", 
p
, "\n", 
NULL
);

861 
	`Såˇt_ch¨p
(
tmp
, "</ol>\n");

864 
	`Såˇt_ch¨p
(
tmp
, "</ol>\n");

867  
	`lﬂdHTMLSåög
(
tmp
);

868 
	}
}

	@backend.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<sys/ty≥s.h
>

5 
	~"fm.h
"

6 
	~<gc.h
>

7 
	~"ãrms.h
"

11 #ifde‡
HAVE_READLINE


12 
	~<ªadlöe/ªadlöe.h
>

14 *
ªadlöe
(*);

16 
TextLi°
 *
•lô
(*);

20 
gë
(
TextLi°
 *);

21 
po°
(
TextLi°
 *);

22 
£t
(
TextLi°
 *);

23 
show
(
TextLi°
 *);

24 
quô
(
TextLi°
 *);

25 
hñp
(
TextLi°
 *);

31 c⁄° *
	m«me
;

32 c⁄° *
	m›ti⁄_°rög
;

33 c⁄° *
	mhñp
;

34 (*
	mfunc
)(
	mTextLi°
*);

35 } 
	gcomm™d_èbÀ
[] = {

36 {"gë", "[-dow∆ﬂd_⁄ly] URL", "RërõvêURL.", 
gë
},

39 "RërõvêURL.", 
po°
},

40 {"£t", "VARIABLE VALUE", "Së VALUEÅÿVARIABLE.", 
£t
},

41 {"show", "VARIABLE", "Show vÆuêo‡VARIABLE.", 
show
},

42 {"quô", "", "QuôÖrogøm.", 
quô
},

43 {"hñp", "", "Di•œy hñ∞mesßges.", 
hñp
},

44 {
NULL
, NULL, NULL, NULL},

49 
£t_cﬁumn
(
TextLi°
 *);

50 
show_cﬁumn
(
TextLi°
 *);

56 c⁄° *
	m«me
;

57 (*
	m£t_func
)(
	mTextLi°
*);

58 (*
	mshow_func
)(
	mTextLi°
*);

59 } 
	gv¨übÀ_èbÀ
[] = {

60 {"cﬁumn", 
£t_cﬁumn
, 
show_cﬁumn
},

61 {
NULL
, NULL, NULL},

66 
	$¥öt_hódîs
(
Buf„r
 *
buf
, 
Àn
)

68 
TextLi°Iãm
 *
ç
;

70 i‡(
buf
->
documít_hódî
) {

71 
ç
 = 
buf
->
documít_hódî
->
fú°
;Åp;Å∞ç->
√xt
)

72 
	`¥ötf
("%s\n", 
ç
->
±r
);

74 
	`¥ötf
("w3m-cuºít-uæ: %s\n", 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

75 i‡(
buf
->
ba£URL
)

76 
	`¥ötf
("w3m-ba£-uæ: %s\n", 
	`∑r£dURL2Så
(
buf
->
ba£URL
)->
±r
);

77 
	`¥ötf
("w3m-c⁄ã¡-ty≥: %s\n", 
buf
->
ty≥
);

78 #ifde‡
USE_M17N


79 i‡(
buf
->
documít_ch¨£t
)

80 
	`¥ötf
("w3m-content-charset: %s\n",

81 
	`wc_˚s_to_ch¨£t
(
buf
->
documít_ch¨£t
));

83 i‡(
Àn
 > 0)

84 
	`¥ötf
("w3m-c⁄ã¡-Àngth: %d\n", 
Àn
);

85 
	}
}

89 
	$öã∫Æ_gë
(*
uæ
, 
Êag
, 
F‹mLi°
 *
ªque°
)

91 
Buf„r
 *
buf
;

93 
backíd_hÆfdump_buf
 = 
NULL
;

94 
do_dow∆ﬂd
 = 
Êag
;

95 
buf
 = 
	`lﬂdGíîÆFûe
(
uæ
, 
NULL
, 
NO_REFERER
, 0, 
ªque°
);

96 
do_dow∆ﬂd
 = 
FALSE
;

97 i‡(
buf
 !
NULL
 && bu‡!
NO_BUFFER
) {

98 i‡(!
	`°rˇ£cmp
(
buf
->
ty≥
, "ãxt/html"Ë&& 
backíd_hÆfdump_buf
) {

99 
TextLöeLi°Iãm
 *
p
;

100 
Så
 
fú°
, 
œ°
;

101 
Àn
 = 0;

102 
p
 = 
backíd_hÆfdump_buf
->
fú°
;Ö;Ö =Ö->
√xt
) {

103 
p
->
±r
->
löe
 = 
	`Så_c⁄v_to_hÆfdump
(p->ptr->line);

104 
Àn
 +
p
->
±r
->
löe
->
Àngth
 + 1;

106 
fú°
 = 
	`Så√w_ch¨p
("<pre>\n");

107 
œ°
 = 
	`Så√w_m_ch¨p
("</¥e><tôÀ>", 
	`html_quŸe
(
buf
->
buf„∫ame
),

108 "</tôÀ>\n", 
NULL
);

109 
	`¥öt_hódîs
(
buf
, 
Àn
 + 
fú°
->
Àngth
 + 
œ°
->length);

110 
	`¥ötf
("\n");

111 
	`¥ötf
("%s", 
fú°
->
±r
);

112 
p
 = 
backíd_hÆfdump_buf
->
fú°
;Ö;Ö =Ö->
√xt
)

113 
	`¥ötf
("%s\n", 
p
->
±r
->
löe
->ptr);

114 
	`¥ötf
("%s", 
œ°
->
±r
);

117 i‡(!
	`°rˇ£cmp
(
buf
->
ty≥
, "text/plain")) {

118 
Löe
 *
Õ
;

119 
Àn
 = 0;

120 
Õ
 = 
buf
->
fú°Löe
;Üp;Ü∞Õ->
√xt
) {

121 
Àn
 +
Õ
->len;

122 i‡(
Õ
->
löeBuf
[Õ->
Àn
 - 1] != '\n')

123 
Àn
++;

125 
	`¥öt_hódîs
(
buf
, 
Àn
);

126 
	`¥ötf
("\n");

127 
	`ßveBuf„r
(
buf
, 
°dout
, 
TRUE
);

130 
	`¥öt_hódîs
(
buf
, 0);

134 
	}
}

139 
	$gë
(
TextLi°
 *
¨gv
)

141 *
p
, *
uæ
 = 
NULL
;

142 
Êag
 = 
FALSE
;

144 (
p
 = 
	`p›Text
(
¨gv
))) {

145 i‡(!
	`°rˇ£cmp
(
p
, "-download_only"))

146 
Êag
 = 
TRUE
;

148 
uæ
 = 
p
;

150 i‡(
uæ
) {

151 
	`öã∫Æ_gë
(
uæ
, 
Êag
, 
NULL
);

153 
	}
}

158 
	$po°
(
TextLi°
 *
¨gv
)

160 
F‹mLi°
 *
ªque°
;

161 *
p
, *
èrgë
 = 
NULL
, *
ch¨£t
 = NULL,

162 *
í˘y≥
 = 
NULL
, *
body
 = NULL, *
bound¨y
 = NULL, *
uæ
 = NULL;

163 
Êag
 = 
FALSE
, 
Àngth
 = 0;

165 (
p
 = 
	`p›Text
(
¨gv
))) {

166 i‡(!
	`°rˇ£cmp
(
p
, "-download_only"))

167 
Êag
 = 
TRUE
;

168 i‡(!
	`°rˇ£cmp
(
p
, "-target"))

169 
èrgë
 = 
	`p›Text
(
¨gv
);

170 i‡(!
	`°rˇ£cmp
(
p
, "-charset"))

171 
ch¨£t
 = 
	`p›Text
(
¨gv
);

172 i‡(!
	`°rˇ£cmp
(
p
, "-enctype"))

173 
í˘y≥
 = 
	`p›Text
(
¨gv
);

174 i‡(!
	`°rˇ£cmp
(
p
, "-body"))

175 
body
 = 
	`p›Text
(
¨gv
);

176 i‡(!
	`°rˇ£cmp
(
p
, "-boundary"))

177 
bound¨y
 = 
	`p›Text
(
¨gv
);

178 i‡(!
	`°rˇ£cmp
(
p
, "-length"))

179 
Àngth
 = 
	`©ﬁ
(
	`p›Text
(
¨gv
));

181 
uæ
 = 
p
;

183 i‡(
uæ
) {

184 
ªque°
 =

185 
	`√wF‹mLi°
(
NULL
, "po°", 
ch¨£t
, 
í˘y≥
, 
èrgë
, NULL, NULL);

186 
ªque°
->
body
 = body;

187 
ªque°
->
bound¨y
 = boundary;

188 
ªque°
->
Àngth
 = (Àngth > 0Ë?Üígth : (
body
 ? 
	`°æí
(body) : 0);

189 
	`öã∫Æ_gë
(
uæ
, 
Êag
, 
ªque°
);

191 
	}
}

196 
	$£t
(
TextLi°
 *
¨gv
)

198 i‡(
¨gv
->
nôem
 > 1) {

199 
i
;

200 
i
 = 0; 
v¨übÀ_èbÀ
[i].
«me
; i++) {

201 i‡(!
	`°rˇ£cmp
(
v¨übÀ_èbÀ
[
i
].
«me
, 
¨gv
->
fú°
->
±r
)) {

202 
	`p›Text
(
¨gv
);

203 i‡(
v¨übÀ_èbÀ
[
i
].
£t_func
)

204 
v¨übÀ_èbÀ
[
i
].
	`£t_func
(
¨gv
);

209 
	}
}

214 
	$show
(
TextLi°
 *
¨gv
)

216 i‡(
¨gv
->
nôem
 >= 1) {

217 
i
;

218 
i
 = 0; 
v¨übÀ_èbÀ
[i].
«me
; i++) {

219 i‡(!
	`°rˇ£cmp
(
v¨übÀ_èbÀ
[
i
].
«me
, 
¨gv
->
fú°
->
±r
)) {

220 
	`p›Text
(
¨gv
);

221 i‡(
v¨übÀ_èbÀ
[
i
].
show_func
)

222 
v¨übÀ_èbÀ
[
i
].
	`show_func
(
¨gv
);

227 
	}
}

232 
	$quô
(
TextLi°
 *
¨gv
)

234 #ifde‡
USE_COOKIE


235 
	`ßve_cookõs
();

237 
	`w3m_exô
(0);

238 
	}
}

243 
	$hñp
(
TextLi°
 *
¨gv
)

245 
i
;

246 
i
 = 0; 
comm™d_èbÀ
[i].
«me
; i++)

247 
	`¥ötf
("%s %s\n %s\n",

248 
comm™d_èbÀ
[
i
].
«me
,

249 
comm™d_èbÀ
[
i
].
›ti⁄_°rög
, comm™d_èbÀ[i].
hñp
);

250 
	}
}

255 
	$£t_cﬁumn
(
TextLi°
 *
¨gv
)

257 i‡(
¨gv
->
nôem
 == 1) {

258 
COLS
 = 
	`©ﬁ
(
¨gv
->
fú°
->
±r
);

260 
	}
}

264 
	$show_cﬁumn
(
TextLi°
 *
¨gv
)

266 
	`Ârötf
(
°dout
, "cﬁumn=%d\n", 
COLS
);

267 
	}
}

272 
	$ˇŒ_comm™d_fun˘i⁄
(*
°r
)

274 
i
;

275 
TextLi°
 *
¨gv
 = 
	`•lô
(
°r
);

276 i‡(
¨gv
->
nôem
 > 0) {

277 
i
 = 0; 
comm™d_èbÀ
[i].
«me
; i++) {

278 i‡(!
	`°rˇ£cmp
(
comm™d_èbÀ
[
i
].
«me
, 
¨gv
->
fú°
->
±r
)) {

279 
	`p›Text
(
¨gv
);

280 i‡(
comm™d_èbÀ
[
i
].
func
)

281 
comm™d_èbÀ
[
i
].
	`func
(
¨gv
);

286 
	}
}

291 
	$backíd
()

293 *
°r
;

295 
w3m_dump
 = 0;

296 i‡(
COLS
 == 0)

297 
COLS
 = 80;

298 #ifde‡
USE_MOUSE


299 
u£_mou£
 = 
FALSE
;

302 i‡(
backíd_b©ch_comm™ds
) {

303 (
°r
 = 
	`p›Text
(
backíd_b©ch_comm™ds
)))

304 
	`ˇŒ_comm™d_fun˘i⁄
(
°r
);

307 (
°r
 = 
	`ªadlöe
("w3m> ")))

308 
	`ˇŒ_comm™d_fun˘i⁄
(
°r
);

310 
	`quô
(
NULL
);

312 
	}
}

316 #i‚de‡
HAVE_READLINE


318 
	$ªadlöe
(*
¥om±
)

320 
Så
 
s
;

321 
	`Âuts
(
¥om±
, 
°dout
);

322 
	`fÊush
(
°dout
);

323 
s
 = 
	`Såfgës
(
°dö
);

324 i‡(
	`„of
(
°dö
Ë&& (
	`°æí
(
s
->
±r
) == 0))

325  
NULL
;

327  
s
->
±r
;

328 
	}
}

333 
TextLi°
 *

334 
	$•lô
(*
p
)

336 
ö_doubÀ_quŸe
 = 
FALSE
, 
ö_sögÀ_quŸe
 = FALSE;

337 
Så
 
s
 = 
	`Så√w
();

338 
TextLi°
 *
ç
 = 
	`√wTextLi°
();

340 ; *
p
;Ö++) {

341 *
p
) {

343 i‡(
ö_sögÀ_quŸe
)

344 
	`Såˇt_ch¨
(
s
, '"');

346 
ö_doubÀ_quŸe
 = !in_double_quote;

349 i‡(
ö_doubÀ_quŸe
)

350 
	`Såˇt_ch¨
(
s
, '\'');

352 
ö_sögÀ_quŸe
 = !in_single_quote;

355 i‡(!
ö_sögÀ_quŸe
) {

357 
p
++;

358 *
p
) {

360 
	`Såˇt_ch¨
(
s
, '\t');

363 
	`Såˇt_ch¨
(
s
, '\r');

366 
	`Såˇt_ch¨
(
s
, '\f');

369 
	`Såˇt_ch¨
(
s
, '\n');

372 
LAST
;

374 
	`Såˇt_ch¨
(
s
, *
p
);

378 
	`Såˇt_ch¨
(
s
, *
p
);

387 i‡(
ö_doubÀ_quŸe
 || 
ö_sögÀ_quŸe
) {

388 
	`Såˇt_ch¨
(
s
, *
p
);

390 i‡(
s
->
Àngth
 > 0) {

391 
	`pushText
(
ç
, 
s
->
±r
);

392 
s
 = 
	`Så√w
();

396 
	`Såˇt_ch¨
(
s
, *
p
);

399 
LAST
:

400 i‡(
s
->
Àngth
 > 0)

401 
	`pushText
(
ç
, 
s
->
±r
);

402  
ç
;

403 
	}
}

	@buffer.c

2 
	~"fm.h
"

4 #ifde‡
USE_MOUSE


5 #ifde‡
USE_GPM


6 
	~<gpm.h
>

8 #i‡
deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

9 
do_gëch
();

10 
	#gëch
(Ë
	`do_gëch
()

	)

14 #ifde‡
__EMX__


15 
	~<sys/kbdsˇn.h
>

16 
	~<°rögs.h
>

18 *
	gNuŒLöe
 = "";

19 
Löïr›
 
	gNuŒPr›
[] = { 0 };

24 
Buf„r
 *

25 
	$√wBuf„r
(
width
)

27 
Buf„r
 *
n
;

29 
n
 = 
	`New
(
Buf„r
);

30 i‡(
n
 =
NULL
)

31  
NULL
;

32 
	`bzîo
((*)
n
, (
Buf„r
));

33 
n
->
width
 = width;

34 
n
->
COLS
 = COLS;

35 
n
->
LINES
 = 
LASTLINE
;

36 
n
->
cuºítURL
.
scheme
 = 
SCM_UNKNOWN
;

37 
n
->
ba£URL
 = 
NULL
;

38 
n
->
ba£T¨gë
 = 
NULL
;

39 
n
->
buf„∫ame
 = "";

40 
n
->
buf„Ωr›
 = 
BP_NORMAL
;

41 
n
->
˛⁄e
 = 
	`New
();

42 *
n
->
˛⁄e
 = 1;

43 
n
->
åbyã
 = 0;

44 #ifde‡
USE_SSL


45 
n
->
s¶_˚πifiˇã
 = 
NULL
;

47 #ifde‡
USE_M17N


48 
n
->
auto_dëe˘
 = 
WcO±i⁄
.auto_detect;

50  
n
;

51 
	}
}

56 
Buf„r
 *

57 
	$nuŒBuf„r
()

59 
Buf„r
 *
b
;

61 
b
 = 
	`√wBuf„r
(
COLS
);

62 
b
->
buf„∫ame
 = "*Null*";

63  
b
;

64 
	}
}

70 
	$˛órBuf„r
(
Buf„r
 *
buf
)

72 
buf
->
fú°Löe
 = buf->
t›Löe
 = buf->
cuºítLöe
 = buf->
œ°Löe
 = 
NULL
;

73 
buf
->
ÆlLöe
 = 0;

74 
	}
}

81 
	$disˇrdBuf„r
(
Buf„r
 *
buf
)

83 
i
;

84 
Buf„r
 *
b
;

86 #ifde‡
USE_IMAGE


87 
	`dñëeImage
(
buf
);

89 
	`˛órBuf„r
(
buf
);

90 
i
 = 0; i < 
MAX_LB
; i++) {

91 
b
 = 
buf
->
lökBuf„r
[
i
];

92 i‡(
b
 =
NULL
)

94 
b
->
lökBuf„r
[
REV_LB
[
i
]] = 
NULL
;

96 i‡(
buf
->
ßveˇche
)

97 
	`u∆ök
(
buf
->
ßveˇche
);

98 i‡(--(*
buf
->
˛⁄e
))

100 i‡(
buf
->
∑gîSour˚
)

101 
	`IS˛o£
(
buf
->
∑gîSour˚
);

102 i‡(
buf
->
sour˚fûe
 &&

103 (!
buf
->
ªÆ_ty≥
 || 
	`°∫ˇ£cmp
(buf->real_type, "image/", 6))) {

104 i‡(
buf
->
ªÆ_scheme
 !
SCM_LOCAL
 || buf->
buf„Ωr›
 & 
BP_FRAME
)

105 
	`u∆ök
(
buf
->
sour˚fûe
);

107 i‡(
buf
->
hódî_sour˚
)

108 
	`u∆ök
(
buf
->
hódî_sour˚
);

109 i‡(
buf
->
maûˇp_sour˚
)

110 
	`u∆ök
(
buf
->
maûˇp_sour˚
);

111 
buf
->
‰ame£t
) {

112 
	`dñëeFømeSë
(
buf
->
‰ame£t
);

113 
buf
->
‰ame£t
 = 
	`p›FømeTªe
(&(buf->
‰ameQ
));

115 
	}
}

120 
Buf„r
 *

121 
	$«medBuf„r
(
Buf„r
 *
fú°
, *
«me
)

123 
Buf„r
 *
buf
;

125 i‡(!
	`°rcmp
(
fú°
->
buf„∫ame
, 
«me
)) {

126  
fú°
;

128 
buf
 = 
fú°
; buf->
√xtBuf„r
 !
NULL
; buf = buf->nextBuffer) {

129 i‡(!
	`°rcmp
(
buf
->
√xtBuf„r
->
buf„∫ame
, 
«me
)) {

130  
buf
->
√xtBuf„r
;

133  
NULL
;

134 
	}
}

139 
Buf„r
 *

140 
	$dñëeBuf„r
(
Buf„r
 *
fú°
, Buf„∏*
dñbuf
)

142 
Buf„r
 *
buf
, *
b
;

144 i‡(
fú°
 =
dñbuf
 && fú°->
√xtBuf„r
 !
NULL
) {

145 
buf
 = 
fú°
->
√xtBuf„r
;

146 
	`disˇrdBuf„r
(
fú°
);

147  
buf
;

149 i‡((
buf
 = 
	`¥evBuf„r
(
fú°
, 
dñbuf
)Ë!
NULL
) {

150 
b
 = 
buf
->
√xtBuf„r
;

151 
buf
->
√xtBuf„r
 = 
b
->nextBuffer;

152 
	`disˇrdBuf„r
(
b
);

154  
fú°
;

155 
	}
}

160 
Buf„r
 *

161 
	$ª∂a˚Buf„r
(
Buf„r
 *
fú°
, Buf„∏*
dñbuf
, Buf„∏*
√wbuf
)

163 
Buf„r
 *
buf
;

165 i‡(
dñbuf
 =
NULL
) {

166 
√wbuf
->
√xtBuf„r
 = 
fú°
;

167  
√wbuf
;

169 i‡(
fú°
 =
dñbuf
) {

170 
√wbuf
->
√xtBuf„r
 = 
dñbuf
->nextBuffer;

171 
	`disˇrdBuf„r
(
dñbuf
);

172  
√wbuf
;

174 i‡(
dñbuf
 && (
buf
 = 
	`¥evBuf„r
(
fú°
, delbuf))) {

175 
buf
->
√xtBuf„r
 = 
√wbuf
;

176 
√wbuf
->
√xtBuf„r
 = 
dñbuf
->nextBuffer;

177 
	`disˇrdBuf„r
(
dñbuf
);

178  
fú°
;

180 
√wbuf
->
√xtBuf„r
 = 
fú°
;

181  
√wbuf
;

182 
	}
}

184 
Buf„r
 *

185 
	$¡hBuf„r
(
Buf„r
 *
fú°buf
, 
n
)

187 
i
;

188 
Buf„r
 *
buf
 = 
fú°buf
;

190 i‡(
n
 < 0)

191  
fú°buf
;

192 
i
 = 0; i < 
n
; i++) {

193 i‡(
buf
 =
NULL
)

194  
NULL
;

195 
buf
 = buf->
√xtBuf„r
;

197  
buf
;

198 
	}
}

201 
	$wrôeBuf„rName
(
Buf„r
 *
buf
, 
n
)

203 
Så
 
msg
;

204 
Æl
;

206 
Æl
 = 
buf
->
ÆlLöe
;

207 i‡(
Æl
 =0 && 
buf
->
œ°Löe
 !
NULL
)

208 
Æl
 = 
buf
->
œ°Löe
->
löíumbî
;

209 
	`move
(
n
, 0);

211 
msg
 = 
	`S¥ötf
("<%s> [%dÜöes]", 
buf
->
buf„∫ame
, 
Æl
);

212 i‡(
buf
->
fûíame
 !
NULL
) {

213 
buf
->
cuºítURL
.
scheme
) {

214 
SCM_LOCAL
:

215 
SCM_LOCAL_CGI
:

216 i‡(
	`°rcmp
(
buf
->
cuºítURL
.
fûe
, "-")) {

217 
	`Såˇt_ch¨
(
msg
, ' ');

218 
	`Såˇt_ch¨p
(
msg
, 
	`c⁄v_‰om_sy°em
(
buf
->
cuºítURL
.
ªÆ_fûe
));

221 
SCM_UNKNOWN
:

222 
SCM_MISSING
:

225 
	`Såˇt_ch¨
(
msg
, ' ');

226 
	`Såˇt
(
msg
, 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
));

230 
	`addn°r_sup
(
msg
->
±r
, 
COLS
 - 1);

231 
	}
}

238 
	$gŸoLöe
(
Buf„r
 *
buf
, 
n
)

240 
msg
[32];

241 
Löe
 *
l
 = 
buf
->
fú°Löe
;

243 i‡(
l
 =
NULL
)

245 i‡(
buf
->
∑gîSour˚
 && !(buf->
buf„Ωr›
 & 
BP_CLOSE
)) {

246 i‡(
buf
->
œ°Löe
->
löíumbî
 < 
n
)

247 
	`gëNextPage
(
buf
, 
n
 - buf->
œ°Löe
->
löíumbî
);

248 (
buf
->
œ°Löe
->
löíumbî
 < 
n
) &&

249 (
	`gëNextPage
(
buf
, 1Ë!
NULL
)) ;

251 i‡(
l
->
löíumbî
 > 
n
) {

253 
	`•rötf
(
msg
, "Fú°Üöêi†#%ld", 
l
->
löíumbî
);

254 
	`£t_dñayed_mesßge
(
msg
);

255 
buf
->
t›Löe
 = buf->
cuºítLöe
 = 
l
;

258 i‡(
buf
->
œ°Löe
->
löíumbî
 < 
n
) {

259 
l
 = 
buf
->
œ°Löe
;

261 
	`•rötf
(
msg
, "La°Üöêi†#%ld", 
buf
->
œ°Löe
->
löíumbî
);

262 
	`£t_dñayed_mesßge
(
msg
);

263 
buf
->
cuºítLöe
 = 
l
;

264 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->
cuºítLöe
, -(buf->
LINES
 - 1),

265 
FALSE
);

268 ; 
l
 !
NULL
;Ü =Ü->
√xt
) {

269 i‡(
l
->
löíumbî
 >
n
) {

270 
buf
->
cuºítLöe
 = 
l
;

271 i‡(
n
 < 
buf
->
t›Löe
->
löíumbî
 ||

272 
buf
->
t›Löe
->
löíumbî
 + buf->
LINES
 <
n
)

273 
buf
->
t›Löe
 = 
	`löeSkù
(buf, 
l
, -(buf->
LINES
 + 1Ë/ 2, 
FALSE
);

277 
	}
}

283 
	$gŸoRólLöe
(
Buf„r
 *
buf
, 
n
)

285 
msg
[32];

286 
Löe
 *
l
 = 
buf
->
fú°Löe
;

288 i‡(
l
 =
NULL
)

290 i‡(
buf
->
∑gîSour˚
 && !(buf->
buf„Ωr›
 & 
BP_CLOSE
)) {

291 i‡(
buf
->
œ°Löe
->
ªÆ_löíumbî
 < 
n
)

292 
	`gëNextPage
(
buf
, 
n
 - buf->
œ°Löe
->
ªÆ_löíumbî
);

293 (
buf
->
œ°Löe
->
ªÆ_löíumbî
 < 
n
) &&

294 (
	`gëNextPage
(
buf
, 1Ë!
NULL
)) ;

296 i‡(
l
->
ªÆ_löíumbî
 > 
n
) {

298 
	`•rötf
(
msg
, "Fú°Üöêi†#%ld", 
l
->
ªÆ_löíumbî
);

299 
	`£t_dñayed_mesßge
(
msg
);

300 
buf
->
t›Löe
 = buf->
cuºítLöe
 = 
l
;

303 i‡(
buf
->
œ°Löe
->
ªÆ_löíumbî
 < 
n
) {

304 
l
 = 
buf
->
œ°Löe
;

306 
	`•rötf
(
msg
, "La°Üöêi†#%ld", 
buf
->
œ°Löe
->
ªÆ_löíumbî
);

307 
	`£t_dñayed_mesßge
(
msg
);

308 
buf
->
cuºítLöe
 = 
l
;

309 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->
cuºítLöe
, -(buf->
LINES
 - 1),

310 
FALSE
);

313 ; 
l
 !
NULL
;Ü =Ü->
√xt
) {

314 i‡(
l
->
ªÆ_löíumbî
 >
n
) {

315 
buf
->
cuºítLöe
 = 
l
;

316 i‡(
n
 < 
buf
->
t›Löe
->
ªÆ_löíumbî
 ||

317 
buf
->
t›Löe
->
ªÆ_löíumbî
 + buf->
LINES
 <
n
)

318 
buf
->
t›Löe
 = 
	`löeSkù
(buf, 
l
, -(buf->
LINES
 + 1Ë/ 2, 
FALSE
);

322 
	}
}

325 
Buf„r
 *

326 
	$li°Buf„r
(
Buf„r
 *
t›
, Buf„∏*
cuºít
)

328 
i
, 
c
 = 0;

329 
Buf„r
 *
buf
 = 
t›
;

331 
	`move
(0, 0);

332 #ifde‡
USE_COLOR


333 i‡(
u£Cﬁ‹
) {

334 
	`£tfcﬁ‹
(
basic_cﬁ‹
);

335 #ifde‡
USE_BG_COLOR


336 
	`£tbcﬁ‹
(
bg_cﬁ‹
);

340 
	`˛πobŸx
();

341 
i
 = 0; i < 
LASTLINE
; i++) {

342 i‡(
buf
 =
cuºít
) {

343 
c
 = 
i
;

344 
	`°™dout
();

346 
	`wrôeBuf„rName
(
buf
, 
i
);

347 i‡(
buf
 =
cuºít
) {

348 
	`°™díd
();

349 
	`˛π€ﬁx
();

350 
	`move
(
i
, 0);

351 
	`toggÀ_°™d
();

354 
	`˛π€ﬁx
();

355 i‡(
buf
->
√xtBuf„r
 =
NULL
) {

356 
	`move
(
i
 + 1, 0);

357 
	`˛πobŸx
();

360 
buf
 = buf->
√xtBuf„r
;

362 
	`°™dout
();

364 
	`mesßge
("Buffer selection mode: SPC for select / D for delete buffer", 0,

366 
	`°™díd
();

369 
	`move
(
c
, 0);

370 
	`ª‰esh
();

371  
buf
->
√xtBuf„r
;

372 
	}
}

378 
Buf„r
 *

379 
	$£À˘Buf„r
(
Buf„r
 *
fú°buf
, Buf„∏*
cuºítbuf
, *
£À˘ch¨
)

381 
i
, 
˝oöt
,

382 
•oöt
,

383 
maxbuf
, 
s˛imô
 = 
LASTLINE
;

385 
Buf„r
 *
buf
, *
t›buf
;

386 
c
;

388 
i
 = 
˝oöt
 = 0;

389 
buf
 = 
fú°buf
; bu‡!
NULL
; bu‡buf->
√xtBuf„r
) {

390 i‡(
buf
 =
cuºítbuf
)

391 
˝oöt
 = 
i
;

392 
i
++;

394 
maxbuf
 = 
i
;

396 i‡(
˝oöt
 >
s˛imô
) {

397 
•oöt
 = 
s˛imô
 / 2;

398 
t›buf
 = 
	`¡hBuf„r
(
fú°buf
, 
˝oöt
 - 
•oöt
);

401 
t›buf
 = 
fú°buf
;

402 
•oöt
 = 
˝oöt
;

404 
	`li°Buf„r
(
t›buf
, 
cuºítbuf
);

407 i‡((
c
 = 
	`gëch
()Ë=
ESC_CODE
) {

408 i‡((
c
 = 
	`gëch
()) == '[' || c == 'O') {

409 
c
 = 
	`gëch
()) {

411 
c
 = 'k';

414 
c
 = 'j';

417 
c
 = ' ';

420 
c
 = 'B';

425 #ifde‡
__EMX__


426 i‡(!
c
)

427 
	`gëch
()) {

428 
K_UP
:

429 
c
 = 'k';

431 
K_DOWN
:

432 
c
 = 'j';

434 
K_RIGHT
:

435 
c
 = ' ';

437 
K_LEFT
:

438 
c
 = 'B';

441 
c
) {

442 
CTRL_N
:

444 i‡(
•oöt
 < 
s˛imô
 - 1) {

445 i‡(
cuºítbuf
->
√xtBuf„r
 =
NULL
)

447 
	`wrôeBuf„rName
(
cuºítbuf
, 
•oöt
);

448 
cuºítbuf
 = cuºítbuf->
√xtBuf„r
;

449 
˝oöt
++;

450 
•oöt
++;

451 
	`°™dout
();

452 
	`wrôeBuf„rName
(
cuºítbuf
, 
•oöt
);

453 
	`°™díd
();

454 
	`move
(
•oöt
, 0);

455 
	`toggÀ_°™d
();

457 i‡(
˝oöt
 < 
maxbuf
 - 1) {

458 
t›buf
 = 
cuºítbuf
;

459 
cuºítbuf
 = cuºítbuf->
√xtBuf„r
;

460 
˝oöt
++;

461 
•oöt
 = 1;

462 
	`li°Buf„r
(
t›buf
, 
cuºítbuf
);

465 
CTRL_P
:

467 i‡(
•oöt
 > 0) {

468 
	`wrôeBuf„rName
(
cuºítbuf
, 
•oöt
);

469 
cuºítbuf
 = 
	`¡hBuf„r
(
t›buf
, --
•oöt
);

470 
˝oöt
--;

471 
	`°™dout
();

472 
	`wrôeBuf„rName
(
cuºítbuf
, 
•oöt
);

473 
	`°™díd
();

474 
	`move
(
•oöt
, 0);

475 
	`toggÀ_°™d
();

477 i‡(
˝oöt
 > 0) {

478 
i
 = 
˝oöt
 - 
s˛imô
;

479 i‡(
i
 < 0)

480 
i
 = 0;

481 
˝oöt
--;

482 
•oöt
 = 
˝oöt
 - 
i
;

483 
cuºítbuf
 = 
	`¡hBuf„r
(
fú°buf
, 
˝oöt
);

484 
t›buf
 = 
	`¡hBuf„r
(
fú°buf
, 
i
);

485 
	`li°Buf„r
(
t›buf
, 
cuºítbuf
);

489 *
£À˘ch¨
 = 
c
;

490  
cuºítbuf
;

495 
	`move
(
•oöt
, 0);

496 
	`ª‰esh
();

498 
	}
}

504 
	$ªsh≠eBuf„r
(
Buf„r
 *
buf
)

506 
URLFûe
 
f
;

507 
Buf„r
 
sbuf
;

508 #ifde‡
USE_M17N


509 
wc_uöt8
 
ﬁd_auto_dëe˘
 = 
WcO±i⁄
.
auto_dëe˘
;

512 i‡(!
buf
->
√ed_ªsh≠e
)

514 
buf
->
√ed_ªsh≠e
 = 
FALSE
;

515 
buf
->
width
 = 
INIT_BUFFER_WIDTH
;

516 i‡(
buf
->
sour˚fûe
 =
NULL
)

518 
	`öô_°ªam
(&
f
, 
SCM_LOCAL
, 
NULL
);

519 
	`examöeFûe
(
buf
->
maûˇp_sour˚
 ? buf->maûˇp_sour˚ : buf->
sour˚fûe
,

520 &
f
);

521 i‡(
f
.
°ªam
 =
NULL
)

523 
	`c›yBuf„r
(&
sbuf
, 
buf
);

524 
	`˛órBuf„r
(
buf
);

525 
buf
->
‰ame£t
) {

526 
	`dñëeFømeSë
(
buf
->
‰ame£t
);

527 
buf
->
‰ame£t
 = 
	`p›FømeTªe
(&(buf->
‰ameQ
));

530 
buf
->
hªf
 = 
NULL
;

531 
buf
->
«me
 = 
NULL
;

532 
buf
->
img
 = 
NULL
;

533 
buf
->
f‹môem
 = 
NULL
;

534 
buf
->
f‹mli°
 = 
NULL
;

535 
buf
->
lökli°
 = 
NULL
;

536 
buf
->
m≠li°
 = 
NULL
;

537 i‡(
buf
->
hm¨kli°
)

538 
buf
->
hm¨kli°
->
nm¨k
 = 0;

539 i‡(
buf
->
im¨kli°
)

540 
buf
->
im¨kli°
->
nm¨k
 = 0;

542 i‡(
buf
->
hódî_sour˚
) {

543 i‡(
buf
->
cuºítURL
.
scheme
 !
SCM_LOCAL
 ||

544 
buf
->
maûˇp_sour˚
 || !
	`°rcmp
(buf->
cuºítURL
.
fûe
, "-")) {

545 
URLFûe
 
h
;

546 
	`öô_°ªam
(&
h
, 
SCM_LOCAL
, 
NULL
);

547 
	`examöeFûe
(
buf
->
hódî_sour˚
, &
h
);

548 i‡(
h
.
°ªam
) {

549 
	`ªadHódî
(&
h
, 
buf
, 
TRUE
, 
NULL
);

550 
	`UF˛o£
(&
h
);

553 i‡(
buf
->
£¨ch_hódî
)

554 
	`ªadHódî
(&
f
, 
buf
, 
TRUE
, 
NULL
);

557 #ifde‡
USE_M17N


558 
WcO±i⁄
.
auto_dëe˘
 = 
WC_OPT_DETECT_OFF
;

559 
U£C⁄ã¡Ch¨£t
 = 
FALSE
;

561 i‡(!
	`°rˇ£cmp
(
buf
->
ty≥
, "text/html"))

562 
	`lﬂdHTMLBuf„r
(&
f
, 
buf
);

564 
	`lﬂdBuf„r
(&
f
, 
buf
);

565 
	`UF˛o£
(&
f
);

566 #ifde‡
USE_M17N


567 
WcO±i⁄
.
auto_dëe˘
 = 
ﬁd_auto_dëe˘
;

568 
U£C⁄ã¡Ch¨£t
 = 
TRUE
;

571 
buf
->
height
 = 
LASTLINE
 + 1;

572 i‡(
buf
->
fú°Löe
 && 
sbuf
.firstLine) {

573 
Löe
 *
cur
 = 
sbuf
.
cuºítLöe
;

574 
n
;

576 
buf
->
pos
 = 
sbuf
.po†+ 
cur
->
bpos
;

577 
cur
->
bpos
 && cur->
¥ev
)

578 
cur
 = cur->
¥ev
;

579 i‡(
cur
->
ªÆ_löíumbî
 > 0)

580 
	`gŸoRólLöe
(
buf
, 
cur
->
ªÆ_löíumbî
);

582 
	`gŸoLöe
(
buf
, 
cur
->
löíumbî
);

583 
n
 = (
buf
->
cuºítLöe
->
löíumbî
 - buf->
t›Löe
->linenumber)

584 - (
cur
->
löíumbî
 - 
sbuf
.
t›Löe
->linenumber);

585 i‡(
n
) {

586 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->t›Löe, 
n
, 
FALSE
);

587 i‡(
cur
->
ªÆ_löíumbî
 > 0)

588 
	`gŸoRólLöe
(
buf
, 
cur
->
ªÆ_löíumbî
);

590 
	`gŸoLöe
(
buf
, 
cur
->
löíumbî
);

592 
buf
->
pos
 -buf->
cuºítLöe
->
bpos
;

593 i‡(
FﬁdLöe
 && 
	`°rˇ£cmp
(
buf
->
ty≥
, "text/html"))

594 
buf
->
cuºítCﬁumn
 = 0;

596 
buf
->
cuºítCﬁumn
 = 
sbuf
.currentColumn;

597 
	`¨øngeCurs‹
(
buf
);

599 i‡(
buf
->
check_uæ
 & 
CHK_URL
)

600 
	`chkURLBuf„r
(
buf
);

601 #ifde‡
USE_NNTP


602 i‡(
buf
->
check_uæ
 & 
CHK_NMID
)

603 
	`chkNMIDBuf„r
(
buf
);

604 i‡(
buf
->
ªÆ_scheme
 =
SCM_NNTP
 || buf->ªÆ_schemê=
SCM_NEWS
)

605 
	`ªAnch‹Newshódî
(
buf
);

607 
	`f‹mRe£tBuf„r
(
buf
, 
sbuf
.
f‹môem
);

608 
	}
}

612 
	$c›yBuf„r
(
Buf„r
 *
a
, Buf„∏*
b
)

614 
	`ªadBuf„rCache
(
b
);

615 
	`bc›y
((*)
b
, (*)
a
, (
Buf„r
));

616 
	}
}

618 
Buf„r
 *

619 
	$¥evBuf„r
(
Buf„r
 *
fú°
, Buf„∏*
buf
)

621 
Buf„r
 *
b
;

623 
b
 = 
fú°
; b !
NULL
 && b->
√xtBuf„r
 !
buf
; b = b->nextBuffer) ;

624  
b
;

625 
	}
}

627 
	#fwrôe1
(
d
, 
f
Ë(
	`fwrôe
(&d, (d), 1, f)==0)

	)

628 
	#‰ód1
(
d
, 
f
Ë(
	`‰ód
(&d, (d), 1, f)==0)

	)

631 
	$wrôeBuf„rCache
(
Buf„r
 *
buf
)

633 
Så
 
tmp
;

634 
FILE
 *
ˇche
 = 
NULL
;

635 
Löe
 *
l
;

636 #ifde‡
USE_ANSI_COLOR


637 
cﬁ‹Êag
;

640 i‡(
buf
->
ßveˇche
)

643 i‡(
buf
->
fú°Löe
 =
NULL
)

644 
_îr‹1
;

646 
tmp
 = 
	`tmp‚ame
(
TMPF_CACHE
, 
NULL
);

647 
buf
->
ßveˇche
 = 
tmp
->
±r
;

648 
ˇche
 = 
	`f›í
(
buf
->
ßveˇche
, "w");

649 i‡(!
ˇche
)

650 
_îr‹1
;

652 i‡(
	`fwrôe1
(
buf
->
cuºítLöe
->
löíumbî
, 
ˇche
) ||

653 
	`fwrôe1
(
buf
->
t›Löe
->
löíumbî
, 
ˇche
))

654 
_îr‹
;

656 
l
 = 
buf
->
fú°Löe
;Ü;Ü =Ü->
√xt
) {

657 i‡(
	`fwrôe1
(
l
->
ªÆ_löíumbî
, 
ˇche
) ||

658 
	`fwrôe1
(
l
->
u§Êags
, 
ˇche
) ||

659 
	`fwrôe1
(
l
->
width
, 
ˇche
) ||

660 
	`fwrôe1
(
l
->
Àn
, 
ˇche
) ||

661 
	`fwrôe1
(
l
->
size
, 
ˇche
) ||

662 
	`fwrôe1
(
l
->
bpos
, 
ˇche
Ë|| fwrôe1÷->
bwidth
, cache))

663 
_îr‹
;

664 i‡(
l
->
bpos
 == 0) {

665 i‡(
	`fwrôe
(
l
->
löeBuf
, 1,Ü->
size
, 
ˇche
) <Ü->size ||

666 
	`fwrôe
(
l
->
¥›Buf
, (
Löïr›
),Ü->
size
, 
ˇche
) <Ü->size)

667 
_îr‹
;

669 #ifde‡
USE_ANSI_COLOR


670 
cﬁ‹Êag
 = 
l
->
cﬁ‹Buf
 ? 1 : 0;

671 i‡(
	`fwrôe1
(
cﬁ‹Êag
, 
ˇche
))

672 
_îr‹
;

673 i‡(
cﬁ‹Êag
) {

674 i‡(
l
->
bpos
 == 0) {

675 i‡(
	`fwrôe
(
l
->
cﬁ‹Buf
, (
Löecﬁ‹
),Ü->
size
, 
ˇche
) <

676 
l
->
size
)

677 
_îr‹
;

683 
	`f˛o£
(
ˇche
);

685 
_îr‹
:

686 
	`f˛o£
(
ˇche
);

687 
	`u∆ök
(
buf
->
ßveˇche
);

688 
_îr‹1
:

689 
buf
->
ßveˇche
 = 
NULL
;

691 
	}
}

694 
	$ªadBuf„rCache
(
Buf„r
 *
buf
)

696 
FILE
 *
ˇche
;

697 
Löe
 *
l
 = 
NULL
, *
¥evl
 = NULL, *
ba£l
 = NULL;

698 
 um
 = 0, 
˛num
, 
énum
;

699 #ifde‡
USE_ANSI_COLOR


700 
cﬁ‹Êag
;

703 i‡(
buf
->
ßveˇche
 =
NULL
)

706 
ˇche
 = 
	`f›í
(
buf
->
ßveˇche
, "r");

707 i‡(
ˇche
 =
NULL
 || 
	`‰ód1
(
˛num
, cacheË|| fªad1(
énum
, cache)) {

708 
buf
->
ßveˇche
 = 
NULL
;

712 !
	`„of
(
ˇche
)) {

713 
 um
++;

714 
¥evl
 = 
l
;

715 
l
 = 
	`New
(
Löe
);

716 
l
->
¥ev
 = 
¥evl
;

717 i‡(
¥evl
)

718 
¥evl
->
√xt
 = 
l
;

720 
buf
->
fú°Löe
 = 
l
;

721 
l
->
löíumbî
 = 
 um
;

722 i‡(
 um
 =
˛num
)

723 
buf
->
cuºítLöe
 = 
l
;

724 i‡(
 um
 =
énum
)

725 
buf
->
t›Löe
 = 
l
;

726 i‡(
	`‰ód1
(
l
->
ªÆ_löíumbî
, 
ˇche
) ||

727 
	`‰ód1
(
l
->
u§Êags
, 
ˇche
) ||

728 
	`‰ód1
(
l
->
width
, 
ˇche
) ||

729 
	`‰ód1
(
l
->
Àn
, 
ˇche
) ||

730 
	`‰ód1
(
l
->
size
, 
ˇche
) ||

731 
	`‰ód1
(
l
->
bpos
, 
ˇche
Ë|| fªad1÷->
bwidth
, cache))

733 i‡(
l
->
bpos
 == 0) {

734 
ba£l
 = 
l
;

735 
l
->
löeBuf
 = 
	`NewAtom_N
(,Ü->
size
 + 1);

736 
	`‰ód
(
l
->
löeBuf
, 1,Ü->
size
, 
ˇche
);

737 
l
->
löeBuf
[l->
size
] = '\0';

738 
l
->
¥›Buf
 = 
	`NewAtom_N
(
Löïr›
,Ü->
size
);

739 
	`‰ód
(
l
->
¥›Buf
, (
Löïr›
),Ü->
size
, 
ˇche
);

741 i‡(
ba£l
) {

742 
l
->
löeBuf
 = 
ba£l
->löeBu‡+Ü->
bpos
;

743 
l
->
¥›Buf
 = 
ba£l
->¥›Bu‡+Ü->
bpos
;

747 #ifde‡
USE_ANSI_COLOR


748 i‡(
	`‰ód1
(
cﬁ‹Êag
, 
ˇche
))

750 i‡(
cﬁ‹Êag
) {

751 i‡(
l
->
bpos
 == 0) {

752 
l
->
cﬁ‹Buf
 = 
	`NewAtom_N
(
Löecﬁ‹
,Ü->
size
);

753 
	`‰ód
(
l
->
cﬁ‹Buf
, (
Löecﬁ‹
),Ü->
size
, 
ˇche
);

756 
l
->
cﬁ‹Buf
 = 
ba£l
->cﬁ‹Bu‡+Ü->
bpos
;

759 
l
->
cﬁ‹Buf
 = 
NULL
;

763 
buf
->
œ°Löe
 = 
¥evl
;

764 
buf
->
œ°Löe
->
√xt
 = 
NULL
;

765 
	`f˛o£
(
ˇche
);

766 
	`u∆ök
(
buf
->
ßveˇche
);

767 
buf
->
ßveˇche
 = 
NULL
;

769 
	}
}

	@config.h

2 #i‚de‡
CONFIG_H_SEEN


3 
	#CONFIG_H_SEEN


	)

7 
	#JA
 0

	)

8 
	#EN
 1

	)

11 
	#PACKAGE
 "w3m"

	)

13 
	#HELP_FILE
 "w3mhñp-w3m_í.html"

	)

14 
	#HELP_CGI
 "w3mhñp"

	)

15 
	#W3MCONFIG
 "w3mc⁄fig"

	)

16 
	#IMGDISPLAY
 "w3mimgdi•œy"

	)

17 
	#XFACE2XPM
 "xÁ˚2xpm"

	)

19 
	#BOOKMARK
 "bookm¨k.html"

	)

20 
	#CONFIG_FILE
 "c⁄fig"

	)

21 
	#KEYMAP_FILE
 "keym≠"

	)

22 
	#MENU_FILE
 "míu"

	)

23 
	#MOUSE_FILE
 "mou£"

	)

24 
	#COOKIE_FILE
 "cookõ"

	)

25 
	#HISTORY_FILE
 "hi°‹y"

	)

27 
	#PASSWD_FILE
 
RC_DIR
 "/∑sswd"

	)

28 
	#PRE_FORM_FILE
 
RC_DIR
 "/¥e_f‹m"

	)

29 
	#USER_MAILCAP
 
RC_DIR
 "/maûˇp"

	)

30 
	#SYS_MAILCAP
 
CONF_DIR
 "/maûˇp"

	)

31 
	#USER_MIMETYPES
 "~/.mime.ty≥s"

	)

32 
	#SYS_MIMETYPES
 
ETC_DIR
 "/mime.ty≥s"

	)

33 
	#USER_URIMETHODMAP
 
RC_DIR
 "/urimëhodm≠"

	)

34 
	#SYS_URIMETHODMAP
 
CONF_DIR
 "/urimëhodm≠"

	)

36 
	#DEF_SAVE_FILE
 "ödex.html"

	)

39 
	#DISPLAY_CHARSET
 
WC_CES_UTF_8


	)

40 
	#SYSTEM_CHARSET
 
WC_CES_UTF_8


	)

41 
	#DOCUMENT_CHARSET
 
WC_CES_UTF_8


	)

42 
	#USE_M17N
 1

	)

43 
	#USE_UNICODE
 1

	)

44 
	#W3M_LANG
 
EN


	)

45 
	#LANG
 
W3M_LANG


	)

49 
	#ENABLE_NLS
 1

	)

51 
	#USE_COLOR
 1

	)

52 
	#USE_ANSI_COLOR
 1

	)

53 
	#USE_BG_COLOR
 1

	)

55 
	#USE_MARK


	)

56 
	#USE_MOUSE
 1

	)

57 
	#USE_GPM
 1

	)

59 
	#USE_MENU
 1

	)

60 
	#USE_COOKIE
 1

	)

61 
	#USE_DIGEST_AUTH
 1

	)

62 
	#USE_SSL
 1

	)

63 
	#USE_SSL_VERIFY
 1

	)

64 
	#USE_HELP_CGI
 1

	)

65 
	#USE_EXTERNAL_URI_LOADER
 1

	)

66 
	#USE_W3MMAILER
 1

	)

67 
	#USE_NNTP
 1

	)

68 
	#USE_GOPHER
 1

	)

69 
	#USE_ALARM
 1

	)

70 
	#USE_IMAGE
 1

	)

71 
	#USE_W3MIMG_X11
 1

	)

72 
	#USE_W3MIMG_FB
 1

	)

75 
	#USE_GDKPIXBUF
 1

	)

76 
	#USE_GTK2
 1

	)

78 
	#USE_XFACE
 1

	)

79 
	#USE_DICT
 1

	)

80 
	#USE_GOOGLE
 1

	)

81 
	#USE_GOOGLE_LUCKY
 1

	)

82 
	#USE_HISTORY
 1

	)

84 
	#ID_EXT


	)

86 
	#INET6
 1

	)

88 
	#USE_EGD


	)

89 
	#ENABLE_REMOVE_TRAILINGSPACES


	)

94 
	#NOWRAP


	)

95 
	#MATRIX


	)

97 
	#DEF_EDITOR
 "/bö/vi"

	)

98 
	#DEF_MAILER
 "gnome-›í maûto:%s"

	)

99 
	#DEF_EXT_BROWSER
 "gnome-›í"

	)

102 
	#DEF_IMAGE_VIEWER
 "di•œy"

	)

103 
	#DEF_AUDIO_PLAYER
 "showaudio"

	)

106 
	#DEF_MIGEMO_COMMAND
 "migemÿ-àegª∞/u§/loˇl/sh¨e/migemo/migemo-di˘"

	)

109 
	#HAVE_TERMIOS_H
 1

	)

112 
	#HAVE_DIRENT_H
 1

	)

113 
	#HAVE_LOCALE_H
 1

	)

114 
	#HAVE_STDINT_H
 1

	)

115 
	#HAVE_INTTYPES_H
 1

	)

116 
	#SIZEOF_LONG_LONG
 8

	)

117 #i‡
SIZEOF_LONG_LONG
 > 0

118 
	t˛í_t
;

120 
	t˛í_t
;

122 
	#HAVE_STRTOLL
 1

	)

124 
	#HAVE_ATOLL
 1

	)

126 
	#HAVE_STRCASECMP
 1

	)

127 
	#HAVE_STRCASESTR
 1

	)

128 
	#HAVE_STRCHR
 1

	)

129 
	#HAVE_STRERROR
 1

	)

130 
	#HAVE_SYS_ERRLIST
 1

	)

131 
	#HAVE_BCOPY
 1

	)

132 
	#HAVE_WAITPID
 1

	)

133 
	#HAVE_WAIT3
 1

	)

134 
	#HAVE_STRFTIME
 1

	)

135 
	#HAVE_GETCWD
 1

	)

136 
	#HAVE_GETWD
 1

	)

137 
	#HAVE_SYMLINK
 1

	)

138 
	#HAVE_READLINK
 1

	)

139 
	#HAVE_LSTAT
 1

	)

140 
	#HAVE_SETENV
 1

	)

141 
	#HAVE_PUTENV
 1

	)

142 
	#HAVE_SRAND48
 1

	)

143 
	#HAVE_SRANDOM
 1

	)

145 
	#HAVE_CHDIR
 1

	)

146 
	#HAVE_SETPGRP
 1

	)

147 
	#HAVE_SETLOCALE
 1

	)

148 
	#HAVE_LANGINFO_CODESET
 1

	)

150 
	#SETPGRP_VOID
 1

	)

151 #ifde‡
HAVE_SETPGRP


152 #ifde‡
SETPGRP_VOID


153 
	#SETPGRP
(Ë
	`£çgΩ
()

	)

155 
	#SETPGRP
(Ë
	`£çgΩ
(0,0)

	)

158 
	#SETPGRP
(Ë
	`£çgid
(0, 0)

	)

160 
	#HAVE_FLOAT_H
 1

	)

161 
	#HAVE_SYS_SELECT_H
 1

	)

163 
	#HAVE_SIGSETJMP
 1

	)

165 
	#RETSIGTYPE
 

	)

166 
RETSIGTYPE
 
	tMySig«lH™dÀr
;

167 
	#SIGNAL_ARG
 
_dummy


	)

168 
	#SIGNAL_ARGLIST
 0

	)

169 
	#SIGNAL_RETURN
 

	)

171 #ifde‡
HAVE_SIGSETJMP


172 #ifde‡
__MINGW32_VERSION


173 
	#SETJMP
(
ív
Ë
	`£tjmp
”nv)

	)

174 
	#LONGJMP
(
ív
,
vÆ
Ë
	`l⁄gjmp
”nv, vÆ)

	)

175 
	#JMP_BUF
 
jmp_buf


	)

177 
	#SETJMP
(
ív
Ë
	`sig£tjmp
”nv,1)

	)

178 
	#LONGJMP
(
ív
,
vÆ
Ë
	`sigl⁄gjmp
”nv,vÆ)

	)

179 
	#JMP_BUF
 
sigjmp_buf


	)

182 
	#SETJMP
(
ív
Ë
	`£tjmp
”nv)

	)

183 
	#LONGJMP
(
ív
,
vÆ
Ë
	`l⁄gjmp
”nv)

	)

184 
	#JMP_BUF
 
jmp_buf


	)

187 #i‚de‡
HAVE_SRAND48


188 #ifde‡
HAVE_SRANDOM


189 
	#§™d48
 
§™dom


	)

190 
	#Ã™d48
 
øndom


	)

192 
	#USE_INCLUDED_SRAND48


	)

196 #i‚de‡
HAVE_LSTAT


197 
	#l°©
 
°©


	)

200 #i‡
deföed
–
__CYGWIN32__
 ) && !deföed–
__CYGWIN__
 )

201 
	#__CYGWIN__


	)

204 #i‡
deföed
–
__CYGWIN__
 ) || deföed–
__EMX__
 )

205 
	#SUPPORT_DOS_DRIVE_PREFIX
 1

	)

208 #i‡
deföed
–
__CYGWIN__
 )

209 
	#SUPPORT_NETBIOS_SHARE
 1

	)

210 
	#SUPPORT_WIN9X_CONSOLE_MBCS
 1

	)

213 #i‡
deföed
(
__DJGPP__
)

214 
	#DEFAULT_TERM
 "doßnsi"

	)

216 
	#DEFAULT_TERM
 0

	)

219 #i‡
deföed
(
__EMX__
)

220 
	#GUNZIP_CMDNAME
 "gzù"

	)

221 
	#BUNZIP2_CMDNAME
 "bzù2"

	)

222 
	#INFLATE_CMDNAME
 "öÊ©e.exe"

	)

223 
	#W3MBOOKMARK_CMDNAME
 "w3mbookm¨k.exe"

	)

224 
	#W3MHELPERPANEL_CMDNAME
 "w3mhñ≥Ω™ñ.exe"

	)

225 
	#DEV_NULL_PATH
 "nul"

	)

226 
	#DEV_TTY_PATH
 "c⁄"

	)

227 
	#CGI_EXTENSION
 ".cmd"

	)

228 
	#USE_PATH_ENVVAR


	)

230 
	#GUNZIP_CMDNAME
 "gunzù"

	)

231 
	#BUNZIP2_CMDNAME
 "bunzù2"

	)

232 
	#INFLATE_CMDNAME
 "öÊ©e"

	)

233 
	#W3MBOOKMARK_CMDNAME
 "w3mbookm¨k"

	)

234 
	#W3MHELPERPANEL_CMDNAME
 "w3mhñ≥Ω™ñ"

	)

235 
	#DEV_NULL_PATH
 "/dev/nuŒ"

	)

236 
	#DEV_TTY_PATH
 "/dev/ây"

	)

237 
	#CGI_EXTENSION
 ".cgi"

	)

240 
	#PATH_SEPARATOR
 ':'

	)

241 
	#GUNZIP_NAME
 "gunzù"

	)

242 
	#BUNZIP2_NAME
 "bunzù2"

	)

243 
	#INFLATE_NAME
 "öÊ©e"

	)

245 #ifde‡
__MINGW32_VERSION


246 
	#SIGKILL
 
SIGTERM


	)

247 
	#S_IXGRP
 0

	)

248 
	#S_IXOTH
 0

	)

249 
	#S_IRWXG
 0

	)

250 
	#S_IRWXO
 0

	)

	@cookie.c

12 
	~"fm.h
"

13 
	~"html.h
"

15 #ifde‡
USE_COOKIE


16 
	~<time.h
>

17 
	~"loˇl.h
"

18 
	~"ªgex.h
"

19 
	~"my˘y≥.h
"

21 
	gis_ßved
 = 1;

23 
	#c⁄èö_no_dŸs
(
p
, 
ï
Ë(
	`tŸÆ_dŸ_numbî
(’),”p),1)==0)

	)

26 
	$tŸÆ_dŸ_numbî
(*
p
, *
ï
, 
max_cou¡
)

28 
cou¡
 = 0;

29 i‡(!
ï
)

30 
ï
 = 
p
 + 
	`°æí
(p);

32 ; 
p
 < 
ï
 && 
cou¡
 < 
max_cou¡
;Ö++) {

33 i‡(*
p
 == '.')

34 
cou¡
++;

36  
cou¡
;

37 
	}
}

41 
	$domaö_m©ch
(*
ho°
, *
domaö
)

43 
m0
, 
m1
;

48 
	`ªgexCompûe
("[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+", 0);

49 
m0
 = 
	`ªgexM©ch
(
ho°
, -1, 1);

50 
m1
 = 
	`ªgexM©ch
(
domaö
, -1, 1);

51 i‡(
m0
 && 
m1
) {

52 i‡(
	`°rˇ£cmp
(
ho°
, 
domaö
) == 0)

53  
ho°
;

55 i‡(!
m0
 && !
m1
) {

56 
off£t
;

57 *
domaö_p
;

62 i‡(
	`°rˇ£cmp
(
domaö
, ".") == 0 || strcasecmp(domain, ".local") == 0) {

63 
off£t
 = 
	`°æí
(
ho°
);

64 
domaö_p
 = &
ho°
[
off£t
];

65 i‡(
domaö
[1] ='\0' || 
	`c⁄èö_no_dŸs
(
ho°
, 
domaö_p
))

66  
domaö_p
;

72 i‡(
domaö
[0] ='.' && 
	`°rˇ£cmp
(
ho°
, &domain[1]) == 0) {

73  
ho°
;

77 
off£t
 = (
domaö
[0] !'.'Ë? 0 : 
	`°æí
(
ho°
) - strlen(domain);

78 
domaö_p
 = &
ho°
[
off£t
];

79 i‡(
off£t
 >0 && 
	`°rˇ£cmp
(
domaö_p
, 
domaö
) == 0)

80  
domaö_p
;

83  
NULL
;

84 
	}
}

87 
p‹éi°
 *

88 
	$make_p‹éi°
(
Så
 
p‹t
)

90 
p‹éi°
 *
fú°
 = 
NULL
, *
∂
;

91 *
p
;

92 
Så
 
tmp
 = 
	`Så√w
();

94 
p
 = 
p‹t
->
±r
;

95 *
p
) {

96 *
p
 && !
	`IS_DIGIT
(*p))

97 
p
++;

98 
	`Så˛ór
(
tmp
);

99 *
p
 && 
	`IS_DIGIT
(*p))

100 
	`Såˇt_ch¨
(
tmp
, *(
p
++));

101 i‡(
tmp
->
Àngth
 == 0)

103 
∂
 = 
	`New
(
p‹éi°
);

104 
∂
->
p‹t
 = 
	`©oi
(
tmp
->
±r
);

105 
∂
->
√xt
 = 
fú°
;

106 
fú°
 = 
∂
;

108  
fú°
;

109 
	}
}

111 
Så


112 
	$p‹éi°2°r
(
p‹éi°
 *
fú°
)

114 
p‹éi°
 *
∂
;

115 
Så
 
tmp
;

117 
tmp
 = 
	`S¥ötf
("%d", 
fú°
->
p‹t
);

118 
∂
 = 
fú°
->
√xt
;Öl;Öl =Öl->next)

119 
	`Såˇt
(
tmp
, 
	`S¥ötf
(", %d", 
∂
->
p‹t
));

120  
tmp
;

121 
	}
}

124 
	$p‹t_m©ch
(
p‹éi°
 *
fú°
, 
p‹t
)

126 
p‹éi°
 *
∂
;

128 
∂
 = 
fú°
;Öl;Ö»∂->
√xt
) {

129 i‡(
∂
->
p‹t
 ==Öort)

133 
	}
}

136 
	$check_expúed_cookõs
()

138 
cookõ
 *
p
, *
p1
;

139 
time_t
 
now
 = 
	`time
(
NULL
);

141 i‡(!
Fú°_cookõ
)

144 i‡(
Fú°_cookõ
->
expúes
 !(
time_t
Ë- 1 && Fú°_cookõ->expúe†< 
now
) {

145 i‡(!(
Fú°_cookõ
->
Êag
 & 
COO_DISCARD
))

146 
is_ßved
 = 0;

147 
Fú°_cookõ
 = Fú°_cookõ->
√xt
;

150 
p
 = 
Fú°_cookõ
;Ö &&Ö->
√xt
;Ö = 
p1
) {

151 
p1
 = 
p
->
√xt
;

152 i‡(
p1
->
expúes
 !(
time_t
Ë- 1 &&Ö1->expúe†< 
now
) {

153 i‡(!(
p1
->
Êag
 & 
COO_DISCARD
))

154 
is_ßved
 = 0;

155 
p
->
√xt
 = 
p1
->next;

156 
p1
 = 
p
;

159 
	}
}

161 
Så


162 
	$make_cookõ
(
cookõ
 *cookie)

164 
Så
 
tmp
 = 
	`Sådup
(
cookõ
->
«me
);

165 
	`Såˇt_ch¨
(
tmp
, '=');

166 
	`Såˇt
(
tmp
, 
cookõ
->
vÆue
);

167  
tmp
;

168 
	}
}

171 
	$m©ch_cookõ
(
P¨£dURL
 *
pu
, 
cookõ
 *cookõ, *
domaö«me
)

173 i‡(!
domaö«me
)

176 i‡(!
	`domaö_m©ch
(
domaö«me
, 
cookõ
->
domaö
->
±r
))

178 i‡(
	`°∫cmp
(
cookõ
->
∑th
->
±r
, 
pu
->
fûe
, cookõ->∑th->
Àngth
) != 0)

180 #ifde‡
USE_SSL


181 i‡(
cookõ
->
Êag
 & 
COO_SECURE
 && 
pu
->
scheme
 !
SCM_HTTPS
)

184 i‡(
cookõ
->
Êag
 & 
COO_SECURE
)

187 i‡(
cookõ
->
p‹é
 && !
	`p‹t_m©ch
(cookõ->p‹é, 
pu
->
p‹t
))

191 
	}
}

193 
cookõ
 *

194 
	$gë_cookõ_öfo
(
Så
 
domaö
, Så 
∑th
, Så 
«me
)

196 
cookõ
 *
p
;

198 
p
 = 
Fú°_cookõ
;Ö;Ö =Ö->
√xt
) {

199 i‡(
	`Såˇ£cmp
(
p
->
domaö
, domain) == 0 &&

200 
	`Såcmp
(
p
->
∑th
,Ö©hË=0 && 
	`Såˇ£cmp
’->
«me
,Çame) == 0)

201  
p
;

203  
NULL
;

204 
	}
}

206 
Så


207 
	$föd_cookõ
(
P¨£dURL
 *
pu
)

209 
Så
 
tmp
;

210 
cookõ
 *
p
, *
p1
, *
fco
 = 
NULL
;

211 
vîsi⁄
 = 0;

212 *
fq_domaö«me
, *
domaö«me
;

214 
fq_domaö«me
 = 
	`FQDN
(
pu
->
ho°
);

215 
	`check_expúed_cookõs
();

216 
p
 = 
Fú°_cookõ
;Ö;Ö =Ö->
√xt
) {

217 
domaö«me
 = (
p
->
vîsi⁄
 =0Ë? 
fq_domaö«me
 : 
pu
->
ho°
;

218 i‡(
p
->
Êag
 & 
COO_USE
 && 
	`m©ch_cookõ
(
pu
,Ö, 
domaö«me
)) {

219 
p1
 = 
fco
;Ö1 && 
	`Såˇ£cmp
’1->
«me
, 
p
->name);

220 
p1
 =Ö1->
√xt
) ;

221 i‡(
p1
)

223 
p1
 = 
	`New
(
cookõ
);

224 
	`bc›y
(
p
, 
p1
, (
cookõ
));

225 
p1
->
√xt
 = 
fco
;

226 
fco
 = 
p1
;

227 i‡(
p1
->
vîsi⁄
 > version)

228 
vîsi⁄
 = 
p1
->version;

232 i‡(!
fco
)

233  
NULL
;

235 
tmp
 = 
	`Så√w
();

236 i‡(
vîsi⁄
 > 0)

237 
	`Såˇt
(
tmp
, 
	`S¥ötf
("$Vîsi⁄=\"%d\"; ", 
vîsi⁄
));

239 
	`Såˇt
(
tmp
, 
	`make_cookõ
(
fco
));

240 
p1
 = 
fco
->
√xt
;Ö1;Ö1 =Ö1->next) {

241 
	`Såˇt_ch¨p
(
tmp
, "; ");

242 
	`Såˇt
(
tmp
, 
	`make_cookõ
(
p1
));

243 i‡(
vîsi⁄
 > 0) {

244 i‡(
p1
->
Êag
 & 
COO_PATH
)

245 
	`Såˇt
(
tmp
, 
	`S¥ötf
("; $P©h=\"%s\"", 
p1
->
∑th
->
±r
));

246 i‡(
p1
->
Êag
 & 
COO_DOMAIN
)

247 
	`Såˇt
(
tmp
, 
	`S¥ötf
("; $Domaö=\"%s\"", 
p1
->
domaö
->
±r
));

248 i‡(
p1
->
p‹é
)

249 
	`Såˇt
(
tmp
,

250 
	`S¥ötf
("; $P‹t=\"%s\"", 
	`p‹éi°2°r
(
p1
->
p‹é
)));

253  
tmp
;

254 
	}
}

256 *
	g•ecül_domaö
[] = {

257 ".com", ".edu", ".gov", ".mû", ".√t", ".‹g", ".öt", 
NULL


261 
	$add_cookõ
(
P¨£dURL
 *
pu
, 
Så
 
«me
, Så 
vÆue
,

262 
time_t
 
expúes
, 
Så
 
domaö
, Så 
∑th
,

263 
Êag
, 
Så
 
commít
, 
vîsi⁄
, Så 
p‹t
, Så 
commítURL
)

265 
cookõ
 *
p
;

266 *
domaö«me
 = (
vîsi⁄
 =0Ë? 
	`FQDN
(
pu
->
ho°
) :Öu->host;

267 
Så
 
odomaö
 = 
domaö
, 
›©h
 = 
∑th
;

268 
p‹éi°
 *p‹éi° = 
NULL
;

269 
u£_£curôy
 = !(
Êag
 & 
COO_OVERRIDE
);

271 
	#COOKIE_ERROR
(
îr
Ëif(!(”ºË& 
COO_OVERRIDE_OK
Ë|| 
u£_£curôy
Ë (îr)

	)

273 #ifde‡
DEBUG


274 
	`Ârötf
(
°dîr
, "ho°: [%s, %s] %d\n", 
pu
->
ho°
,Öu->
fûe
, 
Êag
);

275 
	`Ârötf
(
°dîr
, "cookõ: [%s=%s]\n", 
«me
->
±r
, 
vÆue
->ptr);

276 
	`Ârötf
(
°dîr
, "expúes: [%s]\n", 
	`as˘ime
(
	`gmtime
(&
expúes
)));

277 i‡(
domaö
)

278 
	`Ârötf
(
°dîr
, "domaö: [%s]\n", 
domaö
->
±r
);

279 i‡(
∑th
)

280 
	`Ârötf
(
°dîr
, "∑th: [%s]\n", 
∑th
->
±r
);

281 
	`Ârötf
(
°dîr
, "vîsi⁄: [%d]\n", 
vîsi⁄
);

282 i‡(
p‹t
)

283 
	`Ârötf
(
°dîr
, "p‹t: [%s]\n", 
p‹t
->
±r
);

286 i‡(!
domaö«me
)

287  
COO_ENODOT
;

289 i‡(
domaö
) {

290 *
dp
;

297 i‡(
domaö
->
±r
[0] != '.' &&

298 (
vîsi⁄
 > 0 || 
	`°rˇ£cmp
(
domaö«me
, 
domaö
->
±r
) != 0))

299 
domaö
 = 
	`S¥ötf
(".%s", domaö->
±r
);

301 i‡(
vîsi⁄
 == 0) {

303 
n
 = 
	`tŸÆ_dŸ_numbî
(
domaö
->
±r
,

304 
domaö
->
±r
 + domaö->
Àngth
,

306 i‡(
n
 < 2) {

307 
	`COOKIE_ERROR
(
COO_ESPECIAL
);

309 i‡(
n
 == 2) {

310 **
sdomaö
;

311 
ok
 = 0;

312 
sdomaö
 = 
•ecül_domaö
; !
ok
 && *sdomain; sdomain++) {

313 
off£t
 = 
domaö
->
Àngth
 - 
	`°æí
(*
sdomaö
);

314 i‡(
off£t
 >= 0 &&

315 
	`°rˇ£cmp
(*
sdomaö
, &
domaö
->
±r
[
off£t
]) == 0)

316 
ok
 = 1;

318 i‡(!
ok
)

319 
	`COOKIE_ERROR
(
COO_ESPECIAL
);

324 i‡(
	`°rˇ£cmp
(
domaö
->
±r
, ".local") != 0 &&

325 
	`c⁄èö_no_dŸs
(&
domaö
->
±r
[1], &domaö->±r[domaö->
Àngth
]))

326 
	`COOKIE_ERROR
(
COO_ENODOT
);

330 i‡(!(
dp
 = 
	`domaö_m©ch
(
domaö«me
, 
domaö
->
±r
)))

331 
	`COOKIE_ERROR
(
COO_EDOM
);

334 i‡(
vîsi⁄
 > 0 && !
	`c⁄èö_no_dŸs
(
domaö«me
, 
dp
))

335 
	`COOKIE_ERROR
(
COO_EBADHOST
);

337 i‡(
∑th
) {

339 i‡(
vîsi⁄
 > 0 && 
	`°∫cmp
(
∑th
->
±r
, 
pu
->
fûe
,Ö©h->
Àngth
) != 0)

340 
	`COOKIE_ERROR
(
COO_EPATH
);

342 i‡(
p‹t
) {

344 
p‹éi°
 = 
	`make_p‹éi°
(
p‹t
);

345 i‡(
p‹éi°
 && !
	`p‹t_m©ch
’‹éi°, 
pu
->
p‹t
))

346 
	`COOKIE_ERROR
(
COO_EPORT
);

349 i‡(!
domaö
)

350 
domaö
 = 
	`Så√w_ch¨p
(
domaö«me
);

351 i‡(!
∑th
) {

352 
∑th
 = 
	`Så√w_ch¨p
(
pu
->
fûe
);

353 
∑th
->
Àngth
 > 0 && 
	`Såœ°ch¨
(path) != '/')

354 
	`Såshrök
(
∑th
, 1);

355 i‡(
	`Såœ°ch¨
(
∑th
) == '/')

356 
	`Såshrök
(
∑th
, 1);

359 
p
 = 
	`gë_cookõ_öfo
(
domaö
, 
∑th
, 
«me
);

360 i‡(!
p
) {

361 
p
 = 
	`New
(
cookõ
);

362 
p
->
Êag
 = 0;

363 i‡(
deÁu…_u£_cookõ
)

364 
p
->
Êag
 |
COO_USE
;

365 
p
->
√xt
 = 
Fú°_cookõ
;

366 
Fú°_cookõ
 = 
p
;

369 
	`c›yP¨£dURL
(&
p
->
uæ
, 
pu
);

370 
p
->
«me
 =Çame;

371 
p
->
vÆue
 = value;

372 
p
->
expúes
 =Éxpires;

373 
p
->
domaö
 = domain;

374 
p
->
∑th
 =Öath;

375 
p
->
commít
 = comment;

376 
p
->
vîsi⁄
 = version;

377 
p
->
p‹é
 = 
p‹éi°
;

378 
p
->
commítURL
 = commentURL;

380 i‡(
Êag
 & 
COO_SECURE
)

381 
p
->
Êag
 |
COO_SECURE
;

383 
p
->
Êag
 &~
COO_SECURE
;

384 i‡(
odomaö
)

385 
p
->
Êag
 |
COO_DOMAIN
;

387 
p
->
Êag
 &~
COO_DOMAIN
;

388 i‡(
›©h
)

389 
p
->
Êag
 |
COO_PATH
;

391 
p
->
Êag
 &~
COO_PATH
;

392 i‡(
Êag
 & 
COO_DISCARD
 || 
p
->
expúes
 =(
time_t
) - 1) {

393 
p
->
Êag
 |
COO_DISCARD
;

396 
p
->
Êag
 &~
COO_DISCARD
;

397 
is_ßved
 = 0;

400 
	`check_expúed_cookõs
();

402 
	}
}

404 
cookõ
 *

405 
	$¡h_cookõ
(
n
)

407 
cookõ
 *
p
;

408 
i
;

409 
p
 = 
Fú°_cookõ
, 
i
 = 0;Ö;Ö =Ö->
√xt
, i++) {

410 i‡(
i
 =
n
)

411  
p
;

413  
NULL
;

414 
	}
}

416 
	#°r2ch¨p
(
°r
Ë((°r)? (°r)->
±r
 : "")

	)

419 
	$ßve_cookõs
()

421 
cookõ
 *
p
;

422 *
cookõ_fûe
;

423 
FILE
 *
Â
;

425 
	`check_expúed_cookõs
();

427 i‡(!
Fú°_cookõ
 || 
is_ßved
 || 
no_rc_dú
)

430 
cookõ_fûe
 = 
	`rcFûe
(
COOKIE_FILE
);

431 i‡(!(
Â
 = 
	`f›í
(
cookõ_fûe
, "w")))

434 
p
 = 
Fú°_cookõ
;Ö;Ö =Ö->
√xt
) {

435 i‡(!(
p
->
Êag
 & 
COO_USE
Ë||Ö->Êag & 
COO_DISCARD
)

437 
	`Ârötf
(
Â
, "%s\t%s\t%s\t%ld\t%s\t%s\t%d\t%d\t%s\t%s\t%s\n",

438 
	`∑r£dURL2Så
(&
p
->
uæ
)->
±r
,

439 
p
->
«me
->
±r
,Ö->
vÆue
->±r,Ö->
expúes
,

440 
p
->
domaö
->
±r
,Ö->
∑th
->±r,Ö->
Êag
,

441 
p
->
vîsi⁄
, 
	`°r2ch¨p
’->
commít
),

442 (
p
->
p‹é
Ë? 
	`p‹éi°2°r
’->p‹é)->
±r
 : "",

443 
	`°r2ch¨p
(
p
->
commítURL
));

445 
	`f˛o£
(
Â
);

446 
	`chmod
(
cookõ_fûe
, 
S_IRUSR
 | 
S_IWUSR
);

447 
	}
}

449 
Så


450 
	$ªadcﬁ
(**
p
)

452 
Så
 
tmp
 = 
	`Så√w
();

453 **
p
 && **p != '\n' && **p != '\r' && **p != '\t')

454 
	`Såˇt_ch¨
(
tmp
, *((*
p
)++));

455 i‡(**
p
 == '\t')

456 (*
p
)++;

457  
tmp
;

458 
	}
}

461 
	$lﬂd_cookõs
()

463 
cookõ
 *cookõ, *
p
;

464 
FILE
 *
Â
;

465 
Så
 
löe
;

466 *
°r
;

468 i‡(!(
Â
 = 
	`f›í
(
	`rcFûe
(
COOKIE_FILE
), "r")))

471 i‡(
Fú°_cookõ
) {

472 
p
 = 
Fú°_cookõ
;Ö->
√xt
;Ö =Ö->next) ;

475 
p
 = 
NULL
;

478 
löe
 = 
	`Såfgës
(
Â
);

480 i‡(
löe
->
Àngth
 == 0)

482 
°r
 = 
löe
->
±r
;

483 
cookõ
 = 
	`New
(cookie);

484 
cookõ
->
√xt
 = 
NULL
;

485 
cookõ
->
Êag
 = 0;

486 
cookõ
->
vîsi⁄
 = 0;

487 
cookõ
->
expúes
 = (
time_t
) - 1;

488 
cookõ
->
commít
 = 
NULL
;

489 
cookõ
->
p‹é
 = 
NULL
;

490 
cookõ
->
commítURL
 = 
NULL
;

491 
	`∑r£URL
(
	`ªadcﬁ
(&
°r
)->
±r
, &
cookõ
->
uæ
, 
NULL
);

492 i‡(!*
°r
)

494 
cookõ
->
«me
 = 
	`ªadcﬁ
(&
°r
);

495 i‡(!*
°r
)

497 
cookõ
->
vÆue
 = 
	`ªadcﬁ
(&
°r
);

498 i‡(!*
°r
)

500 
cookõ
->
expúes
 = (
time_t
Ë
	`©ﬁ
(
	`ªadcﬁ
(&
°r
)->
±r
);

501 i‡(!*
°r
)

503 
cookõ
->
domaö
 = 
	`ªadcﬁ
(&
°r
);

504 i‡(!*
°r
)

506 
cookõ
->
∑th
 = 
	`ªadcﬁ
(&
°r
);

507 i‡(!*
°r
)

509 
cookõ
->
Êag
 = 
	`©oi
(
	`ªadcﬁ
(&
°r
)->
±r
);

510 i‡(!*
°r
)

512 
cookõ
->
vîsi⁄
 = 
	`©oi
(
	`ªadcﬁ
(&
°r
)->
±r
);

513 i‡(!*
°r
)

515 
cookõ
->
commít
 = 
	`ªadcﬁ
(&
°r
);

516 i‡(
cookõ
->
commít
->
Àngth
 == 0)

517 
cookõ
->
commít
 = 
NULL
;

518 i‡(!*
°r
)

520 
cookõ
->
p‹é
 = 
	`make_p‹éi°
(
	`ªadcﬁ
(&
°r
));

521 i‡(!*
°r
)

523 
cookõ
->
commítURL
 = 
	`ªadcﬁ
(&
°r
);

524 i‡(
cookõ
->
commítURL
->
Àngth
 == 0)

525 
cookõ
->
commítURL
 = 
NULL
;

527 i‡(
p
)

528 
p
->
√xt
 = 
cookõ
;

530 
Fú°_cookõ
 = 
cookõ
;

531 
p
 = 
cookõ
;

534 
	`f˛o£
(
Â
);

535 
	}
}

538 
	$öôCookõ
()

540 
	`lﬂd_cookõs
();

541 
	`check_expúed_cookõs
();

542 
	}
}

544 
Buf„r
 *

545 
	$cookõ_li°_∑√l
()

548 
Så
 
§c
 = 
	`Så√w_ch¨p
("<html><head><title>Cookies</title></head>"

551 
cookõ
 *
p
;

552 
i
;

553 *
tmp
, 
tmp2
[80];

555 i‡(!
u£_cookõ
 || !
Fú°_cookõ
)

556  
NULL
;

558 
	`Såˇt_ch¨p
(
§c
, "<ol>");

559 
p
 = 
Fú°_cookõ
, 
i
 = 0;Ö;Ö =Ö->
√xt
, i++) {

560 
tmp
 = 
	`html_quŸe
(
	`∑r£dURL2Så
(&
p
->
uæ
)->
±r
);

561 i‡(
p
->
expúes
 !(
time_t
) - 1) {

562 #ifde‡
HAVE_STRFTIME


563 
	`°r·ime
(
tmp2
, 80, "%a, %d %b %Y %H:%M:%S GMT",

564 
	`gmtime
(&
p
->
expúes
));

566 
tm
 *
gmt
;

567 *
dow
[] = {

570 *
m⁄th
[] = {

574 
gmt
 = 
	`gmtime
(&
p
->
expúes
);

575 
	`°r˝y
(
tmp2
, 
dow
[
gmt
->
tm_wday
]);

576 
	`•rötf
(&
tmp2
[4], "%02d ", 
gmt
->
tm_mday
);

577 
	`°r˝y
(&
tmp2
[7], 
m⁄th
[
gmt
->
tm_m⁄
]);

578 i‡(
gmt
->
tm_yór
 < 1900)

579 
	`•rötf
(&
tmp2
[11], "%04d %02d:%02d:%02d GMT",

580 (
gmt
->
tm_yór
Ë+ 1900, gmt->
tm_hour
, gmt->
tm_mö
,

581 
gmt
->
tm_£c
);

583 
	`•rötf
(&
tmp2
[11], "%04d %02d:%02d:%02d GMT",

584 
gmt
->
tm_yór
, gmt->
tm_hour
, gmt->
tm_mö
, gmt->
tm_£c
);

588 
tmp2
[0] = '\0';

589 
	`Såˇt_ch¨p
(
§c
, "<li>");

590 
	`Såˇt_ch¨p
(
§c
, "<h1><a href=\"");

591 
	`Såˇt_ch¨p
(
§c
, 
tmp
);

592 
	`Såˇt_ch¨p
(
§c
, "\">");

593 
	`Såˇt_ch¨p
(
§c
, 
tmp
);

594 
	`Såˇt_ch¨p
(
§c
, "</a></h1>");

596 
	`Såˇt_ch¨p
(
§c
, "<table cellpadding=0>");

597 i‡(!(
p
->
Êag
 & 
COO_SECURE
)) {

598 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Cookie:</b></td><td>");

599 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
	`make_cookõ
(
p
)->
±r
));

600 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

602 i‡(
p
->
commít
) {

603 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Comment:</b></td><td>");

604 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
p
->
commít
->
±r
));

605 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

607 i‡(
p
->
commítURL
) {

608 
	`Såˇt_ch¨p
(
§c
,

610 
	`Såˇt_ch¨p
(
§c
, "<a href=\"");

611 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
p
->
commítURL
->
±r
));

612 
	`Såˇt_ch¨p
(
§c
, "\">");

613 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
p
->
commítURL
->
±r
));

614 
	`Såˇt_ch¨p
(
§c
, "</a>");

615 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

617 i‡(
tmp2
[0]) {

618 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Expires:</b></td><td>");

619 
	`Såˇt_ch¨p
(
§c
, 
tmp2
);

620 i‡(
p
->
Êag
 & 
COO_DISCARD
)

621 
	`Såˇt_ch¨p
(
§c
, " (Discard)");

622 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

624 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Version:</b></td><td>");

625 
	`Såˇt_ch¨p
(
§c
, 
	`S¥ötf
("%d", 
p
->
vîsi⁄
)->
±r
);

626 
	`Såˇt_ch¨p
(
§c
, "</td></tr><tr><td>");

627 i‡(
p
->
domaö
) {

628 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Domain:</b></td><td>");

629 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
p
->
domaö
->
±r
));

630 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

632 i‡(
p
->
∑th
) {

633 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Path:</b></td><td>");

634 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
p
->
∑th
->
±r
));

635 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

637 i‡(
p
->
p‹é
) {

638 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Port:</b></td><td>");

639 
	`Såˇt_ch¨p
(
§c
, 
	`html_quŸe
(
	`p‹éi°2°r
(
p
->
p‹é
)->
±r
));

640 
	`Såˇt_ch¨p
(
§c
, "</td></tr>");

642 
	`Såˇt_ch¨p
(
§c
, "<tr><td width=\"80\"><b>Secure:</b></td><td>");

643 
	`Såˇt_ch¨p
(
§c
, (
p
->
Êag
 & 
COO_SECURE
) ? "Yes" : "No");

644 
	`Såˇt_ch¨p
(
§c
, "</td></tr><tr><td>");

646 
	`Såˇt
(
§c
, 
	`S¥ötf
("<tr><td width=\"80\"><b>Use:</b></td><td>"

650 
i
, (
p
->
Êag
 & 
COO_USE
) ? " checked" : "",

651 
i
, (!(
p
->
Êag
 & 
COO_USE
)) ? " checked" : ""));

652 
	`Såˇt_ch¨p
(
§c
,

655 
	`Såˇt_ch¨p
(
§c
, "</ol></form></body></html>");

656  
	`lﬂdHTMLSåög
(
§c
);

657 
	}
}

660 
	$£t_cookõ_Êag
(
∑r£d_èg¨g
 *
¨g
)

662 
n
, 
v
;

663 
cookõ
 *
p
;

665 
¨g
) {

666 i‡(
¨g
->¨g && *¨g->¨g &&árg->
vÆue
 && *arg->value) {

667 
n
 = 
	`©oi
(
¨g
->arg);

668 
v
 = 
	`©oi
(
¨g
->
vÆue
);

669 i‡((
p
 = 
	`¡h_cookõ
(
n
)Ë!
NULL
) {

670 i‡(
v
 && !(
p
->
Êag
 & 
COO_USE
))

671 
p
->
Êag
 |
COO_USE
;

672 i‡(!
v
 && 
p
->
Êag
 & 
COO_USE
)

673 
p
->
Êag
 &~
COO_USE
;

674 i‡(!(
p
->
Êag
 & 
COO_DISCARD
))

675 
is_ßved
 = 0;

678 
¨g
 =árg->
√xt
;

680 
	`backBf
();

681 
	}
}

684 
	$check_cookõ_ac˚±_domaö
(*
domaö
)

686 
TextLi°Iãm
 *
é
;

688 i‡(
domaö
 =
NULL
)

691 i‡(
Cookõ_ac˚±_domaös
 && Cookõ_ac˚±_domaös->
nôem
 > 0) {

692 
é
 = 
Cookõ_ac˚±_domaös
->
fú°
;Å»!
NULL
;Å»é->
√xt
) {

693 i‡(
	`domaö_m©ch
(
domaö
, 
é
->
±r
))

697 i‡(
Cookõ_ªje˘_domaös
 && Cookõ_ªje˘_domaös->
nôem
 > 0) {

698 
é
 = 
Cookõ_ªje˘_domaös
->
fú°
;Å»!
NULL
;Å»é->
√xt
) {

699 i‡(
	`domaö_m©ch
(
domaö
, 
é
->
±r
))

704 
	}
}

	@ctrlcode.h

4 
	#CTRL_A
 1

	)

5 
	#CTRL_B
 2

	)

6 
	#CTRL_C
 3

	)

7 
	#CTRL_D
 4

	)

8 
	#CTRL_E
 5

	)

9 
	#CTRL_F
 6

	)

10 
	#CTRL_G
 7

	)

11 
	#CTRL_H
 8

	)

12 
	#CTRL_I
 9

	)

13 
	#CTRL_J
 10

	)

14 
	#CTRL_K
 11

	)

15 
	#CTRL_L
 12

	)

16 
	#CTRL_M
 13

	)

17 
	#CTRL_N
 14

	)

18 
	#CTRL_O
 15

	)

19 
	#CTRL_P
 16

	)

20 
	#CTRL_Q
 17

	)

21 
	#CTRL_R
 18

	)

22 
	#CTRL_S
 19

	)

23 
	#CTRL_T
 20

	)

24 
	#CTRL_U
 21

	)

25 
	#CTRL_V
 22

	)

26 
	#CTRL_W
 23

	)

27 
	#CTRL_X
 24

	)

28 
	#CTRL_Y
 25

	)

29 
	#CTRL_Z
 26

	)

30 
	#ESC_CODE
 27

	)

31 
	#DEL_CODE
 127

	)

35 
	#NBSP_CODE
 160

	)

36 
	#IEXCL_CODE
 161

	)

37 
	#CENT_CODE
 162

	)

38 
	#POUND_CODE
 163

	)

39 
	#CURREN_CODE
 164

	)

40 
	#YEN_CODE
 165

	)

41 
	#BRVBAR_CODE
 166

	)

42 
	#SECT_CODE
 167

	)

43 
	#UML_CODE
 168

	)

44 
	#COPY_CODE
 169

	)

45 
	#ORDF_CODE
 170

	)

46 
	#LAQUO_CODE
 171

	)

47 
	#NOT_CODE
 172

	)

48 
	#SHY_CODE
 173

	)

49 
	#REG_CODE
 174

	)

50 
	#MACR_CODE
 175

	)

51 
	#DEG_CODE
 176

	)

52 
	#PLUSMN_CODE
 177

	)

53 
	#SUP2_CODE
 178

	)

54 
	#SUP3_CODE
 179

	)

55 
	#ACUTE_CODE
 180

	)

56 
	#MICRO_CODE
 181

	)

57 
	#PARA_CODE
 182

	)

58 
	#MIDDOT_CODE
 183

	)

59 
	#CEDIL_CODE
 184

	)

60 
	#SUP1_CODE
 185

	)

61 
	#ORDM_CODE
 186

	)

62 
	#RAQUO_CODE
 187

	)

63 
	#FRAC14_CODE
 188

	)

64 
	#FRAC12_CODE
 189

	)

65 
	#FRAC34_CODE
 190

	)

66 
	#IQUEST_CODE
 191

	)

67 
	#AGRAVE_CODE
 192

	)

68 
	#AACUTE_CODE
 193

	)

69 
	#ACIRC_CODE
 194

	)

70 
	#ATILDE_CODE
 195

	)

71 
	#AUML_CODE
 196

	)

72 
	#ARING_CODE
 197

	)

73 
	#AELIG_CODE
 198

	)

74 
	#CCEDIL_CODE
 199

	)

75 
	#EGRAVE_CODE
 200

	)

76 
	#EACUTE_CODE
 201

	)

77 
	#ECIRC_CODE
 202

	)

78 
	#EUML_CODE
 203

	)

79 
	#IGRAVE_CODE
 204

	)

80 
	#IACUTE_CODE
 205

	)

81 
	#ICIRC_CODE
 206

	)

82 
	#IUML_CODE
 207

	)

83 
	#ETH_CODE
 208

	)

84 
	#NTILDE_CODE
 209

	)

85 
	#OGRAVE_CODE
 210

	)

86 
	#OACUTE_CODE
 211

	)

87 
	#OCIRC_CODE
 212

	)

88 
	#OTILDE_CODE
 213

	)

89 
	#OUML_CODE
 214

	)

90 
	#TIMES_CODE
 215

	)

91 
	#OSLASH_CODE
 216

	)

92 
	#UGRAVE_CODE
 217

	)

93 
	#UACUTE_CODE
 218

	)

94 
	#UCIRC_CODE
 219

	)

95 
	#UUML_CODE
 220

	)

96 
	#YACUTE_CODE
 221

	)

97 
	#THORN_CODE
 222

	)

98 
	#SZLIG_CODE
 223

	)

99 
	#aGRAVE_CODE
 224

	)

100 
	#aACUTE_CODE
 225

	)

101 
	#aCIRC_CODE
 226

	)

102 
	#aTILDE_CODE
 227

	)

103 
	#aUML_CODE
 228

	)

104 
	#aRING_CODE
 229

	)

105 
	#aELIG_CODE
 230

	)

106 
	#cCEDIL_CODE
 231

	)

107 
	#eGRAVE_CODE
 232

	)

108 
	#eACUTE_CODE
 233

	)

109 
	#eCIRC_CODE
 234

	)

110 
	#eUML_CODE
 235

	)

111 
	#iGRAVE_CODE
 236

	)

112 
	#iACUTE_CODE
 237

	)

113 
	#iCIRC_CODE
 238

	)

114 
	#iUML_CODE
 239

	)

115 
	#ëh_CODE
 240

	)

116 
	#nTILDE_CODE
 241

	)

117 
	#oGRAVE_CODE
 242

	)

118 
	#oACUTE_CODE
 243

	)

119 
	#oCIRC_CODE
 244

	)

120 
	#oTILDE_CODE
 245

	)

121 
	#oUML_CODE
 246

	)

122 
	#DIVIDE_CODE
 247

	)

123 
	#oSLASH_CODE
 248

	)

124 
	#uGRAVE_CODE
 249

	)

125 
	#uACUTE_CODE
 250

	)

126 
	#uCIRC_CODE
 251

	)

127 
	#uUML_CODE
 252

	)

128 
	#yACUTE_CODE
 253

	)

129 
	#th‹n_CODE
 254

	)

130 
	#yUML_CODE
 255

	)

133 
	#ANSP_CODE
 0x9ê

	)

134 
	#IMSP_CODE
 0x9‡

	)

136 
	#NBSP
 "\xa0"

	)

137 
	#ANSP
 "\x9e"

	)

138 
	#IMSP
 "\x9f"

	)

140 
	~"my˘y≥.h
"

	@display.c

2 
	~<sig«l.h
>

3 
	~"fm.h
"

6 #ifde‡
USE_COLOR


8 
	#EFFECT_ANCHOR_START
 
	`ef„˘_™ch‹_°¨t
()

	)

9 
	#EFFECT_ANCHOR_END
 
	`ef„˘_™ch‹_íd
()

	)

10 
	#EFFECT_IMAGE_START
 
	`ef„˘_image_°¨t
()

	)

11 
	#EFFECT_IMAGE_END
 
	`ef„˘_image_íd
()

	)

12 
	#EFFECT_FORM_START
 
	`ef„˘_f‹m_°¨t
()

	)

13 
	#EFFECT_FORM_END
 
	`ef„˘_f‹m_íd
()

	)

14 
	#EFFECT_ACTIVE_START
 
	`ef„˘_a˘ive_°¨t
()

	)

15 
	#EFFECT_ACTIVE_END
 
	`ef„˘_a˘ive_íd
()

	)

16 
	#EFFECT_VISITED_START
 
	`ef„˘_visôed_°¨t
()

	)

17 
	#EFFECT_VISITED_END
 
	`ef„˘_visôed_íd
()

	)

18 
	#EFFECT_MARK_START
 
	`ef„˘_m¨k_°¨t
()

	)

19 
	#EFFECT_MARK_END
 
	`ef„˘_m¨k_íd
()

	)

33 
	#EFFECT_ANCHOR_START_C
 
	`£tfcﬁ‹
(
™ch‹_cﬁ‹
)

	)

34 
	#EFFECT_IMAGE_START_C
 
	`£tfcﬁ‹
(
image_cﬁ‹
)

	)

35 
	#EFFECT_FORM_START_C
 
	`£tfcﬁ‹
(
f‹m_cﬁ‹
)

	)

36 
	#EFFECT_ACTIVE_START_C
 (
	`£tfcﬁ‹
(
a˘ive_cﬁ‹
), 
	`undîlöe
())

	)

37 
	#EFFECT_VISITED_START_C
 
	`£tfcﬁ‹
(
visôed_cﬁ‹
)

	)

38 #ifde‡
USE_BG_COLOR


39 
	#EFFECT_MARK_START_C
 
	`£tbcﬁ‹
(
m¨k_cﬁ‹
)

	)

41 
	#EFFECT_MARK_START_C
 
	`°™dout
()

	)

44 
	#EFFECT_IMAGE_END_C
 
	`£tfcﬁ‹
(
basic_cﬁ‹
)

	)

45 
	#EFFECT_ANCHOR_END_C
 
	`£tfcﬁ‹
(
basic_cﬁ‹
)

	)

46 
	#EFFECT_FORM_END_C
 
	`£tfcﬁ‹
(
basic_cﬁ‹
)

	)

47 
	#EFFECT_ACTIVE_END_C
 (
	`£tfcﬁ‹
(
basic_cﬁ‹
), 
	`undîlöìnd
())

	)

48 
	#EFFECT_VISITED_END_C
 
	`£tfcﬁ‹
(
basic_cﬁ‹
)

	)

49 #ifde‡
USE_BG_COLOR


50 
	#EFFECT_MARK_END_C
 
	`£tbcﬁ‹
(
bg_cﬁ‹
)

	)

52 
	#EFFECT_MARK_END_C
 
	`°™díd
()

	)

55 
	#EFFECT_ANCHOR_START_M
 
	`undîlöe
()

	)

56 
	#EFFECT_ANCHOR_END_M
 
	`undîlöìnd
()

	)

57 
	#EFFECT_IMAGE_START_M
 
	`°™dout
()

	)

58 
	#EFFECT_IMAGE_END_M
 
	`°™díd
()

	)

59 
	#EFFECT_FORM_START_M
 
	`°™dout
()

	)

60 
	#EFFECT_FORM_END_M
 
	`°™díd
()

	)

61 
	#EFFECT_ACTIVE_START_NC
 
	`undîlöe
()

	)

62 
	#EFFECT_ACTIVE_END_NC
 
	`undîlöìnd
()

	)

63 
	#EFFECT_ACTIVE_START_M
 
	`bﬁd
()

	)

64 
	#EFFECT_ACTIVE_END_M
 
	`bﬁdíd
()

	)

65 
	#EFFECT_VISITED_START_M


	)

66 
	#EFFECT_VISITED_END_M


	)

67 
	#EFFECT_MARK_START_M
 
	`°™dout
()

	)

68 
	#EFFECT_MARK_END_M
 
	`°™díd
()

	)

69 
	#deföe_ef„˘
(
«me_°¨t
,
«me_íd
,
cﬁ‹_°¨t
,
cﬁ‹_íd
,
m⁄o_°¨t
,
m⁄o_íd
) \

70 
«me_°¨t
 { i‡(
u£Cﬁ‹
Ë{ 
cﬁ‹_°¨t
; } { 
m⁄o_°¨t
; }}\

71 
«me_íd
 { i‡(
u£Cﬁ‹
Ë{ 
cﬁ‹_íd
; } { 
m⁄o_íd
; }}

	)

73 
	$deföe_ef„˘
(
EFFECT_ANCHOR_START
, 
EFFECT_ANCHOR_END
, 
EFFECT_ANCHOR_START_C
,

74 
EFFECT_ANCHOR_END_C
, 
EFFECT_ANCHOR_START_M
, 
EFFECT_ANCHOR_END_M
)

75 
	$deföe_ef„˘
(
EFFECT_IMAGE_START
, 
EFFECT_IMAGE_END
, 
EFFECT_IMAGE_START_C
,

76 
EFFECT_IMAGE_END_C
, 
EFFECT_IMAGE_START_M
, 
EFFECT_IMAGE_END_M
)

77 
	$deföe_ef„˘
(
EFFECT_FORM_START
, 
EFFECT_FORM_END
, 
EFFECT_FORM_START_C
,

78 
EFFECT_FORM_END_C
, 
EFFECT_FORM_START_M
, 
EFFECT_FORM_END_M
)

79 
	$deföe_ef„˘
(
EFFECT_MARK_START
, 
EFFECT_MARK_END
, 
EFFECT_MARK_START_C
,

80 
EFFECT_MARK_END_C
, 
EFFECT_MARK_START_M
, 
EFFECT_MARK_END_M
)

84 
EFFECT_ACTIVE_START


86 i‡(
u£Cﬁ‹
) {

87 i‡(
u£A˘iveCﬁ‹
) {

88 #ifde‡
__EMX__


89 if(!
	`gëív
("WINDOWID"))

90 
	`£tfcﬁ‹
(
a˘ive_cﬁ‹
);

94 
EFFECT_ACTIVE_START_C
;

97 
EFFECT_ACTIVE_START_NC
;

100 
EFFECT_ACTIVE_START_M
;

102 
	}
}

105 
	gEFFECT_ACTIVE_END


107 i‡(
	gu£Cﬁ‹
) {

108 i‡(
	gu£A˘iveCﬁ‹
) {

109 
	gEFFECT_ACTIVE_END_C
;

111 
	gEFFECT_ACTIVE_END_NC
;

114 
	gEFFECT_ACTIVE_END_M
;

119 
	gEFFECT_VISITED_START


121 i‡(
	gu£VisôedCﬁ‹
) {

122 i‡(
	gu£Cﬁ‹
) {

123 
	gEFFECT_VISITED_START_C
;

125 
	gEFFECT_VISITED_START_M
;

131 
	gEFFECT_VISITED_END


133 i‡(
	gu£VisôedCﬁ‹
) {

134 i‡(
	gu£Cﬁ‹
) {

135 
	gEFFECT_VISITED_END_C
;

137 
	gEFFECT_VISITED_END_M
;

144 
	#EFFECT_ANCHOR_START
 
	`undîlöe
()

	)

145 
	#EFFECT_ANCHOR_END
 
	`undîlöìnd
()

	)

146 
	#EFFECT_IMAGE_START
 
	`°™dout
()

	)

147 
	#EFFECT_IMAGE_END
 
	`°™díd
()

	)

148 
	#EFFECT_FORM_START
 
	`°™dout
()

	)

149 
	#EFFECT_FORM_END
 
	`°™díd
()

	)

150 
	#EFFECT_ACTIVE_START
 
	`bﬁd
()

	)

151 
	#EFFECT_ACTIVE_END
 
	`bﬁdíd
()

	)

152 
	#EFFECT_VISITED_START


	)

153 
	#EFFECT_VISITED_END


	)

154 
	#EFFECT_MARK_START
 
	`°™dout
()

	)

155 
	#EFFECT_MARK_END
 
	`°™díd
()

	)

160 
	$fmTîm
()

162 i‡(
fmInôülized
) {

163 
	`move
(
LASTLINE
, 0);

164 
	`˛π€ﬁx
();

165 
	`ª‰esh
();

166 #ifde‡
USE_IMAGE


167 i‡(
a˘iveImage
)

168 
	`lﬂdImage
(
NULL
, 
IMG_FLAG_STOP
);

170 #ifde‡
USE_MOUSE


171 i‡(
u£_mou£
)

172 
	`mou£_íd
();

174 
	`ª£t_ây
();

175 
fmInôülized
 = 
FALSE
;

177 
	}
}

184 
	$fmInô
()

186 i‡(!
fmInôülized
) {

187 
	`öôs¸
();

188 
	`ãrm_øw
();

189 
	`ãrm_n€cho
();

190 #ifde‡
USE_IMAGE


191 i‡(
di•œyImage
)

192 
	`öôImage
();

195 
fmInôülized
 = 
TRUE
;

196 
	}
}

201 
Löe
 *
	g˛öe
 = 
NULL
;

202 
	gccﬁumn
 = -1;

204 
	gulmode
 = 0, 
	gsomode
 = 0, 
	gbomode
 = 0;

205 
	g™ch_mode
 = 0, 
	gemph_mode
 = 0, 
	gimag_mode
 = 0, 
	gf‹m_mode
 = 0,

206 
	ga˘ive_mode
 = 0, 
	gvisôed_mode
 = 0, 
	gm¨k_mode
 = 0, 
	ggøph_mode
 = 0;

207 #ifde‡
USE_ANSI_COLOR


208 
Löecﬁ‹
 
	gcﬁ‹_mode
 = 0;

211 #ifde‡
USE_BUFINFO


212 
Buf„r
 *
	gßve_cuºít_buf
 = 
NULL
;

215 *
	gdñayed_msg
 = 
NULL
;

217 
døwAnch‹Curs‹
(
Buf„r
 *
buf
);

218 
	#ªdøwBuf„r
(
buf
Ë
	`ªdøwNLöe
(buf, 
LASTLINE
)

	)

219 
ªdøwNLöe
(
Buf„r
 *
buf
, 
n
);

220 
Löe
 *
ªdøwLöe
(
Buf„r
 *
buf
, Löê*
l
, 
i
);

221 #ifde‡
USE_IMAGE


222 
	gimage_touch
 = 0;

223 
	gdøw_image_Êag
 = 
FALSE
;

224 
Löe
 *
ªdøwLöeImage
(
Buf„r
 *
buf
, Löê*
l
, 
i
);

226 
ªdøwLöeRegi⁄
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
i
, 
bpos
, 
ïos
);

227 
do_ef„˘s
(
Löïr›
 
m
);

228 #ifde‡
USE_ANSI_COLOR


229 
do_cﬁ‹
(
Löecﬁ‹
 
c
);

232 
Så


233 
	$make_œ°löe_lök
(
Buf„r
 *
buf
, *
tôÀ
, *
uæ
)

235 
Så
 
s
 = 
NULL
, 
u
;

236 #ifde‡
USE_M17N


237 
Löïr›
 *
¥
;

239 
P¨£dURL
 
pu
;

240 *
p
;

241 
l
 = 
COLS
 - 1, 
i
;

243 i‡(
tôÀ
 && *title) {

244 
s
 = 
	`Så√w_m_ch¨p
("[", 
tôÀ
, "]", 
NULL
);

245 
p
 = 
s
->
±r
; *p;Ö++) {

246 i‡(
	`IS_CNTRL
(*
p
Ë|| 
	`IS_SPACE
(*p))

247 *
p
 = ' ';

249 i‡(
uæ
)

250 
	`Såˇt_ch¨p
(
s
, " ");

251 
l
 -
	`gë_Så_°rwidth
(
s
);

252 i‡(
l
 <= 0)

253  
s
;

255 i‡(!
uæ
)

256  
s
;

257 
	`∑r£URL2
(
uæ
, &
pu
, 
	`ba£URL
(
buf
));

258 
u
 = 
	`∑r£dURL2Så
(&
pu
);

259 i‡(
DecodeURL
)

260 
u
 = 
	`Så√w_ch¨p
(
	`uæ_unquŸe_c⁄v
(u->
±r
, 
buf
->
documít_ch¨£t
));

261 #ifde‡
USE_M17N


262 
u
 = 
	`checkTy≥
(u, &
¥
, 
NULL
);

264 i‡(
l
 <4 ||Ü >
	`gë_Så_°rwidth
(
u
)) {

265 i‡(!
s
)

266  
u
;

267 
	`Såˇt
(
s
, 
u
);

268  
s
;

270 i‡(!
s
)

271 
s
 = 
	`Så√w_size
(
COLS
);

272 
i
 = (
l
 - 2) / 2;

273 #ifde‡
USE_M17N


274 
i
 && 
¥
[i] & 
PC_WCHAR2
)

275 
i
--;

277 
	`Såˇt_ch¨p_n
(
s
, 
u
->
±r
, 
i
);

278 
	`Såˇt_ch¨p
(
s
, "..");

279 
i
 = 
	`gë_Så_°rwidth
(
u
Ë- (
COLS
 - 1 - gë_Så_°rwidth(
s
));

280 #ifde‡
USE_M17N


281 
i
 < 
u
->
Àngth
 && 
¥
[i] & 
PC_WCHAR2
)

282 
i
++;

284 
	`Såˇt_ch¨p
(
s
, &
u
->
±r
[
i
]);

285  
s
;

286 
	}
}

288 
Så


289 
	$make_œ°löe_mesßge
(
Buf„r
 *
buf
)

291 
Så
 
msg
, 
s
 = 
NULL
;

292 
¶
 = 0;

294 i‡(
di•œyLök
) {

295 #ifde‡
USE_IMAGE


296 
M≠Aªa
 *
a
 = 
	`ªåõveCuºítM≠Aªa
(
buf
);

297 i‡(
a
)

298 
s
 = 
	`make_œ°löe_lök
(
buf
, 
a
->
Æt
,á->
uæ
);

302 
Anch‹
 *
a
 = 
	`ªåõveCuºítAnch‹
(
buf
);

303 *
p
 = 
NULL
;

304 i‡(
a
 &&á->
tôÀ
 && *a->title)

305 
p
 = 
a
->
tôÀ
;

307 
Anch‹
 *
a_img
 = 
	`ªåõveCuºítImg
(
buf
);

308 i‡(
a_img
 &&á_img->
tôÀ
 && *a_img->title)

309 
p
 = 
a_img
->
tôÀ
;

311 i‡(
p
 || 
a
)

312 
s
 = 
	`make_œ°löe_lök
(
buf
, 
p
, 
a
 ?á->
uæ
 : 
NULL
);

314 i‡(
s
) {

315 
¶
 = 
	`gë_Så_°rwidth
(
s
);

316 i‡(
¶
 >
COLS
 - 3)

317  
s
;

321 #ifde‡
USE_MOUSE


322 i‡(
u£_mou£
 && 
mou£_a˘i⁄
.
œ°löe_°r
)

323 
msg
 = 
	`Så√w_ch¨p
(
mou£_a˘i⁄
.
œ°löe_°r
);

326 
msg
 = 
	`Så√w
();

327 i‡(
di•œyLöeInfo
 && 
buf
->
cuºítLöe
 !
NULL
 && buf->
œ°Löe
 != NULL) {

328 
˛
 = 
buf
->
cuºítLöe
->
ªÆ_löíumbî
;

329 
Œ
 = 
buf
->
œ°Löe
->
ªÆ_löíumbî
;

330 
r
 = ()(()
˛
 * 100.0 / ()(
Œ
 ?Ül : 1) + 0.5);

331 
	`Såˇt
(
msg
, 
	`S¥ötf
("%d/%d (%d%%)", 
˛
, 
Œ
, 
r
));

335 
	`Såˇt_ch¨p
(
msg
, "Viewing");

336 #ifde‡
USE_SSL


337 i‡(
buf
->
s¶_˚πifiˇã
)

338 
	`Såˇt_ch¨p
(
msg
, "[SSL]");

340 
	`Såˇt_ch¨p
(
msg
, " <");

341 
	`Såˇt_ch¨p
(
msg
, 
buf
->
buf„∫ame
);

343 i‡(
s
) {

344 
l
 = 
COLS
 - 3 - 
¶
;

345 i‡(
	`gë_Så_°rwidth
(
msg
Ë> 
l
) {

346 #ifde‡
USE_M17N


347 *
p
;

348 
p
 = 
msg
->
±r
; *p;Ö +
	`gë_m˛í
(p)) {

349 
l
 -
	`gë_mcwidth
(
p
);

350 i‡(
l
 < 0)

353 
l
 = 
p
 - 
msg
->
±r
;

355 
	`Sååunˇã
(
msg
, 
l
);

357 
	`Såˇt_ch¨p
(
msg
, "> ");

358 
	`Såˇt
(
msg
, 
s
);

361 
	`Såˇt_ch¨p
(
msg
, ">");

363  
msg
;

364 
	}
}

367 
	$di•œyBuf„r
(
Buf„r
 *
buf
, 
mode
)

369 
Så
 
msg
;

370 
ny
 = 0;

372 i‡(!
buf
)

374 i‡(
buf
->
t›Löe
 =
NULL
 && 
	`ªadBuf„rCache
(buf) == 0) {

375 
mode
 = 
B_FORCE_REDRAW
;

378 i‡(
buf
->
width
 == 0)

379 
buf
->
width
 = 
INIT_BUFFER_WIDTH
;

380 i‡(
buf
->
height
 == 0)

381 
buf
->
height
 = 
LASTLINE
 + 1;

382 i‡((
buf
->
width
 !
INIT_BUFFER_WIDTH
 &&

383 ((
buf
->
ty≥
 && !
	`°rcmp
(buf->ty≥, "ãxt/html")Ë|| 
FﬁdLöe
))

384 || 
buf
->
√ed_ªsh≠e
) {

385 
buf
->
√ed_ªsh≠e
 = 
TRUE
;

386 
	`ªsh≠eBuf„r
(
buf
);

388 i‡(
showLöeNum
) {

389 i‡(
buf
->
œ°Löe
 && buf->œ°Löe->
ªÆ_löíumbî
 > 0)

390 
buf
->
roŸX
 = ()(
	`log
(buf->
œ°Löe
->
ªÆ_löíumbî
 + 0.1)

391 / 
	`log
(10)) + 2;

392 i‡(
buf
->
roŸX
 < 5)

393 
buf
->
roŸX
 = 5;

394 i‡(
buf
->
roŸX
 > 
COLS
)

395 
buf
->
roŸX
 = 
COLS
;

398 
buf
->
roŸX
 = 0;

399 
buf
->
COLS
 = COLS - buf->
roŸX
;

400 i‡(
nTab
 > 1

401 #ifde‡
USE_MOUSE


402 || 
mou£_a˘i⁄
.
míu_°r


405 i‡(
mode
 =
B_FORCE_REDRAW
 || modê=
B_REDRAW_IMAGE
)

406 
	`ˇlcTabPos
();

407 
ny
 = 
La°Tab
->
y
 + 2;

408 i‡(
ny
 > 
LASTLINE
)

409 
ny
 = 
LASTLINE
;

411 i‡(
buf
->
roŸY
 !
ny
 || buf->
LINES
 !
LASTLINE
 -Çy) {

412 
buf
->
roŸY
 = 
ny
;

413 
buf
->
LINES
 = 
LASTLINE
 - 
ny
;

414 
	`¨øngeCurs‹
(
buf
);

415 
mode
 = 
B_REDRAW_IMAGE
;

417 i‡(
mode
 =
B_FORCE_REDRAW
 || modê=
B_SCROLL
 || modê=
B_REDRAW_IMAGE
 ||

418 
˛öe
 !
buf
->
t›Löe
 || 
ccﬁumn
 !buf->
cuºítCﬁumn
) {

419 #ifde‡
USE_RAW_SCROLL


421 #ifde‡
USE_IMAGE


422 !(
a˘iveImage
 && 
di•œyImage
 && 
døw_image_Êag
) &&

424 
mode
 =
B_SCROLL
 && 
˛öe
 && 
buf
->
cuºítCﬁumn
 =
ccﬁumn
) {

425 
n
 = 
buf
->
t›Löe
->
löíumbî
 - 
˛öe
->linenumber;

426 i‡(
n
 > 0 &&Ç < 
buf
->
LINES
) {

427 
	`move
(
LASTLINE
, 0);

428 
	`˛π€ﬁx
();

429 
	`ª‰esh
();

430 
	`s¸ﬁl
(
n
);

432 i‡(
n
 < 0 &&Ç > -
buf
->
LINES
) {

434 
	`move
(
LASTLINE
 + 
n
 + 1, 0);

435 
	`˛π€ﬁx
();

436 
	`ª‰esh
();

438 
	`rs¸ﬁl
(-
n
);

440 
	`ªdøwNLöe
(
buf
, 
n
);

445 #ifde‡
USE_IMAGE


446 i‡(
a˘iveImage
 &&

447 (
mode
 =
B_REDRAW_IMAGE
 ||

448 
˛öe
 !
buf
->
t›Löe
 || 
ccﬁumn
 !buf->
cuºítCﬁumn
)) {

449 i‡(
døw_image_Êag
)

450 
	`˛ór
();

451 
	`˛órImage
();

452 
	`lﬂdImage
(
buf
, 
IMG_FLAG_STOP
);

453 
image_touch
++;

454 
døw_image_Êag
 = 
FALSE
;

457 
	`ªdøwBuf„r
(
buf
);

459 
˛öe
 = 
buf
->
t›Löe
;

460 
ccﬁumn
 = 
buf
->
cuºítCﬁumn
;

462 i‡(
buf
->
t›Löe
 =
NULL
)

463 
buf
->
t›Löe
 = buf->
fú°Löe
;

465 #ifde‡
USE_IMAGE


466 i‡(
buf
->
√ed_ªsh≠e
) {

467 
	`di•œyBuf„r
(
buf
, 
B_FORCE_REDRAW
);

472 
	`døwAnch‹Curs‹
(
buf
);

474 
msg
 = 
	`make_œ°löe_mesßge
(
buf
);

475 i‡(
buf
->
fú°Löe
 =
NULL
) {

477 
	`Såˇt_ch¨p
(
msg
, "\tNo Line");

479 i‡(
dñayed_msg
 !
NULL
) {

480 
	`di•_mesßge
(
dñayed_msg
, 
FALSE
);

481 
dñayed_msg
 = 
NULL
;

482 
	`ª‰esh
();

484 
	`°™dout
();

485 
	`mesßge
(
msg
->
±r
, 
buf
->
curs‹X
 + buf->
roŸX
, buf->
curs‹Y
 + buf->
roŸY
);

486 
	`°™díd
();

487 
	`ãrm_tôÀ
(
	`c⁄v_to_sy°em
(
buf
->
buf„∫ame
));

488 
	`ª‰esh
();

489 #ifde‡
USE_IMAGE


490 i‡(
a˘iveImage
 && 
di•œyImage
 && 
buf
->
img
) {

491 
	`døwImage
();

494 #ifde‡
USE_BUFINFO


495 i‡(
buf
 !
ßve_cuºít_buf
) {

496 
	`ßveBuf„rInfo
();

497 
ßve_cuºít_buf
 = 
buf
;

500 
	}
}

503 
	$døwAnch‹Curs‹0
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
, 
h£q
, 
¥evh£q
,

504 
éöe
, 
ñöe
, 
a˘ive
)

506 
i
, 
j
;

507 
Löe
 *
l
;

508 
Anch‹
 *
™
;

510 
l
 = 
buf
->
t›Löe
;

511 
j
 = 0; j < 
Æ
->
«nch‹
; j++) {

512 
™
 = &
Æ
->
™ch‹s
[
j
];

513 i‡(
™
->
°¨t
.
löe
 < 
éöe
)

515 i‡(
™
->
°¨t
.
löe
 >
ñöe
)

517 ;; 
l
 =Ü->
√xt
) {

518 i‡(
l
 =
NULL
)

520 i‡(
l
->
löíumbî
 =
™
->
°¨t
.
löe
)

523 i‡(
h£q
 >0 && 
™
->hseq == hseq) {

524 
i
 = 
™
->
°¨t
.
pos
; i <án->
íd
.pos; i++) {

525 i‡(
l
->
¥›Buf
[
i
] & (
PE_IMAGE
 | 
PE_ANCHOR
 | 
PE_FORM
)) {

526 i‡(
a˘ive
)

527 
l
->
¥›Buf
[
i
] |
PE_ACTIVE
;

529 
l
->
¥›Buf
[
i
] &~
PE_ACTIVE
;

532 i‡(
a˘ive
)

533 
	`ªdøwLöeRegi⁄
(
buf
, 
l
,Ü->
löíumbî
 - 
éöe
 + buf->
roŸY
,

534 
™
->
°¨t
.
pos
,án->
íd
.pos);

536 i‡(
¥evh£q
 >0 && 
™
->
h£q
 ==Örevhseq) {

537 i‡(
a˘ive
)

538 
	`ªdøwLöeRegi⁄
(
buf
, 
l
,Ü->
löíumbî
 - 
éöe
 + buf->
roŸY
,

539 
™
->
°¨t
.
pos
,án->
íd
.pos);

542 
	}
}

545 
	$døwAnch‹Curs‹
(
Buf„r
 *
buf
)

547 
Anch‹
 *
™
;

548 
h£q
, 
¥evh£q
;

549 
éöe
, 
ñöe
;

551 i‡(!
buf
->
fú°Löe
 || !buf->
hm¨kli°
)

553 i‡(!
buf
->
hªf
 && !buf->
f‹môem
)

556 
™
 = 
	`ªåõveCuºítAnch‹
(
buf
);

557 i‡(!
™
)

558 
™
 = 
	`ªåõveCuºítM≠
(
buf
);

559 i‡(
™
)

560 
h£q
 = 
™
->hseq;

562 
h£q
 = -1;

563 
éöe
 = 
buf
->
t›Löe
->
löíumbî
;

564 
ñöe
 = 
éöe
 + 
buf
->
LINES
;

565 
¥evh£q
 = 
buf
->
hm¨kli°
->prevhseq;

567 i‡(
buf
->
hªf
) {

568 
	`døwAnch‹Curs‹0
(
buf
, buf->
hªf
, 
h£q
, 
¥evh£q
, 
éöe
, 
ñöe
, 1);

569 
	`døwAnch‹Curs‹0
(
buf
, buf->
hªf
, 
h£q
, -1, 
éöe
, 
ñöe
, 0);

571 i‡(
buf
->
f‹môem
) {

572 
	`døwAnch‹Curs‹0
(
buf
, buf->
f‹môem
, 
h£q
, 
¥evh£q
, 
éöe
, 
ñöe
, 1);

573 
	`døwAnch‹Curs‹0
(
buf
, buf->
f‹môem
, 
h£q
, -1, 
éöe
, 
ñöe
, 0);

575 
buf
->
hm¨kli°
->
¥evh£q
 = 
h£q
;

576 
	}
}

579 
	$ªdøwNLöe
(
Buf„r
 *
buf
, 
n
)

581 
Löe
 *
l
;

582 
i
;

584 #ifde‡
USE_COLOR


585 i‡(
u£Cﬁ‹
) {

586 
EFFECT_ANCHOR_END_C
;

587 #ifde‡
USE_BG_COLOR


588 
	`£tbcﬁ‹
(
bg_cﬁ‹
);

592 i‡(
nTab
 > 1

593 #ifde‡
USE_MOUSE


594 || 
mou£_a˘i⁄
.
míu_°r


597 
TabBuf„r
 *
t
;

598 
l
;

600 
	`move
(0, 0);

601 #ifde‡
USE_MOUSE


602 i‡(
mou£_a˘i⁄
.
míu_°r
)

603 
	`add°r
(
mou£_a˘i⁄
.
míu_°r
);

605 
	`˛π€ﬁx
();

606 
t
 = 
Fú°Tab
;Å;Å =Å->
√xtTab
) {

607 
	`move
(
t
->
y
,Å->
x1
);

608 i‡(
t
 =
CuºítTab
)

609 
	`bﬁd
();

610 
	`addch
('[');

611 
l
 = 
t
->
x2
 -Å->
x1
 - 1 - 
	`gë_°rwidth
—->
cuºítBuf„r
->
buf„∫ame
);

612 i‡(
l
 < 0)

613 
l
 = 0;

614 i‡(
l
 / 2 > 0)

615 
	`addn°r_sup
(" ", 
l
 / 2);

616 i‡(
t
 =
CuºítTab
)

617 
EFFECT_ACTIVE_START
;

618 
	`addn°r
(
t
->
cuºítBuf„r
->
buf„∫ame
,Å->
x2
 -Å->
x1
 - 
l
);

619 i‡(
t
 =
CuºítTab
)

620 
EFFECT_ACTIVE_END
;

621 i‡((
l
 + 1) / 2 > 0)

622 
	`addn°r_sup
(" ", (
l
 + 1) / 2);

623 
	`move
(
t
->
y
,Å->
x2
);

624 
	`addch
(']');

625 i‡(
t
 =
CuºítTab
)

626 
	`bﬁdíd
();

629 
	`move
(0, 
COLS
 - 2);

630 
	`add°r
(" x");

632 
	`move
(
La°Tab
->
y
 + 1, 0);

633 
i
 = 0; i < 
COLS
; i++)

634 
	`addch
('~');

636 
i
 = 0, 
l
 = 
buf
->
t›Löe
; i < buf->
LINES
; i++,Ü =Ü->
√xt
) {

637 i‡(
i
 >
buf
->
LINES
 - 
n
 || i < -n)

638 
l
 = 
	`ªdøwLöe
(
buf
,Ü, 
i
 + buf->
roŸY
);

639 i‡(
l
 =
NULL
)

642 i‡(
n
 > 0) {

643 
	`move
(
i
 + 
buf
->
roŸY
, 0);

644 
	`˛πobŸx
();

647 #ifde‡
USE_IMAGE


648 i‡(!(
a˘iveImage
 && 
di•œyImage
 && 
buf
->
img
))

650 
	`move
(
buf
->
curs‹Y
 + buf->
roŸY
, buf->
curs‹X
 + buf->
roŸX
);

651 
i
 = 0, 
l
 = 
buf
->
t›Löe
; i < buf->
LINES
 &&Ü; i++,Ü =Ü->
√xt
) {

652 i‡(
i
 >
buf
->
LINES
 - 
n
 || i < -n)

653 
	`ªdøwLöeImage
(
buf
, 
l
, 
i
 + buf->
roŸY
);

655 
	`gëAŒImage
(
buf
);

657 
	}
}

659 
Löe
 *

660 
	$ªdøwLöe
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
i
)

662 
j
, 
pos
, 
rcﬁ
, 
ncﬁ
, 
dñè
 = 1;

663 
cﬁumn
 = 
buf
->
cuºítCﬁumn
;

664 *
p
;

665 
Löïr›
 *
¥
;

666 #ifde‡
USE_ANSI_COLOR


667 
Löecﬁ‹
 *
pc
;

669 #ifde‡
USE_COLOR


670 
Anch‹
 *
a
;

671 
P¨£dURL
 
uæ
;

672 
k
, 
vpos
 = -1;

675 i‡(
l
 =
NULL
) {

676 i‡(
buf
->
∑gîSour˚
) {

677 
l
 = 
	`gëNextPage
(
buf
, buf->
LINES
 + buf->
roŸY
 - 
i
);

678 i‡(
l
 =
NULL
)

679  
NULL
;

682  
NULL
;

684 
	`move
(
i
, 0);

685 i‡(
showLöeNum
) {

686 
tmp
[16];

687 i‡(!
buf
->
roŸX
) {

688 i‡(
buf
->
œ°Löe
->
ªÆ_löíumbî
 > 0)

689 
buf
->
roŸX
 = ()(
	`log
(buf->
œ°Löe
->
ªÆ_löíumbî
 + 0.1)

690 / 
	`log
(10)) + 2;

691 i‡(
buf
->
roŸX
 < 5)

692 
buf
->
roŸX
 = 5;

693 i‡(
buf
->
roŸX
 > 
COLS
)

694 
buf
->
roŸX
 = 
COLS
;

695 
buf
->
COLS
 = COLS - buf->
roŸX
;

697 i‡(
l
->
ªÆ_löíumbî
 && !l->
bpos
)

698 
	`•rötf
(
tmp
, "%*ld:", 
buf
->
roŸX
 - 1, 
l
->
ªÆ_löíumbî
);

700 
	`•rötf
(
tmp
, "%*†", 
buf
->
roŸX
 - 1, "");

701 
	`add°r
(
tmp
);

703 
	`move
(
i
, 
buf
->
roŸX
);

704 i‡(
l
->
width
 < 0)

705 
l
->
width
 = 
	`COLPOS
÷,Ü->
Àn
);

706 i‡(
l
->
Àn
 =0 ||Ü->
width
 - 1 < 
cﬁumn
) {

707 
	`˛π€ﬁx
();

708  
l
;

711 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁumn
);

712 
p
 = &(
l
->
löeBuf
[
pos
]);

713 
¥
 = &(
l
->
¥›Buf
[
pos
]);

714 #ifde‡
USE_ANSI_COLOR


715 i‡(
u£Cﬁ‹
 && 
l
->
cﬁ‹Buf
)

716 
pc
 = &(
l
->
cﬁ‹Buf
[
pos
]);

718 
pc
 = 
NULL
;

720 
rcﬁ
 = 
	`COLPOS
(
l
, 
pos
);

722 
j
 = 0; 
rcﬁ
 - 
cﬁumn
 < 
buf
->
COLS
 && 
pos
 + j < 
l
->
Àn
; j +
dñè
) {

723 #ifde‡
USE_COLOR


724 i‡(
u£VisôedCﬁ‹
 && 
vpos
 <
pos
 + 
j
 && !(
¥
[j] & 
PE_VISITED
)) {

725 
a
 = 
	`ªåõveAnch‹
(
buf
->
hªf
, 
l
->
löíumbî
, 
pos
 + 
j
);

726 i‡(
a
) {

727 
	`∑r£URL2
(
a
->
uæ
, &uæ, 
	`ba£URL
(
buf
));

728 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

729 
k
 = 
a
->
°¨t
.
pos
; k <á->
íd
.pos; k++)

730 
¥
[
k
 - 
pos
] |
PE_VISITED
;

732 
vpos
 = 
a
->
íd
.
pos
;

736 #ifde‡
USE_M17N


737 
dñè
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë& 
p
[
j
]);

739 
ncﬁ
 = 
	`COLPOS
(
l
, 
pos
 + 
j
 + 
dñè
);

740 i‡(
ncﬁ
 - 
cﬁumn
 > 
buf
->
COLS
)

742 #ifde‡
USE_ANSI_COLOR


743 i‡(
pc
)

744 
	`do_cﬁ‹
(
pc
[
j
]);

746 i‡(
rcﬁ
 < 
cﬁumn
) {

747 
rcﬁ
 = 
cﬁumn
;Ñcﬁ < 
ncﬁ
;Ñcol++)

748 
	`addCh¨
(' ', 0);

751 i‡(
p
[
j
] == '\t') {

752 ; 
rcﬁ
 < 
ncﬁ
;Ñcol++)

753 
	`addCh¨
(' ', 0);

756 #ifde‡
USE_M17N


757 
	`addMCh¨
(&
p
[
j
], 
¥
[j], 
dñè
);

759 
	`addCh¨
(
p
[
j
], 
¥
[j]);

762 
rcﬁ
 = 
ncﬁ
;

764 i‡(
somode
) {

765 
somode
 = 
FALSE
;

766 
	`°™díd
();

768 i‡(
ulmode
) {

769 
ulmode
 = 
FALSE
;

770 
	`undîlöìnd
();

772 i‡(
bomode
) {

773 
bomode
 = 
FALSE
;

774 
	`bﬁdíd
();

776 i‡(
emph_mode
) {

777 
emph_mode
 = 
FALSE
;

778 
	`bﬁdíd
();

781 i‡(
™ch_mode
) {

782 
™ch_mode
 = 
FALSE
;

783 
EFFECT_ANCHOR_END
;

785 i‡(
imag_mode
) {

786 
imag_mode
 = 
FALSE
;

787 
EFFECT_IMAGE_END
;

789 i‡(
f‹m_mode
) {

790 
f‹m_mode
 = 
FALSE
;

791 
EFFECT_FORM_END
;

793 i‡(
visôed_mode
) {

794 
visôed_mode
 = 
FALSE
;

795 
EFFECT_VISITED_END
;

797 i‡(
a˘ive_mode
) {

798 
a˘ive_mode
 = 
FALSE
;

799 
EFFECT_ACTIVE_END
;

801 i‡(
m¨k_mode
) {

802 
m¨k_mode
 = 
FALSE
;

803 
EFFECT_MARK_END
;

805 i‡(
gøph_mode
) {

806 
gøph_mode
 = 
FALSE
;

807 
	`gøphíd
();

809 #ifde‡
USE_ANSI_COLOR


810 i‡(
cﬁ‹_mode
)

811 
	`do_cﬁ‹
(0);

813 i‡(
rcﬁ
 - 
cﬁumn
 < 
buf
->
COLS
)

814 
	`˛π€ﬁx
();

815  
l
;

816 
	}
}

818 #ifde‡
USE_IMAGE


819 
Löe
 *

820 
	$ªdøwLöeImage
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
i
)

822 
j
, 
pos
, 
rcﬁ
;

823 
cﬁumn
 = 
buf
->
cuºítCﬁumn
;

824 
Anch‹
 *
a
;

825 
x
, 
y
, 
sx
, 
sy
, 
w
, 
h
;

827 i‡(
l
 =
NULL
)

828  
NULL
;

829 i‡(
l
->
width
 < 0)

830 
l
->
width
 = 
	`COLPOS
÷,Ü->
Àn
);

831 i‡(
l
->
Àn
 =0 ||Ü->
width
 - 1 < 
cﬁumn
)

832  
l
;

833 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁumn
);

834 
rcﬁ
 = 
	`COLPOS
(
l
, 
pos
);

835 
j
 = 0; 
rcﬁ
 - 
cﬁumn
 < 
buf
->
COLS
 && 
pos
 + j < 
l
->
Àn
; j++) {

836 i‡(
rcﬁ
 - 
cﬁumn
 < 0) {

837 
rcﬁ
 = 
	`COLPOS
(
l
, 
pos
 + 
j
 + 1);

840 
a
 = 
	`ªåõveAnch‹
(
buf
->
img
, 
l
->
löíumbî
, 
pos
 + 
j
);

841 i‡(
a
 &&á->
image
 &&á->image->
touch
 < 
image_touch
) {

842 
Image
 *
image
 = 
a
->image;

843 
ImageCache
 *
ˇche
;

845 
ˇche
 = 
image
->ˇchê
	`gëImage
(image, 
	`ba£URL
(
buf
),

846 
buf
->
image_Êag
);

847 i‡(
ˇche
) {

848 i‡((
image
->
width
 < 0 && 
ˇche
->width > 0) ||

849 (
image
->
height
 < 0 && 
ˇche
->height > 0)) {

850 
image
->
width
 = 
ˇche
->width;

851 
image
->
height
 = 
ˇche
->height;

852 
buf
->
√ed_ªsh≠e
 = 
TRUE
;

854 
x
 = ()((
rcﬁ
 - 
cﬁumn
 + 
buf
->
roŸX
Ë* 
pixñ_≥r_ch¨
);

855 
y
 = ()(
i
 * 
pixñ_≥r_löe
);

856 
sx
 = ()((
rcﬁ
 - 
	`COLPOS
(
l
, 
a
->
°¨t
.
pos
)Ë* 
pixñ_≥r_ch¨
);

857 
sy
 = ()((
l
->
löíumbî
 - 
image
->
y
Ë* 
pixñ_≥r_löe
);

858 i‡(
sx
 =0 && 
x
 + 
image
->
xoff£t
 >= 0)

859 
x
 +
image
->
xoff£t
;

861 
sx
 -
image
->
xoff£t
;

862 i‡(
sy
 =0 && 
y
 + 
image
->
yoff£t
 >= 0)

863 
y
 +
image
->
yoff£t
;

865 
sy
 -
image
->
yoff£t
;

866 i‡(
image
->
width
 > 0)

867 
w
 = 
image
->
width
 - 
sx
;

869 
w
 = ()(8 * 
pixñ_≥r_ch¨
 - 
sx
);

870 i‡(
image
->
height
 > 0)

871 
h
 = 
image
->
height
 - 
sy
;

873 
h
 = ()(
pixñ_≥r_löe
 - 
sy
);

874 i‡(
w
 > ()((
buf
->
roŸX
 + buf->
COLS
Ë* 
pixñ_≥r_ch¨
 - 
x
))

875 
w
 = ()((
buf
->
roŸX
 + buf->
COLS
Ë* 
pixñ_≥r_ch¨
 - 
x
);

876 i‡(
h
 > ()(
LASTLINE
 * 
pixñ_≥r_löe
 - 
y
))

877 
h
 = ()(
LASTLINE
 * 
pixñ_≥r_löe
 - 
y
);

878 
	`addImage
(
ˇche
, 
x
, 
y
, 
sx
, 
sy
, 
w
, 
h
);

879 
image
->
touch
 = 
image_touch
;

880 
døw_image_Êag
 = 
TRUE
;

883 
rcﬁ
 = 
	`COLPOS
(
l
, 
pos
 + 
j
 + 1);

885  
l
;

886 
	}
}

890 
	$ªdøwLöeRegi⁄
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
i
, 
bpos
, 
ïos
)

892 
j
, 
pos
, 
rcﬁ
, 
ncﬁ
, 
dñè
 = 1;

893 
cﬁumn
 = 
buf
->
cuºítCﬁumn
;

894 *
p
;

895 
Löïr›
 *
¥
;

896 #ifde‡
USE_ANSI_COLOR


897 
Löecﬁ‹
 *
pc
;

899 
bcﬁ
, 
ecﬁ
;

900 #ifde‡
USE_COLOR


901 
Anch‹
 *
a
;

902 
P¨£dURL
 
uæ
;

903 
k
, 
vpos
 = -1;

906 i‡(
l
 =
NULL
)

908 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁumn
);

909 
p
 = &(
l
->
löeBuf
[
pos
]);

910 
¥
 = &(
l
->
¥›Buf
[
pos
]);

911 #ifde‡
USE_ANSI_COLOR


912 i‡(
u£Cﬁ‹
 && 
l
->
cﬁ‹Buf
)

913 
pc
 = &(
l
->
cﬁ‹Buf
[
pos
]);

915 
pc
 = 
NULL
;

917 
rcﬁ
 = 
	`COLPOS
(
l
, 
pos
);

918 
bcﬁ
 = 
bpos
 - 
pos
;

919 
ecﬁ
 = 
ïos
 - 
pos
;

921 
j
 = 0; 
rcﬁ
 - 
cﬁumn
 < 
buf
->
COLS
 && 
pos
 + j < 
l
->
Àn
; j +
dñè
) {

922 #ifde‡
USE_COLOR


923 i‡(
u£VisôedCﬁ‹
 && 
vpos
 <
pos
 + 
j
 && !(
¥
[j] & 
PE_VISITED
)) {

924 
a
 = 
	`ªåõveAnch‹
(
buf
->
hªf
, 
l
->
löíumbî
, 
pos
 + 
j
);

925 i‡(
a
) {

926 
	`∑r£URL2
(
a
->
uæ
, &uæ, 
	`ba£URL
(
buf
));

927 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

928 
k
 = 
a
->
°¨t
.
pos
; k <á->
íd
.pos; k++)

929 
¥
[
k
 - 
pos
] |
PE_VISITED
;

931 
vpos
 = 
a
->
íd
.
pos
;

935 #ifde‡
USE_M17N


936 
dñè
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë& 
p
[
j
]);

938 
ncﬁ
 = 
	`COLPOS
(
l
, 
pos
 + 
j
 + 
dñè
);

939 i‡(
ncﬁ
 - 
cﬁumn
 > 
buf
->
COLS
)

941 #ifde‡
USE_ANSI_COLOR


942 i‡(
pc
)

943 
	`do_cﬁ‹
(
pc
[
j
]);

945 i‡(
j
 >
bcﬁ
 && j < 
ecﬁ
) {

946 i‡(
rcﬁ
 < 
cﬁumn
) {

947 
	`move
(
i
, 
buf
->
roŸX
);

948 
rcﬁ
 = 
cﬁumn
;Ñcﬁ < 
ncﬁ
;Ñcol++)

949 
	`addCh¨
(' ', 0);

952 
	`move
(
i
, 
rcﬁ
 - 
cﬁumn
 + 
buf
->
roŸX
);

953 i‡(
p
[
j
] == '\t') {

954 ; 
rcﬁ
 < 
ncﬁ
;Ñcol++)

955 
	`addCh¨
(' ', 0);

958 #ifde‡
USE_M17N


959 
	`addMCh¨
(&
p
[
j
], 
¥
[j], 
dñè
);

961 
	`addCh¨
(
p
[
j
], 
¥
[j]);

964 
rcﬁ
 = 
ncﬁ
;

966 i‡(
somode
) {

967 
somode
 = 
FALSE
;

968 
	`°™díd
();

970 i‡(
ulmode
) {

971 
ulmode
 = 
FALSE
;

972 
	`undîlöìnd
();

974 i‡(
bomode
) {

975 
bomode
 = 
FALSE
;

976 
	`bﬁdíd
();

978 i‡(
emph_mode
) {

979 
emph_mode
 = 
FALSE
;

980 
	`bﬁdíd
();

983 i‡(
™ch_mode
) {

984 
™ch_mode
 = 
FALSE
;

985 
EFFECT_ANCHOR_END
;

987 i‡(
imag_mode
) {

988 
imag_mode
 = 
FALSE
;

989 
EFFECT_IMAGE_END
;

991 i‡(
f‹m_mode
) {

992 
f‹m_mode
 = 
FALSE
;

993 
EFFECT_FORM_END
;

995 i‡(
visôed_mode
) {

996 
visôed_mode
 = 
FALSE
;

997 
EFFECT_VISITED_END
;

999 i‡(
a˘ive_mode
) {

1000 
a˘ive_mode
 = 
FALSE
;

1001 
EFFECT_ACTIVE_END
;

1003 i‡(
m¨k_mode
) {

1004 
m¨k_mode
 = 
FALSE
;

1005 
EFFECT_MARK_END
;

1007 i‡(
gøph_mode
) {

1008 
gøph_mode
 = 
FALSE
;

1009 
	`gøphíd
();

1011 #ifde‡
USE_ANSI_COLOR


1012 i‡(
cﬁ‹_mode
)

1013 
	`do_cﬁ‹
(0);

1015  
rcﬁ
 - 
cﬁumn
;

1016 
	}
}

1018 
	#do_ef„˘1
(
ef„˘
,
modeÊag
,
a˘i⁄_°¨t
,
a˘i⁄_íd
) \

1019 i‡(
m
 & 
ef„˘
) { \

1020 i‡(!
modeÊag
) { \

1021 
a˘i⁄_°¨t
; \

1022 
modeÊag
 = 
TRUE
; \

1024 }

	)

1026 
	#do_ef„˘2
(
ef„˘
,
modeÊag
,
a˘i⁄_°¨t
,
a˘i⁄_íd
) \

1027 i‡(
modeÊag
) { \

1028 
a˘i⁄_íd
; \

1029 
modeÊag
 = 
FALSE
; \

1030 }

	)

1033 
	$do_ef„˘s
(
Löïr›
 
m
)

1036 
	`do_ef„˘2
(
PE_UNDER
, 
ulmode
, 
	`undîlöe
(), 
	`undîlöìnd
());

1037 
	`do_ef„˘2
(
PE_STAND
, 
somode
, 
	`°™dout
(), 
	`°™díd
());

1038 
	`do_ef„˘2
(
PE_BOLD
, 
bomode
, 
	`bﬁd
(), 
	`bﬁdíd
());

1039 
	`do_ef„˘2
(
PE_EMPH
, 
emph_mode
, 
	`bﬁd
(), 
	`bﬁdíd
());

1040 
	`do_ef„˘2
(
PE_ANCHOR
, 
™ch_mode
, 
EFFECT_ANCHOR_START
, 
EFFECT_ANCHOR_END
);

1041 
	`do_ef„˘2
(
PE_IMAGE
, 
imag_mode
, 
EFFECT_IMAGE_START
, 
EFFECT_IMAGE_END
);

1042 
	`do_ef„˘2
(
PE_FORM
, 
f‹m_mode
, 
EFFECT_FORM_START
, 
EFFECT_FORM_END
);

1043 
	`do_ef„˘2
(
PE_VISITED
, 
visôed_mode
, 
EFFECT_VISITED_START
,

1044 
EFFECT_VISITED_END
);

1045 
	`do_ef„˘2
(
PE_ACTIVE
, 
a˘ive_mode
, 
EFFECT_ACTIVE_START
, 
EFFECT_ACTIVE_END
);

1046 
	`do_ef„˘2
(
PE_MARK
, 
m¨k_mode
, 
EFFECT_MARK_START
, 
EFFECT_MARK_END
);

1047 i‡(
gøph_mode
) {

1048 
	`gøphíd
();

1049 
gøph_mode
 = 
FALSE
;

1053 
	`do_ef„˘1
(
PE_UNDER
, 
ulmode
, 
	`undîlöe
(), 
	`undîlöìnd
());

1054 
	`do_ef„˘1
(
PE_STAND
, 
somode
, 
	`°™dout
(), 
	`°™díd
());

1055 
	`do_ef„˘1
(
PE_BOLD
, 
bomode
, 
	`bﬁd
(), 
	`bﬁdíd
());

1056 
	`do_ef„˘1
(
PE_EMPH
, 
emph_mode
, 
	`bﬁd
(), 
	`bﬁdíd
());

1057 
	`do_ef„˘1
(
PE_ANCHOR
, 
™ch_mode
, 
EFFECT_ANCHOR_START
, 
EFFECT_ANCHOR_END
);

1058 
	`do_ef„˘1
(
PE_IMAGE
, 
imag_mode
, 
EFFECT_IMAGE_START
, 
EFFECT_IMAGE_END
);

1059 
	`do_ef„˘1
(
PE_FORM
, 
f‹m_mode
, 
EFFECT_FORM_START
, 
EFFECT_FORM_END
);

1060 
	`do_ef„˘1
(
PE_VISITED
, 
visôed_mode
, 
EFFECT_VISITED_START
,

1061 
EFFECT_VISITED_END
);

1062 
	`do_ef„˘1
(
PE_ACTIVE
, 
a˘ive_mode
, 
EFFECT_ACTIVE_START
, 
EFFECT_ACTIVE_END
);

1063 
	`do_ef„˘1
(
PE_MARK
, 
m¨k_mode
, 
EFFECT_MARK_START
, 
EFFECT_MARK_END
);

1064 
	}
}

1066 #ifde‡
USE_ANSI_COLOR


1068 
	$do_cﬁ‹
(
Löecﬁ‹
 
c
)

1070 i‡(
c
 & 0x8)

1071 
	`£tfcﬁ‹
(
c
 & 0x7);

1072 i‡(
cﬁ‹_mode
 & 0x8)

1073 
	`£tfcﬁ‹
(
basic_cﬁ‹
);

1074 #ifde‡
USE_BG_COLOR


1075 i‡(
c
 & 0x80)

1076 
	`£tbcﬁ‹
((
c
 >> 4) & 0x7);

1077 i‡(
cﬁ‹_mode
 & 0x80)

1078 
	`£tbcﬁ‹
(
bg_cﬁ‹
);

1080 
cﬁ‹_mode
 = 
c
;

1081 
	}
}

1084 #ifde‡
USE_M17N


1086 
	$addCh¨
(
c
, 
Löïr›
 
mode
)

1088 
	`addMCh¨
(&
c
, 
mode
, 1);

1089 
	}
}

1092 
	$addMCh¨
(*
p
, 
Löïr›
 
mode
, 
size_t
 
Àn
)

1095 
	$addCh¨
(
c
, 
Löïr›
 
mode
)

1098 
Löïr›
 
m
 = 
	`Ch¨Ef„˘
(
mode
);

1099 #ifde‡
USE_M17N


1100 
c
 = *
p
;

1102 i‡(
mode
 & 
PC_WCHAR2
)

1105 
	`do_ef„˘s
(
m
);

1106 i‡(
mode
 & 
PC_SYMBOL
) {

1107 **
symbﬁ
;

1108 #ifde‡
USE_M17N


1109 
w
 = (
mode
 & 
PC_KANJI
) ? 2 : 1;

1111 
c
 = (()
	`wtf_gë_code
((
wc_uch¨
 *Ë
p
Ë& 0x7fË- 
SYMBOL_BASE
;

1113 
c
 -
SYMBOL_BASE
;

1115 i‡(
	`gøph_ok
(Ë&& 
c
 < 
N_GRAPH_SYMBOL
) {

1116 i‡(!
gøph_mode
) {

1117 
	`gøph°¨t
();

1118 
gøph_mode
 = 
TRUE
;

1120 #ifde‡
USE_M17N


1121 i‡(
w
 =2 && 
WcO±i⁄
.
u£_wide
)

1122 
	`add°r
(
gøph2_symbﬁ
[()
c
]);

1125 
	`addch
(*
gøph_symbﬁ
[()
c
]);

1128 #ifde‡
USE_M17N


1129 
symbﬁ
 = 
	`gë_symbﬁ
(
Di•œyCh¨£t
, &
w
);

1130 
	`add°r
(
symbﬁ
[()
c
]);

1132 
symbﬁ
 = 
	`gë_symbﬁ
();

1133 
	`addch
(*
symbﬁ
[()
c
]);

1137 i‡(
mode
 & 
PC_CTRL
) {

1138 
c
) {

1140 
	`addch
(
c
);

1143 
	`addch
(' ');

1147 
DEL_CODE
:

1148 
	`add°r
("^?");

1151 
	`addch
('^');

1152 
	`addch
(
c
 + '@');

1156 #ifde‡
USE_M17N


1157 i‡(
mode
 & 
PC_UNKNOWN
) {

1158 
buf
[5];

1159 
	`•rötf
(
buf
, "[%.2X]",

1160 ()
	`wtf_gë_code
((
wc_uch¨
 *Ë
p
) | 0x80);

1161 
	`add°r
(
buf
);

1164 
	`addmch
(
p
, 
Àn
);

1166 i‡(0x80 <()
c
 && ()¯<
NBSP_CODE
)

1167 
	`addch
(' ');

1169 
	`addch
(
c
);

1171 
	}
}

1173 
GíîÆLi°
 *
	gmesßge_li°
 = 
NULL
;

1176 
	$ªc‹d_îr_mesßge
(*
s
)

1178 i‡(
fmInôülized
) {

1179 i‡(!
mesßge_li°
)

1180 
mesßge_li°
 = 
	`√wGíîÆLi°
();

1181 i‡(
mesßge_li°
->
nôem
 >
LINES
)

1182 
	`p›VÆue
(
mesßge_li°
);

1183 
	`pushVÆue
(
mesßge_li°
, 
	`ÆlocSå
(
s
, -1));

1185 
	}
}

1190 
Buf„r
 *

1191 
	$mesßge_li°_∑√l
()

1193 
Så
 
tmp
 = 
	`Så√w_size
(
LINES
 * 
COLS
);

1194 
Li°Iãm
 *
p
;

1197 
	`Såˇt_ch¨p
(
tmp
,

1200 i‡(
mesßge_li°
)

1201 
p
 = 
mesßge_li°
->
œ°
;Ö;Ö =Ö->
¥ev
)

1202 
	`Såˇt_m_ch¨p
(
tmp
, "<å><td><¥e>", 
	`html_quŸe
(
p
->
±r
),

1203 "</¥e></td></å>\n", 
NULL
);

1205 
	`Såˇt_ch¨p
(
tmp
, "<tr><td>(no messageÑecorded)</td></tr>\n");

1206 
	`Såˇt_ch¨p
(
tmp
, "</table></body></html>");

1207  
	`lﬂdHTMLSåög
(
tmp
);

1208 
	}
}

1211 
	$mesßge
(*
s
, 
ªtu∫_x
, 
ªtu∫_y
)

1213 i‡(!
fmInôülized
)

1215 
	`move
(
LASTLINE
, 0);

1216 
	`addn°r
(
s
, 
COLS
 - 1);

1217 
	`˛π€ﬁx
();

1218 
	`move
(
ªtu∫_y
, 
ªtu∫_x
);

1219 
	}
}

1222 
	$di•_îr_mesßge
(*
s
, 
ªdøw_cuºít
)

1224 
	`ªc‹d_îr_mesßge
(
s
);

1225 
	`di•_mesßge
(
s
, 
ªdøw_cuºít
);

1226 
	}
}

1229 
	$di•_mesßge_n£c
(*
s
, 
ªdøw_cuºít
, 
£c
, 
purge
, 
mou£
)

1231 i‡(
QuõtMesßge
)

1233 i‡(!
fmInôülized
) {

1234 
	`Ârötf
(
°dîr
, "%s\n", 
	`c⁄v_to_sy°em
(
s
));

1237 i‡(
CuºítTab
 !
NULL
 && 
Cuºítbuf
 != NULL)

1238 
	`mesßge
(
s
, 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
,

1239 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
);

1241 
	`mesßge
(
s
, 
LASTLINE
, 0);

1242 
	`ª‰esh
();

1243 #ifde‡
USE_MOUSE


1244 i‡(
mou£
 && 
u£_mou£
)

1245 
	`mou£_a˘ive
();

1247 
	`¶ìp_tûl_™ykey
(
£c
, 
purge
);

1248 #ifde‡
USE_MOUSE


1249 i‡(
mou£
 && 
u£_mou£
)

1250 
	`mou£_öa˘ive
();

1252 i‡(
CuºítTab
 !
NULL
 && 
Cuºítbuf
 !NULL && 
ªdøw_cuºít
)

1253 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1254 
	}
}

1257 
	$di•_mesßge
(*
s
, 
ªdøw_cuºít
)

1259 
	`di•_mesßge_n£c
(
s
, 
ªdøw_cuºít
, 10, 
FALSE
, 
TRUE
);

1260 
	}
}

1261 #ifde‡
USE_MOUSE


1263 
	$di•_mesßge_nomou£
(*
s
, 
ªdøw_cuºít
)

1265 
	`di•_mesßge_n£c
(
s
, 
ªdøw_cuºít
, 10, 
FALSE
, FALSE);

1266 
	}
}

1270 
	$£t_dñayed_mesßge
(*
s
)

1272 
dñayed_msg
 = 
	`ÆlocSå
(
s
, -1);

1273 
	}
}

1276 
	$curs‹Up0
(
Buf„r
 *
buf
, 
n
)

1278 i‡(
buf
->
curs‹Y
 > 0)

1279 
	`curs‹UpDown
(
buf
, -1);

1281 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->t›Löe, -
n
, 
FALSE
);

1282 i‡(
buf
->
cuºítLöe
->
¥ev
 !
NULL
)

1283 
buf
->
cuºítLöe
 = buf->cuºítLöe->
¥ev
;

1284 
	`¨øngeLöe
(
buf
);

1286 
	}
}

1289 
	$curs‹Up
(
Buf„r
 *
buf
, 
n
)

1291 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1292 i‡(
buf
->
fú°Löe
 =
NULL
)

1294 
buf
->
cuºítLöe
->
¥ev
 && buf->cuºítLöe->
bpos
)

1295 
	`curs‹Up0
(
buf
, 
n
);

1296 i‡(
buf
->
cuºítLöe
 =buf->
fú°Löe
) {

1297 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

1298 
	`¨øngeLöe
(
buf
);

1301 
	`curs‹Up0
(
buf
, 
n
);

1302 
buf
->
cuºítLöe
->
¥ev
 && buf->cuºítLöe->
bpos
 &&

1303 
buf
->
cuºítLöe
->
bwidth
 >buf->
cuºítCﬁumn
 + buf->
visuÆpos
)

1304 
	`curs‹Up0
(
buf
, 
n
);

1305 
	}
}

1308 
	$curs‹Down0
(
Buf„r
 *
buf
, 
n
)

1310 i‡(
buf
->
curs‹Y
 < buf->
LINES
 - 1)

1311 
	`curs‹UpDown
(
buf
, 1);

1313 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->t›Löe, 
n
, 
FALSE
);

1314 i‡(
buf
->
cuºítLöe
->
√xt
 !
NULL
)

1315 
buf
->
cuºítLöe
 = buf->cuºítLöe->
√xt
;

1316 
	`¨øngeLöe
(
buf
);

1318 
	}
}

1321 
	$curs‹Down
(
Buf„r
 *
buf
, 
n
)

1323 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1324 i‡(
buf
->
fú°Löe
 =
NULL
)

1326 
buf
->
cuºítLöe
->
√xt
 && buf->cuºítLöe->√xt->
bpos
)

1327 
	`curs‹Down0
(
buf
, 
n
);

1328 i‡(
buf
->
cuºítLöe
 =buf->
œ°Löe
) {

1329 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

1330 
	`¨øngeLöe
(
buf
);

1333 
	`curs‹Down0
(
buf
, 
n
);

1334 
buf
->
cuºítLöe
->
√xt
 && buf->cuºítLöe->√xt->
bpos
 &&

1335 
buf
->
cuºítLöe
->
bwidth
 + buf->cuºítLöe->
width
 <

1336 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1337 
	`curs‹Down0
(
buf
, 
n
);

1338 
	}
}

1341 
	$curs‹UpDown
(
Buf„r
 *
buf
, 
n
)

1343 
Löe
 *
˛
 = 
buf
->
cuºítLöe
;

1345 i‡(
buf
->
fú°Löe
 =
NULL
)

1347 i‡((
buf
->
cuºítLöe
 = 
	`cuºítLöeSkù
(buf, 
˛
, 
n
, 
FALSE
)) == cl)

1349 
	`¨øngeLöe
(
buf
);

1350 
	}
}

1353 
	$curs‹Right
(
Buf„r
 *
buf
, 
n
)

1355 
i
, 
dñè
 = 1, 
˝os
, 
vpos2
;

1356 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1357 
Löïr›
 *
p
;

1359 i‡(
buf
->
fú°Löe
 =
NULL
)

1361 i‡(
buf
->
pos
 =
l
->
Àn
 && !÷->
√xt
 &&Ü->√xt->
bpos
))

1363 
i
 = 
buf
->
pos
;

1364 
p
 = 
l
->
¥›Buf
;

1365 #ifde‡
USE_M17N


1366 
i
 + 
dñè
 < 
l
->
Àn
 && 
p
[ò+ dñè] & 
PC_WCHAR2
)

1367 
dñè
++;

1369 i‡(
i
 + 
dñè
 < 
l
->
Àn
) {

1370 
buf
->
pos
 = 
i
 + 
dñè
;

1372 i‡(
l
->
Àn
 == 0) {

1373 
buf
->
pos
 = 0;

1375 i‡(
l
->
√xt
 &&Ü->√xt->
bpos
) {

1376 
	`curs‹Down0
(
buf
, 1);

1377 
buf
->
pos
 = 0;

1378 
	`¨øngeCurs‹
(
buf
);

1382 
buf
->
pos
 = 
l
->
Àn
 - 1;

1383 #ifde‡
USE_M17N


1384 
buf
->
pos
 && 
p
[buf->pos] & 
PC_WCHAR2
)

1385 
buf
->
pos
--;

1388 
˝os
 = 
	`COLPOS
(
l
, 
buf
->
pos
);

1389 
buf
->
visuÆpos
 = 
l
->
bwidth
 + 
˝os
 - buf->
cuºítCﬁumn
;

1390 
dñè
 = 1;

1391 #ifde‡
USE_M17N


1392 
buf
->
pos
 + 
dñè
 < 
l
->
Àn
 && 
p
[buf->po†+ dñè] & 
PC_WCHAR2
)

1393 
dñè
++;

1395 
vpos2
 = 
	`COLPOS
(
l
, 
buf
->
pos
 + 
dñè
Ë- buf->
cuºítCﬁumn
 - 1;

1396 i‡(
vpos2
 >
buf
->
COLS
 && 
n
) {

1397 
	`cﬁumnSkù
(
buf
, 
n
 + (
vpos2
 - buf->
COLS
) - (vpos2 - buf->COLS) %Ç);

1398 
buf
->
visuÆpos
 = 
l
->
bwidth
 + 
˝os
 - buf->
cuºítCﬁumn
;

1400 
buf
->
curs‹X
 = buf->
visuÆpos
 - 
l
->
bwidth
;

1401 
	}
}

1404 
	$curs‹Le·
(
Buf„r
 *
buf
, 
n
)

1406 
i
, 
dñè
 = 1, 
˝os
;

1407 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1408 
Löïr›
 *
p
;

1410 i‡(
buf
->
fú°Löe
 =
NULL
)

1412 
i
 = 
buf
->
pos
;

1413 
p
 = 
l
->
¥›Buf
;

1414 #ifde‡
USE_M17N


1415 
i
 - 
dñè
 > 0 && 
p
[ò- dñè] & 
PC_WCHAR2
)

1416 
dñè
++;

1418 i‡(
i
 >
dñè
)

1419 
buf
->
pos
 = 
i
 - 
dñè
;

1420 i‡(
l
->
¥ev
 &&Ü->
bpos
) {

1421 
	`curs‹Up0
(
buf
, -1);

1422 
buf
->
pos
 = buf->
cuºítLöe
->
Àn
 - 1;

1423 
	`¨øngeCurs‹
(
buf
);

1427 
buf
->
pos
 = 0;

1428 
˝os
 = 
	`COLPOS
(
l
, 
buf
->
pos
);

1429 
buf
->
visuÆpos
 = 
l
->
bwidth
 + 
˝os
 - buf->
cuºítCﬁumn
;

1430 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 < 0 && 
n
) {

1431 
	`cﬁumnSkù
(
buf
,

1432 -
n
 + 
buf
->
visuÆpos
 - 
l
->
bwidth
 - (buf->visualpos -

1433 
l
->
bwidth
Ë% 
n
);

1434 
buf
->
visuÆpos
 = 
l
->
bwidth
 + 
˝os
 - buf->
cuºítCﬁumn
;

1436 
buf
->
curs‹X
 = buf->
visuÆpos
 - 
l
->
bwidth
;

1437 
	}
}

1440 
	$curs‹Home
(
Buf„r
 *
buf
)

1442 
buf
->
visuÆpos
 = 0;

1443 
buf
->
curs‹X
 = buf->
curs‹Y
 = 0;

1444 
	}
}

1452 
	$¨øngeCurs‹
(
Buf„r
 *
buf
)

1454 
cﬁ
, 
cﬁ2
, 
pos
;

1455 
dñè
 = 1;

1456 i‡(
buf
 =
NULL
 || buf->
cuºítLöe
 == NULL)

1459 i‡(
buf
->
cuºítLöe
->
löíumbî
 - buf->
t›Löe
->löíumbî >buf->
LINES


1460 || 
buf
->
cuºítLöe
->
löíumbî
 < buf->
t›Löe
->linenumber) {

1464 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->
cuºítLöe
, 0, 
FALSE
);

1467 
buf
->
pos
 < 0 && buf->
cuºítLöe
->
¥ev
 && buf->cuºítLöe->
bpos
) {

1468 
pos
 = 
buf
->po†+ buf->
cuºítLöe
->
¥ev
->
Àn
;

1469 
	`curs‹Up0
(
buf
, 1);

1470 
buf
->
pos
 =Öos;

1472 
buf
->
pos
 >buf->
cuºítLöe
->
Àn
 && buf->cuºítLöe->
√xt
 &&

1473 
buf
->
cuºítLöe
->
√xt
->
bpos
) {

1474 
pos
 = 
buf
->po†- buf->
cuºítLöe
->
Àn
;

1475 
	`curs‹Down0
(
buf
, 1);

1476 
buf
->
pos
 =Öos;

1478 i‡(
buf
->
cuºítLöe
->
Àn
 =0 || buf->
pos
 < 0)

1479 
buf
->
pos
 = 0;

1480 i‡(
buf
->
pos
 >buf->
cuºítLöe
->
Àn
)

1481 
buf
->
pos
 = buf->
cuºítLöe
->
Àn
 - 1;

1482 #ifde‡
USE_M17N


1483 
buf
->
pos
 > 0 && buf->
cuºítLöe
->
¥›Buf
[buf->pos] & 
PC_WCHAR2
)

1484 
buf
->
pos
--;

1486 
cﬁ
 = 
	`COLPOS
(
buf
->
cuºítLöe
, buf->
pos
);

1487 #ifde‡
USE_M17N


1488 
buf
->
pos
 + 
dñè
 < buf->
cuºítLöe
->
Àn
 &&

1489 
buf
->
cuºítLöe
->
¥›Buf
[buf->
pos
 + 
dñè
] & 
PC_WCHAR2
)

1490 
dñè
++;

1492 
cﬁ2
 = 
	`COLPOS
(
buf
->
cuºítLöe
, buf->
pos
 + 
dñè
);

1493 i‡(
cﬁ
 < 
buf
->
cuºítCﬁumn
 || 
cﬁ2
 > buf->
COLS
 + buf->currentColumn) {

1494 
buf
->
cuºítCﬁumn
 = 0;

1495 i‡(
cﬁ2
 > 
buf
->
COLS
)

1496 
	`cﬁumnSkù
(
buf
, 
cﬁ
);

1499 
buf
->
curs‹Y
 = buf->
cuºítLöe
->
löíumbî
 - buf->
t›Löe
->linenumber;

1500 
buf
->
visuÆpos
 = buf->
cuºítLöe
->
bwidth
 +

1501 
	`COLPOS
(
buf
->
cuºítLöe
, buf->
pos
Ë- buf->
cuºítCﬁumn
;

1502 
buf
->
curs‹X
 = buf->
visuÆpos
 - buf->
cuºítLöe
->
bwidth
;

1503 #ifde‡
DISPLAY_DEBUG


1504 
	`Ârötf
(
°dîr
,

1506 
buf
->
cuºítCﬁumn
, buf->
curs‹X
, buf->
visuÆpos
, buf->
pos
,

1507 
buf
->
cuºítLöe
->
Àn
);

1509 
	}
}

1512 
	$¨øngeLöe
(
Buf„r
 *
buf
)

1514 
i
, 
˝os
;

1516 i‡(
buf
->
fú°Löe
 =
NULL
)

1518 
buf
->
curs‹Y
 = buf->
cuºítLöe
->
löíumbî
 - buf->
t›Löe
->linenumber;

1519 
i
 = 
	`cﬁumnPos
(
buf
->
cuºítLöe
, buf->
cuºítCﬁumn
 + buf->
visuÆpos


1520 - 
buf
->
cuºítLöe
->
bwidth
);

1521 
˝os
 = 
	`COLPOS
(
buf
->
cuºítLöe
, 
i
Ë- buf->
cuºítCﬁumn
;

1522 i‡(
˝os
 >= 0) {

1523 
buf
->
curs‹X
 = 
˝os
;

1524 
buf
->
pos
 = 
i
;

1526 i‡(
buf
->
cuºítLöe
->
Àn
 > 
i
) {

1527 
buf
->
curs‹X
 = 0;

1528 
buf
->
pos
 = 
i
 + 1;

1531 
buf
->
curs‹X
 = 0;

1532 
buf
->
pos
 = 0;

1534 #ifde‡
DISPLAY_DEBUG


1535 
	`Ârötf
(
°dîr
,

1537 
buf
->
cuºítCﬁumn
, buf->
curs‹X
, buf->
visuÆpos
, buf->
pos
,

1538 
buf
->
cuºítLöe
->
Àn
);

1540 
	}
}

1543 
	$curs‹XY
(
Buf„r
 *
buf
, 
x
, 
y
)

1545 
ﬁdX
;

1547 
	`curs‹UpDown
(
buf
, 
y
 - buf->
curs‹Y
);

1549 i‡(
buf
->
curs‹X
 > 
x
) {

1550 
buf
->
curs‹X
 > 
x
)

1551 
	`curs‹Le·
(
buf
, buf->
COLS
 / 2);

1553 i‡(
buf
->
curs‹X
 < 
x
) {

1554 
buf
->
curs‹X
 < 
x
) {

1555 
ﬁdX
 = 
buf
->
curs‹X
;

1557 
	`curs‹Right
(
buf
, buf->
COLS
 / 2);

1559 i‡(
ﬁdX
 =
buf
->
curs‹X
)

1562 i‡(
buf
->
curs‹X
 > 
x
)

1563 
	`curs‹Le·
(
buf
, buf->
COLS
 / 2);

1565 
	}
}

1568 
	$ª°‹ePosôi⁄
(
Buf„r
 *
buf
, Buf„∏*
‹ig
)

1570 
buf
->
t›Löe
 = 
	`löeSkù
(buf, buf->
fú°Löe
, 
	`TOP_LINENUMBER
(
‹ig
) - 1,

1571 
FALSE
);

1572 
	`gŸoLöe
(
buf
, 
	`CUR_LINENUMBER
(
‹ig
));

1573 
buf
->
pos
 = 
‹ig
->pos;

1574 i‡(
buf
->
cuºítLöe
 && 
‹ig
->currentLine)

1575 
buf
->
pos
 +
‹ig
->
cuºítLöe
->
bpos
 - buf->currentLine->bpos;

1576 
buf
->
cuºítCﬁumn
 = 
‹ig
->currentColumn;

1577 
	`¨øngeCurs‹
(
buf
);

1578 
	}
}

	@entity.c

2 #ifde‡
DUMMY


3 
	~"Så.h
"

4 
	#NBSP
 " "

	)

5 
	#U£A…E¡ôy
 1

	)

6 #unde‡
USE_M17N


8 
	~"fm.h
"

9 #ifde‡
USE_M17N


10 #ifde‡
USE_UNICODE


11 
	~"ucs.h
"

12 
	~"utf8.h
"

18 *
	gÆt_œtö1
[ 96 ] = {

19 
NBSP
, "!", "-c-", "-L-", "CUR", "=Y=", "|", "S:",

35 
	$c⁄v_ítôy
(
c
)

37 
b
 = 
c
 & 0xff;

39 i‡(
c
 < 0x20)

41 i‡(
c
 < 0x7f)

42  
	`Så√w_ch¨p_n
(&
b
, 1)->
±r
;

43 i‡(
c
 < 0xa0)

45 i‡(
c
 == 0xa0)

46  
NBSP
;

47 i‡(
c
 < 0x100) {

48 i‡(
U£A…E¡ôy
)

49  
Æt_œtö1
[
c
 - 0xa0];

50 #ifde‡
USE_M17N


51  
	`wc_c⁄v_n
(&
b
, 1, 
WC_CES_ISO_8859_1
, 
I¬îCh¨£t
)->
±r
;

53  
	`Så√w_ch¨p_n
(&
b
, 1)->
±r
;

56 #ifde‡
USE_M17N


57 #ifde‡
USE_UNICODE


58 i‡(
c
 <
WC_C_UCS4_END
) {

59 
wc_uch¨
 
utf8
[7];

60 
	`wc_ucs_to_utf8
(
c
, 
utf8
);

61  
	`wc_c⁄v
((*)
utf8
, 
WC_CES_UTF_8
, 
I¬îCh¨£t
)->
±r
;

66 
	}
}

	@entity.h

2 
	~"hash.h
"

3 
HashIãm_si
 
	gMyHashIãm
[] = {

4  {"Ÿimes", 0x2297, &
MyHashIãm
[1]},

5  {"œquo", 0xAB, 
NULL
},

6  {"ˇp", 0x2229, &
MyHashIãm
[3]},

7  {"dAº", 0x21D3, &
MyHashIãm
[4]},

8  {"euml", 0xEB, 
NULL
},

9  {"sum", 0x2211, &
MyHashIãm
[6]},

10  {"Ocúc", 0xD4, 
NULL
},

11  {"daggî", 0x2020, &
MyHashIãm
[8]},

12  {"Sˇr⁄", 0x0160, &
MyHashIãm
[9]},

13  {"Omi¸⁄", 0x039F, &
MyHashIãm
[10]},

14  {"brvb¨", 0xA6, 
NULL
},

15  {"Eè", 0x0397, &
MyHashIãm
[12]},

16  {"ücuã", 0xED, &
MyHashIãm
[13]},

17  {"´lig", 0xE6, &
MyHashIãm
[14]},

18  {"Ugøve", 0xD9, &
MyHashIãm
[15]},

19  {"deg", 0xB0, 
NULL
},

20  {"Yuml", 0x0178, &
MyHashIãm
[17]},

21  {"sup", 0x2283, &
MyHashIãm
[18]},

22  {"middŸ", 0xB7, 
NULL
},

23  {"ge", 0x2265, &
MyHashIãm
[20]},

24  {"Æefsym", 0x2135, &
MyHashIãm
[21]},

25  {"sigma", 0x03C3, &
MyHashIãm
[22]},

26  {"¨ög", 0xE5, &
MyHashIãm
[23]},

27  {"Icúc", 0xCE, 
NULL
},

28  {"™d", 0x2227, &
MyHashIãm
[25]},

29  {"weõΩ", 0x2118, &
MyHashIãm
[26]},

30  {"‰ac12", 0xBD, 
NULL
},

31  {"ødic", 0x221A, &
MyHashIãm
[28]},

32  {"chi", 0x03C7, &
MyHashIãm
[29]},

33  {"zëa", 0x03B6, &
MyHashIãm
[30]},

34  {"Thëa", 0x0398, &
MyHashIãm
[31]},

35  {"Atûde", 0xC3, &
MyHashIãm
[32]},

36  {"∑ø", 0xB6, 
NULL
},

37  {"‰ac14", 0xBC, &
MyHashIãm
[34]},

38  {"˚dû", 0xB8, &
MyHashIãm
[35]},

39  {"quŸ", 0x22, 
NULL
},

40  {"™g", 0x2220, &
MyHashIãm
[37]},

41  {"ucúc", 0xFB, 
NULL
},

42  {"su≥", 0x2287, &
MyHashIãm
[39]},

43  {"iŸa", 0x03B9, &
MyHashIãm
[40]},

44  {"Ogøve", 0xD2, 
NULL
},

45  {"rAº", 0x21D2, &
MyHashIãm
[42]},

46  {"Auml", 0xC4, &
MyHashIãm
[43]},

47  {"‰ac34", 0xBE, &
MyHashIãm
[44]},

48  {"nb•", 0xA0, 
NULL
},

49  {"euro", 0x20AC, &
MyHashIãm
[46]},

50  {"ocúc", 0xF4, 
NULL
},

51  {"equiv", 0x2261, &
MyHashIãm
[48]},

52  {"upsû⁄", 0x03C5, &
MyHashIãm
[49]},

53  {"sigmaf", 0x03C2, &
MyHashIãm
[50]},

54  {"ETH", 0xD0, 
NULL
},

55  {"À", 0x2264, &
MyHashIãm
[52]},

56  {"bëa", 0x03B2, &
MyHashIãm
[53]},

57  {"yacuã", 0xFD, &
MyHashIãm
[54]},

58  {"egøve", 0xE8, 
NULL
},

59  {"lowa°", 0x2217, &
MyHashIãm
[56]},

60  {"ªÆ", 0x211C, &
MyHashIãm
[57]},

61  {"amp", 0x26, 
NULL
},

62  {"icúc", 0xEE, &
MyHashIãm
[59]},

63  {"mi¸o", 0xB5, 
NULL
},

64  {"isö", 0x2208, &
MyHashIãm
[61]},

65  {"cuºí", 0xA4, 
NULL
},

66  {"rdquo", 0x201D, &
MyHashIãm
[63]},

67  {"sbquo", 0x201A, &
MyHashIãm
[64]},

68  {"√", 0x2260, &
MyHashIãm
[65]},

69  {"thëa", 0x03B8, &
MyHashIãm
[66]},

70  {"Igøve", 0xCC, 
NULL
},

71  {"gt", 0x3E, 
NULL
},

72  {"hóπs", 0x2665, &
MyHashIãm
[69]},

73  {"øng", 0x232A, 
NULL
},

74  {"rÊo‹", 0x230B, 
NULL
},

75  {"ldquo", 0x201C, &
MyHashIãm
[72]},

76  {"ni", 0x220B, &
MyHashIãm
[73]},

77  {"Ntûde", 0xD1, &
MyHashIãm
[74]},

78  {"Aacuã", 0xC1, 
NULL
},

79  {"¸¨r", 0x21B5, &
MyHashIãm
[76]},

80  {"Ouml", 0xD6, &
MyHashIãm
[77]},

81  {"GT", 0x3E, 
NULL
},

82  {"˛ubs", 0x2663, 
NULL
},

83  {"sˇr⁄", 0x0161, &
MyHashIãm
[80]},

84  {"∑π", 0x2202, 
NULL
},

85  {"tûde", 0x02DC, &
MyHashIãm
[82]},

86  {"€lig", 0x0153, &
MyHashIãm
[83]},

87  {"pi", 0x03C0, &
MyHashIãm
[84]},

88  {"ugøve", 0xF9, 
NULL
},

89  {"d¨r", 0x2193, &
MyHashIãm
[86]},

90  {"uuml", 0xFC, &
MyHashIãm
[87]},

91  {"QUOT", 0x22, 
NULL
},

92  {"Prime", 0x2033, 
NULL
},

93  {"zwj", 0x200D, &
MyHashIãm
[90]},

94  {"lÊo‹", 0x230A, &
MyHashIãm
[91]},

95  {"nŸö", 0x2209, &
MyHashIãm
[92]},

96  {"˚¡", 0xA2, &
MyHashIãm
[93]},

97  {"…", 0x3C, 
NULL
},

98  {"ëa", 0x03B7, &
MyHashIãm
[95]},

99  {"Phi", 0x03A6, &
MyHashIãm
[96]},

100  {"©ûde", 0xE3, 
NULL
},

101  {"hAº", 0x21D4, &
MyHashIãm
[98]},

102  {"iuml", 0xEF, &
MyHashIãm
[99]},

103  {"NBSP", 0xA0, 
NULL
},

104  {"mu", 0x03BC, 
NULL
},

105  {"‹", 0x2228, &
MyHashIãm
[102]},

106  {"∂usmn", 0xB1, &
MyHashIãm
[103]},

107  {"LT", 0x3C, 
NULL
},

108  {"nu", 0x03BD, &
MyHashIãm
[105]},

109  {"ogøve", 0xF2, &
MyHashIãm
[106]},

110  {"AElig", 0xC6, 
NULL
},

111  {"r˚û", 0x2309, &
MyHashIãm
[108]},

112  {"uAº", 0x21D1, &
MyHashIãm
[109]},

113  {"£˘", 0xA7, 
NULL
},

114  {"cúc", 0x02C6, 
NULL
},

115  {"≥Ω", 0x22A5, &
MyHashIãm
[112]},

116  {"ëh", 0xF0, 
NULL
},

117  {"rsquo", 0x2019, &
MyHashIãm
[114]},

118  {"«bœ", 0x2207, 
NULL
},

119  {"l˚û", 0x2308, &
MyHashIãm
[116]},

120  {"cup", 0x222A, &
MyHashIãm
[117]},

121  {"exi°", 0x2203, &
MyHashIãm
[118]},

122  {"øº", 0x2192, &
MyHashIãm
[119]},

123  {"upsih", 0x03D2, 
NULL
},

124  {"¥ime", 0x2032, &
MyHashIãm
[121]},

125  {"Omega", 0x03A9, &
MyHashIãm
[122]},

126  {"Ecúc", 0xCA, 
NULL
},

127  {"Epsû⁄", 0x0395, 
NULL
},

128  {"lsquo", 0x2018, &
MyHashIãm
[125]},

129  {"xi", 0x03BE, &
MyHashIãm
[126]},

130  {"Lambda", 0x039B, &
MyHashIãm
[127]},

131  {"K≠∑", 0x039A, &
MyHashIãm
[128]},

132  {"divide", 0xF7, &
MyHashIãm
[129]},

133  {"igøve", 0xEC, &
MyHashIãm
[130]},

134  {"acuã", 0xB4, 
NULL
},

135  {"Euml", 0xCB, &
MyHashIãm
[132]},

136  {"‹df", 0xAA, 
NULL
},

137  {"image", 0x2111, &
MyHashIãm
[134]},

138  {"Tau", 0x03A4, &
MyHashIãm
[135]},

139  {"Rho", 0x03A1, 
NULL
},

140  {"¡ûde", 0xF1, &
MyHashIãm
[137]},

141  {"Øcuã", 0xE1, &
MyHashIãm
[138]},

142  {"times", 0xD7, 
NULL
},

143  {"omi¸⁄", 0x03BF, 
NULL
},

144  {"›lus", 0x2295, &
MyHashIãm
[141]},

145  {"Zëa", 0x0396, &
MyHashIãm
[142]},

146  {"Eacuã", 0xC9, &
MyHashIãm
[143]},

147  {"‹dm", 0xBA, 
NULL
},

148  {"O¶ash", 0xD8, &
MyHashIãm
[145]},

149  {"C˚dû", 0xC7, &
MyHashIãm
[146]},

150  {"ique°", 0xBF, 
NULL
},

151  {"omega", 0x03C9, &
MyHashIãm
[148]},

152  {"Psi", 0x03A8, &
MyHashIãm
[149]},

153  {"ecúc", 0xEA, 
NULL
},

154  {"öt", 0x222B, 
NULL
},

155  {"åade", 0x2122, &
MyHashIãm
[152]},

156  {"k≠∑", 0x03BA, &
MyHashIãm
[153]},

157  {"IŸa", 0x0399, &
MyHashIãm
[154]},

158  {"Dñè", 0x0394, &
MyHashIãm
[155]},

159  {"AÕha", 0x0391, &
MyHashIãm
[156]},

160  {"Otûde", 0xD5, 
NULL
},

161  {"sdŸ", 0x22C5, 
NULL
},

162  {"c⁄g", 0x2245, 
NULL
},

163  {"rßquo", 0x203A, &
MyHashIãm
[160]},

164  {"OElig", 0x0152, &
MyHashIãm
[161]},

165  {"düms", 0x2666, &
MyHashIãm
[162]},

166  {"phi", 0x03C6, &
MyHashIãm
[163]},

167  {"Bëa", 0x0392, &
MyHashIãm
[164]},

168  {"szlig", 0xDF, &
MyHashIãm
[165]},

169  {"sup1", 0xB9, &
MyHashIãm
[166]},

170  {"ªg", 0xAE, 
NULL
},

171  {"h¨r", 0x2194, &
MyHashIãm
[168]},

172  {"hñlù", 0x2026, &
MyHashIãm
[169]},

173  {"yuml", 0xFF, &
MyHashIãm
[170]},

174  {"sup2", 0xB2, 
NULL
},

175  {"Gamma", 0x0393, &
MyHashIãm
[172]},

176  {"sup3", 0xB3, 
NULL
},

177  {"f‹Æl", 0x2200, 
NULL
},

178  {"bdquo", 0x201E, &
MyHashIãm
[175]},

179  {"•ades", 0x2660, &
MyHashIãm
[176]},

180  {"Pi", 0x03A0, &
MyHashIãm
[177]},

181  {"Uacuã", 0xDA, &
MyHashIãm
[178]},

182  {"Agøve", 0xC0, 
NULL
},

183  {"≥rmû", 0x2030, &
MyHashIãm
[180]},

184  {"mdash", 0x2014, &
MyHashIãm
[181]},

185  {"lAº", 0x21D0, &
MyHashIãm
[182]},

186  {"u¨r", 0x2191, 
NULL
},

187  {"Upsû⁄", 0x03A5, &
MyHashIãm
[184]},

188  {"pound", 0xA3, 
NULL
},

189  {"lßquo", 0x2039, &
MyHashIãm
[186]},

190  {"Ãm", 0x200E, &
MyHashIãm
[187]},

191  {"œmbda", 0x03BB, &
MyHashIãm
[188]},

192  {"dñè", 0x03B4, &
MyHashIãm
[189]},

193  {"Æpha", 0x03B1, 
NULL
},

194  {"‰a¶", 0x2044, &
MyHashIãm
[191]},

195  {"th‹n", 0xFE, &
MyHashIãm
[192]},

196  {"auml", 0xE4, 
NULL
},

197  {"Mu", 0x039C, 
NULL
},

198  {"nsub", 0x2284, &
MyHashIãm
[195]},

199  {"ma¸", 0xAF, 
NULL
},

200  {"möus", 0x2212, &
MyHashIãm
[197]},

201  {"Nu", 0x039D, &
MyHashIãm
[198]},

202  {"Oacuã", 0xD3, 
NULL
},

203  {"¥od", 0x220F, &
MyHashIãm
[200]},

204  {"Uuml", 0xDC, &
MyHashIãm
[201]},

205  {"õx˛", 0xA1, 
NULL
},

206  {"œng", 0x2329, &
MyHashIãm
[203]},

207  {"èu", 0x03C4, &
MyHashIãm
[204]},

208  {"rho", 0x03C1, &
MyHashIãm
[205]},

209  {"gamma", 0x03B3, 
NULL
},

210  {"loz", 0x25CA, &
MyHashIãm
[207]},

211  {"buŒ", 0x2022, &
MyHashIãm
[208]},

212  {"piv", 0x03D6, 
NULL
},

213  {"ócuã", 0xE9, 
NULL
},

214  {"zwnj", 0x200C, &
MyHashIãm
[211]},

215  {"o¶ash", 0xF8, &
MyHashIãm
[212]},

216  {"c˚dû", 0xE7, &
MyHashIãm
[213]},

217  {"THORN", 0xDE, &
MyHashIãm
[214]},

218  {"Iuml", 0xCF, &
MyHashIãm
[215]},

219  {"nŸ", 0xAC, 
NULL
},

220  {"sim", 0x223C, &
MyHashIãm
[217]},

221  {"thëasym", 0x03D1, &
MyHashIãm
[218]},

222  {"Acúc", 0xC2, 
NULL
},

223  {"Daggî", 0x2021, &
MyHashIãm
[220]},

224  {"‚of", 0x0192, 
NULL
},

225  {"æm", 0x200F, &
MyHashIãm
[222]},

226  {"ﬁöe", 0x203E, &
MyHashIãm
[223]},

227  {"Chi", 0x03A7, &
MyHashIãm
[224]},

228  {"Xi", 0x039E, &
MyHashIãm
[225]},

229  {"Ÿûde", 0xF5, &
MyHashIãm
[226]},

230  {"Iacuã", 0xCD, &
MyHashIãm
[227]},

231  {"c›y", 0xA9, 
NULL
},

232  {"ndash", 0x2013, &
MyHashIãm
[229]},

233  {"ouml", 0xF6, 
NULL
},

234  {"psi", 0x03C8, 
NULL
},

235  {"sube", 0x2286, 
NULL
},

236  {"em•", 0x2003, &
MyHashIãm
[233]},

237  {"asymp", 0x2248, &
MyHashIãm
[234]},

238  {"¥›", 0x221D, 
NULL
},

239  {"öfö", 0x221E, 
NULL
},

240  {"em±y", 0x2205, &
MyHashIãm
[237]},

241  {"uacuã", 0xFA, &
MyHashIãm
[238]},

242  {"agøve", 0xE0, &
MyHashIãm
[239]},

243  {"shy", 0xAD, 
NULL
},

244  {"í•", 0x2002, 
NULL
},

245  {"acúc", 0xE2, 
NULL
},

246  {"sub", 0x2282, &
MyHashIãm
[243]},

247  {"ïsû⁄", 0x03B5, 
NULL
},

248  {"Yacuã", 0xDD, &
MyHashIãm
[245]},

249  {"Egøve", 0xC8, 
NULL
},

250  {"thîe4", 0x2234, &
MyHashIãm
[247]},

251  {"œº", 0x2190, &
MyHashIãm
[248]},

252  {"uml", 0xA8, &
MyHashIãm
[249]},

253  {"AMP", 0x26, 
NULL
},

254  {"Sigma", 0x03A3, &
MyHashIãm
[251]},

255  {"Arög", 0xC5, 
NULL
},

256  {"yí", 0xA5, 
NULL
},

257  {"ﬂcuã", 0xF3, &
MyHashIãm
[254]},

258  {"øquo", 0xBB, 
NULL
},

259  {"thö•", 0x2009, 
NULL
},

260  {"Ucúc", 0xDB, 
NULL
},

263 
HashIãm_si
 *
	gMyHashIãmTbl
[] = {

264 
NULL
,

265 &
MyHashIãm
[0],

266 &
MyHashIãm
[2],

267 &
MyHashIãm
[5],

268 &
MyHashIãm
[7],

269 &
MyHashIãm
[11],

270 &
MyHashIãm
[16],

271 &
MyHashIãm
[19],

272 &
MyHashIãm
[24],

273 &
MyHashIãm
[27],

274 &
MyHashIãm
[33],

275 &
MyHashIãm
[36],

276 
NULL
,

277 &
MyHashIãm
[38],

278 &
MyHashIãm
[41],

279 &
MyHashIãm
[45],

280 &
MyHashIãm
[47],

281 &
MyHashIãm
[51],

282 &
MyHashIãm
[55],

283 &
MyHashIãm
[58],

284 &
MyHashIãm
[60],

285 &
MyHashIãm
[62],

286 &
MyHashIãm
[67],

287 &
MyHashIãm
[68],

288 &
MyHashIãm
[70],

289 &
MyHashIãm
[71],

290 &
MyHashIãm
[75],

291 &
MyHashIãm
[78],

292 &
MyHashIãm
[79],

293 &
MyHashIãm
[81],

294 &
MyHashIãm
[85],

295 &
MyHashIãm
[88],

296 &
MyHashIãm
[89],

297 &
MyHashIãm
[94],

298 &
MyHashIãm
[97],

299 &
MyHashIãm
[100],

300 &
MyHashIãm
[101],

301 &
MyHashIãm
[104],

302 &
MyHashIãm
[107],

303 &
MyHashIãm
[110],

304 &
MyHashIãm
[111],

305 &
MyHashIãm
[113],

306 &
MyHashIãm
[115],

307 &
MyHashIãm
[120],

308 &
MyHashIãm
[123],

309 &
MyHashIãm
[124],

310 &
MyHashIãm
[131],

311 &
MyHashIãm
[133],

312 
NULL
,

313 &
MyHashIãm
[136],

314 
NULL
,

315 
NULL
,

316 &
MyHashIãm
[139],

317 &
MyHashIãm
[140],

318 &
MyHashIãm
[144],

319 &
MyHashIãm
[147],

320 &
MyHashIãm
[150],

321 &
MyHashIãm
[151],

322 &
MyHashIãm
[157],

323 &
MyHashIãm
[158],

324 
NULL
,

325 &
MyHashIãm
[159],

326 &
MyHashIãm
[167],

327 &
MyHashIãm
[171],

328 &
MyHashIãm
[173],

329 &
MyHashIãm
[174],

330 &
MyHashIãm
[179],

331 
NULL
,

332 &
MyHashIãm
[183],

333 &
MyHashIãm
[185],

334 &
MyHashIãm
[190],

335 &
MyHashIãm
[193],

336 &
MyHashIãm
[194],

337 &
MyHashIãm
[196],

338 &
MyHashIãm
[199],

339 &
MyHashIãm
[202],

340 &
MyHashIãm
[206],

341 &
MyHashIãm
[209],

342 &
MyHashIãm
[210],

343 &
MyHashIãm
[216],

344 &
MyHashIãm
[219],

345 &
MyHashIãm
[221],

346 &
MyHashIãm
[228],

347 &
MyHashIãm
[230],

348 
NULL
,

349 &
MyHashIãm
[231],

350 &
MyHashIãm
[232],

351 
NULL
,

352 &
MyHashIãm
[235],

353 &
MyHashIãm
[236],

354 &
MyHashIãm
[240],

355 &
MyHashIãm
[241],

356 &
MyHashIãm
[242],

357 &
MyHashIãm
[244],

358 &
MyHashIãm
[246],

359 &
MyHashIãm
[250],

360 &
MyHashIãm
[252],

361 &
MyHashIãm
[253],

362 &
MyHashIãm
[255],

363 &
MyHashIãm
[256],

366 
Hash_si
 
	gítôy
 = { 100, 
MyHashIãmTbl
 };

	@etc.c

2 
	~"fm.h
"

3 #i‚de‡
__MINGW32_VERSION


4 
	~<pwd.h
>

6 
	~"my˘y≥.h
"

7 
	~"html.h
"

8 
	~"loˇl.h
"

9 
	~"hash.h
"

11 
	~<f˙é.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<time.h
>

14 #i‡
deföed
(
HAVE_WAITPID
Ë|| deföed(
HAVE_WAIT3
)

15 
	~<sys/waô.h
>

17 
	~<sig«l.h
>

19 #ifdef 
__WATT32__


20 
	#ªad
(
a
,
b
,
c
Ë
	`ªad_s
◊,b,c)

	)

21 
	#˛o£
(
x
Ë
	`˛o£_s
(x)

	)

24 
	sauth_∑ss
 {

25 
	mbad
;

26 
	mis_¥oxy
;

27 
Så
 
	mho°
;

28 
	mp‹t
;

30 
Så
 
	mªÆm
;

31 
Så
 
	mu«me
;

32 
Så
 
	mpwd
;

33 
auth_∑ss
 *
	m√xt
;

36 
auth_∑ss
 *
	g∑ssw‹ds
 = 
NULL
;

39 
	$cﬁumnSkù
(
Buf„r
 *
buf
, 
off£t
)

41 
i
, 
maxCﬁumn
;

42 
cﬁumn
 = 
buf
->
cuºítCﬁumn
 + 
off£t
;

43 
∆öes
 = 
buf
->
LINES
 + 1;

44 
Löe
 *
l
;

46 
maxCﬁumn
 = 0;

47 
i
 = 0, 
l
 = 
buf
->
t›Löe
; i < 
∆öes
 &&Ü !
NULL
; i++,Ü =Ü->
√xt
) {

48 i‡(
l
->
width
 < 0)

49 
l
->
width
 = 
	`COLPOS
÷,Ü->
Àn
);

50 i‡(
l
->
width
 - 1 > 
maxCﬁumn
)

51 
maxCﬁumn
 = 
l
->
width
 - 1;

53 
maxCﬁumn
 -
buf
->
COLS
 - 1;

54 i‡(
cﬁumn
 < 
maxCﬁumn
)

55 
maxCﬁumn
 = 
cﬁumn
;

56 i‡(
maxCﬁumn
 < 0)

57 
maxCﬁumn
 = 0;

59 i‡(
buf
->
cuºítCﬁumn
 =
maxCﬁumn
)

61 
buf
->
cuºítCﬁumn
 = 
maxCﬁumn
;

63 
	}
}

66 
	$cﬁumnPos
(
Löe
 *
löe
, 
cﬁumn
)

68 
i
;

70 
i
 = 1; i < 
löe
->
Àn
; i++) {

71 i‡(
	`COLPOS
(
löe
, 
i
Ë> 
cﬁumn
)

74 #ifde‡
USE_M17N


75 
i
--; i > 0 && 
löe
->
¥›Buf
[i] & 
PC_WCHAR2
; i--) ;

76  
i
;

78  
i
 - 1;

80 
	}
}

82 
Löe
 *

83 
	$löeSkù
(
Buf„r
 *
buf
, 
Löe
 *
löe
, 
off£t
, 
œ°
)

85 
i
;

86 
Löe
 *
l
;

88 
l
 = 
	`cuºítLöeSkù
(
buf
, 
löe
, 
off£t
, 
œ°
);

89 i‡(!
√xçage_t›löe
)

90 
i
 = 
buf
->
LINES
 - 1 - (buf->
œ°Löe
->
löíumbî
 - 
l
->linenumber);

91 
i
 > 0 && 
l
->
¥ev
 !
NULL
; i--,Ü =Ü->prev) ;

92  
l
;

93 
	}
}

95 
Löe
 *

96 
	$cuºítLöeSkù
(
Buf„r
 *
buf
, 
Löe
 *
löe
, 
off£t
, 
œ°
)

98 
i
, 
n
;

99 
Löe
 *
l
 = 
löe
;

101 i‡(
buf
->
∑gîSour˚
 && !(buf->
buf„Ωr›
 & 
BP_CLOSE
)) {

102 
n
 = 
löe
->
löíumbî
 + 
off£t
 + 
buf
->
LINES
;

103 i‡(
buf
->
œ°Löe
->
löíumbî
 < 
n
)

104 
	`gëNextPage
(
buf
, 
n
 - buf->
œ°Löe
->
löíumbî
);

105 (
œ°
 || (
buf
->
œ°Löe
->
löíumbî
 < 
n
)) &&

106 (
	`gëNextPage
(
buf
, 1Ë!
NULL
)) ;

107 i‡(
œ°
)

108 
l
 = 
buf
->
œ°Löe
;

111 i‡(
off£t
 == 0)

112  
l
;

113 i‡(
off£t
 > 0)

114 
i
 = 0; i < 
off£t
 && 
l
->
√xt
 !
NULL
; i++,Ü =Ü->next) ;

116 
i
 = 0; i < -
off£t
 && 
l
->
¥ev
 !
NULL
; i++,Ü =Ü->prev) ;

117  
l
;

118 
	}
}

120 
	#MAX_CMD_LEN
 128

	)

123 
	$gëhtmlcmd
(**
s
)

125 
Hash_si
 
ègèbÀ
;

126 
cmd°r
[
MAX_CMD_LEN
];

127 *
p
 = 
cmd°r
;

128 *
ßve
 = *
s
;

129 
cmd
;

131 (*
s
)++;

133 i‡(
	`IS_ALNUM
(**
s
) || **s == '_' || **s == '/') {

134 *(
p
++Ë
	`TOLOWER
(**
s
);

135 (*
s
)++;

138  
HTML_UNKNOWN
;

139 i‡(
p
[-1] == '/')

140 
	`SKIP_BLANKS
(*
s
);

141 (
	`IS_ALNUM
(**
s
Ë|| **†='_'Ë&& 
p
 - 
cmd°r
 < 
MAX_CMD_LEN
) {

142 *(
p
++Ë
	`TOLOWER
(**
s
);

143 (*
s
)++;

145 i‡(
p
 - 
cmd°r
 =
MAX_CMD_LEN
) {

147 *
s
 = 
ßve
 + 1;

148  
HTML_UNKNOWN
;

150 *
p
 = '\0';

153 
cmd
 = 
	`gëHash_si
(&
ègèbÀ
, 
cmd°r
, 
HTML_UNKNOWN
);

154 **
s
 && **s != '>')

155 (*
s
)++;

156 i‡(**
s
 == '>')

157 (*
s
)++;

158  
cmd
;

159 
	}
}

161 #ifde‡
USE_ANSI_COLOR


163 
	$∑r£_™si_cﬁ‹
(**
°r
, 
Löïr›
 *
ef„˘
, 
Löecﬁ‹
 *
cﬁ‹
)

165 *
p
 = *
°r
, *
q
;

166 
Löïr›
 
e
 = *
ef„˘
;

167 
Löecﬁ‹
 
c
 = *
cﬁ‹
;

168 
i
;

170 i‡(*
p
 !
ESC_CODE
 || *(p + 1) != '[')

172 
p
 += 2;

173 
q
 = 
p
; 
	`IS_DIGIT
(*q) || *q == ';'; q++) ;

174 i‡(*
q
 != 'm')

176 *
°r
 = 
q
 + 1;

178 i‡(*
p
 == 'm') {

179 
e
 = 
PE_NORMAL
;

180 
c
 = 0;

183 i‡(
	`IS_DIGIT
(*
p
)) {

184 
q
 = 
p
;

185 
p
++; 
	`IS_DIGIT
(*p);Ö++) ;

186 
i
 = 
	`©oi
(
	`ÆlocSå
(
q
, 
p
 - q));

187 
i
) {

189 
e
 = 
PE_NORMAL
;

190 
c
 = 0;

194 
e
 = 
PE_BOLD
;

197 
e
 = 
PE_UNDER
;

200 
e
 = 
PE_STAND
;

203 
c
 = 0;

206 
c
 &= 0xf0;

209 
c
 &= 0x0f;

212 i‡(
i
 >= 30 && i <= 37)

213 
c
 = (¯& 0xf0Ë| (
i
 - 30) | 0x08;

214 i‡(
i
 >= 40 && i <= 47)

215 
c
 = (¯& 0x0fË| ((
i
 - 40) << 4) | 0x80;

218 i‡(*
p
 == 'm')

222 
e
 = 
PE_NORMAL
;

223 
c
 = 0;

226 
p
++;

228 *
ef„˘
 = 
e
;

229 *
cﬁ‹
 = 
c
;

231 
	}
}

237 
Så


238 
	$checkTy≥
(
Så
 
s
, 
Löïr›
 **
›r›
, 
Löecﬁ‹
 **
ocﬁ‹
)

240 
Löïr›
 
mode
;

241 
Löïr›
 
ef„˘
 = 
PE_NORMAL
;

242 
Löïr›
 *
¥›
;

243 
Löïr›
 *
¥›_buf„r
 = 
NULL
;

244 
¥›_size
 = 0;

245 *
°r
 = 
s
->
±r
, *
ídp
 = &s->±r[s->
Àngth
], *
bs
 = 
NULL
;

246 #ifde‡
USE_ANSI_COLOR


247 
Löïr›
 
˚f„˘
 = 
PE_NORMAL
;

248 
Löecﬁ‹
 
cmode
 = 0;

249 
check_cﬁ‹
 = 
FALSE
;

250 
Löecﬁ‹
 *
cﬁ‹
 = 
NULL
;

251 
Löecﬁ‹
 *
cﬁ‹_buf„r
 = 
NULL
;

252 
cﬁ‹_size
 = 0;

253 *
es
 = 
NULL
;

255 
do_c›y
 = 
FALSE
;

256 
i
;

257 
∂í
 = 0, 
˛í
;

259 i‡(
¥›_size
 < 
s
->
Àngth
) {

260 
¥›_size
 = (
s
->
Àngth
 > 
LINELEN
) ? s->length : LINELEN;

261 
¥›_buf„r
 = 
	`New_Reu£
(
Löïr›
,Ör›_buf„r, 
¥›_size
);

263 
¥›
 = 
¥›_buf„r
;

265 i‡(
ShowEf„˘
) {

266 
bs
 = 
	`memchr
(
°r
, '\b', 
s
->
Àngth
);

267 #ifde‡
USE_ANSI_COLOR


268 i‡(
ocﬁ‹
) {

269 
es
 = 
	`memchr
(
°r
, 
ESC_CODE
, 
s
->
Àngth
);

270 i‡(
es
) {

271 i‡(
cﬁ‹_size
 < 
s
->
Àngth
) {

272 
cﬁ‹_size
 = (
s
->
Àngth
 > 
LINELEN
) ? s->length : LINELEN;

273 
cﬁ‹_buf„r
 = 
	`New_Reu£
(
Löecﬁ‹
, color_buffer,

274 
cﬁ‹_size
);

276 
cﬁ‹
 = 
cﬁ‹_buf„r
;

280 i‡((
bs
 !
NULL
)

281 #ifde‡
USE_ANSI_COLOR


282 || (
es
 !
NULL
)

285 *
•
 = 
°r
, *
ï
;

286 
s
 = 
	`Så√w_size
(s->
Àngth
);

287 
do_c›y
 = 
TRUE
;

288 
ï
 = 
bs
 ? (b†- 2Ë: 
ídp
;

289 #ifde‡
USE_ANSI_COLOR


290 i‡(
es
 && 
ï
 >És - 2)

291 
ï
 = 
es
 - 2;

293 ; 
°r
 < 
ï
 && 
	`IS_ASCII
(*str); str++) {

294 *(
¥›
++Ë
PE_NORMAL
 | (
	`IS_CNTRL
(*
°r
Ë? 
PC_CTRL
 : 
PC_ASCII
);

295 #ifde‡
USE_ANSI_COLOR


296 i‡(
cﬁ‹
)

297 *(
cﬁ‹
++) = 0;

300 
	`Såˇt_ch¨p_n
(
s
, 
•
, ()(
°r
 - sp));

303 i‡(!
do_c›y
) {

304 ; 
°r
 < 
ídp
 && 
	`IS_ASCII
(*str); str++)

305 *(
¥›
++Ë
PE_NORMAL
 | (
	`IS_CNTRL
(*
°r
Ë? 
PC_CTRL
 : 
PC_ASCII
);

308 
°r
 < 
ídp
) {

309 i‡(
¥›
 - 
¥›_buf„r
 >
¥›_size
)

311 i‡(
bs
 !
NULL
) {

312 #ifde‡
USE_M17N


313 i‡(
°r
 =
bs
 - 2 && !
	`°∫cmp
(str, "__\b\b", 4)) {

314 
°r
 += 4;

315 
ef„˘
 = 
PE_UNDER
;

316 i‡(
°r
 < 
ídp
)

317 
bs
 = 
	`memchr
(
°r
, '\b', 
ídp
 - str);

322 i‡(
°r
 =
bs
 - 1 && *str == '_') {

323 
°r
 += 2;

324 
ef„˘
 = 
PE_UNDER
;

325 i‡(
°r
 < 
ídp
)

326 
bs
 = 
	`memchr
(
°r
, '\b', 
ídp
 - str);

329 i‡(
°r
 =
bs
) {

330 i‡(*(
°r
 + 1) == '_') {

331 i‡(
s
->
Àngth
) {

332 
°r
 += 2;

333 #ifde‡
USE_M17N


334 
i
 = 1; i <
∂í
; i++)

335 *(
¥›
 - 
i
Ë|
PE_UNDER
;

337 *(
¥›
 - 1Ë|
PE_UNDER
;

341 
°r
++;

344 #ifde‡
USE_M17N


345 i‡(!
	`°∫cmp
(
°r
 + 1, "\b__", 3)) {

346 i‡(
s
->
Àngth
) {

347 
°r
 +(
∂í
 == 1) ? 3 : 4;

348 
i
 = 1; i <
∂í
; i++)

349 *(
¥›
 - 
i
Ë|
PE_UNDER
;

352 
°r
 += 2;

355 i‡(*(
°r
 + 1) == '\b') {

356 i‡(
s
->
Àngth
) {

357 
˛í
 = 
	`gë_m˛í
(
°r
 + 2);

358 i‡(
∂í
 =
˛í
 &&

359 !
	`°∫cmp
(
°r
 - 
∂í
, str + 2,Ölen)) {

360 
i
 = 1; i <
∂í
; i++)

361 *(
¥›
 - 
i
Ë|
PE_BOLD
;

362 
°r
 +2 + 
˛í
;

365 
	`Såshrök
(
s
, 
∂í
);

366 
¥›
 -
∂í
;

367 
°r
 += 2;

371 
°r
 += 2;

376 i‡(
s
->
Àngth
) {

377 #ifde‡
USE_M17N


378 
˛í
 = 
	`gë_m˛í
(
°r
 + 1);

379 i‡(
∂í
 =
˛í
 &&

380 !
	`°∫cmp
(
°r
 - 
∂í
, str + 1,Ölen)) {

381 
i
 = 1; i <
∂í
; i++)

382 *(
¥›
 - 
i
Ë|
PE_BOLD
;

383 
°r
 +1 + 
˛í
;

386 
	`Såshrök
(
s
, 
∂í
);

387 
¥›
 -
∂í
;

388 
°r
++;

391 i‡(*(
°r
 - 1) == *(str + 1)) {

392 *(
¥›
 - 1Ë|
PE_BOLD
;

393 
°r
 += 2;

396 
	`Såshrök
(
s
, 1);

397 
¥›
--;

398 
°r
++;

403 
°r
++;

406 i‡(
°r
 < 
ídp
)

407 
bs
 = 
	`memchr
(
°r
, '\b', 
ídp
 - str);

410 #ifde‡
USE_ANSI_COLOR


411 i‡(
°r
 > 
bs
)

412 
bs
 = 
	`memchr
(
°r
, '\b', 
ídp
 - str);

415 #ifde‡
USE_ANSI_COLOR


416 i‡(
es
 !
NULL
) {

417 i‡(
°r
 =
es
) {

418 
ok
 = 
	`∑r£_™si_cﬁ‹
(&
°r
, &
˚f„˘
, &
cmode
);

419 i‡(
°r
 < 
ídp
)

420 
es
 = 
	`memchr
(
°r
, 
ESC_CODE
, 
ídp
 - str);

421 i‡(
ok
) {

422 i‡(
cmode
)

423 
check_cﬁ‹
 = 
TRUE
;

427 i‡(
°r
 > 
es
)

428 
es
 = 
	`memchr
(
°r
, 
ESC_CODE
, 
ídp
 - str);

432 
∂í
 = 
	`gë_m˛í
(
°r
);

433 
mode
 = 
	`gë_m˘y≥
(
°r
Ë| 
ef„˘
;

434 #ifde‡
USE_ANSI_COLOR


435 i‡(
cﬁ‹
) {

436 *(
cﬁ‹
++Ë
cmode
;

437 
mode
 |
˚f„˘
;

440 *(
¥›
++Ë
mode
;

441 #ifde‡
USE_M17N


442 i‡(
∂í
 > 1) {

443 
mode
 = (modê& ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

444 
i
 = 1; i < 
∂í
; i++) {

445 *(
¥›
++Ë
mode
;

446 #ifde‡
USE_ANSI_COLOR


447 i‡(
cﬁ‹
)

448 *(
cﬁ‹
++Ë
cmode
;

451 i‡(
do_c›y
)

452 
	`Såˇt_ch¨p_n
(
s
, (*)
°r
, 
∂í
);

453 
°r
 +
∂í
;

458 i‡(
do_c›y
)

459 
	`Såˇt_ch¨
(
s
, ()*
°r
);

460 
°r
++;

462 
ef„˘
 = 
PE_NORMAL
;

464 *
›r›
 = 
¥›_buf„r
;

465 #ifde‡
USE_ANSI_COLOR


466 i‡(
ocﬁ‹
)

467 *
ocﬁ‹
 = 
check_cﬁ‹
 ? 
cﬁ‹_buf„r
 : 
NULL
;

469  
s
;

470 
	}
}

473 
	$√xtCﬁumn
(
n
, *
p
, 
Löïr›
 *
¥
)

475 i‡(*
¥
 & 
PC_CTRL
) {

476 i‡(*
p
 == '\t')

477  (
n
 + 
Tab°›
) / Tabstop * Tabstop;

478 i‡(*
p
 == '\n')

479  
n
 + 1;

480 i‡(*
p
 != '\r')

481  
n
 + 2;

482  
n
;

484 #ifde‡
USE_M17N


485 i‡(*
¥
 & 
PC_UNKNOWN
)

486  
n
 + 4;

487  
n
 + 
	`wtf_width
((
wc_uch¨
 *Ë
p
);

489  
n
 + 1;

491 
	}
}

494 
	$ˇlcPosôi⁄
(*
l
, 
Löïr›
 *
¥
, 
Àn
, 
pos
, 
bpos
, 
mode
)

496 *
ªÆCﬁumn
 = 
NULL
;

497 
size
 = 0;

498 *
¥evl
 = 
NULL
;

499 
i
, 
j
;

501 i‡(
l
 =
NULL
 || 
Àn
 == 0)

502  
bpos
;

503 i‡(
l
 =
¥evl
 && 
mode
 =
CP_AUTO
) {

504 i‡(
pos
 <
Àn
)

505  
ªÆCﬁumn
[
pos
];

507 i‡(
size
 < 
Àn
 + 1) {

508 
size
 = (
Àn
 + 1 > 
LINELEN
) ? (len + 1) : LINELEN;

509 
ªÆCﬁumn
 = 
	`New_N
(, 
size
);

511 
¥evl
 = 
l
;

512 
i
 = 0;

513 
j
 = 
bpos
;

514 #ifde‡
USE_M17N


515 i‡(
¥
[
i
] & 
PC_WCHAR2
) {

516 ; 
i
 < 
Àn
 && 
¥
[i] & 
PC_WCHAR2
; i++)

517 
ªÆCﬁumn
[
i
] = 
j
;

518 i‡(
i
 > 0 && 
¥
[ò- 1] & 
PC_KANJI
 && 
WcO±i⁄
.
u£_wide
)

519 
j
++;

523 
ªÆCﬁumn
[
i
] = 
j
;

524 i‡(
i
 =
Àn
)

526 
j
 = 
	`√xtCﬁumn
(j, &
l
[
i
], &
¥
[i]);

527 
i
++;

528 #ifde‡
USE_M17N


529 ; 
i
 < 
Àn
 && 
¥
[i] & 
PC_WCHAR2
; i++)

530 
ªÆCﬁumn
[
i
] =ÑealColumn[i - 1];

533 i‡(
pos
 >
i
)

534  
j
;

535  
ªÆCﬁumn
[
pos
];

536 
	}
}

539 
	$cﬁumnLí
(
Löe
 *
löe
, 
cﬁumn
)

541 
i
, 
j
;

543 
i
 = 0, 
j
 = 0; i < 
löe
->
Àn
;) {

544 
j
 = 
	`√xtCﬁumn
(j, &
löe
->
löeBuf
[
i
], &löe->
¥›Buf
[i]);

545 i‡(
j
 > 
cﬁumn
)

546  
i
;

547 
i
++;

548 #ifde‡
USE_M17N


549 
i
 < 
löe
->
Àn
 &&Üöe->
¥›Buf
[i] & 
PC_WCHAR2
)

550 
i
++;

553  
löe
->
Àn
;

554 
	}
}

557 
	$œ°FûeName
(*
∑th
)

559 *
p
, *
q
;

561 
p
 = 
q
 = 
∑th
;

562 *
p
 != '\0') {

563 i‡(*
p
 == '/')

564 
q
 = 
p
 + 1;

565 
p
++;

568  
	`ÆlocSå
(
q
, -1);

569 
	}
}

571 #ifde‡
USE_INCLUDED_SRAND48


572 
	gR1
 = 0x1234abcd;

573 
	gR2
 = 0x330e;

574 
	#A1
 0x5dìc

	)

575 
	#A2
 0xe66d

	)

576 
	#C
 0xb

	)

579 
	$§™d48
(
£ed
)

581 
R1
 = ()
£ed
;

582 
R2
 = 0x330e;

583 
	}
}

586 
	$Ã™d48
()

588 
R1
 = (
A1
 * R1 << 16Ë+ A1 * 
R2
 + 
A2
 * R1 + ((A2 * R2 + 
C
) >> 16);

589 
R2
 = (
A2
 * R2 + 
C
) & 0xffff;

590  ()(
R1
 >> 1);

591 
	}
}

595 
	$myba£«me
(*
s
)

597 *
p
 = 
s
;

598 *
p
)

599 
p
++;

600 
s
 <
p
 && *p != '/')

601 
p
--;

602 i‡(*
p
 == '/')

603 
p
++;

605 
p
 = 
s
;

606  
	`ÆlocSå
(
p
, -1);

607 
	}
}

610 
	$mydú«me
(*
s
)

612 *
p
 = 
s
;

613 *
p
)

614 
p
++;

615 i‡(
s
 !
p
)

616 
p
--;

617 
s
 !
p
 && *p == '/')

618 
p
--;

619 
s
 !
p
 && *p != '/')

620 
p
--;

621 i‡(*
p
 != '/')

623 
s
 !
p
 && *p == '/')

624 
p
--;

625  
	`ÆlocSå
(
s
, 
	`°æí
(sË- såÀn(
p
) + 1);

626 
	}
}

628 #i‚de‡
HAVE_STRERROR


630 
	$°ªº‹
(
î∫o
)

632 *
sys_îæi°
[];

633  
sys_îæi°
[
î∫o
];

634 
	}
}

637 #i‚de‡
HAVE_SYS_ERRLIST


638 **
	gsys_îæi°
;

640 
	$¥ï¨e_sys_îæi°
()

642 
i
, 
n
;

644 
i
 = 1;

645 
	`°ªº‹
(
i
Ë!
NULL
)

646 
i
++;

647 
n
 = 
i
;

648 
sys_îæi°
 = 
	`New_N
(*, 
n
);

649 
sys_îæi°
[0] = "";

650 
i
 = 1; i < 
n
; i++)

651 
sys_îæi°
[
i
] = 
	`°ªº‹
(i);

652 
	}
}

656 
	$√xt_°©us
(
c
, *
°©us
)

658 *
°©us
) {

659 
R_ST_NORMAL
:

660 i‡(
c
 == '<') {

661 *
°©us
 = 
R_ST_TAG0
;

664 i‡(
c
 == '&') {

665 *
°©us
 = 
R_ST_AMP
;

671 
R_ST_TAG0
:

672 i‡(
c
 == '!') {

673 *
°©us
 = 
R_ST_CMNT1
;

676 *
°©us
 = 
R_ST_TAG
;

678 
R_ST_TAG
:

679 i‡(
c
 == '>')

680 *
°©us
 = 
R_ST_NORMAL
;

681 i‡(
c
 == '=')

682 *
°©us
 = 
R_ST_EQL
;

684 
R_ST_EQL
:

685 i‡(
c
 == '"')

686 *
°©us
 = 
R_ST_DQUOTE
;

687 i‡(
c
 == '\'')

688 *
°©us
 = 
R_ST_QUOTE
;

689 i‡(
	`IS_SPACE
(
c
))

690 *
°©us
 = 
R_ST_EQL
;

691 i‡(
c
 == '>')

692 *
°©us
 = 
R_ST_NORMAL
;

694 *
°©us
 = 
R_ST_VALUE
;

696 
R_ST_QUOTE
:

697 i‡(
c
 == '\'')

698 *
°©us
 = 
R_ST_TAG
;

700 
R_ST_DQUOTE
:

701 i‡(
c
 == '"')

702 *
°©us
 = 
R_ST_TAG
;

704 
R_ST_VALUE
:

705 i‡(
c
 == '>')

706 *
°©us
 = 
R_ST_NORMAL
;

707 i‡(
	`IS_SPACE
(
c
))

708 *
°©us
 = 
R_ST_TAG
;

710 
R_ST_AMP
:

711 i‡(
c
 == ';') {

712 *
°©us
 = 
R_ST_NORMAL
;

715 i‡(
c
 !'#' && !
	`IS_ALNUM
(c) && c != '_') {

717 *
°©us
 = 
R_ST_NORMAL
;

722 
R_ST_CMNT1
:

723 
c
) {

725 *
°©us
 = 
R_ST_CMNT2
;

728 *
°©us
 = 
R_ST_NORMAL
;

731 *
°©us
 = 
R_ST_IRRTAG
;

734 
R_ST_CMNT2
:

735 
c
) {

737 *
°©us
 = 
R_ST_CMNT
;

740 *
°©us
 = 
R_ST_NORMAL
;

743 *
°©us
 = 
R_ST_IRRTAG
;

746 
R_ST_CMNT
:

747 i‡(
c
 == '-')

748 *
°©us
 = 
R_ST_NCMNT1
;

750 
R_ST_NCMNT1
:

751 i‡(
c
 == '-')

752 *
°©us
 = 
R_ST_NCMNT2
;

754 *
°©us
 = 
R_ST_CMNT
;

756 
R_ST_NCMNT2
:

757 
c
) {

759 *
°©us
 = 
R_ST_NORMAL
;

762 *
°©us
 = 
R_ST_NCMNT2
;

765 i‡(
	`IS_SPACE
(
c
))

766 *
°©us
 = 
R_ST_NCMNT3
;

768 *
°©us
 = 
R_ST_CMNT
;

772 
R_ST_NCMNT3
:

773 
c
) {

775 *
°©us
 = 
R_ST_NORMAL
;

778 *
°©us
 = 
R_ST_NCMNT1
;

781 i‡(
	`IS_SPACE
(
c
))

782 *
°©us
 = 
R_ST_NCMNT3
;

784 *
°©us
 = 
R_ST_CMNT
;

788 
R_ST_IRRTAG
:

789 i‡(
c
 == '>')

790 *
°©us
 = 
R_ST_NORMAL
;

795 
	}
}

798 
	$ªad_tokí
(
Så
 
buf
, **
ö°r
, *
°©us
, 
¥e
, 
≠≥nd
)

800 *
p
;

801 
¥ev_°©us
;

803 i‡(!
≠≥nd
)

804 
	`Så˛ór
(
buf
);

805 i‡(**
ö°r
 == '\0')

807 
p
 = *
ö°r
; *p;Ö++) {

808 
¥ev_°©us
 = *
°©us
;

809 
	`√xt_°©us
(*
p
, 
°©us
);

810 *
°©us
) {

811 
R_ST_NORMAL
:

812 i‡(
¥ev_°©us
 =
R_ST_AMP
 && *
p
 != ';') {

813 
p
--;

816 i‡(
¥ev_°©us
 =
R_ST_NCMNT2
 ||Öªv_°©u†=
R_ST_NCMNT3
 ||

817 
¥ev_°©us
 =
R_ST_IRRTAG
 ||Öªv_°©u†=
R_ST_CMNT1
) {

818 i‡(
¥ev_°©us
 =
R_ST_CMNT1
 && !
≠≥nd
 && !
¥e
)

819 
	`Så˛ór
(
buf
);

820 i‡(
¥e
)

821 
	`Såˇt_ch¨
(
buf
, *
p
);

822 
p
++;

823 
¥oc_íd
;

825 
	`Såˇt_ch¨
(
buf
, (!
¥e
 && 
	`IS_SPACE
(*
p
)) ? ' ' : *p);

826 i‡(
	`ST_IS_REAL_TAG
(
¥ev_°©us
)) {

827 *
ö°r
 = 
p
 + 1;

828 i‡(
buf
->
Àngth
 < 2 ||

829 
buf
->
±r
[buf->
Àngth
 - 2] != '<' ||

830 
buf
->
±r
[buf->
Àngth
 - 1] != '>')

832 
	`Såshrök
(
buf
, 2);

835 
R_ST_TAG0
:

836 
R_ST_TAG
:

837 i‡(
¥ev_°©us
 =
R_ST_NORMAL
 && 
p
 !*
ö°r
) {

838 *
ö°r
 = 
p
;

839 *
°©us
 = 
¥ev_°©us
;

842 i‡(*
°©us
 =
R_ST_TAG0
 && !
	`REALLY_THE_BEGINNING_OF_A_TAG
(
p
)) {

847 
	`Såˇt_ch¨
(
buf
, '<');

848 *
°©us
 = 
R_ST_NORMAL
;

851 
	`Såˇt_ch¨
(
buf
, *
p
);

853 
R_ST_EQL
:

854 
R_ST_QUOTE
:

855 
R_ST_DQUOTE
:

856 
R_ST_VALUE
:

857 
R_ST_AMP
:

858 
	`Såˇt_ch¨
(
buf
, *
p
);

860 
R_ST_CMNT
:

861 
R_ST_IRRTAG
:

862 i‡(
¥e
)

863 
	`Såˇt_ch¨
(
buf
, *
p
);

864 i‡(!
≠≥nd
)

865 
	`Så˛ór
(
buf
);

867 
R_ST_CMNT1
:

868 
R_ST_CMNT2
:

869 
R_ST_NCMNT1
:

870 
R_ST_NCMNT2
:

871 
R_ST_NCMNT3
:

873 i‡(
¥e
)

874 
	`Såˇt_ch¨
(
buf
, *
p
);

878 
¥oc_íd
:

879 *
ö°r
 = 
p
;

881 
	}
}

883 
Så


884 
	$c‹ª˘_úπag
(
°©us
)

886 
c
;

887 
Så
 
tmp
 = 
	`Så√w
();

889 
°©us
 !
R_ST_NORMAL
) {

890 
°©us
) {

891 
R_ST_CMNT
:

892 
R_ST_NCMNT1
:

893 
c
 = '-';

895 
R_ST_NCMNT2
:

896 
R_ST_NCMNT3
:

897 
R_ST_IRRTAG
:

898 
R_ST_CMNT1
:

899 
R_ST_CMNT2
:

900 
R_ST_TAG
:

901 
R_ST_TAG0
:

902 
R_ST_EQL
:

903 
R_ST_VALUE
:

904 
c
 = '>';

906 
R_ST_QUOTE
:

907 
c
 = '\'';

909 
R_ST_DQUOTE
:

910 
c
 = '"';

912 
R_ST_AMP
:

913 
c
 = ';';

916  
tmp
;

918 
	`√xt_°©us
(
c
, &
°©us
);

919 
	`Såˇt_ch¨
(
tmp
, 
c
);

921  
tmp
;

922 
	}
}

936 
	$add_auth_∑ss_íåy
(c⁄° 
auth_∑ss
 *
ít
, 
√åc
, 
ovîride
)

938 i‡((
ít
->
ho°
 || 
√åc
)

939 &&(
ít
->
is_¥oxy
 ||É¡->
ªÆm
 || 
√åc
)

940 && 
ít
->
u«me
 &&É¡->
pwd
) {

941 
auth_∑ss
 *
√wít
 = 
	`New
(auth_pass);

942 
	`mem˝y
(
√wít
, 
ít
, (
auth_∑ss
));

943 i‡(
ovîride
) {

944 
√wít
->
√xt
 = 
∑ssw‹ds
;

945 
∑ssw‹ds
 = 
√wít
;

948 i‡(
∑ssw‹ds
 =
NULL
)

949 
∑ssw‹ds
 = 
√wít
;

950 i‡(
∑ssw‹ds
->
√xt
 =
NULL
)

951 
∑ssw‹ds
->
√xt
 = 
√wít
;

953 
auth_∑ss
 *
ï
 = 
∑ssw‹ds
;

954 ; 
ï
->
√xt
;Ép =Ép->next) ;

955 
ï
->
√xt
 = 
√wít
;

960 
	}
}

962 
auth_∑ss
 *

963 
	$föd_auth_∑ss_íåy
(*
ho°
, 
p‹t
, *
ªÆm
, *
u«me
,

964 
is_¥oxy
)

966 
auth_∑ss
 *
ít
;

967 
ít
 = 
∑ssw‹ds
;É¡ !
NULL
;É¡ =É¡->
√xt
) {

968 i‡(
ít
->
is_¥oxy
 == is_proxy

969 && (
ít
->
bad
 !
TRUE
)

970 && (!
ít
->
ho°
 || !
	`Såˇ£cmp_ch¨p
(ent->host, host))

971 && (!
ít
->
p‹t
 ||Ént->port ==Öort)

972 && (!
ít
->
u«me
 || !u«mê|| !
	`Såcmp_ch¨p
(ent->uname, uname))

973 && (!
ít
->
ªÆm
 || !ªÆm || !
	`Såcmp_ch¨p
(ent->realm,Ñealm))

975  
ít
;

977  
NULL
;

978 
	}
}

981 
	$föd_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

982 
Så
 *
u«me
, Så *
pwd
, 
is_¥oxy
)

984 
auth_∑ss
 *
ít
;

986 i‡(
pu
->
u£r
 &&Öu->
∑ss
) {

987 *
u«me
 = 
	`Så√w_ch¨p
(
pu
->
u£r
);

988 *
pwd
 = 
	`Så√w_ch¨p
(
pu
->
∑ss
);

991 
ít
 = 
	`föd_auth_∑ss_íåy
(
pu
->
ho°
,Öu->
p‹t
, 
ªÆm
,Öu->
u£r
, 
is_¥oxy
);

992 i‡(
ít
) {

993 *
u«me
 = 
ít
->uname;

994 *
pwd
 = 
ít
->pwd;

998 
	}
}

1001 
	$add_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
, 
Så
 
u«me
, Så 
pwd
,

1002 
is_¥oxy
)

1004 
auth_∑ss
 
ít
;

1005 
	`mem£t
(&
ít
, 0, (ent));

1007 
ít
.
is_¥oxy
 = is_proxy;

1008 
ít
.
ho°
 = 
	`Så√w_ch¨p
(
pu
->host);

1009 
ít
.
p‹t
 = 
pu
->port;

1010 
ít
.
ªÆm
 = 
	`Så√w_ch¨p
(realm);

1011 
ít
.
u«me
 = uname;

1012 
ít
.
pwd
 =Öwd;

1013 
	`add_auth_∑ss_íåy
(&
ít
, 0, 1);

1014 
	}
}

1017 
	$övÆid©e_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
, 
Så
 
u«me
, Så 
pwd
,

1018 
is_¥oxy
)

1020 
auth_∑ss
 *
ít
;

1021 
ít
 = 
	`föd_auth_∑ss_íåy
(
pu
->
ho°
,Öu->
p‹t
, 
ªÆm
, 
NULL
, 
is_¥oxy
);

1022 i‡(
ít
) {

1023 
ít
->
bad
 = 
TRUE
;

1026 
	}
}

1041 
Så


1042 
	$√xt_tokí
(
Så
 
¨g
)

1044 
Så
 
«rg
 = 
NULL
;

1045 *
p
, *
q
;

1046 i‡(
¨g
 =
NULL
 ||árg->
Àngth
 == 0)

1047  
NULL
;

1048 
p
 = 
¨g
->
±r
;

1049 
q
 = 
p
;

1050 
	`SKIP_NON_BLANKS
(
q
);

1051 i‡(*
q
 != '\0') {

1052 *
q
++ = '\0';

1053 
	`SKIP_BLANKS
(
q
);

1054 i‡(*
q
 != '\0')

1055 
«rg
 = 
	`Så√w_ch¨p
(
q
);

1057  
«rg
;

1058 
	}
}

1061 
	$∑r£Passwd
(
FILE
 * 
Â
, 
√åc
)

1063 
auth_∑ss
 
ít
;

1064 
Så
 
löe
 = 
NULL
;

1066 
	`bzîo
(&
ít
, (
auth_∑ss
));

1068 
Så
 
¨g
 = 
NULL
;

1069 *
p
;

1071 i‡(
löe
 =
NULL
 ||Üöe->
Àngth
 == 0)

1072 
löe
 = 
	`Såfgës
(
Â
);

1073 i‡(
löe
->
Àngth
 == 0)

1075 
	`Såch›
(
löe
);

1076 
	`Såªmovefú°•a˚s
(
löe
);

1077 
p
 = 
löe
->
±r
;

1078 i‡(*
p
 == '#' || *p == '\0') {

1079 
löe
 = 
NULL
;

1082 
¨g
 = 
	`√xt_tokí
(
löe
);

1084 i‡(!
	`°rcmp
(
p
, "machine") || !strcmp(p, "host")

1085 || (
√åc
 && !
	`°rcmp
(
p
, "default"))) {

1086 
	`add_auth_∑ss_íåy
(&
ít
, 
√åc
, 0);

1087 
	`bzîo
(&
ít
, (
auth_∑ss
));

1088 i‡(
√åc
)

1089 
ít
.
p‹t
 = 21;

1090 i‡(
	`°rcmp
(
p
, "default") != 0) {

1091 
löe
 = 
	`√xt_tokí
(
¨g
);

1092 
ít
.
ho°
 = 
¨g
;

1095 
löe
 = 
¨g
;

1098 i‡(!
√åc
 && !
	`°rcmp
(
p
, "p‹t"Ë&& 
¨g
) {

1099 
löe
 = 
	`√xt_tokí
(
¨g
);

1100 
ít
.
p‹t
 = 
	`©oi
(
¨g
->
±r
);

1102 i‡(!
√åc
 && !
	`°rcmp
(
p
, "proxy")) {

1103 
ít
.
is_¥oxy
 = 1;

1104 
löe
 = 
¨g
;

1106 i‡(!
√åc
 && !
	`°rcmp
(
p
, "path")) {

1107 
löe
 = 
	`√xt_tokí
(
¨g
);

1110 i‡(!
√åc
 && !
	`°rcmp
(
p
, "realm")) {

1112 
löe
 = 
NULL
;

1113 
ít
.
ªÆm
 = 
¨g
;

1115 i‡(!
	`°rcmp
(
p
, "login")) {

1116 
löe
 = 
	`√xt_tokí
(
¨g
);

1117 
ít
.
u«me
 = 
¨g
;

1119 i‡(!
	`°rcmp
(
p
, "password") || !strcmp(p, "passwd")) {

1120 
löe
 = 
	`√xt_tokí
(
¨g
);

1121 
ít
.
pwd
 = 
¨g
;

1123 i‡(
√åc
 && !
	`°rcmp
(
p
, "machdef")) {

1124 (
löe
 = 
	`Såfgës
(
Â
))->
Àngth
 != 0) {

1125 i‡(*
löe
->
±r
 == '\n')

1128 
löe
 = 
NULL
;

1130 i‡(
√åc
 && !
	`°rcmp
(
p
, "account")) {

1132 
löe
 = 
	`√xt_tokí
(
¨g
);

1136 
löe
 = 
NULL
;

1139 
	`add_auth_∑ss_íåy
(&
ít
, 
√åc
, 0);

1140 
	}
}

1143 
	#FILE_IS_READABLE_MSG
 "SECURITY NOTE: fûê%†mu°ÇŸ bêac˚ssibÀ by othîs"

	)

1145 
FILE
 *

1146 
	$›íSe¸ëFûe
(*
‚ame
)

1148 *
e‚ame
;

1149 
°©
 
°
;

1151 i‡(
‚ame
 =
NULL
)

1152  
NULL
;

1153 
e‚ame
 = 
	`ex∑ndP©h
(
‚ame
);

1154 i‡(
	`°©
(
e‚ame
, &
°
) < 0)

1155  
NULL
;

1166 i‡(
dißbÀ_£¸ë_£curôy_check
)

1168 i‡((
°
.
°_mode
 & (
S_IRWXG
 | 
S_IRWXO
)) != 0) {

1169 i‡(
fmInôülized
) {

1170 
	`mesßge
(
	`S¥ötf
(
FILE_IS_READABLE_MSG
, 
‚ame
)->
±r
, 0, 0);

1171 
	`ª‰esh
();

1174 
	`Âuts
(
	`S¥ötf
(
FILE_IS_READABLE_MSG
, 
‚ame
)->
±r
, 
°dîr
);

1175 
	`Âutc
('\n', 
°dîr
);

1177 
	`¶ìp
(2);

1178  
NULL
;

1181  
	`f›í
(
e‚ame
, "r");

1182 
	}
}

1185 
	$lﬂdPasswd
()

1187 
FILE
 *
Â
;

1189 
∑ssw‹ds
 = 
NULL
;

1190 
Â
 = 
	`›íSe¸ëFûe
(
∑sswd_fûe
);

1191 i‡(
Â
 !
NULL
) {

1192 
	`∑r£Passwd
(
Â
, 0);

1193 
	`f˛o£
(
Â
);

1197 
Â
 = 
	`›íSe¸ëFûe
("~/.netrc");

1198 i‡(
Â
 !
NULL
) {

1199 
	`∑r£Passwd
(
Â
, 1);

1200 
	`f˛o£
(
Â
);

1203 
	}
}

1207 
	$œ°_modifõd
(
Buf„r
 *
buf
)

1209 
TextLi°Iãm
 *
ti
;

1210 
°©
 
°
;

1212 i‡(
buf
->
documít_hódî
) {

1213 
ti
 = 
buf
->
documít_hódî
->
fú°
;Åi;Åòti->
√xt
) {

1214 i‡(
	`°∫ˇ£cmp
(
ti
->
±r
, "Last-modified: ", 15) == 0) {

1215  
ti
->
±r
 + 15;

1220 i‡(
buf
->
cuºítURL
.
scheme
 =
SCM_LOCAL
) {

1221 i‡(
	`°©
(
buf
->
cuºítURL
.
fûe
, &
°
) < 0)

1223  
	`˘ime
(&
°
.
°_mtime
);

1226 
	}
}

1228 
	grom™_num1
[] = {

1231 
	grom™_num5
[] = {

1235 
Så


1236 
	$rom™Num2
(
l
, 
n
)

1238 
Så
 
s
 = 
	`Så√w
();

1240 
n
) {

1244 ; 
n
 > 0;Ç--)

1245 
	`Såˇt_ch¨
(
s
, 
rom™_num1
[
l
]);

1248 
	`Såˇt_ch¨
(
s
, 
rom™_num1
[
l
]);

1249 
	`Såˇt_ch¨
(
s
, 
rom™_num5
[
l
]);

1255 
	`Såˇt_ch¨
(
s
, 
rom™_num5
[
l
]);

1256 
n
 -= 5;Ç > 0;Ç--)

1257 
	`Såˇt_ch¨
(
s
, 
rom™_num1
[
l
]);

1260 
	`Såˇt_ch¨
(
s
, 
rom™_num1
[
l
]);

1261 
	`Såˇt_ch¨
(
s
, 
rom™_num1
[
l
 + 1]);

1264  
s
;

1265 
	}
}

1267 
Så


1268 
	$rom™NumîÆ
(
n
)

1270 
Så
 
r
 = 
	`Så√w
();

1272 i‡(
n
 <= 0)

1273  
r
;

1274 i‡(
n
 >= 4000) {

1275 
	`Såˇt_ch¨p
(
r
, "**");

1276  
r
;

1278 
	`Såˇt
(
r
, 
	`rom™Num2
(3, 
n
 / 1000));

1279 
	`Såˇt
(
r
, 
	`rom™Num2
(2, (
n
 % 1000) / 100));

1280 
	`Såˇt
(
r
, 
	`rom™Num2
(1, (
n
 % 100) / 10));

1281 
	`Såˇt
(
r
, 
	`rom™Num2
(0, 
n
 % 10));

1283  
r
;

1284 
	}
}

1286 
Så


1287 
	$rom™AÕhabë
(
n
)

1289 
Så
 
r
 = 
	`Så√w
();

1290 
l
;

1291 
buf
[14];

1293 i‡(
n
 <= 0)

1294  
r
;

1296 
l
 = 0;

1297 
n
) {

1298 
buf
[
l
++] = 'a' + (
n
 - 1) % 26;

1299 
n
 = (n - 1) / 26;

1301 
l
--;

1302 ; 
l
 >= 0;Ü--)

1303 
	`Såˇt_ch¨
(
r
, 
buf
[
l
]);

1305  
r
;

1306 
	}
}

1308 #i‚de‡
SIGIOT


1309 
	#SIGIOT
 
SIGABRT


	)

1313 
	$ª£t_sig«ls
()

1315 #ifde‡
SIGHUP


1316 
	`mySig«l
(
SIGHUP
, 
SIG_DFL
);

1318 
	`mySig«l
(
SIGINT
, 
SIG_DFL
);

1319 #ifde‡
SIGQUIT


1320 
	`mySig«l
(
SIGQUIT
, 
SIG_DFL
);

1322 
	`mySig«l
(
SIGTERM
, 
SIG_DFL
);

1323 
	`mySig«l
(
SIGILL
, 
SIG_DFL
);

1324 
	`mySig«l
(
SIGIOT
, 
SIG_DFL
);

1325 
	`mySig«l
(
SIGFPE
, 
SIG_DFL
);

1326 #ifde‡
SIGBUS


1327 
	`mySig«l
(
SIGBUS
, 
SIG_DFL
);

1329 #ifde‡
SIGCHLD


1330 
	`mySig«l
(
SIGCHLD
, 
SIG_IGN
);

1332 #ifde‡
SIGPIPE


1333 
	`mySig«l
(
SIGPIPE
, 
SIG_IGN
);

1335 
	}
}

1337 #i‚de‡
FOPEN_MAX


1338 
	#FOPEN_MAX
 1024

	)

1342 
	$˛o£_Æl_fds_ex˚±
(
i
, 
f
)

1344 
i
) {

1346 
	`dup2
(
	`›í
(
DEV_NULL_PATH
, 
O_RDONLY
), 0);

1348 
	`dup2
(
	`›í
(
DEV_NULL_PATH
, 
O_WRONLY
), 1);

1350 
	`dup2
(
	`›í
(
DEV_NULL_PATH
, 
O_WRONLY
), 2);

1353 
i
 = 3; i < 
FOPEN_MAX
; i++) {

1354 i‡(
i
 !
f
)

1355 
	`˛o£
(
i
);

1357 
	}
}

1360 
	$£tup_chûd
(
chûd
, 
i
, 
f
)

1362 
	`ª£t_sig«ls
();

1363 
	`mySig«l
(
SIGINT
, 
SIG_IGN
);

1364 #i‚de‡
__MINGW32_VERSION


1365 i‡(!
chûd
)

1366 
	`SETPGRP
();

1368 
	`˛o£_ây
();

1369 
	`˛o£_Æl_fds_ex˚±
(
i
, 
f
);

1370 
QuõtMesßge
 = 
TRUE
;

1371 
fmInôülized
 = 
FALSE
;

1372 
TøpSig«l
 = 
FALSE
;

1373 
	}
}

1375 #i‚de‡
__MINGW32_VERSION


1376 
pid_t


1377 
	$›í_pùe_rw
(
FILE
 ** 
‰
, FILE ** 
fw
)

1379 
fdr
[2];

1380 
fdw
[2];

1381 
pid_t
 
pid
;

1383 i‡(
‰
 && 
	`pùe
(
fdr
) < 0)

1384 
îr0
;

1385 i‡(
fw
 && 
	`pùe
(
fdw
) < 0)

1386 
îr1
;

1388 
	`Êush_ây
();

1389 
pid
 = 
	`f‹k
();

1390 i‡(
pid
 < 0)

1391 
îr2
;

1392 i‡(
pid
 == 0) {

1394 i‡(
‰
) {

1395 
	`˛o£
(
fdr
[0]);

1396 
	`dup2
(
fdr
[1], 1);

1398 i‡(
fw
) {

1399 
	`˛o£
(
fdw
[1]);

1400 
	`dup2
(
fdw
[0], 0);

1404 i‡(
‰
) {

1405 
	`˛o£
(
fdr
[1]);

1406 i‡(*
‰
 =
°dö
)

1407 
	`dup2
(
fdr
[0], 0);

1409 *
‰
 = 
	`fd›í
(
fdr
[0], "r");

1411 i‡(
fw
) {

1412 
	`˛o£
(
fdw
[0]);

1413 i‡(*
fw
 =
°dout
)

1414 
	`dup2
(
fdw
[1], 1);

1416 *
fw
 = 
	`fd›í
(
fdw
[1], "w");

1419  
pid
;

1420 
îr2
:

1421 i‡(
fw
) {

1422 
	`˛o£
(
fdw
[0]);

1423 
	`˛o£
(
fdw
[1]);

1425 
îr1
:

1426 i‡(
‰
) {

1427 
	`˛o£
(
fdr
[0]);

1428 
	`˛o£
(
fdr
[1]);

1430 
îr0
:

1431  (
pid_t
) - 1;

1432 
	}
}

1436 
	$myExec
(*
comm™d
)

1438 
	`mySig«l
(
SIGINT
, 
SIG_DFL
);

1439 
	`exe˛
("/bö/sh", "sh", "-c", 
comm™d
, 
NULL
);

1440 
	`exô
(127);

1441 
	}
}

1444 
	$mySy°em
(*
comm™d
, 
background
)

1446 #i‚de‡
__MINGW32_VERSION


1447 i‡(
background
) {

1448 #i‚de‡
__EMX__


1449 
	`Êush_ây
();

1450 i‡(!
	`f‹k
()) {

1451 
	`£tup_chûd
(
FALSE
, 0, -1);

1452 
	`myExec
(
comm™d
);

1455 
Så
 
cmd
 = 
	`Så√w_ch¨p
("start /f ");

1456 
	`Såˇt_ch¨p
(
cmd
, 
comm™d
);

1457 
	`sy°em
(
cmd
->
±r
);

1462 
	`sy°em
(
comm™d
);

1463 
	}
}

1465 
Så


1466 
	$myExtComm™d
(*
cmd
, *
¨g
, 
ªdúe˘
)

1468 
Så
 
tmp
 = 
NULL
;

1469 *
p
;

1470 
£t_¨g
 = 
FALSE
;

1472 
p
 = 
cmd
; *p;Ö++) {

1473 i‡(*
p
 ='%' && *’ + 1Ë='s' && !
£t_¨g
) {

1474 i‡(
tmp
 =
NULL
)

1475 
tmp
 = 
	`Så√w_ch¨p_n
(
cmd
, ()(
p
 - cmd));

1476 
	`Såˇt_ch¨p
(
tmp
, 
¨g
);

1477 
£t_¨g
 = 
TRUE
;

1478 
p
++;

1481 i‡(
tmp
)

1482 
	`Såˇt_ch¨
(
tmp
, *
p
);

1485 i‡(!
£t_¨g
) {

1486 i‡(
ªdúe˘
)

1487 
tmp
 = 
	`Så√w_m_ch¨p
("(", 
cmd
, "Ë< ", 
¨g
, 
NULL
);

1489 
tmp
 = 
	`Så√w_m_ch¨p
(
cmd
, " ", 
¨g
, 
NULL
);

1491  
tmp
;

1492 
	}
}

1494 
Så


1495 
	$myEdô‹
(*
cmd
, *
fûe
, 
löe
)

1497 
Så
 
tmp
 = 
NULL
;

1498 *
p
;

1499 
£t_fûe
 = 
FALSE
, 
£t_löe
 = FALSE;

1501 
p
 = 
cmd
; *p;Ö++) {

1502 i‡(*
p
 ='%' && *’ + 1Ë='s' && !
£t_fûe
) {

1503 i‡(
tmp
 =
NULL
)

1504 
tmp
 = 
	`Så√w_ch¨p_n
(
cmd
, ()(
p
 - cmd));

1505 
	`Såˇt_ch¨p
(
tmp
, 
fûe
);

1506 
£t_fûe
 = 
TRUE
;

1507 
p
++;

1509 i‡(*
p
 ='%' && *’ + 1Ë='d' && !
£t_löe
 && 
löe
 > 0) {

1510 i‡(
tmp
 =
NULL
)

1511 
tmp
 = 
	`Så√w_ch¨p_n
(
cmd
, ()(
p
 - cmd));

1512 
	`Såˇt
(
tmp
, 
	`S¥ötf
("%d", 
löe
));

1513 
£t_löe
 = 
TRUE
;

1514 
p
++;

1517 i‡(
tmp
)

1518 
	`Såˇt_ch¨
(
tmp
, *
p
);

1521 i‡(!
£t_fûe
) {

1522 i‡(
tmp
 =
NULL
)

1523 
tmp
 = 
	`Så√w_ch¨p
(
cmd
);

1524 i‡(!
£t_löe
 && 
löe
 > 1 && 
	`°rˇ£°r
(
cmd
, "vi"))

1525 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" +%d", 
löe
));

1526 
	`Såˇt_m_ch¨p
(
tmp
, " ", 
fûe
, 
NULL
);

1528  
tmp
;

1529 
	}
}

1531 #ifde‡
__MINGW32_VERSION


1533 
	$ex∑ndName
(*
«me
)

1535  
	`gëív
("HOME");

1536 
	}
}

1539 
	$ex∑ndName
(*
«me
)

1541 *
p
;

1542 
∑sswd
 *
∑s£¡
, *
	`gëpw«m
(const *);

1543 
Så
 
exç©h
 = 
NULL
;

1545 i‡(
«me
 =
NULL
)

1546  
NULL
;

1547 
p
 = 
«me
;

1548 i‡(*
p
 == '/') {

1549 i‡((*(
p
 + 1Ë='~' && 
	`IS_ALPHA
(*(p + 2)))

1550 && 
≥rs⁄Æ_documít_roŸ
) {

1551 *
q
;

1552 
p
 += 2;

1553 
q
 = 
	`°rchr
(
p
, '/');

1554 i‡(
q
) {

1555 
∑s£¡
 = 
	`gëpw«m
(
	`ÆlocSå
(
p
, 
q
 -Ö));

1556 
p
 = 
q
;

1559 
∑s£¡
 = 
	`gëpw«m
(
p
);

1560 
p
 = "";

1562 i‡(!
∑s£¡
)

1563 
ª°
;

1564 
exç©h
 = 
	`Så√w_m_ch¨p
(
∑s£¡
->
pw_dú
, "/",

1565 
≥rs⁄Æ_documít_roŸ
, 
NULL
);

1566 i‡(*
≥rs⁄Æ_documít_roŸ
 ='\0' && *
p
 == '/')

1567 
p
++;

1570 
ª°
;

1571 i‡(
	`Såcmp_ch¨p
(
exç©h
, "/"Ë=0 && *
p
 == '/')

1572 
p
++;

1573 
	`Såˇt_ch¨p
(
exç©h
, 
p
);

1574  
exç©h
->
±r
;

1577  
	`ex∑ndP©h
(
p
);

1578 
ª°
:

1579  
«me
;

1580 
	}
}

1584 
	$fûe_to_uæ
(*
fûe
)

1586 
Så
 
tmp
;

1587 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1588 *
drive
 = 
NULL
;

1590 #ifde‡
SUPPORT_NETBIOS_SHARE


1591 *
ho°
 = 
NULL
;

1594 
fûe
 = 
	`ex∑ndP©h
(file);

1595 #ifde‡
SUPPORT_NETBIOS_SHARE


1596 i‡(
fûe
[0] == '/' && file[1] == '/') {

1597 *
p
;

1598 
fûe
 += 2;

1599 i‡(*
fûe
) {

1600 
p
 = 
	`°rchr
(
fûe
, '/');

1601 i‡(
p
 !
NULL
 &&Ö !
fûe
) {

1602 
ho°
 = 
	`ÆlocSå
(
fûe
, (
p
 - file));

1603 
fûe
 = 
p
;

1608 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1609 i‡(
	`IS_ALPHA
(
fûe
[0]) && file[1] == ':') {

1610 
drive
 = 
	`ÆlocSå
(
fûe
, 2);

1611 
fûe
 += 2;

1615 i‡(
fûe
[0] != '/') {

1616 
tmp
 = 
	`Så√w_ch¨p
(
CuºítDú
);

1617 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

1618 
	`Såˇt_ch¨
(
tmp
, '/');

1619 
	`Såˇt_ch¨p
(
tmp
, 
fûe
);

1620 
fûe
 = 
tmp
->
±r
;

1622 
tmp
 = 
	`Så√w_ch¨p
("file://");

1623 #ifde‡
SUPPORT_NETBIOS_SHARE


1624 i‡(
ho°
)

1625 
	`Såˇt_ch¨p
(
tmp
, 
ho°
);

1627 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1628 i‡(
drive
)

1629 
	`Såˇt_ch¨p
(
tmp
, 
drive
);

1631 
	`Såˇt_ch¨p
(
tmp
, 
	`fûe_quŸe
(
	`˛ónupName
(
fûe
)));

1632  
tmp
->
±r
;

1633 
	}
}

1635 #ifde‡
USE_M17N


1637 
	$uæ_unquŸe_c⁄v
(*
uæ
, 
wc_˚s
 
ch¨£t
)

1640 
	$uæ_unquŸe_c⁄v0
(*
uæ
)

1643 #ifde‡
USE_M17N


1644 
wc_uöt8
 
ﬁd_auto_dëe˘
 = 
WcO±i⁄
.
auto_dëe˘
;

1646 
Så
 
tmp
;

1647 
tmp
 = 
	`Så_uæ_unquŸe
(
	`Så√w_ch¨p
(
uæ
), 
FALSE
, 
TRUE
);

1648 #ifde‡
USE_M17N


1649 i‡(!
ch¨£t
 || ch¨£à=
WC_CES_US_ASCII
)

1650 
ch¨£t
 = 
Sy°emCh¨£t
;

1651 
WcO±i⁄
.
auto_dëe˘
 = 
WC_OPT_DETECT_ON
;

1652 
tmp
 = 
	`c⁄vîtLöe
(
NULL
,Åmp, 
RAW_MODE
, &
ch¨£t
, charset);

1653 
WcO±i⁄
.
auto_dëe˘
 = 
ﬁd_auto_dëe˘
;

1655  
tmp
->
±r
;

1656 
	}
}

1658 *
	gtmpf_ba£
[
MAX_TMPF_TYPE
] = {

1661 
	gtmpf_£q
[
MAX_TMPF_TYPE
];

1663 
Så


1664 
	$tmp‚ame
(
ty≥
, *
ext
)

1666 
Så
 
tmpf
;

1667 
tmpf
 = 
	`S¥ötf
("%s/w3m%s%d-%d%s",

1668 
tmp_dú
,

1669 
tmpf_ba£
[
ty≥
],

1670 
CuºítPid
, 
tmpf_£q
[
ty≥
]++, (
ext
) ?Éxt : "");

1671 
	`pushText
(
fûeToDñëe
, 
tmpf
->
±r
);

1672  
tmpf
;

1673 
	}
}

1675 *
	gm⁄thtbl
[] = {

1681 
	$gë_day
(**
s
)

1683 
Så
 
tmp
 = 
	`Så√w
();

1684 
day
;

1685 *
ss
 = *
s
;

1687 i‡(!**
s
)

1690 **
s
 && 
	`IS_DIGIT
(**s))

1691 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1693 
day
 = 
	`©oi
(
tmp
->
±r
);

1695 i‡(
day
 < 1 || day > 31) {

1696 *
s
 = 
ss
;

1699  
day
;

1700 
	}
}

1703 
	$gë_m⁄th
(**
s
)

1705 
Så
 
tmp
 = 
	`Så√w
();

1706 
m⁄
;

1707 *
ss
 = *
s
;

1709 i‡(!**
s
)

1712 **
s
 && 
	`IS_DIGIT
(**s))

1713 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1714 i‡(
tmp
->
Àngth
 > 0) {

1715 
m⁄
 = 
	`©oi
(
tmp
->
±r
);

1718 **
s
 && 
	`IS_ALPHA
(**s))

1719 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1720 
m⁄
 = 1; mon <= 12; mon++) {

1721 i‡(
	`°∫cmp
(
tmp
->
±r
, 
m⁄thtbl
[
m⁄
 - 1], 3) == 0)

1725 i‡(
m⁄
 < 1 || mon > 12) {

1726 *
s
 = 
ss
;

1729  
m⁄
;

1730 
	}
}

1733 
	$gë_yór
(**
s
)

1735 
Så
 
tmp
 = 
	`Så√w
();

1736 
yór
;

1737 *
ss
 = *
s
;

1739 i‡(!**
s
)

1742 **
s
 && 
	`IS_DIGIT
(**s))

1743 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1744 i‡(
tmp
->
Àngth
 != 2 &&Åmp->length != 4) {

1745 *
s
 = 
ss
;

1749 
yór
 = 
	`©oi
(
tmp
->
±r
);

1750 i‡(
tmp
->
Àngth
 == 2) {

1751 i‡(
yór
 >= 70)

1752 
yór
 += 1900;

1754 
yór
 += 2000;

1756  
yór
;

1757 
	}
}

1760 
	$gë_time
(**
s
, *
hour
, *
mö
, *
£c
)

1762 
Så
 
tmp
 = 
	`Så√w
();

1763 *
ss
 = *
s
;

1765 i‡(!**
s
)

1768 **
s
 && 
	`IS_DIGIT
(**s))

1769 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1770 i‡(**
s
 != ':') {

1771 *
s
 = 
ss
;

1774 *
hour
 = 
	`©oi
(
tmp
->
±r
);

1776 (*
s
)++;

1777 
	`Så˛ór
(
tmp
);

1778 **
s
 && 
	`IS_DIGIT
(**s))

1779 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1780 i‡(**
s
 != ':') {

1781 *
s
 = 
ss
;

1784 *
mö
 = 
	`©oi
(
tmp
->
±r
);

1786 (*
s
)++;

1787 
	`Så˛ór
(
tmp
);

1788 **
s
 && 
	`IS_DIGIT
(**s))

1789 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1790 *
£c
 = 
	`©oi
(
tmp
->
±r
);

1792 i‡(*
hour
 < 0 || *hour >= 24 ||

1793 *
mö
 < 0 || *mö >60 || *
£c
 < 0 || *sec >= 60) {

1794 *
s
 = 
ss
;

1798 
	}
}

1801 
	$gë_z⁄e
(**
s
, *
z_hour
, *
z_mö
)

1803 
Så
 
tmp
 = 
	`Så√w
();

1804 
z⁄e
;

1805 *
ss
 = *
s
;

1807 i‡(!**
s
)

1810 i‡(**
s
 == '+' || **s == '-')

1811 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1812 **
s
 && 
	`IS_DIGIT
(**s))

1813 
	`Såˇt_ch¨
(
tmp
, *((*
s
)++));

1814 i‡(!(
tmp
->
Àngth
 =4 && 
	`IS_DIGIT
(*
ss
)) &&

1815 !(
tmp
->
Àngth
 =5 && (*
ss
 == '+' || *ss == '-'))) {

1816 *
s
 = 
ss
;

1820 
z⁄e
 = 
	`©oi
(
tmp
->
±r
);

1821 *
z_hour
 = 
z⁄e
 / 100;

1822 *
z_mö
 = 
z⁄e
 - (zone / 100) * 100;

1824 
	}
}

1827 
time_t


1828 
	$mymktime
(*
time°r
)

1830 *
s
;

1831 
day
, 
m⁄
, 
yór
, 
hour
, 
mö
, 
£c
, 
z_hour
 = 0, 
z_mö
 = 0;

1833 i‡(!(
time°r
 && *timestr))

1835 
s
 = 
time°r
;

1837 #ifde‡
DEBUG


1838 
	`Ârötf
(
°dîr
, "mktime: %s\n", 
time°r
);

1841 *
s
 && 
	`IS_ALPHA
(*s))

1842 
s
++;

1843 *
s
 && !
	`IS_ALNUM
(*s))

1844 
s
++;

1846 i‡(
	`IS_DIGIT
(*
s
)) {

1848 i‡((
day
 = 
	`gë_day
(&
s
)) == -1)

1851 *
s
 && !
	`IS_ALNUM
(*s))

1852 
s
++;

1853 i‡((
m⁄
 = 
	`gë_m⁄th
(&
s
)) == -1)

1856 *
s
 && !
	`IS_DIGIT
(*s))

1857 
s
++;

1858 i‡((
yór
 = 
	`gë_yór
(&
s
)) == -1)

1861 *
s
 && !
	`IS_DIGIT
(*s))

1862 
s
++;

1863 i‡(!*
s
) {

1864 
hour
 = 0;

1865 
mö
 = 0;

1866 
£c
 = 0;

1869 i‡(
	`gë_time
(&
s
, &
hour
, &
mö
, &
£c
) == -1)

1871 *
s
 && !
	`IS_DIGIT
(*s) && *s != '+' && *s != '-')

1872 
s
++;

1873 
	`gë_z⁄e
(&
s
, &
z_hour
, &
z_mö
);

1878 *
s
 && !
	`IS_ALNUM
(*s))

1879 
s
++;

1880 i‡((
m⁄
 = 
	`gë_m⁄th
(&
s
)) == -1)

1883 *
s
 && !
	`IS_DIGIT
(*s))

1884 
s
++;

1885 i‡((
day
 = 
	`gë_day
(&
s
)) == -1)

1888 *
s
 && !
	`IS_DIGIT
(*s))

1889 
s
++;

1890 i‡(
	`gë_time
(&
s
, &
hour
, &
mö
, &
£c
) == -1)

1893 *
s
 && !
	`IS_DIGIT
(*s))

1894 
s
++;

1895 i‡((
yór
 = 
	`gë_yór
(&
s
)) == -1)

1898 #ifde‡
DEBUG


1899 
	`Ârötf
(
°dîr
,

1900 "yór=%d m⁄th=%d day=%d hour:mö:£c=%d:%d:%d z⁄e=%d:%d\n", 
yór
,

1901 
m⁄
, 
day
, 
hour
, 
mö
, 
£c
, 
z_hour
, 
z_mö
);

1904 
m⁄
 -= 3;

1905 i‡(
m⁄
 < 0) {

1906 
m⁄
 += 12;

1907 
yór
--;

1909 
day
 +(
yór
 - 1968) * 1461 / 4;

1910 
day
 +((((
m⁄
 * 153) + 2) / 5) - 672);

1911 
hour
 -
z_hour
;

1912 
mö
 -
z_mö
;

1913  (
time_t
Ë((
day
 * 60 * 60 * 24) +

1914 (
hour
 * 60 * 60Ë+ (
mö
 * 60Ë+ 
£c
);

1915 
	}
}

1917 #ifde‡
USE_COOKIE


1918 #ifde‡
INET6


1919 
	~<sys/sockë.h
>

1921 #i‚de‡
__MINGW32_VERSION


1922 
	~<√tdb.h
>

1924 
	~<wösock.h
>

1927 
	$FQDN
(*
ho°
)

1929 *
p
;

1930 #i‚de‡
INET6


1931 
ho°ít
 *
íåy
;

1933 *
af
;

1936 i‡(
ho°
 =
NULL
)

1937  
NULL
;

1939 i‡(
	`°rˇ£cmp
(
ho°
, "localhost") == 0)

1940  
ho°
;

1942 
p
 = 
ho°
; *p && *p != '.';Ö++) ;

1944 i‡(*
p
 == '.')

1945  
ho°
;

1947 #i‚de‡
INET6


1948 i‡(!(
íåy
 = 
	`gëho°by«me
(
ho°
)))

1949  
NULL
;

1951  
	`ÆlocSå
(
íåy
->
h_«me
, -1);

1953 
af
 = 
ai_Ámûy_‹dî_èbÀ
[
DNS_‹dî
];;áf++) {

1954 
îr‹
;

1955 
addröfo
 
höts
;

1956 
addröfo
 *
ªs
, *
ªs0
;

1957 *
«mebuf
;

1959 
	`mem£t
(&
höts
, 0, (hints));

1960 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

1961 
höts
.
ai_Ámûy
 = *
af
;

1962 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1963 
îr‹
 = 
	`gëaddröfo
(
ho°
, 
NULL
, &
höts
, &
ªs0
);

1964 i‡(
îr‹
) {

1965 i‡(*
af
 =
PF_UNSPEC
) {

1972 
ªs
 = 
ªs0
;Ñe†!
NULL
;Ñe†ªs->
ai_√xt
) {

1973 i‡(
ªs
->
ai_ˇn⁄«me
) {

1975 
«mebuf
 = 
	`°rdup
(
ªs
->
ai_ˇn⁄«me
);

1976 
	`‰ìaddröfo
(
ªs0
);

1977  
«mebuf
;

1980 
	`‰ìaddröfo
(
ªs0
);

1981 i‡(*
af
 =
PF_UNSPEC
) {

1986  
NULL
;

1988 
	}
}

1992 (*
mySig«l
(
sig«l_numbî
, (*
a˘i⁄
) ())) () {

1993 #ifdef 
SA_RESTART


1994 
siga˘i⁄
 
√w_a˘i⁄
, 
ﬁd_a˘i⁄
;

1996 
	`sigem±y£t
(&
√w_a˘i⁄
.
ß_mask
);

1997 
√w_a˘i⁄
.
ß_h™dÀr
 = 
a˘i⁄
;

1998 i‡(
sig«l_numbî
 =
SIGALRM
) {

1999 #ifdef 
SA_INTERRUPT


2000 
√w_a˘i⁄
.
ß_Êags
 = 
SA_INTERRUPT
;

2002 
√w_a˘i⁄
.
ß_Êags
 = 0;

2006 
√w_a˘i⁄
.
ß_Êags
 = 
SA_RESTART
;

2008 
	`siga˘i⁄
(
sig«l_numbî
, &
√w_a˘i⁄
, &
ﬁd_a˘i⁄
);

2009  (
ﬁd_a˘i⁄
.
ß_h™dÀr
);

2011  (
	`sig«l
(
sig«l_numbî
, 
a˘i⁄
));

2013 
	}
}

	@file.c

2 
	~"fm.h
"

3 
	~<sys/ty≥s.h
>

4 
	~"my˘y≥.h
"

5 
	~<sig«l.h
>

6 
	~<£tjmp.h
>

7 #i‡
deföed
(
HAVE_WAITPID
Ë|| deföed(
HAVE_WAIT3
)

8 
	~<sys/waô.h
>

10 
	~<°dio.h
>

11 
	~<time.h
>

12 
	~<sys/°©.h
>

13 
	~<f˙é.h
>

14 
	~<utime.h
>

17 
	~"html.h
"

18 
	~"∑r£ègx.h
"

19 
	~"loˇl.h
"

20 
	~"ªgex.h
"

22 #i‚de‡
max


23 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

25 #i‚de‡
mö


26 
	#mö
(
a
,
b
Ë(◊Ë> (bË? (bË: (a))

	)

29 
	g‰ame_sour˚
 = 0;

31 *
guess_fûíame
(*
fûe
);

32 
_MoveFûe
(*
∑th1
, *
∑th2
);

33 
uncom¥ess_°ªam
(
URLFûe
 *
uf
, **
§c
);

34 
FILE
 *
Àss›í_°ªam
(*
∑th
);

35 
Buf„r
 *
lﬂdcmdout
(*
cmd
,

36 
Buf„r
 *(*
lﬂd¥oc
Ë(
URLFûe
 *, Buffer *),

37 
Buf„r
 *
deÁu…buf
);

38 #i‚de‡
USE_ANSI_COLOR


39 
	#add√wlöe
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ë
	`_add√wlöe
◊,b,c,e,f,g)

	)

41 
add√wlöe
(
Buf„r
 *
buf
, *
löe
, 
Löïr›
 *
¥›
,

42 
Löecﬁ‹
 *
cﬁ‹
, 
pos
, 
width
, 
∆öes
);

43 
addLök
(
Buf„r
 *
buf
, 
∑r£d_èg
 *
èg
);

45 
JMP_BUF
 
	gAb‹tLﬂdög
;

47 
èbÀ
 *
	gèbÀs
[
MAX_TABLE
];

48 
èbÀ_mode
 
	gèbÀ_mode
[
MAX_TABLE
];

50 #ifde‡
USE_IMAGE


51 
P¨£dURL
 *
	gcur_ba£URL
 = 
NULL
;

52 #ifde‡
USE_M17N


53 
	gcur_documít_ch¨£t
;

57 
Så
 
	gcur_tôÀ
;

58 
Så
 
	gcur_£À˘
;

59 
Så
 
	g£À˘_°r
;

60 
	g£À˘_is_mu…ùÀ
;

61 
	gn_£À˘ôem
;

62 
Så
 
	gcur_›ti⁄
;

63 
Så
 
	gcur_›ti⁄_vÆue
;

64 
Så
 
	gcur_›ti⁄_œbñ
;

65 
	gcur_›ti⁄_£À˘ed
;

66 
	gcur_°©us
;

67 #ifde‡
MENU_SELECT


69 
F‹mSñe˘O±i⁄
 *
	g£À˘_›ti⁄
;

70 
	gmax_£À˘
 = 
MAX_SELECT
;

71 
	gn_£À˘
;

72 
	gcur_›ti⁄_maxwidth
;

75 
Så
 
	gcur_ãxèªa
;

76 
Så
 *
	gãxèªa_°r
;

77 
	gcur_ãxèªa_size
;

78 
	gcur_ãxèªa_rows
;

79 
	gcur_ãxèªa_ªad⁄ly
;

80 
	gn_ãxèªa
;

81 
	gign‹e_∆_ãxèªa
;

82 
	gmax_ãxèªa
 = 
MAX_TEXTAREA
;

84 
	ghâp_ª•⁄£_code
;

86 #ifde‡
USE_M17N


87 
wc_˚s
 
	gc⁄ã¡_ch¨£t
 = 0;

88 
wc_˚s
 
	gmëa_ch¨£t
 = 0;

89 *
check_ch¨£t
(*
p
);

90 *
check_ac˚±_ch¨£t
(*
p
);

93 
	#£t_¥evch¨
(
x
,
y
,
n
Ë
	`Såc›y_ch¨p_n
((x),(y),“))

	)

94 
	#£t_•a˚_to_¥evch¨
(
x
Ë
	`Såc›y_ch¨p_n
((x)," ",1)

	)

96 
	slök_°ack
 {

97 
	mcmd
;

98 
	moff£t
;

99 
	mpos
;

100 
lök_°ack
 *
	m√xt
;

103 
lök_°ack
 *
	glök_°ack
 = 
NULL
;

105 
	#FORMSTACK_SIZE
 10

	)

106 
	#FRAMESTACK_SIZE
 10

	)

108 #ifde‡
USE_NNTP


109 
	#Så_√ws_ídlöe
(
s
Ë((s)->
±r
[0]=='.'&&((s)->±r[1]=='\n'||(s)->±r[1]=='\r'||(s)->±r[1]=='\0'))

	)

112 
	#INITIAL_FORM_SIZE
 10

	)

113 
F‹mLi°
 **
	gf‹ms
;

114 *
	gf‹m_°ack
;

115 
	gf‹m_max
 = -1;

116 
	gf‹ms_size
 = 0;

117 
	#cur_f‹m_id
 ((
f‹m_•
 >0)? 
f‹m_°ack
[f‹m_•] : -1)

	)

118 
	gf‹m_•
 = 0;

120 
˛í_t
 
	gcuºít_c⁄ã¡_Àngth
;

122 
	gcur_h£q
;

123 #ifde‡
USE_IMAGE


124 
	gcur_i£q
;

127 
	#MAX_UL_LEVEL
 9

	)

128 
	#UL_SYMBOL
(
x
Ë(
N_GRAPH_SYMBOL
 + (x))

	)

129 
	#UL_SYMBOL_DISC
 
	`UL_SYMBOL
(9)

	)

130 
	#UL_SYMBOL_CIRCLE
 
	`UL_SYMBOL
(10)

	)

131 
	#UL_SYMBOL_SQUARE
 
	`UL_SYMBOL
(11)

	)

132 
	#IMG_SYMBOL
 
	`UL_SYMBOL
(12)

	)

133 
	#HR_SYMBOL
 26

	)

135 #ifde‡
USE_COOKIE


138 *
	gviﬁ©i⁄s
[
COO_EMAX
] = {

152 
	scom¥essi⁄_decodî
 {

153 
	mty≥
;

154 *
	mext
;

155 *
	mmime_ty≥
;

156 
	mauxbö_p
;

157 *
	mcmd
;

158 *
	m«me
;

159 *
	mícodög
;

160 *
	mícodögs
[4];

161 } 
	gcom¥essi⁄_decodîs
[] = {

162 { 
CMP_COMPRESS
, ".gz", "application/x-gzip",

163 0, 
GUNZIP_CMDNAME
, 
GUNZIP_NAME
, "gzip",

164 {"gzù", "x-gzù", 
NULL
} },

165 { 
CMP_COMPRESS
, ".Z", "application/x-compress",

166 0, 
GUNZIP_CMDNAME
, 
GUNZIP_NAME
, "compress",

167 {"com¥ess", "x-com¥ess", 
NULL
} },

168 { 
CMP_BZIP2
, ".bz2", "application/x-bzip",

169 0, 
BUNZIP2_CMDNAME
, 
BUNZIP2_NAME
, "bzip, bzip2",

170 {"x-bzù", "bzù", "bzù2", 
NULL
} },

171 { 
CMP_DEFLATE
, ".deflate", "application/x-deflate",

172 1, 
INFLATE_CMDNAME
, 
INFLATE_NAME
, "deflate",

173 {"deÊ©e", "x-deÊ©e", 
NULL
} },

174 { 
CMP_NOCOMPRESS
, 
NULL
, NULL, 0, NULL, NULL, NULL, {NULL}},

178 
	#SAVE_BUF_SIZE
 1536

	)

180 
MySig«lH™dÀr


181 
	$KeyAb‹t
(
SIGNAL_ARG
)

183 
	`LONGJMP
(
Ab‹tLﬂdög
, 1);

184 
SIGNAL_RETURN
;

185 
	}
}

188 
	$UFhÆf˛o£
(
URLFûe
 *
f
)

190 
f
->
scheme
) {

191 
SCM_FTP
:

192 
	`˛o£FTP
();

194 #ifde‡
USE_NNTP


195 
SCM_NEWS
:

196 
SCM_NNTP
:

197 
	`˛o£News
();

201 
	`UF˛o£
(
f
);

204 
	}
}

207 
	$cuºítLn
(
Buf„r
 *
buf
)

209 i‡(
buf
->
cuºítLöe
)

211  
buf
->
cuºítLöe
->
löíumbî
 + 1;

214 
	}
}

216 
Buf„r
 *

217 
lﬂdSomëhög
(
URLFûe
 *
f
,

218 *
∑th
,

219 
Buf„r
 *(*
lﬂd¥oc
Ë(
URLFûe
 *, Buf„∏*), Buf„∏*
deÁu…buf
)

221 
Buf„r
 *
	gbuf
;

223 i‡((
	gbuf
 = 
lﬂd¥oc
(
f
, 
deÁu…buf
)Ë=
NULL
)

224  
NULL
;

226 
	gbuf
->
	gfûíame
 = 
∑th
;

227 i‡(
	gbuf
->
	gbuf„∫ame
 =
NULL
 || 
buf
->
buf„∫ame
[0] == '\0') {

228 
buf
->
buf„∫ame
 = 
checkHódî
(buf, "Subject:");

229 i‡(
	gbuf
->
	gbuf„∫ame
 =
NULL
)

230 
buf
->
buf„∫ame
 = 
c⁄v_‰om_sy°em
(
œ°FûeName
(
∑th
));

232 i‡(
	gbuf
->
	gcuºítURL
.
	gscheme
 =
SCM_UNKNOWN
)

233 
buf
->
cuºítURL
.
scheme
 = 
f
->scheme;

234 
	gbuf
->
	gªÆ_scheme
 = 
f
->
scheme
;

235 i‡(
	gf
->
	gscheme
 =
SCM_LOCAL
 && 
buf
->
sour˚fûe
 =
NULL
)

236 
buf
->
sour˚fûe
 = 
∑th
;

237  
	gbuf
;

241 
	$dú_exi°
(*
∑th
)

243 
°©
 
°buf
;

245 i‡(
∑th
 =
NULL
 || *path == '\0')

247 i‡(
	`°©
(
∑th
, &
°buf
) == -1)

249  
	`IS_DIRECTORY
(
°buf
.
°_mode
);

250 
	}
}

253 
	$is_dump_ãxt_ty≥
(*
ty≥
)

255 
maûˇp
 *
mˇp
;

256  (
ty≥
 && (
mˇp
 = 
	`£¨chExtVõwî
(type)) &&

257 (
mˇp
->
Êags
 & (
MAILCAP_HTMLOUTPUT
 | 
MAILCAP_COPIOUSOUTPUT
)));

258 
	}
}

261 
	$is_ãxt_ty≥
(*
ty≥
)

263  (
ty≥
 =
NULL
 ||Åype[0] == '\0' ||

264 
	`°∫ˇ£cmp
(
ty≥
, "text/", 5) == 0 ||

265 
	`°∫ˇ£cmp
(
ty≥
, "message/", ("message/") - 1) == 0);

266 
	}
}

269 
	$is_∂aö_ãxt_ty≥
(*
ty≥
)

271  ((
ty≥
 && 
	`°rˇ£cmp
(type, "text/plain") == 0) ||

272 (
	`is_ãxt_ty≥
(
ty≥
Ë&& !
	`is_dump_ãxt_ty≥
(type)));

273 
	}
}

276 
	$check_com¥essi⁄
(*
∑th
, 
URLFûe
 *
uf
)

278 
Àn
;

279 
com¥essi⁄_decodî
 *
d
;

281 i‡(
∑th
 =
NULL
)

284 
Àn
 = 
	`°æí
(
∑th
);

285 
uf
->
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

286 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

287 
ñí
;

288 i‡(
d
->
ext
 =
NULL
)

290 
ñí
 = 
	`°æí
(
d
->
ext
);

291 i‡(
Àn
 > 
ñí
 && 
	`°rˇ£cmp
(&
∑th
[À¿-ÉÀn], 
d
->
ext
) == 0) {

292 
uf
->
com¥essi⁄
 = 
d
->
ty≥
;

293 
uf
->
guess_ty≥
 = 
d
->
mime_ty≥
;

297 
	}
}

300 
	$com¥ess_≠∂iˇti⁄_ty≥
(
com¥essi⁄
)

302 
com¥essi⁄_decodî
 *
d
;

304 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

305 i‡(
d
->
ty≥
 =
com¥essi⁄
)

306  
d
->
mime_ty≥
;

308  
NULL
;

309 
	}
}

312 
	$uncom¥es£d_fûe_ty≥
(*
∑th
, **
ext
)

314 
Àn
, 
¶í
;

315 
Så
 
‚
;

316 *
t0
;

317 
com¥essi⁄_decodî
 *
d
;

319 i‡(
∑th
 =
NULL
)

320  
NULL
;

322 
¶í
 = 0;

323 
Àn
 = 
	`°æí
(
∑th
);

324 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

325 i‡(
d
->
ext
 =
NULL
)

327 
¶í
 = 
	`°æí
(
d
->
ext
);

328 i‡(
Àn
 > 
¶í
 && 
	`°rˇ£cmp
(&
∑th
[À¿- sÀn], 
d
->
ext
) == 0)

331 i‡(
d
->
ty≥
 =
CMP_NOCOMPRESS
)

332  
NULL
;

334 
‚
 = 
	`Så√w_ch¨p
(
∑th
);

335 
	`Såshrök
(
‚
, 
¶í
);

336 i‡(
ext
)

337 *
ext
 = 
	`fûíame_exãnsi⁄
(
‚
->
±r
, 0);

338 
t0
 = 
	`guessC⁄ã¡Ty≥
(
‚
->
±r
);

339 i‡(
t0
 =
NULL
)

340 
t0
 = "text/plain";

341  
t0
;

342 
	}
}

345 
	$£tModtime
(*
∑th
, 
time_t
 
modtime
)

347 
utimbuf
 
t
;

348 
°©
 
°
;

350 i‡(
	`°©
(
∑th
, &
°
) == 0)

351 
t
.
a˘ime
 = 
°
.
°_©ime
;

353 
t
.
a˘ime
 = 
	`time
(
NULL
);

354 
t
.
modtime
 = modtime;

355  
	`utime
(
∑th
, &
t
);

356 
	}
}

359 
	$examöeFûe
(*
∑th
, 
URLFûe
 *
uf
)

361 
°©
 
°buf
;

363 
uf
->
guess_ty≥
 = 
NULL
;

364 i‡(
∑th
 =
NULL
 || *path == '\0' ||

365 
	`°©
(
∑th
, &
°buf
Ë=-1 || 
	`NOT_REGULAR
(°buf.
°_mode
)) {

366 
uf
->
°ªam
 = 
NULL
;

369 
uf
->
°ªam
 = 
	`›íIS
(
∑th
);

370 i‡(!
do_dow∆ﬂd
) {

371 i‡(
u£_Àss›í
 && 
	`gëív
("LESSOPEN"Ë!
NULL
) {

372 
FILE
 *
Â
;

373 
uf
->
guess_ty≥
 = 
	`guessC⁄ã¡Ty≥
(
∑th
);

374 i‡(
uf
->
guess_ty≥
 =
NULL
)

375 
uf
->
guess_ty≥
 = "text/plain";

376 i‡(
	`°rˇ£cmp
(
uf
->
guess_ty≥
, "text/html") == 0)

378 i‡((
Â
 = 
	`Àss›í_°ªam
(
∑th
))) {

379 
	`UF˛o£
(
uf
);

380 
uf
->
°ªam
 = 
	`√wFûeSåóm
(
Â
, ((*)())
p˛o£
);

381 
uf
->
guess_ty≥
 = "text/plain";

385 
	`check_com¥essi⁄
(
∑th
, 
uf
);

386 i‡(
uf
->
com¥essi⁄
 !
CMP_NOCOMPRESS
) {

387 *
ext
 = 
uf
->ext;

388 *
t0
 = 
	`uncom¥es£d_fûe_ty≥
(
∑th
, &
ext
);

389 
uf
->
guess_ty≥
 = 
t0
;

390 
uf
->
ext
 =Éxt;

391 
	`uncom¥ess_°ªam
(
uf
, 
NULL
);

395 
	}
}

397 
	#S_IXANY
 (
S_IXUSR
|
S_IXGRP
|
S_IXOTH
)

	)

400 
	$check_comm™d
(*
cmd
, 
auxbö_p
)

402 *
∑th
 = 
NULL
;

403 
Så
 
dús
;

404 *
p
, *
≈
;

405 
Så
 
∑th«me
;

406 
°©
 
°
;

408 i‡(
∑th
 =
NULL
)

409 
∑th
 = 
	`gëív
("PATH");

410 i‡(
auxbö_p
)

411 
dús
 = 
	`Så√w_ch¨p
(
	`w3m_auxbö_dú
());

413 
dús
 = 
	`Så√w_ch¨p
(
∑th
);

414 
p
 = 
dús
->
±r
;Ö !
NULL
;Ö = 
≈
) {

415 
≈
 = 
	`°rchr
(
p
, 
PATH_SEPARATOR
);

416 i‡(
≈
)

417 *
≈
++ = '\0';

418 
∑th«me
 = 
	`Så√w
();

419 
	`Såˇt_ch¨p
(
∑th«me
, 
p
);

420 
	`Såˇt_ch¨
(
∑th«me
, '/');

421 
	`Såˇt_ch¨p
(
∑th«me
, 
cmd
);

422 i‡(
	`°©
(
∑th«me
->
±r
, &
°
Ë=0 && 
	`S_ISREG
(°.
°_mode
)

423 && (
°
.
°_mode
 & 
S_IXANY
) != 0)

427 
	}
}

430 
	$ac˚±abÀEncodög
()

432 
Så
 
ícodögs
 = 
NULL
;

433 
com¥essi⁄_decodî
 *
d
;

434 
TextLi°
 *
l
;

435 *
p
;

437 i‡(
ícodögs
 !
NULL
)

438  
ícodögs
->
±r
;

439 
l
 = 
	`√wTextLi°
();

440 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

441 i‡(
	`check_comm™d
(
d
->
cmd
, d->
auxbö_p
)) {

442 
	`pushText
(
l
, 
d
->
ícodög
);

445 
ícodögs
 = 
	`Så√w
();

446 (
p
 = 
	`p›Text
(
l
)Ë!
NULL
) {

447 i‡(
ícodögs
->
Àngth
)

448 
	`Såˇt_ch¨p
(
ícodögs
, ", ");

449 
	`Såˇt_ch¨p
(
ícodögs
, 
p
);

451  
ícodögs
->
±r
;

452 
	}
}

457 #ifde‡
USE_M17N


458 
Så


459 
	$c⁄vîtLöe
(
URLFûe
 *
uf
, 
Så
 
löe
, 
mode
, 
wc_˚s
 * 
ch¨£t
,

460 
wc_˚s
 
doc_ch¨£t
)

462 
Så


463 
	$c⁄vîtLöe0
(
URLFûe
 *
uf
, 
Så
 
löe
, 
mode
)

466 #ifde‡
USE_M17N


467 
löe
 = 
	`wc_Så_c⁄v_wôh_dëe˘
÷öe, 
ch¨£t
, 
doc_ch¨£t
, 
I¬îCh¨£t
);

469 i‡(
mode
 !
RAW_MODE
)

470 
	`˛ónup_löe
(
löe
, 
mode
);

471 #ifde‡
USE_NNTP


472 i‡(
uf
 && uf->
scheme
 =
SCM_NEWS
)

473 
	`Såch›
(
löe
);

475  
löe
;

476 
	}
}

481 
Buf„r
 *

482 
	$lﬂdFûe
(*
∑th
)

484 
Buf„r
 *
buf
;

485 
URLFûe
 
uf
;

486 
	`öô_°ªam
(&
uf
, 
SCM_LOCAL
, 
NULL
);

487 
	`examöeFûe
(
∑th
, &
uf
);

488 i‡(
uf
.
°ªam
 =
NULL
)

489  
NULL
;

490 
buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

491 
cuºít_c⁄ã¡_Àngth
 = 0;

492 #ifde‡
USE_M17N


493 
c⁄ã¡_ch¨£t
 = 0;

495 
buf
 = 
	`lﬂdSomëhög
(&
uf
, 
∑th
, 
lﬂdBuf„r
, buf);

496 
	`UF˛o£
(&
uf
);

497  
buf
;

498 
	}
}

501 
	$m©ch©å
(*
p
, *
©å
, 
Àn
, 
Så
 *
vÆue
)

503 
quŸed
;

504 *
q
 = 
NULL
;

506 i‡(
	`°∫ˇ£cmp
(
p
, 
©å
, 
Àn
) == 0) {

507 
p
 +
Àn
;

508 
	`SKIP_BLANKS
(
p
);

509 i‡(
vÆue
) {

510 *
vÆue
 = 
	`Så√w
();

511 i‡(*
p
 == '=') {

512 
p
++;

513 
	`SKIP_BLANKS
(
p
);

514 
quŸed
 = 0;

515 !
	`IS_ENDL
(*
p
Ë&& (
quŸed
 || *p != ';')) {

516 i‡(!
	`IS_SPACE
(*
p
))

517 
q
 = 
p
;

518 i‡(*
p
 == '"')

519 
quŸed
 = (quoted) ? 0 : 1;

521 
	`Såˇt_ch¨
(*
vÆue
, *
p
);

522 
p
++;

524 i‡(
q
)

525 
	`Såshrök
(*
vÆue
, 
p
 - 
q
 - 1);

530 i‡(
	`IS_ENDT
(*
p
)) {

536 
	}
}

538 #ifde‡
USE_IMAGE


539 #ifde‡
USE_XFACE


541 
	$xÁ˚2xpm
(*
xÁ˚
)

543 
Image
 
image
;

544 
ImageCache
 *
ˇche
;

545 
FILE
 *
f
;

546 
°©
 
°
;

548 
	`SKIP_BLANKS
(
xÁ˚
);

549 
image
.
uæ
 = 
xÁ˚
;

550 
image
.
ext
 = ".xpm";

551 
image
.
width
 = 48;

552 
image
.
height
 = 48;

553 
image
.
ˇche
 = 
NULL
;

554 
ˇche
 = 
	`gëImage
(&
image
, 
NULL
, 
IMG_FLAG_AUTO
);

555 i‡(
ˇche
->
lﬂded
 & 
IMG_FLAG_LOADED
 && !
	`°©
(ˇche->
fûe
, &
°
))

556  
ˇche
->
fûe
;

557 
ˇche
->
lﬂded
 = 
IMG_FLAG_ERROR
;

559 
f
 = 
	`p›í
(
	`S¥ötf
("%†> %s", 
	`shñl_quŸe
(
	`auxböFûe
(
XFACE2XPM
)),

560 
	`shñl_quŸe
(
ˇche
->
fûe
))->
±r
, "w");

561 i‡(!
f
)

562  
NULL
;

563 
	`Âuts
(
xÁ˚
, 
f
);

564 
	`p˛o£
(
f
);

565 i‡(
	`°©
(
ˇche
->
fûe
, &
°
Ë|| !°.
°_size
)

566  
NULL
;

567 
ˇche
->
lﬂded
 = 
IMG_FLAG_LOADED
 | 
IMG_FLAG_DONT_REMOVE
;

568 
ˇche
->
ödex
 = 0;

569  
ˇche
->
fûe
;

570 
	}
}

575 
	$ªadHódî
(
URLFûe
 *
uf
, 
Buf„r
 *
√wBuf
, 
thru
, 
P¨£dURL
 *
pu
)

577 *
p
, *
q
;

578 #ifde‡
USE_COOKIE


579 *
emsg
;

581 
c
;

582 
Så
 
löeBuf2
 = 
NULL
;

583 
Så
 
tmp
;

584 
TextLi°
 *
hódîli°
;

585 #ifde‡
USE_M17N


586 
wc_˚s
 
ch¨£t
 = 
WC_CES_US_ASCII
, 
mime_ch¨£t
;

588 *
tmpf
;

589 
FILE
 *
§c
 = 
NULL
;

590 
Löïr›
 *
¥›Buf„r
;

592 
hódîli°
 = 
√wBuf
->
documít_hódî
 = 
	`√wTextLi°
();

593 i‡(
uf
->
scheme
 =
SCM_HTTP


594 #ifde‡
USE_SSL


595 || 
uf
->
scheme
 =
SCM_HTTPS


598 
hâp_ª•⁄£_code
 = -1;

600 
hâp_ª•⁄£_code
 = 0;

602 i‡(
thru
 && !
√wBuf
->
hódî_sour˚


603 #ifde‡
USE_IMAGE


604 && !
image_sour˚


607 
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

608 
§c
 = 
	`f›í
(
tmpf
, "w");

609 i‡(
§c
)

610 
√wBuf
->
hódî_sour˚
 = 
tmpf
;

612 (
tmp
 = 
	`SåmyUFgës
(
uf
))->
Àngth
) {

613 #ifde‡
USE_NNTP


614 i‡(
uf
->
scheme
 =
SCM_NEWS
 && 
tmp
->
±r
[0] == '.')

615 
	`Såshrökfú°
(
tmp
, 1);

617 if(
w3m_ªqlog
){

618 
FILE
 *
ff
;

619 
ff
 = 
	`f›í
(
w3m_ªqlog
, "a");

620 
	`SåÂuts
(
tmp
, 
ff
);

621 
	`f˛o£
(
ff
);

623 i‡(
§c
)

624 
	`SåÂuts
(
tmp
, 
§c
);

625 
	`˛ónup_löe
(
tmp
, 
HEADER_MODE
);

626 i‡(
tmp
->
±r
[0] == '\n' ||Åmp->ptr[0] == '\r' ||Åmp->ptr[0] == '\0') {

627 i‡(!
löeBuf2
)

632 i‡(!(
w3m_dump
 & 
DUMP_HEAD
)) {

633 i‡(
löeBuf2
) {

634 
	`Såˇt
(
löeBuf2
, 
tmp
);

637 
löeBuf2
 = 
tmp
;

639 
c
 = 
	`UFgëc
(
uf
);

640 
	`UFundogëc
(
uf
);

641 i‡(
c
 == ' ' || c == '\t')

644 
löeBuf2
 = 
	`decodeMIME
÷öeBuf2, &
mime_ch¨£t
);

645 
löeBuf2
 = 
	`c⁄vîtLöe
(
NULL
,ÜöeBuf2, 
RAW_MODE
,

646 
mime_ch¨£t
 ? &mime_ch¨£à: &
ch¨£t
,

647 
mime_ch¨£t
 ? mime_charset

648 : 
DocumítCh¨£t
);

650 
tmp
 = 
	`Så√w_size
(
löeBuf2
->
Àngth
);

651 
p
 = 
löeBuf2
->
±r
; *p;Ö = 
q
) {

652 
q
 = 
p
; *q && *q != '\r' && *q != '\n'; q++) ;

653 
löeBuf2
 = 
	`checkTy≥
(
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö), &
¥›Buf„r
,

654 
NULL
);

655 
	`Såˇt
(
tmp
, 
löeBuf2
);

656 i‡(
thru
)

657 
	`add√wlöe
(
√wBuf
, 
löeBuf2
->
±r
, 
¥›Buf„r
, 
NULL
,

658 
löeBuf2
->
Àngth
, 
FOLD_BUFFER_WIDTH
, -1);

659 ; *
q
 && (*q == '\r' || *q == '\n'); q++) ;

661 #ifde‡
USE_IMAGE


662 i‡(
thru
 && 
a˘iveImage
 && 
di•œyImage
) {

663 
Så
 
§c
 = 
NULL
;

664 i‡(!
	`°∫ˇ£cmp
(
tmp
->
±r
, "X-Image-URL:", 12)) {

665 
tmpf
 = &
tmp
->
±r
[12];

666 
	`SKIP_BLANKS
(
tmpf
);

667 
§c
 = 
	`Så√w_m_ch¨p
("<img src=\"", 
	`html_quŸe
(
tmpf
),

668 "\"á…=\"X-Image-URL\">", 
NULL
);

670 #ifde‡
USE_XFACE


671 i‡(!
	`°∫ˇ£cmp
(
tmp
->
±r
, "X-Face:", 7)) {

672 
tmpf
 = 
	`xÁ˚2xpm
(&
tmp
->
±r
[7]);

673 i‡(
tmpf
)

674 
§c
 = 
	`Så√w_m_ch¨p
("<img src=\"file:",

675 
	`html_quŸe
(
tmpf
),

677 " width=48 height=48>", 
NULL
);

680 i‡(
§c
) {

681 
URLFûe
 
f
;

682 
Löe
 *
l
;

683 #ifde‡
USE_M17N


684 
wc_˚s
 
ﬁd_ch¨£t
 = 
√wBuf
->
documít_ch¨£t
;

686 
	`öô_°ªam
(&
f
, 
SCM_LOCAL
, 
	`√wSåSåóm
(
§c
));

687 
	`lﬂdHTML°ªam
(&
f
, 
√wBuf
, 
NULL
, 
TRUE
);

688 
l
 = 
√wBuf
->
œ°Löe
;Ü &&Ü->
ªÆ_löíumbî
;

689 
l
 =Ü->
¥ev
)

690 
l
->
ªÆ_löíumbî
 = 0;

691 #ifde‡
USE_M17N


692 
√wBuf
->
documít_ch¨£t
 = 
ﬁd_ch¨£t
;

697 
löeBuf2
 = 
tmp
;

700 
löeBuf2
 = 
tmp
;

702 i‡((
uf
->
scheme
 =
SCM_HTTP


703 #ifde‡
USE_SSL


704 || 
uf
->
scheme
 =
SCM_HTTPS


706 Ë&& 
hâp_ª•⁄£_code
 == -1) {

707 
p
 = 
löeBuf2
->
±r
;

708 *
p
 && !
	`IS_SPACE
(*p))

709 
p
++;

710 *
p
 && 
	`IS_SPACE
(*p))

711 
p
++;

712 
hâp_ª•⁄£_code
 = 
	`©oi
(
p
);

713 i‡(
fmInôülized
) {

714 
	`mesßge
(
löeBuf2
->
±r
, 0, 0);

715 
	`ª‰esh
();

718 i‡(!
	`°∫ˇ£cmp
(
löeBuf2
->
±r
, "content-transfer-encoding:", 26)) {

719 
p
 = 
löeBuf2
->
±r
 + 26;

720 
	`IS_SPACE
(*
p
))

721 
p
++;

722 i‡(!
	`°∫ˇ£cmp
(
p
, "base64", 6))

723 
uf
->
ícodög
 = 
ENC_BASE64
;

724 i‡(!
	`°∫ˇ£cmp
(
p
, "quoted-printable", 16))

725 
uf
->
ícodög
 = 
ENC_QUOTE
;

726 i‡(!
	`°∫ˇ£cmp
(
p
, "uuencode", 8) ||

727 !
	`°∫ˇ£cmp
(
p
, "x-uuencode", 10))

728 
uf
->
ícodög
 = 
ENC_UUENCODE
;

730 
uf
->
ícodög
 = 
ENC_7BIT
;

732 i‡(!
	`°∫ˇ£cmp
(
löeBuf2
->
±r
, "content-encoding:", 17)) {

733 
com¥essi⁄_decodî
 *
d
;

734 
p
 = 
löeBuf2
->
±r
 + 17;

735 
	`IS_SPACE
(*
p
))

736 
p
++;

737 
uf
->
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

738 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

739 **
e
;

740 
e
 = 
d
->
ícodögs
; *ê!
NULL
;É++) {

741 i‡(
	`°∫ˇ£cmp
(
p
, *
e
, 
	`°æí
(*e)) == 0) {

742 
uf
->
com¥essi⁄
 = 
d
->
ty≥
;

746 i‡(
uf
->
com¥essi⁄
 !
CMP_NOCOMPRESS
)

749 
uf
->
c⁄ã¡_ícodög
 = uf->
com¥essi⁄
;

751 #ifde‡
USE_COOKIE


752 i‡(
u£_cookõ
 && 
ac˚±_cookõ
 &&

753 
pu
 && 
	`check_cookõ_ac˚±_domaö
’u->
ho°
) &&

754 (!
	`°∫ˇ£cmp
(
löeBuf2
->
±r
, "Set-Cookie:", 11) ||

755 !
	`°∫ˇ£cmp
(
löeBuf2
->
±r
, "Set-Cookie2:", 12))) {

756 
Så
 
«me
 = 
	`Så√w
(), 
vÆue
 = Så√w(), 
domaö
 = 
NULL
, 
∑th
 = NULL,

757 
commít
 = 
NULL
, 
commítURL
 = NULL, 
p‹t
 = NULL, 
tmp2
;

758 
vîsi⁄
, 
quŸed
, 
Êag
 = 0;

759 
time_t
 
expúes
 = (time_t) - 1;

761 
q
 = 
NULL
;

762 i‡(
löeBuf2
->
±r
[10] == '2') {

763 
p
 = 
löeBuf2
->
±r
 + 12;

764 
vîsi⁄
 = 1;

767 
p
 = 
löeBuf2
->
±r
 + 11;

768 
vîsi⁄
 = 0;

770 #ifde‡
DEBUG


771 
	`Ârötf
(
°dîr
, "Së-Cookõ: [%s]\n", 
p
);

773 
	`SKIP_BLANKS
(
p
);

774 *
p
 !'=' && !
	`IS_ENDT
(*p))

775 
	`Såˇt_ch¨
(
«me
, *(
p
++));

776 
	`Såªmovëøûög•a˚s
(
«me
);

777 i‡(*
p
 == '=') {

778 
p
++;

779 
	`SKIP_BLANKS
(
p
);

780 
quŸed
 = 0;

781 !
	`IS_ENDL
(*
p
Ë&& (
quŸed
 || *p != ';')) {

782 i‡(!
	`IS_SPACE
(*
p
))

783 
q
 = 
p
;

784 i‡(*
p
 == '"')

785 
quŸed
 = (quoted) ? 0 : 1;

786 
	`Såˇt_ch¨
(
vÆue
, *(
p
++));

788 i‡(
q
)

789 
	`Såshrök
(
vÆue
, 
p
 - 
q
 - 1);

791 *
p
 == ';') {

792 
p
++;

793 
	`SKIP_BLANKS
(
p
);

794 i‡(
	`m©ch©å
(
p
, "expúes", 7, &
tmp2
)) {

796 
expúes
 = 
	`mymktime
(
tmp2
->
±r
);

798 i‡(
	`m©ch©å
(
p
, "max-age", 7, &
tmp2
)) {

800 
expúes
 = 
	`time
(
NULL
Ë+ 
	`©ﬁ
(
tmp2
->
±r
);

802 i‡(
	`m©ch©å
(
p
, "domaö", 6, &
tmp2
)) {

803 
domaö
 = 
tmp2
;

805 i‡(
	`m©ch©å
(
p
, "∑th", 4, &
tmp2
)) {

806 
∑th
 = 
tmp2
;

808 i‡(
	`m©ch©å
(
p
, "£cuª", 6, 
NULL
)) {

809 
Êag
 |
COO_SECURE
;

811 i‡(
	`m©ch©å
(
p
, "commít", 7, &
tmp2
)) {

812 
commít
 = 
tmp2
;

814 i‡(
	`m©ch©å
(
p
, "vîsi⁄", 7, &
tmp2
)) {

815 
vîsi⁄
 = 
	`©oi
(
tmp2
->
±r
);

817 i‡(
	`m©ch©å
(
p
, "p‹t", 4, &
tmp2
)) {

819 
p‹t
 = 
tmp2
;

821 i‡(
	`m©ch©å
(
p
, "commítURL", 10, &
tmp2
)) {

823 
commítURL
 = 
tmp2
;

825 i‡(
	`m©ch©å
(
p
, "disˇrd", 7, 
NULL
)) {

827 
Êag
 |
COO_DISCARD
;

829 
quŸed
 = 0;

830 !
	`IS_ENDL
(*
p
Ë&& (
quŸed
 || *p != ';')) {

831 i‡(*
p
 == '"')

832 
quŸed
 = (quoted) ? 0 : 1;

833 
p
++;

836 i‡(
pu
 && 
«me
->
Àngth
 > 0) {

837 
îr
;

838 i‡(
show_cookõ
) {

839 i‡(
Êag
 & 
COO_SECURE
)

840 
	`di•_mesßge_n£c
("Re˚ivedá secuªd cookõ", 
FALSE
, 1,

841 
TRUE
, 
FALSE
);

843 
	`di•_mesßge_n£c
(
	`S¥ötf
("Received cookie: %s=%s",

844 
«me
->
±r
, 
vÆue
->ptr)->ptr,

845 
FALSE
, 1, 
TRUE
, FALSE);

847 
îr
 =

848 
	`add_cookõ
(
pu
, 
«me
, 
vÆue
, 
expúes
, 
domaö
, 
∑th
, 
Êag
,

849 
commít
, 
vîsi⁄
, 
p‹t
, 
commítURL
);

850 i‡(
îr
) {

851 *
™s
 = (
ac˚±_bad_cookõ
 =
ACCEPT_BAD_COOKIE_ACCEPT
)

852 ? "y" : 
NULL
;

853 i‡(
fmInôülized
 && (
îr
 & 
COO_OVERRIDE_OK
) &&

854 
ac˚±_bad_cookõ
 =
ACCEPT_BAD_COOKIE_ASK
) {

855 
Så
 
msg
 = 
	`S¥ötf
("Accept bad cookie from %s for %s?",

856 
pu
->
ho°
,

857 ((
domaö
 && domaö->
±r
)

858 ? 
domaö
->
±r
 : "<localdomain>"));

859 i‡(
msg
->
Àngth
 > 
COLS
 - 10)

860 
	`Såshrök
(
msg
, msg->
Àngth
 - (
COLS
 - 10));

861 
	`Såˇt_ch¨p
(
msg
, " (y/n)");

862 
™s
 = 
	`öputAnswî
(
msg
->
±r
);

864 i‡(
™s
 =
NULL
 || 
	`TOLOWER
(*ans) != 'y' ||

865 (
îr
 =

866 
	`add_cookõ
(
pu
, 
«me
, 
vÆue
, 
expúes
, 
domaö
, 
∑th
,

867 
Êag
 | 
COO_OVERRIDE
, 
commít
, 
vîsi⁄
,

868 
p‹t
, 
commítURL
))) {

869 
îr
 = (î∏& ~
COO_OVERRIDE_OK
) - 1;

870 i‡(
îr
 >0 &&Éº < 
COO_EMAX
)

871 
emsg
 = 
	`S¥ötf
("This cookie wasÑejected "

873 
viﬁ©i⁄s
[
îr
])->
±r
;

875 
emsg
 =

877 
	`ªc‹d_îr_mesßge
(
emsg
);

878 i‡(
show_cookõ
)

879 
	`di•_mesßge_n£c
(
emsg
, 
FALSE
, 1, 
TRUE
, FALSE);

882 i‡(
show_cookõ
)

883 
	`di•_mesßge_n£c
(
S¥ötf


885 
«me
->
±r
, 
vÆue
->±r)->±r, 
FALSE
,

886 1, 
TRUE
, 
FALSE
);

891 i‡(!
	`°∫ˇ£cmp
(
löeBuf2
->
±r
, "w3m-control:", 12) &&

892 
uf
->
scheme
 =
SCM_LOCAL_CGI
) {

893 
Så
 
fun˙ame
 = 
	`Så√w
();

894 
f
;

896 
p
 = 
löeBuf2
->
±r
 + 12;

897 
	`SKIP_BLANKS
(
p
);

898 *
p
 && !
	`IS_SPACE
(*p))

899 
	`Såˇt_ch¨
(
fun˙ame
, *(
p
++));

900 
	`SKIP_BLANKS
(
p
);

901 
f
 = 
	`gëFuncLi°
(
fun˙ame
->
±r
);

902 i‡(
f
 >= 0) {

903 
tmp
 = 
	`Så√w_ch¨p
(
p
);

904 
	`Såch›
(
tmp
);

905 
	`pushEvít
(
f
, 
tmp
->
±r
);

908 i‡(
hódîli°
)

909 
	`pushText
(
hódîli°
, 
löeBuf2
->
±r
);

910 
	`Så‰ì
(
löeBuf2
);

911 
löeBuf2
 = 
NULL
;

913 i‡(
thru
)

914 
	`add√wlöe
(
√wBuf
, "", 
¥›Buf„r
, 
NULL
, 0, -1, -1);

915 i‡(
§c
)

916 
	`f˛o£
(
§c
);

917 
	}
}

920 
	$checkHódî
(
Buf„r
 *
buf
, *
fõld
)

922 
Àn
;

923 
TextLi°Iãm
 *
i
;

924 *
p
;

926 i‡(
buf
 =
NULL
 || 
fõld
 =NULL || buf->
documít_hódî
 == NULL)

927  
NULL
;

928 
Àn
 = 
	`°æí
(
fõld
);

929 
i
 = 
buf
->
documít_hódî
->
fú°
; i !
NULL
; i = i->
√xt
) {

930 i‡(!
	`°∫ˇ£cmp
(
i
->
±r
, 
fõld
, 
Àn
)) {

931 
p
 = 
i
->
±r
 + 
Àn
;

932  
	`ªmove_•a˚
(
p
);

935  
NULL
;

936 
	}
}

939 
	$checkC⁄ã¡Ty≥
(
Buf„r
 *
buf
)

941 *
p
;

942 
Så
 
r
;

943 
p
 = 
	`checkHódî
(
buf
, "Content-Type:");

944 i‡(
p
 =
NULL
)

945  
NULL
;

946 
r
 = 
	`Så√w
();

947 *
p
 && *∞!';' && !
	`IS_SPACE
(*p))

948 
	`Såˇt_ch¨
(
r
, *
p
++);

949 #ifde‡
USE_M17N


950 i‡((
p
 = 
	`°rˇ£°r
’, "ch¨£t")Ë!
NULL
) {

951 
p
 += 7;

952 
	`SKIP_BLANKS
(
p
);

953 i‡(*
p
 == '=') {

954 
p
++;

955 
	`SKIP_BLANKS
(
p
);

956 i‡(*
p
 == '"')

957 
p
++;

958 
c⁄ã¡_ch¨£t
 = 
	`wc_guess_ch¨£t
(
p
, 0);

962  
r
->
±r
;

963 
	}
}

965 
	sauth_∑øm
 {

966 *
	m«me
;

967 
Så
 
	mvÆ
;

970 
	shâp_auth
 {

971 
	m¥i
;

972 *
	mscheme
;

973 
auth_∑øm
 *
	m∑øm
;

974 
Så
 (*
¸ed
Ë(
hâp_auth
 * 
	mha
, Så 
	mu«me
, Så 
	mpw
, 
P¨£dURL
 *
	mpu
,

975 
HReque°
 *
	mhr
, 
F‹mLi°
 *
	mªque°
);

979 
	mAUTHCHR_NUL
,

980 
	mAUTHCHR_SEP
,

981 
	mAUTHCHR_TOKEN
,

985 
	$skù_auth_tokí
(**
µ
)

987 *
p
;

988 
fú°
 = 
AUTHCHR_NUL
, 
typ
;

990 
p
 = *
µ
 ;; ++p) {

991 *
p
) {

993 
ído·okí
;

995 i‡(()*
p
 > 037) {

996 
typ
 = 
AUTHCHR_TOKEN
;

1018 
typ
 = 
AUTHCHR_SEP
;

1022 i‡(!
fú°
)

1023 
fú°
 = 
typ
;

1024 i‡(
fú°
 !
typ
)

1027 
ído·okí
:

1028 *
µ
 = 
p
;

1029  
fú°
;

1030 
	}
}

1032 
Så


1033 
	$exåa˘_auth_vÆ
(**
q
)

1035 *
qq
 = *(**)
q
;

1036 
quŸed
 = 0;

1037 
Så
 
vÆ
 = 
	`Så√w
();

1039 
	`SKIP_BLANKS
(
qq
);

1040 i‡(*
qq
 == '"') {

1041 
quŸed
 = 
TRUE
;

1042 
	`Såˇt_ch¨
(
vÆ
, *
qq
++);

1044 *
qq
 != '\0') {

1045 i‡(
quŸed
 && *
qq
 == '"') {

1046 
	`Såˇt_ch¨
(
vÆ
, *
qq
++);

1049 i‡(!
quŸed
) {

1050 *
qq
) {

1067 
qq
++;

1069 
íd_tokí
;

1071 i‡(*
qq
 <= 037 || *qq == 0177) {

1072 
qq
++;

1073 
íd_tokí
;

1077 i‡(
quŸed
 && *
qq
 == '\\')

1078 
	`Såˇt_ch¨
(
vÆ
, *
qq
++);

1079 
	`Såˇt_ch¨
(
vÆ
, *
qq
++);

1081 
íd_tokí
:

1082 *
q
 = (*)
qq
;

1083  
vÆ
;

1084 
	}
}

1086 
Så


1087 
	$q°r_unquŸe
(
Så
 
s
)

1089 *
p
;

1091 i‡(
s
 =
NULL
)

1092  
NULL
;

1093 
p
 = 
s
->
±r
;

1094 i‡(*
p
 == '"') {

1095 
Så
 
tmp
 = 
	`Så√w
();

1096 
p
++; *p != '\0';Ö++) {

1097 i‡(*
p
 == '\\')

1098 
p
++;

1099 
	`Såˇt_ch¨
(
tmp
, *
p
);

1101 i‡(
	`Såœ°ch¨
(
tmp
) == '"')

1102 
	`Såshrök
(
tmp
, 1);

1103  
tmp
;

1106  
s
;

1107 
	}
}

1110 
	$exåa˘_auth_∑øm
(*
q
, 
auth_∑øm
 *
auth
)

1112 
auth_∑øm
 *
≠
;

1113 *
p
;

1115 
≠
 = 
auth
;áp->
«me
 !
NULL
;áp++) {

1116 
≠
->
vÆ
 = 
NULL
;

1119 *
q
 != '\0') {

1120 
	`SKIP_BLANKS
(
q
);

1121 
≠
 = 
auth
;áp->
«me
 !
NULL
;áp++) {

1122 
size_t
 
Àn
;

1124 
Àn
 = 
	`°æí
(
≠
->
«me
);

1125 i‡(
	`°∫ˇ£cmp
(
q
, 
≠
->
«me
, 
Àn
) == 0 &&

1126 (
	`IS_SPACE
(
q
[
Àn
]) || q[len] == '=')) {

1127 
p
 = 
q
 + 
Àn
;

1128 
	`SKIP_BLANKS
(
p
);

1129 i‡(*
p
 != '=')

1130  
q
;

1131 
q
 = 
p
 + 1;

1132 
≠
->
vÆ
 = 
	`exåa˘_auth_vÆ
(&
q
);

1136 i‡(
≠
->
«me
 =
NULL
) {

1138 
tokí_ty≥
;

1139 
p
 = 
q
;

1140 i‡((
tokí_ty≥
 = 
	`skù_auth_tokí
(&
q
)Ë=
AUTHCHR_TOKEN
 &&

1141 (
	`IS_SPACE
(*
q
) || *q == '=')) {

1142 
	`SKIP_BLANKS
(
q
);

1143 i‡(*
q
 != '=')

1144  
p
;

1145 
q
++;

1146 
	`exåa˘_auth_vÆ
(&
q
);

1149  
p
;

1151 i‡(*
q
 != '\0') {

1152 
	`SKIP_BLANKS
(
q
);

1153 i‡(*
q
 == ',')

1154 
q
++;

1159  
q
;

1160 
	}
}

1162 
Så


1163 
	$gë_auth_∑øm
(
auth_∑øm
 *
auth
, *
«me
)

1165 
auth_∑øm
 *
≠
;

1166 
≠
 = 
auth
;áp->
«me
 !
NULL
;áp++) {

1167 i‡(
	`°rˇ£cmp
(
«me
, 
≠
->name) == 0)

1168  
≠
->
vÆ
;

1170  
NULL
;

1171 
	}
}

1173 
Så


1174 
	$AuthBasicCªd
(
hâp_auth
 *
ha
, 
Så
 
u«me
, Så 
pw
, 
P¨£dURL
 *
pu
,

1175 
HReque°
 *
hr
, 
F‹mLi°
 *
ªque°
)

1177 
Så
 
s
 = 
	`Sådup
(
u«me
);

1178 
	`Såˇt_ch¨
(
s
, ':');

1179 
	`Såˇt
(
s
, 
pw
);

1180  
	`Så√w_m_ch¨p
("Basi¯", 
	`ícodeB
(
s
->
±r
)->±r, 
NULL
);

1181 
	}
}

1183 #ifde‡
USE_DIGEST_AUTH


1184 
	~<›ís¶/md5.h
>

1211 
Så


1212 
	$dige°_hex
(*
p
)

1214 *
h
 = "0123456789abcdef";

1215 
Så
 
tmp
 = 
	`Så√w_size
(
MD5_DIGEST_LENGTH
 * 2 + 1);

1216 
i
;

1217 
i
 = 0; i < 
MD5_DIGEST_LENGTH
; i++, 
p
++) {

1218 
	`Såˇt_ch¨
(
tmp
, 
h
[(*
p
 >> 4) & 0x0f]);

1219 
	`Såˇt_ch¨
(
tmp
, 
h
[*
p
 & 0x0f]);

1221  
tmp
;

1222 
	}
}

1225 
	mQOP_NONE
,

1226 
	mQOP_AUTH
,

1227 
	mQOP_AUTH_INT
,

1230 
Så


1231 
	$AuthDige°Cªd
(
hâp_auth
 *
ha
, 
Så
 
u«me
, Så 
pw
, 
P¨£dURL
 *
pu
,

1232 
HReque°
 *
hr
, 
F‹mLi°
 *
ªque°
)

1234 
Så
 
tmp
, 
a1buf
, 
a2buf
, 
rd
, 
s
;

1235 
md5
[
MD5_DIGEST_LENGTH
 + 1];

1236 
Så
 
uri
 = 
	`HTTPªque°URI
(
pu
, 
hr
);

1237 
nc
[] = "00000001";

1239 
Så
 
Æg‹ôhm
 = 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
ha
->
∑øm
, "algorithm"));

1240 
Så
 
n⁄˚
 = 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
ha
->
∑øm
, "nonce"));

1241 
Så
 
˙⁄˚
 ;

1243 
Så
 
q›
 = 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
ha
->
∑øm
, "qop"));

1246 
r
[4];

1247 
s
[() * 4];

1248 } 
˙⁄˚_£ed
;

1249 
q›_i
 = 
QOP_NONE
;

1251 
˙⁄˚_£ed
.
r
[0] = 
	`ønd
();

1252 
˙⁄˚_£ed
.
r
[1] = 
	`ønd
();

1253 
˙⁄˚_£ed
.
r
[2] = 
	`ønd
();

1254 
	`MD5
(
˙⁄˚_£ed
.
s
, (˙⁄˚_£ed.s), 
md5
);

1255 
˙⁄˚
 = 
	`dige°_hex
(
md5
);

1256 
˙⁄˚_£ed
.
r
[3]++;

1258 i‡(
q›
) {

1259 *
p
;

1260 
size_t
 
i
;

1262 
p
 = 
q›
->
±r
;

1263 
	`SKIP_BLANKS
(
p
);

1266 i‡((
i
 = 
	`°rc•n
(
p
, " \t,")) > 0) {

1267 i‡(
i
 =("auth-öt"Ë- (""Ë&& !
	`°∫ˇ£cmp
(
p
, "auth-int", i)) {

1268 i‡(
q›_i
 < 
QOP_AUTH_INT
)

1269 
q›_i
 = 
QOP_AUTH_INT
;

1271 i‡(
i
 =("auth"Ë- (""Ë&& !
	`°∫ˇ£cmp
(
p
, "auth", i)) {

1272 i‡(
q›_i
 < 
QOP_AUTH
)

1273 
q›_i
 = 
QOP_AUTH
;

1277 i‡(
p
[
i
]) {

1278 
p
 +
i
 + 1;

1279 
	`SKIP_BLANKS
(
p
);

1287 
tmp
 = 
	`Så√w_m_ch¨p
(
u«me
->
±r
, ":",

1288 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
ha
->
∑øm
, "ªÆm"))->
±r
,

1289 ":", 
pw
->
±r
, 
NULL
);

1290 
	`MD5
(
tmp
->
±r
, 
	`°æí
—mp->±r), 
md5
);

1291 
a1buf
 = 
	`dige°_hex
(
md5
);

1293 i‡(
Æg‹ôhm
) {

1294 i‡(
	`°rˇ£cmp
(
Æg‹ôhm
->
±r
, "MD5-sess") == 0) {

1298 i‡(
n⁄˚
 =
NULL
)

1299  
NULL
;

1300 
tmp
 = 
	`Så√w_m_ch¨p
(
a1buf
->
±r
, ":",

1301 
	`q°r_unquŸe
(
n⁄˚
)->
±r
,

1302 ":", 
	`q°r_unquŸe
(
˙⁄˚
)->
±r
, 
NULL
);

1303 
	`MD5
(
tmp
->
±r
, 
	`°æí
—mp->±r), 
md5
);

1304 
a1buf
 = 
	`dige°_hex
(
md5
);

1306 i‡(
	`°rˇ£cmp
(
Æg‹ôhm
->
±r
, "MD5") == 0)

1311  
NULL
;

1315 
tmp
 = 
	`Så√w_m_ch¨p
(
	`HTTPªque°Mëhod
(
hr
)->
±r
, ":", 
uri
->±r, 
NULL
);

1316 i‡(
q›_i
 =
QOP_AUTH_INT
) {

1318 i‡(
ªque°
 &&Ñeque°->
body
) {

1319 i‡(
ªque°
->
mëhod
 =
FORM_METHOD_POST
 &&Ñeque°->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

1320 
FILE
 *
Â
 = 
	`f›í
(
ªque°
->
body
, "r");

1321 i‡(
Â
 !
NULL
) {

1322 
Så
 
ebody
;

1323 
ebody
 = 
	`SåfgëÆl
(
Â
);

1324 
	`MD5
(
ebody
->
±r
, 
	`°æí
”body->±r), 
md5
);

1327 
	`MD5
("", 0, 
md5
);

1331 
	`MD5
(
ªque°
->
body
,Ñeque°->
Àngth
, 
md5
);

1335 
	`MD5
("", 0, 
md5
);

1337 
	`Såˇt_ch¨
(
tmp
, ':');

1338 
	`Såˇt
(
tmp
, 
	`dige°_hex
(
md5
));

1340 
	`MD5
(
tmp
->
±r
, 
	`°æí
—mp->±r), 
md5
);

1341 
a2buf
 = 
	`dige°_hex
(
md5
);

1343 i‡(
q›_i
 >
QOP_AUTH
) {

1351 i‡(
n⁄˚
 =
NULL
)

1352  
NULL
;

1353 
tmp
 = 
	`Så√w_m_ch¨p
(
a1buf
->
±r
, ":", 
	`q°r_unquŸe
(
n⁄˚
)->ptr,

1354 ":", 
nc
,

1355 ":", 
	`q°r_unquŸe
(
˙⁄˚
)->
±r
,

1356 ":", 
q›_i
 =
QOP_AUTH
 ? "auth" : "auth-int",

1357 ":", 
a2buf
->
±r
, 
NULL
);

1358 
	`MD5
(
tmp
->
±r
, 
	`°æí
—mp->±r), 
md5
);

1359 
rd
 = 
	`dige°_hex
(
md5
);

1365 
tmp
 = 
	`Så√w_m_ch¨p
(
a1buf
->
±r
, ":",

1366 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
ha
->
∑øm
, "nonce"))->

1367 
±r
, ":", 
a2buf
->±r, 
NULL
);

1368 
	`MD5
(
tmp
->
±r
, 
	`°æí
—mp->±r), 
md5
);

1369 
rd
 = 
	`dige°_hex
(
md5
);

1379 
tmp
 = 
	`Så√w_m_ch¨p
("Dige° u£∫ame=\"", 
u«me
->
±r
, "\"", 
NULL
);

1380 
	`Såˇt_m_ch¨p
(
tmp
, ",Ñealm=",

1381 
	`gë_auth_∑øm
(
ha
->
∑øm
, "ªÆm")->
±r
, 
NULL
);

1382 
	`Såˇt_m_ch¨p
(
tmp
, ",Çonce=",

1383 
	`gë_auth_∑øm
(
ha
->
∑øm
, "n⁄˚")->
±r
, 
NULL
);

1384 
	`Såˇt_m_ch¨p
(
tmp
, ", uri=\"", 
uri
->
±r
, "\"", 
NULL
);

1385 
	`Såˇt_m_ch¨p
(
tmp
, ",Ñe•⁄£=\"", 
rd
->
±r
, "\"", 
NULL
);

1387 i‡(
Æg‹ôhm
)

1388 
	`Såˇt_m_ch¨p
(
tmp
, ",álgorithm=",

1389 
	`gë_auth_∑øm
(
ha
->
∑øm
, "Æg‹ôhm")->
±r
, 
NULL
);

1391 i‡(
˙⁄˚
)

1392 
	`Såˇt_m_ch¨p
(
tmp
, ", cn⁄˚=\"", 
˙⁄˚
->
±r
, "\"", 
NULL
);

1394 i‡((
s
 = 
	`gë_auth_∑øm
(
ha
->
∑øm
, "›aque")Ë!
NULL
)

1395 
	`Såˇt_m_ch¨p
(
tmp
, ", o∑que=", 
s
->
±r
, 
NULL
);

1397 i‡(
q›_i
 >
QOP_AUTH
) {

1398 
	`Såˇt_m_ch¨p
(
tmp
, ", qop=",

1399 
q›_i
 =
QOP_AUTH
 ? "auth" : "auth-int",

1400 
NULL
);

1404 
	`Såˇt_m_ch¨p
(
tmp
, ",Çc=", 
nc
, 
NULL
);

1407  
tmp
;

1408 
	}
}

1412 
auth_∑øm
 
	gn⁄e_auth_∑øm
[] = {

1413 {
NULL
, NULL}

1416 
auth_∑øm
 
	gbasic_auth_∑øm
[] = {

1417 {"ªÆm", 
NULL
},

1418 {
NULL
, NULL}

1421 #ifde‡
USE_DIGEST_AUTH


1440 
auth_∑øm
 
	gdige°_auth_∑øm
[] = {

1441 {"ªÆm", 
NULL
},

1442 {"domaö", 
NULL
},

1443 {"n⁄˚", 
NULL
},

1444 {"›aque", 
NULL
},

1445 {"°Æe", 
NULL
},

1446 {"Æg‹ôhm", 
NULL
},

1447 {"q›", 
NULL
},

1448 {
NULL
, NULL}

1452 
hâp_auth
 
	gwww_auth
[] = {

1453 { 1, "Basi¯", 
basic_auth_∑øm
, 
AuthBasicCªd
 },

1454 #ifde‡
USE_DIGEST_AUTH


1455 { 10, "Dige° ", 
dige°_auth_∑øm
, 
AuthDige°Cªd
 },

1457 { 0, 
NULL
, NULL, NULL,}

1461 
hâp_auth
 *

1462 
	$födAuthítiˇti⁄
(
hâp_auth
 *
hauth
, 
Buf„r
 *
buf
, *
auth_fõld
)

1464 
hâp_auth
 *
ha
;

1465 
Àn
 = 
	`°æí
(
auth_fõld
), 
¶í
;

1466 
TextLi°Iãm
 *
i
;

1467 *
p0
, *
p
;

1469 
	`bzîo
(
hauth
, (
hâp_auth
));

1470 
i
 = 
buf
->
documít_hódî
->
fú°
; i !
NULL
; i = i->
√xt
) {

1471 i‡(
	`°∫ˇ£cmp
(
i
->
±r
, 
auth_fõld
, 
Àn
) == 0) {

1472 
p
 = 
i
->
±r
 + 
Àn
;Ö !
NULL
 && *p != '\0';) {

1473 
	`SKIP_BLANKS
(
p
);

1474 
p0
 = 
p
;

1475 
ha
 = &
www_auth
[0]; ha->
scheme
 !
NULL
; ha++) {

1476 
¶í
 = 
	`°æí
(
ha
->
scheme
);

1477 i‡(
	`°∫ˇ£cmp
(
p
, 
ha
->
scheme
, 
¶í
) == 0) {

1478 
p
 +
¶í
;

1479 
	`SKIP_BLANKS
(
p
);

1480 i‡(
hauth
->
¥i
 < 
ha
->pri) {

1481 *
hauth
 = *
ha
;

1482 
p
 = 
	`exåa˘_auth_∑øm
’, 
hauth
->
∑øm
);

1487 
p
 = 
	`exåa˘_auth_∑øm
’, 
n⁄e_auth_∑øm
);

1491 i‡(
p0
 =
p
) {

1493 
tokí_ty≥
;

1494 i‡((
tokí_ty≥
 = 
	`skù_auth_tokí
(&
p
)Ë=
AUTHCHR_TOKEN
 && 
	`IS_SPACE
(*p)) {

1495 
	`SKIP_BLANKS
(
p
);

1496 
p
 = 
	`exåa˘_auth_∑øm
’, 
n⁄e_auth_∑øm
);

1504  
hauth
->
scheme
 ? hauth : 
NULL
;

1505 
	}
}

1508 
	$gëAuthCookõ
(
hâp_auth
 *
hauth
, *
auth_hódî
,

1509 
TextLi°
 *
exåa_hódî
, 
P¨£dURL
 *
pu
, 
HReque°
 *
hr
,

1510 
F‹mLi°
 *
ªque°
,

1511 vﬁ©ûê
Så
 *
u«me
, vﬁ©ûêSå *
pwd
)

1513 
Så
 
ss
 = 
NULL
;

1514 
Så
 
tmp
;

1515 
TextLi°Iãm
 *
i
;

1516 
a_found
;

1517 
auth_hódî_Àn
 = 
	`°æí
(
auth_hódî
);

1518 *
ªÆm
 = 
NULL
;

1519 
¥oxy
;

1521 i‡(
hauth
)

1522 
ªÆm
 = 
	`q°r_unquŸe
(
	`gë_auth_∑øm
(
hauth
->
∑øm
, "ªÆm"))->
±r
;

1524 i‡(!
ªÆm
)

1527 
a_found
 = 
FALSE
;

1528 
i
 = 
exåa_hódî
->
fú°
; i !
NULL
; i = i->
√xt
) {

1529 i‡(!
	`°∫ˇ£cmp
(
i
->
±r
, 
auth_hódî
, 
auth_hódî_Àn
)) {

1530 
a_found
 = 
TRUE
;

1534 
¥oxy
 = !
	`°∫ˇ£cmp
("Proxy-Auth‹iz©i⁄:", 
auth_hódî
,

1535 
auth_hódî_Àn
);

1536 i‡(
a_found
) {

1540 i‡(
fmInôülized
) {

1541 
	`mesßge
("Wrong username orÖassword", 0, 0);

1542 
	`ª‰esh
();

1545 
	`Ârötf
(
°dîr
, "Wrong username orÖassword\n");

1546 
	`¶ìp
(1);

1548 
	`dñText
(
exåa_hódî
, 
i
);

1549 
	`övÆid©e_auth_u£r_∑sswd
(
pu
, 
ªÆm
, *
u«me
, *
pwd
, 
¥oxy
);

1551 *
u«me
 = 
NULL
;

1552 *
pwd
 = 
NULL
;

1554 i‡(!
a_found
 && 
	`föd_auth_u£r_∑sswd
(
pu
, 
ªÆm
, (
Så
*)
u«me
, (Så*)
pwd
,

1555 
¥oxy
)) {

1559 i‡(
QuõtMesßge
)

1562 
	`¶ìp
(2);

1563 i‡(
fmInôülized
) {

1564 *
µ
;

1565 
	`ãrm_øw
();

1567 i‡((
µ
 = 
	`öputSå
(
	`S¥ötf
("U£∫amêf‹ %s: ", 
ªÆm
)->
±r
,

1568 
NULL
)) == NULL)

1570 *
u«me
 = 
	`Så_c⁄v_to_sy°em
(
	`Så√w_ch¨p
(
µ
));

1571 i‡((
µ
 = 
	`öputLöe
(
	`S¥ötf
("Passw‹d f‹ %s: ", 
ªÆm
)->
±r
, 
NULL
,

1572 
IN_PASSWORD
)Ë=
NULL
) {

1573 *
u«me
 = 
NULL
;

1576 *
pwd
 = 
	`Så_c⁄v_to_sy°em
(
	`Så√w_ch¨p
(
µ
));

1577 
	`ãrm_cbªak
();

1587 i‡(
	`„of
(
°dö
Ë|| 
	`„º‹
(stdin)) {

1589 
	`Ârötf
(
°dîr
, "w3m: AuthorizationÑequired for %s\n",

1590 
ªÆm
);

1591 
	`exô
(1);

1595 
	`¥ötf
(
¥oxy
 ? "Proxy Username for %s: " : "Username for %s: ",

1596 
ªÆm
);

1597 
	`fÊush
(
°dout
);

1598 *
u«me
 = 
	`Såfgës
(
°dö
);

1599 
	`Såch›
(*
u«me
);

1600 #ifde‡
HAVE_GETPASSPHRASE


1601 *
pwd
 = 
	`Så√w_ch¨p
((*)

1602 
	`gë∑s•hø£
(
¥oxy
 ? "Proxy Password: " :

1605 #i‚de‡
__MINGW32_VERSION


1606 *
pwd
 = 
	`Så√w_ch¨p
((*)

1607 
	`gë∑ss
(
¥oxy
 ? "Proxy Password: " :

1610 
	`ãrm_øw
();

1611 *
pwd
 = 
	`Så√w_ch¨p
((*)

1612 
	`öputLöe
(
¥oxy
 ? "Proxy Password: " :

1613 "Passw‹d: ", 
NULL
, 
IN_PASSWORD
));

1614 
	`ãrm_cbªak
();

1619 
ss
 = 
hauth
->
	`¸ed
(hauth, *
u«me
, *
pwd
, 
pu
, 
hr
, 
ªque°
);

1620 i‡(
ss
) {

1621 
tmp
 = 
	`Så√w_ch¨p
(
auth_hódî
);

1622 
	`Såˇt_m_ch¨p
(
tmp
, " ", 
ss
->
±r
, "\r\n", 
NULL
);

1623 
	`pushText
(
exåa_hódî
, 
tmp
->
±r
);

1626 *
u«me
 = 
NULL
;

1627 *
pwd
 = 
NULL
;

1630 
	}
}

1633 
	$ßme_uæ_p
(
P¨£dURL
 *
pu1
, P¨£dURL *
pu2
)

1635  (
pu1
->
scheme
 =
pu2
->schemê&&Öu1->
p‹t
 ==Öu2->port &&

1636 (
pu1
->
ho°
 ? 
pu2
->ho° ? !
	`°rˇ£cmp
(pu1->host,Öu2->host) : 0 : 1)

1637 && (
pu1
->
fûe
 ? 
pu2
->

1638 
fûe
 ? !
	`°rcmp
(
pu1
->fûe, 
pu2
->file) : 0 : 1));

1639 
	}
}

1642 
	$checkRedúe˘i⁄
(
P¨£dURL
 *
pu
)

1644 
P¨£dURL
 *
puv
 = 
NULL
;

1645 
ƒedú
 = 0;

1646 
ƒedú_size
 = 0;

1647 
Så
 
tmp
;

1649 i‡(
pu
 =
NULL
) {

1650 
ƒedú
 = 0;

1651 
ƒedú_size
 = 0;

1652 
puv
 = 
NULL
;

1653  
TRUE
;

1655 i‡(
ƒedú
 >
FﬁlowRedúe˘i⁄
) {

1657 
tmp
 = 
	`S¥ötf
("Number ofÑedirectionsÉxceeded %dát %s",

1658 
FﬁlowRedúe˘i⁄
, 
	`∑r£dURL2Så
(
pu
)->
±r
);

1659 
	`di•_îr_mesßge
(
tmp
->
±r
, 
FALSE
);

1660  
FALSE
;

1662 i‡(
ƒedú_size
 > 0 &&

1663 (
	`ßme_uæ_p
(
pu
, &
puv
[(
ƒedú
 - 1Ë% 
ƒedú_size
]) ||

1664 (!(
ƒedú
 % 2)

1665 && 
	`ßme_uæ_p
(
pu
, &
puv
[(
ƒedú
 / 2Ë% 
ƒedú_size
])))) {

1667 
tmp
 = 
	`S¥ötf
("RedirectionÜoop detected (%s)",

1668 
	`∑r£dURL2Så
(
pu
)->
±r
);

1669 
	`di•_îr_mesßge
(
tmp
->
±r
, 
FALSE
);

1670  
FALSE
;

1672 i‡(!
puv
) {

1673 
ƒedú_size
 = 
FﬁlowRedúe˘i⁄
 / 2 + 1;

1674 
puv
 = 
	`New_N
(
P¨£dURL
, 
ƒedú_size
);

1675 
	`mem£t
(
puv
, 0, (
P¨£dURL
Ë* 
ƒedú_size
);

1677 
	`c›yP¨£dURL
(&
puv
[
ƒedú
 % 
ƒedú_size
], 
pu
);

1678 
ƒedú
++;

1679  
TRUE
;

1680 
	}
}

1685 
Buf„r
 *

1686 
	$lﬂdGíîÆFûe
(*
∑th
, 
P¨£dURL
 *vﬁ©ûê
cuºít
, *
ª„ªr
,

1687 
Êag
, 
F‹mLi°
 *vﬁ©ûê
ªque°
)

1689 
URLFûe
 
f
, *vﬁ©ûê
of
 = 
NULL
;

1690 
P¨£dURL
 
pu
;

1691 
Buf„r
 *
b
 = 
NULL
, *(*vﬁ©ûê
¥oc
)(Ë
lﬂdBuf„r
;

1692 *vﬁ©ûê
ç©h
;

1693 *vﬁ©ûê
t
 = "ãxt/∂aö", *
p
, *vﬁ©ûê
ªÆ_ty≥
 = 
NULL
;

1694 
Buf„r
 *vﬁ©ûê
t_buf
 = 
NULL
;

1695 vﬁ©ûê
£¨chHódî
 = 
SórchHódî
;

1696 vﬁ©ûê
£¨chHódî_through
 = 
TRUE
;

1697 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

1698 
TextLi°
 *
exåa_hódî
 = 
	`√wTextLi°
();

1699 vﬁ©ûê
Så
 
u«me
 = 
NULL
;

1700 vﬁ©ûê
Så
 
pwd
 = 
NULL
;

1701 vﬁ©ûê
Så
 
ªÆm
 = 
NULL
;

1702 vﬁ©ûê
add_auth_cookõ_Êag
;

1703 
°©us
 = 
HTST_NORMAL
;

1704 
URLO±i⁄
 
uæ_›ti⁄
;

1705 
Så
 
tmp
;

1706 
Så
 vﬁ©ûê
∑ge
 = 
NULL
;

1707 #ifde‡
USE_M17N


1708 
wc_˚s
 
ch¨£t
 = 
WC_CES_US_ASCII
;

1710 
HReque°
 
hr
;

1711 
P¨£dURL
 *vﬁ©ûê
auth_pu
;

1713 
ç©h
 = 
∑th
;

1714 
¥evå≠
 = 
NULL
;

1715 
add_auth_cookõ_Êag
 = 0;

1717 
	`checkRedúe˘i⁄
(
NULL
);

1718 
lﬂd_doc
:

1719 
TRAP_OFF
;

1720 
uæ_›ti⁄
.
ª„ªr
 =Ñeferer;

1721 
uæ_›ti⁄
.
Êag
 = flag;

1722 
f
 = 
	`›íURL
(
ç©h
, &
pu
, 
cuºít
, &
uæ_›ti⁄
, 
ªque°
, 
exåa_hódî
, 
of
,

1723 &
hr
, &
°©us
);

1724 
of
 = 
NULL
;

1725 #ifde‡
USE_M17N


1726 
c⁄ã¡_ch¨£t
 = 0;

1728 i‡(
f
.
°ªam
 =
NULL
) {

1729 
f
.
scheme
) {

1730 
SCM_LOCAL
:

1732 
°©
 
°
;

1733 i‡(
	`°©
(
pu
.
ªÆ_fûe
, &
°
) < 0)

1734  
NULL
;

1735 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

1736 i‡(
U£Exã∫ÆDúBuf„r
) {

1737 
Så
 
cmd
 = 
	`S¥ötf
("%s?dir=%s#current",

1738 
DúBuf„rComm™d
, 
pu
.
fûe
);

1739 
b
 = 
	`lﬂdGíîÆFûe
(
cmd
->
±r
, 
NULL
, 
NO_REFERER
, 0,

1740 
NULL
);

1741 i‡(
b
 !
NULL
 && b !
NO_BUFFER
) {

1742 
	`c›yP¨£dURL
(&
b
->
cuºítURL
, &
pu
);

1743 
b
->
fûíame
 = b->
cuºítURL
.
ªÆ_fûe
;

1745  
b
;

1748 
∑ge
 = 
	`lﬂdLoˇlDú
(
pu
.
ªÆ_fûe
);

1749 
t
 = "local:directory";

1750 #ifde‡
USE_M17N


1751 
ch¨£t
 = 
Sy°emCh¨£t
;

1757 
SCM_FTPDIR
:

1758 
∑ge
 = 
	`lﬂdFTPDú
(&
pu
, &
ch¨£t
);

1759 
t
 = "ftp:directory";

1761 #ifde‡
USE_NNTP


1762 
SCM_NEWS_GROUP
:

1763 
∑ge
 = 
	`lﬂdNewsgroup
(&
pu
, &
ch¨£t
);

1764 
t
 = "news:group";

1767 
SCM_UNKNOWN
:

1768 #ifde‡
USE_EXTERNAL_URI_LOADER


1769 
tmp
 = 
	`£¨chURIMëhods
(&
pu
);

1770 i‡(
tmp
 !
NULL
) {

1771 
b
 = 
	`lﬂdGíîÆFûe
(
tmp
->
±r
, 
cuºít
, 
ª„ªr
, 
Êag
, 
ªque°
);

1772 i‡(
b
 !
NULL
 && b !
NO_BUFFER
)

1773 
	`c›yP¨£dURL
(&
b
->
cuºítURL
, &
pu
);

1774  
b
;

1778 
	`di•_îr_mesßge
(
	`S¥ötf
("Unknown URI: %s",

1779 
	`∑r£dURL2Så
(&
pu
)->
±r
)->±r, 
FALSE
);

1782 i‡(
∑ge
 &&Öage->
Àngth
 > 0)

1783 
∑ge_lﬂded
;

1784  
NULL
;

1787 i‡(
°©us
 =
HTST_MISSING
) {

1788 
TRAP_OFF
;

1789 
	`UF˛o£
(&
f
);

1790  
NULL
;

1794 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

1796 
TRAP_OFF
;

1797 i‡(
b
)

1798 
	`disˇrdBuf„r
(
b
);

1799 
	`UF˛o£
(&
f
);

1800  
NULL
;

1803 
b
 = 
NULL
;

1804 i‡(
f
.
is_cgi
) {

1806 
£¨chHódî
 = 
TRUE
;

1807 
£¨chHódî_through
 = 
FALSE
;

1809 i‡(
hódî_°rög
)

1810 
hódî_°rög
 = 
NULL
;

1811 
TRAP_ON
;

1812 i‡(
pu
.
scheme
 =
SCM_HTTP
 ||

1813 #ifde‡
USE_SSL


1814 
pu
.
scheme
 =
SCM_HTTPS
 ||

1817 #ifde‡
USE_GOPHER


1818 (
pu
.
scheme
 =
SCM_GOPHER
 && 
	`n⁄_nuŒ
(
GOPHER_¥oxy
)) ||

1820 (
pu
.
scheme
 =
SCM_FTP
 && 
	`n⁄_nuŒ
(
FTP_¥oxy
))

1821 Ë&& !
Do_nŸ_u£_¥oxy
 && !
	`check_no_¥oxy
(
pu
.
ho°
))) {

1823 i‡(
fmInôülized
) {

1824 
	`ãrm_cbªak
();

1826 
	`mesßge
(
	`S¥ötf
("%†c⁄è˘ed. Waôög f‹Ñïly...", 
pu
.
ho°
)->

1827 
±r
, 0, 0);

1828 
	`ª‰esh
();

1830 i‡(
t_buf
 =
NULL
)

1831 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

1833 i‡(
	`ISty≥
(
f
.
°ªam
Ë=
IST_SSL
) {

1834 
Så
 
s
 = 
	`s¶_gë_˚πifiˇã
(
f
.
°ªam
, 
pu
.
ho°
);

1835 i‡(
s
 =
NULL
)

1836  
NULL
;

1838 
t_buf
->
s¶_˚πifiˇã
 = 
s
->
±r
;

1841 
	`ªadHódî
(&
f
, 
t_buf
, 
FALSE
, &
pu
);

1842 i‡(((
hâp_ª•⁄£_code
 >= 301 && http_response_code <= 303)

1843 || 
hâp_ª•⁄£_code
 == 307)

1844 && (
p
 = 
	`checkHódî
(
t_buf
, "Loˇti⁄:")Ë!
NULL


1845 && 
	`checkRedúe˘i⁄
(&
pu
)) {

1851 
ç©h
 = 
	`uæ_quŸe_c⁄v
(
p
, 
DocumítCh¨£t
);

1852 
ªque°
 = 
NULL
;

1853 
	`UF˛o£
(&
f
);

1854 
cuºít
 = 
	`New
(
P¨£dURL
);

1855 
	`c›yP¨£dURL
(
cuºít
, &
pu
);

1856 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

1857 
t_buf
->
buf„Ωr›
 |
BP_REDIRECTED
;

1858 
°©us
 = 
HTST_NORMAL
;

1859 
lﬂd_doc
;

1861 
t
 = 
	`checkC⁄ã¡Ty≥
(
t_buf
);

1862 i‡(
t
 =
NULL
 && 
pu
.
fûe
 != NULL) {

1863 i‡(!((
hâp_ª•⁄£_code
 >= 400 && http_response_code <= 407) ||

1864 (
hâp_ª•⁄£_code
 >= 500 && http_response_code <= 505)))

1865 
t
 = 
	`guessC⁄ã¡Ty≥
(
pu
.
fûe
);

1867 i‡(
t
 =
NULL
)

1868 
t
 = "text/plain";

1869 i‡(
add_auth_cookõ_Êag
 && 
ªÆm
 && 
u«me
 && 
pwd
) {

1871 
	`add_auth_u£r_∑sswd
(&
pu
, 
	`q°r_unquŸe
(
ªÆm
)->
±r
, 
u«me
, 
pwd
,

1873 
add_auth_cookõ_Êag
 = 0;

1875 i‡((
p
 = 
	`checkHódî
(
t_buf
, "WWW-Authítiˇã:")Ë!
NULL
 &&

1876 
hâp_ª•⁄£_code
 == 401) {

1878 
hâp_auth
 
hauth
;

1879 i‡(
	`födAuthítiˇti⁄
(&
hauth
, 
t_buf
, "WWW-Authítiˇã:"Ë!
NULL


1880 && (
ªÆm
 = 
	`gë_auth_∑øm
(
hauth
.
∑øm
, "ªÆm")Ë!
NULL
) {

1881 
auth_pu
 = &
pu
;

1882 
	`gëAuthCookõ
(&
hauth
, "Auth‹iz©i⁄:", 
exåa_hódî
,

1883 
auth_pu
, &
hr
, 
ªque°
, &
u«me
, &
pwd
);

1884 i‡(
u«me
 =
NULL
) {

1886 
TRAP_OFF
;

1887 
∑ge_lﬂded
;

1889 
	`UF˛o£
(&
f
);

1890 
add_auth_cookõ_Êag
 = 1;

1891 
°©us
 = 
HTST_NORMAL
;

1892 
lﬂd_doc
;

1895 i‡((
p
 = 
	`checkHódî
(
t_buf
, "Proxy-Authítiˇã:")Ë!
NULL
 &&

1896 
hâp_ª•⁄£_code
 == 407) {

1898 
hâp_auth
 
hauth
;

1899 i‡(
	`födAuthítiˇti⁄
(&
hauth
, 
t_buf
, "Proxy-Authenticate:")

1900 !
NULL


1901 && (
ªÆm
 = 
	`gë_auth_∑øm
(
hauth
.
∑øm
, "ªÆm")Ë!
NULL
) {

1902 
auth_pu
 = 
	`schemeToProxy
(
pu
.
scheme
);

1903 
	`gëAuthCookõ
(&
hauth
, "Proxy-Authorization:",

1904 
exåa_hódî
, 
auth_pu
, &
hr
, 
ªque°
,

1905 &
u«me
, &
pwd
);

1906 i‡(
u«me
 =
NULL
) {

1908 
TRAP_OFF
;

1909 
∑ge_lﬂded
;

1911 
	`UF˛o£
(&
f
);

1912 
add_auth_cookõ_Êag
 = 1;

1913 
°©us
 = 
HTST_NORMAL
;

1914 
lﬂd_doc
;

1919 i‡(
°©us
 =
HTST_CONNECT
) {

1920 
of
 = &
f
;

1921 
lﬂd_doc
;

1924 
f
.
modtime
 = 
	`mymktime
(
	`checkHódî
(
t_buf
, "Last-Modified:"));

1926 #ifde‡
USE_NNTP


1927 i‡(
pu
.
scheme
 =
SCM_NEWS
 ||Öu.schemê=
SCM_NNTP
) {

1928 i‡(
t_buf
 =
NULL
)

1929 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

1930 
	`ªadHódî
(&
f
, 
t_buf
, 
TRUE
, &
pu
);

1931 
t
 = 
	`checkC⁄ã¡Ty≥
(
t_buf
);

1932 i‡(
t
 =
NULL
)

1933 
t
 = "text/plain";

1936 #ifde‡
USE_GOPHER


1937 i‡(
pu
.
scheme
 =
SCM_GOPHER
) {

1938 *
pu
.
fûe
) {

1940 
t
 = "text/plain";

1944 
∑ge
 = 
	`lﬂdG›hîDú
(&
f
, &
pu
, &
ch¨£t
);

1945 
t
 = "gopher:directory";

1946 
TRAP_OFF
;

1947 
∑ge_lﬂded
;

1949 
t
 = "audio/basic";

1952 
t
 = "image/gif";

1955 
t
 = "text/html";

1960 i‡(
pu
.
scheme
 =
SCM_FTP
) {

1961 
	`check_com¥essi⁄
(
∑th
, &
f
);

1962 i‡(
f
.
com¥essi⁄
 !
CMP_NOCOMPRESS
) {

1963 *
t1
 = 
	`uncom¥es£d_fûe_ty≥
(
pu
.
fûe
, 
NULL
);

1964 
ªÆ_ty≥
 = 
f
.
guess_ty≥
;

1966 i‡(
t1
 && 
	`°∫ˇ£cmp
(t1, "application/", 12) == 0) {

1967 
f
.
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

1968 
t
 = 
ªÆ_ty≥
;

1972 i‡(
t1
)

1973 
t
 = 
t1
;

1975 
t
 = 
ªÆ_ty≥
;

1978 
ªÆ_ty≥
 = 
	`guessC⁄ã¡Ty≥
(
pu
.
fûe
);

1979 i‡(
ªÆ_ty≥
 =
NULL
)

1980 
ªÆ_ty≥
 = "text/plain";

1981 
t
 = 
ªÆ_ty≥
;

1984 i‡(!
	`°∫ˇ£cmp
(
t
, "application/", 12)) {

1985 *
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

1986 
cuºít_c⁄ã¡_Àngth
 = 0;

1987 i‡(
	`ßve2tmp
(
f
, 
tmpf
) < 0)

1988 
	`UF˛o£
(&
f
);

1990 
	`UF˛o£
(&
f
);

1991 
TRAP_OFF
;

1992 
	`doFûeMove
(
tmpf
, 
	`guess_ßve_«me
(
t_buf
, 
pu
.
fûe
));

1994  
NO_BUFFER
;

1998 i‡(
pu
.
scheme
 =
SCM_DATA
) {

1999 
t
 = 
f
.
guess_ty≥
;

2001 i‡(
£¨chHódî
) {

2002 
£¨chHódî
 = 
SórchHódî
 = 
FALSE
;

2003 i‡(
t_buf
 =
NULL
)

2004 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

2005 
	`ªadHódî
(&
f
, 
t_buf
, 
£¨chHódî_through
, &
pu
);

2006 i‡(
f
.
is_cgi
 && (
p
 = 
	`checkHódî
(
t_buf
, "Loˇti⁄:")Ë!
NULL
 &&

2007 
	`checkRedúe˘i⁄
(&
pu
)) {

2009 
ç©h
 = 
	`uæ_quŸe_c⁄v
(
	`ªmove_•a˚
(
p
), 
DocumítCh¨£t
);

2010 
ªque°
 = 
NULL
;

2011 
	`UF˛o£
(&
f
);

2012 
add_auth_cookõ_Êag
 = 0;

2013 
cuºít
 = 
	`New
(
P¨£dURL
);

2014 
	`c›yP¨£dURL
(
cuºít
, &
pu
);

2015 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

2016 
t_buf
->
buf„Ωr›
 |
BP_REDIRECTED
;

2017 
°©us
 = 
HTST_NORMAL
;

2018 
lﬂd_doc
;

2020 #ifde‡
AUTH_DEBUG


2021 i‡((
p
 = 
	`checkHódî
(
t_buf
, "WWW-Authítiˇã:")Ë!
NULL
) {

2023 
hâp_auth
 
hauth
;

2024 i‡(
	`födAuthítiˇti⁄
(&
hauth
, 
t_buf
, "WWW-Authítiˇã:"Ë!
NULL


2025 && (
ªÆm
 = 
	`gë_auth_∑øm
(
hauth
.
∑øm
, "ªÆm")Ë!
NULL
) {

2026 
auth_pu
 = &
pu
;

2027 
	`gëAuthCookõ
(&
hauth
, "Auth‹iz©i⁄:", 
exåa_hódî
,

2028 
auth_pu
, &
hr
, 
ªque°
, &
u«me
, &
pwd
);

2029 i‡(
u«me
 =
NULL
) {

2031 
TRAP_OFF
;

2032 
∑ge_lﬂded
;

2034 
	`UF˛o£
(&
f
);

2035 
add_auth_cookõ_Êag
 = 1;

2036 
°©us
 = 
HTST_NORMAL
;

2037 
lﬂd_doc
;

2041 
t
 = 
	`checkC⁄ã¡Ty≥
(
t_buf
);

2042 i‡(
t
 =
NULL
)

2043 
t
 = "text/plain";

2045 i‡(
DeÁu…Ty≥
) {

2046 
t
 = 
DeÁu…Ty≥
;

2047 
DeÁu…Ty≥
 = 
NULL
;

2050 
t
 = 
	`guessC⁄ã¡Ty≥
(
pu
.
fûe
);

2051 i‡(
t
 =
NULL
)

2052 
t
 = "text/plain";

2053 
ªÆ_ty≥
 = 
t
;

2054 i‡(
f
.
guess_ty≥
)

2055 
t
 = 
f
.
guess_ty≥
;

2058 
∑ge_lﬂded
:

2059 i‡(
∑ge
) {

2060 
FILE
 *
§c
;

2061 #ifde‡
USE_IMAGE


2062 i‡(
image_sour˚
)

2063  
NULL
;

2065 
tmp
 = 
	`tmp‚ame
(
TMPF_SRC
, ".html");

2066 
§c
 = 
	`f›í
(
tmp
->
±r
, "w");

2067 i‡(
§c
) {

2068 
Så
 
s
;

2069 
s
 = 
	`wc_Så_c⁄v_°ri˘
(
∑ge
, 
I¬îCh¨£t
, 
ch¨£t
);

2070 
	`SåÂuts
(
s
, 
§c
);

2071 
	`f˛o£
(
§c
);

2073 i‡(
do_dow∆ﬂd
) {

2074 *
fûe
;

2075 i‡(!
§c
)

2076  
NULL
;

2077 
fûe
 = 
	`guess_fûíame
(
pu
.file);

2078 #ifde‡
USE_GOPHER


2079 i‡(
f
.
scheme
 =
SCM_GOPHER
)

2080 
fûe
 = 
	`S¥ötf
("%s.html", fûe)->
±r
;

2082 #ifde‡
USE_NNTP


2083 i‡(
f
.
scheme
 =
SCM_NEWS_GROUP
)

2084 
fûe
 = 
	`S¥ötf
("%s.html", fûe)->
±r
;

2086 
	`doFûeMove
(
tmp
->
±r
, 
fûe
);

2087  
NO_BUFFER
;

2089 
b
 = 
	`lﬂdHTMLSåög
(
∑ge
);

2090 i‡(
b
) {

2091 
	`c›yP¨£dURL
(&
b
->
cuºítURL
, &
pu
);

2092 
b
->
ªÆ_scheme
 = 
pu
.
scheme
;

2093 
b
->
ªÆ_ty≥
 = 
t
;

2094 i‡(
§c
)

2095 
b
->
sour˚fûe
 = 
tmp
->
±r
;

2096 #ifde‡
USE_M17N


2097 
b
->
documít_ch¨£t
 = 
ch¨£t
;

2100  
b
;

2103 i‡(
ªÆ_ty≥
 =
NULL
)

2104 
ªÆ_ty≥
 = 
t
;

2105 
¥oc
 = 
lﬂdBuf„r
;

2106 #ifde‡
USE_IMAGE


2107 
cur_ba£URL
 = 
	`New
(
P¨£dURL
);

2108 
	`c›yP¨£dURL
(
cur_ba£URL
, &
pu
);

2111 
cuºít_c⁄ã¡_Àngth
 = 0;

2112 i‡((
p
 = 
	`checkHódî
(
t_buf
, "C⁄ã¡-Lígth:")Ë!
NULL
)

2113 
cuºít_c⁄ã¡_Àngth
 = 
	`°πo˛í
(
p
);

2114 i‡(
do_dow∆ﬂd
) {

2116 *
fûe
;

2117 
TRAP_OFF
;

2118 i‡(
DecodeCTE
 && 
	`ISty≥
(
f
.
°ªam
Ë!
IST_ENCODED
)

2119 
f
.
°ªam
 = 
	`√wEncodedSåóm
(f.°ªam, f.
ícodög
);

2120 i‡(
pu
.
scheme
 =
SCM_LOCAL
) {

2121 
°©
 
°
;

2122 i‡(
Pª£rveTime°amp
 && !
	`°©
(
pu
.
ªÆ_fûe
, &
°
))

2123 
f
.
modtime
 = 
°
.
°_mtime
;

2124 
fûe
 = 
	`c⁄v_‰om_sy°em
(
	`guess_ßve_«me
(
NULL
, 
pu
.
ªÆ_fûe
));

2127 
fûe
 = 
	`guess_ßve_«me
(
t_buf
, 
pu
.file);

2128 i‡(
	`doFûeSave
(
f
, 
fûe
) == 0)

2129 
	`UFhÆf˛o£
(&
f
);

2131 
	`UF˛o£
(&
f
);

2132  
NO_BUFFER
;

2135 i‡((
f
.
c⁄ã¡_ícodög
 !
CMP_NOCOMPRESS
Ë&& 
AutoUncom¥ess


2136 && !(
w3m_dump
 & 
DUMP_EXTRA
)) {

2137 
	`uncom¥ess_°ªam
(&
f
, &
pu
.
ªÆ_fûe
);

2139 i‡(
f
.
com¥essi⁄
 !
CMP_NOCOMPRESS
) {

2140 i‡(!(
w3m_dump
 & 
DUMP_SOURCE
) &&

2141 (
w3m_dump
 & ~
DUMP_FRAME
 || 
	`is_ãxt_ty≥
(
t
)

2142 || 
	`£¨chExtVõwî
(
t
))) {

2143 i‡(
t_buf
 =
NULL
)

2144 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

2145 
	`uncom¥ess_°ªam
(&
f
, &
t_buf
->
sour˚fûe
);

2146 
	`uncom¥es£d_fûe_ty≥
(
pu
.
fûe
, &
f
.
ext
);

2149 
t
 = 
	`com¥ess_≠∂iˇti⁄_ty≥
(
f
.
com¥essi⁄
);

2150 
f
.
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

2153 #ifde‡
USE_IMAGE


2154 i‡(
image_sour˚
) {

2155 
Buf„r
 *
b
 = 
NULL
;

2156 i‡(
	`ISty≥
(
f
.
°ªam
Ë!
IST_ENCODED
)

2157 
f
.
°ªam
 = 
	`√wEncodedSåóm
(f.°ªam, f.
ícodög
);

2158 i‡(
	`ßve2tmp
(
f
, 
image_sour˚
) == 0) {

2159 
b
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

2160 
b
->
sour˚fûe
 = 
image_sour˚
;

2161 
b
->
ªÆ_ty≥
 = 
t
;

2163 
	`UF˛o£
(&
f
);

2164 
TRAP_OFF
;

2165  
b
;

2169 i‡(!
	`°rˇ£cmp
(
t
, "text/html"))

2170 
¥oc
 = 
lﬂdHTMLBuf„r
;

2171 i‡(
	`is_∂aö_ãxt_ty≥
(
t
))

2172 
¥oc
 = 
lﬂdBuf„r
;

2173 #ifde‡
USE_IMAGE


2174 i‡(
a˘iveImage
 && 
di•œyImage
 && !
u£ExtImageVõwî
 &&

2175 !(
w3m_dump
 & ~
DUMP_FRAME
Ë&& !
	`°∫ˇ£cmp
(
t
, "image/", 6))

2176 
¥oc
 = 
lﬂdImageBuf„r
;

2178 i‡(
w3m_backíd
) ;

2179 i‡(!(
w3m_dump
 & ~
DUMP_FRAME
Ë|| 
	`is_dump_ãxt_ty≥
(
t
)) {

2180 i‡(!
do_dow∆ﬂd
 && 
	`doExã∫Æ
(
f
,

2181 
pu
.
ªÆ_fûe
 ?Öu.ªÆ_fûê:Öu.
fûe
,

2182 
t
, &
b
, 
t_buf
)) {

2183 i‡(
b
 && b !
NO_BUFFER
) {

2184 
b
->
ªÆ_scheme
 = 
f
.
scheme
;

2185 
b
->
ªÆ_ty≥
 =Ñeal_type;

2186 i‡(
b
->
cuºítURL
.
ho°
 =
NULL
 && b->cuºítURL.
fûe
 == NULL)

2187 
	`c›yP¨£dURL
(&
b
->
cuºítURL
, &
pu
);

2189 
	`UF˛o£
(&
f
);

2190 
TRAP_OFF
;

2191  
b
;

2194 
TRAP_OFF
;

2195 i‡(
pu
.
scheme
 =
SCM_LOCAL
) {

2196 
	`UF˛o£
(&
f
);

2197 
	`_doFûeC›y
(
pu
.
ªÆ_fûe
,

2198 
	`c⁄v_‰om_sy°em
(
guess_ßve_«me


2199 (
NULL
, 
pu
.
ªÆ_fûe
)), 
TRUE
);

2202 i‡(
DecodeCTE
 && 
	`ISty≥
(
f
.
°ªam
Ë!
IST_ENCODED
)

2203 
f
.
°ªam
 = 
	`√wEncodedSåóm
(f.°ªam, f.
ícodög
);

2204 i‡(
	`doFûeSave
(
f
, 
	`guess_ßve_«me
(
t_buf
, 
pu
.
fûe
)) == 0)

2205 
	`UFhÆf˛o£
(&
f
);

2207 
	`UF˛o£
(&
f
);

2209  
NO_BUFFER
;

2212 i‡(
w3m_dump
 & 
DUMP_FRAME
)

2213  
NULL
;

2215 i‡(
Êag
 & 
RG_FRAME
) {

2216 i‡(
t_buf
 =
NULL
)

2217 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

2218 
t_buf
->
buf„Ωr›
 |
BP_FRAME
;

2220 #ifde‡
USE_SSL


2221 i‡(
t_buf
)

2222 
t_buf
->
s¶_˚πifiˇã
 = 
f
.ssl_certificate;

2224 
‰ame_sour˚
 = 
Êag
 & 
RG_FRAME_SRC
;

2225 
b
 = 
	`lﬂdSomëhög
(&
f
, 
pu
.
ªÆ_fûe
 ?Öu.ªÆ_fûê:Öu.
fûe
, 
¥oc
, 
t_buf
);

2226 
	`UF˛o£
(&
f
);

2227 
‰ame_sour˚
 = 0;

2228 i‡(
b
) {

2229 
b
->
ªÆ_scheme
 = 
f
.
scheme
;

2230 
b
->
ªÆ_ty≥
 =Ñeal_type;

2231 i‡(
b
->
cuºítURL
.
ho°
 =
NULL
 && b->cuºítURL.
fûe
 == NULL)

2232 
	`c›yP¨£dURL
(&
b
->
cuºítURL
, &
pu
);

2233 i‡(!
	`°rˇ£cmp
(
t
, "text/html"))

2234 
b
->
ty≥
 = "text/html";

2235 i‡(
w3m_backíd
) {

2236 
Så
 
s
 = 
	`Så√w_ch¨p
(
t
);

2237 
b
->
ty≥
 = 
s
->
±r
;

2239 #ifde‡
USE_IMAGE


2240 i‡(
¥oc
 =
lﬂdImageBuf„r
)

2241 
b
->
ty≥
 = "text/html";

2244 
b
->
ty≥
 = "text/plain";

2245 i‡(
pu
.
œbñ
) {

2246 i‡(
¥oc
 =
lﬂdHTMLBuf„r
) {

2247 
Anch‹
 *
a
;

2248 
a
 = 
	`£¨chURLLabñ
(
b
, 
pu
.
œbñ
);

2249 i‡(
a
 !
NULL
) {

2250 
	`gŸoLöe
(
b
, 
a
->
°¨t
.
löe
);

2251 i‡(
œbñ_t›löe
)

2252 
b
->
t›Löe
 = 
	`löeSkù
(b, b->topLine,

2253 
b
->
cuºítLöe
->
löíumbî


2254 - 
b
->
t›Löe
->
löíumbî
, 
FALSE
);

2255 
b
->
pos
 = 
a
->
°¨t
.pos;

2256 
	`¨øngeCurs‹
(
b
);

2260 
l
 = 
	`©oi
(
pu
.
œbñ
);

2261 
	`gŸoRólLöe
(
b
, 
l
);

2262 
b
->
pos
 = 0;

2263 
	`¨øngeCurs‹
(
b
);

2267 i‡(
hódî_°rög
)

2268 
hódî_°rög
 = 
NULL
;

2269 #ifde‡
USE_NNTP


2270 i‡(
f
.
scheme
 =
SCM_NNTP
 || f.schemê=
SCM_NEWS
)

2271 
	`ªAnch‹Newshódî
(
b
);

2273 
	`¥eF‹mUpd©eBuf„r
(
b
);

2274 
TRAP_OFF
;

2275  
b
;

2276 
	}
}

2278 
	#TAG_IS
(
s
,
èg
,
Àn
)\

2279 (
	`°∫ˇ£cmp
(
s
,
èg
,
Àn
)==0&&(s[Àn] ='>' || 
	`IS_SPACE
(()s[Àn])))

	)

2282 
	$has_hiddí_lök
(
ªadbuf„r
 *
obuf
, 
cmd
)

2284 
Så
 
löe
 = 
obuf
->line;

2285 
lök_°ack
 *
p
;

2287 i‡(
	`Såœ°ch¨
(
löe
) != '>')

2288  
NULL
;

2290 
p
 = 
lök_°ack
;Ö;Ö =Ö->
√xt
)

2291 i‡(
p
->
cmd
 == cmd)

2293 i‡(!
p
)

2294  
NULL
;

2296 i‡(
obuf
->
pos
 =
p
->pos)

2297  
löe
->
±r
 + 
p
->
off£t
;

2299  
NULL
;

2300 
	}
}

2303 
	$push_lök
(
cmd
, 
off£t
, 
pos
)

2305 
lök_°ack
 *
p
;

2306 
p
 = 
	`New
(
lök_°ack
);

2307 
p
->
cmd
 = cmd;

2308 
p
->
off£t
 = offset;

2309 
p
->
pos
 =Öos;

2310 
p
->
√xt
 = 
lök_°ack
;

2311 
lök_°ack
 = 
p
;

2312 
	}
}

2315 
	$is_≥riod_ch¨
(*
ch
)

2317 *
ch
) {

2332 
	}
}

2335 
	$is_begönög_ch¨
(*
ch
)

2337 *
ch
) {

2347 
	}
}

2350 
	$is_w‹d_ch¨
(*
ch
)

2352 
Löïr›
 
˘y≥
 = 
	`gë_m˘y≥
(
ch
);

2354 #ifde‡
USE_M17N


2355 i‡(
˘y≥
 & (
PC_CTRL
 | 
PC_KANJI
 | 
PC_UNKNOWN
))

2357 i‡(
˘y≥
 & (
PC_WCHAR1
 | 
PC_WCHAR2
))

2360 i‡(
˘y≥
 =
PC_CTRL
)

2364 i‡(
	`IS_ALNUM
(*
ch
))

2367 *
ch
) {

2383 #ifde‡
USE_M17N


2384 i‡(*
ch
 =
NBSP_CODE
)

2387 i‡(*
ch
 =
TIMES_CODE
 || *ch =
DIVIDE_CODE
 || *ch =
ANSP_CODE
)

2389 i‡(*
ch
 >
AGRAVE_CODE
 || *ch =
NBSP_CODE
)

2393 
	}
}

2395 #ifde‡
USE_M17N


2397 
	$is_comböög_ch¨
(*
ch
)

2399 
Löïr›
 
˘y≥
 = 
	`gë_m˘y≥
(
ch
);

2401 i‡(
˘y≥
 & 
PC_WCHAR2
)

2404 
	}
}

2408 
	$is_bound¨y
(*
ch1
, *
ch2
)

2410 i‡(!*
ch1
 || !*
ch2
)

2413 i‡(*
ch1
 =' ' && *
ch2
 == ' ')

2416 i‡(*
ch1
 !' ' && 
	`is_≥riod_ch¨
(
ch2
))

2419 i‡(*
ch2
 !' ' && 
	`is_begönög_ch¨
(
ch1
))

2422 #ifde‡
USE_M17N


2423 i‡(
	`is_comböög_ch¨
(
ch2
))

2426 i‡(
	`is_w‹d_ch¨
(
ch1
Ë&& is_w‹d_ch¨(
ch2
))

2430 
	}
}

2434 
	$£t_bªakpoöt
(
ªadbuf„r
 *
obuf
, 
èg_Àngth
)

2436 
obuf
->
bp
.
Àn
 = obuf->
löe
->
Àngth
;

2437 
obuf
->
bp
.
pos
 = obuf->pos;

2438 
obuf
->
bp
.
éí
 = 
èg_Àngth
;

2439 
obuf
->
bp
.
Êag
 = obuf->flag;

2440 #ifde‡
FORMAT_NICE


2441 
obuf
->
bp
.
Êag
 &~
RB_FILL
;

2443 
obuf
->
bp
.
t›_m¨gö
 = obuf->top_margin;

2444 
obuf
->
bp
.
bŸtom_m¨gö
 = obuf->bottom_margin;

2446 i‡(!
obuf
->
bp
.
öô_Êag
)

2449 
	`bc›y
((*)&
obuf
->
™ch‹
, (*)&obuf->
bp
.anchor,

2450 (
obuf
->
™ch‹
));

2451 
obuf
->
bp
.
img_Æt
 = obuf->img_alt;

2452 
obuf
->
bp
.
ö_bﬁd
 = obuf->in_bold;

2453 
obuf
->
bp
.
ö_ôÆic
 = obuf->in_italic;

2454 
obuf
->
bp
.
ö_undî
 = obuf->in_under;

2455 
obuf
->
bp
.
ö_°rike
 = obuf->in_strike;

2456 
obuf
->
bp
.
ö_ös
 = obuf->in_ins;

2457 
obuf
->
bp
.
nobr_Àvñ
 = obuf->nobr_level;

2458 
obuf
->
bp
.
¥ev_˘y≥
 = obuf->prev_ctype;

2459 
obuf
->
bp
.
öô_Êag
 = 0;

2460 
	}
}

2463 
	$back_to_bªakpoöt
(
ªadbuf„r
 *
obuf
)

2465 
obuf
->
Êag
 = obuf->
bp
.flag;

2466 
	`bc›y
((*)&
obuf
->
bp
.
™ch‹
, (*)&obuf->anchor,

2467 (
obuf
->
™ch‹
));

2468 
obuf
->
img_Æt
 = obuf->
bp
.img_alt;

2469 
obuf
->
ö_bﬁd
 = obuf->
bp
.in_bold;

2470 
obuf
->
ö_ôÆic
 = obuf->
bp
.in_italic;

2471 
obuf
->
ö_undî
 = obuf->
bp
.in_under;

2472 
obuf
->
ö_°rike
 = obuf->
bp
.in_strike;

2473 
obuf
->
ö_ös
 = obuf->
bp
.in_ins;

2474 
obuf
->
¥ev_˘y≥
 = obuf->
bp
.prev_ctype;

2475 
obuf
->
pos
 = obuf->
bp
.pos;

2476 
obuf
->
t›_m¨gö
 = obuf->
bp
.top_margin;

2477 
obuf
->
bŸtom_m¨gö
 = obuf->
bp
.bottom_margin;

2478 i‡(
obuf
->
Êag
 & 
RB_NOBR
)

2479 
obuf
->
nobr_Àvñ
 = obuf->
bp
.nobr_level;

2480 
	}
}

2483 
	$≠≥nd_ègs
(
ªadbuf„r
 *
obuf
)

2485 
i
;

2486 
Àn
 = 
obuf
->
löe
->
Àngth
;

2487 
£t_bp
 = 0;

2489 
i
 = 0; i < 
obuf
->
èg_•
; i++) {

2490 
obuf
->
èg_°ack
[
i
]->
cmd
) {

2491 
HTML_A
:

2492 
HTML_IMG_ALT
:

2493 
HTML_B
:

2494 
HTML_U
:

2495 
HTML_I
:

2496 
HTML_S
:

2497 
	`push_lök
(
obuf
->
èg_°ack
[
i
]->
cmd
, obuf->
löe
->
Àngth
, obuf->
pos
);

2500 
	`Såˇt_ch¨p
(
obuf
->
löe
, obuf->
èg_°ack
[
i
]->
cmd«me
);

2501 
obuf
->
èg_°ack
[
i
]->
cmd
) {

2502 
HTML_NOBR
:

2503 i‡(
obuf
->
nobr_Àvñ
 > 1)

2505 
HTML_WBR
:

2506 
£t_bp
 = 1;

2510 
obuf
->
èg_•
 = 0;

2511 i‡(
£t_bp
)

2512 
	`£t_bªakpoöt
(
obuf
, obuf->
löe
->
Àngth
 - 
Àn
);

2513 
	}
}

2516 
	$push_èg
(
ªadbuf„r
 *
obuf
, *
cmd«me
, 
cmd
)

2518 
obuf
->
èg_°ack
[obuf->
èg_•
] = 
	`New
(
cmdèbÀ
);

2519 
obuf
->
èg_°ack
[obuf->
èg_•
]->
cmd«me
 = 
	`ÆlocSå
(cmdname, -1);

2520 
obuf
->
èg_°ack
[obuf->
èg_•
]->
cmd
 = cmd;

2521 
obuf
->
èg_•
++;

2522 i‡(
obuf
->
èg_•
 >
TAG_STACK_SIZE
 || obuf->
Êag
 & (
RB_SPECIAL
 & ~
RB_NOBR
))

2523 
	`≠≥nd_ègs
(
obuf
);

2524 
	}
}

2527 
	$push_nch¨s
(
ªadbuf„r
 *
obuf
, 
width
,

2528 *
°r
, 
Àn
, 
Löïr›
 
mode
)

2530 
	`≠≥nd_ègs
(
obuf
);

2531 
	`Såˇt_ch¨p_n
(
obuf
->
löe
, 
°r
, 
Àn
);

2532 
obuf
->
pos
 +
width
;

2533 i‡(
width
 > 0) {

2534 
	`£t_¥evch¨
(
obuf
->
¥evch¨
, 
°r
, 
Àn
);

2535 
obuf
->
¥ev_˘y≥
 = 
mode
;

2537 
obuf
->
Êag
 |
RB_NFLUSHED
;

2538 
	}
}

2540 
	#push_ch¨p
(
obuf
, 
width
, 
°r
, 
mode
)\

2541 
	`push_nch¨s
(
obuf
, 
width
, 
°r
, 
	`°æí
(°r), 
mode
)

	)

2543 
	#push_°r
(
obuf
, 
width
, 
°r
, 
mode
)\

2544 
	`push_nch¨s
(
obuf
, 
width
, 
°r
->
±r
, så->
Àngth
, 
mode
)

	)

2547 
	$check_bªakpoöt
(
ªadbuf„r
 *
obuf
, 
¥e_mode
, *
ch
)

2549 
éí
, 
Àn
 = 
obuf
->
löe
->
Àngth
;

2551 
	`≠≥nd_ègs
(
obuf
);

2552 i‡(
¥e_mode
)

2554 
éí
 = 
obuf
->
löe
->
Àngth
 - 
Àn
;

2555 i‡(
éí
 > 0

2556 || 
	`is_bound¨y
((*)
obuf
->
¥evch¨
->
±r
,

2557 (*)
ch
))

2558 
	`£t_bªakpoöt
(
obuf
, 
éí
);

2559 
	}
}

2562 
	$push_ch¨
(
ªadbuf„r
 *
obuf
, 
¥e_mode
, 
ch
)

2564 
	`check_bªakpoöt
(
obuf
, 
¥e_mode
, &
ch
);

2565 
	`Såˇt_ch¨
(
obuf
->
löe
, 
ch
);

2566 
obuf
->
pos
++;

2567 
	`£t_¥evch¨
(
obuf
->
¥evch¨
, &
ch
, 1);

2568 i‡(
ch
 != ' ')

2569 
obuf
->
¥ev_˘y≥
 = 
PC_ASCII
;

2570 
obuf
->
Êag
 |
RB_NFLUSHED
;

2571 
	}
}

2573 
	#PUSH
(
c
Ë
	`push_ch¨
(
obuf
, obuf->
Êag
 & 
RB_SPECIAL
, c)

	)

2576 
	$push_•a˚s
(
ªadbuf„r
 *
obuf
, 
¥e_mode
, 
width
)

2578 
i
;

2580 i‡(
width
 <= 0)

2582 
	`check_bªakpoöt
(
obuf
, 
¥e_mode
, " ");

2583 
i
 = 0; i < 
width
; i++)

2584 
	`Såˇt_ch¨
(
obuf
->
löe
, ' ');

2585 
obuf
->
pos
 +
width
;

2586 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

2587 
obuf
->
Êag
 |
RB_NFLUSHED
;

2588 
	}
}

2591 
	$¥oc_mch¨
(
ªadbuf„r
 *
obuf
, 
¥e_mode
,

2592 
width
, **
°r
, 
Löïr›
 
mode
)

2594 
	`check_bªakpoöt
(
obuf
, 
¥e_mode
, *
°r
);

2595 
obuf
->
pos
 +
width
;

2596 
	`Såˇt_ch¨p_n
(
obuf
->
löe
, *
°r
, 
	`gë_m˛í
(*str));

2597 i‡(
width
 > 0) {

2598 
	`£t_¥evch¨
(
obuf
->
¥evch¨
, *
°r
, 1);

2599 i‡(**
°r
 != ' ')

2600 
obuf
->
¥ev_˘y≥
 = 
mode
;

2602 (*
°r
Ë+
	`gë_m˛í
(*str);

2603 
obuf
->
Êag
 |
RB_NFLUSHED
;

2604 
	}
}

2607 
	$push_ªndî_image
(
Så
 
°r
, 
width
, 
limô
,

2608 
html_„ed_ívú⁄
 *
h_ív
)

2610 
ªadbuf„r
 *
obuf
 = 
h_ív
->obuf;

2611 
ödít
 = 
h_ív
->
ívs
[h_ív->
ívc
].indent;

2613 
	`push_•a˚s
(
obuf
, 1, (
limô
 - 
width
) / 2);

2614 
	`push_°r
(
obuf
, 
width
, 
°r
, 
PC_ASCII
);

2615 
	`push_•a˚s
(
obuf
, 1, (
limô
 - 
width
 + 1) / 2);

2616 i‡(
width
 > 0)

2617 
	`Êushlöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

2618 
	}
}

2621 
	$¶›py_∑r£_löe
(**
°r
)

2623 i‡(**
°r
 == '<') {

2624 **
°r
 && **str != '>')

2625 (*
°r
)++;

2626 i‡(**
°r
 == '>')

2627 (*
°r
)++;

2631 **
°r
 && **str != '<')

2632 (*
°r
)++;

2635 
	}
}

2638 
	$∑s°hrough
(
ªadbuf„r
 *
obuf
, *
°r
, 
back
)

2640 
cmd
;

2641 
Så
 
tok
 = 
	`Så√w
();

2642 *
°r_bak
;

2644 i‡(
back
) {

2645 
Så
 
°r_ßve
 = 
	`Så√w_ch¨p
(
°r
);

2646 
	`Såshrök
(
obuf
->
löe
, obuf->löe->
±r
 + obuf->löe->
Àngth
 - 
°r
);

2647 
°r
 = 
°r_ßve
->
±r
;

2649 *
°r
) {

2650 
°r_bak
 = 
°r
;

2651 i‡(
	`¶›py_∑r£_löe
(&
°r
)) {

2652 *
q
 = 
°r_bak
;

2653 
cmd
 = 
	`gëhtmlcmd
(&
q
);

2654 i‡(
back
) {

2655 
lök_°ack
 *
p
;

2656 
p
 = 
lök_°ack
;Ö;Ö =Ö->
√xt
) {

2657 i‡(
p
->
cmd
 == cmd) {

2658 
lök_°ack
 = 
p
->
√xt
;

2662 
back
 = 0;

2665 
	`Såˇt_ch¨p_n
(
tok
, 
°r_bak
, 
°r
 - str_bak);

2666 
	`push_èg
(
obuf
, 
tok
->
±r
, 
cmd
);

2667 
	`Så˛ór
(
tok
);

2671 
	`push_nch¨s
(
obuf
, 0, 
°r_bak
, 
°r
 - så_bak, obuf->
¥ev_˘y≥
);

2674 
	}
}

2678 
	$is_bœnk_löe
(*
löe
, 
ödít
)

2680 
i
, 
is_bœnk
 = 0;

2682 
i
 = 0; i < 
ödít
; i++) {

2683 i‡(
löe
[
i
] == '\0') {

2684 
is_bœnk
 = 1;

2686 i‡(
löe
[
i
] != ' ') {

2690 i‡(
i
 =
ödít
 && 
löe
[i] == '\0')

2691 
is_bœnk
 = 1;

2692  
is_bœnk
;

2693 
	}
}

2697 
	$fûŒöe
(
ªadbuf„r
 *
obuf
, 
ödít
)

2699 
	`push_•a˚s
(
obuf
, 1, 
ödít
 - obuf->
pos
);

2700 
obuf
->
Êag
 &~
RB_NFLUSHED
;

2701 
	}
}

2704 
	$Êushlöe
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
, 
ödít
,

2705 
f‹˚
, 
width
)

2707 
TextLöeLi°
 *
buf
 = 
h_ív
->buf;

2708 
FILE
 *
f
 = 
h_ív
->f;

2709 
Så
 
löe
 = 
obuf
->löe, 
∑ss
 = 
NULL
;

2710 *
hiddí_™ch‹
 = 
NULL
, *
hiddí_img
 = NULL, *
hiddí_bﬁd
 = NULL,

2711 *
hiddí_undî
 = 
NULL
, *
hiddí_ôÆic
 = NULL, *
hiddí_°rike
 = NULL,

2712 *
hiddí_ös
 = 
NULL
, *
hiddí
 = NULL;

2714 #ifde‡
DEBUG


2715 i‡(
w3m_debug
) {

2716 
FILE
 *
df
 = 
	`f›í
("zzzproc1", "a");

2717 
	`Ârötf
(
df
, "Êushlöe(%s,%d,%d,%d)\n", 
obuf
->
löe
->
±r
, 
ödít
, 
f‹˚
,

2718 
width
);

2719 i‡(
buf
) {

2720 
TextLöeLi°Iãm
 *
p
;

2721 
p
 = 
buf
->
fú°
;Ö;Ö =Ö->
√xt
) {

2722 
	`Ârötf
(
df
, "buf=\"%s\"\n", 
p
->
±r
->
löe
->ptr);

2725 
	`f˛o£
(
df
);

2729 i‡(!(
obuf
->
Êag
 & (
RB_SPECIAL
 & ~
RB_NOBR
)Ë&& 
	`Såœ°ch¨
(
löe
) == ' ') {

2730 
	`Såshrök
(
löe
, 1);

2731 
obuf
->
pos
--;

2734 
	`≠≥nd_ègs
(
obuf
);

2736 i‡(
obuf
->
™ch‹
.
uæ
)

2737 
hiddí
 = 
hiddí_™ch‹
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_A
);

2738 i‡(
obuf
->
img_Æt
) {

2739 i‡((
hiddí_img
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_IMG_ALT
)Ë!
NULL
) {

2740 i‡(!
hiddí
 || 
hiddí_img
 < hidden)

2741 
hiddí
 = 
hiddí_img
;

2744 i‡(
obuf
->
ö_bﬁd
) {

2745 i‡((
hiddí_bﬁd
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_B
)Ë!
NULL
) {

2746 i‡(!
hiddí
 || 
hiddí_bﬁd
 < hidden)

2747 
hiddí
 = 
hiddí_bﬁd
;

2750 i‡(
obuf
->
ö_ôÆic
) {

2751 i‡((
hiddí_ôÆic
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_I
)Ë!
NULL
) {

2752 i‡(!
hiddí
 || 
hiddí_ôÆic
 < hidden)

2753 
hiddí
 = 
hiddí_ôÆic
;

2756 i‡(
obuf
->
ö_undî
) {

2757 i‡((
hiddí_undî
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_U
)Ë!
NULL
) {

2758 i‡(!
hiddí
 || 
hiddí_undî
 < hidden)

2759 
hiddí
 = 
hiddí_undî
;

2762 i‡(
obuf
->
ö_°rike
) {

2763 i‡((
hiddí_°rike
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_S
)Ë!
NULL
) {

2764 i‡(!
hiddí
 || 
hiddí_°rike
 < hidden)

2765 
hiddí
 = 
hiddí_°rike
;

2768 i‡(
obuf
->
ö_ös
) {

2769 i‡((
hiddí_ös
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_INS
)Ë!
NULL
) {

2770 i‡(!
hiddí
 || 
hiddí_ös
 < hidden)

2771 
hiddí
 = 
hiddí_ös
;

2774 i‡(
hiddí
) {

2775 
∑ss
 = 
	`Så√w_ch¨p
(
hiddí
);

2776 
	`Såshrök
(
löe
,Üöe->
±r
 +Üöe->
Àngth
 - 
hiddí
);

2779 i‡(!(
obuf
->
Êag
 & (
RB_SPECIAL
 & ~
RB_NOBR
)Ë&& obuf->
pos
 > 
width
) {

2780 *
ç
 = &
löe
->
±r
[
obuf
->
bp
.
Àn
 - obuf->bp.
éí
];

2781 *
ï
 = &
löe
->
±r
[löe->
Àngth
];

2783 i‡(
obuf
->
bp
.
pos
 =obuf->po†&& 
ç
 <
ï
 &&

2784 
ç
 > 
löe
->
±r
 &&Åp[-1] == ' ') {

2785 
	`bc›y
(
ç
,Å∞- 1, 
ï
 -Åp + 1);

2786 
löe
->
Àngth
--;

2787 
obuf
->
pos
--;

2791 i‡(
obuf
->
™ch‹
.
uæ
 && !
hiddí_™ch‹
)

2792 
	`Såˇt_ch¨p
(
löe
, "</a>");

2793 i‡(
obuf
->
img_Æt
 && !
hiddí_img
)

2794 
	`Såˇt_ch¨p
(
löe
, "</img_alt>");

2795 i‡(
obuf
->
ö_bﬁd
 && !
hiddí_bﬁd
)

2796 
	`Såˇt_ch¨p
(
löe
, "</b>");

2797 i‡(
obuf
->
ö_ôÆic
 && !
hiddí_ôÆic
)

2798 
	`Såˇt_ch¨p
(
löe
, "</i>");

2799 i‡(
obuf
->
ö_undî
 && !
hiddí_undî
)

2800 
	`Såˇt_ch¨p
(
löe
, "</u>");

2801 i‡(
obuf
->
ö_°rike
 && !
hiddí_°rike
)

2802 
	`Såˇt_ch¨p
(
löe
, "</s>");

2803 i‡(
obuf
->
ö_ös
 && !
hiddí_ös
)

2804 
	`Såˇt_ch¨p
(
löe
, "</ins>");

2806 i‡(
obuf
->
t›_m¨gö
 > 0) {

2807 
i
;

2808 
html_„ed_ívú⁄
 
h
;

2809 
ªadbuf„r
 
o
;

2810 
ívú⁄mít
 
e
[1];

2812 
	`öô_hív
(&
h
, &
o
, 
e
, 1, 
NULL
, 
width
, 
ödít
);

2813 
o
.
löe
 = 
	`Så√w_size
(
width
 + 20);

2814 
o
.
pos
 = 
obuf
->pos;

2815 
o
.
Êag
 = 
obuf
->flag;

2816 
o
.
t›_m¨gö
 = -1;

2817 
o
.
bŸtom_m¨gö
 = -1;

2818 
	`Såˇt_ch¨p
(
o
.
löe
, "<pre_int>");

2819 
i
 = 0; i < 
o
.
pos
; i++)

2820 
	`Såˇt_ch¨
(
o
.
löe
, ' ');

2821 
	`Såˇt_ch¨p
(
o
.
löe
, "</pre_int>");

2822 
i
 = 0; i < 
obuf
->
t›_m¨gö
; i++)

2823 
	`Êushlöe
(
h_ív
, &
o
, 
ödít
, 
f‹˚
, 
width
);

2826 i‡(
f‹˚
 =1 || 
obuf
->
Êag
 & 
RB_NFLUSHED
) {

2827 
TextLöe
 *
lbuf
 = 
	`√wTextLöe
(
löe
, 
obuf
->
pos
);

2828 i‡(
	`RB_GET_ALIGN
(
obuf
Ë=
RB_CENTER
) {

2829 
	`Æign
(
lbuf
, 
width
, 
ALIGN_CENTER
);

2831 i‡(
	`RB_GET_ALIGN
(
obuf
Ë=
RB_RIGHT
) {

2832 
	`Æign
(
lbuf
, 
width
, 
ALIGN_RIGHT
);

2834 i‡(
	`RB_GET_ALIGN
(
obuf
Ë=
RB_LEFT
 && obuf->
Êag
 & 
RB_INTABLE
) {

2835 
	`Æign
(
lbuf
, 
width
, 
ALIGN_LEFT
);

2837 #ifde‡
FORMAT_NICE


2838 i‡(
obuf
->
Êag
 & 
RB_FILL
) {

2839 *
p
;

2840 
ª°
, 
ºe°
;

2841 
n•a˚
, 
d
, 
i
;

2843 
ª°
 = 
width
 - 
	`gë_Så_°rwidth
(
löe
);

2844 i‡(
ª°
 > 1) {

2845 
n•a˚
 = 0;

2846 
p
 = 
löe
->
±r
 + 
ödít
; *p;Ö++) {

2847 i‡(*
p
 == ' ')

2848 
n•a˚
++;

2850 i‡(
n•a˚
 > 0) {

2851 
ödít_hîe
 = 0;

2852 
d
 = 
ª°
 / 
n•a˚
;

2853 
p
 = 
löe
->
±r
;

2854 
	`IS_SPACE
(*
p
)) {

2855 
p
++;

2856 
ödít_hîe
++;

2858 
ºe°
 = 
ª°
 - 
d
 * 
n•a˚
;

2859 
löe
 = 
	`Så√w_size
(
width
 + 1);

2860 
i
 = 0; i < 
ödít_hîe
; i++)

2861 
	`Såˇt_ch¨
(
löe
, ' ');

2862 ; *
p
;Ö++) {

2863 
	`Såˇt_ch¨
(
löe
, *
p
);

2864 i‡(*
p
 == ' ') {

2865 
i
 = 0; i < 
d
; i++)

2866 
	`Såˇt_ch¨
(
löe
, ' ');

2867 i‡(
ºe°
 > 0) {

2868 
	`Såˇt_ch¨
(
löe
, ' ');

2869 
ºe°
--;

2873 
lbuf
 = 
	`√wTextLöe
(
löe
, 
width
);

2878 #ifde‡
TABLE_DEBUG


2879 i‡(
w3m_debug
) {

2880 
FILE
 *
f
 = 
	`f›í
("zzzproc1", "a");

2881 
	`Ârötf
(
f
, "pos=%d,%d, maxlimit=%d\n",

2882 
	`visibÀ_Àngth
(
lbuf
->
löe
->
±r
),Übuf->
pos
,

2883 
h_ív
->
maxlimô
);

2884 
	`f˛o£
(
f
);

2887 i‡(
lbuf
->
pos
 > 
h_ív
->
maxlimô
)

2888 
h_ív
->
maxlimô
 = 
lbuf
->
pos
;

2889 i‡(
buf
)

2890 
	`pushTextLöe
(
buf
, 
lbuf
);

2891 i‡(
f
) {

2892 
	`SåÂuts
(
	`Så_c⁄v_to_hÆfdump
(
lbuf
->
löe
), 
f
);

2893 
	`Âutc
('\n', 
f
);

2895 i‡(
obuf
->
Êag
 & 
RB_SPECIAL
 || obuf->Êag & 
RB_NFLUSHED
)

2896 
h_ív
->
bœnk_löes
 = 0;

2898 
h_ív
->
bœnk_löes
++;

2901 *
p
 = 
löe
->
±r
, *
q
;

2902 
Så
 
tmp
 = 
	`Så√w
(), 
tmp2
 = Strnew();

2904 
	#APPEND
(
°r
) \

2905 i‡(
buf
) \

2906 
	`≠≥ndTextLöe
(
buf
,(
°r
),0); \

2907 i‡(
f
) \

2908 
	`SåÂuts
((
°r
),
f
)

	)

2910 *
p
) {

2911 
q
 = 
p
;

2912 i‡(
	`¶›py_∑r£_löe
(&
p
)) {

2913 
	`Såˇt_ch¨p_n
(
tmp
, 
q
, 
p
 - q);

2914 i‡(
f‹˚
 == 2) {

2915 
	`APPEND
(
tmp
);

2918 
	`Såˇt
(
tmp2
, 
tmp
);

2919 
	`Så˛ór
(
tmp
);

2922 i‡(
f‹˚
 == 2) {

2923 i‡(
∑ss
) {

2924 
	`APPEND
(
∑ss
);

2926 
∑ss
 = 
NULL
;

2929 i‡(
∑ss
)

2930 
	`Såˇt
(
tmp2
, 
∑ss
);

2931 
∑ss
 = 
tmp2
;

2935 i‡(
obuf
->
bŸtom_m¨gö
 > 0) {

2936 
i
;

2937 
html_„ed_ívú⁄
 
h
;

2938 
ªadbuf„r
 
o
;

2939 
ívú⁄mít
 
e
[1];

2941 
	`öô_hív
(&
h
, &
o
, 
e
, 1, 
NULL
, 
width
, 
ödít
);

2942 
o
.
löe
 = 
	`Så√w_size
(
width
 + 20);

2943 
o
.
pos
 = 
obuf
->pos;

2944 
o
.
Êag
 = 
obuf
->flag;

2945 
o
.
t›_m¨gö
 = -1;

2946 
o
.
bŸtom_m¨gö
 = -1;

2947 
	`Såˇt_ch¨p
(
o
.
löe
, "<pre_int>");

2948 
i
 = 0; i < 
o
.
pos
; i++)

2949 
	`Såˇt_ch¨
(
o
.
löe
, ' ');

2950 
	`Såˇt_ch¨p
(
o
.
löe
, "</pre_int>");

2951 
i
 = 0; i < 
obuf
->
bŸtom_m¨gö
; i++)

2952 
	`Êushlöe
(
h_ív
, &
o
, 
ödít
, 
f‹˚
, 
width
);

2954 i‡(
obuf
->
t›_m¨gö
 < 0 || obuf->
bŸtom_m¨gö
 < 0)

2957 
obuf
->
löe
 = 
	`Så√w_size
(256);

2958 
obuf
->
pos
 = 0;

2959 
obuf
->
t›_m¨gö
 = 0;

2960 
obuf
->
bŸtom_m¨gö
 = 0;

2961 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

2962 
obuf
->
bp
.
öô_Êag
 = 1;

2963 
obuf
->
Êag
 &~
RB_NFLUSHED
;

2964 
	`£t_bªakpoöt
(
obuf
, 0);

2965 
obuf
->
¥ev_˘y≥
 = 
PC_ASCII
;

2966 
lök_°ack
 = 
NULL
;

2967 
	`fûŒöe
(
obuf
, 
ödít
);

2968 i‡(
∑ss
)

2969 
	`∑s°hrough
(
obuf
, 
∑ss
->
±r
, 0);

2970 i‡(!
hiddí_™ch‹
 && 
obuf
->
™ch‹
.
uæ
) {

2971 
Så
 
tmp
;

2972 i‡(
obuf
->
™ch‹
.
h£q
 > 0)

2973 
obuf
->
™ch‹
.
h£q
 = -obuf->anchor.hseq;

2974 
tmp
 = 
	`S¥ötf
("<A HSEQ=\"%d\" HREF=\"", 
obuf
->
™ch‹
.
h£q
);

2975 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
obuf
->
™ch‹
.
uæ
));

2976 i‡(
obuf
->
™ch‹
.
èrgë
) {

2977 
	`Såˇt_ch¨p
(
tmp
, "\" TARGET=\"");

2978 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
obuf
->
™ch‹
.
èrgë
));

2980 i‡(
obuf
->
™ch‹
.
ª„ªr
) {

2981 
	`Såˇt_ch¨p
(
tmp
, "\" REFERER=\"");

2982 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
obuf
->
™ch‹
.
ª„ªr
));

2984 i‡(
obuf
->
™ch‹
.
tôÀ
) {

2985 
	`Såˇt_ch¨p
(
tmp
, "\" TITLE=\"");

2986 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
obuf
->
™ch‹
.
tôÀ
));

2988 i‡(
obuf
->
™ch‹
.
ac˚sskey
) {

2989 *
c
 = 
	`html_quŸe_ch¨
(
obuf
->
™ch‹
.
ac˚sskey
);

2990 
	`Såˇt_ch¨p
(
tmp
, "\" ACCESSKEY=\"");

2991 i‡(
c
)

2992 
	`Såˇt_ch¨p
(
tmp
, 
c
);

2994 
	`Såˇt_ch¨
(
tmp
, 
obuf
->
™ch‹
.
ac˚sskey
);

2996 
	`Såˇt_ch¨p
(
tmp
, "\">");

2997 
	`push_èg
(
obuf
, 
tmp
->
±r
, 
HTML_A
);

2999 i‡(!
hiddí_img
 && 
obuf
->
img_Æt
) {

3000 
Så
 
tmp
 = 
	`Så√w_ch¨p
("<IMG_ALT SRC=\"");

3001 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
obuf
->
img_Æt
->
±r
));

3002 
	`Såˇt_ch¨p
(
tmp
, "\">");

3003 
	`push_èg
(
obuf
, 
tmp
->
±r
, 
HTML_IMG_ALT
);

3005 i‡(!
hiddí_bﬁd
 && 
obuf
->
ö_bﬁd
)

3006 
	`push_èg
(
obuf
, "<B>", 
HTML_B
);

3007 i‡(!
hiddí_ôÆic
 && 
obuf
->
ö_ôÆic
)

3008 
	`push_èg
(
obuf
, "<I>", 
HTML_I
);

3009 i‡(!
hiddí_undî
 && 
obuf
->
ö_undî
)

3010 
	`push_èg
(
obuf
, "<U>", 
HTML_U
);

3011 i‡(!
hiddí_°rike
 && 
obuf
->
ö_°rike
)

3012 
	`push_èg
(
obuf
, "<S>", 
HTML_S
);

3013 i‡(!
hiddí_ös
 && 
obuf
->
ö_ös
)

3014 
	`push_èg
(
obuf
, "<INS>", 
HTML_INS
);

3015 
	}
}

3018 
	$do_bœnklöe
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
,

3019 
ödít
, 
ödít_ö¸
, 
width
)

3021 i‡(
h_ív
->
bœnk_löes
 == 0)

3022 
	`Êushlöe
(
h_ív
, 
obuf
, 
ödít
, 1, 
width
);

3023 
	}
}

3026 
	$purgñöe
(
html_„ed_ívú⁄
 *
h_ív
)

3028 *
p
, *
q
;

3029 
Så
 
tmp
;

3031 i‡(
h_ív
->
buf
 =
NULL
 || h_ív->
bœnk_löes
 == 0)

3034 
p
 = 
	`Ω›TextLöe
(
h_ív
->
buf
)->
löe
->
±r
;

3035 
tmp
 = 
	`Så√w
();

3036 *
p
) {

3037 
q
 = 
p
;

3038 i‡(
	`¶›py_∑r£_löe
(&
p
)) {

3039 
	`Såˇt_ch¨p_n
(
tmp
, 
q
, 
p
 - q);

3042 
	`≠≥ndTextLöe
(
h_ív
->
buf
, 
tmp
, 0);

3043 
h_ív
->
bœnk_löes
--;

3044 
	}
}

3047 
	$˛o£_ef„˘0
(
ªadbuf„r
 *
obuf
, 
cmd
)

3049 
i
;

3050 *
p
;

3052 
i
 = 
obuf
->
èg_•
 - 1; i >= 0; i--) {

3053 i‡(
obuf
->
èg_°ack
[
i
]->
cmd
 == cmd)

3056 i‡(
i
 >= 0) {

3057 
obuf
->
èg_•
--;

3058 
	`bc›y
(&
obuf
->
èg_°ack
[
i
 + 1], &obuf->tag_stack[i],

3059 (
obuf
->
èg_•
 - 
i
Ë* (
cmdèbÀ
 *));

3062 i‡((
p
 = 
	`has_hiddí_lök
(
obuf
, 
cmd
)Ë!
NULL
) {

3063 
	`∑s°hrough
(
obuf
, 
p
, 1);

3067 
	}
}

3070 
	$˛o£_™ch‹
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
)

3072 i‡(
obuf
->
™ch‹
.
uæ
) {

3073 
i
;

3074 *
p
 = 
NULL
;

3075 
is_îa£d
 = 0;

3077 
i
 = 
obuf
->
èg_•
 - 1; i >= 0; i--) {

3078 i‡(
obuf
->
èg_°ack
[
i
]->
cmd
 =
HTML_A
)

3081 i‡(
i
 < 0 && 
obuf
->
™ch‹
.
h£q
 > 0 && 
	`Såœ°ch¨
(obuf->
löe
) == ' ') {

3082 
	`Såshrök
(
obuf
->
löe
, 1);

3083 
obuf
->
pos
--;

3084 
is_îa£d
 = 1;

3087 i‡(
i
 >0 || (
p
 = 
	`has_hiddí_lök
(
obuf
, 
HTML_A
))) {

3088 i‡(
obuf
->
™ch‹
.
h£q
 > 0) {

3089 
	`HTMLlöïroc1
(
ANSP
, 
h_ív
);

3090 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

3093 i‡(
i
 >= 0) {

3094 
obuf
->
èg_•
--;

3095 
	`bc›y
(&
obuf
->
èg_°ack
[
i
 + 1], &obuf->tag_stack[i],

3096 (
obuf
->
èg_•
 - 
i
Ë* (
cmdèbÀ
 *));

3099 
	`∑s°hrough
(
obuf
, 
p
, 1);

3101 
	`bzîo
((*)&
obuf
->
™ch‹
, (obuf->anchor));

3104 
is_îa£d
 = 0;

3106 i‡(
is_îa£d
) {

3107 
	`Såˇt_ch¨
(
obuf
->
löe
, ' ');

3108 
obuf
->
pos
++;

3111 
	`push_èg
(
obuf
, "</a>", 
HTML_N_A
);

3113 
	`bzîo
((*)&
obuf
->
™ch‹
, (obuf->anchor));

3114 
	}
}

3117 
	$ßve_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
)

3119 i‡(
obuf
->
f⁄t°©_•
 < 
FONT_STACK_SIZE
)

3120 
	`bc›y
(
obuf
->
f⁄t°©
, obuf->
f⁄t°©_°ack
[obuf->
f⁄t°©_•
],

3121 
FONTSTAT_SIZE
);

3122 
obuf
->
f⁄t°©_•
++;

3123 i‡(
obuf
->
ö_bﬁd
)

3124 
	`push_èg
(
obuf
, "</b>", 
HTML_N_B
);

3125 i‡(
obuf
->
ö_ôÆic
)

3126 
	`push_èg
(
obuf
, "</i>", 
HTML_N_I
);

3127 i‡(
obuf
->
ö_undî
)

3128 
	`push_èg
(
obuf
, "</u>", 
HTML_N_U
);

3129 i‡(
obuf
->
ö_°rike
)

3130 
	`push_èg
(
obuf
, "</s>", 
HTML_N_S
);

3131 i‡(
obuf
->
ö_ös
)

3132 
	`push_èg
(
obuf
, "</ös>", 
HTML_N_INS
);

3133 
	`bzîo
(
obuf
->
f⁄t°©
, 
FONTSTAT_SIZE
);

3134 
	}
}

3137 
	$ª°‹e_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
)

3139 i‡(
obuf
->
f⁄t°©_•
 > 0)

3140 
obuf
->
f⁄t°©_•
--;

3141 i‡(
obuf
->
f⁄t°©_•
 < 
FONT_STACK_SIZE
)

3142 
	`bc›y
(
obuf
->
f⁄t°©_°ack
[obuf->
f⁄t°©_•
], obuf->
f⁄t°©
,

3143 
FONTSTAT_SIZE
);

3144 i‡(
obuf
->
ö_bﬁd
)

3145 
	`push_èg
(
obuf
, "<b>", 
HTML_B
);

3146 i‡(
obuf
->
ö_ôÆic
)

3147 
	`push_èg
(
obuf
, "<i>", 
HTML_I
);

3148 i‡(
obuf
->
ö_undî
)

3149 
	`push_èg
(
obuf
, "<u>", 
HTML_U
);

3150 i‡(
obuf
->
ö_°rike
)

3151 
	`push_èg
(
obuf
, "<s>", 
HTML_S
);

3152 i‡(
obuf
->
ö_ös
)

3153 
	`push_èg
(
obuf
, "<ös>", 
HTML_INS
);

3154 
	}
}

3156 
Så


3157 
	$¥o˚ss_tôÀ
(
∑r£d_èg
 *
èg
)

3159 
cur_tôÀ
 = 
	`Så√w
();

3160  
NULL
;

3161 
	}
}

3163 
Så


3164 
	$¥o˚ss_n_tôÀ
(
∑r£d_èg
 *
èg
)

3166 
Så
 
tmp
;

3168 i‡(!
cur_tôÀ
)

3169  
NULL
;

3170 
	`Såªmovefú°•a˚s
(
cur_tôÀ
);

3171 
	`Såªmovëøûög•a˚s
(
cur_tôÀ
);

3172 
tmp
 = 
	`Så√w_m_ch¨p
("<title_altÅitle=\"",

3173 
	`html_quŸe
(
cur_tôÀ
->
±r
), "\">", 
NULL
);

3174 
cur_tôÀ
 = 
NULL
;

3175  
tmp
;

3176 
	}
}

3179 
	$„ed_tôÀ
(*
°r
)

3181 i‡(!
cur_tôÀ
)

3183 *
°r
) {

3184 i‡(*
°r
 == '&')

3185 
	`Såˇt_ch¨p
(
cur_tôÀ
, 
	`gëesˇ≥cmd
(&
°r
));

3186 i‡(*
°r
 == '\n' || *str == '\r') {

3187 
	`Såˇt_ch¨
(
cur_tôÀ
, ' ');

3188 
°r
++;

3191 
	`Såˇt_ch¨
(
cur_tôÀ
, *(
°r
++));

3193 
	}
}

3195 
Så


3196 
	$¥o˚ss_img
(
∑r£d_èg
 *
èg
, 
width
)

3198 *
p
, *
q
, *
r
, *
r2
 = 
NULL
, *
s
, *
t
;

3199 #ifde‡
USE_IMAGE


3200 
w
, 
i
, 
nw
, 
ni
 = 1, 
n
, 
w0
 = -1, 
i0
 = -1;

3201 
Æign
, 
xoff£t
, 
yoff£t
, 
t›
, 
bŸtom
, 
ism≠
 = 0;

3202 
u£_image
 = 
a˘iveImage
 && 
di•œyImage
;

3204 
w
, 
i
, 
nw
, 
n
;

3206 
¥e_öt
 = 
FALSE
, 
ext_¥e_öt
 = FALSE;

3207 
Så
 
tmp
 = 
	`Så√w
();

3209 i‡(!
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
))

3210  
tmp
;

3211 
p
 = 
	`ªmove_•a˚
(p);

3212 
q
 = 
NULL
;

3213 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALT
, &
q
);

3214 
t
 = 
q
;

3215 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
t
);

3216 
w
 = -1;

3217 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
w
)) {

3218 i‡(
w
 < 0) {

3219 i‡(
width
 > 0)

3220 
w
 = ()(-
width
 * 
pixñ_≥r_ch¨
 * w / 100 + 0.5);

3222 
w
 = -1;

3224 #ifde‡
USE_IMAGE


3225 i‡(
u£_image
) {

3226 i‡(
w
 > 0) {

3227 
w
 = ()(w * 
image_sˇÀ
 / 100 + 0.5);

3228 i‡(
w
 == 0)

3229 
w
 = 1;

3230 i‡(
w
 > 
MAX_IMAGE_SIZE
)

3231 
w
 = 
MAX_IMAGE_SIZE
;

3236 #ifde‡
USE_IMAGE


3237 i‡(
u£_image
) {

3238 
i
 = -1;

3239 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HEIGHT
, &
i
)) {

3240 i‡(
i
 > 0) {

3241 
i
 = ()(ò* 
image_sˇÀ
 / 100 + 0.5);

3242 i‡(
i
 == 0)

3243 
i
 = 1;

3244 i‡(
i
 > 
MAX_IMAGE_SIZE
)

3245 
i
 = 
MAX_IMAGE_SIZE
;

3248 
i
 = -1;

3251 
Æign
 = -1;

3252 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALIGN
, &
Æign
);

3253 
ism≠
 = 0;

3254 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_ISMAP
))

3255 
ism≠
 = 1;

3259 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HEIGHT
, &
i
);

3260 
r
 = 
NULL
;

3261 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_USEMAP
, &
r
);

3262 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_PRE_INT
))

3263 
ext_¥e_öt
 = 
TRUE
;

3265 
tmp
 = 
	`Så√w_size
(128);

3266 #ifde‡
USE_IMAGE


3267 i‡(
u£_image
) {

3268 
Æign
) {

3269 
ALIGN_LEFT
:

3270 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=left>");

3272 
ALIGN_CENTER
:

3273 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=center>");

3275 
ALIGN_RIGHT
:

3276 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=right>");

3281 i‡(
r
) {

3282 
Så
 
tmp2
;

3283 
r2
 = 
	`°rchr
(
r
, '#');

3284 
s
 = "<form_int method=internaláction=map>";

3285 
tmp2
 = 
	`¥o˚ss_f‹m
(
	`∑r£_èg
(&
s
, 
TRUE
));

3286 i‡(
tmp2
)

3287 
	`Såˇt
(
tmp
, 
tmp2
);

3288 
	`Såˇt
(
tmp
, 
	`S¥ötf
("<input_alt fid=\"%d\" "

3289 "ty≥=hiddíÇameˆök vÆue=\"", 
cur_f‹m_id
));

3290 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
((
r2
Ë?Ñ2 + 1 : 
r
));

3291 
	`Såˇt
(
tmp
, 
	`S¥ötf
("\"><input_alt hseq=\"%d\" fid=\"%d\" "

3293 
cur_h£q
++, 
cur_f‹m_id
));

3295 #ifde‡
USE_IMAGE


3296 i‡(
u£_image
) {

3297 
w0
 = 
w
;

3298 
i0
 = 
i
;

3299 i‡(
w
 < 0 || 
i
 < 0) {

3300 
Image
 
image
;

3301 
P¨£dURL
 
u
;

3303 #ifde‡
USE_M17N


3304 
	`∑r£URL2
(
	`wc_c⁄v
(
p
, 
I¬îCh¨£t
, 
cur_documít_ch¨£t
)->
±r
, &
u
,

3305 
cur_ba£URL
);

3307 
	`∑r£URL2
(
p
, &
u
, 
cur_ba£URL
);

3309 
image
.
uæ
 = 
	`∑r£dURL2Så
(&
u
)->
±r
;

3310 i‡(!
	`uncom¥es£d_fûe_ty≥
(
u
.
fûe
, &
image
.
ext
))

3311 
image
.
ext
 = 
	`fûíame_exãnsi⁄
(
u
.
fûe
, 
TRUE
);

3312 
image
.
ˇche
 = 
NULL
;

3313 
image
.
width
 = 
w
;

3314 
image
.
height
 = 
i
;

3316 
image
.
ˇche
 = 
	`gëImage
(&image, 
cur_ba£URL
, 
IMG_FLAG_SKIP
);

3317 i‡(
image
.
ˇche
 && image.ˇche->
width
 > 0 &&

3318 
image
.
ˇche
->
height
 > 0) {

3319 
w
 = 
w0
 = 
image
.
ˇche
->
width
;

3320 
i
 = 
i0
 = 
image
.
ˇche
->
height
;

3322 i‡(
w
 < 0)

3323 
w
 = 8 * 
pixñ_≥r_ch¨
;

3324 i‡(
i
 < 0)

3325 
i
 = 
pixñ_≥r_löe
;

3327 
nw
 = (
w
 > 3Ë? ()((w - 3Ë/ 
pixñ_≥r_ch¨
 + 1) : 1;

3328 
ni
 = (
i
 > 3Ë? ()((ò- 3Ë/ 
pixñ_≥r_löe
 + 1) : 1;

3329 
	`Såˇt
(
tmp
,

3330 
	`S¥ötf
("<¥e_öt><img_Æàh£q=\"%d\" src=\"", 
cur_i£q
++));

3331 
¥e_öt
 = 
TRUE
;

3336 i‡(
w
 < 0)

3337 
w
 = 12 * 
pixñ_≥r_ch¨
;

3338 
nw
 = 
w
 ? ()((w - 1Ë/ 
pixñ_≥r_ch¨
 + 1) : 1;

3339 i‡(
r
) {

3340 
	`Såˇt_ch¨p
(
tmp
, "<pre_int>");

3341 
¥e_öt
 = 
TRUE
;

3343 
	`Såˇt_ch¨p
(
tmp
, "<img_alt src=\"");

3345 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
p
));

3346 
	`Såˇt_ch¨p
(
tmp
, "\"");

3347 i‡(
t
) {

3348 
	`Såˇt_ch¨p
(
tmp
, "Åitle=\"");

3349 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
t
));

3350 
	`Såˇt_ch¨p
(
tmp
, "\"");

3352 #ifde‡
USE_IMAGE


3353 i‡(
u£_image
) {

3354 i‡(
w0
 >= 0)

3355 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" width=%d", 
w0
));

3356 i‡(
i0
 >= 0)

3357 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" height=%d", 
i0
));

3358 
Æign
) {

3359 
ALIGN_TOP
:

3360 
t›
 = 0;

3361 
bŸtom
 = 
ni
 - 1;

3362 
yoff£t
 = 0;

3364 
ALIGN_MIDDLE
:

3365 
t›
 = 
ni
 / 2;

3366 
bŸtom
 = 
t›
;

3367 i‡(
t›
 * 2 =
ni
)

3368 
yoff£t
 = ()(((
ni
 + 1Ë* 
pixñ_≥r_löe
 - 
i
) / 2);

3370 
yoff£t
 = ()((
ni
 * 
pixñ_≥r_löe
 - 
i
) / 2);

3372 
ALIGN_BOTTOM
:

3373 
t›
 = 
ni
 - 1;

3374 
bŸtom
 = 0;

3375 
yoff£t
 = ()(
ni
 * 
pixñ_≥r_löe
 - 
i
);

3378 
t›
 = 
ni
 - 1;

3379 
bŸtom
 = 0;

3380 i‡(
ni
 =1 &&Çò* 
pixñ_≥r_löe
 > 
i
)

3381 
yoff£t
 = 0;

3383 
yoff£t
 = ()(
ni
 * 
pixñ_≥r_löe
 - 
i
);

3384 i‡(
yoff£t
 <= -2)

3385 
yoff£t
++;

3389 
xoff£t
 = ()((
nw
 * 
pixñ_≥r_ch¨
 - 
w
) / 2);

3390 i‡(
xoff£t
)

3391 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" xoff£t=%d", 
xoff£t
));

3392 i‡(
yoff£t
)

3393 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" yoff£t=%d", 
yoff£t
));

3394 i‡(
t›
)

3395 
	`Såˇt
(
tmp
, 
	`S¥ötf
("Å›_m¨gö=%d", 
t›
));

3396 i‡(
bŸtom
)

3397 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" bŸtom_m¨gö=%d", 
bŸtom
));

3398 i‡(
r
) {

3399 
	`Såˇt_ch¨p
(
tmp
, " usemap=\"");

3400 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
((
r2
Ë?Ñ2 + 1 : 
r
));

3401 
	`Såˇt_ch¨p
(
tmp
, "\"");

3403 i‡(
ism≠
)

3404 
	`Såˇt_ch¨p
(
tmp
, " ismap");

3407 
	`Såˇt_ch¨p
(
tmp
, ">");

3408 i‡(
q
 !
NULL
 && *q ='\0' && 
ign‹e_nuŒ_img_Æt
)

3409 
q
 = 
NULL
;

3410 i‡(
q
 !
NULL
) {

3411 
n
 = 
	`gë_°rwidth
(
q
);

3412 #ifde‡
USE_IMAGE


3413 i‡(
u£_image
) {

3414 i‡(
n
 > 
nw
) {

3415 *
r
;

3416 
r
 = 
q
, 
n
 = 0;Ñ;Ñ +
	`gë_m˛í
‘),Ç +
	`gë_mcwidth
(r)) {

3417 i‡(
n
 + 
	`gë_mcwidth
(
r
Ë> 
nw
)

3420 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
	`Så√w_ch¨p_n
(
q
, 
r
 - q)->
±r
));

3423 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
q
));

3427 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
q
));

3428 
img_íd
;

3430 i‡(
w
 > 0 && 
i
 > 0) {

3432 i‡(
w
 < 32 && 
i
 < 48) {

3434 
n
 = 1;

3435 i‡(
	`°rˇ£°r
(
p
, "space") || strcasestr(p, "blank"))

3436 
	`Såˇt_ch¨p
(
tmp
, "_");

3438 i‡(
w
 * 
i
 < 8 * 16)

3439 
	`Såˇt_ch¨p
(
tmp
, "*");

3441 i‡(!
¥e_öt
) {

3442 
	`Såˇt_ch¨p
(
tmp
, "<pre_int>");

3443 
¥e_öt
 = 
TRUE
;

3445 
	`push_symbﬁ
(
tmp
, 
IMG_SYMBOL
, 
symbﬁ_width
, 1);

3446 
n
 = 
symbﬁ_width
;

3449 
img_íd
;

3451 i‡(
w
 > 200 && 
i
 < 13) {

3453 i‡(!
¥e_öt
) {

3454 
	`Såˇt_ch¨p
(
tmp
, "<pre_int>");

3455 
¥e_öt
 = 
TRUE
;

3457 
w
 = w / 
pixñ_≥r_ch¨
 / 
symbﬁ_width
;

3458 i‡(
w
 <= 0)

3459 
w
 = 1;

3460 
	`push_symbﬁ
(
tmp
, 
HR_SYMBOL
, 
symbﬁ_width
, 
w
);

3461 
n
 = 
w
 * 
symbﬁ_width
;

3462 
img_íd
;

3465 
q
 = 
p
; *q; q++) ;

3466 
q
 > 
p
 && *q != '/')

3467 
q
--;

3468 i‡(*
q
 == '/')

3469 
q
++;

3470 
	`Såˇt_ch¨
(
tmp
, '[');

3471 
n
 = 1;

3472 
p
 = 
q
;

3473 ; *
q
; q++) {

3474 i‡(!
	`IS_ALNUM
(*
q
) && *q != '_' && *q != '-') {

3477 
	`Såˇt_ch¨
(
tmp
, *
q
);

3478 
n
++;

3479 i‡(
n
 + 1 >
nw
)

3482 
	`Såˇt_ch¨
(
tmp
, ']');

3483 
n
++;

3484 
img_íd
:

3485 #ifde‡
USE_IMAGE


3486 i‡(
u£_image
) {

3487 ; 
n
 < 
nw
;Ç++)

3488 
	`Såˇt_ch¨
(
tmp
, ' ');

3491 
	`Såˇt_ch¨p
(
tmp
, "</img_alt>");

3492 i‡(
¥e_öt
 && !
ext_¥e_öt
)

3493 
	`Såˇt_ch¨p
(
tmp
, "</pre_int>");

3494 i‡(
r
) {

3495 
	`Såˇt_ch¨p
(
tmp
, "</input_alt>");

3496 
	`¥o˚ss_n_f‹m
();

3498 #ifde‡
USE_IMAGE


3499 i‡(
u£_image
) {

3500 
Æign
) {

3501 
ALIGN_RIGHT
:

3502 
ALIGN_CENTER
:

3503 
ALIGN_LEFT
:

3504 
	`Såˇt_ch¨p
(
tmp
, "</div_int>");

3509  
tmp
;

3510 
	}
}

3512 
Så


3513 
	$¥o˚ss_™ch‹
(
∑r£d_èg
 *
èg
, *
ègbuf
)

3515 i‡(
	`∑r£dèg_√ed_ªc⁄°ru˘
(
èg
)) {

3516 
	`∑r£dèg_£t_vÆue
(
èg
, 
ATTR_HSEQ
, 
	`S¥ötf
("%d", 
cur_h£q
++)->
±r
);

3517  
	`∑r£dèg2°r
(
èg
);

3520 
Så
 
tmp
 = 
	`S¥ötf
("<®h£q=\"%d\"", 
cur_h£q
++);

3521 
	`Såˇt_ch¨p
(
tmp
, 
ègbuf
 + 2);

3522  
tmp
;

3524 
	}
}

3526 
Så


3527 
	$¥o˚ss_öput
(
∑r£d_èg
 *
èg
)

3529 
i
, 
w
, 
v
, 
x
, 
y
, 
z
, 
iw
, 
ih
;

3530 *
q
, *
p
, *
r
, *
p2
, *
s
;

3531 
Så
 
tmp
 = 
NULL
;

3532 *
qq
 = "";

3533 
qÀn
 = 0;

3535 i‡(
cur_f‹m_id
 < 0) {

3536 *
s
 = "<form_int method=internaláction=none>";

3537 
tmp
 = 
	`¥o˚ss_f‹m
(
	`∑r£_èg
(&
s
, 
TRUE
));

3539 i‡(
tmp
 =
NULL
)

3540 
tmp
 = 
	`Så√w
();

3542 
p
 = "text";

3543 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
);

3544 
q
 = 
NULL
;

3545 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALUE
, &
q
);

3546 
r
 = "";

3547 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
r
);

3548 
w
 = 20;

3549 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SIZE
, &
w
);

3550 
i
 = 20;

3551 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_MAXLENGTH
, &
i
);

3552 
p2
 = 
NULL
;

3553 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALT
, &
p2
);

3554 
x
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_CHECKED
);

3555 
y
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_ACCEPT
);

3556 
z
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_READONLY
);

3558 
v
 = 
	`f‹mty≥
(
p
);

3559 i‡(
v
 =
FORM_UNKNOWN
)

3560  
NULL
;

3562 i‡(!
q
) {

3563 
v
) {

3564 
FORM_INPUT_IMAGE
:

3565 
FORM_INPUT_SUBMIT
:

3566 
FORM_INPUT_BUTTON
:

3567 
q
 = "SUBMIT";

3569 
FORM_INPUT_RESET
:

3570 
q
 = "RESET";

3577 
FORM_INPUT_CHECKBOX
:

3578 
q
 = "on";

3582 i‡(
v
 =
FORM_INPUT_FILE
)

3583 
q
 = 
NULL
;

3584 i‡(
q
) {

3585 
qq
 = 
	`html_quŸe
(
q
);

3586 
qÀn
 = 
	`gë_°rwidth
(
q
);

3589 
	`Såˇt_ch¨p
(
tmp
, "<pre_int>");

3590 
v
) {

3591 
FORM_INPUT_PASSWORD
:

3592 
FORM_INPUT_TEXT
:

3593 
FORM_INPUT_FILE
:

3594 
FORM_INPUT_CHECKBOX
:

3595 
	`Såˇt_ch¨
(
tmp
, '[');

3597 
FORM_INPUT_RADIO
:

3598 
	`Såˇt_ch¨
(
tmp
, '(');

3600 
	`Såˇt
(
tmp
, 
	`S¥ötf
("<input_alt hseq=\"%d\" fid=\"%d\"Åype=%s "

3602 
cur_h£q
++, 
cur_f‹m_id
, 
p
, 
	`html_quŸe
(
r
), 
w
, 
i
, 
qq
));

3603 i‡(
x
)

3604 
	`Såˇt_ch¨p
(
tmp
, " checked");

3605 i‡(
y
)

3606 
	`Såˇt_ch¨p
(
tmp
, "áccept");

3607 i‡(
z
)

3608 
	`Såˇt_ch¨p
(
tmp
, "Ñeadonly");

3609 
	`Såˇt_ch¨
(
tmp
, '>');

3611 i‡(
v
 =
FORM_INPUT_HIDDEN
)

3612 
	`Såˇt_ch¨p
(
tmp
, "</input_alt></pre_int>");

3614 
v
) {

3615 
FORM_INPUT_PASSWORD
:

3616 
FORM_INPUT_TEXT
:

3617 
FORM_INPUT_FILE
:

3618 
	`Såˇt_ch¨p
(
tmp
, "<u>");

3620 
FORM_INPUT_IMAGE
:

3621 
s
 = 
NULL
;

3622 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
s
);

3623 i‡(
s
) {

3624 
	`Såˇt
(
tmp
, 
	`S¥ötf
("<img src=\"%s\"", 
	`html_quŸe
(
s
)));

3625 i‡(
p2
)

3626 
	`Såˇt
(
tmp
, 
	`S¥ötf
("á…=\"%s\"", 
	`html_quŸe
(
p2
)));

3627 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
iw
))

3628 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" width=\"%d\"", 
iw
));

3629 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HEIGHT
, &
ih
))

3630 
	`Såˇt
(
tmp
, 
	`S¥ötf
(" height=\"%d\"", 
ih
));

3631 
	`Såˇt_ch¨p
(
tmp
, "Öre_int>");

3632 
	`Såˇt_ch¨p
(
tmp
, "</input_alt></pre_int>");

3633  
tmp
;

3635 
FORM_INPUT_SUBMIT
:

3636 
FORM_INPUT_BUTTON
:

3637 
FORM_INPUT_RESET
:

3638 
	`Såˇt_ch¨p
(
tmp
, "[");

3641 
v
) {

3642 
FORM_INPUT_PASSWORD
:

3643 
i
 = 0;

3644 i‡(
q
) {

3645 ; 
i
 < 
qÀn
 && i < 
w
; i++)

3646 
	`Såˇt_ch¨
(
tmp
, '*');

3648 ; 
i
 < 
w
; i++)

3649 
	`Såˇt_ch¨
(
tmp
, ' ');

3651 
FORM_INPUT_TEXT
:

3652 
FORM_INPUT_FILE
:

3653 i‡(
q
)

3654 
	`Såˇt
(
tmp
, 
	`ãxtfõldªp
(
	`Så√w_ch¨p
(
q
), 
w
));

3656 
i
 = 0; i < 
w
; i++)

3657 
	`Såˇt_ch¨
(
tmp
, ' ');

3660 
FORM_INPUT_SUBMIT
:

3661 
FORM_INPUT_BUTTON
:

3662 i‡(
p2
)

3663 
	`Såˇt_ch¨p
(
tmp
, 
	`html_quŸe
(
p2
));

3665 
	`Såˇt_ch¨p
(
tmp
, 
qq
);

3667 
FORM_INPUT_RESET
:

3668 
	`Såˇt_ch¨p
(
tmp
, 
qq
);

3670 
FORM_INPUT_RADIO
:

3671 
FORM_INPUT_CHECKBOX
:

3672 i‡(
x
)

3673 
	`Såˇt_ch¨
(
tmp
, '*');

3675 
	`Såˇt_ch¨
(
tmp
, ' ');

3678 
v
) {

3679 
FORM_INPUT_PASSWORD
:

3680 
FORM_INPUT_TEXT
:

3681 
FORM_INPUT_FILE
:

3682 
	`Såˇt_ch¨p
(
tmp
, "</u>");

3684 
FORM_INPUT_IMAGE
:

3685 
FORM_INPUT_SUBMIT
:

3686 
FORM_INPUT_BUTTON
:

3687 
FORM_INPUT_RESET
:

3688 
	`Såˇt_ch¨p
(
tmp
, "]");

3690 
	`Såˇt_ch¨p
(
tmp
, "</input_alt>");

3691 
v
) {

3692 
FORM_INPUT_PASSWORD
:

3693 
FORM_INPUT_TEXT
:

3694 
FORM_INPUT_FILE
:

3695 
FORM_INPUT_CHECKBOX
:

3696 
	`Såˇt_ch¨
(
tmp
, ']');

3698 
FORM_INPUT_RADIO
:

3699 
	`Såˇt_ch¨
(
tmp
, ')');

3701 
	`Såˇt_ch¨p
(
tmp
, "</pre_int>");

3703  
tmp
;

3704 
	}
}

3706 
Så


3707 
	$¥o˚ss_£À˘
(
∑r£d_èg
 *
èg
)

3709 
Så
 
tmp
 = 
NULL
;

3710 *
p
;

3712 i‡(
cur_f‹m_id
 < 0) {

3713 *
s
 = "<form_int method=internaláction=none>";

3714 
tmp
 = 
	`¥o˚ss_f‹m
(
	`∑r£_èg
(&
s
, 
TRUE
));

3717 
p
 = "";

3718 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
p
);

3719 
cur_£À˘
 = 
	`Så√w_ch¨p
(
p
);

3720 
£À˘_is_mu…ùÀ
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_MULTIPLE
);

3722 #ifde‡
MENU_SELECT


3723 i‡(!
£À˘_is_mu…ùÀ
) {

3724 
£À˘_°r
 = 
	`S¥ötf
("<pre_int>[<input_alt hseq=\"%d\" "

3726 
cur_h£q
++, 
cur_f‹m_id
, 
	`html_quŸe
(
p
), 
n_£À˘
);

3727 
	`Såˇt_ch¨p
(
£À˘_°r
, ">");

3728 i‡(
n_£À˘
 =
max_£À˘
) {

3729 
max_£À˘
 *= 2;

3730 
£À˘_›ti⁄
 =

3731 
	`New_Reu£
(
F‹mSñe˘O±i⁄
, 
£À˘_›ti⁄
, 
max_£À˘
);

3733 
£À˘_›ti⁄
[
n_£À˘
].
fú°
 = 
NULL
;

3734 
£À˘_›ti⁄
[
n_£À˘
].
œ°
 = 
NULL
;

3735 
cur_›ti⁄_maxwidth
 = 0;

3739 
£À˘_°r
 = 
	`Så√w
();

3740 
cur_›ti⁄
 = 
NULL
;

3741 
cur_°©us
 = 
R_ST_NORMAL
;

3742 
n_£À˘ôem
 = 0;

3743  
tmp
;

3744 
	}
}

3746 
Så


3747 
	$¥o˚ss_n_£À˘
()

3749 i‡(
cur_£À˘
 =
NULL
)

3750  
NULL
;

3751 
	`¥o˚ss_›ti⁄
();

3752 #ifde‡
MENU_SELECT


3753 i‡(!
£À˘_is_mu…ùÀ
) {

3754 i‡(
£À˘_›ti⁄
[
n_£À˘
].
fú°
) {

3755 
F‹mIãmLi°
 
sôem
;

3756 
	`choo£Sñe˘O±i⁄
(&
sôem
, 
£À˘_›ti⁄
[
n_£À˘
].
fú°
);

3757 
	`Såˇt
(
£À˘_°r
, 
	`ãxtfõldªp
(
sôem
.
œbñ
, 
cur_›ti⁄_maxwidth
));

3759 
	`Såˇt_ch¨p
(
£À˘_°r
, "</input_alt>]</pre_int>");

3760 
n_£À˘
++;

3764 
	`Såˇt_ch¨p
(
£À˘_°r
, "<br>");

3765 
cur_£À˘
 = 
NULL
;

3766 
n_£À˘ôem
 = 0;

3767  
£À˘_°r
;

3768 
	}
}

3771 
	$„ed_£À˘
(*
°r
)

3773 
Så
 
tmp
 = 
	`Så√w
();

3774 
¥ev_°©us
 = 
cur_°©us
;

3775 
¥ev_•a˚s
 = -1;

3776 *
p
;

3778 i‡(
cur_£À˘
 =
NULL
)

3780 
	`ªad_tokí
(
tmp
, &
°r
, &
cur_°©us
, 0, 0)) {

3781 i‡(
cur_°©us
 !
R_ST_NORMAL
 || 
¥ev_°©us
 != R_ST_NORMAL)

3783 
p
 = 
tmp
->
±r
;

3784 i‡(
tmp
->
±r
[0] ='<' && 
	`Såœ°ch¨
(tmp) == '>') {

3785 
∑r£d_èg
 *
èg
;

3786 *
q
;

3787 i‡(!(
èg
 = 
	`∑r£_èg
(&
p
, 
FALSE
)))

3789 
èg
->
ègid
) {

3790 
HTML_OPTION
:

3791 
	`¥o˚ss_›ti⁄
();

3792 
cur_›ti⁄
 = 
	`Så√w
();

3793 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALUE
, &
q
))

3794 
cur_›ti⁄_vÆue
 = 
	`Så√w_ch¨p
(
q
);

3796 
cur_›ti⁄_vÆue
 = 
NULL
;

3797 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_LABEL
, &
q
))

3798 
cur_›ti⁄_œbñ
 = 
	`Så√w_ch¨p
(
q
);

3800 
cur_›ti⁄_œbñ
 = 
NULL
;

3801 
cur_›ti⁄_£À˘ed
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_SELECTED
);

3802 
¥ev_•a˚s
 = -1;

3804 
HTML_N_OPTION
:

3812 i‡(
cur_›ti⁄
) {

3813 *
p
) {

3814 i‡(
	`IS_SPACE
(*
p
Ë&& 
¥ev_•a˚s
 != 0) {

3815 
p
++;

3816 i‡(
¥ev_•a˚s
 > 0)

3817 
¥ev_•a˚s
++;

3820 i‡(
	`IS_SPACE
(*
p
))

3821 
¥ev_•a˚s
 = 1;

3823 
¥ev_•a˚s
 = 0;

3824 i‡(*
p
 == '&')

3825 
	`Såˇt_ch¨p
(
cur_›ti⁄
, 
	`gëesˇ≥cmd
(&
p
));

3827 
	`Såˇt_ch¨
(
cur_›ti⁄
, *(
p
++));

3832 
	}
}

3835 
	$¥o˚ss_›ti⁄
()

3837 
begö_ch¨
 = '[', 
íd_ch¨
 = ']';

3838 
Àn
;

3840 i‡(
cur_£À˘
 =
NULL
 || 
cur_›ti⁄
 == NULL)

3842 
cur_›ti⁄
->
Àngth
 > 0 && 
	`IS_SPACE
(
	`Såœ°ch¨
(cur_option)))

3843 
	`Såshrök
(
cur_›ti⁄
, 1);

3844 i‡(
cur_›ti⁄_vÆue
 =
NULL
)

3845 
cur_›ti⁄_vÆue
 = 
cur_›ti⁄
;

3846 i‡(
cur_›ti⁄_œbñ
 =
NULL
)

3847 
cur_›ti⁄_œbñ
 = 
cur_›ti⁄
;

3848 #ifde‡
MENU_SELECT


3849 i‡(!
£À˘_is_mu…ùÀ
) {

3850 
Àn
 = 
	`gë_Så_°rwidth
(
cur_›ti⁄_œbñ
);

3851 i‡(
Àn
 > 
cur_›ti⁄_maxwidth
)

3852 
cur_›ti⁄_maxwidth
 = 
Àn
;

3853 
	`addSñe˘O±i⁄
(&
£À˘_›ti⁄
[
n_£À˘
],

3854 
cur_›ti⁄_vÆue
,

3855 
cur_›ti⁄_œbñ
, 
cur_›ti⁄_£À˘ed
);

3859 i‡(!
£À˘_is_mu…ùÀ
) {

3860 
begö_ch¨
 = '(';

3861 
íd_ch¨
 = ')';

3863 
	`Såˇt
(
£À˘_°r
, 
	`S¥ötf
("<br><pre_int>%c<input_alt hseq=\"%d\" "

3865 
begö_ch¨
, 
cur_h£q
++, 
cur_f‹m_id
,

3866 
£À˘_is_mu…ùÀ
 ? "checkbox" : "radio",

3867 
	`html_quŸe
(
cur_£À˘
->
±r
),

3868 
	`html_quŸe
(
cur_›ti⁄_vÆue
->
±r
)));

3869 i‡(
cur_›ti⁄_£À˘ed
)

3870 
	`Såˇt_ch¨p
(
£À˘_°r
, " checked>*</input_alt>");

3872 
	`Såˇt_ch¨p
(
£À˘_°r
, "> </input_alt>");

3873 
	`Såˇt_ch¨
(
£À˘_°r
, 
íd_ch¨
);

3874 
	`Såˇt_ch¨p
(
£À˘_°r
, 
	`html_quŸe
(
cur_›ti⁄_œbñ
->
±r
));

3875 
	`Såˇt_ch¨p
(
£À˘_°r
, "</pre_int>");

3876 
n_£À˘ôem
++;

3877 
	}
}

3879 
Så


3880 
	$¥o˚ss_ãxèªa
(
∑r£d_èg
 *
èg
, 
width
)

3882 
Så
 
tmp
 = 
NULL
;

3883 *
p
;

3885 i‡(
cur_f‹m_id
 < 0) {

3886 *
s
 = "<form_int method=internaláction=none>";

3887 
tmp
 = 
	`¥o˚ss_f‹m
(
	`∑r£_èg
(&
s
, 
TRUE
));

3890 
p
 = "";

3891 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
p
);

3892 
cur_ãxèªa
 = 
	`Så√w_ch¨p
(
p
);

3893 
cur_ãxèªa_size
 = 20;

3894 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_COLS
, &
p
)) {

3895 
cur_ãxèªa_size
 = 
	`©oi
(
p
);

3896 i‡(
p
[
	`°æí
(p) - 1] == '%')

3897 
cur_ãxèªa_size
 = 
width
 * cur_textarea_size / 100 - 2;

3898 i‡(
cur_ãxèªa_size
 <= 0)

3899 
cur_ãxèªa_size
 = 20;

3901 
cur_ãxèªa_rows
 = 1;

3902 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ROWS
, &
p
)) {

3903 
cur_ãxèªa_rows
 = 
	`©oi
(
p
);

3904 i‡(
cur_ãxèªa_rows
 <= 0)

3905 
cur_ãxèªa_rows
 = 1;

3907 
cur_ãxèªa_ªad⁄ly
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_READONLY
);

3908 i‡(
n_ãxèªa
 >
max_ãxèªa
) {

3909 
max_ãxèªa
 *= 2;

3910 
ãxèªa_°r
 = 
	`New_Reu£
(
Så
,Åexèªa_°r, 
max_ãxèªa
);

3912 
ãxèªa_°r
[
n_ãxèªa
] = 
	`Så√w
();

3913 
ign‹e_∆_ãxèªa
 = 
TRUE
;

3915  
tmp
;

3916 
	}
}

3918 
Så


3919 
	$¥o˚ss_n_ãxèªa
()

3921 
Så
 
tmp
;

3922 
i
;

3924 i‡(
cur_ãxèªa
 =
NULL
)

3925  
NULL
;

3927 
tmp
 = 
	`Så√w
();

3928 
	`Såˇt
(
tmp
, 
	`S¥ötf
("<pre_int>[<input_alt hseq=\"%d\" fid=\"%d\" "

3931 
cur_h£q
, 
cur_f‹m_id
,

3932 
	`html_quŸe
(
cur_ãxèªa
->
±r
),

3933 
cur_ãxèªa_size
, 
cur_ãxèªa_rows
,

3934 
cur_ãxèªa_rows
 - 1, 
n_ãxèªa
));

3935 i‡(
cur_ãxèªa_ªad⁄ly
)

3936 
	`Såˇt_ch¨p
(
tmp
, "Ñeadonly");

3937 
	`Såˇt_ch¨p
(
tmp
, "><u>");

3938 
i
 = 0; i < 
cur_ãxèªa_size
; i++)

3939 
	`Såˇt_ch¨
(
tmp
, ' ');

3940 
	`Såˇt_ch¨p
(
tmp
, "</u></input_alt>]</pre_int>\n");

3941 
cur_h£q
++;

3942 
n_ãxèªa
++;

3943 
cur_ãxèªa
 = 
NULL
;

3945  
tmp
;

3946 
	}
}

3949 
	$„ed_ãxèªa
(*
°r
)

3951 i‡(
cur_ãxèªa
 =
NULL
)

3953 i‡(
ign‹e_∆_ãxèªa
) {

3954 i‡(*
°r
 == '\r')

3955 
°r
++;

3956 i‡(*
°r
 == '\n')

3957 
°r
++;

3959 
ign‹e_∆_ãxèªa
 = 
FALSE
;

3960 *
°r
) {

3961 i‡(*
°r
 == '&')

3962 
	`Såˇt_ch¨p
(
ãxèªa_°r
[
n_ãxèªa
], 
	`gëesˇ≥cmd
(&
°r
));

3963 i‡(*
°r
 == '\n') {

3964 
	`Såˇt_ch¨p
(
ãxèªa_°r
[
n_ãxèªa
], "\r\n");

3965 
°r
++;

3967 i‡(*
°r
 != '\r')

3968 
	`Såˇt_ch¨
(
ãxèªa_°r
[
n_ãxèªa
], *(
°r
++));

3970 
	}
}

3972 
Så


3973 
	$¥o˚ss_hr
(
∑r£d_èg
 *
èg
, 
width
, 
ödít_width
)

3975 
Så
 
tmp
 = 
	`Så√w_ch¨p
("<nobr>");

3976 
w
 = 0;

3977 
x
 = 
ALIGN_CENTER
;

3979 i‡(
width
 > 
ödít_width
)

3980 
width
 -
ödít_width
;

3981 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
w
))

3982 
w
 = 
	`REAL_WIDTH
(w, 
width
);

3984 
w
 = 
width
;

3986 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALIGN
, &
x
);

3987 
x
) {

3988 
ALIGN_CENTER
:

3989 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=center>");

3991 
ALIGN_RIGHT
:

3992 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=right>");

3994 
ALIGN_LEFT
:

3995 
	`Såˇt_ch¨p
(
tmp
, "<div_intálign=left>");

3998 
w
 /
symbﬁ_width
;

3999 i‡(
w
 <= 0)

4000 
w
 = 1;

4001 
	`push_symbﬁ
(
tmp
, 
HR_SYMBOL
, 
symbﬁ_width
, 
w
);

4002 
	`Såˇt_ch¨p
(
tmp
, "</div_int></nobr>");

4003  
tmp
;

4004 
	}
}

4006 #ifde‡
USE_M17N


4008 
	$check_ch¨£t
(*
p
)

4010  
	`wc_guess_ch¨£t
(
p
, 0Ë?Ö : 
NULL
;

4011 
	}
}

4014 
	$check_ac˚±_ch¨£t
(*
ac
)

4016 *
s
 = 
ac
, *
e
;

4018 *
s
) {

4019 *
s
 && (
	`IS_SPACE
(*s) || *s == ','))

4020 
s
++;

4021 i‡(!*
s
)

4023 
e
 = 
s
;

4024 *
e
 && !(
	`IS_SPACE
(*e) || *e == ','))

4025 
e
++;

4026 i‡(
	`wc_guess_ch¨£t
(
	`Så√w_ch¨p_n
(
s
, 
e
 - s)->
±r
, 0))

4027  
ac
;

4028 
s
 = 
e
;

4030  
NULL
;

4031 
	}
}

4034 
Så


4035 
	$¥o˚ss_f‹m_öt
(
∑r£d_èg
 *
èg
, 
fid
)

4037 *
p
, *
q
, *
r
, *
s
, *
tg
, *
n
;

4039 
p
 = "get";

4040 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_METHOD
, &
p
);

4041 
q
 = "!CURRENT_URL!";

4042 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ACTION
, &
q
);

4043 
r
 = 
NULL
;

4044 #ifde‡
USE_M17N


4045 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ACCEPT_CHARSET
, &
r
))

4046 
r
 = 
	`check_ac˚±_ch¨£t
(r);

4047 i‡(!
r
 && 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CHARSET
, &r))

4048 
r
 = 
	`check_ch¨£t
(r);

4050 
s
 = 
NULL
;

4051 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ENCTYPE
, &
s
);

4052 
tg
 = 
NULL
;

4053 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
tg
);

4054 
n
 = 
NULL
;

4055 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
n
);

4057 i‡(
fid
 < 0) {

4058 
f‹m_max
++;

4059 
f‹m_•
++;

4060 
fid
 = 
f‹m_max
;

4063 i‡(
f‹m_max
 < 
fid
)

4064 
f‹m_max
 = 
fid
;

4065 
f‹m_•
 = 
fid
;

4067 i‡(
f‹ms_size
 == 0) {

4068 
f‹ms_size
 = 
INITIAL_FORM_SIZE
;

4069 
f‹ms
 = 
	`New_N
(
F‹mLi°
 *, 
f‹ms_size
);

4070 
f‹m_°ack
 = 
	`NewAtom_N
(, 
f‹ms_size
);

4072 i‡(
f‹ms_size
 <
f‹m_max
) {

4073 
f‹ms_size
 +
f‹m_max
;

4074 
f‹ms
 = 
	`New_Reu£
(
F‹mLi°
 *, f‹ms, 
f‹ms_size
);

4075 
f‹m_°ack
 = 
	`New_Reu£
(, f‹m_°ack, 
f‹ms_size
);

4077 
f‹m_°ack
[
f‹m_•
] = 
fid
;

4079 i‡(
w3m_hÆfdump
) {

4080 
Så
 
tmp
 = 
	`S¥ötf
("<form_int fid=\"%d\"áction=\"%s\" method=\"%s\"",

4081 
fid
, 
	`html_quŸe
(
q
), html_quŸe(
p
));

4082 i‡(
s
)

4083 
	`Såˇt
(
tmp
, 
	`S¥ötf
("Én˘y≥=\"%s\"", 
	`html_quŸe
(
s
)));

4084 i‡(
tg
)

4085 
	`Såˇt
(
tmp
, 
	`S¥ötf
("Å¨gë=\"%s\"", 
	`html_quŸe
(
tg
)));

4086 i‡(
n
)

4087 
	`Såˇt
(
tmp
, 
	`S¥ötf
("Çame=\"%s\"", 
	`html_quŸe
(
n
)));

4088 #ifde‡
USE_M17N


4089 i‡(
r
)

4090 
	`Såˇt
(
tmp
, 
	`S¥ötf
("ác˚±-ch¨£t=\"%s\"", 
	`html_quŸe
(
r
)));

4092 
	`Såˇt_ch¨p
(
tmp
, ">");

4093  
tmp
;

4096 
f‹ms
[
fid
] = 
	`√wF‹mLi°
(
q
, 
p
, 
r
, 
s
, 
tg
, 
n
, 
NULL
);

4097  
NULL
;

4098 
	}
}

4100 
Så


4101 
	$¥o˚ss_f‹m
(
∑r£d_èg
 *
èg
)

4103  
	`¥o˚ss_f‹m_öt
(
èg
, -1);

4104 
	}
}

4106 
Så


4107 
	$¥o˚ss_n_f‹m
()

4109 i‡(
f‹m_•
 >= 0)

4110 
f‹m_•
--;

4111  
NULL
;

4112 
	}
}

4115 
	$˛ór_ign‹e_p_Êag
(
cmd
, 
ªadbuf„r
 *
obuf
)

4117 
˛ór_Êag_cmd
[] = {

4118 
HTML_HR
, 
HTML_UNKNOWN


4120 
i
;

4122 
i
 = 0; 
˛ór_Êag_cmd
[i] !
HTML_UNKNOWN
; i++) {

4123 i‡(
cmd
 =
˛ór_Êag_cmd
[
i
]) {

4124 
obuf
->
Êag
 &~
RB_IGNORE_P
;

4128 
	}
}

4131 
	$£t_Æignmít
(
ªadbuf„r
 *
obuf
, 
∑r£d_èg
 *
èg
)

4133 
Êag
 = -1;

4134 
Æign
;

4136 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALIGN
, &
Æign
)) {

4137 
Æign
) {

4138 
ALIGN_CENTER
:

4139 
Êag
 = 
RB_CENTER
;

4141 
ALIGN_RIGHT
:

4142 
Êag
 = 
RB_RIGHT
;

4144 
ALIGN_LEFT
:

4145 
Êag
 = 
RB_LEFT
;

4148 
	`RB_SAVE_FLAG
(
obuf
);

4149 i‡(
Êag
 != -1) {

4150 
	`RB_SET_ALIGN
(
obuf
, 
Êag
);

4152 
	}
}

4154 #ifde‡
ID_EXT


4156 
	$¥o˚ss_id©å
(
ªadbuf„r
 *
obuf
, 
cmd
, 
∑r£d_èg
 *
èg
)

4158 *
id
 = 
NULL
, *
‰amíame
 = NULL;

4159 
Så
 
idèg
 = 
NULL
;

4164 i‡(
cmd
 =
HTML_TABLE
)

4167 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ID
, &
id
);

4168 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_FRAMENAME
, &
‰amíame
);

4169 i‡(
id
 =
NULL
)

4171 i‡(
‰amíame
)

4172 
idèg
 = 
	`S¥ötf
("<_id id=\"%s\" framename=\"%s\">",

4173 
	`html_quŸe
(
id
), html_quŸe(
‰amíame
));

4175 
idèg
 = 
	`S¥ötf
("<_id id=\"%s\">", 
	`html_quŸe
(
id
));

4176 
	`push_èg
(
obuf
, 
idèg
->
±r
, 
HTML_NOP
);

4177 
	}
}

4180 
	#CLOSE_P
 i‡(
obuf
->
Êag
 & 
RB_P
) { \

4181 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
,0,h_ív->
limô
);\

4182 
	`RB_RESTORE_FLAG
(
obuf
);\

4183 
obuf
->
Êag
 &~
RB_P
;\

4184 }

	)

4186 
	#CLOSE_A
 \

4187 
CLOSE_P
; \

4188 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

	)

4190 
	#CLOSE_DT
 \

4191 i‡(
obuf
->
Êag
 & 
RB_IN_DT
) { \

4192 
obuf
->
Êag
 &~
RB_IN_DT
; \

4193 
	`HTMLlöïroc1
("</b>", 
h_ív
); \

4194 }

	)

4196 
	#PUSH_ENV
(
cmd
) \

4197 i‡(++
h_ív
->
ívc_ªÆ
 < h_ív->
√nv
) { \

4198 ++
h_ív
->
ívc
; \

4199 
ívs
[
h_ív
->
ívc
].
ív
 = 
cmd
; \

4200 
ívs
[
h_ív
->
ívc
].
cou¡
 = 0; \

4201 i‡(
h_ív
->
ívc
 <
MAX_INDENT_LEVEL
) \

4202 
ívs
[
h_ív
->
ívc
].
ödít
 =Énvs[h_ív->ív¯- 1].ödíà+ 
INDENT_INCR
; \

4204 
ívs
[
h_ív
->
ívc
].
ödít
 =Énvs[h_env->envc - 1].indent; \

4205 }

	)

4207 
	#POP_ENV
 \

4208 i‡(
h_ív
->
ívc_ªÆ
-- < h_ív->
√nv
) \

4209 
h_ív
->
ívc
--;

	)

4212 
	$ul_ty≥
(
∑r£d_èg
 *
èg
, 
deÁu…_ty≥
)

4214 *
p
;

4215 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
)) {

4216 i‡(!
	`°rˇ£cmp
(
p
, "disc"))

4218 i‡(!
	`°rˇ£cmp
(
p
, "circle"))

4220 i‡(!
	`°rˇ£cmp
(
p
, "square"))

4223  
deÁu…_ty≥
;

4224 
	}
}

4227 
	$gëMëaRe‰eshP¨am
(*
q
, 
Så
 *
ª‰esh_uri
)

4229 
ª‰esh_öãrvÆ
;

4230 *
r
;

4231 
Så
 
s_tmp
 = 
NULL
;

4233 i‡(
q
 =
NULL
 || 
ª‰esh_uri
 == NULL)

4236 
ª‰esh_öãrvÆ
 = 
	`©oi
(
q
);

4237 i‡(
ª‰esh_öãrvÆ
 < 0)

4240 *
q
) {

4241 i‡(!
	`°∫ˇ£cmp
(
q
, "url=", 4)) {

4242 
q
 += 4;

4243 i‡(*
q
 == '\"')

4244 
q
++;

4245 
r
 = 
q
;

4246 *
r
 && !
	`IS_SPACE
(*r) && *r != ';')

4247 
r
++;

4248 
s_tmp
 = 
	`Så√w_ch¨p_n
(
q
, 
r
 - q);

4250 i‡(
s_tmp
->
±r
[s_tmp->
Àngth
 - 1] == '\"') {

4252 
s_tmp
->
Àngth
--;

4253 
s_tmp
->
±r
[s_tmp->
Àngth
] = '\0';

4255 
q
 = 
r
;

4257 *
q
 && *q != ';')

4258 
q
++;

4259 i‡(*
q
 == ';')

4260 
q
++;

4261 *
q
 && *q == ' ')

4262 
q
++;

4264 *
ª‰esh_uri
 = 
s_tmp
;

4265  
ª‰esh_öãrvÆ
;

4266 
	}
}

4269 
	$HTMLèg¥oc1
(
∑r£d_èg
 *
èg
, 
html_„ed_ívú⁄
 *
h_ív
)

4271 *
p
, *
q
, *
r
;

4272 
i
, 
w
, 
x
, 
y
, 
z
, 
cou¡
, 
width
;

4273 
ªadbuf„r
 *
obuf
 = 
h_ív
->obuf;

4274 
ívú⁄mít
 *
ívs
 = 
h_ív
->envs;

4275 
Så
 
tmp
;

4276 
h£q
;

4277 
cmd
;

4278 #ifde‡
ID_EXT


4279 *
id
 = 
NULL
;

4282 
cmd
 = 
èg
->
ègid
;

4284 i‡(
obuf
->
Êag
 & 
RB_PRE
) {

4285 
cmd
) {

4286 
HTML_NOBR
:

4287 
HTML_N_NOBR
:

4288 
HTML_PRE_INT
:

4289 
HTML_N_PRE_INT
:

4294 
cmd
) {

4295 
HTML_B
:

4296 
obuf
->
ö_bﬁd
++;

4297 i‡(
obuf
->
ö_bﬁd
 > 1)

4300 
HTML_N_B
:

4301 i‡(
obuf
->
ö_bﬁd
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_B
))

4302 
obuf
->
ö_bﬁd
 = 0;

4303 i‡(
obuf
->
ö_bﬁd
 > 0) {

4304 
obuf
->
ö_bﬁd
--;

4305 i‡(
obuf
->
ö_bﬁd
 == 0)

4309 
HTML_I
:

4310 
obuf
->
ö_ôÆic
++;

4311 i‡(
obuf
->
ö_ôÆic
 > 1)

4314 
HTML_N_I
:

4315 i‡(
obuf
->
ö_ôÆic
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_I
))

4316 
obuf
->
ö_ôÆic
 = 0;

4317 i‡(
obuf
->
ö_ôÆic
 > 0) {

4318 
obuf
->
ö_ôÆic
--;

4319 i‡(
obuf
->
ö_ôÆic
 == 0)

4323 
HTML_U
:

4324 
obuf
->
ö_undî
++;

4325 i‡(
obuf
->
ö_undî
 > 1)

4328 
HTML_N_U
:

4329 i‡(
obuf
->
ö_undî
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_U
))

4330 
obuf
->
ö_undî
 = 0;

4331 i‡(
obuf
->
ö_undî
 > 0) {

4332 
obuf
->
ö_undî
--;

4333 i‡(
obuf
->
ö_undî
 == 0)

4337 
HTML_EM
:

4338 
	`HTMLlöïroc1
("<i>", 
h_ív
);

4340 
HTML_N_EM
:

4341 
	`HTMLlöïroc1
("</i>", 
h_ív
);

4343 
HTML_STRONG
:

4344 
	`HTMLlöïroc1
("<b>", 
h_ív
);

4346 
HTML_N_STRONG
:

4347 
	`HTMLlöïroc1
("</b>", 
h_ív
);

4349 
HTML_Q
:

4350 
	`HTMLlöïroc1
("`", 
h_ív
);

4352 
HTML_N_Q
:

4353 
	`HTMLlöïroc1
("'", 
h_ív
);

4355 
HTML_P
:

4356 
HTML_N_P
:

4357 
CLOSE_A
;

4358 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4359 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 1, h_ív->
limô
);

4360 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4361 
h_ív
->
limô
);

4363 
obuf
->
Êag
 |
RB_IGNORE_P
;

4364 i‡(
cmd
 =
HTML_P
) {

4365 
	`£t_Æignmít
(
obuf
, 
èg
);

4366 
obuf
->
Êag
 |
RB_P
;

4369 
HTML_BR
:

4370 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 1, h_ív->
limô
);

4371 
h_ív
->
bœnk_löes
 = 0;

4373 
HTML_H
:

4374 i‡(!(
obuf
->
Êag
 & (
RB_PREMODE
 | 
RB_IGNORE_P
))) {

4375 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4376 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4377 
h_ív
->
limô
);

4379 
	`HTMLlöïroc1
("<b>", 
h_ív
);

4380 
	`£t_Æignmít
(
obuf
, 
èg
);

4382 
HTML_N_H
:

4383 
	`HTMLlöïroc1
("</b>", 
h_ív
);

4384 i‡(!(
obuf
->
Êag
 & 
RB_PREMODE
)) {

4385 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4387 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4388 
	`RB_RESTORE_FLAG
(
obuf
);

4389 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4390 
obuf
->
Êag
 |
RB_IGNORE_P
;

4392 
HTML_UL
:

4393 
HTML_OL
:

4394 
HTML_BLQ
:

4395 
CLOSE_A
;

4396 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4397 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4398 i‡(!(
obuf
->
Êag
 & 
RB_PREMODE
) &&

4399 (
h_ív
->
ívc
 =0 || 
cmd
 =
HTML_BLQ
))

4400 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4401 
h_ív
->
limô
);

4403 
	`PUSH_ENV
(
cmd
);

4404 i‡(
cmd
 =
HTML_UL
 || cmd =
HTML_OL
) {

4405 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_START
, &
cou¡
)) {

4406 
ívs
[
h_ív
->
ívc
].
cou¡
 = count - 1;

4409 i‡(
cmd
 =
HTML_OL
) {

4410 
ívs
[
h_ív
->
ívc
].
ty≥
 = '1';

4411 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
)) {

4412 
ívs
[
h_ív
->
ívc
].
ty≥
 = ()*
p
;

4415 i‡(
cmd
 =
HTML_UL
)

4416 
ívs
[
h_ív
->
ívc
].
ty≥
 = 
	`ul_ty≥
(
èg
, 0);

4417 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4419 
HTML_N_UL
:

4420 
HTML_N_OL
:

4421 
HTML_N_DL
:

4422 
HTML_N_BLQ
:

4423 
CLOSE_DT
;

4424 
CLOSE_A
;

4425 i‡(
h_ív
->
ívc
 > 0) {

4426 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
 - 1].
ödít
, 0,

4427 
h_ív
->
limô
);

4428 
POP_ENV
;

4429 i‡(!(
obuf
->
Êag
 & 
RB_PREMODE
) &&

4430 (
h_ív
->
ívc
 =0 || 
cmd
 =
HTML_N_DL
 || cmd =
HTML_N_BLQ
)) {

4431 
	`do_bœnklöe
(
h_ív
, 
obuf
,

4432 
ívs
[
h_ív
->
ívc
].
ödít
,

4433 
INDENT_INCR
, 
h_ív
->
limô
);

4434 
obuf
->
Êag
 |
RB_IGNORE_P
;

4437 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4439 
HTML_DL
:

4440 
CLOSE_A
;

4441 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4442 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4443 i‡(!(
obuf
->
Êag
 & 
RB_PREMODE
))

4444 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4445 
h_ív
->
limô
);

4447 
	`PUSH_ENV
(
cmd
);

4448 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_COMPACT
))

4449 
ívs
[
h_ív
->
ívc
].
ív
 = 
HTML_DL_COMPACT
;

4450 
obuf
->
Êag
 |
RB_IGNORE_P
;

4452 
HTML_LI
:

4453 
CLOSE_A
;

4454 
CLOSE_DT
;

4455 i‡(
h_ív
->
ívc
 > 0) {

4456 
Så
 
num
;

4457 
	`Êushlöe
(
h_ív
, 
obuf
,

4458 
ívs
[
h_ív
->
ívc
 - 1].
ödít
, 0, h_ív->
limô
);

4459 
ívs
[
h_ív
->
ívc
].
cou¡
++;

4460 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALUE
, &
p
)) {

4461 
cou¡
 = 
	`©oi
(
p
);

4462 i‡(
cou¡
 > 0)

4463 
ívs
[
h_ív
->
ívc
].
cou¡
 = count;

4465 
ívs
[
h_ív
->
ívc
].
cou¡
 = 0;

4467 
ívs
[
h_ív
->
ívc
].
ív
) {

4468 
HTML_UL
:

4469 
ívs
[
h_ív
->
ívc
].
ty≥
 = 
	`ul_ty≥
(
èg
,Énvs[h_env->envc].type);

4470 
i
 = 0; i < 
INDENT_INCR
 - 3; i++)

4471 
	`push_ch¨p
(
obuf
, 1, 
NBSP
, 
PC_ASCII
);

4472 
tmp
 = 
	`Så√w
();

4473 
ívs
[
h_ív
->
ívc
].
ty≥
) {

4475 
	`push_symbﬁ
(
tmp
, 
UL_SYMBOL_DISC
, 
symbﬁ_width
, 1);

4478 
	`push_symbﬁ
(
tmp
, 
UL_SYMBOL_CIRCLE
, 
symbﬁ_width
, 1);

4481 
	`push_symbﬁ
(
tmp
, 
UL_SYMBOL_SQUARE
, 
symbﬁ_width
, 1);

4484 
	`push_symbﬁ
(
tmp
,

4485 
	`UL_SYMBOL
((
h_ív
->
ívc_ªÆ
 -

4486 1Ë% 
MAX_UL_LEVEL
), 
symbﬁ_width
,

4490 i‡(
symbﬁ_width
 == 1)

4491 
	`push_ch¨p
(
obuf
, 1, 
NBSP
, 
PC_ASCII
);

4492 
	`push_°r
(
obuf
, 
symbﬁ_width
, 
tmp
, 
PC_ASCII
);

4493 
	`push_ch¨p
(
obuf
, 1, 
NBSP
, 
PC_ASCII
);

4494 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

4496 
HTML_OL
:

4497 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
))

4498 
ívs
[
h_ív
->
ívc
].
ty≥
 = ()*
p
;

4499 (
ívs
[
h_ív
->
ívc
].
cou¡
 > 0)?Énvs[h_ív->ívc].
ty≥
: '1') {

4501 
num
 = 
	`rom™NumîÆ
(
ívs
[
h_ív
->
ívc
].
cou¡
);

4504 
num
 = 
	`rom™NumîÆ
(
ívs
[
h_ív
->
ívc
].
cou¡
);

4505 
	`Såuµî
(
num
);

4508 
num
 = 
	`rom™AÕhabë
(
ívs
[
h_ív
->
ívc
].
cou¡
);

4511 
num
 = 
	`rom™AÕhabë
(
ívs
[
h_ív
->
ívc
].
cou¡
);

4512 
	`Såuµî
(
num
);

4515 
num
 = 
	`S¥ötf
("%d", 
ívs
[
h_ív
->
ívc
].
cou¡
);

4518 i‡(
INDENT_INCR
 >= 4)

4519 
	`Såˇt_ch¨p
(
num
, ". ");

4521 
	`Såˇt_ch¨
(
num
, '.');

4522 
	`push_•a˚s
(
obuf
, 1, 
INDENT_INCR
 - 
num
->
Àngth
);

4523 
	`push_°r
(
obuf
, 
num
->
Àngth
,Çum, 
PC_ASCII
);

4524 i‡(
INDENT_INCR
 >= 4)

4525 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

4528 
	`push_•a˚s
(
obuf
, 1, 
INDENT_INCR
);

4533 
	`Êushlöe
(
h_ív
, 
obuf
, 0, 0, h_ív->
limô
);

4535 
obuf
->
Êag
 |
RB_IGNORE_P
;

4537 
HTML_DT
:

4538 
CLOSE_A
;

4539 i‡(
h_ív
->
ívc
 == 0 ||

4540 (
h_ív
->
ívc_ªÆ
 < h_ív->
√nv
 &&

4541 
ívs
[
h_ív
->
ívc
].
ív
 !
HTML_DL
 &&

4542 
ívs
[
h_ív
->
ívc
].
ív
 !
HTML_DL_COMPACT
)) {

4543 
	`PUSH_ENV
(
HTML_DL
);

4545 i‡(
h_ív
->
ívc
 > 0) {

4546 
	`Êushlöe
(
h_ív
, 
obuf
,

4547 
ívs
[
h_ív
->
ívc
 - 1].
ödít
, 0, h_ív->
limô
);

4549 i‡(!(
obuf
->
Êag
 & 
RB_IN_DT
)) {

4550 
	`HTMLlöïroc1
("<b>", 
h_ív
);

4551 
obuf
->
Êag
 |
RB_IN_DT
;

4553 
obuf
->
Êag
 |
RB_IGNORE_P
;

4555 
HTML_DD
:

4556 
CLOSE_A
;

4557 
CLOSE_DT
;

4558 i‡(
ívs
[
h_ív
->
ívc
].
ív
 =
HTML_DL_COMPACT
) {

4559 i‡(
obuf
->
pos
 > 
ívs
[
h_ív
->
ívc
].
ödít
)

4560 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4561 
h_ív
->
limô
);

4563 
	`push_•a˚s
(
obuf
, 1, 
ívs
[
h_ív
->
ívc
].
ödít
 - obuf->
pos
);

4566 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4569 
HTML_TITLE
:

4570 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4571 
	`¥o˚ss_tôÀ
(
èg
);

4572 
obuf
->
Êag
 |
RB_TITLE
;

4573 
obuf
->
íd_èg
 = 
HTML_N_TITLE
;

4575 
HTML_N_TITLE
:

4576 i‡(!(
obuf
->
Êag
 & 
RB_TITLE
))

4578 
obuf
->
Êag
 &~
RB_TITLE
;

4579 
obuf
->
íd_èg
 = 0;

4580 
tmp
 = 
	`¥o˚ss_n_tôÀ
(
èg
);

4581 i‡(
tmp
)

4582 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4584 
HTML_TITLE_ALT
:

4585 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
p
))

4586 
h_ív
->
tôÀ
 = 
	`html_unquŸe
(
p
);

4588 
HTML_FRAMESET
:

4589 
	`PUSH_ENV
(
cmd
);

4590 
	`push_ch¨p
(
obuf
, 9, "--FRAME--", 
PC_ASCII
);

4591 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4593 
HTML_N_FRAMESET
:

4594 i‡(
h_ív
->
ívc
 > 0) {

4595 
POP_ENV
;

4596 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4599 
HTML_NOFRAMES
:

4600 
CLOSE_A
;

4601 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4602 
obuf
->
Êag
 |(
RB_NOFRAMES
 | 
RB_IGNORE_P
);

4605 
HTML_N_NOFRAMES
:

4606 
CLOSE_A
;

4607 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4608 
obuf
->
Êag
 &~
RB_NOFRAMES
;

4610 
HTML_FRAME
:

4611 
q
 = 
r
 = 
NULL
;

4612 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
q
);

4613 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
r
);

4614 i‡(
q
) {

4615 
q
 = 
	`html_quŸe
(q);

4616 
	`push_èg
(
obuf
, 
	`S¥ötf
("<a hseq=\"%d\" href=\"%s\">",

4617 
cur_h£q
++, 
q
)->
±r
, 
HTML_A
);

4618 i‡(
r
)

4619 
q
 = 
	`html_quŸe
(
r
);

4620 
	`push_ch¨p
(
obuf
, 
	`gë_°rwidth
(
q
), q, 
PC_ASCII
);

4621 
	`push_èg
(
obuf
, "</a>", 
HTML_N_A
);

4623 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4625 
HTML_HR
:

4626 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4627 
tmp
 = 
	`¥o˚ss_hr
(
èg
, 
h_ív
->
limô
, 
ívs
[h_ív->
ívc
].
ödít
);

4628 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4629 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

4631 
HTML_PRE
:

4632 
x
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_FOR_TABLE
);

4633 
CLOSE_A
;

4634 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4635 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4636 i‡(!
x
)

4637 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4638 
h_ív
->
limô
);

4641 
	`fûŒöe
(
obuf
, 
ívs
[
h_ív
->
ívc
].
ödít
);

4642 
obuf
->
Êag
 |(
RB_PRE
 | 
RB_IGNORE_P
);

4645 
HTML_N_PRE
:

4646 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4647 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4648 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4649 
h_ív
->
limô
);

4650 
obuf
->
Êag
 |
RB_IGNORE_P
;

4651 
h_ív
->
bœnk_löes
++;

4653 
obuf
->
Êag
 &~
RB_PRE
;

4654 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4656 
HTML_PRE_INT
:

4657 
i
 = 
obuf
->
löe
->
Àngth
;

4658 
	`≠≥nd_ègs
(
obuf
);

4659 i‡(!(
obuf
->
Êag
 & 
RB_SPECIAL
)) {

4660 
	`£t_bªakpoöt
(
obuf
, obuf->
löe
->
Àngth
 - 
i
);

4662 
obuf
->
Êag
 |
RB_PRE_INT
;

4664 
HTML_N_PRE_INT
:

4665 
	`push_èg
(
obuf
, "</¥e_öt>", 
HTML_N_PRE_INT
);

4666 
obuf
->
Êag
 &~
RB_PRE_INT
;

4667 i‡(!(
obuf
->
Êag
 & 
RB_SPECIAL
Ë&& obuf->
pos
 > obuf->
bp
.pos) {

4668 
	`£t_¥evch¨
(
obuf
->
¥evch¨
, "", 0);

4669 
obuf
->
¥ev_˘y≥
 = 
PC_CTRL
;

4672 
HTML_NOBR
:

4673 
obuf
->
Êag
 |
RB_NOBR
;

4674 
obuf
->
nobr_Àvñ
++;

4676 
HTML_N_NOBR
:

4677 i‡(
obuf
->
nobr_Àvñ
 > 0)

4678 
obuf
->
nobr_Àvñ
--;

4679 i‡(
obuf
->
nobr_Àvñ
 == 0)

4680 
obuf
->
Êag
 &~
RB_NOBR
;

4682 
HTML_PRE_PLAIN
:

4683 
CLOSE_A
;

4684 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4685 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4686 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4687 
h_ív
->
limô
);

4689 
obuf
->
Êag
 |(
RB_PRE
 | 
RB_IGNORE_P
);

4691 
HTML_N_PRE_PLAIN
:

4692 
CLOSE_A
;

4693 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4694 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4695 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4696 
h_ív
->
limô
);

4697 
obuf
->
Êag
 |
RB_IGNORE_P
;

4699 
obuf
->
Êag
 &~
RB_PRE
;

4701 
HTML_LISTING
:

4702 
HTML_XMP
:

4703 
HTML_PLAINTEXT
:

4704 
CLOSE_A
;

4705 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4706 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4707 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4708 
h_ív
->
limô
);

4710 
obuf
->
Êag
 |(
RB_PLAIN
 | 
RB_IGNORE_P
);

4711 
cmd
) {

4712 
HTML_LISTING
:

4713 
obuf
->
íd_èg
 = 
HTML_N_LISTING
;

4715 
HTML_XMP
:

4716 
obuf
->
íd_èg
 = 
HTML_N_XMP
;

4718 
HTML_PLAINTEXT
:

4719 
obuf
->
íd_èg
 = 
MAX_HTMLTAG
;

4723 
HTML_N_LISTING
:

4724 
HTML_N_XMP
:

4725 
CLOSE_A
;

4726 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

4727 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4728 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

4729 
h_ív
->
limô
);

4730 
obuf
->
Êag
 |
RB_IGNORE_P
;

4732 
obuf
->
Êag
 &~
RB_PLAIN
;

4733 
obuf
->
íd_èg
 = 0;

4735 
HTML_SCRIPT
:

4736 
obuf
->
Êag
 |
RB_SCRIPT
;

4737 
obuf
->
íd_èg
 = 
HTML_N_SCRIPT
;

4739 
HTML_STYLE
:

4740 
obuf
->
Êag
 |
RB_STYLE
;

4741 
obuf
->
íd_èg
 = 
HTML_N_STYLE
;

4743 
HTML_N_SCRIPT
:

4744 
obuf
->
Êag
 &~
RB_SCRIPT
;

4745 
obuf
->
íd_èg
 = 0;

4747 
HTML_N_STYLE
:

4748 
obuf
->
Êag
 &~
RB_STYLE
;

4749 
obuf
->
íd_èg
 = 0;

4751 
HTML_A
:

4752 i‡(
obuf
->
™ch‹
.
uæ
)

4753 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4755 
h£q
 = 0;

4757 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
p
))

4758 
obuf
->
™ch‹
.
uæ
 = 
	`Så√w_ch¨p
(
p
)->
±r
;

4759 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
p
))

4760 
obuf
->
™ch‹
.
èrgë
 = 
	`Så√w_ch¨p
(
p
)->
±r
;

4761 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_REFERER
, &
p
))

4762 
obuf
->
™ch‹
.
ª„ªr
 = 
	`Så√w_ch¨p
(
p
)->
±r
;

4763 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
p
))

4764 
obuf
->
™ch‹
.
tôÀ
 = 
	`Så√w_ch¨p
(
p
)->
±r
;

4765 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ACCESSKEY
, &
p
))

4766 
obuf
->
™ch‹
.
ac˚sskey
 = ()*
p
;

4767 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HSEQ
, &
h£q
))

4768 
obuf
->
™ch‹
.
h£q
 = hseq;

4770 i‡(
h£q
 =0 && 
obuf
->
™ch‹
.
uæ
) {

4771 
obuf
->
™ch‹
.
h£q
 = 
cur_h£q
;

4772 
tmp
 = 
	`¥o˚ss_™ch‹
(
èg
, 
h_ív
->
ègbuf
->
±r
);

4773 
	`push_èg
(
obuf
, 
tmp
->
±r
, 
HTML_A
);

4777 
HTML_N_A
:

4778 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4780 
HTML_IMG
:

4781 
tmp
 = 
	`¥o˚ss_img
(
èg
, 
h_ív
->
limô
);

4782 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4784 
HTML_IMG_ALT
:

4785 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
))

4786 
obuf
->
img_Æt
 = 
	`Så√w_ch¨p
(
p
);

4787 #ifde‡
USE_IMAGE


4788 
i
 = 0;

4789 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TOP_MARGIN
, &
i
)) {

4790 i‡(
i
 > 
obuf
->
t›_m¨gö
)

4791 
obuf
->
t›_m¨gö
 = 
i
;

4793 
i
 = 0;

4794 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BOTTOM_MARGIN
, &
i
)) {

4795 i‡(
i
 > 
obuf
->
bŸtom_m¨gö
)

4796 
obuf
->
bŸtom_m¨gö
 = 
i
;

4800 
HTML_N_IMG_ALT
:

4801 i‡(
obuf
->
img_Æt
) {

4802 i‡(!
	`˛o£_ef„˘0
(
obuf
, 
HTML_IMG_ALT
))

4803 
	`push_èg
(
obuf
, "</img_Æt>", 
HTML_N_IMG_ALT
);

4804 
obuf
->
img_Æt
 = 
NULL
;

4807 
HTML_INPUT_ALT
:

4808 
i
 = 0;

4809 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TOP_MARGIN
, &
i
)) {

4810 i‡(
i
 > 
obuf
->
t›_m¨gö
)

4811 
obuf
->
t›_m¨gö
 = 
i
;

4813 
i
 = 0;

4814 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BOTTOM_MARGIN
, &
i
)) {

4815 i‡(
i
 > 
obuf
->
bŸtom_m¨gö
)

4816 
obuf
->
bŸtom_m¨gö
 = 
i
;

4819 
HTML_TABLE
:

4820 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4821 
obuf
->
èbÀ_Àvñ
++;

4822 i‡(
obuf
->
èbÀ_Àvñ
 >
MAX_TABLE
)

4824 
w
 = 
BORDER_NONE
;

4826 
x
 = 2;

4827 
y
 = 1;

4828 
z
 = 0;

4829 
width
 = 0;

4830 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_BORDER
)) {

4831 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BORDER
, &
w
)) {

4832 i‡(
w
 > 2)

4833 
w
 = 
BORDER_THICK
;

4834 i‡(
w
 < 0) {

4835 
w
 = 
BORDER_THIN
;

4839 
w
 = 
BORDER_THIN
;

4841 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
i
)) {

4842 i‡(
obuf
->
èbÀ_Àvñ
 == 0)

4843 
width
 = 
	`REAL_WIDTH
(
i
, 
h_ív
->
limô
 - 
ívs
[h_ív->
ívc
].
ödít
);

4845 
width
 = 
	`RELATIVE_WIDTH
(
i
);

4847 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_HBORDER
))

4848 
w
 = 
BORDER_NOWIN
;

4849 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CELLSPACING
, &
x
);

4850 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CELLPADDING
, &
y
);

4851 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VSPACE
, &
z
);

4852 #ifde‡
ID_EXT


4853 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ID
, &
id
);

4855 
èbÀs
[
obuf
->
èbÀ_Àvñ
] = 
	`begö_èbÀ
(
w
, 
x
, 
y
, 
z
);

4856 #ifde‡
ID_EXT


4857 i‡(
id
 !
NULL
)

4858 
èbÀs
[
obuf
->
èbÀ_Àvñ
]->
id
 = 
	`Så√w_ch¨p
(id);

4860 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
¥e_mode
 = 0;

4861 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
ödít_Àvñ
 = 0;

4862 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
nobr_Àvñ
 = 0;

4863 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
ˇ±i⁄
 = 0;

4864 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
íd_èg
 = 0;

4865 #i‚de‡
TABLE_EXPAND


4866 
èbÀs
[
obuf
->
èbÀ_Àvñ
]->
tŸÆ_width
 = 
width
;

4868 
èbÀs
[
obuf
->
èbÀ_Àvñ
]->
ªÆ_width
 = 
width
;

4869 
èbÀs
[
obuf
->
èbÀ_Àvñ
]->
tŸÆ_width
 = 0;

4872 
HTML_N_TABLE
:

4875 
HTML_CENTER
:

4876 
CLOSE_A
;

4877 i‡(!(
obuf
->
Êag
 & (
RB_PREMODE
 | 
RB_IGNORE_P
)))

4878 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4879 
	`RB_SAVE_FLAG
(
obuf
);

4880 
	`RB_SET_ALIGN
(
obuf
, 
RB_CENTER
);

4882 
HTML_N_CENTER
:

4883 
CLOSE_A
;

4884 i‡(!(
obuf
->
Êag
 & 
RB_PREMODE
))

4885 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4886 
	`RB_RESTORE_FLAG
(
obuf
);

4888 
HTML_DIV
:

4889 
CLOSE_A
;

4890 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
))

4891 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4892 
	`£t_Æignmít
(
obuf
, 
èg
);

4894 
HTML_N_DIV
:

4895 
CLOSE_A
;

4896 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4897 
	`RB_RESTORE_FLAG
(
obuf
);

4899 
HTML_DIV_INT
:

4900 
CLOSE_P
;

4901 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
))

4902 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4903 
	`£t_Æignmít
(
obuf
, 
èg
);

4905 
HTML_N_DIV_INT
:

4906 
CLOSE_P
;

4907 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4908 
	`RB_RESTORE_FLAG
(
obuf
);

4910 
HTML_FORM
:

4911 
CLOSE_A
;

4912 i‡(!(
obuf
->
Êag
 & 
RB_IGNORE_P
))

4913 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4914 
tmp
 = 
	`¥o˚ss_f‹m
(
èg
);

4915 i‡(
tmp
)

4916 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4918 
HTML_N_FORM
:

4919 
CLOSE_A
;

4920 
	`Êushlöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0, h_ív->
limô
);

4921 
obuf
->
Êag
 |
RB_IGNORE_P
;

4922 
	`¥o˚ss_n_f‹m
();

4924 
HTML_INPUT
:

4925 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4926 
tmp
 = 
	`¥o˚ss_öput
(
èg
);

4927 i‡(
tmp
)

4928 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4930 
HTML_SELECT
:

4931 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4932 
tmp
 = 
	`¥o˚ss_£À˘
(
èg
);

4933 i‡(
tmp
)

4934 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4935 
obuf
->
Êag
 |
RB_INSELECT
;

4936 
obuf
->
íd_èg
 = 
HTML_N_SELECT
;

4938 
HTML_N_SELECT
:

4939 
obuf
->
Êag
 &~
RB_INSELECT
;

4940 
obuf
->
íd_èg
 = 0;

4941 
tmp
 = 
	`¥o˚ss_n_£À˘
();

4942 i‡(
tmp
)

4943 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4945 
HTML_OPTION
:

4948 
HTML_TEXTAREA
:

4949 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

4950 
tmp
 = 
	`¥o˚ss_ãxèªa
(
èg
, 
h_ív
->
limô
);

4951 i‡(
tmp
)

4952 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4953 
obuf
->
Êag
 |
RB_INTXTA
;

4954 
obuf
->
íd_èg
 = 
HTML_N_TEXTAREA
;

4956 
HTML_N_TEXTAREA
:

4957 
obuf
->
Êag
 &~
RB_INTXTA
;

4958 
obuf
->
íd_èg
 = 0;

4959 
tmp
 = 
	`¥o˚ss_n_ãxèªa
();

4960 i‡(
tmp
)

4961 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4963 
HTML_ISINDEX
:

4964 
p
 = "";

4965 
q
 = "!CURRENT_URL!";

4966 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_PROMPT
, &
p
);

4967 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ACTION
, &
q
);

4968 
tmp
 = 
	`Så√w_m_ch¨p
("<form method=getáction=\"",

4969 
	`html_quŸe
(
q
),

4971 
	`html_quŸe
(
p
),

4973 
NULL
);

4974 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

4976 
HTML_META
:

4977 
p
 = 
q
 = 
NULL
;

4978 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HTTP_EQUIV
, &
p
);

4979 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CONTENT
, &
q
);

4980 #ifde‡
USE_M17N


4981 i‡(
p
 && 
q
 && !
	`°rˇ£cmp
(p, "Content-Type") &&

4982 (
q
 = 
	`°rˇ£°r
(q, "ch¨£t")Ë!
NULL
) {

4983 
q
 += 7;

4984 
	`SKIP_BLANKS
(
q
);

4985 i‡(*
q
 == '=') {

4986 
q
++;

4987 
	`SKIP_BLANKS
(
q
);

4988 
mëa_ch¨£t
 = 
	`wc_guess_ch¨£t
(
q
, 0);

4993 i‡(
p
 && 
q
 && !
	`°rˇ£cmp
(p, "refresh")) {

4994 
ª‰esh_öãrvÆ
;

4995 
tmp
 = 
NULL
;

4996 
ª‰esh_öãrvÆ
 = 
	`gëMëaRe‰eshP¨am
(
q
, &
tmp
);

4997 i‡(
tmp
) {

4998 
q
 = 
	`html_quŸe
(
tmp
->
±r
);

4999 
tmp
 = 
	`S¥ötf
("Refresh (%d sec) <a href=\"%s\">%s</a>",

5000 
ª‰esh_öãrvÆ
, 
q
, q);

5002 i‡(
ª‰esh_öãrvÆ
 > 0)

5003 
tmp
 = 
	`S¥ötf
("Re‰esh (%d sec)", 
ª‰esh_öãrvÆ
);

5004 i‡(
tmp
) {

5005 
	`HTMLlöïroc1
(
tmp
->
±r
, 
h_ív
);

5006 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ívs
[h_ív->
ívc
].
ödít
, 0,

5007 
h_ív
->
limô
);

5008 i‡(!
is_ªdi•œy
 &&

5009 !((
obuf
->
Êag
 & 
RB_NOFRAMES
Ë&& 
RídîFøme
)) {

5010 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

5016 
HTML_BASE
:

5017 #ifde‡
USE_IMAGE


5018 
p
 = 
NULL
;

5019 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
p
)) {

5020 i‡(!
cur_ba£URL
)

5021 
cur_ba£URL
 = 
	`New
(
P¨£dURL
);

5022 
	`∑r£URL
(
p
, 
cur_ba£URL
, 
NULL
);

5025 
HTML_MAP
:

5026 
HTML_N_MAP
:

5027 
HTML_AREA
:

5029 
HTML_DEL
:

5030 
di•œyInsDñ
) {

5031 
DISPLAY_INS_DEL_SIMPLE
:

5032 
obuf
->
Êag
 |
RB_DEL
;

5034 
DISPLAY_INS_DEL_NORMAL
:

5035 
	`HTMLlöïroc1
("<U>[DEL:</U>", 
h_ív
);

5037 
DISPLAY_INS_DEL_FONTIFY
:

5038 
obuf
->
ö_°rike
++;

5039 i‡(
obuf
->
ö_°rike
 == 1) {

5040 
	`push_èg
(
obuf
, "<s>", 
HTML_S
);

5045 
HTML_N_DEL
:

5046 
di•œyInsDñ
) {

5047 
DISPLAY_INS_DEL_SIMPLE
:

5048 
obuf
->
Êag
 &~
RB_DEL
;

5050 
DISPLAY_INS_DEL_NORMAL
:

5051 
	`HTMLlöïroc1
("<U>:DEL]</U>", 
h_ív
);

5052 
DISPLAY_INS_DEL_FONTIFY
:

5053 i‡(
obuf
->
ö_°rike
 == 0)

5055 i‡(
obuf
->
ö_°rike
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_S
))

5056 
obuf
->
ö_°rike
 = 0;

5057 i‡(
obuf
->
ö_°rike
 > 0) {

5058 
obuf
->
ö_°rike
--;

5059 i‡(
obuf
->
ö_°rike
 == 0) {

5060 
	`push_èg
(
obuf
, "</s>", 
HTML_N_S
);

5066 
HTML_S
:

5067 
di•œyInsDñ
) {

5068 
DISPLAY_INS_DEL_SIMPLE
:

5069 
obuf
->
Êag
 |
RB_S
;

5071 
DISPLAY_INS_DEL_NORMAL
:

5072 
	`HTMLlöïroc1
("<U>[S:</U>", 
h_ív
);

5074 
DISPLAY_INS_DEL_FONTIFY
:

5075 
obuf
->
ö_°rike
++;

5076 i‡(
obuf
->
ö_°rike
 == 1) {

5077 
	`push_èg
(
obuf
, "<s>", 
HTML_S
);

5082 
HTML_N_S
:

5083 
di•œyInsDñ
) {

5084 
DISPLAY_INS_DEL_SIMPLE
:

5085 
obuf
->
Êag
 &~
RB_S
;

5087 
DISPLAY_INS_DEL_NORMAL
:

5088 
	`HTMLlöïroc1
("<U>:S]</U>", 
h_ív
);

5090 
DISPLAY_INS_DEL_FONTIFY
:

5091 i‡(
obuf
->
ö_°rike
 == 0)

5093 i‡(
obuf
->
ö_°rike
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_S
))

5094 
obuf
->
ö_°rike
 = 0;

5095 i‡(
obuf
->
ö_°rike
 > 0) {

5096 
obuf
->
ö_°rike
--;

5097 i‡(
obuf
->
ö_°rike
 == 0) {

5098 
	`push_èg
(
obuf
, "</s>", 
HTML_N_S
);

5103 
HTML_INS
:

5104 
di•œyInsDñ
) {

5105 
DISPLAY_INS_DEL_SIMPLE
:

5107 
DISPLAY_INS_DEL_NORMAL
:

5108 
	`HTMLlöïroc1
("<U>[INS:</U>", 
h_ív
);

5110 
DISPLAY_INS_DEL_FONTIFY
:

5111 
obuf
->
ö_ös
++;

5112 i‡(
obuf
->
ö_ös
 == 1) {

5113 
	`push_èg
(
obuf
, "<ös>", 
HTML_INS
);

5118 
HTML_N_INS
:

5119 
di•œyInsDñ
) {

5120 
DISPLAY_INS_DEL_SIMPLE
:

5122 
DISPLAY_INS_DEL_NORMAL
:

5123 
	`HTMLlöïroc1
("<U>:INS]</U>", 
h_ív
);

5125 
DISPLAY_INS_DEL_FONTIFY
:

5126 i‡(
obuf
->
ö_ös
 == 0)

5128 i‡(
obuf
->
ö_ös
 =1 && 
	`˛o£_ef„˘0
(obuf, 
HTML_INS
))

5129 
obuf
->
ö_ös
 = 0;

5130 i‡(
obuf
->
ö_ös
 > 0) {

5131 
obuf
->
ö_ös
--;

5132 i‡(
obuf
->
ö_ös
 == 0) {

5133 
	`push_èg
(
obuf
, "</ös>", 
HTML_N_INS
);

5139 
HTML_SUP
:

5140 i‡(!(
obuf
->
Êag
 & (
RB_DEL
 | 
RB_S
)))

5141 
	`HTMLlöïroc1
("^", 
h_ív
);

5143 
HTML_N_SUP
:

5145 
HTML_SUB
:

5146 i‡(!(
obuf
->
Êag
 & (
RB_DEL
 | 
RB_S
)))

5147 
	`HTMLlöïroc1
("[", 
h_ív
);

5149 
HTML_N_SUB
:

5150 i‡(!(
obuf
->
Êag
 & (
RB_DEL
 | 
RB_S
)))

5151 
	`HTMLlöïroc1
("]", 
h_ív
);

5153 
HTML_FONT
:

5154 
HTML_N_FONT
:

5155 
HTML_NOP
:

5157 
HTML_BGSOUND
:

5158 i‡(
võw_un£íobje˘
) {

5159 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
)) {

5160 
Så
 
s
;

5161 
q
 = 
	`html_quŸe
(
p
);

5162 
s
 = 
	`S¥ötf
("<A HREF=\"%s\">bgsound(%s)</A>", 
q
, q);

5163 
	`HTMLlöïroc1
(
s
->
±r
, 
h_ív
);

5167 
HTML_EMBED
:

5168 i‡(
võw_un£íobje˘
) {

5169 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
)) {

5170 
Så
 
s
;

5171 
q
 = 
	`html_quŸe
(
p
);

5172 
s
 = 
	`S¥ötf
("<A HREF=\"%s\">embed(%s)</A>", 
q
, q);

5173 
	`HTMLlöïroc1
(
s
->
±r
, 
h_ív
);

5177 
HTML_APPLET
:

5178 i‡(
võw_un£íobje˘
) {

5179 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ARCHIVE
, &
p
)) {

5180 
Så
 
s
;

5181 
q
 = 
	`html_quŸe
(
p
);

5182 
s
 = 
	`S¥ötf
("<A HREF=\"%s\">≠∂ëárchive(%s)</A>", 
q
, q);

5183 
	`HTMLlöïroc1
(
s
->
±r
, 
h_ív
);

5187 
HTML_BODY
:

5188 i‡(
võw_un£íobje˘
) {

5189 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BACKGROUND
, &
p
)) {

5190 
Så
 
s
;

5191 
q
 = 
	`html_quŸe
(
p
);

5192 
s
 = 
	`S¥ötf
("<IMG SRC=\"%s\" ALT=\"bg image(%s)\"><BR>", 
q
, q);

5193 
	`HTMLlöïroc1
(
s
->
±r
, 
h_ív
);

5196 
HTML_N_HEAD
:

5197 i‡(
obuf
->
Êag
 & 
RB_TITLE
)

5198 
	`HTMLlöïroc1
("</tôÀ>", 
h_ív
);

5199 
HTML_HEAD
:

5200 
HTML_N_BODY
:

5208 
	}
}

5210 
	#PPUSH
(
p
,
c
Ë{
ouç
[
pos
]=’);
outc
[pos]=(c);pos++;}

	)

5211 
	#PSIZE
 \

5212 i‡(
out_size
 <
pos
 + 1) { \

5213 
out_size
 = 
pos
 * 3 / 2; \

5214 
outc
 = 
	`New_Reu£
(, outc, 
out_size
); \

5215 
ouç
 = 
	`New_Reu£
(
Löïr›
, ouç, 
out_size
); \

5216 }

	)

5218 
TextLöeLi°Iãm
 *
	g_é_Õ2
;

5220 
Så


5221 
	$ãxéi°_„ed
()

5223 
TextLöe
 *
p
;

5224 i‡(
_é_Õ2
 !
NULL
) {

5225 
p
 = 
_é_Õ2
->
±r
;

5226 
_é_Õ2
 = _é_Õ2->
√xt
;

5227  
p
->
löe
;

5229  
NULL
;

5230 
	}
}

5232 
	$ex_ef˘
(
ex
)

5234 
ef„˘
 = 0;

5236 i‡(! 
ex
)

5239 i‡(
ex
 & 
PE_EX_ITALIC
)

5240 
ef„˘
 |
PE_EX_ITALIC_E
;

5242 i‡(
ex
 & 
PE_EX_INSERT
)

5243 
ef„˘
 |
PE_EX_INSERT_E
;

5245 i‡(
ex
 & 
PE_EX_STRIKE
)

5246 
ef„˘
 |
PE_EX_STRIKE_E
;

5248  
ef„˘
;

5249 
	}
}

5252 
HTMLlöïroc2body
(
Buf„r
 *
buf
, 
Så
 (*
„ed
Ë(), 
Œimô
)

5254 *
	goutc
 = 
NULL
;

5255 
Löïr›
 *
	gouç
 = 
NULL
;

5256 
	gout_size
 = 0;

5257 
Anch‹
 *
	ga_hªf
 = 
NULL
, *
	ga_img
 = NULL, *
	ga_f‹m
 = NULL;

5258 *
	gp
, *
	gq
, *
	gr
, *
	gs
, *
	gt
, *
	g°r
;

5259 
Löïr›
 
	gmode
, 
	gef„˘
, 
	gex_ef„˘
;

5260 
	gpos
;

5261 
	g∆öes
;

5262 #ifde‡
DEBUG


5263 
FILE
 *
	gdebug
 = 
NULL
;

5265 
‰ame£t
 *
	g‰ame£t_s
[
FRAMESTACK_SIZE
];

5266 
	g‰ame£t_•
 = -1;

5267 
‰ame£t_ñemít
 *
	gidFøme
 = 
NULL
;

5268 *
	gid
 = 
NULL
;

5269 
	gh£q
, 
	gf‹m_id
;

5270 
Så
 
	glöe
;

5271 *
	gídp
;

5272 
	gsymbﬁ
 = '\0';

5273 
	göã∫Æ
 = 0;

5274 
Anch‹
 **
	ga_ãxèªa
 = 
NULL
;

5275 #ifde‡
MENU_SELECT


5276 
Anch‹
 **
	ga_£À˘
 = 
NULL
;

5279 i‡(
	gout_size
 == 0) {

5280 
out_size
 = 
LINELEN
;

5281 
	goutc
 = 
NewAtom_N
(, 
out_size
);

5282 
	gouç
 = 
NewAtom_N
(
Löïr›
, 
out_size
);

5285 
	gn_ãxèªa
 = -1;

5286 i‡(!
	gmax_ãxèªa
) {

5287 
	gmax_ãxèªa
 = 
MAX_TEXTAREA
;

5288 
	gãxèªa_°r
 = 
New_N
(
Så
, 
max_ãxèªa
);

5289 
	ga_ãxèªa
 = 
New_N
(
Anch‹
 *, 
max_ãxèªa
);

5291 #ifde‡
MENU_SELECT


5292 
	gn_£À˘
 = -1;

5293 i‡(!
	gmax_£À˘
) {

5294 
	gmax_£À˘
 = 
MAX_SELECT
;

5295 
	g£À˘_›ti⁄
 = 
New_N
(
F‹mSñe˘O±i⁄
, 
max_£À˘
);

5296 
	ga_£À˘
 = 
New_N
(
Anch‹
 *, 
max_£À˘
);

5300 #ifde‡
DEBUG


5301 i‡(
	gw3m_debug
)

5302 
	gdebug
 = 
f›í
("zzzerr", "a");

5305 
	gef„˘
 = 0;

5306 
	gex_ef„˘
 = 0;

5307 
	g∆öes
 = 0;

5308 (
	glöe
 = 
„ed
()Ë!
NULL
) {

5309 #ifde‡
DEBUG


5310 i‡(
w3m_debug
) {

5311 
SåÂuts
(
löe
, 
debug
);

5312 
Âutc
('\n', 
debug
);

5315 i‡(
	gn_ãxèªa
 >0 && *(
löe
->
±r
) != '<') {

5316 
Såˇt
(
ãxèªa_°r
[
n_ãxèªa
], 
löe
);

5319 
	g¥oc_agaö
:

5320 i‡(++
∆öes
 =
Œimô
)

5322 
	gpos
 = 0;

5323 #ifde‡
ENABLE_REMOVE_TRAILINGSPACES


5324 
Såªmovëøûög•a˚s
(
löe
);

5326 
	g°r
 = 
löe
->
±r
;

5327 
	gídp
 = 
°r
 + 
löe
->
Àngth
;

5328 
	g°r
 < 
	gídp
) {

5329 
	gPSIZE
;

5330 
	gmode
 = 
gë_m˘y≥
(
°r
);

5331 i‡((
	gef„˘
 | 
ex_ef˘
(
ex_ef„˘
)Ë& 
	gPC_SYMBOL
 && *
	g°r
 != '<') {

5332 #ifde‡
USE_M17N


5333 **
buf
 = 
£t_symbﬁ
(
symbﬁ_width0
);

5334 
	gÀn
;

5336 
	gp
 = 
buf
[()
symbﬁ
];

5337 
	gÀn
 = 
gë_m˛í
(
p
);

5338 
	gmode
 = 
gë_m˘y≥
(
p
);

5339 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
p
++));

5340 i‡(--
	gÀn
) {

5341 
	gmode
 = (
mode
 & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

5342 
	gÀn
--) {

5343 
	gPSIZE
;

5344 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
p
++));

5348 
PPUSH
(
PC_ASCII
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), 
SYMBOL_BASE
 + 
symbﬁ
);

5350 
	g°r
 +
symbﬁ_width
;

5352 #ifde‡
USE_M17N


5353 i‡(
	gmode
 =
PC_CTRL
 || 
mode
 =
PC_UNDEF
) {

5355 i‡(
mode
 =
PC_CTRL
 || 
IS_INTSPACE
(*
°r
)) {

5357 
PPUSH
(
PC_ASCII
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), ' ');

5358 
	g°r
++;

5360 #ifde‡
USE_M17N


5361 i‡(
	gmode
 & 
	gPC_UNKNOWN
) {

5362 
PPUSH
(
PC_ASCII
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), ' ');

5363 
	g°r
 +
gë_m˛í
(
°r
);

5366 i‡(*
	g°r
 !'<' && *
°r
 != '&') {

5367 #ifde‡
USE_M17N


5368 
Àn
 = 
gë_m˛í
(
°r
);

5370 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
°r
++));

5371 #ifde‡
USE_M17N


5372 i‡(--
	gÀn
) {

5373 
	gmode
 = (
mode
 & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

5374 
	gÀn
--) {

5375 
	gPSIZE
;

5376 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
°r
++));

5381 i‡(*
	g°r
 == '&') {

5385 
p
 = 
gëesˇ≥cmd
(&
°r
);

5386 *
	gp
) {

5387 
	gPSIZE
;

5388 
	gmode
 = 
gë_m˘y≥
((*)
p
);

5389 #ifde‡
USE_M17N


5390 i‡(
	gmode
 =
PC_CTRL
 || 
mode
 =
PC_UNDEF
) {

5392 i‡(
mode
 =
PC_CTRL
 || 
IS_INTSPACE
(*
°r
)) {

5394 
PPUSH
(
PC_ASCII
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), ' ');

5395 
	gp
++;

5397 #ifde‡
USE_M17N


5398 i‡(
	gmode
 & 
	gPC_UNKNOWN
) {

5399 
PPUSH
(
PC_ASCII
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), ' ');

5400 
	gp
 +
gë_m˛í
(
p
);

5404 #ifde‡
USE_M17N


5405 
	gÀn
 = 
gë_m˛í
(
p
);

5407 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
p
++));

5408 #ifde‡
USE_M17N


5409 i‡(--
	gÀn
) {

5410 
	gmode
 = (
mode
 & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

5411 
	gÀn
--) {

5412 
	gPSIZE
;

5413 
PPUSH
(
mode
 | 
ef„˘
 | 
ex_ef˘
(
ex_ef„˘
), *(
p
++));

5422 
∑r£d_èg
 *
	gèg
;

5423 i‡(!(
	gèg
 = 
∑r£_èg
(&
°r
, 
TRUE
)))

5425 
	gèg
->
	gègid
) {

5426 
	gHTML_B
:

5427 
ef„˘
 |
PE_BOLD
;

5429 
	gHTML_N_B
:

5430 
ef„˘
 &~
PE_BOLD
;

5432 
	gHTML_I
:

5433 
ex_ef„˘
 |
PE_EX_ITALIC
;

5435 
	gHTML_N_I
:

5436 
ex_ef„˘
 &~
PE_EX_ITALIC
;

5438 
	gHTML_INS
:

5439 
ex_ef„˘
 |
PE_EX_INSERT
;

5441 
	gHTML_N_INS
:

5442 
ex_ef„˘
 &~
PE_EX_INSERT
;

5444 
	gHTML_U
:

5445 
ef„˘
 |
PE_UNDER
;

5447 
	gHTML_N_U
:

5448 
ef„˘
 &~
PE_UNDER
;

5450 
	gHTML_S
:

5451 
ex_ef„˘
 |
PE_EX_STRIKE
;

5453 
	gHTML_N_S
:

5454 
ex_ef„˘
 &~
PE_EX_STRIKE
;

5456 
	gHTML_A
:

5457 i‡(
ªndîFømeSë
 &&

5458 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_FRAMENAME
, &
p
)) {

5459 
	gp
 = 
uæ_quŸe_c⁄v
(
p
, 
buf
->
documít_ch¨£t
);

5460 i‡(!
	gidFøme
 || 
°rcmp
(
idFøme
->
body
->
«me
, 
p
)) {

5461 
	gidFøme
 = 
£¨ch_‰ame
(
ªndîFømeSë
, 
p
);

5462 i‡(
	gidFøme
 && idFøme->
	gbody
->
	g©å
 !
F_BODY
)

5463 
idFøme
 = 
NULL
;

5466 
	gp
 = 
r
 = 
s
 = 
NULL
;

5467 
	gq
 = 
buf
->
ba£T¨gë
;

5468 
	gt
 = "";

5469 
	gh£q
 = 0;

5470 
	gid
 = 
NULL
;

5471 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
id
)) {

5472 
	gid
 = 
uæ_quŸe_c⁄v
(
id
, 
buf
->
documít_ch¨£t
);

5473 
ªgi°îName
(
buf
, 
id
, 
cuºítLn
(buf), 
pos
);

5475 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
p
))

5476 
	gp
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
p
),

5477 
buf
->
documít_ch¨£t
);

5478 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
q
))

5479 
	gq
 = 
uæ_quŸe_c⁄v
(
q
, 
buf
->
documít_ch¨£t
);

5480 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_REFERER
, &
r
))

5481 
	gr
 = 
uæ_quŸe_c⁄v
(
r
, 
buf
->
documít_ch¨£t
);

5482 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
s
);

5483 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ACCESSKEY
, &
t
);

5484 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HSEQ
, &
h£q
);

5485 i‡(
	gh£q
 > 0)

5486 
	gbuf
->
	ghm¨kli°
 =

5487 
putHm¨kî
(
buf
->
hm¨kli°
, 
cuºítLn
(buf),

5488 
pos
, 
h£q
 - 1);

5489 i‡(
	gh£q
 < 0) {

5490 
	gh
 = -
h£q
 - 1;

5491 i‡(
	gbuf
->
	ghm¨kli°
 &&

5492 
	gh
 < 
	gbuf
->
	ghm¨kli°
->
	gnm¨k
 &&

5493 
	gbuf
->
	ghm¨kli°
->
	gm¨ks
[
h
].
	gövÆid
) {

5494 
	gbuf
->
	ghm¨kli°
->
	gm¨ks
[
h
].
	gpos
 = 
pos
;

5495 
	gbuf
->
	ghm¨kli°
->
	gm¨ks
[
h
].
	glöe
 = 
cuºítLn
(
buf
);

5496 
	gbuf
->
	ghm¨kli°
->
	gm¨ks
[
h
].
	gövÆid
 = 0;

5497 
	gh£q
 = -
h£q
;

5500 i‡(
	gid
 && 
	gidFøme
)

5501 
	gidFøme
->
	gbody
->
	g«meLi°
 =

5502 
putAnch‹
(
idFøme
->
body
->
«meLi°
, 
id
, 
NULL
,

5503 (
Anch‹
 **)
NULL
, NULL, NULL, '\0',

5504 
cuºítLn
(
buf
), 
pos
);

5505 i‡(
	gp
) {

5506 
	gef„˘
 |
PE_ANCHOR
;

5507 
	ga_hªf
 = 
ªgi°îHªf
(
buf
, 
p
, 
q
, 
r
, 
s
,

5508 *
t
, 
cuºítLn
(
buf
), 
pos
);

5509 
	ga_hªf
->
	gh£q
 = ((
h£q
 > 0) ? hseq : -hseq) - 1;

5510 
	ga_hªf
->
	g¶ave
 = (
h£q
 > 0Ë? 
FALSE
 : 
TRUE
;

5513 
	gHTML_N_A
:

5514 
ef„˘
 &~
PE_ANCHOR
;

5515 i‡(
	ga_hªf
) {

5516 
	ga_hªf
->
	gíd
.
	glöe
 = 
cuºítLn
(
buf
);

5517 
	ga_hªf
->
	gíd
.
	gpos
 = 
pos
;

5518 i‡(
	ga_hªf
->
	g°¨t
.
	glöe
 =
a_hªf
->
íd
.
löe
 &&

5519 
a_hªf
->
°¨t
.
pos
 =a_hªf->
íd
.pos) {

5520 i‡(
buf
->
hm¨kli°
 &&

5521 
a_hªf
->
h£q
 < 
buf
->
hm¨kli°
->
nm¨k
)

5522 
buf
->
hm¨kli°
->
m¨ks
[
a_hªf
->
h£q
].
övÆid
 = 1;

5523 
	ga_hªf
->
	gh£q
 = -1;

5525 
	ga_hªf
 = 
NULL
;

5529 
	gHTML_LINK
:

5530 
addLök
(
buf
, 
èg
);

5533 
	gHTML_IMG_ALT
:

5534 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
)) {

5535 #ifde‡
USE_IMAGE


5536 
	gw
 = -1, 
	gh
 = -1, 
	gi£q
 = 0, 
	gism≠
 = 0;

5537 
	gxoff£t
 = 0, 
	gyoff£t
 = 0, 
	gt›
 = 0, 
	gbŸtom
 = 0;

5538 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HSEQ
, &
i£q
);

5539 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
w
);

5540 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HEIGHT
, &
h
);

5541 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_XOFFSET
, &
xoff£t
);

5542 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_YOFFSET
, &
yoff£t
);

5543 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TOP_MARGIN
, &
t›
);

5544 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BOTTOM_MARGIN
, &
bŸtom
);

5545 i‡(
∑r£dèg_exi°s
(
èg
, 
ATTR_ISMAP
))

5546 
	gism≠
 = 1;

5547 
	gq
 = 
NULL
;

5548 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_USEMAP
, &
q
);

5549 i‡(
	gi£q
 > 0) {

5550 
	gbuf
->
	gim¨kli°
 = 
putHm¨kî
(
buf
->
im¨kli°
,

5551 
cuºítLn
(
buf
), 
pos
,

5552 
i£q
 - 1);

5555 
	gs
 = 
NULL
;

5556 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
s
);

5557 
	gp
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
p
),

5558 
buf
->
documít_ch¨£t
);

5559 
	ga_img
 = 
ªgi°îImg
(
buf
, 
p
, 
s
, 
cuºítLn
(buf), 
pos
);

5560 #ifde‡
USE_IMAGE


5561 
	ga_img
->
	gh£q
 = 
i£q
;

5562 
	ga_img
->
	gimage
 = 
NULL
;

5563 i‡(
	gi£q
 > 0) {

5564 
P¨£dURL
 
	gu
;

5565 
Image
 *
	gimage
;

5567 
∑r£URL2
(
a_img
->
uæ
, &
u
, 
cur_ba£URL
);

5568 
	ga_img
->
	gimage
 = 
image
 = 
New
(
Image
);

5569 
	gimage
->
	guæ
 = 
∑r£dURL2Så
(&
u
)->
±r
;

5570 i‡(!
uncom¥es£d_fûe_ty≥
(
u
.
fûe
, &
image
->
ext
))

5571 
	gimage
->
	gext
 = 
fûíame_exãnsi⁄
(
u
.
fûe
, 
TRUE
);

5572 
	gimage
->
	gˇche
 = 
NULL
;

5573 
	gimage
->
	gwidth
 =

5574 (
w
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE : w;

5575 
	gimage
->
	gheight
 =

5576 (
h
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE : h;

5577 
	gimage
->
	gxoff£t
 = 
xoff£t
;

5578 
	gimage
->
	gyoff£t
 = 
yoff£t
;

5579 
	gimage
->
	gy
 = 
cuºítLn
(
buf
Ë- 
t›
;

5580 i‡(
	gimage
->
	gxoff£t
 < 0 && 
	gpos
 == 0)

5581 
image
->
xoff£t
 = 0;

5582 i‡(
	gimage
->
	gyoff£t
 < 0 && image->
	gy
 == 1)

5583 
image
->
yoff£t
 = 0;

5584 
	gimage
->
	grows
 = 1 + 
t›
 + 
bŸtom
;

5585 
	gimage
->
	gm≠
 = 
q
;

5586 
	gimage
->
	gism≠
 = 
ism≠
;

5587 
	gimage
->
	gtouch
 = 0;

5588 
	gimage
->
	gˇche
 = 
gëImage
(
image
, 
cur_ba£URL
,

5589 
IMG_FLAG_SKIP
);

5591 i‡(
	gi£q
 < 0) {

5592 
Buf„rPoöt
 *
	gpo
 = 
buf
->
im¨kli°
->
m¨ks
 - 
i£q
 - 1;

5593 
Anch‹
 *
	ga
 = 
ªåõveAnch‹
(
buf
->
img
,

5594 
po
->
löe
,Öo->
pos
);

5595 i‡(
	ga
) {

5596 
	ga_img
->
	guæ
 = 
a
->
uæ
;

5597 
	ga_img
->
	gimage
 = 
a
->
image
;

5602 
	gef„˘
 |
PE_IMAGE
;

5604 
	gHTML_N_IMG_ALT
:

5605 
ef„˘
 &~
PE_IMAGE
;

5606 i‡(
	ga_img
) {

5607 
	ga_img
->
	gíd
.
	glöe
 = 
cuºítLn
(
buf
);

5608 
	ga_img
->
	gíd
.
	gpos
 = 
pos
;

5610 
	ga_img
 = 
NULL
;

5612 
	gHTML_INPUT_ALT
:

5614 
F‹mLi°
 *
f‹m
;

5615 
	gt›
 = 0, 
	gbŸtom
 = 0;

5616 
	gãxèª™umbî
 = -1;

5617 #ifde‡
MENU_SELECT


5618 
	g£À˘numbî
 = -1;

5620 
	gh£q
 = 0;

5621 
	gf‹m_id
 = -1;

5623 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HSEQ
, &
h£q
);

5624 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_FID
, &
f‹m_id
);

5625 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TOP_MARGIN
, &
t›
);

5626 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_BOTTOM_MARGIN
, &
bŸtom
);

5627 i‡(
	gf‹m_id
 < 0 || f‹m_id > 
	gf‹m_max
 || 
	gf‹ms
 =
NULL
)

5629 
	gf‹m
 = 
f‹ms
[
f‹m_id
];

5630 i‡(
	gh£q
 > 0) {

5631 
	ghpos
 = 
pos
;

5632 i‡(*
	g°r
 == '[')

5633 
hpos
++;

5634 
	gbuf
->
	ghm¨kli°
 =

5635 
putHm¨kî
(
buf
->
hm¨kli°
, 
cuºítLn
(buf),

5636 
hpos
, 
h£q
 - 1);

5638 i‡(!
	gf‹m
->
	gèrgë
)

5639 
	gf‹m
->
	gèrgë
 = 
buf
->
ba£T¨gë
;

5640 i‡(
	ga_ãxèªa
 &&

5641 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TEXTAREANUMBER
,

5642 &
ãxèª™umbî
)) {

5643 i‡(
	gãxèª™umbî
 >
max_ãxèªa
) {

5644 
max_ãxèªa
 = 2 * 
ãxèª™umbî
;

5645 
	gãxèªa_°r
 = 
New_Reu£
(
Så
, 
ãxèªa_°r
,

5646 
max_ãxèªa
);

5647 
	ga_ãxèªa
 = 
New_Reu£
(
Anch‹
 *, 
a_ãxèªa
,

5648 
max_ãxèªa
);

5651 #ifde‡
MENU_SELECT


5652 i‡(
	ga_£À˘
 &&

5653 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SELECTNUMBER
,

5654 &
£À˘numbî
)) {

5655 i‡(
	g£À˘numbî
 >
max_£À˘
) {

5656 
max_£À˘
 = 2 * 
£À˘numbî
;

5657 
	g£À˘_›ti⁄
 = 
New_Reu£
(
F‹mSñe˘O±i⁄
,

5658 
£À˘_›ti⁄
,

5659 
max_£À˘
);

5660 
	ga_£À˘
 = 
New_Reu£
(
Anch‹
 *, 
a_£À˘
,

5661 
max_£À˘
);

5665 
	ga_f‹m
 =

5666 
ªgi°îF‹m
(
buf
, 
f‹m
, 
èg
, 
cuºítLn
(buf), 
pos
);

5667 i‡(
	ga_ãxèªa
 && 
	gãxèª™umbî
 >= 0)

5668 
a_ãxèªa
[
ãxèª™umbî
] = 
a_f‹m
;

5669 #ifde‡
MENU_SELECT


5670 i‡(
	ga_£À˘
 && 
	g£À˘numbî
 >= 0)

5671 
a_£À˘
[
£À˘numbî
] = 
a_f‹m
;

5673 i‡(
	ga_f‹m
) {

5674 
	ga_f‹m
->
	gh£q
 = 
h£q
 - 1;

5675 
	ga_f‹m
->
	gy
 = 
cuºítLn
(
buf
Ë- 
t›
;

5676 
	ga_f‹m
->
	grows
 = 1 + 
t›
 + 
bŸtom
;

5677 i‡(!
∑r£dèg_exi°s
(
èg
, 
ATTR_NO_EFFECT
))

5678 
	gef„˘
 |
PE_FORM
;

5682 
	gHTML_N_INPUT_ALT
:

5683 
ef„˘
 &~
PE_FORM
;

5684 i‡(
	ga_f‹m
) {

5685 
	ga_f‹m
->
	gíd
.
	glöe
 = 
cuºítLn
(
buf
);

5686 
	ga_f‹m
->
	gíd
.
	gpos
 = 
pos
;

5687 i‡(
	ga_f‹m
->
	g°¨t
.
	glöe
 =
a_f‹m
->
íd
.
löe
 &&

5688 
a_f‹m
->
°¨t
.
pos
 =a_f‹m->
íd
.pos)

5689 
a_f‹m
->
h£q
 = -1;

5691 
	ga_f‹m
 = 
NULL
;

5693 
	gHTML_MAP
:

5694 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
p
)) {

5695 
M≠Li°
 *
	gm
 = 
New
(MapList);

5696 
	gm
->
	g«me
 = 
Så√w_ch¨p
(
p
);

5697 
	gm
->
	g¨ó
 = 
√wGíîÆLi°
();

5698 
	gm
->
	g√xt
 = 
buf
->
m≠li°
;

5699 
	gbuf
->
	gm≠li°
 = 
m
;

5702 
	gHTML_N_MAP
:

5705 
	gHTML_AREA
:

5706 i‡(
buf
->
m≠li°
 =
NULL
)

5708 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
p
)) {

5709 
M≠Aªa
 *
	ga
;

5710 
	gp
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
p
),

5711 
buf
->
documít_ch¨£t
);

5712 
	gt
 = 
NULL
;

5713 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
t
);

5714 
	gq
 = "";

5715 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALT
, &
q
);

5716 
	gr
 = 
NULL
;

5717 
	gs
 = 
NULL
;

5718 #ifde‡
USE_IMAGE


5719 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SHAPE
, &
r
);

5720 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_COORDS
, &
s
);

5722 
	ga
 = 
√wM≠Aªa
(
p
, 
t
, 
q
, 
r
, 
s
);

5723 
pushVÆue
(
buf
->
m≠li°
->
¨ó
, (*)
a
);

5726 
	gHTML_FRAMESET
:

5727 
‰ame£t_•
++;

5728 i‡(
	g‰ame£t_•
 >
FRAMESTACK_SIZE
)

5730 
	g‰ame£t_s
[
‰ame£t_•
] = 
√wFømeSë
(
èg
);

5731 i‡(
	g‰ame£t_s
[
‰ame£t_•
] =
NULL
)

5733 i‡(
	g‰ame£t_•
 == 0) {

5734 i‡(
buf
->
‰ame£t
 =
NULL
) {

5735 
buf
->
‰ame£t
 = 
‰ame£t_s
[
‰ame£t_•
];

5738 
pushFømeTªe
(&(
buf
->
‰ameQ
),

5739 
‰ame£t_s
[
‰ame£t_•
], 
NULL
);

5742 
addFømeSëEÀmít
(
‰ame£t_s
[
‰ame£t_•
 - 1],

5743 *(
‰ame£t_ñemít
 *)

5744 &
‰ame£t_s
[
‰ame£t_•
]);

5746 
	gHTML_N_FRAMESET
:

5747 i‡(
‰ame£t_•
 >= 0)

5748 
‰ame£t_•
--;

5750 
	gHTML_FRAME
:

5751 i‡(
‰ame£t_•
 >0 && føme£t_• < 
FRAMESTACK_SIZE
) {

5752 
‰ame£t_ñemít
 
ñemít
;

5754 
	gñemít
.
	gbody
 = 
√wFøme
(
èg
, 
buf
);

5755 
addFømeSëEÀmít
(
‰ame£t_s
[
‰ame£t_•
], 
ñemít
);

5758 
	gHTML_BASE
:

5759 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
p
)) {

5760 
	gp
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
p
),

5761 
buf
->
documít_ch¨£t
);

5762 i‡(!
	gbuf
->
	gba£URL
)

5763 
	gbuf
->
	gba£URL
 = 
New
(
P¨£dURL
);

5764 
∑r£URL
(
p
, 
buf
->
ba£URL
, 
NULL
);

5766 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
p
))

5767 
	gbuf
->
	gba£T¨gë
 =

5768 
uæ_quŸe_c⁄v
(
p
, 
buf
->
documít_ch¨£t
);

5770 
	gHTML_META
:

5771 
p
 = 
q
 = 
NULL
;

5772 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HTTP_EQUIV
, &
p
);

5773 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CONTENT
, &
q
);

5774 i‡(
	gp
 && 
	gq
 && !
°rˇ£cmp
(
p
, "ª‰esh"Ë&& 
	gMëaRe‰esh
) {

5775 
Så
 
	gtmp
 = 
NULL
;

5776 
	gª‰esh_öãrvÆ
 = 
gëMëaRe‰eshP¨am
(
q
, &
tmp
);

5777 #ifde‡
USE_ALARM


5778 i‡(
	gtmp
) {

5779 
	gp
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
tmp
->
±r
),

5780 
buf
->
documít_ch¨£t
);

5781 
	gbuf
->
	gevít
 = 
£tAœrmEvít
(
buf
->
evít
,

5782 
ª‰esh_öãrvÆ
,

5783 
AL_IMPLICIT_ONCE
,

5784 
FUNCNAME_g‹URL
, 
p
);

5786 i‡(
	gª‰esh_öãrvÆ
 > 0)

5787 
	gbuf
->
	gevít
 = 
£tAœrmEvít
(
buf
->
evít
,

5788 
ª‰esh_öãrvÆ
,

5789 
AL_IMPLICIT
,

5790 
FUNCNAME_ªlﬂd
, 
NULL
);

5792 i‡(
	gtmp
 && 
	gª‰esh_öãrvÆ
 == 0) {

5793 
p
 = 
uæ_quŸe_c⁄v
(
ªmove_•a˚
(
tmp
->
±r
),

5794 
buf
->
documít_ch¨£t
);

5795 
pushEvít
(
FUNCNAME_g‹URL
, 
p
);

5800 
	gHTML_INTERNAL
:

5801 
öã∫Æ
 = 
HTML_INTERNAL
;

5803 
	gHTML_N_INTERNAL
:

5804 
öã∫Æ
 = 
HTML_N_INTERNAL
;

5806 
	gHTML_FORM_INT
:

5807 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_FID
, &
f‹m_id
))

5808 
¥o˚ss_f‹m_öt
(
èg
, 
f‹m_id
);

5810 
	gHTML_TEXTAREA_INT
:

5811 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TEXTAREANUMBER
,

5812 &
n_ãxèªa
)

5813 && 
	gn_ãxèªa
 < 
	gmax_ãxèªa
) {

5814 
	gãxèªa_°r
[
n_ãxèªa
] = 
Så√w
();

5817 
	gn_ãxèªa
 = -1;

5819 
	gHTML_N_TEXTAREA_INT
:

5820 i‡(
n_ãxèªa
 >= 0) {

5821 
F‹mIãmLi°
 *
ôem
 =

5822 (
F‹mIãmLi°
 *)
a_ãxèªa
[
n_ãxèªa
]->
uæ
;

5823 
	gôem
->
	göô_vÆue
 = 
ôem
->
vÆue
 =

5824 
ãxèªa_°r
[
n_ãxèªa
];

5827 #ifde‡
MENU_SELECT


5828 
	gHTML_SELECT_INT
:

5829 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SELECTNUMBER
, &
n_£À˘
)

5830 && 
	gn_£À˘
 < 
	gmax_£À˘
) {

5831 
	g£À˘_›ti⁄
[
n_£À˘
].
	gfú°
 = 
NULL
;

5832 
	g£À˘_›ti⁄
[
n_£À˘
].
	gœ°
 = 
NULL
;

5835 
	gn_£À˘
 = -1;

5837 
	gHTML_N_SELECT_INT
:

5838 i‡(
n_£À˘
 >= 0) {

5839 
F‹mIãmLi°
 *
ôem
 =

5840 (
F‹mIãmLi°
 *)
a_£À˘
[
n_£À˘
]->
uæ
;

5841 
	gôem
->
	g£À˘_›ti⁄
 = 
£À˘_›ti⁄
[
n_£À˘
].
fú°
;

5842 
choo£Sñe˘O±i⁄
(
ôem
, iãm->
£À˘_›ti⁄
);

5843 
	gôem
->
	göô_£À˘ed
 = 
ôem
->
£À˘ed
;

5844 
	gôem
->
	göô_vÆue
 = 
ôem
->
vÆue
;

5845 
	gôem
->
	göô_œbñ
 = 
ôem
->
œbñ
;

5848 
	gHTML_OPTION_INT
:

5849 i‡(
n_£À˘
 >= 0) {

5850 
£À˘ed
;

5851 
	gq
 = "";

5852 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_LABEL
, &
q
);

5853 
	gp
 = 
q
;

5854 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALUE
, &
p
);

5855 
	g£À˘ed
 = 
∑r£dèg_exi°s
(
èg
, 
ATTR_SELECTED
);

5856 
addSñe˘O±i⁄
(&
£À˘_›ti⁄
[
n_£À˘
],

5857 
Så√w_ch¨p
(
p
), Så√w_ch¨p(
q
),

5858 
£À˘ed
);

5862 
	gHTML_TITLE_ALT
:

5863 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
p
))

5864 
	gbuf
->
	gbuf„∫ame
 = 
html_unquŸe
(
p
);

5866 
	gHTML_SYMBOL
:

5867 
ef„˘
 |
PC_SYMBOL
;

5868 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
))

5869 
	gsymbﬁ
 = ()
©oi
(
p
);

5871 
	gHTML_N_SYMBOL
:

5872 
ef„˘
 &~
PC_SYMBOL
;

5875 #ifdef 
ID_EXT


5876 
	gid
 = 
NULL
;

5877 i‡(
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ID
, &
id
)) {

5878 
	gid
 = 
uæ_quŸe_c⁄v
(
id
, 
buf
->
documít_ch¨£t
);

5879 
ªgi°îName
(
buf
, 
id
, 
cuºítLn
(buf), 
pos
);

5881 i‡(
	gªndîFømeSë
 &&

5882 
∑r£dèg_gë_vÆue
(
èg
, 
ATTR_FRAMENAME
, &
p
)) {

5883 
	gp
 = 
uæ_quŸe_c⁄v
(
p
, 
buf
->
documít_ch¨£t
);

5884 i‡(!
	gidFøme
 || 
°rcmp
(
idFøme
->
body
->
«me
, 
p
)) {

5885 
	gidFøme
 = 
£¨ch_‰ame
(
ªndîFømeSë
, 
p
);

5886 i‡(
	gidFøme
 && idFøme->
	gbody
->
	g©å
 !
F_BODY
)

5887 
idFøme
 = 
NULL
;

5890 i‡(
	gid
 && 
	gidFøme
)

5891 
	gidFøme
->
	gbody
->
	g«meLi°
 =

5892 
putAnch‹
(
idFøme
->
body
->
«meLi°
, 
id
, 
NULL
,

5893 (
Anch‹
 **)
NULL
, NULL, NULL, '\0',

5894 
cuºítLn
(
buf
), 
pos
);

5899 i‡(!
	göã∫Æ
)

5900 
add√wlöe
(
buf
, 
outc
, 
ouç
, 
NULL
, 
pos
, -1, 
∆öes
);

5901 i‡(
	göã∫Æ
 =
HTML_N_INTERNAL
)

5902 
öã∫Æ
 = 0;

5903 i‡(
	g°r
 !
ídp
) {

5904 
löe
 = 
Såsub°r
÷öe, 
°r
 -Üöe->
±r
, 
ídp
 - str);

5905 
	g¥oc_agaö
;

5908 #ifde‡
DEBUG


5909 i‡(
	gw3m_debug
)

5910 
f˛o£
(
debug
);

5912 
	gf‹m_id
 = 1; f‹m_id <
f‹m_max
; form_id++)

5913 
	gf‹ms
[
f‹m_id
]->
	g√xt
 = 
f‹ms
[form_id - 1];

5914 
	gbuf
->
	gf‹mli°
 = (
f‹m_max
 >0Ë? 
f‹ms
[f‹m_max] : 
NULL
;

5915 i‡(
	gn_ãxèªa
)

5916 
addMu…úowsF‹m
(
buf
, buf->
f‹môem
);

5917 #ifde‡
USE_IMAGE


5918 
addMu…úowsImg
(
buf
, buf->
img
);

5923 
	$addLök
(
Buf„r
 *
buf
, 
∑r£d_èg
 *
èg
)

5925 *
hªf
 = 
NULL
, *
tôÀ
 = NULL, *
˘y≥
 = NULL, *
ªl
 = NULL, *
ªv
 = NULL;

5926 
ty≥
 = 
LINK_TYPE_NONE
;

5927 
LökLi°
 *
l
;

5929 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
hªf
);

5930 i‡(
hªf
)

5931 
hªf
 = 
	`uæ_quŸe_c⁄v
(
	`ªmove_•a˚
(hªf), 
buf
->
documít_ch¨£t
);

5932 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TITLE
, &
tôÀ
);

5933 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
˘y≥
);

5934 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_REL
, &
ªl
);

5935 i‡(
ªl
 !
NULL
) {

5937 
ty≥
 = 
LINK_TYPE_REL
;

5938 i‡(
tôÀ
 =
NULL
)

5939 
tôÀ
 = 
ªl
;

5941 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_REV
, &
ªv
);

5942 i‡(
ªv
 !
NULL
) {

5944 
ty≥
 = 
LINK_TYPE_REV
;

5945 i‡(
tôÀ
 =
NULL
)

5946 
tôÀ
 = 
ªv
;

5949 
l
 = 
	`New
(
LökLi°
);

5950 
l
->
uæ
 = 
hªf
;

5951 
l
->
tôÀ
 =Åitle;

5952 
l
->
˘y≥
 = ctype;

5953 
l
->
ty≥
 =Åype;

5954 
l
->
√xt
 = 
NULL
;

5955 i‡(
buf
->
lökli°
) {

5956 
LökLi°
 *
i
;

5957 
i
 = 
buf
->
lökli°
; i->
√xt
; i = i->next) ;

5958 
i
->
√xt
 = 
l
;

5961 
buf
->
lökli°
 = 
l
;

5962 
	}
}

5965 
	$HTMLlöïroc2
(
Buf„r
 *
buf
, 
TextLöeLi°
 *
é
)

5967 
_é_Õ2
 = 
é
->
fú°
;

5968 
	`HTMLlöïroc2body
(
buf
, 
ãxéi°_„ed
, -1);

5969 
	}
}

5971 
I≈utSåóm
 
	g_fûe_Õ2
;

5973 
Så


5974 
	$fûe_„ed
()

5976 
Så
 
s
;

5977 
s
 = 
	`SåISgës
(
_fûe_Õ2
);

5978 i‡(
s
->
Àngth
 == 0) {

5979 
	`IS˛o£
(
_fûe_Õ2
);

5980  
NULL
;

5982  
s
;

5983 
	}
}

5986 
	$HTMLlöïroc3
(
Buf„r
 *
buf
, 
I≈utSåóm
 
°ªam
)

5988 
_fûe_Õ2
 = 
°ªam
;

5989 
	`HTMLlöïroc2body
(
buf
, 
fûe_„ed
, -1);

5990 
	}
}

5993 
	$¥oc_esˇ≥
(
ªadbuf„r
 *
obuf
, **
°r_ªtu∫
)

5995 *
°r
 = *
°r_ªtu∫
, *
e°r
;

5996 
ech
 = 
	`gëesˇ≥ch¨
(
°r_ªtu∫
);

5997 
width
, 
n_add
 = *
°r_ªtu∫
 - 
°r
;

5998 
Löïr›
 
mode
 = 
PC_ASCII
;

6000 i‡(
ech
 < 0) {

6001 *
°r_ªtu∫
 = 
°r
;

6002 
	`¥oc_mch¨
(
obuf
, obuf->
Êag
 & 
RB_SPECIAL
, 1, 
°r_ªtu∫
, 
PC_ASCII
);

6005 
mode
 = 
	`IS_CNTRL
(
ech
Ë? 
PC_CTRL
 : 
PC_ASCII
;

6007 
e°r
 = 
	`c⁄v_ítôy
(
ech
);

6008 
	`check_bªakpoöt
(
obuf
, obuf->
Êag
 & 
RB_SPECIAL
, 
e°r
);

6009 
width
 = 
	`gë_°rwidth
(
e°r
);

6010 i‡(
width
 =1 && 
ech
 =()*
e°r
 &&

6011 
ech
 != '&' &&Éch != '<' &&Éch != '>') {

6012 i‡(
	`IS_CNTRL
(
ech
))

6013 
mode
 = 
PC_CTRL
;

6014 
	`push_ch¨p
(
obuf
, 
width
, 
e°r
, 
mode
);

6017 
	`push_nch¨s
(
obuf
, 
width
, 
°r
, 
n_add
, 
mode
);

6018 
	`£t_¥evch¨
(
obuf
->
¥evch¨
, 
e°r
, 
	`°æí
(estr));

6019 
obuf
->
¥ev_˘y≥
 = 
mode
;

6020 
	}
}

6024 
	$√ed_Êushlöe
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
,

6025 
Löïr›
 
mode
)

6027 
ch
;

6029 i‡(
obuf
->
Êag
 & 
RB_PRE_INT
) {

6030 i‡(
obuf
->
pos
 > 
h_ív
->
limô
)

6036 
ch
 = 
	`Såœ°ch¨
(
obuf
->
löe
);

6038 i‡(
ch
 == ' ')

6041 i‡(
obuf
->
pos
 > 
h_ív
->
limô
)

6045 
	}
}

6048 
	$èbÀ_width
(
html_„ed_ívú⁄
 *
h_ív
, 
èbÀ_Àvñ
)

6050 
width
;

6051 i‡(
èbÀ_Àvñ
 < 0)

6053 
width
 = 
èbÀs
[
èbÀ_Àvñ
]->
tŸÆ_width
;

6054 i‡(
èbÀ_Àvñ
 > 0 || 
width
 > 0)

6055  
width
;

6056  
h_ív
->
limô
 - h_ív->
ívs
[h_ív->
ívc
].
ödít
;

6057 
	}
}

6061 
	$HTMLlöïroc0
(*
löe
, 
html_„ed_ívú⁄
 *
h_ív
, 
öã∫Æ
)

6063 
Löïr›
 
mode
;

6064 
cmd
;

6065 
ªadbuf„r
 *
obuf
 = 
h_ív
->obuf;

6066 
ödít
, 
dñè
;

6067 
∑r£d_èg
 *
èg
;

6068 
Så
 
tokbuf
;

6069 
èbÀ
 *
tbl
 = 
NULL
;

6070 
èbÀ_mode
 *
tbl_mode
 = 
NULL
;

6071 
tbl_width
 = 0;

6072 #ifde‡
USE_M17N


6073 
is_h™gul
, 
¥ev_is_h™gul
 = 0;

6076 #ifde‡
DEBUG


6077 i‡(
w3m_debug
) {

6078 
FILE
 *
f
 = 
	`f›í
("zzzproc1", "a");

6079 
	`Ârötf
(
f
, "%c%c%c%c",

6080 (
obuf
->
Êag
 & 
RB_PREMODE
) ? 'P' : ' ',

6081 (
obuf
->
èbÀ_Àvñ
 >= 0) ? 'T' : ' ',

6082 (
obuf
->
Êag
 & 
RB_INTXTA
) ? 'X' : ' ',

6083 (
obuf
->
Êag
 & (
RB_SCRIPT
 | 
RB_STYLE
)) ? 'S' : ' ');

6084 
	`Ârötf
(
f
, "HTMLlöïroc1(\"%s\",%d,%lx)\n", 
löe
, 
h_ív
->
limô
,

6085 ()
h_ív
);

6086 
	`f˛o£
(
f
);

6090 
tokbuf
 = 
	`Så√w
();

6092 
èbÀ_°¨t
:

6093 i‡(
obuf
->
èbÀ_Àvñ
 >= 0) {

6094 
Àvñ
 = 
	`mö
(
obuf
->
èbÀ_Àvñ
, 
MAX_TABLE
 - 1);

6095 
tbl
 = 
èbÀs
[
Àvñ
];

6096 
tbl_mode
 = &
èbÀ_mode
[
Àvñ
];

6097 
tbl_width
 = 
	`èbÀ_width
(
h_ív
, 
Àvñ
);

6100 *
löe
 != '\0') {

6101 *
°r
, *
p
;

6102 
is_èg
 = 
FALSE
;

6103 
¥e_mode
 = (
obuf
->
èbÀ_Àvñ
 >0Ë? 
tbl_mode
->pre_mode :

6104 
obuf
->
Êag
;

6105 
íd_èg
 = (
obuf
->
èbÀ_Àvñ
 >0Ë? 
tbl_mode
->end_tag :

6106 
obuf
->
íd_èg
;

6108 i‡(*
löe
 ='<' || 
obuf
->
°©us
 !
R_ST_NORMAL
) {

6112 i‡(
obuf
->
°©us
 =
R_ST_EOL
)

6113 
obuf
->
°©us
 = 
R_ST_NORMAL
;

6115 
	`ªad_tokí
(
h_ív
->
ègbuf
, &
löe
, &
obuf
->
°©us
,

6116 
¥e_mode
 & 
RB_PREMODE
, 
obuf
->
°©us
 !
R_ST_NORMAL
);

6117 i‡(
obuf
->
°©us
 !
R_ST_NORMAL
)

6120 i‡(
h_ív
->
ègbuf
->
Àngth
 == 0)

6122 
°r
 = 
h_ív
->
ègbuf
->
±r
;

6123 i‡(*
°r
 == '<') {

6124 i‡(
°r
[1] && 
	`REALLY_THE_BEGINNING_OF_A_TAG
(str))

6125 
is_èg
 = 
TRUE
;

6126 i‡(!(
¥e_mode
 & (
RB_PLAIN
 | 
RB_INTXTA
 | 
RB_INSELECT
 |

6127 
RB_SCRIPT
 | 
RB_STYLE
 | 
RB_TITLE
))) {

6128 
löe
 = 
	`Så√w_m_ch¨p
(
°r
 + 1,Üöe, 
NULL
)->
±r
;

6129 
°r
 = "&lt;";

6134 
	`ªad_tokí
(
tokbuf
, &
löe
, &
obuf
->
°©us
, 
¥e_mode
 & 
RB_PREMODE
, 0);

6135 i‡(
obuf
->
°©us
 !
R_ST_NORMAL
)

6136 
obuf
->
°©us
 = 
R_ST_NORMAL
;

6137 
°r
 = 
tokbuf
->
±r
;

6140 i‡(
¥e_mode
 & (
RB_PLAIN
 | 
RB_INTXTA
 | 
RB_INSELECT
 | 
RB_SCRIPT
 |

6141 
RB_STYLE
 | 
RB_TITLE
)) {

6142 i‡(
is_èg
) {

6143 
p
 = 
°r
;

6144 i‡((
èg
 = 
	`∑r£_èg
(&
p
, 
öã∫Æ
))) {

6145 i‡(
èg
->
ègid
 =
íd_èg
 ||

6146 (
¥e_mode
 & 
RB_INSELECT
 && 
èg
->
ègid
 =
HTML_N_FORM
)

6147 || (
¥e_mode
 & 
RB_TITLE


6148 && (
èg
->
ègid
 =
HTML_N_HEAD


6149 || 
èg
->
ègid
 =
HTML_BODY
)))

6150 
¥oc_n‹mÆ
;

6154 i‡(
¥e_mode
 & 
RB_TITLE
) {

6155 
	`„ed_tôÀ
(
°r
);

6159 i‡(
¥e_mode
 & 
RB_INSELECT
) {

6160 i‡(
obuf
->
èbÀ_Àvñ
 >= 0)

6161 
¥oc_n‹mÆ
;

6162 
	`„ed_£À˘
(
°r
);

6165 i‡(
is_èg
) {

6166 i‡(
	`°∫cmp
(
°r
, "<!--", 4Ë&& (
p
 = 
	`°rchr
(str + 1, '<'))) {

6167 
°r
 = 
	`Så√w_ch¨p_n
(°r, 
p
 - så)->
±r
;

6168 
löe
 = 
	`Så√w_m_ch¨p
(
p
,Üöe, 
NULL
)->
±r
;

6170 
is_èg
 = 
FALSE
;

6172 i‡(
obuf
->
èbÀ_Àvñ
 >= 0)

6173 
¥oc_n‹mÆ
;

6175 i‡(
¥e_mode
 & 
RB_INTXTA
) {

6176 
	`„ed_ãxèªa
(
°r
);

6180 i‡(
¥e_mode
 & 
RB_SCRIPT
)

6183 i‡(
¥e_mode
 & 
RB_STYLE
)

6187 
¥oc_n‹mÆ
:

6188 i‡(
obuf
->
èbÀ_Àvñ
 >= 0) {

6194 
	`„ed_èbÀ
(
tbl
, 
°r
, 
tbl_mode
, 
tbl_width
, 
öã∫Æ
)) {

6197 
obuf
->
èbÀ_Àvñ
--;

6198 i‡(
obuf
->
èbÀ_Àvñ
 >
MAX_TABLE
 - 1)

6200 
	`íd_èbÀ
(
tbl
);

6201 i‡(
obuf
->
èbÀ_Àvñ
 >= 0) {

6202 
èbÀ
 *
tbl0
 = 
èbÀs
[
obuf
->
èbÀ_Àvñ
];

6203 
°r
 = 
	`S¥ötf
("<èbÀ_Æàtid=%d>", 
tbl0
->
¡abÀ
)->
±r
;

6204 
	`pushTabÀ
(
tbl0
, 
tbl
);

6205 
tbl
 = 
tbl0
;

6206 
tbl_mode
 = &
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
];

6207 
tbl_width
 = 
	`èbÀ_width
(
h_ív
, 
obuf
->
èbÀ_Àvñ
);

6208 
	`„ed_èbÀ
(
tbl
, 
°r
, 
tbl_mode
, 
tbl_width
, 
TRUE
);

6212 i‡(
obuf
->
Êag
 & 
RB_DEL
)

6215 i‡(
tbl
->
v•a˚
 > 0 && !(
obuf
->
Êag
 & 
RB_IGNORE_P
)) {

6216 
ödít
 = 
h_ív
->
ívs
[h_ív->
ívc
].indent;

6217 
	`Êushlöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

6218 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

6220 
	`ßve_f⁄ãf„˘
(
h_ív
, 
obuf
);

6221 
	`ªndîTabÀ
(
tbl
, 
tbl_width
, 
h_ív
);

6222 
	`ª°‹e_f⁄ãf„˘
(
h_ív
, 
obuf
);

6223 
obuf
->
Êag
 &~
RB_IGNORE_P
;

6224 i‡(
tbl
->
v•a˚
 > 0) {

6225 
ödít
 = 
h_ív
->
ívs
[h_ív->
ívc
].indent;

6226 
	`do_bœnklöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

6227 
obuf
->
Êag
 |
RB_IGNORE_P
;

6229 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

6239 i‡(
is_èg
) {

6241 i‡((
èg
 = 
	`∑r£_èg
(&
°r
, 
öã∫Æ
)))

6242 
cmd
 = 
èg
->
ègid
;

6246 i‡(
	`HTMLèg¥oc1
(
èg
, 
h_ív
) == 0) {

6248 i‡(
	`∑r£dèg_√ed_ªc⁄°ru˘
(
èg
))

6249 
h_ív
->
ègbuf
 = 
	`∑r£dèg2°r
(
èg
);

6250 
	`push_èg
(
obuf
, 
h_ív
->
ègbuf
->
±r
, 
cmd
);

6252 #ifde‡
ID_EXT


6254 
	`¥o˚ss_id©å
(
obuf
, 
cmd
, 
èg
);

6257 
obuf
->
bp
.
öô_Êag
 = 1;

6258 
	`˛ór_ign‹e_p_Êag
(
cmd
, 
obuf
);

6259 i‡(
cmd
 =
HTML_TABLE
)

6260 
èbÀ_°¨t
;

6265 i‡(
obuf
->
Êag
 & (
RB_DEL
 | 
RB_S
))

6267 *
°r
) {

6268 
mode
 = 
	`gë_m˘y≥
(
°r
);

6269 
dñè
 = 
	`gë_mcwidth
(
°r
);

6270 i‡(
obuf
->
Êag
 & (
RB_SPECIAL
 & ~
RB_NOBR
)) {

6271 
ch
 = *
°r
;

6272 i‡(!(
obuf
->
Êag
 & 
RB_PLAIN
Ë&& (*
°r
 == '&')) {

6273 *
p
 = 
°r
;

6274 
ech
 = 
	`gëesˇ≥ch¨
(&
p
);

6275 i‡(
ech
 == '\n' ||Éch == '\r') {

6276 
ch
 = '\n';

6277 
°r
 = 
p
 - 1;

6279 i‡(
ech
 == '\t') {

6280 
ch
 = '\t';

6281 
°r
 = 
p
 - 1;

6284 i‡(
ch
 != '\n')

6285 
obuf
->
Êag
 &~
RB_IGNORE_P
;

6286 i‡(
ch
 == '\n') {

6287 
°r
++;

6288 i‡(
obuf
->
Êag
 & 
RB_IGNORE_P
) {

6289 
obuf
->
Êag
 &~
RB_IGNORE_P
;

6292 i‡(
obuf
->
Êag
 & 
RB_PRE_INT
)

6293 
	`PUSH
(' ');

6295 
	`Êushlöe
(
h_ív
, 
obuf
, h_ív->
ívs
[h_ív->
ívc
].
ödít
,

6296 1, 
h_ív
->
limô
);

6298 i‡(
ch
 == '\t') {

6300 
	`PUSH
(' ');

6301 } (
h_ív
->
ívs
[h_ív->
ívc
].
ödít
 + 
obuf
->
pos
)

6302 % 
Tab°›
 != 0);

6303 
°r
++;

6305 i‡(
obuf
->
Êag
 & 
RB_PLAIN
) {

6306 *
p
 = 
	`html_quŸe_ch¨
(*
°r
);

6307 i‡(
p
) {

6308 
	`push_ch¨p
(
obuf
, 1, 
p
, 
PC_ASCII
);

6309 
°r
++;

6312 
	`¥oc_mch¨
(
obuf
, 1, 
dñè
, &
°r
, 
mode
);

6316 i‡(*
°r
 == '&')

6317 
	`¥oc_esˇ≥
(
obuf
, &
°r
);

6319 
	`¥oc_mch¨
(
obuf
, 1, 
dñè
, &
°r
, 
mode
);

6321 i‡(
obuf
->
Êag
 & (
RB_SPECIAL
 & ~
RB_PRE_INT
))

6325 i‡(!
	`IS_SPACE
(*
°r
))

6326 
obuf
->
Êag
 &~
RB_IGNORE_P
;

6327 i‡((
mode
 =
PC_ASCII
 || modê=
PC_CTRL
Ë&& 
	`IS_SPACE
(*
°r
)) {

6328 i‡(*
obuf
->
¥evch¨
->
±r
 != ' ') {

6329 
	`PUSH
(' ');

6331 
°r
++;

6334 #ifde‡
USE_M17N


6335 i‡(
mode
 =
PC_KANJI1
)

6336 
is_h™gul
 = 
	`wtf_is_h™gul
((
wc_uch¨
 *Ë
°r
);

6338 
is_h™gul
 = 0;

6339 i‡(
mode
 =
PC_KANJI1
 &&

6340 !
is_h™gul
 && !
¥ev_is_h™gul
 &&

6341 
obuf
->
pos
 > 
h_ív
->
ívs
[h_ív->
ívc
].
ödít
 &&

6342 
	`Såœ°ch¨
(
obuf
->
löe
) == ' ') {

6343 
obuf
->
löe
->
Àngth
 >= 2 &&

6344 !
	`°∫cmp
(
obuf
->
löe
->
±r
 + obuf->löe->
Àngth
 -

6346 && 
obuf
->
pos
 >
h_ív
->
ívs
[h_ív->
ívc
].
ödít
) {

6347 
	`Såshrök
(
obuf
->
löe
, 1);

6348 
obuf
->
pos
--;

6350 i‡(
obuf
->
löe
->
Àngth
 >= 3 &&

6351 
obuf
->
¥ev_˘y≥
 =
PC_KANJI1
 &&

6352 
	`Såœ°ch¨
(
obuf
->
löe
) == ' ' &&

6353 
obuf
->
pos
 >
h_ív
->
ívs
[h_ív->
ívc
].
ödít
) {

6354 
	`Såshrök
(
obuf
->
löe
, 1);

6355 
obuf
->
pos
--;

6358 
¥ev_is_h™gul
 = 
is_h™gul
;

6360 i‡(*
°r
 == '&')

6361 
	`¥oc_esˇ≥
(
obuf
, &
°r
);

6363 
	`¥oc_mch¨
(
obuf
, obuf->
Êag
 & 
RB_SPECIAL
, 
dñè
, &
°r
,

6364 
mode
);

6367 i‡(
	`√ed_Êushlöe
(
h_ív
, 
obuf
, 
mode
)) {

6368 *
bp
 = 
obuf
->
löe
->
±r
 + obuf->bp.
Àn
;

6369 *
ç
 = 
bp
 - 
obuf
->bp.
éí
;

6370 
i
 = 0;

6372 i‡(
ç
 > 
obuf
->
löe
->
±r
 &&Åp[-1] == ' ')

6373 
i
 = 1;

6375 
ödít
 = 
h_ív
->
ívs
[h_ív->
ívc
].indent;

6376 i‡(
obuf
->
bp
.
pos
 - 
i
 > 
ödít
) {

6377 
Så
 
löe
;

6378 
	`≠≥nd_ègs
(
obuf
);

6379 
löe
 = 
	`Så√w_ch¨p
(
bp
);

6380 
	`Såshrök
(
obuf
->
löe
, obuf->löe->
Àngth
 - obuf->
bp
.
Àn
);

6381 #ifde‡
FORMAT_NICE


6382 i‡(
obuf
->
pos
 - 
i
 > 
h_ív
->
limô
)

6383 
obuf
->
Êag
 |
RB_FILL
;

6385 
	`back_to_bªakpoöt
(
obuf
);

6386 
	`Êushlöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

6387 #ifde‡
FORMAT_NICE


6388 
obuf
->
Êag
 &~
RB_FILL
;

6390 
	`HTMLlöïroc1
(
löe
->
±r
, 
h_ív
);

6395 i‡(!(
obuf
->
Êag
 & (
RB_SPECIAL
 | 
RB_INTXTA
 | 
RB_INSELECT
))) {

6396 *
ç
;

6397 
i
 = 0;

6399 i‡(
obuf
->
bp
.
pos
 == obuf->pos) {

6400 
ç
 = &
obuf
->
löe
->
±r
[obuf->
bp
.
Àn
 - obuf->bp.
éí
];

6403 
ç
 = &
obuf
->
löe
->
±r
[obuf->löe->
Àngth
];

6406 i‡(
ç
 > 
obuf
->
löe
->
±r
 &&Åp[-1] == ' ')

6407 
i
 = 1;

6408 
ödít
 = 
h_ív
->
ívs
[h_ív->
ívc
].indent;

6409 i‡(
obuf
->
pos
 - 
i
 > 
h_ív
->
limô
) {

6410 #ifde‡
FORMAT_NICE


6411 
obuf
->
Êag
 |
RB_FILL
;

6413 
	`Êushlöe
(
h_ív
, 
obuf
, 
ödít
, 0, h_ív->
limô
);

6414 #ifde‡
FORMAT_NICE


6415 
obuf
->
Êag
 &~
RB_FILL
;

6419 
	}
}

6421 *
NuŒLöe
;

6422 
Löïr›
 
NuŒPr›
[];

6424 #i‚de‡
USE_ANSI_COLOR


6425 
	#add√wlöe2
(
a
,
b
,
c
,
d
,
e
,
f
Ë
	`_add√wlöe2
◊,b,c,e,f)

	)

6428 
	$add√wlöe2
(
Buf„r
 *
buf
, *
löe
, 
Löïr›
 *
¥›
, 
Löecﬁ‹
 *
cﬁ‹
, 
pos
,

6429 
∆öes
)

6431 
Löe
 *
l
;

6432 
l
 = 
	`New
(
Löe
);

6433 
l
->
√xt
 = 
NULL
;

6434 
l
->
löeBuf
 = 
löe
;

6435 
l
->
¥›Buf
 = 
¥›
;

6436 #ifde‡
USE_ANSI_COLOR


6437 
l
->
cﬁ‹Buf
 = 
cﬁ‹
;

6439 
l
->
Àn
 = 
pos
;

6440 
l
->
width
 = -1;

6441 
l
->
size
 = 
pos
;

6442 
l
->
bpos
 = 0;

6443 
l
->
bwidth
 = 0;

6444 
l
->
¥ev
 = 
buf
->
cuºítLöe
;

6445 i‡(
buf
->
cuºítLöe
) {

6446 
l
->
√xt
 = 
buf
->
cuºítLöe
->next;

6447 
buf
->
cuºítLöe
->
√xt
 = 
l
;

6450 
l
->
√xt
 = 
NULL
;

6451 i‡(
buf
->
œ°Löe
 =
NULL
 || buf->œ°Löê=buf->
cuºítLöe
)

6452 
buf
->
œ°Löe
 = 
l
;

6453 
buf
->
cuºítLöe
 = 
l
;

6454 i‡(
buf
->
fú°Löe
 =
NULL
)

6455 
buf
->
fú°Löe
 = 
l
;

6456 
l
->
löíumbî
 = ++
buf
->
ÆlLöe
;

6457 i‡(
∆öes
 < 0) {

6459 
l
->
ªÆ_löíumbî
 = 0;

6462 
l
->
ªÆ_löíumbî
 = 
∆öes
;

6464 
l
 = 
NULL
;

6465 
	}
}

6468 
	$add√wlöe
(
Buf„r
 *
buf
, *
löe
, 
Löïr›
 *
¥›
, 
Löecﬁ‹
 *
cﬁ‹
, 
pos
,

6469 
width
, 
∆öes
)

6471 *
s
;

6472 
Löïr›
 *
p
;

6473 #ifde‡
USE_ANSI_COLOR


6474 
Löecﬁ‹
 *
c
;

6476 
Löe
 *
l
;

6477 
i
, 
bpos
, 
bwidth
;

6479 i‡(
pos
 > 0) {

6480 
s
 = 
	`ÆlocSå
(
löe
, 
pos
);

6481 
p
 = 
	`NewAtom_N
(
Löïr›
, 
pos
);

6482 
	`bc›y
((*)
¥›
, (*)
p
, 
pos
 * (
Löïr›
));

6485 
s
 = 
NuŒLöe
;

6486 
p
 = 
NuŒPr›
;

6488 #ifde‡
USE_ANSI_COLOR


6489 i‡(
pos
 > 0 && 
cﬁ‹
) {

6490 
c
 = 
	`NewAtom_N
(
Löecﬁ‹
, 
pos
);

6491 
	`bc›y
((*)
cﬁ‹
, (*)
c
, 
pos
 * (
Löecﬁ‹
));

6494 
c
 = 
NULL
;

6497 
	`add√wlöe2
(
buf
, 
s
, 
p
, 
c
, 
pos
, 
∆öes
);

6498 i‡(
pos
 <0 || 
width
 <= 0)

6500 
bpos
 = 0;

6501 
bwidth
 = 0;

6503 
l
 = 
buf
->
cuºítLöe
;

6504 
l
->
bpos
 = bpos;

6505 
l
->
bwidth
 = bwidth;

6506 
i
 = 
	`cﬁumnLí
(
l
, 
width
);

6507 i‡(
i
 == 0) {

6508 
i
++;

6509 #ifde‡
USE_M17N


6510 
i
 < 
l
->
Àn
 && 
p
[i] & 
PC_WCHAR2
)

6511 
i
++;

6514 
l
->
Àn
 = 
i
;

6515 
l
->
width
 = 
	`COLPOS
÷,Ü->
Àn
);

6516 i‡(
pos
 <
i
)

6518 
bpos
 +
l
->
Àn
;

6519 
bwidth
 +
l
->
width
;

6520 
s
 +
i
;

6521 
p
 +
i
;

6522 #ifde‡
USE_ANSI_COLOR


6523 i‡(
c
)

6524 
c
 +
i
;

6526 
pos
 -
i
;

6527 
	`add√wlöe2
(
buf
, 
s
, 
p
, 
c
, 
pos
, 
∆öes
);

6529 
	}
}

6534 
Buf„r
 *

6535 
	$lﬂdHTMLBuf„r
(
URLFûe
 *
f
, 
Buf„r
 *
√wBuf
)

6537 
FILE
 *
§c
 = 
NULL
;

6538 
Så
 
tmp
;

6540 i‡(
√wBuf
 =
NULL
)

6541 
√wBuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

6542 i‡(
√wBuf
->
sour˚fûe
 =
NULL
 &&

6543 (
f
->
scheme
 !
SCM_LOCAL
 || 
√wBuf
->
maûˇp
)) {

6544 
tmp
 = 
	`tmp‚ame
(
TMPF_SRC
, ".html");

6545 
§c
 = 
	`f›í
(
tmp
->
±r
, "w");

6546 i‡(
§c
)

6547 
√wBuf
->
sour˚fûe
 = 
tmp
->
±r
;

6550 
	`lﬂdHTML°ªam
(
f
, 
√wBuf
, 
§c
,ÇewBuf->
buf„Ωr›
 & 
BP_FRAME
);

6552 
√wBuf
->
t›Löe
 =ÇewBuf->
fú°Löe
;

6553 
√wBuf
->
œ°Löe
 =ÇewBuf->
cuºítLöe
;

6554 
√wBuf
->
cuºítLöe
 =ÇewBuf->
fú°Löe
;

6555 i‡(
n_ãxèªa
)

6556 
	`f‹mRe£tBuf„r
(
√wBuf
,ÇewBuf->
f‹môem
);

6557 i‡(
§c
)

6558 
	`f˛o£
(
§c
);

6560  
√wBuf
;

6561 
	}
}

6563 *
	g_size_unô
[] = { "b", "kb", "Mb", "Gb", "Tb",

6564 "Pb", "Eb", "Zb", "Bb", "Yb", 
NULL


6568 
	$c⁄vît_size
(
˛í_t
 
size
, 
u£Êﬂt
)

6570 
csize
;

6571 
sizïos
 = 0;

6572 **
sizes
 = 
_size_unô
;

6574 
csize
 = ()
size
;

6575 
csize
 >999.495 && 
sizes
[
sizïos
 + 1]) {

6576 
csize
 = csize / 1024.0;

6577 
sizïos
++;

6579  
	`S¥ötf
(
u£Êﬂt
 ? "%.3g%s" : "%.0f%s",

6580 
	`Êo‹
(
csize
 * 100.0 + 0.5Ë/ 100.0, 
sizes
[
sizïos
])->
±r
;

6581 
	}
}

6584 
	$c⁄vît_size2
(
˛í_t
 
size1
, cÀn_à
size2
, 
u£Êﬂt
)

6586 **
sizes
 = 
_size_unô
;

6587 
csize
, 
Á˘‹
 = 1;

6588 
sizïos
 = 0;

6590 
csize
 = ()((
size1
 > 
size2
) ? size1 : size2);

6591 
csize
 / 
Á˘‹
 >999.495 && 
sizes
[
sizïos
 + 1]) {

6592 
Á˘‹
 *= 1024.0;

6593 
sizïos
++;

6595  
	`S¥ötf
(
u£Êﬂt
 ? "%.3g/%.3g%s" : "%.0f/%.0f%s",

6596 
	`Êo‹
(
size1
 / 
Á˘‹
 * 100.0 + 0.5) / 100.0,

6597 
	`Êo‹
(
size2
 / 
Á˘‹
 * 100.0 + 0.5) / 100.0,

6598 
sizes
[
sizïos
])->
±r
;

6599 
	}
}

6602 
	$showProgªss
(
˛í_t
 * 
löñí
, cÀn_à* 
åbyã
)

6604 
i
, 
j
, 
øã
, 
duøti⁄
, 
ëa
, 
pos
;

6605 
time_t
 
œ°_time
, 
°¨t_time
;

6606 
time_t
 
cur_time
;

6607 
Så
 
mesßges
;

6608 *
fmåbyã
, *
fmøã
;

6610 i‡(!
fmInôülized
)

6613 i‡(*
löñí
 < 1024)

6615 i‡(
cuºít_c⁄ã¡_Àngth
 > 0) {

6616 
øtio
;

6617 
cur_time
 = 
	`time
(0);

6618 i‡(*
åbyã
 == 0) {

6619 
	`move
(
LASTLINE
, 0);

6620 
	`˛π€ﬁx
();

6621 
°¨t_time
 = 
cur_time
;

6623 *
åbyã
 +*
löñí
;

6624 *
löñí
 = 0;

6625 i‡(
cur_time
 =
œ°_time
)

6627 
œ°_time
 = 
cur_time
;

6628 
	`move
(
LASTLINE
, 0);

6629 
øtio
 = 100.0 * (*
åbyã
Ë/ 
cuºít_c⁄ã¡_Àngth
;

6630 
fmåbyã
 = 
	`c⁄vît_size2
(*
åbyã
, 
cuºít_c⁄ã¡_Àngth
, 1);

6631 
duøti⁄
 = 
cur_time
 - 
°¨t_time
;

6632 i‡(
duøti⁄
) {

6633 
øã
 = *
åbyã
 / 
duøti⁄
;

6634 
fmøã
 = 
	`c⁄vît_size
(
øã
, 1);

6635 
ëa
 = 
øã
 ? (
cuºít_c⁄ã¡_Àngth
 - *
åbyã
) /Ñate : -1;

6636 
mesßges
 = 
	`S¥ötf
("%11s %3.0f%% "

6639 
fmåbyã
, 
øtio
,

6640 
fmøã
,

6641 
ëa
 / (60 * 60), (eta / 60) % 60,Éta % 60);

6644 
mesßges
 = 
	`S¥ötf
("%11s %3.0f%% ",

6645 
fmåbyã
, 
øtio
);

6647 
	`add°r
(
mesßges
->
±r
);

6648 
pos
 = 42;

6649 
i
 = 
pos
 + (
COLS
 -Öo†- 1Ë* (*
åbyã
Ë/ 
cuºít_c⁄ã¡_Àngth
;

6650 
	`move
(
LASTLINE
, 
pos
);

6651 
	`°™dout
();

6652 
	`addch
(' ');

6653 
j
 = 
pos
 + 1; j <
i
; j++)

6654 
	`addch
('|');

6655 
	`°™díd
();

6657 
	`ª‰esh
();

6660 
cur_time
 = 
	`time
(0);

6661 i‡(*
åbyã
 == 0) {

6662 
	`move
(
LASTLINE
, 0);

6663 
	`˛π€ﬁx
();

6664 
°¨t_time
 = 
cur_time
;

6666 *
åbyã
 +*
löñí
;

6667 *
löñí
 = 0;

6668 i‡(
cur_time
 =
œ°_time
)

6670 
œ°_time
 = 
cur_time
;

6671 
	`move
(
LASTLINE
, 0);

6672 
fmåbyã
 = 
	`c⁄vît_size
(*
åbyã
, 1);

6673 
duøti⁄
 = 
cur_time
 - 
°¨t_time
;

6674 i‡(
duøti⁄
) {

6675 
fmøã
 = 
	`c⁄vît_size
(*
åbyã
 / 
duøti⁄
, 1);

6676 
mesßges
 = 
	`S¥ötf
("%7†lﬂded %7s/s", 
fmåbyã
, 
fmøã
);

6679 
mesßges
 = 
	`S¥ötf
("%7†lﬂded", 
fmåbyã
);

6681 
	`mesßge
(
mesßges
->
±r
, 0, 0);

6682 
	`ª‰esh
();

6684 
	}
}

6687 
	$öô_hív
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
,

6688 
ívú⁄mít
 *
ívs
, 
√nv
, 
TextLöeLi°
 *
buf
,

6689 
limô
, 
ödít
)

6691 
ívs
[0].
ödít
 = indent;

6693 
obuf
->
löe
 = 
	`Så√w
();

6694 
obuf
->
˝r›
 = 0;

6695 
obuf
->
pos
 = 0;

6696 
obuf
->
¥evch¨
 = 
	`Så√w_size
(8);

6697 
	`£t_•a˚_to_¥evch¨
(
obuf
->
¥evch¨
);

6698 
obuf
->
Êag
 = 
RB_IGNORE_P
;

6699 
obuf
->
Êag_•
 = 0;

6700 
obuf
->
°©us
 = 
R_ST_NORMAL
;

6701 
obuf
->
èbÀ_Àvñ
 = -1;

6702 
obuf
->
nobr_Àvñ
 = 0;

6703 
	`bzîo
((*)&
obuf
->
™ch‹
, (obuf->anchor));

6704 
obuf
->
img_Æt
 = 0;

6705 
obuf
->
ö_bﬁd
 = 0;

6706 
obuf
->
ö_ôÆic
 = 0;

6707 
obuf
->
ö_undî
 = 0;

6708 
obuf
->
ö_°rike
 = 0;

6709 
obuf
->
ö_ös
 = 0;

6710 
obuf
->
¥ev_˘y≥
 = 
PC_ASCII
;

6711 
obuf
->
èg_•
 = 0;

6712 
obuf
->
f⁄t°©_•
 = 0;

6713 
obuf
->
t›_m¨gö
 = 0;

6714 
obuf
->
bŸtom_m¨gö
 = 0;

6715 
obuf
->
bp
.
öô_Êag
 = 1;

6716 
	`£t_bªakpoöt
(
obuf
, 0);

6718 
h_ív
->
buf
 = buf;

6719 
h_ív
->
f
 = 
NULL
;

6720 
h_ív
->
obuf
 = obuf;

6721 
h_ív
->
ègbuf
 = 
	`Så√w
();

6722 
h_ív
->
limô
 =Üimit;

6723 
h_ív
->
maxlimô
 = 0;

6724 
h_ív
->
ívs
 =Énvs;

6725 
h_ív
->
√nv
 =Çenv;

6726 
h_ív
->
ívc
 = 0;

6727 
h_ív
->
ívc_ªÆ
 = 0;

6728 
h_ív
->
tôÀ
 = 
NULL
;

6729 
h_ív
->
bœnk_löes
 = 0;

6730 
	}
}

6733 
	$com∂ëeHTML°ªam
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
)

6735 
	`˛o£_™ch‹
(
h_ív
, 
obuf
);

6736 i‡(
obuf
->
img_Æt
) {

6737 
	`push_èg
(
obuf
, "</img_Æt>", 
HTML_N_IMG_ALT
);

6738 
obuf
->
img_Æt
 = 
NULL
;

6740 i‡(
obuf
->
ö_bﬁd
) {

6741 
	`push_èg
(
obuf
, "</b>", 
HTML_N_B
);

6742 
obuf
->
ö_bﬁd
 = 0;

6744 i‡(
obuf
->
ö_ôÆic
) {

6745 
	`push_èg
(
obuf
, "</i>", 
HTML_N_I
);

6746 
obuf
->
ö_ôÆic
 = 0;

6748 i‡(
obuf
->
ö_undî
) {

6749 
	`push_èg
(
obuf
, "</u>", 
HTML_N_U
);

6750 
obuf
->
ö_undî
 = 0;

6752 i‡(
obuf
->
ö_°rike
) {

6753 
	`push_èg
(
obuf
, "</s>", 
HTML_N_S
);

6754 
obuf
->
ö_°rike
 = 0;

6756 i‡(
obuf
->
ö_ös
) {

6757 
	`push_èg
(
obuf
, "</ös>", 
HTML_N_INS
);

6758 
obuf
->
ö_ös
 = 0;

6760 i‡(
obuf
->
Êag
 & 
RB_INTXTA
)

6761 
	`HTMLlöïroc1
("</ãxèªa>", 
h_ív
);

6763 i‡(
obuf
->
Êag
 & 
RB_INSELECT
)

6764 
	`HTMLlöïroc1
("</£À˘>", 
h_ív
);

6765 i‡(
obuf
->
Êag
 & 
RB_TITLE
)

6766 
	`HTMLlöïroc1
("</tôÀ>", 
h_ív
);

6769 i‡(
obuf
->
èbÀ_Àvñ
 >
MAX_TABLE
)

6770 
obuf
->
èbÀ_Àvñ
 = 
MAX_TABLE
 - 1;

6772 
obuf
->
èbÀ_Àvñ
 >= 0) {

6773 
èbÀ_mode
[
obuf
->
èbÀ_Àvñ
].
¥e_mode


6774 &~(
TBLM_SCRIPT
 | 
TBLM_STYLE
 | 
TBLM_PLAIN
);

6775 
	`HTMLlöïroc1
("</èbÀ>", 
h_ív
);

6777 
	}
}

6780 
	$¥öt_öã∫Æ_öf‹m©i⁄
(
html_„ed_ívú⁄
 *
hív
)

6782 
i
;

6783 
Så
 
s
;

6784 
TextLöeLi°
 *
é
 = 
	`√wTextLöeLi°
();

6786 
s
 = 
	`Så√w_ch¨p
("<internal>");

6787 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6788 i‡(
hív
->
tôÀ
) {

6789 
s
 = 
	`Så√w_m_ch¨p
("<title_altÅitle=\"",

6790 
	`html_quŸe
(
hív
->
tôÀ
), "\">", 
NULL
);

6791 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6794 i‡(
f‹m_max
 >= 0) {

6795 
F‹mLi°
 *
Â
;

6796 
i
 = 0; i <
f‹m_max
; i++) {

6797 
Â
 = 
f‹ms
[
i
];

6798 
s
 = 
	`S¥ötf
("<form_int fid=\"%d\"áction=\"%s\" method=\"%s\"",

6799 
i
, 
	`html_quŸe
(
Â
->
a˘i⁄
->
±r
),

6800 (
Â
->
mëhod
 =
FORM_METHOD_POST
) ? "post"

6801 : ((
Â
->
mëhod
 ==

6802 
FORM_METHOD_INTERNAL
) ? "internal" : "get"));

6803 i‡(
Â
->
èrgë
)

6804 
	`Såˇt
(
s
, 
	`S¥ötf
("Å¨gë=\"%s\"", 
	`html_quŸe
(
Â
->
èrgë
)));

6805 i‡(
Â
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
)

6806 
	`Såˇt_ch¨p
(
s
, "Énctype=\"multipart/form-data\"");

6807 #ifde‡
USE_M17N


6808 i‡(
Â
->
ch¨£t
)

6809 
	`Såˇt
(
s
, 
	`S¥ötf
("áccept-charset=\"%s\"",

6810 
	`html_quŸe
(
Â
->
ch¨£t
)));

6812 
	`Såˇt_ch¨p
(
s
, ">");

6813 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6817 #ifde‡
MENU_SELECT


6818 i‡(
n_£À˘
 > 0) {

6819 
F‹mSñe˘O±i⁄Iãm
 *
ù
;

6820 
i
 = 0; i < 
n_£À˘
; i++) {

6821 
s
 = 
	`S¥ötf
("<£À˘_öà£À˘numbî=%d>", 
i
);

6822 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6823 
ù
 = 
£À˘_›ti⁄
[
i
].
fú°
; ip; i∞ù->
√xt
) {

6824 
s
 = 
	`S¥ötf
("<option_int value=\"%s\"Üabel=\"%s\"%s>",

6825 
	`html_quŸe
(
ù
->
vÆue
 ? ip->vÆue->
±r
 :

6826 
ù
->
œbñ
->
±r
),

6827 
	`html_quŸe
(
ù
->
œbñ
->
±r
),

6828 
ù
->
checked
 ? " selected" : "");

6829 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6831 
s
 = 
	`Så√w_ch¨p
("</select_int>");

6832 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6836 i‡(
n_ãxèªa
 > 0) {

6837 
i
 = 0; i < 
n_ãxèªa
; i++) {

6838 
s
 = 
	`S¥ötf
("<ãxèªa_öàãxèª™umbî=%d>", 
i
);

6839 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6840 
s
 = 
	`Så√w_ch¨p
(
	`html_quŸe
(
ãxèªa_°r
[
i
]->
±r
));

6841 
	`Såˇt_ch¨p
(
s
, "</textarea_int>");

6842 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6845 
s
 = 
	`Så√w_ch¨p
("</internal>");

6846 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
s
, 0));

6848 i‡(
hív
->
buf
)

6849 
	`≠≥ndTextLöeLi°
(
hív
->
buf
, 
é
);

6850 i‡(
hív
->
f
) {

6851 
TextLöeLi°Iãm
 *
p
;

6852 
p
 = 
é
->
fú°
;Ö;Ö =Ö->
√xt
)

6853 
	`Ârötf
(
hív
->
f
, "%s\n", 
	`Så_c⁄v_to_hÆfdump
(
p
->
±r
->
löe
)->ptr);

6855 
	}
}

6858 
	$lﬂdHTML°ªam
(
URLFûe
 *
f
, 
Buf„r
 *
√wBuf
, 
FILE
 * 
§c
, 
öã∫Æ
)

6860 
ívú⁄mít
 
ívs
[
MAX_ENV_LEVEL
];

6861 
˛í_t
 
löñí
 = 0;

6862 
˛í_t
 
åbyã
 = 0;

6863 
Så
 
löeBuf2
 = 
	`Så√w
();

6864 #ifde‡
USE_M17N


6865 
wc_˚s
 
ch¨£t
 = 
WC_CES_US_ASCII
;

6866 
wc_˚s
 vﬁ©ûê
doc_ch¨£t
 = 
DocumítCh¨£t
;

6868 
html_„ed_ívú⁄
 
htmÀnv1
;

6869 
ªadbuf„r
 
obuf
;

6870 #ifde‡
USE_IMAGE


6871 vﬁ©ûê
image_Êag
;

6873 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

6875 #ifde‡
USE_M17N


6876 i‡(
fmInôülized
 && 
	`gøph_ok
()) {

6877 
symbﬁ_width
 = 
symbﬁ_width0
 = 1;

6880 
symbﬁ_width0
 = 0;

6881 
	`gë_symbﬁ
(
Di•œyCh¨£t
, &
symbﬁ_width0
);

6882 
symbﬁ_width
 = 
WcO±i⁄
.
u£_wide
 ? 
symbﬁ_width0
 : 1;

6885 
symbﬁ_width
 = 
symbﬁ_width0
 = 1;

6888 
cur_tôÀ
 = 
NULL
;

6889 
n_ãxèªa
 = 0;

6890 
cur_ãxèªa
 = 
NULL
;

6891 
max_ãxèªa
 = 
MAX_TEXTAREA
;

6892 
ãxèªa_°r
 = 
	`New_N
(
Så
, 
max_ãxèªa
);

6893 #ifde‡
MENU_SELECT


6894 
n_£À˘
 = 0;

6895 
max_£À˘
 = 
MAX_SELECT
;

6896 
£À˘_›ti⁄
 = 
	`New_N
(
F‹mSñe˘O±i⁄
, 
max_£À˘
);

6898 
cur_£À˘
 = 
NULL
;

6899 
f‹m_•
 = -1;

6900 
f‹m_max
 = -1;

6901 
f‹ms_size
 = 0;

6902 
f‹ms
 = 
NULL
;

6903 
cur_h£q
 = 1;

6904 #ifde‡
USE_IMAGE


6905 
cur_i£q
 = 1;

6906 i‡(
√wBuf
->
image_Êag
)

6907 
image_Êag
 = 
√wBuf
->image_flag;

6908 i‡(
a˘iveImage
 && 
di•œyImage
 && 
autoImage
)

6909 
image_Êag
 = 
IMG_FLAG_AUTO
;

6911 
image_Êag
 = 
IMG_FLAG_SKIP
;

6912 i‡(
√wBuf
->
cuºítURL
.
fûe
)

6913 
cur_ba£URL
 = 
	`ba£URL
(
√wBuf
);

6916 i‡(
w3m_hÆÊﬂd
) {

6917 
√wBuf
->
buf„∫ame
 = "---";

6918 #ifde‡
USE_M17N


6919 
√wBuf
->
documít_ch¨£t
 = 
I¬îCh¨£t
;

6921 
max_ãxèªa
 = 0;

6922 #ifde‡
MENU_SELECT


6923 
max_£À˘
 = 0;

6925 
	`HTMLlöïroc3
(
√wBuf
, 
f
->
°ªam
);

6926 
w3m_hÆÊﬂd
 = 
FALSE
;

6930 
	`öô_hív
(&
htmÀnv1
, &
obuf
, 
ívs
, 
MAX_ENV_LEVEL
, 
NULL
, 
√wBuf
->
width
, 0);

6932 i‡(
w3m_hÆfdump
)

6933 
htmÀnv1
.
f
 = 
°dout
;

6935 
htmÀnv1
.
buf
 = 
	`√wTextLöeLi°
();

6937 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

6938 
	`HTMLlöïroc1
("<br>Tøns„∏I¡îru±ed!<br>", &
htmÀnv1
);

6939 
pha£2
;

6941 
TRAP_ON
;

6943 #ifde‡
USE_M17N


6944 i‡(
√wBuf
 !
NULL
) {

6945 i‡(
√wBuf
->
buf„Ωr›
 & 
BP_FRAME
)

6946 
ch¨£t
 = 
I¬îCh¨£t
;

6947 i‡(
√wBuf
->
documít_ch¨£t
)

6948 
ch¨£t
 = 
doc_ch¨£t
 = 
√wBuf
->
documít_ch¨£t
;

6950 i‡(
c⁄ã¡_ch¨£t
 && 
U£C⁄ã¡Ch¨£t
)

6951 
doc_ch¨£t
 = 
c⁄ã¡_ch¨£t
;

6952 
mëa_ch¨£t
 = 0;

6955 
	`do_bœnklöe
(&
htmÀnv1
, &
obuf
, 0, 0, htmÀnv1.
limô
);

6956 
obuf
.
Êag
 = 
RB_IGNORE_P
;

6958 i‡(
	`ISty≥
(
f
->
°ªam
Ë!
IST_ENCODED
)

6959 
f
->
°ªam
 = 
	`√wEncodedSåóm
(f->°ªam, f->
ícodög
);

6960 (
löeBuf2
 = 
	`SåmyUFgës
(
f
))->
Àngth
) {

6961 #ifde‡
USE_NNTP


6962 i‡(
f
->
scheme
 =
SCM_NEWS
 && 
löeBuf2
->
±r
[0] == '.') {

6963 
	`Såshrökfú°
(
löeBuf2
, 1);

6964 i‡(
löeBuf2
->
±r
[0] == '\n' ||ÜineBuf2->ptr[0] == '\r' ||

6965 
löeBuf2
->
±r
[0] == '\0') {

6973 i‡(
§c
)

6974 
	`SåÂuts
(
löeBuf2
, 
§c
);

6975 
löñí
 +
löeBuf2
->
Àngth
;

6976 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

6977 
	`¥ötf
("W3m-ö-¥ogªss: %s\n", 
	`c⁄vît_size2
(
löñí
, 
cuºít_c⁄ã¡_Àngth
, 
TRUE
));

6978 i‡(
w3m_dump
 & 
DUMP_SOURCE
)

6980 
	`showProgªss
(&
löñí
, &
åbyã
);

6985 #ifde‡
USE_M17N


6986 i‡(
mëa_ch¨£t
) {

6987 i‡(
c⁄ã¡_ch¨£t
 =0 && 
U£C⁄ã¡Ch¨£t
) {

6988 
doc_ch¨£t
 = 
mëa_ch¨£t
;

6989 
ch¨£t
 = 
WC_CES_US_ASCII
;

6991 
mëa_ch¨£t
 = 0;

6994 
löeBuf2
 = 
	`c⁄vîtLöe
(
f
,ÜöeBuf2, 
HTML_MODE
, &
ch¨£t
, 
doc_ch¨£t
);

6995 #i‡
	`deföed
(
USE_M17N
Ë&& deföed(
USE_IMAGE
)

6996 
cur_documít_ch¨£t
 = 
ch¨£t
;

6998 
	`HTMLlöïroc0
(
löeBuf2
->
±r
, &
htmÀnv1
, 
öã∫Æ
);

7000 i‡(
obuf
.
°©us
 !
R_ST_NORMAL
) {

7001 
obuf
.
°©us
 = 
R_ST_EOL
;

7002 
	`HTMLlöïroc0
("\n", &
htmÀnv1
, 
öã∫Æ
);

7004 
obuf
.
°©us
 = 
R_ST_NORMAL
;

7005 
	`com∂ëeHTML°ªam
(&
htmÀnv1
, &
obuf
);

7006 
	`Êushlöe
(&
htmÀnv1
, &
obuf
, 0, 2, htmÀnv1.
limô
);

7007 i‡(
htmÀnv1
.
tôÀ
)

7008 
√wBuf
->
buf„∫ame
 = 
htmÀnv1
.
tôÀ
;

7009 i‡(
w3m_hÆfdump
) {

7010 
TRAP_OFF
;

7011 
	`¥öt_öã∫Æ_öf‹m©i⁄
(&
htmÀnv1
);

7014 i‡(
w3m_backíd
) {

7015 
TRAP_OFF
;

7016 
	`¥öt_öã∫Æ_öf‹m©i⁄
(&
htmÀnv1
);

7017 
backíd_hÆfdump_buf
 = 
htmÀnv1
.
buf
;

7020 
pha£2
:

7021 
√wBuf
->
åbyã
 =Årbyã + 
löñí
;

7022 
TRAP_OFF
;

7023 #ifde‡
USE_M17N


7024 i‡(!(
√wBuf
->
buf„Ωr›
 & 
BP_FRAME
))

7025 
√wBuf
->
documít_ch¨£t
 = 
ch¨£t
;

7027 #ifde‡
USE_IMAGE


7028 
√wBuf
->
image_Êag
 = image_flag;

7030 
	`HTMLlöïroc2
(
√wBuf
, 
htmÀnv1
.
buf
);

7031 
	}
}

7036 
Buf„r
 *

7037 
	$lﬂdHTMLSåög
(
Så
 
∑ge
)

7039 
URLFûe
 
f
;

7040 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7041 
Buf„r
 *
√wBuf
;

7043 
√wBuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7044 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

7045 
TRAP_OFF
;

7046 
	`disˇrdBuf„r
(
√wBuf
);

7047  
NULL
;

7049 
TRAP_ON
;

7051 
	`öô_°ªam
(&
f
, 
SCM_LOCAL
, 
	`√wSåSåóm
(
∑ge
));

7053 #ifde‡
USE_M17N


7054 
√wBuf
->
documít_ch¨£t
 = 
I¬îCh¨£t
;

7056 
	`lﬂdHTML°ªam
(&
f
, 
√wBuf
, 
NULL
, 
TRUE
);

7057 #ifde‡
USE_M17N


7058 
√wBuf
->
documít_ch¨£t
 = 
WC_CES_US_ASCII
;

7061 
TRAP_OFF
;

7062 
√wBuf
->
t›Löe
 =ÇewBuf->
fú°Löe
;

7063 
√wBuf
->
œ°Löe
 =ÇewBuf->
cuºítLöe
;

7064 
√wBuf
->
cuºítLöe
 =ÇewBuf->
fú°Löe
;

7065 
√wBuf
->
ty≥
 = "text/html";

7066 
√wBuf
->
ªÆ_ty≥
 =ÇewBuf->
ty≥
;

7067 i‡(
n_ãxèªa
)

7068 
	`f‹mRe£tBuf„r
(
√wBuf
,ÇewBuf->
f‹môem
);

7069  
√wBuf
;

7070 
	}
}

7072 #ifde‡
USE_GOPHER


7077 
Så


7078 
	$lﬂdG›hîDú
(
URLFûe
 *
uf
, 
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
)

7080 
Så
 vﬁ©ûê
tmp
;

7081 
Så
 
lbuf
, 
«me
, 
fûe
, 
ho°
, 
p‹t
;

7082 *vﬁ©ûê
p
, *vﬁ©ûê
q
;

7083 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7084 #ifde‡
USE_M17N


7085 
wc_˚s
 
doc_ch¨£t
 = 
DocumítCh¨£t
;

7088 
tmp
 = 
	`∑r£dURL2Så
(
pu
);

7089 
p
 = 
	`html_quŸe
(
tmp
->
±r
);

7090 
tmp
 =

7091 
	`c⁄vîtLöe
(
NULL
, 
	`Så√w_ch¨p
(
	`fûe_unquŸe
(
tmp
->
±r
)), 
RAW_MODE
,

7092 
ch¨£t
, 
doc_ch¨£t
);

7093 
q
 = 
	`html_quŸe
(
tmp
->
±r
);

7094 
tmp
 = 
	`Så√w_m_ch¨p
("<html>\n<hód>\n<ba£ hªf=\"", 
p
, "\">\n<tôÀ>", 
q
,

7095 "</tôÀ>\n</hód>\n<body>\n<h1>Index o‡", 
q
,

7096 "</h1>\n<èbÀ>\n", 
NULL
);

7098 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0)

7099 
g›hî_íd
;

7100 
TRAP_ON
;

7103 i‡(
lbuf
 = 
	`SåUFgës
(
uf
),Übuf->
Àngth
 == 0)

7105 i‡(
lbuf
->
±r
[0] == '.' &&

7106 (
lbuf
->
±r
[1] == '\n' ||Übuf->ptr[1] == '\r'))

7108 
lbuf
 = 
	`c⁄vîtLöe
(
uf
,Übuf, 
HTML_MODE
, 
ch¨£t
, 
doc_ch¨£t
);

7109 
p
 = 
lbuf
->
±r
;

7110 
q
 = 
p
; *q && *q != '\t'; q++) ;

7111 
«me
 = 
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö);

7112 i‡(!*
q
)

7114 
p
 = 
q
 + 1;

7115 
q
 = 
p
; *q && *q != '\t'; q++) ;

7116 
fûe
 = 
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö);

7117 i‡(!*
q
)

7119 
p
 = 
q
 + 1;

7120 
q
 = 
p
; *q && *q != '\t'; q++) ;

7121 
ho°
 = 
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö);

7122 i‡(!*
q
)

7124 
p
 = 
q
 + 1;

7125 
q
 = 
p
; *q && *q != '\t' && *q != '\r' && *q != '\n'; q++) ;

7126 
p‹t
 = 
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö);

7128 
«me
->
±r
[0]) {

7130 
p
 = "[text file]";

7133 
p
 = "[directory]";

7136 
p
 = "[message]";

7139 
p
 = "[sound]";

7142 
p
 = "[gif]";

7145 
p
 = "[HTML]";

7148 
p
 = "[unsupported]";

7151 
q
 = 
	`Så√w_m_ch¨p
("g›hî://", 
ho°
->
±r
, ":", 
p‹t
->ptr,

7152 "/", 
fûe
->
±r
, 
NULL
)->ptr;

7153 
	`Såˇt_m_ch¨p
(
tmp
, "<a href=\"",

7154 
	`html_quŸe
(
	`uæ_quŸe_c⁄v
(
q
, *
ch¨£t
)),

7155 "\">", 
p
, 
	`html_quŸe
(
«me
->
±r
 + 1), "</a>\n", 
NULL
);

7158 
g›hî_íd
:

7159 
TRAP_OFF
;

7161 
	`Såˇt_ch¨p
(
tmp
, "</table>\n</body>\n</html>\n");

7162  
tmp
;

7163 
	}
}

7169 
Buf„r
 *

7170 
	$lﬂdBuf„r
(
URLFûe
 *
uf
, 
Buf„r
 *vﬁ©ûê
√wBuf
)

7172 
FILE
 *vﬁ©ûê
§c
 = 
NULL
;

7173 #ifde‡
USE_M17N


7174 
wc_˚s
 
ch¨£t
 = 
WC_CES_US_ASCII
;

7175 
wc_˚s
 vﬁ©ûê
doc_ch¨£t
 = 
DocumítCh¨£t
;

7177 
Så
 
löeBuf2
;

7178 vﬁ©ûê
¥e_lbuf
 = '\0';

7179 
∆öes
;

7180 
Så
 
tmpf
;

7181 
˛í_t
 
löñí
 = 0, 
åbyã
 = 0;

7182 
Löïr›
 *
¥›Buf„r
 = 
NULL
;

7183 #ifde‡
USE_ANSI_COLOR


7184 
Löecﬁ‹
 *
cﬁ‹Buf„r
 = 
NULL
;

7186 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7188 i‡(
√wBuf
 =
NULL
)

7189 
√wBuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7190 
löeBuf2
 = 
	`Så√w
();

7192 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

7193 
_íd
;

7195 
TRAP_ON
;

7197 i‡(
√wBuf
->
sour˚fûe
 =
NULL
 &&

7198 (
uf
->
scheme
 !
SCM_LOCAL
 || 
√wBuf
->
maûˇp
)) {

7199 
tmpf
 = 
	`tmp‚ame
(
TMPF_SRC
, 
NULL
);

7200 
§c
 = 
	`f›í
(
tmpf
->
±r
, "w");

7201 i‡(
§c
)

7202 
√wBuf
->
sour˚fûe
 = 
tmpf
->
±r
;

7204 #ifde‡
USE_M17N


7205 i‡(
√wBuf
->
documít_ch¨£t
)

7206 
ch¨£t
 = 
doc_ch¨£t
 = 
√wBuf
->
documít_ch¨£t
;

7207 i‡(
c⁄ã¡_ch¨£t
 && 
U£C⁄ã¡Ch¨£t
)

7208 
doc_ch¨£t
 = 
c⁄ã¡_ch¨£t
;

7211 
∆öes
 = 0;

7212 i‡(
	`ISty≥
(
uf
->
°ªam
Ë!
IST_ENCODED
)

7213 
uf
->
°ªam
 = 
	`√wEncodedSåóm
(uf->°ªam, uf->
ícodög
);

7214 (
löeBuf2
 = 
	`SåmyISgës
(
uf
->
°ªam
))->
Àngth
) {

7215 #ifde‡
USE_NNTP


7216 i‡(
uf
->
scheme
 =
SCM_NEWS
 && 
löeBuf2
->
±r
[0] == '.') {

7217 
	`Såshrökfú°
(
löeBuf2
, 1);

7218 i‡(
löeBuf2
->
±r
[0] == '\n' ||ÜineBuf2->ptr[0] == '\r' ||

7219 
löeBuf2
->
±r
[0] == '\0') {

7227 i‡(
§c
)

7228 
	`SåÂuts
(
löeBuf2
, 
§c
);

7229 
löñí
 +
löeBuf2
->
Àngth
;

7230 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

7231 
	`¥ötf
("W3m-ö-¥ogªss: %s\n", 
	`c⁄vît_size2
(
löñí
, 
cuºít_c⁄ã¡_Àngth
, 
TRUE
));

7232 i‡(
w3m_dump
 & 
DUMP_SOURCE
)

7234 
	`showProgªss
(&
löñí
, &
åbyã
);

7235 i‡(
‰ame_sour˚
)

7237 
löeBuf2
 =

7238 
	`c⁄vîtLöe
(
uf
, 
löeBuf2
, 
PAGER_MODE
, &
ch¨£t
, 
doc_ch¨£t
);

7239 i‡(
squìzeBœnkLöe
) {

7240 i‡(
löeBuf2
->
±r
[0] ='\n' && 
¥e_lbuf
 == '\n') {

7241 ++
∆öes
;

7244 
¥e_lbuf
 = 
löeBuf2
->
±r
[0];

7246 ++
∆öes
;

7247 
	`Såch›
(
löeBuf2
);

7248 
löeBuf2
 = 
	`checkTy≥
÷öeBuf2, &
¥›Buf„r
, 
NULL
);

7249 
	`add√wlöe
(
√wBuf
, 
löeBuf2
->
±r
, 
¥›Buf„r
, 
cﬁ‹Buf„r
,

7250 
löeBuf2
->
Àngth
, 
FOLD_BUFFER_WIDTH
, 
∆öes
);

7252 
_íd
:

7253 
TRAP_OFF
;

7254 
√wBuf
->
t›Löe
 =ÇewBuf->
fú°Löe
;

7255 
√wBuf
->
œ°Löe
 =ÇewBuf->
cuºítLöe
;

7256 
√wBuf
->
cuºítLöe
 =ÇewBuf->
fú°Löe
;

7257 
√wBuf
->
åbyã
 =Årbyã + 
löñí
;

7258 #ifde‡
USE_M17N


7259 
√wBuf
->
documít_ch¨£t
 = 
ch¨£t
;

7261 i‡(
§c
)

7262 
	`f˛o£
(
§c
);

7264  
√wBuf
;

7265 
	}
}

7267 #ifde‡
USE_IMAGE


7268 
Buf„r
 *

7269 
	$lﬂdImageBuf„r
(
URLFûe
 *
uf
, 
Buf„r
 *
√wBuf
)

7271 
Image
 
image
;

7272 
ImageCache
 *
ˇche
;

7273 
Så
 
tmp
, 
tmpf
;

7274 
FILE
 *
§c
 = 
NULL
;

7275 
URLFûe
 
f
;

7276 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7277 
°©
 
°
;

7279 
	`lﬂdImage
(
√wBuf
, 
IMG_FLAG_STOP
);

7280 
image
.
uæ
 = 
uf
->url;

7281 
image
.
ext
 = 
uf
->ext;

7282 
image
.
width
 = -1;

7283 
image
.
height
 = -1;

7284 
image
.
ˇche
 = 
NULL
;

7285 
ˇche
 = 
	`gëImage
(&
image
, 
cur_ba£URL
, 
IMG_FLAG_AUTO
);

7286 i‡(!
cur_ba£URL
->
is_noˇche
 && 
ˇche
->
lﬂded
 & 
IMG_FLAG_LOADED
 &&

7287 !
	`°©
(
ˇche
->
fûe
, &
°
))

7288 
image_buf„r
;

7290 
TRAP_ON
;

7291 i‡(
	`ISty≥
(
uf
->
°ªam
Ë!
IST_ENCODED
)

7292 
uf
->
°ªam
 = 
	`√wEncodedSåóm
(uf->°ªam, uf->
ícodög
);

7293 i‡(
	`ßve2tmp
(*
uf
, 
ˇche
->
fûe
) < 0) {

7294 
	`UF˛o£
(
uf
);

7295 
TRAP_OFF
;

7296  
NULL
;

7298 
	`UF˛o£
(
uf
);

7299 
TRAP_OFF
;

7301 
ˇche
->
lﬂded
 = 
IMG_FLAG_LOADED
;

7302 
ˇche
->
ödex
 = 0;

7304 
image_buf„r
:

7305 i‡(
√wBuf
 =
NULL
)

7306 
√wBuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7307 
ˇche
->
lﬂded
 |
IMG_FLAG_DONT_REMOVE
;

7308 i‡(
√wBuf
->
sour˚fûe
 =
NULL
 && 
uf
->
scheme
 !
SCM_LOCAL
)

7309 
√wBuf
->
sour˚fûe
 = 
ˇche
->
fûe
;

7311 
tmp
 = 
	`S¥ötf
("<img src=\"%s\"><br><br>", 
	`html_quŸe
(
image
.
uæ
));

7312 
tmpf
 = 
	`tmp‚ame
(
TMPF_SRC
, ".html");

7313 
§c
 = 
	`f›í
(
tmpf
->
±r
, "w");

7314 
√wBuf
->
maûˇp_sour˚
 = 
tmpf
->
±r
;

7316 
	`öô_°ªam
(&
f
, 
SCM_LOCAL
, 
	`√wSåSåóm
(
tmp
));

7317 
	`lﬂdHTML°ªam
(&
f
, 
√wBuf
, 
§c
, 
TRUE
);

7318 i‡(
§c
)

7319 
	`f˛o£
(
§c
);

7321 
√wBuf
->
t›Löe
 =ÇewBuf->
fú°Löe
;

7322 
√wBuf
->
œ°Löe
 =ÇewBuf->
cuºítLöe
;

7323 
√wBuf
->
cuºítLöe
 =ÇewBuf->
fú°Löe
;

7324 
√wBuf
->
image_Êag
 = 
IMG_FLAG_AUTO
;

7325  
√wBuf
;

7326 
	}
}

7329 
Så


7330 
	$c⁄v_symbﬁ
(
Löe
 *
l
)

7332 
Så
 
tmp
 = 
NULL
;

7333 *
p
 = 
l
->
löeBuf
, *
ï
 =Ö +Ü->
Àn
;

7334 
Löïr›
 *
¥
 = 
l
->
¥›Buf
;

7335 #ifde‡
USE_M17N


7336 
w
;

7337 **
symbﬁ
 = 
NULL
;

7339 **
symbﬁ
 = 
	`gë_symbﬁ
();

7342 ; 
p
 < 
ï
;Ö++, 
¥
++) {

7343 i‡(*
¥
 & 
PC_SYMBOL
) {

7344 #ifde‡
USE_M17N


7345 
c
 = (()
	`wtf_gë_code
((
wc_uch¨
 *Ë
p
Ë& 0x7fË- 
SYMBOL_BASE
;

7346 
Àn
 = 
	`gë_m˛í
(
p
);

7348 
c
 = *
p
 - 
SYMBOL_BASE
;

7350 i‡(
tmp
 =
NULL
) {

7351 
tmp
 = 
	`Så√w_size
(
l
->
Àn
);

7352 
	`Såc›y_ch¨p_n
(
tmp
, 
l
->
löeBuf
, 
p
 -Ü->lineBuf);

7353 #ifde‡
USE_M17N


7354 
w
 = (*
¥
 & 
PC_KANJI
) ? 2 : 1;

7355 
symbﬁ
 = 
	`gë_symbﬁ
(
Di•œyCh¨£t
, &
w
);

7358 
	`Såˇt_ch¨p
(
tmp
, 
symbﬁ
[()
c
]);

7359 #ifde‡
USE_M17N


7360 
p
 +
Àn
 - 1;

7361 
¥
 +
Àn
 - 1;

7364 i‡(
tmp
 !
NULL
)

7365 
	`Såˇt_ch¨
(
tmp
, *
p
);

7367 i‡(
tmp
)

7368  
tmp
;

7370  
	`Så√w_ch¨p_n
(
l
->
löeBuf
,Ü->
Àn
);

7371 
	}
}

7377 
	$_ßveBuf„r
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
FILE
 * 
f
, 
c⁄t
)

7379 
Så
 
tmp
;

7380 
is_html
 = 
FALSE
;

7381 #ifde‡
USE_M17N


7382 
£t_ch¨£t
 = !
Di•œyCh¨£t
;

7383 
wc_˚s
 
ch¨£t
 = 
Di•œyCh¨£t
 ? Di•œyCh¨£à: 
WC_CES_US_ASCII
;

7386 i‡(
buf
->
ty≥
 && !
	`°rˇ£cmp
(buf->type, "text/html"))

7387 
is_html
 = 
TRUE
;

7389 
∑gî_√xt
:

7390 ; 
l
 !
NULL
;Ü =Ü->
√xt
) {

7391 i‡(
is_html
)

7392 
tmp
 = 
	`c⁄v_symbﬁ
(
l
);

7394 
tmp
 = 
	`Så√w_ch¨p_n
(
l
->
löeBuf
,Ü->
Àn
);

7395 
tmp
 = 
	`wc_Så_c⁄v
—mp, 
I¬îCh¨£t
, 
ch¨£t
);

7396 
	`SåÂuts
(
tmp
, 
f
);

7397 i‡(
	`Såœ°ch¨
(
tmp
Ë!'\n' && !(
c⁄t
 && 
l
->
√xt
 &&Ü->√xt->
bpos
))

7398 
	`putc
('\n', 
f
);

7400 i‡(
buf
->
∑gîSour˚
 && !(buf->
buf„Ωr›
 & 
BP_CLOSE
)) {

7401 
l
 = 
	`gëNextPage
(
buf
, 
PagîMax
);

7402 #ifde‡
USE_M17N


7403 i‡(
£t_ch¨£t
)

7404 
ch¨£t
 = 
buf
->
documít_ch¨£t
;

7406 
∑gî_√xt
;

7408 
	}
}

7411 
	$ßveBuf„r
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
)

7413 
	`_ßveBuf„r
(
buf
, buf->
fú°Löe
, 
f
, 
c⁄t
);

7414 
	}
}

7417 
	$ßveBuf„rBody
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
)

7419 
Löe
 *
l
 = 
buf
->
fú°Löe
;

7421 
l
 !
NULL
 &&Ü->
ªÆ_löíumbî
 == 0)

7422 
l
 =Ü->
√xt
;

7423 
	`_ßveBuf„r
(
buf
, 
l
, 
f
, 
c⁄t
);

7424 
	}
}

7426 
Buf„r
 *

7427 
lﬂdcmdout
(*
cmd
,

7428 
Buf„r
 *(*
lﬂd¥oc
Ë(
URLFûe
 *, Buf„∏*), Buf„∏*
deÁu…buf
)

7430 
FILE
 *
	gf
, *
p›í
(const *, const *);

7431 
Buf„r
 *
	gbuf
;

7432 
URLFûe
 
	guf
;

7434 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0')

7435  
NULL
;

7436 
	gf
 = 
p›í
(
cmd
, "r");

7437 i‡(
	gf
 =
NULL
)

7438  
NULL
;

7439 
öô_°ªam
(&
uf
, 
SCM_UNKNOWN
, 
√wFûeSåóm
(
f
, ((*)())
p˛o£
));

7440 
	gbuf
 = 
lﬂd¥oc
(&
uf
, 
deÁu…buf
);

7441 
UF˛o£
(&
uf
);

7442  
	gbuf
;

7448 
Buf„r
 *

7449 
	$gëshñl
(*
cmd
)

7451 
Buf„r
 *
buf
;

7453 
buf
 = 
	`lﬂdcmdout
(
cmd
, 
lﬂdBuf„r
, 
NULL
);

7454 i‡(
buf
 =
NULL
)

7455  
NULL
;

7456 
buf
->
fûíame
 = 
cmd
;

7457 
buf
->
buf„∫ame
 = 
	`S¥ötf
("%†%s", 
SHELLBUFFERNAME
,

7458 
	`c⁄v_‰om_sy°em
(
cmd
))->
±r
;

7459  
buf
;

7460 
	}
}

7465 
Buf„r
 *

7466 
	$gëpùe
(*
cmd
)

7468 
FILE
 *
f
, *
	`p›í
(const *, const *);

7469 
Buf„r
 *
buf
;

7471 i‡(
cmd
 =
NULL
 || *cmd == '\0')

7472  
NULL
;

7473 
f
 = 
	`p›í
(
cmd
, "r");

7474 i‡(
f
 =
NULL
)

7475  
NULL
;

7476 
buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7477 
buf
->
∑gîSour˚
 = 
	`√wFûeSåóm
(
f
, ((*)())
p˛o£
);

7478 
buf
->
fûíame
 = 
cmd
;

7479 
buf
->
buf„∫ame
 = 
	`S¥ötf
("%†%s", 
PIPEBUFFERNAME
,

7480 
	`c⁄v_‰om_sy°em
(
cmd
))->
±r
;

7481 
buf
->
buf„Ωr›
 |
BP_PIPE
;

7482 #ifde‡
USE_M17N


7483 
buf
->
documít_ch¨£t
 = 
WC_CES_US_ASCII
;

7485  
buf
;

7486 
	}
}

7491 
Buf„r
 *

7492 
	$›íPagîBuf„r
(
I≈utSåóm
 
°ªam
, 
Buf„r
 *
buf
)

7495 i‡(
buf
 =
NULL
)

7496 
buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7497 
buf
->
∑gîSour˚
 = 
°ªam
;

7498 
buf
->
buf„∫ame
 = 
	`gëív
("MAN_PN");

7499 i‡(
buf
->
buf„∫ame
 =
NULL
)

7500 
buf
->
buf„∫ame
 = 
PIPEBUFFERNAME
;

7502 
buf
->
buf„∫ame
 = 
	`c⁄v_‰om_sy°em
(buf->buffername);

7503 
buf
->
buf„Ωr›
 |
BP_PIPE
;

7504 #ifde‡
USE_M17N


7505 i‡(
c⁄ã¡_ch¨£t
 && 
U£C⁄ã¡Ch¨£t
)

7506 
buf
->
documít_ch¨£t
 = 
c⁄ã¡_ch¨£t
;

7508 
buf
->
documít_ch¨£t
 = 
WC_CES_US_ASCII
;

7510 
buf
->
cuºítLöe
 = buf->
fú°Löe
;

7512  
buf
;

7513 
	}
}

7515 
Buf„r
 *

7516 
	$›íGíîÆPagîBuf„r
(
I≈utSåóm
 
°ªam
)

7518 
Buf„r
 *
buf
;

7519 *
t
 = "text/plain";

7520 
Buf„r
 *
t_buf
 = 
NULL
;

7521 
URLFûe
 
uf
;

7523 
	`öô_°ªam
(&
uf
, 
SCM_UNKNOWN
, 
°ªam
);

7525 #ifde‡
USE_M17N


7526 
c⁄ã¡_ch¨£t
 = 0;

7528 i‡(
SórchHódî
) {

7529 
t_buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7530 
	`ªadHódî
(&
uf
, 
t_buf
, 
TRUE
, 
NULL
);

7531 
t
 = 
	`checkC⁄ã¡Ty≥
(
t_buf
);

7532 i‡(
t
 =
NULL
)

7533 
t
 = "text/plain";

7534 i‡(
t_buf
) {

7535 
t_buf
->
t›Löe
 =Å_buf->
fú°Löe
;

7536 
t_buf
->
cuºítLöe
 =Å_buf->
œ°Löe
;

7538 
SórchHódî
 = 
FALSE
;

7540 i‡(
DeÁu…Ty≥
) {

7541 
t
 = 
DeÁu…Ty≥
;

7542 
DeÁu…Ty≥
 = 
NULL
;

7544 i‡(!
	`°rˇ£cmp
(
t
, "text/html")) {

7545 
buf
 = 
	`lﬂdHTMLBuf„r
(&
uf
, 
t_buf
);

7546 
buf
->
ty≥
 = "text/html";

7548 i‡(
	`is_∂aö_ãxt_ty≥
(
t
)) {

7549 i‡(
	`ISty≥
(
°ªam
Ë!
IST_ENCODED
)

7550 
°ªam
 = 
	`√wEncodedSåóm
(°ªam, 
uf
.
ícodög
);

7551 
buf
 = 
	`›íPagîBuf„r
(
°ªam
, 
t_buf
);

7552 
buf
->
ty≥
 = "text/plain";

7554 #ifde‡
USE_IMAGE


7555 i‡(
a˘iveImage
 && 
di•œyImage
 && !
u£ExtImageVõwî
 &&

7556 !(
w3m_dump
 & ~
DUMP_FRAME
Ë&& !
	`°∫ˇ£cmp
(
t
, "image/", 6)) {

7557 
cur_ba£URL
 = 
	`New
(
P¨£dURL
);

7558 
	`∑r£URL
("-", 
cur_ba£URL
, 
NULL
);

7559 
buf
 = 
	`lﬂdImageBuf„r
(&
uf
, 
t_buf
);

7560 
buf
->
ty≥
 = "text/html";

7564 i‡(
	`doExã∫Æ
(
uf
, "-", 
t
, &
buf
, 
t_buf
)) {

7565 
	`UF˛o£
(&
uf
);

7566 i‡(
buf
 =
NULL
 || bu‡=
NO_BUFFER
)

7567  
buf
;

7570 i‡(
	`ISty≥
(
°ªam
Ë!
IST_ENCODED
)

7571 
°ªam
 = 
	`√wEncodedSåóm
(°ªam, 
uf
.
ícodög
);

7572 
buf
 = 
	`›íPagîBuf„r
(
°ªam
, 
t_buf
);

7573 
buf
->
ty≥
 = "text/plain";

7576 
buf
->
ªÆ_ty≥
 = 
t
;

7577 
buf
->
cuºítURL
.
scheme
 = 
SCM_LOCAL
;

7578 
buf
->
cuºítURL
.
fûe
 = "-";

7579  
buf
;

7580 
	}
}

7582 
Löe
 *

7583 
	$gëNextPage
(
Buf„r
 *
buf
, 
∂í
)

7585 
Löe
 *vﬁ©ûê
t›
 = 
buf
->
t›Löe
, *vﬁ©ûê
œ°
 = buf->
œ°Löe
,

7586 *vﬁ©ûê
cur
 = 
buf
->
cuºítLöe
;

7587 
i
;

7588 vﬁ©ûê
∆öes
 = 0;

7589 
˛í_t
 
löñí
 = 0, 
åbyã
 = 
buf
->trbyte;

7590 
Så
 
löeBuf2
;

7591 vﬁ©ûê
¥e_lbuf
 = '\0';

7592 
URLFûe
 
uf
;

7593 #ifde‡
USE_M17N


7594 
wc_˚s
 
ch¨£t
;

7595 
wc_˚s
 vﬁ©ûê
doc_ch¨£t
 = 
DocumítCh¨£t
;

7596 
wc_uöt8
 
ﬁd_auto_dëe˘
 = 
WcO±i⁄
.
auto_dëe˘
;

7598 vﬁ©ûê
squìze_Êag
 = 
FALSE
;

7599 
Löïr›
 *
¥›Buf„r
 = 
NULL
;

7601 #ifde‡
USE_ANSI_COLOR


7602 
Löecﬁ‹
 *
cﬁ‹Buf„r
 = 
NULL
;

7604 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7606 i‡(
buf
->
∑gîSour˚
 =
NULL
)

7607  
NULL
;

7609 i‡(
œ°
 !
NULL
) {

7610 
∆öes
 = 
œ°
->
ªÆ_löíumbî
;

7611 
¥e_lbuf
 = *(
œ°
->
löeBuf
);

7612 i‡(
¥e_lbuf
 == '\0')

7613 
¥e_lbuf
 = '\n';

7614 
buf
->
cuºítLöe
 = 
œ°
;

7617 #ifde‡
USE_M17N


7618 
ch¨£t
 = 
buf
->
documít_ch¨£t
;

7619 i‡(
buf
->
documít_ch¨£t
 !
WC_CES_US_ASCII
)

7620 
doc_ch¨£t
 = 
buf
->
documít_ch¨£t
;

7621 i‡(
U£C⁄ã¡Ch¨£t
) {

7622 
c⁄ã¡_ch¨£t
 = 0;

7623 
	`checkC⁄ã¡Ty≥
(
buf
);

7624 i‡(
c⁄ã¡_ch¨£t
)

7625 
doc_ch¨£t
 = 
c⁄ã¡_ch¨£t
;

7627 
WcO±i⁄
.
auto_dëe˘
 = 
buf
->auto_detect;

7630 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

7631 
∑gî_íd
;

7633 
TRAP_ON
;

7635 
	`öô_°ªam
(&
uf
, 
SCM_UNKNOWN
, 
NULL
);

7636 
i
 = 0; i < 
∂í
; i++) {

7637 
löeBuf2
 = 
	`SåmyISgës
(
buf
->
∑gîSour˚
);

7638 i‡(
löeBuf2
->
Àngth
 == 0) {

7640 i‡(
buf
->
fûíame
)

7641 
buf
->
buf„∫ame
 = 
	`S¥ötf
("%s %s",

7642 
CPIPEBUFFERNAME
,

7643 
	`c⁄v_‰om_sy°em
(
buf
->
fûíame
))->

7644 
±r
;

7645 i‡(
	`gëív
("MAN_PN"Ë=
NULL
)

7646 
buf
->
buf„∫ame
 = 
CPIPEBUFFERNAME
;

7647 
buf
->
buf„Ωr›
 |
BP_CLOSE
;

7650 
löñí
 +
löeBuf2
->
Àngth
;

7651 
	`showProgªss
(&
löñí
, &
åbyã
);

7652 
löeBuf2
 =

7653 
	`c⁄vîtLöe
(&
uf
, 
löeBuf2
, 
PAGER_MODE
, &
ch¨£t
, 
doc_ch¨£t
);

7654 i‡(
squìzeBœnkLöe
) {

7655 
squìze_Êag
 = 
FALSE
;

7656 i‡(
löeBuf2
->
±r
[0] ='\n' && 
¥e_lbuf
 == '\n') {

7657 ++
∆öes
;

7658 --
i
;

7659 
squìze_Êag
 = 
TRUE
;

7662 
¥e_lbuf
 = 
löeBuf2
->
±r
[0];

7664 ++
∆öes
;

7665 
	`Såch›
(
löeBuf2
);

7666 
löeBuf2
 = 
	`checkTy≥
÷öeBuf2, &
¥›Buf„r
, &
cﬁ‹Buf„r
);

7667 
	`add√wlöe
(
buf
, 
löeBuf2
->
±r
, 
¥›Buf„r
, 
cﬁ‹Buf„r
,

7668 
löeBuf2
->
Àngth
, 
FOLD_BUFFER_WIDTH
, 
∆öes
);

7669 i‡(!
t›
) {

7670 
t›
 = 
buf
->
fú°Löe
;

7671 
cur
 = 
t›
;

7673 i‡(
buf
->
œ°Löe
->
ªÆ_löíumbî
 - buf->
fú°Löe
->real_linenumber

7674 >
PagîMax
) {

7675 
Löe
 *
l
 = 
buf
->
fú°Löe
;

7677 i‡(
t›
 =
l
)

7678 
t›
 = 
l
->
√xt
;

7679 i‡(
cur
 =
l
)

7680 
cur
 = 
l
->
√xt
;

7681 i‡(
œ°
 =
l
)

7682 
œ°
 = 
NULL
;

7683 
l
 =Ü->
√xt
;

7684 } 
l
 &&Ü->
bpos
);

7685 
buf
->
fú°Löe
 = 
l
;

7686 
buf
->
fú°Löe
->
¥ev
 = 
NULL
;

7689 
∑gî_íd
:

7690 
TRAP_OFF
;

7692 
buf
->
åbyã
 =Årbyã + 
löñí
;

7693 #ifde‡
USE_M17N


7694 
buf
->
documít_ch¨£t
 = 
ch¨£t
;

7695 
WcO±i⁄
.
auto_dëe˘
 = 
ﬁd_auto_dëe˘
;

7697 
buf
->
t›Löe
 = 
t›
;

7698 
buf
->
cuºítLöe
 = 
cur
;

7699 i‡(!
œ°
)

7700 
œ°
 = 
buf
->
fú°Löe
;

7701 i‡(
œ°
 && (œ°->
√xt
 || !
squìze_Êag
))

7702 
œ°
 =Üa°->
√xt
;

7703  
œ°
;

7704 
	}
}

7707 
	$ßve2tmp
(
URLFûe
 
uf
, *
tmpf
)

7709 
FILE
 *
ff
;

7710 
check
;

7711 
˛í_t
 
löñí
 = 0, 
åbyã
 = 0;

7712 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

7713 
JMP_BUF
 
ív_bak
;

7715 
ff
 = 
	`f›í
(
tmpf
, "wb");

7716 i‡(
ff
 =
NULL
) {

7720 
	`bc›y
(
Ab‹tLﬂdög
, 
ív_bak
, (
JMP_BUF
));

7721 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

7722 
_íd
;

7724 
TRAP_ON
;

7725 
check
 = 0;

7726 #ifde‡
USE_NNTP


7727 i‡(
uf
.
scheme
 =
SCM_NEWS
) {

7728 
c
;

7729 
c
 = 
	`UFgëc
(&
uf
), !
	`i£os
(uf.
°ªam
)) {

7730 i‡(
c
 == '\n') {

7731 i‡(
check
 == 0)

7732 
check
++;

7733 i‡(
check
 == 3)

7736 i‡(
c
 ='.' && 
check
 == 1)

7737 
check
++;

7738 i‡(
c
 ='\r' && 
check
 == 2)

7739 
check
++;

7741 
check
 = 0;

7742 
	`putc
(
c
, 
ff
);

7743 
löñí
 +(
c
);

7744 
	`showProgªss
(&
löñí
, &
åbyã
);

7750 
Så
 
buf
 = 
	`Så√w_size
(
SAVE_BUF_SIZE
);

7751 
	`UFªad
(&
uf
, 
buf
, 
SAVE_BUF_SIZE
)) {

7752 
	`SåÂuts
(
buf
, 
ff
);

7753 
löñí
 +
buf
->
Àngth
;

7754 
	`showProgªss
(&
löñí
, &
åbyã
);

7757 
_íd
:

7758 
	`bc›y
(
ív_bak
, 
Ab‹tLﬂdög
, (
JMP_BUF
));

7759 
TRAP_OFF
;

7760 
	`f˛o£
(
ff
);

7761 
cuºít_c⁄ã¡_Àngth
 = 0;

7763 
	}
}

7766 
	$doExã∫Æ
(
URLFûe
 
uf
, *
∑th
, *
ty≥
, 
Buf„r
 **
buÂ
,

7767 
Buf„r
 *
deÁu…buf
)

7769 
Så
 
tmpf
, 
comm™d
;

7770 
maûˇp
 *
mˇp
;

7771 
mc_°©
;

7772 
Buf„r
 *
buf
 = 
NULL
;

7773 *
hódî
, *
§c
 = 
NULL
, *
ext
 = 
uf
.ext;

7775 i‡(!(
mˇp
 = 
	`£¨chExtVõwî
(
ty≥
)))

7778 i‡(
mˇp
->
«mëem∂©e
) {

7779 
tmpf
 = 
	`unquŸe_maûˇp
(
mˇp
->
«mëem∂©e
, 
NULL
, "", NULL, NULL);

7780 i‡(
tmpf
->
±r
[0] == '.')

7781 
ext
 = 
tmpf
->
±r
;

7783 
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, (
ext
 && *extË?Éxà: 
NULL
);

7785 i‡(
	`ISty≥
(
uf
.
°ªam
Ë!
IST_ENCODED
)

7786 
uf
.
°ªam
 = 
	`√wEncodedSåóm
(uf.°ªam, uf.
ícodög
);

7787 
hódî
 = 
	`checkHódî
(
deÁu…buf
, "Content-Type:");

7788 i‡(
hódî
)

7789 
hódî
 = 
	`c⁄v_to_sy°em
(header);

7790 
comm™d
 = 
	`unquŸe_maûˇp
(
mˇp
->
võwî
, 
ty≥
, 
tmpf
->
±r
, 
hódî
, &
mc_°©
);

7791 #i‚de‡
__EMX__


7792 i‡(!(
mc_°©
 & 
MCSTAT_REPNAME
)) {

7793 
Så
 
tmp
 = 
	`S¥ötf
("(%sË< %s", 
comm™d
->
±r
, 
	`shñl_quŸe
(
tmpf
->ptr));

7794 
comm™d
 = 
tmp
;

7798 #ifde‡
HAVE_SETPGRP


7799 i‡(!(
mˇp
->
Êags
 & (
MAILCAP_HTMLOUTPUT
 | 
MAILCAP_COPIOUSOUTPUT
)) &&

7800 !(
mˇp
->
Êags
 & 
MAILCAP_NEEDSTERMINAL
Ë&& 
BackgroundExtVõwî
) {

7801 
	`Êush_ây
();

7802 i‡(!
	`f‹k
()) {

7803 
	`£tup_chûd
(
FALSE
, 0, 
	`UFfûío
(&
uf
));

7804 i‡(
	`ßve2tmp
(
uf
, 
tmpf
->
±r
) < 0)

7805 
	`exô
(1);

7806 
	`UF˛o£
(&
uf
);

7807 
	`myExec
(
comm™d
->
±r
);

7809 *
buÂ
 = 
NO_BUFFER
;

7815 i‡(
	`ßve2tmp
(
uf
, 
tmpf
->
±r
) < 0) {

7816 *
buÂ
 = 
NULL
;

7820 i‡(
mˇp
->
Êags
 & (
MAILCAP_HTMLOUTPUT
 | 
MAILCAP_COPIOUSOUTPUT
)) {

7821 i‡(
deÁu…buf
 =
NULL
)

7822 
deÁu…buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

7823 i‡(
deÁu…buf
->
sour˚fûe
)

7824 
§c
 = 
deÁu…buf
->
sour˚fûe
;

7826 
§c
 = 
tmpf
->
±r
;

7827 
deÁu…buf
->
sour˚fûe
 = 
NULL
;

7828 
deÁu…buf
->
maûˇp
 = 
mˇp
;

7830 i‡(
mˇp
->
Êags
 & 
MAILCAP_HTMLOUTPUT
) {

7831 
buf
 = 
	`lﬂdcmdout
(
comm™d
->
±r
, 
lﬂdHTMLBuf„r
, 
deÁu…buf
);

7832 i‡(
buf
 && bu‡!
NO_BUFFER
) {

7833 
buf
->
ty≥
 = "text/html";

7834 
buf
->
maûˇp_sour˚
 = buf->
sour˚fûe
;

7835 
buf
->
sour˚fûe
 = 
§c
;

7838 i‡(
mˇp
->
Êags
 & 
MAILCAP_COPIOUSOUTPUT
) {

7839 
buf
 = 
	`lﬂdcmdout
(
comm™d
->
±r
, 
lﬂdBuf„r
, 
deÁu…buf
);

7840 i‡(
buf
 && bu‡!
NO_BUFFER
) {

7841 
buf
->
ty≥
 = "text/plain";

7842 
buf
->
maûˇp_sour˚
 = buf->
sour˚fûe
;

7843 
buf
->
sour˚fûe
 = 
§c
;

7847 i‡(
mˇp
->
Êags
 & 
MAILCAP_NEEDSTERMINAL
 || !
BackgroundExtVõwî
) {

7848 
	`fmTîm
();

7849 
	`mySy°em
(
comm™d
->
±r
, 0);

7850 
	`fmInô
();

7851 i‡(
CuºítTab
 && 
Cuºítbuf
)

7852 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

7855 
	`mySy°em
(
comm™d
->
±r
, 1);

7857 
buf
 = 
NO_BUFFER
;

7859 i‡(
buf
 && bu‡!
NO_BUFFER
) {

7860 
buf
->
fûíame
 = 
∑th
;

7861 i‡(
buf
->
buf„∫ame
 =
NULL
 || buf->buffername[0] == '\0')

7862 
buf
->
buf„∫ame
 = 
	`c⁄v_‰om_sy°em
(
	`œ°FûeName
(
∑th
));

7863 
buf
->
edô
 = 
mˇp
->edit;

7864 
buf
->
maûˇp
 = 
mˇp
;

7866 *
buÂ
 = 
buf
;

7868 
	}
}

7871 
	$_MoveFûe
(*
∑th1
, *
∑th2
)

7873 
I≈utSåóm
 
f1
;

7874 
FILE
 *
f2
;

7875 
is_pùe
;

7876 
˛í_t
 
löñí
 = 0, 
åbyã
 = 0;

7877 
Så
 
buf
;

7879 
f1
 = 
	`›íIS
(
∑th1
);

7880 i‡(
f1
 =
NULL
)

7882 i‡(*
∑th2
 ='|' && 
PîmôSaveToPùe
) {

7883 
is_pùe
 = 
TRUE
;

7884 
f2
 = 
	`p›í
(
∑th2
 + 1, "w");

7887 
is_pùe
 = 
FALSE
;

7888 
f2
 = 
	`f›í
(
∑th2
, "wb");

7890 i‡(
f2
 =
NULL
) {

7891 
	`IS˛o£
(
f1
);

7894 
cuºít_c⁄ã¡_Àngth
 = 0;

7895 
buf
 = 
	`Så√w_size
(
SAVE_BUF_SIZE
);

7896 
	`ISªad
(
f1
, 
buf
, 
SAVE_BUF_SIZE
)) {

7897 
	`SåÂuts
(
buf
, 
f2
);

7898 
löñí
 +
buf
->
Àngth
;

7899 
	`showProgªss
(&
löñí
, &
åbyã
);

7901 
	`IS˛o£
(
f1
);

7902 i‡(
is_pùe
)

7903 
	`p˛o£
(
f2
);

7905 
	`f˛o£
(
f2
);

7907 
	}
}

7910 
	$_doFûeC›y
(*
tmpf
, *
def°r
, 
dow∆ﬂd
)

7912 #i‚de‡
__MINGW32_VERSION


7913 
Så
 
msg
;

7914 
Så
 
fûí
;

7915 *
p
, *
q
 = 
NULL
;

7916 
pid_t
 
pid
;

7917 *
lock
;

7918 #i‡!(
	`deföed
(
HAVE_SYMLINK
Ë&& deföed(
HAVE_LSTAT
))

7919 
FILE
 *
f
;

7921 
°©
 
°
;

7922 
˛í_t
 
size
 = 0;

7923 
is_pùe
 = 
FALSE
;

7925 i‡(
fmInôülized
) {

7926 
p
 = 
	`£¨chKeyD©a
();

7927 i‡(
p
 =
NULL
 || *p == '\0') {

7929 
q
 = 
	`öputLöeHi°
("(Download)Save fileÅo: ",

7930 
def°r
, 
IN_COMMAND
, 
SaveHi°
);

7931 i‡(
q
 =
NULL
 || *q == '\0')

7932  
FALSE
;

7933 
p
 = 
	`c⁄v_to_sy°em
(
q
);

7935 i‡(*
p
 ='|' && 
PîmôSaveToPùe
)

7936 
is_pùe
 = 
TRUE
;

7938 i‡(
q
) {

7939 
p
 = 
	`u√sˇ≥_•a˚s
(
	`Så√w_ch¨p
(
q
))->
±r
;

7940 
p
 = 
	`c⁄v_to_sy°em
(
q
);

7942 
p
 = 
	`ex∑ndP©h
(p);

7943 i‡(
	`checkOvîWrôe
(
p
) < 0)

7946 i‡(
	`checkC›yFûe
(
tmpf
, 
p
) < 0) {

7948 
msg
 = 
	`S¥ötf
("Can't copy. %sánd %sáre identical.",

7949 
	`c⁄v_‰om_sy°em
(
tmpf
), c⁄v_‰om_sy°em(
p
));

7950 
	`di•_îr_mesßge
(
msg
->
±r
, 
FALSE
);

7953 i‡(!
dow∆ﬂd
) {

7954 i‡(
	`_MoveFûe
(
tmpf
, 
p
) < 0) {

7956 
msg
 = 
	`S¥ötf
("C™'àßvêtÿ%s", 
	`c⁄v_‰om_sy°em
(
p
));

7957 
	`di•_îr_mesßge
(
msg
->
±r
, 
FALSE
);

7961 
lock
 = 
	`tmp‚ame
(
TMPF_DFL
, ".lock")->
±r
;

7962 #i‡
	`deföed
(
HAVE_SYMLINK
Ë&& deföed(
HAVE_LSTAT
)

7963 
	`symlök
(
p
, 
lock
);

7965 
f
 = 
	`f›í
(
lock
, "w");

7966 i‡(
f
)

7967 
	`f˛o£
(
f
);

7969 
	`Êush_ây
();

7970 
pid
 = 
	`f‹k
();

7971 i‡(!
pid
) {

7972 
	`£tup_chûd
(
FALSE
, 0, -1);

7973 i‡(!
	`_MoveFûe
(
tmpf
, 
p
Ë&& 
Pª£rveTime°amp
 && !
is_pùe
 &&

7974 !
	`°©
(
tmpf
, &
°
))

7975 
	`£tModtime
(
p
, 
°
.
°_mtime
);

7976 
	`u∆ök
(
lock
);

7977 
	`exô
(0);

7979 i‡(!
	`°©
(
tmpf
, &
°
))

7980 
size
 = 
°
.
°_size
;

7981 
	`addDow∆ﬂdLi°
(
pid
, 
	`c⁄v_‰om_sy°em
(
tmpf
), 
p
, 
lock
, 
size
);

7984 
q
 = 
	`£¨chKeyD©a
();

7985 i‡(
q
 =
NULL
 || *q == '\0') {

7987 
	`¥ötf
("(Download)Save fileÅo: ");

7988 
	`fÊush
(
°dout
);

7989 
fûí
 = 
	`Såfgës
(
°dö
);

7990 i‡(
fûí
->
Àngth
 == 0)

7992 
q
 = 
fûí
->
±r
;

7994 
p
 = 
q
 + 
	`°æí
(qË- 1; 
	`IS_SPACE
(*p);Ö--) ;

7995 *(
p
 + 1) = '\0';

7996 i‡(*
q
 == '\0')

7998 
p
 = 
q
;

7999 i‡(*
p
 ='|' && 
PîmôSaveToPùe
)

8000 
is_pùe
 = 
TRUE
;

8002 
p
 = 
	`ex∑ndP©h
(p);

8003 i‡(
	`checkOvîWrôe
(
p
) < 0)

8006 i‡(
	`checkC›yFûe
(
tmpf
, 
p
) < 0) {

8008 
	`¥ötf
("C™'àc›y. %†™d %†¨êidítiˇl.", 
tmpf
, 
p
);

8011 i‡(
	`_MoveFûe
(
tmpf
, 
p
) < 0) {

8013 
	`¥ötf
("C™'àßvêtÿ%s\n", 
p
);

8016 i‡(
Pª£rveTime°amp
 && !
is_pùe
 && !
	`°©
(
tmpf
, &
°
))

8017 
	`£tModtime
(
p
, 
°
.
°_mtime
);

8021 
	}
}

8024 
	$doFûeMove
(*
tmpf
, *
def°r
)

8026 
ªt
 = 
	`doFûeC›y
(
tmpf
, 
def°r
);

8027 
	`u∆ök
(
tmpf
);

8028  
ªt
;

8029 
	}
}

8032 
	$doFûeSave
(
URLFûe
 
uf
, *
def°r
)

8034 #i‚de‡
__MINGW32_VERSION


8035 
Så
 
msg
;

8036 
Så
 
fûí
;

8037 *
p
, *
q
;

8038 
pid_t
 
pid
;

8039 *
lock
;

8040 *
tmpf
 = 
NULL
;

8041 #i‡!(
	`deföed
(
HAVE_SYMLINK
Ë&& deföed(
HAVE_LSTAT
))

8042 
FILE
 *
f
;

8045 i‡(
fmInôülized
) {

8046 
p
 = 
	`£¨chKeyD©a
();

8047 i‡(
p
 =
NULL
 || *p == '\0') {

8049 
p
 = 
	`öputLöeHi°
("(Download)Save fileÅo: ",

8050 
def°r
, 
IN_FILENAME
, 
SaveHi°
);

8051 i‡(
p
 =
NULL
 || *p == '\0')

8053 
p
 = 
	`c⁄v_to_sy°em
(p);

8055 i‡(
	`checkOvîWrôe
(
p
) < 0)

8057 i‡(
	`checkSaveFûe
(
uf
.
°ªam
, 
p
) < 0) {

8059 
msg
 = 
	`S¥ötf
("Can't save. Load fileánd %sáre identical.",

8060 
	`c⁄v_‰om_sy°em
(
p
));

8061 
	`di•_îr_mesßge
(
msg
->
±r
, 
FALSE
);

8070 
lock
 = 
	`tmp‚ame
(
TMPF_DFL
, ".lock")->
±r
;

8071 #i‡
	`deföed
(
HAVE_SYMLINK
Ë&& deföed(
HAVE_LSTAT
)

8072 
	`symlök
(
p
, 
lock
);

8074 
f
 = 
	`f›í
(
lock
, "w");

8075 i‡(
f
)

8076 
	`f˛o£
(
f
);

8078 
	`Êush_ây
();

8079 
pid
 = 
	`f‹k
();

8080 i‡(!
pid
) {

8081 i‡((
uf
.
c⁄ã¡_ícodög
 !
CMP_NOCOMPRESS
Ë&& 
AutoUncom¥ess
) {

8082 
	`uncom¥ess_°ªam
(&
uf
, &
tmpf
);

8083 i‡(
tmpf
)

8084 
	`u∆ök
(
tmpf
);

8086 
	`£tup_chûd
(
FALSE
, 0, 
	`UFfûío
(&
uf
));

8087 i‡(!
	`ßve2tmp
(
uf
, 
p
Ë&& 
Pª£rveTime°amp
 && uf.
modtime
 != -1)

8088 
	`£tModtime
(
p
, 
uf
.
modtime
);

8089 
	`UF˛o£
(&
uf
);

8090 
	`u∆ök
(
lock
);

8091 
	`exô
(0);

8093 
	`addDow∆ﬂdLi°
(
pid
, 
uf
.
uæ
, 
p
, 
lock
, 
cuºít_c⁄ã¡_Àngth
);

8096 
q
 = 
	`£¨chKeyD©a
();

8097 i‡(
q
 =
NULL
 || *q == '\0') {

8099 
	`¥ötf
("(Download)Save fileÅo: ");

8100 
	`fÊush
(
°dout
);

8101 
fûí
 = 
	`Såfgës
(
°dö
);

8102 i‡(
fûí
->
Àngth
 == 0)

8104 
q
 = 
fûí
->
±r
;

8106 
p
 = 
q
 + 
	`°æí
(qË- 1; 
	`IS_SPACE
(*p);Ö--) ;

8107 *(
p
 + 1) = '\0';

8108 i‡(*
q
 == '\0')

8110 
p
 = 
	`ex∑ndP©h
(
q
);

8111 i‡(
	`checkOvîWrôe
(
p
) < 0)

8113 i‡(
	`checkSaveFûe
(
uf
.
°ªam
, 
p
) < 0) {

8115 
	`¥ötf
("C™'àßve. Lﬂd fûê™d %†¨êidítiˇl.", 
p
);

8118 i‡(
uf
.
c⁄ã¡_ícodög
 !
CMP_NOCOMPRESS
 && 
AutoUncom¥ess
) {

8119 
	`uncom¥ess_°ªam
(&
uf
, &
tmpf
);

8120 i‡(
tmpf
)

8121 
	`u∆ök
(
tmpf
);

8123 i‡(
	`ßve2tmp
(
uf
, 
p
) < 0) {

8125 
	`¥ötf
("C™'àßvêtÿ%s\n", 
p
);

8128 i‡(
Pª£rveTime°amp
 && 
uf
.
modtime
 != -1)

8129 
	`£tModtime
(
p
, 
uf
.
modtime
);

8133 
	}
}

8136 
	$checkC›yFûe
(*
∑th1
, *
∑th2
)

8138 
°©
 
°1
, 
°2
;

8140 i‡(*
∑th2
 ='|' && 
PîmôSaveToPùe
)

8142 i‡((
	`°©
(
∑th1
, &
°1
Ë=0Ë&& (°©(
∑th2
, &
°2
) == 0))

8143 i‡(
°1
.
°_öo
 =
°2
.st_ino)

8146 
	}
}

8149 
	$checkSaveFûe
(
I≈utSåóm
 
°ªam
, *
∑th2
)

8151 
°©
 
°1
, 
°2
;

8152 
des
 = 
	`ISfûío
(
°ªam
);

8154 i‡(
des
 < 0)

8156 i‡(*
∑th2
 ='|' && 
PîmôSaveToPùe
)

8158 i‡((
	`f°©
(
des
, &
°1
Ë=0Ë&& (
	`°©
(
∑th2
, &
°2
) == 0))

8159 i‡(
°1
.
°_öo
 =
°2
.st_ino)

8162 
	}
}

8165 
	$checkOvîWrôe
(*
∑th
)

8167 
°©
 
°
;

8168 *
™s
;

8170 i‡(
	`°©
(
∑th
, &
°
) < 0)

8173 
™s
 = 
	`öputAnswî
("FileÉxists. Overwrite? (y/n)");

8174 i‡(
™s
 && 
	`TOLOWER
(*ans) == 'y')

8178 
	}
}

8181 
	$öputAnswî
(*
¥om±
)

8183 *
™s
;

8185 i‡(
QuõtMesßge
)

8187 i‡(
fmInôülized
) {

8188 
	`ãrm_øw
();

8189 
™s
 = 
	`öputCh¨
(
¥om±
);

8192 
	`¥ötf
("%s", 
¥om±
);

8193 
	`fÊush
(
°dout
);

8194 
™s
 = 
	`Såfgës
(
°dö
)->
±r
;

8196  
™s
;

8197 
	}
}

8200 
	$uncom¥ess_°ªam
(
URLFûe
 *
uf
, **
§c
)

8202 #i‚de‡
__MINGW32_VERSION


8203 
pid_t
 
pid1
;

8204 
FILE
 *
f1
;

8205 *
ex∑nd_cmd
 = 
GUNZIP_CMDNAME
;

8206 *
ex∑nd_«me
 = 
GUNZIP_NAME
;

8207 *
tmpf
 = 
NULL
;

8208 *
ext
 = 
NULL
;

8209 
com¥essi⁄_decodî
 *
d
;

8211 i‡(
	`ISty≥
(
uf
->
°ªam
Ë!
IST_ENCODED
) {

8212 
uf
->
°ªam
 = 
	`√wEncodedSåóm
(uf->°ªam, uf->
ícodög
);

8213 
uf
->
ícodög
 = 
ENC_7BIT
;

8215 
d
 = 
com¥essi⁄_decodîs
; d->
ty≥
 !
CMP_NOCOMPRESS
; d++) {

8216 i‡(
uf
->
com¥essi⁄
 =
d
->
ty≥
) {

8217 i‡(
d
->
auxbö_p
)

8218 
ex∑nd_cmd
 = 
	`auxböFûe
(
d
->
cmd
);

8220 
ex∑nd_cmd
 = 
d
->
cmd
;

8221 
ex∑nd_«me
 = 
d
->
«me
;

8222 
ext
 = 
d
->ext;

8226 
uf
->
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

8228 i‡(
uf
->
scheme
 !
SCM_LOCAL


8229 #ifde‡
USE_IMAGE


8230 && !
image_sour˚


8233 
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
ext
)->
±r
;

8237 
pid1
 = 
	`›í_pùe_rw
(&
f1
, 
NULL
);

8238 i‡(
pid1
 < 0) {

8239 
	`UF˛o£
(
uf
);

8242 i‡(
pid1
 == 0) {

8244 
pid_t
 
pid2
;

8245 
FILE
 *
f2
 = 
°dö
;

8248 
pid2
 = 
	`›í_pùe_rw
(&
f2
, 
NULL
);

8249 i‡(
pid2
 < 0) {

8250 
	`UF˛o£
(
uf
);

8251 
	`exô
(1);

8253 i‡(
pid2
 == 0) {

8255 
Så
 
buf
 = 
	`Så√w_size
(
SAVE_BUF_SIZE
);

8256 
FILE
 *
f
 = 
NULL
;

8258 
	`£tup_chûd
(
TRUE
, 2, 
	`UFfûío
(
uf
));

8259 i‡(
tmpf
)

8260 
f
 = 
	`f›í
(
tmpf
, "wb");

8261 
	`UFªad
(
uf
, 
buf
, 
SAVE_BUF_SIZE
)) {

8262 i‡(
	`SåÂuts
(
buf
, 
°dout
) < 0)

8264 i‡(
f
)

8265 
	`SåÂuts
(
buf
, 
f
);

8267 
	`UF˛o£
(
uf
);

8268 i‡(
f
)

8269 
	`f˛o£
(
f
);

8270 
	`exô
(0);

8273 
	`dup2
(1, 2);

8274 
	`£tup_chûd
(
TRUE
, -1, -1);

8275 
	`exe˛p
(
ex∑nd_cmd
, 
ex∑nd_«me
, 
NULL
);

8276 
	`exô
(1);

8278 i‡(
tmpf
) {

8279 i‡(
§c
)

8280 *
§c
 = 
tmpf
;

8282 
uf
->
scheme
 = 
SCM_LOCAL
;

8284 
	`UFhÆf˛o£
(
uf
);

8285 
uf
->
°ªam
 = 
	`√wFûeSåóm
(
f1
, ((*)())
f˛o£
);

8287 
	}
}

8289 
FILE
 *

8290 
	$Àss›í_°ªam
(*
∑th
)

8292 *
Àss›í
;

8293 
FILE
 *
Â
;

8295 
Àss›í
 = 
	`gëív
("LESSOPEN");

8296 i‡(
Àss›í
 =
NULL
) {

8297  
NULL
;

8299 i‡(
Àss›í
[0] == '\0') {

8300  
NULL
;

8303 i‡(
Àss›í
[0] == '|') {

8305 
Så
 
tmpf
;

8306 
c
;

8308 ++
Àss›í
;

8309 
tmpf
 = 
	`S¥ötf
(
Àss›í
, 
	`shñl_quŸe
(
∑th
));

8310 
Â
 = 
	`p›í
(
tmpf
->
±r
, "r");

8311 i‡(
Â
 =
NULL
) {

8312  
NULL
;

8314 
c
 = 
	`gëc
(
Â
);

8315 i‡(
c
 =
EOF
) {

8316 
	`f˛o£
(
Â
);

8317  
NULL
;

8319 
	`ungëc
(
c
, 
Â
);

8324 
Â
 = 
NULL
;

8326  
Â
;

8327 
	}
}

8331 
	$ªlﬂdBuf„r
(
Buf„r
 *
buf
)

8333 
URLFûe
 
uf
;

8335 i‡(
buf
->
sour˚fûe
 =
NULL
 || buf->
∑gîSour˚
 != NULL)

8337 
	`öô_°ªam
(&
uf
, 
SCM_UNKNOWN
, 
NULL
);

8338 
	`examöeFûe
(
buf
->
maûˇp_sour˚
 ? buf->maûˇp_sour˚ : buf->
sour˚fûe
,

8339 &
uf
);

8340 i‡(
uf
.
°ªam
 =
NULL
)

8342 
is_ªdi•œy
 = 
TRUE
;

8343 
buf
->
ÆlLöe
 = 0;

8344 
buf
->
hªf
 = 
NULL
;

8345 
buf
->
«me
 = 
NULL
;

8346 
buf
->
img
 = 
NULL
;

8347 
buf
->
f‹môem
 = 
NULL
;

8348 
buf
->
lökli°
 = 
NULL
;

8349 
buf
->
m≠li°
 = 
NULL
;

8350 i‡(
buf
->
hm¨kli°
)

8351 
buf
->
hm¨kli°
->
nm¨k
 = 0;

8352 i‡(
buf
->
im¨kli°
)

8353 
buf
->
im¨kli°
->
nm¨k
 = 0;

8354 i‡(!
	`°rˇ£cmp
(
buf
->
ty≥
, "text/html"))

8355 
	`lﬂdHTMLBuf„r
(&
uf
, 
buf
);

8357 
	`lﬂdBuf„r
(&
uf
, 
buf
);

8358 
	`UF˛o£
(&
uf
);

8359 
is_ªdi•œy
 = 
FALSE
;

8360 
	}
}

8364 
	$guess_fûíame
(*
fûe
)

8366 *
p
 = 
NULL
, *
s
;

8368 i‡(
fûe
 !
NULL
)

8369 
p
 = 
	`myba£«me
(
fûe
);

8370 i‡(
p
 =
NULL
 || *p == '\0')

8371  
DEF_SAVE_FILE
;

8372 
s
 = 
p
;

8373 i‡(*
p
 == '#')

8374 
p
++;

8375 *
p
 != '\0') {

8376 i‡((*
p
 == '#' && *(p + 1) != '\0') || *p == '?') {

8377 *
p
 = '\0';

8380 
p
++;

8382  
s
;

8383 
	}
}

8386 
	$guess_ßve_«me
(
Buf„r
 *
buf
, *
∑th
)

8388 i‡(
buf
 && buf->
documít_hódî
) {

8389 
Så
 
«me
 = 
NULL
;

8390 *
p
, *
q
;

8391 i‡((
p
 = 
	`checkHódî
(
buf
, "C⁄ã¡-Di•osôi⁄:")Ë!
NULL
 &&

8392 (
q
 = 
	`°rˇ£°r
(
p
, "fûíame")Ë!
NULL
 &&

8393 (
q
 =
p
 || 
	`IS_SPACE
(*(q - 1)) || *(q - 1) == ';') &&

8394 
	`m©ch©å
(
q
, "fûíame", 8, &
«me
))

8395 
∑th
 = 
«me
->
±r
;

8396 i‡((
p
 = 
	`checkHódî
(
buf
, "C⁄ã¡-Ty≥:")Ë!
NULL
 &&

8397 (
q
 = 
	`°rˇ£°r
(
p
, "«me")Ë!
NULL
 &&

8398 (
q
 =
p
 || 
	`IS_SPACE
(*(q - 1)) || *(q - 1) == ';') &&

8399 
	`m©ch©å
(
q
, "«me", 4, &
«me
))

8400 
∑th
 = 
«me
->
±r
;

8402  
	`guess_fûíame
(
∑th
);

8403 
	}
}

	@fm.h

10 #i‚de‡
FM_H


11 
	#FM_H


	)

14 #i‚de‡
_GNU_SOURCE


15 
	#_GNU_SOURCE


	)

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/°©.h
>

24 
	~<uni°d.h
>

25 
	~"c⁄fig.h
"

26 
	~"hi°‹y.h
"

28 #ifde‡
USE_MENU


29 
	#MENU_SELECT


	)

30 
	#MENU_MAP


	)

33 #i‚de‡
USE_COLOR


34 #unde‡
USE_ANSI_COLOR


35 #unde‡
USE_BG_COLOR


38 
	~"˘æcode.h
"

39 
	~"html.h
"

40 
	~<gc.h
>

41 
	~"Så.h
"

42 #ifde‡
USE_M17N


43 
	~"wc.h
"

44 
	~"wtf.h
"

46 
	twc_˚s
;

49 #ifde‡
HAVE_LOCALE_H


50 
	~<loˇÀ.h
>

52 #i‡!
HAVE_SETLOCALE


53 
	#£éoˇÀ
(
ˇãg‹y
, 
loˇÀ
Ë

	)

56 #ifde‡
ENABLE_NLS


57 
	~<liböé.h
>

58 
	#_
(
Såög
Ë
	`gëãxt
 (Såög)

	)

59 
	#N_
(
Såög
Ë(Såög)

	)

61 #unde‡
bödãxtdomaö


62 
	#bödãxtdomaö
(
Domaö
, 
Dúe˘‹y
Ë

	)

63 #unde‡
ãxtdomaö


64 
	#ãxtdomaö
(
Domaö
Ë

	)

65 
	#_
(
Text
Ë
	)
Text

66 
	#N_
(
Text
Ë
	)
Text

67 
	#gëãxt
(
Text
Ë
	)
Text

70 
	~"f‹m.h
"

71 
	~"‰ame.h
"

72 
	~"∑r£èg.h
"

73 
	~"∑r£ègx.h
"

74 
	~"func.h
"

75 
	~"míu.h
"

76 
	~"ãxéi°.h
"

77 
	~"fun˙ame1.h
"

78 
	~"ãrms.h
"

80 #i‚de‡
HAVE_BCOPY


81 
bc›y
(const *, *, );

82 
bzîo
(*, );

84 #ifde‡
__EMX__


85 
	~<°rögs.h
>

88 #ifde‡
MAINPROGRAM


89 
	#globÆ


	)

90 
	#öô
(
x
Ë=(x)

	)

92 
	#globÆ
 

	)

93 
	#öô
(
x
)

	)

96 
	#DEFUN
(
fun˙ame
, 
ma¸⁄ame
, 
doc°rög
Ë
	`fun˙ame
()

	)

101 
	#LINELEN
 256

	)

102 
	#PAGER_MAX_LINE
 10000

	)

104 #ifde‡
USE_IMAGE


105 
	#MAX_IMAGE
 1000

	)

106 
	#MAX_IMAGE_SIZE
 2048

	)

108 
	#DEFAULT_PIXEL_PER_CHAR
 7.0

	)

109 
	#DEFAULT_PIXEL_PER_LINE
 14.0

	)

111 
	#DEFAULT_PIXEL_PER_CHAR
 8.0

	)

113 
	#MINIMUM_PIXEL_PER_CHAR
 4.0

	)

114 
	#MAXIMUM_PIXEL_PER_CHAR
 32.0

	)

116 #ifde‡
FALSE


117 #unde‡
FALSE


120 #ifde‡
TRUE


121 #unde‡
TRUE


124 
	#FALSE
 0

	)

125 
	#TRUE
 1

	)

127 
	#SHELLBUFFERNAME
 "*Shñlout*"

	)

128 
	#PIPEBUFFERNAME
 "*°ªam*"

	)

129 
	#CPIPEBUFFERNAME
 "*°ªam(˛o£d)*"

	)

130 #ifde‡
USE_DICT


131 
	#DICTBUFFERNAME
 "*di˘i⁄¨y*"

	)

133 #ifde‡
USE_GOOGLE


134 
	#GOOGLEBUFFERNAME
 "*googÀ*"

	)

136 #ifde‡
USE_GOOGLE_LUCKY


137 
	#GOOGLELUCKYBUFFERNAME
 "*googÀlucky*"

	)

144 
	#P_CHARTYPE
 0x3f00

	)

145 #ifde‡
USE_M17N


146 
	#PC_ASCII
 (
WTF_TYPE_ASCII
 << 8)

	)

147 
	#PC_CTRL
 (
WTF_TYPE_CTRL
 << 8)

	)

148 
	#PC_WCHAR1
 (
WTF_TYPE_WCHAR1
 << 8)

	)

149 
	#PC_WCHAR2
 (
WTF_TYPE_WCHAR2
 << 8)

	)

150 
	#PC_KANJI
 (
WTF_TYPE_WIDE
 << 8)

	)

151 
	#PC_KANJI1
 (
PC_WCHAR1
 | 
PC_KANJI
)

	)

152 
	#PC_KANJI2
 (
PC_WCHAR2
 | 
PC_KANJI
)

	)

153 
	#PC_UNKNOWN
 (
WTF_TYPE_UNKNOWN
 << 8)

	)

154 
	#PC_UNDEF
 (
WTF_TYPE_UNDEF
 << 8)

	)

156 
	#PC_ASCII
 0x0000

	)

157 
	#PC_CTRL
 0x0100

	)

159 
	#PC_SYMBOL
 0x8000

	)

162 
	#P_EFFECT
 0x40ff

	)

163 
	#PE_NORMAL
 0x00

	)

164 
	#PE_MARK
 0x01

	)

165 
	#PE_UNDER
 0x02

	)

166 
	#PE_STAND
 0x04

	)

167 
	#PE_BOLD
 0x08

	)

168 
	#PE_ANCHOR
 0x10

	)

169 
	#PE_EMPH
 0x08

	)

170 
	#PE_IMAGE
 0x20

	)

171 
	#PE_FORM
 0x40

	)

172 
	#PE_ACTIVE
 0x80

	)

173 
	#PE_VISITED
 0x4000

	)

176 
	#PE_EX_ITALIC
 0x01

	)

177 
	#PE_EX_INSERT
 0x02

	)

178 
	#PE_EX_STRIKE
 0x04

	)

180 
	#PE_EX_ITALIC_E
 
PE_UNDER


	)

181 
	#PE_EX_INSERT_E
 
PE_UNDER


	)

182 
	#PE_EX_STRIKE_E
 
PE_STAND


	)

184 
	#Ch¨Ty≥
(
c
Ë((c)&
P_CHARTYPE
)

	)

185 
	#Ch¨Ef„˘
(
c
Ë((c)&(
P_EFFECT
|
PC_SYMBOL
))

	)

186 
	#SëCh¨Ty≥
(
v
,
c
Ë((v)=(((v)&~
P_CHARTYPE
)|(c)))

	)

189 
	#COLPOS
(
l
,
c
Ë
	`ˇlcPosôi⁄
÷->
löeBuf
,l->
¥›Buf
,l->
Àn
,c,0,
CP_AUTO
)

	)

192 
	#B_NORMAL
 0

	)

193 
	#B_FORCE_REDRAW
 1

	)

194 
	#B_REDRAW
 2

	)

195 
	#B_SCROLL
 3

	)

196 
	#B_REDRAW_IMAGE
 4

	)

199 
	#BP_NORMAL
 0x0

	)

200 
	#BP_PIPE
 0x1

	)

201 
	#BP_FRAME
 0x2

	)

202 
	#BP_INTERNAL
 0x8

	)

203 
	#BP_NO_URL
 0x10

	)

204 
	#BP_REDIRECTED
 0x20

	)

205 
	#BP_CLOSE
 0x40

	)

208 
	#LB_NOLINK
 -1

	)

209 
	#LB_FRAME
 0

	)

210 
	#LB_N_FRAME
 1

	)

211 
	#LB_INFO
 2

	)

212 
	#LB_N_INFO
 3

	)

213 
	#LB_SOURCE
 4

	)

214 
	#LB_N_SOURCE
 
LB_SOURCE


	)

215 
	#MAX_LB
 5

	)

218 
	#SR_FOUND
 0x1

	)

219 
	#SR_NOTFOUND
 0x2

	)

220 
	#SR_WRAPPED
 0x4

	)

222 #ifde‡
MAINPROGRAM


223 
REV_LB
[
MAX_LB
] = {

224 
LB_N_FRAME
, 
LB_FRAME
, 
LB_N_INFO
, 
LB_INFO
, 
LB_N_SOURCE
,

227 
REV_LB
[];

231 
	#CHK_URL
 1

	)

232 
	#CHK_NMID
 2

	)

235 
	#CP_AUTO
 0

	)

236 
	#CP_FORCE
 1

	)

239 
	#CPL_OK
 0

	)

240 
	#CPL_AMBIG
 1

	)

241 
	#CPL_FAIL
 2

	)

242 
	#CPL_MENU
 3

	)

244 
	#CPL_NEVER
 0x0

	)

245 
	#CPL_OFF
 0x1

	)

246 
	#CPL_ON
 0x2

	)

247 
	#CPL_ALWAYS
 0x4

	)

248 
	#CPL_URL
 0x8

	)

251 
	#IN_STRING
 0x10

	)

252 
	#IN_FILENAME
 0x20

	)

253 
	#IN_PASSWORD
 0x40

	)

254 
	#IN_COMMAND
 0x80

	)

255 
	#IN_URL
 0x100

	)

256 
	#IN_CHAR
 0x200

	)

258 
	#IMG_FLAG_SKIP
 1

	)

259 
	#IMG_FLAG_AUTO
 2

	)

261 
	#IMG_FLAG_START
 0

	)

262 
	#IMG_FLAG_STOP
 1

	)

263 
	#IMG_FLAG_NEXT
 2

	)

265 
	#IMG_FLAG_UNLOADED
 0

	)

266 
	#IMG_FLAG_LOADED
 1

	)

267 
	#IMG_FLAG_ERROR
 2

	)

268 
	#IMG_FLAG_DONT_REMOVE
 4

	)

274 
	#öputLöeHi°
(
p
,
d
,
f
,
h
Ë
	`öputLöeHi°Sórch
’,d,f,h,
NULL
)

	)

275 
	#öputLöe
(
p
,
d
,
f
Ë
	`öputLöeHi°
’,d,f,
NULL
)

	)

276 
	#öputSå
(
p
,
d
Ë
	`öputLöe
’,d,
IN_STRING
)

	)

277 
	#öputSåHi°
(
p
,
d
,
h
Ë
	`öputLöeHi°
’,d,
IN_STRING
,h)

	)

278 
	#öputFûíame
(
p
,
d
Ë
	`öputLöe
’,d,
IN_FILENAME
)

	)

279 
	#öputFûíameHi°
(
p
,
d
,
h
Ë
	`öputLöeHi°
’,d,
IN_FILENAME
,h)

	)

280 
	#öputCh¨
(
p
Ë
	`öputLöe
’,"",
IN_CHAR
)

	)

282 
	#‰ì
(
x
Ë
	`GC_‰ì
(xË

	)

284 #ifde‡
__EMX__


285 
	#HAVE_STRCASECMP


	)

286 
	#°rˇ£cmp
 
°ricmp


	)

287 
	#°∫ˇ£cmp
 
°∫icmp


	)

291 
	#SKIP_BLANKS
(
p
Ë{*’)&&
	`IS_SPACE
(*’)))’)++;}

	)

292 
	#SKIP_NON_BLANKS
(
p
Ë{*’)&&!
	`IS_SPACE
(*’)))’)++;}

	)

293 
	#IS_ENDL
(
c
Ë((c)=='\0'||(c)=='\r'||(c)=='\n')

	)

294 
	#IS_ENDT
(
c
Ë(
	`IS_ENDL
(c)||(c)==';')

	)

296 
	#bpcmp
(
a
,
b
) \

297 (((
a
).
löe
 - (
b
).löeË? (◊).löê- (b).löeË: (◊).
pos
 - (b).pos))

	)

299 
	#RELATIVE_WIDTH
(
w
Ë(((w)>=0)?()((w)/
pixñ_≥r_ch¨
):(w))

	)

300 
	#REAL_WIDTH
(
w
,
limô
Ë(((w)>=0)?()((w)/
pixñ_≥r_ch¨
):-(w)*÷imô)/100)

	)

302 
	#EOL
(
l
Ë(&÷)->
±r
[÷)->
Àngth
])

	)

303 
	#IS_EOL
(
p
,
l
Ë(’)==&÷)->
±r
[÷)->
Àngth
])

	)

309 
	tLöïr›
;

310 #ifde‡
USE_ANSI_COLOR


311 
	tLöecﬁ‹
;

314 
	s_M≠Aªa
 {

315 *
	muæ
;

316 *
	mèrgë
;

317 *
	mÆt
;

318 #ifde‡
USE_IMAGE


319 
	msh≠e
;

320 *
	mco‹ds
;

321 
	mnco‹ds
;

322 
	m˚¡î_x
;

323 
	m˚¡î_y
;

325 } 
	tM≠Aªa
;

327 
	s_M≠Li°
 {

328 
Så
 
	m«me
;

329 
GíîÆLi°
 *
	m¨ó
;

330 
_M≠Li°
 *
	m√xt
;

331 } 
	tM≠Li°
;

333 
	s_Löe
 {

334 *
	mlöeBuf
;

335 
Löïr›
 *
	m¥›Buf
;

336 #ifde‡
USE_ANSI_COLOR


337 
Löecﬁ‹
 *
	mcﬁ‹Buf
;

339 
_Löe
 *
	m√xt
;

340 
_Löe
 *
	m¥ev
;

341 
	mÀn
;

342 
	mwidth
;

343 
	mlöíumbî
;

344 
	mªÆ_löíumbî
;

345 
	mu§Êags
;

346 
	msize
;

347 
	mbpos
;

348 
	mbwidth
;

349 } 
	tLöe
;

352 
	mlöe
;

353 
	mpos
;

354 
	mövÆid
;

355 } 
	tBuf„rPoöt
;

357 #ifde‡
USE_IMAGE


358 
	s_imageCache
 {

359 *
	muæ
;

360 
P¨£dURL
 *
	mcuºít
;

361 *
	mfûe
;

362 *
	mtouch
;

363 
pid_t
 
	mpid
;

364 
	mlﬂded
;

365 
	mödex
;

366 
	mwidth
;

367 
	mheight
;

368 } 
	tImageCache
;

370 
	s_image
 {

371 *
	muæ
;

372 *
	mext
;

373 
	mwidth
;

374 
	mheight
;

375 
	mxoff£t
;

376 
	myoff£t
;

377 
	my
;

378 
	mrows
;

379 *
	mm≠
;

380 
	mism≠
;

381 
	mtouch
;

382 
ImageCache
 *
	mˇche
;

383 } 
	tImage
;

386 
	s_™ch‹
 {

387 *
	muæ
;

388 *
	mèrgë
;

389 *
	mª„ªr
;

390 *
	mtôÀ
;

391 
	mac˚sskey
;

392 
Buf„rPoöt
 
	m°¨t
;

393 
Buf„rPoöt
 
	míd
;

394 
	mh£q
;

395 
	m¶ave
;

396 
	my
;

397 
	mrows
;

398 #ifde‡
USE_IMAGE


399 
Image
 *
	mimage
;

401 } 
	tAnch‹
;

403 
	#NO_REFERER
 ((*)-1)

	)

405 
	s_™ch‹Li°
 {

406 
Anch‹
 *
	m™ch‹s
;

407 
	m«nch‹
;

408 
	m™ch‹max
;

409 
	maˇche
;

410 } 
	tAnch‹Li°
;

413 
Buf„rPoöt
 *
	mm¨ks
;

414 
	mnm¨k
;

415 
	mm¨kmax
;

416 
	m¥evh£q
;

417 } 
	tHm¨kîLi°
;

419 
	#LINK_TYPE_NONE
 0

	)

420 
	#LINK_TYPE_REL
 1

	)

421 
	#LINK_TYPE_REV
 2

	)

422 
	s_LökLi°
 {

423 *
	muæ
;

424 *
	mtôÀ
;

425 *
	m˘y≥
;

426 
	mty≥
;

427 
_LökLi°
 *
	m√xt
;

428 } 
	tLökLi°
;

430 
	s_Buf„r
 {

431 *
	mfûíame
;

432 *
	mbuf„∫ame
;

433 
Löe
 *
	mfú°Löe
;

434 
Löe
 *
	mt›Löe
;

435 
Löe
 *
	mcuºítLöe
;

436 
Löe
 *
	mœ°Löe
;

437 
_Buf„r
 *
	m√xtBuf„r
;

438 
_Buf„r
 *
	mlökBuf„r
[
MAX_LB
];

439 
	mwidth
;

440 
	mheight
;

441 *
	mty≥
;

442 *
	mªÆ_ty≥
;

443 
	mÆlLöe
;

444 
	mbuf„Ωr›
;

445 
	mcuºítCﬁumn
;

446 
	mcurs‹X
;

447 
	mcurs‹Y
;

448 
	mpos
;

449 
	mvisuÆpos
;

450 
	mroŸX
;

451 
	mroŸY
;

452 
	mCOLS
;

453 
	mLINES
;

454 
I≈utSåóm
 
	m∑gîSour˚
;

455 
Anch‹Li°
 *
	mhªf
;

456 
Anch‹Li°
 *
	m«me
;

457 
Anch‹Li°
 *
	mimg
;

458 
Anch‹Li°
 *
	mf‹môem
;

459 
LökLi°
 *
	mlökli°
;

460 
F‹mLi°
 *
	mf‹mli°
;

461 
M≠Li°
 *
	mm≠li°
;

462 
Hm¨kîLi°
 *
	mhm¨kli°
;

463 
Hm¨kîLi°
 *
	mim¨kli°
;

464 
P¨£dURL
 
	mcuºítURL
;

465 
P¨£dURL
 *
	mba£URL
;

466 *
	mba£T¨gë
;

467 
	mªÆ_scheme
;

468 *
	msour˚fûe
;

469 
‰ame£t
 *
	m‰ame£t
;

470 
‰ame£t_queue
 *
	m‰ameQ
;

471 *
	m˛⁄e
;

472 
size_t
 
	måbyã
;

473 
	mcheck_uæ
;

474 #ifde‡
USE_M17N


475 
wc_˚s
 
	mdocumít_ch¨£t
;

476 
wc_uöt8
 
	mauto_dëe˘
;

478 
TextLi°
 *
	mdocumít_hódî
;

479 
F‹mIãmLi°
 *
	mf‹m_submô
;

480 *
	mßveˇche
;

481 *
	medô
;

482 
maûˇp
 *
	mmaûˇp
;

483 *
	mmaûˇp_sour˚
;

484 *
	mhódî_sour˚
;

485 
	m£¨ch_hódî
;

486 #ifde‡
USE_SSL


487 *
	ms¶_˚πifiˇã
;

489 
	mimage_Êag
;

490 
	mimage_lﬂded
;

491 
	m√ed_ªsh≠e
;

492 
Anch‹
 *
	msubmô
;

493 
_Buf„rPos
 *
	mundo
;

494 #ifde‡
USE_ALARM


495 
_AœrmEvít
 *
	mevít
;

497 } 
	tBuf„r
;

499 
	s_Buf„rPos
 {

500 
	mt›_löíumbî
;

501 
	mcur_löíumbî
;

502 
	mcuºítCﬁumn
;

503 
	mpos
;

504 
	mbpos
;

505 
_Buf„rPos
 *
	m√xt
;

506 
_Buf„rPos
 *
	m¥ev
;

507 } 
	tBuf„rPos
;

509 
	s_TabBuf„r
 {

510 
_TabBuf„r
 *
	m√xtTab
;

511 
_TabBuf„r
 *
	m¥evTab
;

512 
Buf„r
 *
	mcuºítBuf„r
;

513 
Buf„r
 *
	mfú°Buf„r
;

514 
	mx1
;

515 
	mx2
;

516 
	my
;

517 } 
	tTabBuf„r
;

519 
	s_Dow∆ﬂdLi°
 {

520 
pid_t
 
	mpid
;

521 *
	muæ
;

522 *
	mßve
;

523 *
	mlock
;

524 
˛í_t
 
	msize
;

525 
time_t
 
	mtime
;

526 
	mok
;

527 
_Dow∆ﬂdLi°
 *
	m√xt
;

528 
_Dow∆ﬂdLi°
 *
	m¥ev
;

529 } 
	tDow∆ﬂdLi°
;

530 
	#DOWNLOAD_LIST_TITLE
 "Dow∆ﬂd Li° P™ñ"

	)

532 
	#COPY_BUFROOT
(
d°buf
, 
§cbuf
) {\

533 (
d°buf
)->
roŸX
 = (
§cbuf
)->rootX; \

534 (
d°buf
)->
roŸY
 = (
§cbuf
)->rootY; \

535 (
d°buf
)->
COLS
 = (
§cbuf
)->COLS; \

536 (
d°buf
)->
LINES
 = (
§cbuf
)->LINES; \

537 }

	)

539 
	#COPY_BUFPOSITION
(
d°buf
, 
§cbuf
) {\

540 (
d°buf
)->
t›Löe
 = (
§cbuf
)->topLine; \

541 (
d°buf
)->
cuºítLöe
 = (
§cbuf
)->currentLine; \

542 (
d°buf
)->
pos
 = (
§cbuf
)->pos; \

543 (
d°buf
)->
curs‹X
 = (
§cbuf
)->cursorX; \

544 (
d°buf
)->
curs‹Y
 = (
§cbuf
)->cursorY; \

545 (
d°buf
)->
visuÆpos
 = (
§cbuf
)->visualpos; \

546 (
d°buf
)->
cuºítCﬁumn
 = (
§cbuf
)->currentColumn; \

547 }

	)

548 
	#SAVE_BUFPOSITION
(
sbuÂ
Ë
	`COPY_BUFPOSITION
(sbuÂ, 
Cuºítbuf
)

	)

549 
	#RESTORE_BUFPOSITION
(
sbuÂ
Ë
	`COPY_BUFPOSITION
(
Cuºítbuf
, sbuÂ)

	)

550 
	#TOP_LINENUMBER
(
buf
Ë((buf)->
t›Löe
 ? (buf)->t›Löe->
löíumbî
 : 1)

	)

551 
	#CUR_LINENUMBER
(
buf
Ë((buf)->
cuºítLöe
 ? (buf)->cuºítLöe->
löíumbî
 : 1)

	)

553 
	#NO_BUFFER
 ((
Buf„r
*)1)

	)

555 
	#RB_STACK_SIZE
 10

	)

557 
	#TAG_STACK_SIZE
 10

	)

559 
	#FONT_STACK_SIZE
 5

	)

561 
	#FONTSTAT_SIZE
 7

	)

563 
	#_INIT_BUFFER_WIDTH
 (
COLS
 - (
showLöeNum
 ? 6 : 1))

	)

564 
	#INIT_BUFFER_WIDTH
 ((
_INIT_BUFFER_WIDTH
 > 0Ë? _INIT_BUFFER_WIDTH : 0)

	)

565 
	#FOLD_BUFFER_WIDTH
 (
FﬁdLöe
 ? (
INIT_BUFFER_WIDTH
 + 1Ë: -1)

	)

568 
	mpos
;

569 
	mÀn
;

570 
	méí
;

571 
	mÊag
;

572 
Anch‹
 
	m™ch‹
;

573 
Så
 
	mimg_Æt
;

574 
	mf⁄t°©
[
FONTSTAT_SIZE
];

575 
	mnobr_Àvñ
;

576 
Löïr›
 
	m¥ev_˘y≥
;

577 
	möô_Êag
;

578 
	mt›_m¨gö
;

579 
	mbŸtom_m¨gö
;

580 } 
	tBªakpoöt
;

582 
	sªadbuf„r
 {

583 
Så
 
	mlöe
;

584 
Löïr›
 
	m˝r›
;

585 
	mpos
;

586 
Så
 
	m¥evch¨
;

587 
	mÊag
;

588 
	mÊag_°ack
[
RB_STACK_SIZE
];

589 
	mÊag_•
;

590 
	m°©us
;

591 
	míd_èg
;

592 
	mèbÀ_Àvñ
;

593 
	mnobr_Àvñ
;

594 
Anch‹
 
	m™ch‹
;

595 
Så
 
	mimg_Æt
;

596 
	mf⁄t°©
[
FONTSTAT_SIZE
];

597 
	mf⁄t°©_°ack
[
FONT_STACK_SIZE
][
FONTSTAT_SIZE
];

598 
	mf⁄t°©_•
;

599 
Löïr›
 
	m¥ev_˘y≥
;

600 
Bªakpoöt
 
	mbp
;

601 
cmdèbÀ
 *
	mèg_°ack
[
TAG_STACK_SIZE
];

602 
	mèg_•
;

603 
	mt›_m¨gö
;

604 
	mbŸtom_m¨gö
;

607 
	#ö_bﬁd
 
f⁄t°©
[0]

	)

608 
	#ö_undî
 
f⁄t°©
[1]

	)

609 
	#ö_ôÆic
 
f⁄t°©
[2]

	)

610 
	#ö_°rike
 
f⁄t°©
[3]

	)

611 
	#ö_ös
 
f⁄t°©
[4]

	)

612 
	#ö_°™d
 
f⁄t°©
[5]

	)

614 
	#RB_PRE
 0x01

	)

615 
	#RB_SCRIPT
 0x02

	)

616 
	#RB_STYLE
 0x04

	)

617 
	#RB_PLAIN
 0x08

	)

618 
	#RB_LEFT
 0x10

	)

619 
	#RB_CENTER
 0x20

	)

620 
	#RB_RIGHT
 0x40

	)

621 
	#RB_ALIGN
 (
RB_LEFT
| 
RB_CENTER
 | 
RB_RIGHT
)

	)

622 
	#RB_NOBR
 0x80

	)

623 
	#RB_P
 0x100

	)

624 
	#RB_PRE_INT
 0x200

	)

625 
	#RB_IN_DT
 0x400

	)

626 
	#RB_INTXTA
 0x800

	)

627 
	#RB_INSELECT
 0x1000

	)

628 
	#RB_IGNORE_P
 0x2000

	)

629 
	#RB_TITLE
 0x4000

	)

630 
	#RB_NFLUSHED
 0x8000

	)

631 
	#RB_NOFRAMES
 0x10000

	)

632 
	#RB_INTABLE
 0x20000

	)

633 
	#RB_PREMODE
 (
RB_PRE
 | 
RB_PRE_INT
 | 
RB_SCRIPT
 | 
RB_STYLE
 | 
RB_PLAIN
 | 
RB_INTXTA
)

	)

634 
	#RB_SPECIAL
 (
RB_PRE
 | 
RB_PRE_INT
 | 
RB_SCRIPT
 | 
RB_STYLE
 | 
RB_PLAIN
 | 
RB_NOBR
)

	)

635 
	#RB_PLAIN_PRE
 0x40000

	)

637 #ifde‡
FORMAT_NICE


638 
	#RB_FILL
 0x80000

	)

640 
	#RB_DEL
 0x100000

	)

641 
	#RB_S
 0x200000

	)

643 
	#RB_GET_ALIGN
(
obuf
Ë((obuf)->
Êag
&
RB_ALIGN
)

	)

644 
	#RB_SET_ALIGN
(
obuf
,
Æign
Ë{(obuf)->
Êag
 &~
RB_ALIGN
; (obuf)->Êag |◊lign); }

	)

645 
	#RB_SAVE_FLAG
(
obuf
) {\

646 i‡((
obuf
)->
Êag_•
 < 
RB_STACK_SIZE
) \

647 (
obuf
)->
Êag_°ack
[(obuf)->
Êag_•
++] = 
	`RB_GET_ALIGN
(obuf); \

648 }

	)

649 
	#RB_RESTORE_FLAG
(
obuf
) {\

650 i‡((
obuf
)->
Êag_•
 > 0) \

651 
	`RB_SET_ALIGN
(
obuf
,(obuf)->
Êag_°ack
[--(obuf)->
Êag_•
]); \

652 }

	)

655 
	#R_ST_NORMAL
 0

	)

656 
	#R_ST_TAG0
 1

	)

657 
	#R_ST_TAG
 2

	)

658 
	#R_ST_QUOTE
 3

	)

659 
	#R_ST_DQUOTE
 4

	)

660 
	#R_ST_EQL
 5

	)

661 
	#R_ST_AMP
 6

	)

662 
	#R_ST_EOL
 7

	)

663 
	#R_ST_CMNT1
 8

	)

664 
	#R_ST_CMNT2
 9

	)

665 
	#R_ST_CMNT
 10

	)

666 
	#R_ST_NCMNT1
 11

	)

667 
	#R_ST_NCMNT2
 12

	)

668 
	#R_ST_NCMNT3
 13

	)

669 
	#R_ST_IRRTAG
 14

	)

670 
	#R_ST_VALUE
 15

	)

672 
	#ST_IS_REAL_TAG
(
s
Ë((s)==
R_ST_TAG
||(s)==
R_ST_TAG0
||(s)==
R_ST_EQL
||(s)==
R_ST_VALUE
)

	)

675 
	#REALLY_THE_BEGINNING_OF_A_TAG
(
p
) \

676 (
	`IS_ALPHA
(
p
[1]Ë||Ö[1] ='/' ||Ö[1] ='!' ||Ö[1] ='?' ||Ö[1] ='\0' ||Ö[1] ='_')

	)

679 
	#RG_NOCACHE
 1

	)

680 
	#RG_FRAME
 2

	)

681 
	#RG_FRAME_SRC
 4

	)

683 
	shtml_„ed_ívú⁄
 {

684 
ªadbuf„r
 *
	mobuf
;

685 
TextLöeLi°
 *
	mbuf
;

686 
FILE
 *
	mf
;

687 
Så
 
	mègbuf
;

688 
	mlimô
;

689 
	mmaxlimô
;

690 
ívú⁄mít
 *
	mívs
;

691 
	m√nv
;

692 
	mívc
;

693 
	mívc_ªÆ
;

694 *
	mtôÀ
;

695 
	mbœnk_löes
;

698 #ifde‡
USE_COOKIE


699 
	sp‹éi°
 {

700 
	mp‹t
;

701 
p‹éi°
 *
	m√xt
;

704 
	scookõ
 {

705 
P¨£dURL
 
	muæ
;

706 
Så
 
	m«me
;

707 
Så
 
	mvÆue
;

708 
time_t
 
	mexpúes
;

709 
Så
 
	m∑th
;

710 
Så
 
	mdomaö
;

711 
Så
 
	mcommít
;

712 
Så
 
	mcommítURL
;

713 
p‹éi°
 *
	mp‹é
;

714 
	mvîsi⁄
;

715 
	mÊag
;

716 
cookõ
 *
	m√xt
;

718 
	#COO_USE
 1

	)

719 
	#COO_SECURE
 2

	)

720 
	#COO_DOMAIN
 4

	)

721 
	#COO_PATH
 8

	)

722 
	#COO_DISCARD
 16

	)

723 
	#COO_OVERRIDE
 32

	)

725 
	#COO_OVERRIDE_OK
 32

	)

729 
	#COO_EINTERNAL
 (1Ë

	)

730 
	#COO_ETAIL
 (2 | 
COO_OVERRIDE_OK
Ë

	)

731 
	#COO_ESPECIAL
 (3Ë

	)

732 
	#COO_EPATH
 (4Ë

	)

733 
	#COO_ENODOT
 (5 | 
COO_OVERRIDE_OK
Ë

	)

734 
	#COO_ENOTV1DOM
 (6 | 
COO_OVERRIDE_OK
Ë

	)

735 
	#COO_EDOM
 (7 | 
COO_OVERRIDE_OK
Ë

	)

736 
	#COO_EBADHOST
 (8 | 
COO_OVERRIDE_OK
Ë

	)

737 
	#COO_EPORT
 (9Ë

	)

738 
	#COO_EMAX
 
COO_EPORT


	)

743 
	#ALIGN_CENTER
 0

	)

744 
	#ALIGN_LEFT
 1

	)

745 
	#ALIGN_RIGHT
 2

	)

746 
	#ALIGN_MIDDLE
 4

	)

747 
	#ALIGN_TOP
 5

	)

748 
	#ALIGN_BOTTOM
 6

	)

750 
	#VALIGN_MIDDLE
 0

	)

751 
	#VALIGN_TOP
 1

	)

752 
	#VALIGN_BOTTOM
 2

	)

754 
	shâp_ªque°
 {

755 
	mcomm™d
;

756 
	mÊag
;

757 *
	mª„ªr
;

758 
F‹mLi°
 *
	mªque°
;

759 } 
	tHReque°
;

761 
	#HR_COMMAND_GET
 0

	)

762 
	#HR_COMMAND_POST
 1

	)

763 
	#HR_COMMAND_CONNECT
 2

	)

764 
	#HR_COMMAND_HEAD
 3

	)

766 
	#HR_FLAG_LOCAL
 1

	)

767 
	#HR_FLAG_PROXY
 2

	)

769 
	#HTST_UNKNOWN
 255

	)

770 
	#HTST_MISSING
 254

	)

771 
	#HTST_NORMAL
 0

	)

772 
	#HTST_CONNECT
 1

	)

774 
	#TMPF_DFL
 0

	)

775 
	#TMPF_SRC
 1

	)

776 
	#TMPF_FRAME
 2

	)

777 
	#TMPF_CACHE
 3

	)

778 
	#TMPF_COOKIE
 4

	)

779 
	#MAX_TMPF_TYPE
 5

	)

781 
	#£t_no_¥oxy
(
domaös
Ë(
NO_¥oxy_domaös
=
	`make_domaö_li°
(domaös))

	)

787 
LINES
, 
COLS
;

788 #i‡
deföed
(
__CYGWIN__
)

789 
LASTLINE
;

791 
	#LASTLINE
 (
LINES
-1)

	)

794 
globÆ
 
Tab°›
 
öô
(8);

795 
globÆ
 
IndítIn¸
 
öô
(4);

796 
globÆ
 
ShowEf„˘
 
öô
(
TRUE
);

797 
globÆ
 
PagîMax
 
öô
(
PAGER_MAX_LINE
);

799 
globÆ
 
SórchHódî
 
öô
(
FALSE
);

800 
globÆ
 *
DeÁu…Ty≥
 
öô
(
NULL
);

801 
globÆ
 
RídîFøme
 
öô
(
FALSE
);

802 
globÆ
 
T¨gëSñf
 
öô
(
FALSE
);

803 
globÆ
 
PîmôSaveToPùe
 
öô
(
FALSE
);

804 
globÆ
 
DecodeCTE
 
öô
(
FALSE
);

805 
globÆ
 
AutoUncom¥ess
 
öô
(
FALSE
);

806 
globÆ
 
Pª£rveTime°amp
 
öô
(
TRUE
);

807 
globÆ
 
ArgvIsURL
 
öô
(
FALSE
);

808 
globÆ
 
MëaRe‰esh
 
öô
(
FALSE
);

810 
globÆ
 
fmInôülized
 
öô
(
FALSE
);

811 
globÆ
 
QuõtMesßge
 
öô
(
FALSE
);

812 
globÆ
 
TøpSig«l
 
öô
(
TRUE
);

813 
	#TRAP_ON
 i‡(
TøpSig«l
) { \

814 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
KeyAb‹t
); \

815 i‡(
fmInôülized
) \

816 
	`ãrm_cbªak
(); \

817 }

	)

818 
	#TRAP_OFF
 i‡(
TøpSig«l
) { \

819 i‡(
fmInôülized
) \

820 
	`ãrm_øw
(); \

821 i‡(
¥evå≠
) \

822 
	`mySig«l
(
SIGINT
, 
¥evå≠
); \

823 }

	)

825 
GlobÆKeym≠
[];

826 
EscKeym≠
[];

827 
EscBKeym≠
[];

828 
EscDKeym≠
[];

829 #ifde‡
__EMX__


830 
PcKeym≠
[];

832 
FuncLi°
 
w3mFuncLi°
[];

834 
globÆ
 *
HTTP_¥oxy
 
öô
(
NULL
);

835 #ifde‡
USE_SSL


836 
globÆ
 *
HTTPS_¥oxy
 
öô
(
NULL
);

838 #ifde‡
USE_GOPHER


839 
globÆ
 *
GOPHER_¥oxy
 
öô
(
NULL
);

841 
globÆ
 *
FTP_¥oxy
 
öô
(
NULL
);

842 
globÆ
 
P¨£dURL
 
	gHTTP_¥oxy_∑r£d
;

843 #ifde‡
USE_SSL


844 
globÆ
 
P¨£dURL
 
	gHTTPS_¥oxy_∑r£d
;

846 #ifde‡
USE_GOPHER


847 
globÆ
 
P¨£dURL
 
	gGOPHER_¥oxy_∑r£d
;

849 
globÆ
 
P¨£dURL
 
	gFTP_¥oxy_∑r£d
;

850 
globÆ
 *
NO_¥oxy
 
öô
(
NULL
);

851 
globÆ
 
NO¥oxy_√èddr
 
öô
(
TRUE
);

852 #ifde‡
INET6


853 
	#DNS_ORDER_UNSPEC
 0

	)

854 
	#DNS_ORDER_INET_INET6
 1

	)

855 
	#DNS_ORDER_INET6_INET
 2

	)

856 
	#DNS_ORDER_INET_ONLY
 4

	)

857 
	#DNS_ORDER_INET6_ONLY
 6

	)

858 
globÆ
 
DNS_‹dî
 
öô
(
DNS_ORDER_UNSPEC
);

859 
ai_Ámûy_‹dî_èbÀ
[7][3];

861 
globÆ
 
TextLi°
 *
	gNO_¥oxy_domaös
;

862 
globÆ
 
NoCache
 
öô
(
FALSE
);

863 
globÆ
 
u£_¥oxy
 
öô
(
TRUE
);

864 
	#Do_nŸ_u£_¥oxy
 (!
u£_¥oxy
)

	)

865 
globÆ
 
Do_nŸ_u£_ti_ã
 
öô
(
FALSE
);

866 #ifde‡
USE_NNTP


867 
globÆ
 *
NNTP_£rvî
 
öô
(
NULL
);

868 
globÆ
 *
NNTP_mode
 
öô
(
NULL
);

869 
globÆ
 
MaxNewsMesßge
 
öô
(50);

872 
globÆ
 *
documít_roŸ
 
öô
(
NULL
);

873 
globÆ
 *
≥rs⁄Æ_documít_roŸ
 
öô
(
NULL
);

874 
globÆ
 *
cgi_bö
 
öô
(
NULL
);

875 
globÆ
 *
ödex_fûe
 
öô
(
NULL
);

877 
globÆ
 *
	gCuºítDú
;

878 
globÆ
 
	gCuºítPid
;

883 
globÆ
 
TabBuf„r
 *
	gCuºítTab
;

884 
globÆ
 
TabBuf„r
 *
	gFú°Tab
;

885 
globÆ
 
TabBuf„r
 *
	gLa°Tab
;

886 
globÆ
 
›í_èb_bœnk
 
öô
(
FALSE
);

887 
globÆ
 
›í_èb_dl_li°
 
öô
(
FALSE
);

888 
globÆ
 
˛o£_èb_back
 
öô
(
FALSE
);

889 
globÆ
 
	gnTab
;

890 
globÆ
 
TabCﬁs
 
öô
(10);

891 
	#NO_TABBUFFER
 ((
TabBuf„r
 *)1)

	)

892 
	#Cuºítbuf
 (
CuºítTab
->
cuºítBuf„r
)

	)

893 
	#Fú°buf
 (
CuºítTab
->
fú°Buf„r
)

	)

894 
globÆ
 
Dow∆ﬂdLi°
 *
Fú°DL
 
öô
(
NULL
);

895 
globÆ
 
Dow∆ﬂdLi°
 *
La°DL
 
öô
(
NULL
);

896 
globÆ
 
	gCuºítKey
;

897 
globÆ
 *
	gCuºítKeyD©a
;

898 
globÆ
 *
	gCuºítCmdD©a
;

899 
globÆ
 *
	gw3m_ªqlog
;

900 *
w3m_vîsi⁄
;

902 
	#DUMP_BUFFER
 0x01

	)

903 
	#DUMP_HEAD
 0x02

	)

904 
	#DUMP_SOURCE
 0x04

	)

905 
	#DUMP_EXTRA
 0x08

	)

906 
	#DUMP_HALFDUMP
 0x10

	)

907 
	#DUMP_FRAME
 0x20

	)

908 
globÆ
 
	gw3m_debug
;

909 
globÆ
 
w3m_dump
 
öô
(0);

910 
	#w3m_hÆfdump
 (
w3m_dump
 & 
DUMP_HALFDUMP
)

	)

911 
globÆ
 
w3m_hÆÊﬂd
 
öô
(
FALSE
);

912 
globÆ
 
Så
 
hódî_°rög
 
öô
(
NULL
);

913 
globÆ
 
ovîride_c⁄ã¡_ty≥
 
öô
(
FALSE
);

915 #ifde‡
USE_COLOR


916 
globÆ
 
u£Cﬁ‹
 
öô
(
TRUE
);

917 
globÆ
 
basic_cﬁ‹
 
öô
(8);

918 
globÆ
 
™ch‹_cﬁ‹
 
öô
(4);

919 
globÆ
 
image_cﬁ‹
 
öô
(2);

920 
globÆ
 
f‹m_cﬁ‹
 
öô
(1);

921 #ifde‡
USE_BG_COLOR


922 
globÆ
 
bg_cﬁ‹
 
öô
(8);

923 
globÆ
 
m¨k_cﬁ‹
 
öô
(6);

925 
globÆ
 
u£A˘iveCﬁ‹
 
öô
(
FALSE
);

926 
globÆ
 
a˘ive_cﬁ‹
 
öô
(6);

927 
globÆ
 
u£VisôedCﬁ‹
 
öô
(
FALSE
);

928 
globÆ
 
visôed_cﬁ‹
 
öô
(5);

930 
globÆ
 
c⁄fúm_⁄_quô
 
öô
(
TRUE
);

931 #ifde‡
USE_MARK


932 
globÆ
 
u£_m¨k
 
öô
(
FALSE
);

934 
globÆ
 
emacs_like_löìdô
 
öô
(
FALSE
);

935 
globÆ
 
vi_¥ec_num
 
öô
(
FALSE
);

936 
globÆ
 
œbñ_t›löe
 
öô
(
FALSE
);

937 
globÆ
 
√xçage_t›löe
 
öô
(
FALSE
);

938 
globÆ
 *
di•œyTôÀTîm
 
öô
(
NULL
);

939 
globÆ
 
di•œyLök
 
öô
(
FALSE
);

940 
globÆ
 
di•œyLöeInfo
 
öô
(
FALSE
);

941 
globÆ
 
DecodeURL
 
öô
(
FALSE
);

942 
globÆ
 
ªåyAsHâp
 
öô
(
TRUE
);

943 
globÆ
 
showLöeNum
 
öô
(
FALSE
);

944 
globÆ
 
show_§ch_°r
 
öô
(
TRUE
);

945 #ifde‡
USE_IMAGE


946 
globÆ
 *
Imgdi•œy
 
öô
(
IMGDISPLAY
);

947 
globÆ
 
a˘iveImage
 
öô
(
FALSE
);

948 
globÆ
 
di•œyImage
 
öô
(
TRUE
);

949 
globÆ
 
autoImage
 
öô
(
TRUE
);

950 
globÆ
 
u£ExtImageVõwî
 
öô
(
TRUE
);

951 
globÆ
 
maxLﬂdImage
 
öô
(4);

952 
globÆ
 
image_m≠_li°
 
öô
(
TRUE
);

954 
globÆ
 
di•œyImage
 
öô
(
FALSE
);

956 
globÆ
 *
Edô‹
 
öô
(
DEF_EDITOR
);

957 #ifde‡
USE_W3MMAILER


958 
globÆ
 *
Maûî
 
öô
(
NULL
);

960 
globÆ
 *
Maûî
 
öô
(
DEF_MAILER
);

962 
globÆ
 *
ExtBrow£r
 
öô
(
DEF_EXT_BROWSER
);

963 
globÆ
 *
ExtBrow£r2
 
öô
(
NULL
);

964 
globÆ
 *
ExtBrow£r3
 
öô
(
NULL
);

965 
globÆ
 
BackgroundExtVõwî
 
öô
(
TRUE
);

966 
globÆ
 
dißbÀ_£¸ë_£curôy_check
 
öô
(
FALSE
);

967 
globÆ
 *
∑sswd_fûe
 
öô
(
PASSWD_FILE
);

968 
globÆ
 *
¥e_f‹m_fûe
 
öô
(
PRE_FORM_FILE
);

969 
globÆ
 *
·µasswd
 
öô
(
NULL
);

970 
globÆ
 
·µass_ho°«megí
 
öô
(
TRUE
);

971 
globÆ
 
do_dow∆ﬂd
 
öô
(
FALSE
);

972 #ifde‡
USE_IMAGE


973 
globÆ
 *
image_sour˚
 
öô
(
NULL
);

975 
globÆ
 *
U£rAgít
 
öô
(
NULL
);

976 
globÆ
 
NoSídRe„ªr
 
öô
(
FALSE
);

977 
globÆ
 *
Ac˚±L™g
 
öô
(
NULL
);

978 
globÆ
 *
Ac˚±Encodög
 
öô
(
NULL
);

979 
globÆ
 *
Ac˚±Medü
 
öô
(
NULL
);

980 
globÆ
 
WøpDeÁu…
 
öô
(
FALSE
);

981 
globÆ
 
Ign‹eCa£
 
öô
(
TRUE
);

982 
globÆ
 
WøpSórch
 
öô
(
FALSE
);

983 
globÆ
 
squìzeBœnkLöe
 
öô
(
FALSE
);

984 
globÆ
 *
Bookm¨kFûe
 
öô
(
NULL
);

985 
globÆ
 *
∑uth
 
öô
(
NULL
);

986 
globÆ
 
Så
 
¥oxy_auth_cookõ
 
öô
(
NULL
);

987 
globÆ
 
U£Exã∫ÆDúBuf„r
 
öô
(
TRUE
);

988 
globÆ
 *
DúBuf„rComm™d
 
öô
("fûe:///$LIB/dúli°" 
CGI_EXTENSION
);

989 #ifde‡
USE_DICT


990 
globÆ
 
U£Di˘Comm™d
 
öô
(
FALSE
);

991 
globÆ
 *
Di˘Comm™d
 
öô
("fûe:///$LIB/w3mdi˘" 
CGI_EXTENSION
);

993 #ifde‡
USE_GOOGLE


994 
globÆ
 
U£GoogÀComm™d
 
öô
(
FALSE
);

995 
globÆ
 *
GoogÀComm™d
 
öô
("fûe:///$LIB/w3mgoogÀ" 
CGI_EXTENSION
);

997 #ifde‡
USE_GOOGLE_LUCKY


998 
globÆ
 
U£GoogÀLuckyComm™d
 
öô
(
FALSE
);

999 
globÆ
 *
GoogÀLuckyComm™d
 
öô
("fûe:///$LIB/w3mgoogÀlucky" 
CGI_EXTENSION
);

1001 
globÆ
 
ign‹e_nuŒ_img_Æt
 
öô
(
TRUE
);

1002 
	#DISPLAY_INS_DEL_SIMPLE
 0

	)

1003 
	#DISPLAY_INS_DEL_NORMAL
 1

	)

1004 
	#DISPLAY_INS_DEL_FONTIFY
 2

	)

1005 
globÆ
 
di•œyInsDñ
 
öô
(
DISPLAY_INS_DEL_NORMAL
);

1006 
globÆ
 
FﬁdTexèªa
 
öô
(
FALSE
);

1007 
globÆ
 
FﬁdLöe
 
öô
(
FALSE
);

1008 
	#DEFAULT_URL_EMPTY
 0

	)

1009 
	#DEFAULT_URL_CURRENT
 1

	)

1010 
	#DEFAULT_URL_LINK
 2

	)

1011 
globÆ
 
DeÁu…URLSåög
 
öô
(
DEFAULT_URL_EMPTY
);

1012 
globÆ
 
M¨kAŒPages
 
öô
(
FALSE
);

1014 #ifde‡
USE_MIGEMO


1015 
globÆ
 
u£_migemo
 
öô
(
FALSE
);

1016 
globÆ
 
migemo_a˘ive
 
öô
(0);

1017 
globÆ
 *
migemo_comm™d
 
öô
(
DEF_MIGEMO_COMMAND
);

1020 
globÆ
 
auth_cookõ
 *
Auth_cookõ
 
öô
(
NULL
);

1021 #ifde‡
USE_COOKIE


1022 
globÆ
 
cookõ
 *
Fú°_cookõ
 
öô
(
NULL
);

1025 
globÆ
 *
maûˇp_fûes
 
öô
(
USER_MAILCAP
 ", " 
SYS_MAILCAP
);

1026 
globÆ
 *
mimëy≥s_fûes
 
öô
(
USER_MIMETYPES
 ", " 
SYS_MIMETYPES
);

1027 #ifde‡
USE_EXTERNAL_URI_LOADER


1028 
globÆ
 *
urimëhodm≠_fûes
 
öô
(
USER_URIMETHODMAP
 ", " 
SYS_URIMETHODMAP
);

1031 
globÆ
 
TextLi°
 *
	gfûeToDñëe
;

1033 
Hi°
 *
LﬂdHi°
;

1034 
Hi°
 *
SaveHi°
;

1035 
Hi°
 *
URLHi°
;

1036 
Hi°
 *
ShñlHi°
;

1037 
Hi°
 *
TextHi°
;

1038 #ifde‡
USE_HISTORY


1039 
globÆ
 
U£Hi°‹y
 
öô
(
TRUE
);

1040 
globÆ
 
URLHi°Size
 
öô
(100);

1041 
globÆ
 
SaveURLHi°
 
öô
(
TRUE
);

1043 
globÆ
 
mu…icﬁLi°
 
öô
(
FALSE
);

1045 #ifde‡
USE_M17N


1046 
globÆ
 
wc_˚s
 
I¬îCh¨£t
 
öô
(
WC_CES_WTF
);

1047 
globÆ
 
wc_˚s
 
Di•œyCh¨£t
 
öô
(
DISPLAY_CHARSET
);

1048 
globÆ
 
wc_˚s
 
DocumítCh¨£t
 
öô
(
DOCUMENT_CHARSET
);

1049 
globÆ
 
wc_˚s
 
Sy°emCh¨£t
 
öô
(
SYSTEM_CHARSET
);

1050 
globÆ
 
wc_˚s
 
Bookm¨kCh¨£t
 
öô
(
SYSTEM_CHARSET
);

1051 
globÆ
 
ExtHÆfdump
 
öô
(
FALSE
);

1052 
globÆ
 
FﬁlowLoˇÀ
 
öô
(
TRUE
);

1053 
globÆ
 
U£C⁄ã¡Ch¨£t
 
öô
(
TRUE
);

1054 
globÆ
 
SórchC⁄v
 
öô
(
TRUE
);

1055 
	#Så_c⁄v_‰om_sy°em
(
x
Ë
	`wc_Så_c⁄v
((x), 
Sy°emCh¨£t
, 
I¬îCh¨£t
)

	)

1056 
	#Så_c⁄v_to_sy°em
(
x
Ë
	`wc_Så_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, 
Sy°emCh¨£t
)

	)

1057 
	#Så_c⁄v_to_hÆfdump
(
x
Ë(
ExtHÆfdump
 ? 
	`wc_Så_c⁄v
((x), 
I¬îCh¨£t
, 
Di•œyCh¨£t
Ë: (x))

	)

1058 
	#c⁄v_‰om_sy°em
(
x
Ë
	`wc_c⁄v
((x), 
Sy°emCh¨£t
, 
I¬îCh¨£t
)->
±r


	)

1059 
	#c⁄v_to_sy°em
(
x
Ë
	`wc_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, 
Sy°emCh¨£t
)->
±r


	)

1060 
	#uæ_quŸe_c⁄v
(
x
,
c
Ë
	`uæ_quŸe
(
	`wc_c⁄v_°ri˘
((x), 
I¬îCh¨£t
, (c))->
±r
)

	)

1062 
	#Så_c⁄v_‰om_sy°em
(
x
Ë(x)

	)

1063 
	#Så_c⁄v_to_sy°em
(
x
Ë(x)

	)

1064 
	#Så_c⁄v_to_hÆfdump
(
x
Ë(x)

	)

1065 
	#c⁄v_‰om_sy°em
(
x
Ë(x)

	)

1066 
	#c⁄v_to_sy°em
(
x
Ë(x)

	)

1067 
	#uæ_quŸe_c⁄v
(
x
,
c
Ë
	`uæ_quŸe
(x)

	)

1068 
	#wc_Så_c⁄v
(
x
,
ch¨£t0
,
ch¨£t1
Ë(x)

	)

1069 
	#wc_Så_c⁄v_°ri˘
(
x
,
ch¨£t0
,
ch¨£t1
Ë(x)

	)

1071 
globÆ
 
U£A…E¡ôy
 
öô
(
TRUE
);

1072 
globÆ
 
U£GøphicCh¨
 
öô
(
FALSE
);

1073 *
gøph_symbﬁ
[];

1074 *
gøph2_symbﬁ
[];

1075 
symbﬁ_width
;

1076 
symbﬁ_width0
;

1077 
	#N_GRAPH_SYMBOL
 32

	)

1078 
	#SYMBOL_BASE
 0x20

	)

1079 
globÆ
 
no_rc_dú
 
öô
(
FALSE
);

1080 
globÆ
 *
rc_dú
 
öô
(
NULL
);

1081 
globÆ
 *
	gtmp_dú
;

1082 
globÆ
 *
c⁄fig_fûe
 
öô
(
NULL
);

1084 #ifde‡
USE_MOUSE


1085 
globÆ
 
u£_mou£
 
öô
(
TRUE
);

1086 
mou£A˘ive
;

1087 
globÆ
 
ªvî£_mou£
 
öô
(
FALSE
);

1088 
globÆ
 
ªœtive_whìl_s¸ﬁl
 
öô
(
FALSE
);

1089 
globÆ
 
fixed_whìl_s¸ﬁl_cou¡
 
öô
(5);

1090 
globÆ
 
ªœtive_whìl_s¸ﬁl_øtio
 
öô
(30);

1091 
	s_Mou£A˘i⁄M≠
 {

1092 (*
	mfunc
) ();

1093 *
	md©a
;

1094 } 
	tMou£A˘i⁄M≠
;

1095 
	s_Mou£A˘i⁄
 {

1096 *
	mmíu_°r
;

1097 *
	mœ°löe_°r
;

1098 
	mmíu_width
;

1099 
	mœ°löe_width
;

1100 
	mö_a˘i⁄
;

1101 
	mcurs‹X
;

1102 
	mcurs‹Y
;

1103 
Mou£A˘i⁄M≠
 
	mdeÁu…_m≠
[3];

1104 
Mou£A˘i⁄M≠
 
	m™ch‹_m≠
[3];

1105 
Mou£A˘i⁄M≠
 
	ma˘ive_m≠
[3];

1106 
Mou£A˘i⁄M≠
 
	mèb_m≠
[3];

1107 
Mou£A˘i⁄M≠
 *
	mmíu_m≠
[3];

1108 
Mou£A˘i⁄M≠
 *
	mœ°löe_m≠
[3];

1109 } 
	tMou£A˘i⁄
;

1110 
globÆ
 
Mou£A˘i⁄
 
	gmou£_a˘i⁄
;

1111 
	#LIMIT_MOUSE_MENU
 100

	)

1114 #ifde‡
USE_COOKIE


1115 
globÆ
 
deÁu…_u£_cookõ
 
öô
(
TRUE
);

1116 
globÆ
 
u£_cookõ
 
öô
(
FALSE
);

1117 
globÆ
 
show_cookõ
 
öô
(
TRUE
);

1118 
globÆ
 
ac˚±_cookõ
 
öô
(
FALSE
);

1119 
	#ACCEPT_BAD_COOKIE_DISCARD
 0

	)

1120 
	#ACCEPT_BAD_COOKIE_ACCEPT
 1

	)

1121 
	#ACCEPT_BAD_COOKIE_ASK
 2

	)

1122 
globÆ
 
ac˚±_bad_cookõ
 
öô
(
ACCEPT_BAD_COOKIE_DISCARD
);

1123 
globÆ
 *
cookõ_ªje˘_domaös
 
öô
(
NULL
);

1124 
globÆ
 *
cookõ_ac˚±_domaös
 
öô
(
NULL
);

1125 
globÆ
 
TextLi°
 *
	gCookõ_ªje˘_domaös
;

1126 
globÆ
 
TextLi°
 *
	gCookõ_ac˚±_domaös
;

1129 #ifde‡
USE_IMAGE


1130 
globÆ
 
võw_un£íobje˘
 
öô
(
FALSE
);

1132 
globÆ
 
võw_un£íobje˘
 
öô
(
TRUE
);

1135 #i‡
deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

1136 
globÆ
 
s¶_vîify_£rvî
 
öô
(
FALSE
);

1137 
globÆ
 *
s¶_˚π_fûe
 
öô
(
NULL
);

1138 
globÆ
 *
s¶_key_fûe
 
öô
(
NULL
);

1139 
globÆ
 *
s¶_ˇ_∑th
 
öô
(
NULL
);

1140 
globÆ
 *
s¶_ˇ_fûe
 
öô
(
NULL
);

1141 
globÆ
 
s¶_∑th_modifõd
 
öô
(
FALSE
);

1143 * 
deföed
(
USE_SSL_VERIFY
) */

1144 #ifde‡
USE_SSL


1145 
globÆ
 *
s¶_f‹bid_mëhod
 
öô
(
NULL
);

1148 
globÆ
 
is_ªdi•œy
 
öô
(
FALSE
);

1149 
globÆ
 
˛ór_buf„r
 
öô
(
TRUE
);

1150 
globÆ
 
pixñ_≥r_ch¨
 
öô
(
DEFAULT_PIXEL_PER_CHAR
);

1151 
globÆ
 
£t_pixñ_≥r_ch¨
 
öô
(
FALSE
);

1152 #ifde‡
USE_IMAGE


1153 
globÆ
 
pixñ_≥r_löe
 
öô
(
DEFAULT_PIXEL_PER_LINE
);

1154 
globÆ
 
£t_pixñ_≥r_löe
 
öô
(
FALSE
);

1155 
globÆ
 
image_sˇÀ
 
öô
(100);

1157 
globÆ
 
u£_Àss›í
 
öô
(
FALSE
);

1159 
globÆ
 *
keym≠_fûe
 
öô
(
KEYMAP_FILE
);

1161 #ifde‡
USE_M17N


1162 
	#gë_m˘y≥
(
c
Ë((
Löïr›
)
	`wtf_ty≥
((
wc_uch¨
 *)(c)Ë<< 8)

	)

1163 
	#gë_m˛í
(
c
Ë
	`wtf_Àn1
((
wc_uch¨
 *)(c))

	)

1164 
	#gë_mcwidth
(
c
Ë
	`wtf_width
((
wc_uch¨
 *)(c))

	)

1165 
	#gë_°rwidth
(
c
Ë
	`wtf_°rwidth
((
wc_uch¨
 *)(c))

	)

1166 
	#gë_Så_°rwidth
(
c
Ë
	`wtf_°rwidth
((
wc_uch¨
 *)((c)->
±r
))

	)

1168 
	#gë_m˘y≥
(
c
Ë(
	`IS_CNTRL
(*(c)Ë? 
PC_CTRL
 : 
PC_ASCII
)

	)

1169 
	#gë_m˛í
(
c
Ë1

	)

1170 
	#gë_mcwidth
(
c
Ë1

	)

1171 
	#gë_°rwidth
(
c
Ë
	`°æí
(c)

	)

1172 
	#gë_Så_°rwidth
(
c
Ë((c)->
Àngth
)

	)

1175 
globÆ
 
FﬁlowRedúe˘i⁄
 
öô
(10);

1177 
globÆ
 
w3m_backíd
 
öô
(
FALSE
);

1178 
globÆ
 
TextLöeLi°
 *
	gbackíd_hÆfdump_buf
;

1179 
globÆ
 
TextLi°
 *
backíd_b©ch_comm™ds
 
öô
(
NULL
);

1180 
backíd
();

1181 
dñëeFûes
();

1182 
w3m_exô
(
i
);

1184 #ifde‡
USE_ALARM


1185 
	#AL_UNSET
 0

	)

1186 
	#AL_EXPLICIT
 1

	)

1187 
	#AL_IMPLICIT
 2

	)

1188 
	#AL_IMPLICIT_ONCE
 3

	)

1190 
	s_AœrmEvít
 {

1191 
	m£c
;

1192 
	m°©us
;

1193 
	mcmd
;

1194 *
	md©a
;

1195 } 
	tAœrmEvít
;

1202 
	~"èbÀ.h
"

1203 
	~"¥Ÿo.h
"

	@form.c

5 
	~"fm.h
"

6 
	~"∑r£èg.h
"

7 
	~"∑r£ègx.h
"

8 
	~"my˘y≥.h
"

9 
	~"loˇl.h
"

10 
	~"ªgex.h
"

12 
Så
 *
ãxèªa_°r
;

13 #ifde‡
MENU_SELECT


14 
F‹mSñe˘O±i⁄
 *
£À˘_›ti⁄
;

15 
	~"míu.h
"

20 *
	ma˘i⁄
;

21 (*
	mrout
)(
	m∑r£d_èg¨g
 *);

22 } 
	göã∫Æ_a˘i⁄
[] = {

23 {"m≠", 
fﬁlow_m≠
},

24 {"›ti⁄", 
∑√l_£t_›ti⁄
},

25 #ifde‡
USE_COOKIE


26 {"cookõ", 
£t_cookõ_Êag
},

28 {"dow∆ﬂd", 
dow∆ﬂd_a˘i⁄
},

29 #ifde‡
USE_M17N


30 { "ch¨£t", 
ch™ge_ch¨£t
 },

32 {"n⁄e", 
NULL
},

33 {
NULL
, NULL},

37 
f‹m_li°
 *

38 
	$√wF‹mLi°
(*
a˘i⁄
, *
mëhod
, *
ch¨£t
, *
í˘y≥
,

39 *
èrgë
, *
«me
, 
f‹m_li°
 *
_√xt
)

41 
f‹m_li°
 *
l
;

42 
Så
 
a
 = 
	`Så√w_ch¨p
(
a˘i⁄
);

43 
m
 = 
FORM_METHOD_GET
;

44 
e
 = 
FORM_ENCTYPE_URLENCODED
;

45 #ifde‡
USE_M17N


46 
wc_˚s
 
c
 = 0;

49 i‡(
mëhod
 =
NULL
 || !
	`°rˇ£cmp
(method, "get"))

50 
m
 = 
FORM_METHOD_GET
;

51 i‡(!
	`°rˇ£cmp
(
mëhod
, "post"))

52 
m
 = 
FORM_METHOD_POST
;

53 i‡(!
	`°rˇ£cmp
(
mëhod
, "internal"))

54 
m
 = 
FORM_METHOD_INTERNAL
;

57 i‡(
í˘y≥
 !
NULL
 && !
	`°rˇ£cmp
(enctype, "multipart/form-data")) {

58 
e
 = 
FORM_ENCTYPE_MULTIPART
;

59 i‡(
m
 =
FORM_METHOD_GET
)

60 
m
 = 
FORM_METHOD_POST
;

63 #ifde‡
USE_M17N


64 i‡(
ch¨£t
 !
NULL
)

65 
c
 = 
	`wc_guess_ch¨£t
(
ch¨£t
, 0);

68 
l
 = 
	`New
(
f‹m_li°
);

69 
l
->
ôem
 =Ü->
œ°ôem
 = 
NULL
;

70 
l
->
a˘i⁄
 = 
a
;

71 
l
->
mëhod
 = 
m
;

72 #ifde‡
USE_M17N


73 
l
->
ch¨£t
 = 
c
;

75 
l
->
í˘y≥
 = 
e
;

76 
l
->
èrgë
 =Åarget;

77 
l
->
«me
 =Çame;

78 
l
->
√xt
 = 
_√xt
;

79 
l
->
nôems
 = 0;

80 
l
->
body
 = 
NULL
;

81 
l
->
Àngth
 = 0;

82  
l
;

83 
	}
}

88 
f‹m_ôem_li°
 *

89 
	$f‹mLi°_addI≈ut
(
f‹m_li°
 *
Ê
, 
∑r£d_èg
 *
èg
)

91 
f‹m_ôem_li°
 *
ôem
;

92 *
p
;

93 
i
;

96 i‡(
Ê
 =
NULL
)

97  
NULL
;

99 
ôem
 = 
	`New
(
f‹m_ôem_li°
);

100 
ôem
->
ty≥
 = 
FORM_UNKNOWN
;

101 
ôem
->
size
 = -1;

102 
ôem
->
rows
 = 0;

103 
ôem
->
checked
 = iãm->
öô_checked
 = 0;

104 
ôem
->
ac˚±
 = 0;

105 
ôem
->
«me
 = 
NULL
;

106 
ôem
->
vÆue
 = iãm->
öô_vÆue
 = 
NULL
;

107 
ôem
->
ªad⁄ly
 = 0;

108 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TYPE
, &
p
)) {

109 
ôem
->
ty≥
 = 
	`f‹mty≥
(
p
);

110 i‡(
ôem
->
size
 < 0 &&

111 (
ôem
->
ty≥
 =
FORM_INPUT_TEXT
 ||

112 
ôem
->
ty≥
 =
FORM_INPUT_FILE
 ||

113 
ôem
->
ty≥
 =
FORM_INPUT_PASSWORD
))

114 
ôem
->
size
 = 
FORM_I_TEXT_DEFAULT_SIZE
;

116 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
p
))

117 
ôem
->
«me
 = 
	`Så√w_ch¨p
(
p
);

118 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALUE
, &
p
))

119 
ôem
->
vÆue
 = iãm->
öô_vÆue
 = 
	`Så√w_ch¨p
(
p
);

120 
ôem
->
checked
 = iãm->
öô_checked
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_CHECKED
);

121 
ôem
->
ac˚±
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_ACCEPT
);

122 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SIZE
, &
ôem
->
size
);

123 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_MAXLENGTH
, &
ôem
->
maxÀngth
);

124 
ôem
->
ªad⁄ly
 = 
	`∑r£dèg_exi°s
(
èg
, 
ATTR_READONLY
);

125 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TEXTAREANUMBER
, &
i
))

126 
ôem
->
vÆue
 = iãm->
öô_vÆue
 = 
ãxèªa_°r
[
i
];

127 #ifde‡
MENU_SELECT


128 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SELECTNUMBER
, &
i
))

129 
ôem
->
£À˘_›ti⁄
 = sñe˘_›ti⁄[
i
].
fú°
;

131 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ROWS
, &
p
))

132 
ôem
->
rows
 = 
	`©oi
(
p
);

133 i‡(
ôem
->
ty≥
 =
FORM_UNKNOWN
) {

135  
NULL
;

137 #ifde‡
MENU_SELECT


138 i‡(
ôem
->
ty≥
 =
FORM_SELECT
) {

139 
	`choo£Sñe˘O±i⁄
(
ôem
, iãm->
£À˘_›ti⁄
);

140 
ôem
->
öô_£À˘ed
 = iãm->
£À˘ed
;

141 
ôem
->
öô_vÆue
 = iãm->
vÆue
;

142 
ôem
->
öô_œbñ
 = iãm->
œbñ
;

145 i‡(
ôem
->
ty≥
 =
FORM_INPUT_FILE
 && iãm->
vÆue
 && iãm->vÆue->
Àngth
) {

147  
NULL
;

149 
ôem
->
∑ª¡
 = 
Ê
;

150 
ôem
->
√xt
 = 
NULL
;

151 i‡(
Ê
->
ôem
 =
NULL
) {

152 
Ê
->
ôem
 = fl->
œ°ôem
 = item;

155 
Ê
->
œ°ôem
->
√xt
 = 
ôem
;

156 
Ê
->
œ°ôem
 = 
ôem
;

158 i‡(
ôem
->
ty≥
 =
FORM_INPUT_HIDDEN
)

159  
NULL
;

160 
Ê
->
nôems
++;

161  
ôem
;

162 
	}
}

164 *
	g_f‹mty≥tbl
[] = {

166 "image", "£À˘", "ãxèªa", "buâ⁄", "fûe", 
NULL


169 *
	g_f‹mmëhodtbl
[] = {

174 
	$f‹m2°r
(
F‹mIãmLi°
 *
fi
)

176 
Så
 
tmp
 = 
	`Så√w
();

178 i‡(
fi
->
ty≥
 !
FORM_SELECT
 && fi->ty≥ !
FORM_TEXTAREA
)

179 
	`Såˇt_ch¨p
(
tmp
, "inputÅype=");

180 
	`Såˇt_ch¨p
(
tmp
, 
_f‹mty≥tbl
[
fi
->
ty≥
]);

181 i‡(
fi
->
«me
 && fi->«me->
Àngth
)

182 
	`Såˇt_m_ch¨p
(
tmp
, "Çame=\"", 
fi
->
«me
->
±r
, "\"", 
NULL
);

183 i‡((
fi
->
ty≥
 =
FORM_INPUT_RADIO
 || fi->ty≥ =
FORM_INPUT_CHECKBOX
 ||

184 
fi
->
ty≥
 =
FORM_SELECT
Ë&& fi->
vÆue
)

185 
	`Såˇt_m_ch¨p
(
tmp
, " vÆue=\"", 
fi
->
vÆue
->
±r
, "\"", 
NULL
);

186 
	`Såˇt_m_ch¨p
(
tmp
, " (", 
_f‹mmëhodtbl
[
fi
->
∑ª¡
->
mëhod
], " ",

187 
fi
->
∑ª¡
->
a˘i⁄
->
±r
, ")", 
NULL
);

188  
tmp
->
±r
;

189 
	}
}

192 
	$f‹mty≥
(*
ty≥°r
)

194 
i
;

195 
i
 = 0; 
_f‹mty≥tbl
[i]; i++) {

196 i‡(!
	`°rˇ£cmp
(
ty≥°r
, 
_f‹mty≥tbl
[
i
]))

197  
i
;

199  
FORM_UNKNOWN
;

200 
	}
}

203 
	$f‹mRecheckRadio
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
fi
)

205 
i
;

206 
Anch‹
 *
a2
;

207 
F‹mIãmLi°
 *
f2
;

209 
i
 = 0; i < 
buf
->
f‹môem
->
«nch‹
; i++) {

210 
a2
 = &
buf
->
f‹môem
->
™ch‹s
[
i
];

211 
f2
 = (
F‹mIãmLi°
 *)
a2
->
uæ
;

212 i‡(
f2
->
∑ª¡
 =
fi
->parent && f2 != fi &&

213 
f2
->
ty≥
 =
FORM_INPUT_RADIO
 && 
	`Såcmp
(f2->
«me
, 
fi
->name) == 0) {

214 
f2
->
checked
 = 0;

215 
	`f‹mUpd©eBuf„r
(
a2
, 
buf
, 
f2
);

218 
fi
->
checked
 = 1;

219 
	`f‹mUpd©eBuf„r
(
a
, 
buf
, 
fi
);

220 
	}
}

223 
	$f‹mRe£tBuf„r
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
f‹môem
)

225 
i
;

226 
Anch‹
 *
a
;

227 
F‹mIãmLi°
 *
f1
, *
f2
;

229 i‡(
buf
 =
NULL
 || buf->
f‹môem
 == NULL || formitem == NULL)

231 
i
 = 0; i < 
buf
->
f‹môem
->
«nch‹
 && i < formitem->nanchor; i++) {

232 
a
 = &
buf
->
f‹môem
->
™ch‹s
[
i
];

233 i‡(
a
->
y
 !a->
°¨t
.
löe
)

235 
f1
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

236 
f2
 = (
F‹mIãmLi°
 *)
f‹môem
->
™ch‹s
[
i
].
uæ
;

237 i‡(
f1
->
ty≥
 !
f2
->type ||

238 
	`°rcmp
(((
f1
->
«me
 =
NULL
Ë? "" : f1->«me->
±r
),

239 ((
f2
->
«me
 =
NULL
Ë? "" : f2->«me->
±r
)))

241 
f1
->
ty≥
) {

242 
FORM_INPUT_TEXT
:

243 
FORM_INPUT_PASSWORD
:

244 
FORM_INPUT_FILE
:

245 
FORM_TEXTAREA
:

246 
f1
->
vÆue
 = 
f2
->value;

247 
f1
->
öô_vÆue
 = 
f2
->init_value;

249 
FORM_INPUT_CHECKBOX
:

250 
FORM_INPUT_RADIO
:

251 
f1
->
checked
 = 
f2
->checked;

252 
f1
->
öô_checked
 = 
f2
->init_checked;

254 
FORM_SELECT
:

255 #ifde‡
MENU_SELECT


256 
f1
->
£À˘_›ti⁄
 = 
f2
->select_option;

257 
f1
->
vÆue
 = 
f2
->value;

258 
f1
->
œbñ
 = 
f2
->label;

259 
f1
->
£À˘ed
 = 
f2
->selected;

260 
f1
->
öô_vÆue
 = 
f2
->init_value;

261 
f1
->
öô_œbñ
 = 
f2
->init_label;

262 
f1
->
öô_£À˘ed
 = 
f2
->init_selected;

268 
	`f‹mUpd©eBuf„r
(
a
, 
buf
, 
f1
);

270 
	}
}

273 
	$f‹m_upd©e_löe
(
Löe
 *
löe
, **
°r
, 
•os
, 
ïos
, 
width
,

274 
√wlöe
, 
∑ssw‹d
)

276 
c_Àn
 = 1, 
c_width
 = 1, 
w
, 
i
, 
Àn
, 
pos
;

277 *
p
, *
buf
;

278 
Löïr›
 
c_ty≥
, 
ef„˘
, *
¥›
;

280 
p
 = *
°r
, 
w
 = 0, 
pos
 = 0; *∞&& w < 
width
;) {

281 
c_ty≥
 = 
	`gë_m˘y≥
((*)
p
);

282 #ifde‡
USE_M17N


283 
c_Àn
 = 
	`gë_m˛í
(
p
);

284 
c_width
 = 
	`gë_mcwidth
(
p
);

286 i‡(
c_ty≥
 =
PC_CTRL
) {

287 i‡(
√wlöe
 && *
p
 == '\n')

289 i‡(*
p
 != '\r') {

290 
w
++;

291 
pos
++;

294 i‡(
∑ssw‹d
) {

295 #ifde‡
USE_M17N


296 i‡(
w
 + 
c_width
 > 
width
)

299 
w
 +
c_width
;

300 
pos
 +
c_width
;

301 #ifde‡
USE_M17N


303 i‡(
c_ty≥
 & 
PC_UNKNOWN
) {

304 
w
++;

305 
pos
++;

308 i‡(
w
 + 
c_width
 > 
width
)

311 
w
 +
c_width
;

312 
pos
 +
c_Àn
;

314 
p
 +
c_Àn
;

316 
pos
 +
width
 - 
w
;

318 
Àn
 = 
löe
->À¿+ 
pos
 + 
•os
 - 
ïos
;

319 
buf
 = 
	`New_N
(, 
Àn
);

320 
¥›
 = 
	`New_N
(
Löïr›
, 
Àn
);

321 
	`bc›y
((*)
löe
->
löeBuf
, (*)
buf
, 
•os
 * ());

322 
	`bc›y
((*)
löe
->
¥›Buf
, (*)
¥›
, 
•os
 * (
Löïr›
));

324 
ef„˘
 = 
	`Ch¨Ef„˘
(
löe
->
¥›Buf
[
•os
]);

325 
p
 = *
°r
, 
w
 = 0, 
pos
 = 
•os
; *∞&& w < 
width
;) {

326 
c_ty≥
 = 
	`gë_m˘y≥
((*)
p
);

327 #ifde‡
USE_M17N


328 
c_Àn
 = 
	`gë_m˛í
(
p
);

329 
c_width
 = 
	`gë_mcwidth
(
p
);

331 i‡(
c_ty≥
 =
PC_CTRL
) {

332 i‡(
√wlöe
 && *
p
 == '\n')

334 i‡(*
p
 != '\r') {

335 
buf
[
pos
] = 
∑ssw‹d
 ? '*' : ' ';

336 
¥›
[
pos
] = 
ef„˘
 | 
PC_ASCII
;

337 
pos
++;

338 
w
++;

341 i‡(
∑ssw‹d
) {

342 #ifde‡
USE_M17N


343 i‡(
w
 + 
c_width
 > 
width
)

346 
i
 = 0; i < 
c_width
; i++) {

347 
buf
[
pos
] = '*';

348 
¥›
[
pos
] = 
ef„˘
 | 
PC_ASCII
;

349 
pos
++;

350 
w
++;

352 #ifde‡
USE_M17N


354 i‡(
c_ty≥
 & 
PC_UNKNOWN
) {

355 
buf
[
pos
] = ' ';

356 
¥›
[
pos
] = 
ef„˘
 | 
PC_ASCII
;

357 
pos
++;

358 
w
++;

361 i‡(
w
 + 
c_width
 > 
width
)

367 
buf
[
pos
] = *
p
;

368 
¥›
[
pos
] = 
ef„˘
 | 
c_ty≥
;

369 
pos
++;

370 #ifde‡
USE_M17N


371 
c_ty≥
 = (c_ty≥ & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

372 
i
 = 1; i < 
c_Àn
; i++) {

373 
buf
[
pos
] = 
p
[
i
];

374 
¥›
[
pos
] = 
ef„˘
 | 
c_ty≥
;

375 
pos
++;

378 
w
 +
c_width
;

380 
p
 +
c_Àn
;

382 ; 
w
 < 
width
; w++) {

383 
buf
[
pos
] = ' ';

384 
¥›
[
pos
] = 
ef„˘
 | 
PC_ASCII
;

385 
pos
++;

387 i‡(
√wlöe
) {

388 i‡(!
FﬁdTexèªa
) {

389 *
p
 && *p != '\r' && *p != '\n')

390 
p
++;

392 i‡(*
p
 == '\r')

393 
p
++;

394 i‡(*
p
 == '\n')

395 
p
++;

397 *
°r
 = 
p
;

399 
	`bc›y
((*)&
löe
->
löeBuf
[
ïos
], (*)&
buf
[
pos
],

400 (
löe
->
Àn
 - 
ïos
) * ());

401 
	`bc›y
((*)&
löe
->
¥›Buf
[
ïos
], (*)&
¥›
[
pos
],

402 (
löe
->
Àn
 - 
ïos
Ë* (
Löïr›
));

403 
löe
->
löeBuf
 = 
buf
;

404 
löe
->
¥›Buf
 = 
¥›
;

405 
löe
->
Àn
 =Üen;

407  
pos
;

408 
	}
}

411 
	$f‹mUpd©eBuf„r
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
f‹m
)

413 
Buf„r
 
ßve
;

414 *
p
;

415 
•os
, 
ïos
, 
rows
, 
c_rows
, 
pos
, 
cﬁ
 = 0;

416 
Löe
 *
l
;

418 
	`c›yBuf„r
(&
ßve
, 
buf
);

419 
	`gŸoLöe
(
buf
, 
a
->
°¨t
.
löe
);

420 
f‹m
->
ty≥
) {

421 
FORM_TEXTAREA
:

422 
FORM_INPUT_TEXT
:

423 
FORM_INPUT_FILE
:

424 
FORM_INPUT_PASSWORD
:

425 
FORM_INPUT_CHECKBOX
:

426 
FORM_INPUT_RADIO
:

427 #ifde‡
MENU_SELECT


428 
FORM_SELECT
:

430 
•os
 = 
a
->
°¨t
.
pos
;

431 
ïos
 = 
a
->
íd
.
pos
;

434 
•os
 = 
a
->
°¨t
.
pos
 + 1;

435 
ïos
 = 
a
->
íd
.
pos
 - 1;

437 
f‹m
->
ty≥
) {

438 
FORM_INPUT_CHECKBOX
:

439 
FORM_INPUT_RADIO
:

440 i‡(
f‹m
->
checked
)

441 
buf
->
cuºítLöe
->
löeBuf
[
•os
] = '*';

443 
buf
->
cuºítLöe
->
löeBuf
[
•os
] = ' ';

445 
FORM_INPUT_TEXT
:

446 
FORM_INPUT_FILE
:

447 
FORM_INPUT_PASSWORD
:

448 
FORM_TEXTAREA
:

449 #ifde‡
MENU_SELECT


450 
FORM_SELECT
:

451 i‡(
f‹m
->
ty≥
 =
FORM_SELECT
) {

452 
p
 = 
f‹m
->
œbñ
->
±r
;

453 
	`upd©eSñe˘O±i⁄
(
f‹m
, f‹m->
£À˘_›ti⁄
);

457 
p
 = 
f‹m
->
vÆue
->
±r
;

458 
l
 = 
buf
->
cuºítLöe
;

459 i‡(
f‹m
->
ty≥
 =
FORM_TEXTAREA
) {

460 
n
 = 
a
->
y
 - 
buf
->
cuºítLöe
->
löíumbî
;

461 i‡(
n
 > 0)

462 ; 
l
 && 
n
;Ü =Ü->
¥ev
,Ç--) ;

463 i‡(
n
 < 0)

464 ; 
l
 && 
n
;Ü =Ü->
¥ev
,Ç++) ;

465 i‡(!
l
)

468 
rows
 = 
f‹m
->rows ? form->rows : 1;

469 
cﬁ
 = 
	`COLPOS
(
l
, 
a
->
°¨t
.
pos
);

470 
c_rows
 = 0; c_row†< 
rows
; c_rows++, 
l
 =Ü->
√xt
) {

471 i‡(
rows
 > 1) {

472 
pos
 = 
	`cﬁumnPos
(
l
, 
cﬁ
);

473 
a
 = 
	`ªåõveAnch‹
(
buf
->
f‹môem
, 
l
->
löíumbî
, 
pos
);

474 i‡(
a
 =
NULL
)

476 
•os
 = 
a
->
°¨t
.
pos
;

477 
ïos
 = 
a
->
íd
.
pos
;

479 
pos
 = 
	`f‹m_upd©e_löe
(
l
, &
p
, 
•os
, 
ïos
, 
	`COLPOS
÷,ÉposË- 
cﬁ
,

480 
rows
 > 1,

481 
f‹m
->
ty≥
 =
FORM_INPUT_PASSWORD
);

482 i‡(
pos
 !
ïos
) {

483 
	`shi·Anch‹Posôi⁄
(
buf
->
hªf
, buf->
hm¨kli°
,

484 
a
->
°¨t
.
löe
, 
•os
, 
pos
 - 
ïos
);

485 
	`shi·Anch‹Posôi⁄
(
buf
->
«me
, buf->
hm¨kli°
,

486 
a
->
°¨t
.
löe
, 
•os
, 
pos
 - 
ïos
);

487 
	`shi·Anch‹Posôi⁄
(
buf
->
img
, buf->
hm¨kli°
,

488 
a
->
°¨t
.
löe
, 
•os
, 
pos
 - 
ïos
);

489 
	`shi·Anch‹Posôi⁄
(
buf
->
f‹môem
, buf->
hm¨kli°
,

490 
a
->
°¨t
.
löe
, 
•os
, 
pos
 - 
ïos
);

495 
	`c›yBuf„r
(
buf
, &
ßve
);

496 
	`¨øngeLöe
(
buf
);

497 
	}
}

500 
Så


501 
	$ãxtfõldªp
(
Så
 
s
, 
width
)

503 
Löïr›
 
c_ty≥
;

504 
Så
 
n
 = 
	`Så√w_size
(
width
 + 2);

505 
i
, 
j
, 
k
, 
c_Àn
;

507 
j
 = 0;

508 
i
 = 0; i < 
s
->
Àngth
; i +
c_Àn
) {

509 
c_ty≥
 = 
	`gë_m˘y≥
((*)&
s
->
±r
[
i
]);

510 
c_Àn
 = 
	`gë_m˛í
(&
s
->
±r
[
i
]);

511 i‡(
s
->
±r
[
i
] == '\r')

513 
k
 = 
j
 + 
	`gë_mcwidth
(&
s
->
±r
[
i
]);

514 i‡(
k
 > 
width
)

516 i‡(
c_ty≥
 =
PC_CTRL
)

517 
	`Såˇt_ch¨
(
n
, ' ');

518 #ifde‡
USE_M17N


519 i‡(
c_ty≥
 & 
PC_UNKNOWN
)

520 
	`Såˇt_ch¨
(
n
, ' ');

522 i‡(
s
->
±r
[
i
] == '&')

523 
	`Såˇt_ch¨p
(
n
, "&amp;");

524 i‡(
s
->
±r
[
i
] == '<')

525 
	`Såˇt_ch¨p
(
n
, "&lt;");

526 i‡(
s
->
±r
[
i
] == '>')

527 
	`Såˇt_ch¨p
(
n
, "&gt;");

529 
	`Såˇt_ch¨p_n
(
n
, &
s
->
±r
[
i
], 
c_Àn
);

530 
j
 = 
k
;

532 ; 
j
 < 
width
; j++)

533 
	`Såˇt_ch¨
(
n
, ' ');

534  
n
;

535 
	}
}

538 
	$f‹m_Âuts_decode
(
Så
 
s
, 
FILE
 * 
f
)

540 *
p
;

541 
Så
 
z
 = 
	`Så√w
();

543 
p
 = 
s
->
±r
; *p;) {

544 *
p
) {

545 #i‡!
	`deföed
–
__CYGWIN__
 ) && !deföed–
__EMX__
 )

547 i‡(*(
p
 + 1) == '\n')

548 
p
++;

553 
	`Såˇt_ch¨
(
z
, *
p
);

554 
p
++;

558 #ifde‡
USE_M17N


559 
z
 = 
	`wc_Så_c⁄v_°ri˘
(z, 
I¬îCh¨£t
, 
Di•œyCh¨£t
);

561 
	`SåÂuts
(
z
, 
f
);

562 
	}
}

566 
	$öput_ãxèªa
(
F‹mIãmLi°
 *
fi
)

568 *
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

569 
Så
 
tmp
;

570 
FILE
 *
f
;

571 #ifde‡
USE_M17N


572 
wc_˚s
 
ch¨£t
 = 
Di•œyCh¨£t
;

573 
wc_uöt8
 
auto_dëe˘
;

576 
f
 = 
	`f›í
(
tmpf
, "w");

577 i‡(
f
 =
NULL
) {

579 
	`di•_îr_mesßge
("C™'à›íÅemp‹¨y fûe", 
FALSE
);

582 i‡(
fi
->
vÆue
)

583 
	`f‹m_Âuts_decode
(
fi
->
vÆue
, 
f
);

584 
	`f˛o£
(
f
);

586 
	`fmTîm
();

587 
	`sy°em
(
	`myEdô‹
(
Edô‹
, 
tmpf
, 1)->
±r
);

588 
	`fmInô
();

590 i‡(
fi
->
ªad⁄ly
)

591 
öput_íd
;

592 
f
 = 
	`f›í
(
tmpf
, "r");

593 i‡(
f
 =
NULL
) {

595 
	`di•_îr_mesßge
("C™'à›íÅemp‹¨y fûe", 
FALSE
);

596 
öput_íd
;

598 
fi
->
vÆue
 = 
	`Så√w
();

599 #ifde‡
USE_M17N


600 
auto_dëe˘
 = 
WcO±i⁄
.auto_detect;

601 
WcO±i⁄
.
auto_dëe˘
 = 
WC_OPT_DETECT_ON
;

603 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

604 i‡(
tmp
->
Àngth
 =1 &&Åmp->
±r
[tmp->length - 1] == '\n') {

606 
tmp
 = 
	`Så√w_ch¨p
("\r\n");

608 i‡(
tmp
->
Àngth
 > 1 &&Åmp->
±r
[tmp->length - 1] == '\n' &&

609 
tmp
->
±r
[tmp->
Àngth
 - 2] != '\r') {

610 
	`Såshrök
(
tmp
, 1);

611 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

613 
tmp
 = 
	`c⁄vîtLöe
(
NULL
,Åmp, 
RAW_MODE
, &
ch¨£t
, 
Di•œyCh¨£t
);

614 
	`Såˇt
(
fi
->
vÆue
, 
tmp
);

616 #ifde‡
USE_M17N


617 
WcO±i⁄
.
auto_dëe˘
 =áuto_detect;

619 
	`f˛o£
(
f
);

620 
öput_íd
:

621 
	`u∆ök
(
tmpf
);

622 
	}
}

625 
	$do_öã∫Æ
(*
a˘i⁄
, *
d©a
)

627 
i
;

629 
i
 = 0; 
öã∫Æ_a˘i⁄
[i].
a˘i⁄
; i++) {

630 i‡(
	`°rˇ£cmp
(
öã∫Æ_a˘i⁄
[
i
].
a˘i⁄
,áction) == 0) {

631 i‡(
öã∫Æ_a˘i⁄
[
i
].
rout
)

632 
öã∫Æ_a˘i⁄
[
i
].
	`rout
(
	`cgi°r2èg¨g
(
d©a
));

636 
	}
}

638 #ifde‡
MENU_SELECT


640 
	$addSñe˘O±i⁄
(
F‹mSñe˘O±i⁄
 *
fso
, 
Så
 
vÆue
, Så 
œbñ
, 
chk
)

642 
F‹mSñe˘O±i⁄Iãm
 *
o
;

643 
o
 = 
	`New
(
F‹mSñe˘O±i⁄Iãm
);

644 i‡(
vÆue
 =
NULL
)

645 
vÆue
 = 
œbñ
;

646 
o
->
vÆue
 = value;

647 
	`Såªmovefú°•a˚s
(
œbñ
);

648 
	`Såªmovëøûög•a˚s
(
œbñ
);

649 
o
->
œbñ
 =Üabel;

650 
o
->
checked
 = 
chk
;

651 
o
->
√xt
 = 
NULL
;

652 i‡(
fso
->
fú°
 =
NULL
)

653 
fso
->
fú°
 = fso->
œ°
 = 
o
;

655 
fso
->
œ°
->
√xt
 = 
o
;

656 
fso
->
œ°
 = 
o
;

658 
	}
}

661 
	$choo£Sñe˘O±i⁄
(
F‹mIãmLi°
 *
fi
, 
F‹mSñe˘O±i⁄Iãm
 *
ôem
)

663 
F‹mSñe˘O±i⁄Iãm
 *
›t
;

664 
i
;

666 
fi
->
£À˘ed
 = 0;

667 i‡(
ôem
 =
NULL
) {

668 
fi
->
vÆue
 = 
	`Så√w_size
(0);

669 
fi
->
œbñ
 = 
	`Så√w_size
(0);

672 
fi
->
vÆue
 = 
ôem
->value;

673 
fi
->
œbñ
 = 
ôem
->label;

674 
i
 = 0, 
›t
 = 
ôem
; o± !
NULL
; i++, o± = o±->
√xt
) {

675 i‡(
›t
->
checked
) {

676 
fi
->
vÆue
 = 
›t
->value;

677 
fi
->
œbñ
 = 
›t
->label;

678 
fi
->
£À˘ed
 = 
i
;

682 
	`upd©eSñe˘O±i⁄
(
fi
, 
ôem
);

683 
	}
}

686 
	$upd©eSñe˘O±i⁄
(
F‹mIãmLi°
 *
fi
, 
F‹mSñe˘O±i⁄Iãm
 *
ôem
)

688 
i
;

690 i‡(
fi
 =
NULL
 || 
ôem
 == NULL)

692 
i
 = 0; 
ôem
 !
NULL
; i++, iãm = iãm->
√xt
) {

693 i‡(
i
 =
fi
->
£À˘ed
)

694 
ôem
->
checked
 = 
TRUE
;

696 
ôem
->
checked
 = 
FALSE
;

698 
	}
}

701 
	$f‹mChoo£O±i⁄ByMíu
(
f‹m_ôem_li°
 *
fi
, 
x
, 
y
)

703 
i
, 
n
, 
£À˘ed
 = -1, 
öô_£À˘
 = 
fi
->selected;

704 
F‹mSñe˘O±i⁄Iãm
 *
›t
;

705 **
œbñ
;

707 
n
 = 0, 
›t
 = 
fi
->
£À˘_›ti⁄
; o± !
NULL
;Ç++, o± = o±->
√xt
) ;

708 
œbñ
 = 
	`New_N
(*, 
n
 + 1);

709 
i
 = 0, 
›t
 = 
fi
->
£À˘_›ti⁄
; o± !
NULL
; i++, o± = o±->
√xt
)

710 
œbñ
[
i
] = 
›t
->œbñ->
±r
;

711 
œbñ
[
n
] = 
NULL
;

713 
	`›ti⁄Míu
(
x
, 
y
, 
œbñ
, &
£À˘ed
, 
öô_£À˘
, 
NULL
);

715 i‡(
£À˘ed
 < 0)

717 
i
 = 0, 
›t
 = 
fi
->
£À˘_›ti⁄
; o± !
NULL
; i++, o± = o±->
√xt
) {

718 i‡(
i
 =
£À˘ed
) {

719 
fi
->
£À˘ed
 = selected;

720 
fi
->
vÆue
 = 
›t
->value;

721 
fi
->
œbñ
 = 
›t
->label;

725 
	`upd©eSñe˘O±i⁄
(
fi
, fi->
£À˘_›ti⁄
);

727 
	}
}

731 
	$f‹m_wrôe_d©a
(
FILE
 * 
f
, *
bound¨y
, *
«me
, *
vÆue
)

733 
	`Ârötf
(
f
, "--%s\r\n", 
bound¨y
);

734 
	`Ârötf
(
f
, "C⁄ã¡-Di•osôi⁄: f‹m-d©a;Çame=\"%s\"\r\n\r\n", 
«me
);

735 
	`Ârötf
(
f
, "%s\r\n", 
vÆue
);

736 
	}
}

739 
	$f‹m_wrôe_‰om_fûe
(
FILE
 * 
f
, *
bound¨y
, *
«me
, *
fûíame
,

740 *
fûe
)

742 
FILE
 *
fd
;

743 
°©
 
°
;

744 
c
;

745 *
ty≥
;

747 
	`Ârötf
(
f
, "--%s\r\n", 
bound¨y
);

748 
	`Ârötf
(
f
,

750 
«me
, 
	`myba£«me
(
fûíame
));

751 
ty≥
 = 
	`guessC⁄ã¡Ty≥
(
fûe
);

752 
	`Ârötf
(
f
, "Content-Type: %s\r\n\r\n",

753 
ty≥
 ?Åype : "application/octet-stream");

755 i‡(
	`l°©
(
fûe
, &
°
) < 0)

756 
wrôe_íd
;

757 i‡(
	`S_ISDIR
(
°
.
°_mode
))

758 
wrôe_íd
;

759 
fd
 = 
	`f›í
(
fûe
, "r");

760 i‡(
fd
 !
NULL
) {

761 (
c
 = 
	`fgëc
(
fd
)Ë!
EOF
)

762 
	`Âutc
(
c
, 
f
);

763 
	`f˛o£
(
fd
);

765 
wrôe_íd
:

766 
	`Ârötf
(
f
, "\r\n");

767 
	}
}

769 
	s¥e_f‹m_ôem
 {

770 
	mty≥
;

771 *
	m«me
;

772 *
	mvÆue
;

773 
	mchecked
;

774 
¥e_f‹m_ôem
 *
	m√xt
;

777 
	s¥e_f‹m
 {

778 *
	muæ
;

779 
Regex
 *
	mª_uæ
;

780 *
	m«me
;

781 *
	ma˘i⁄
;

782 
¥e_f‹m_ôem
 *
	môem
;

783 
¥e_f‹m
 *
	m√xt
;

786 
¥e_f‹m
 *
	gPªF‹m
 = 
NULL
;

788 
¥e_f‹m
 *

789 
	$add_¥e_f‹m
(
¥e_f‹m
 *
¥ev
, *
uæ
, *
«me
, *
a˘i⁄
)

791 
P¨£dURL
 
pu
;

792 
¥e_f‹m
 *
√w
;

794 i‡(
¥ev
)

795 
√w
 = 
¥ev
->
√xt
 = 
	`New
(
¥e_f‹m
);

797 
√w
 = 
PªF‹m
 = 
	`New
(
¥e_f‹m
);

798 i‡(
uæ
 && *url == '/') {

799 
l
 = 
	`°æí
(
uæ
);

800 i‡(
l
 > 1 && 
uæ
[l - 1] == '/')

801 
√w
->
uæ
 = 
	`ÆlocSå
(uæ + 1, 
l
 - 2);

803 
√w
->
uæ
 = url + 1;

804 
√w
->
ª_uæ
 = 
	`√wRegex
“ew->
uæ
, 
FALSE
, 
NULL
, NULL);

805 i‡(!
√w
->
ª_uæ
)

806 
√w
->
uæ
 = 
NULL
;

808 i‡(
uæ
) {

809 
	`∑r£URL2
(
uæ
, &
pu
, 
NULL
);

810 
√w
->
uæ
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

811 
√w
->
ª_uæ
 = 
NULL
;

813 
√w
->
«me
 = («mê&& *«meË?Çamê: 
NULL
;

814 
√w
->
a˘i⁄
 = (a˘i⁄ && *a˘i⁄Ë?á˘i⁄ : 
NULL
;

815 
√w
->
ôem
 = 
NULL
;

816 
√w
->
√xt
 = 
NULL
;

817  
√w
;

818 
	}
}

820 
¥e_f‹m_ôem
 *

821 
	$add_¥e_f‹m_ôem
(
¥e_f‹m
 *
pf
, 
¥e_f‹m_ôem
 *
¥ev
, 
ty≥
,

822 *
«me
, *
vÆue
, *
checked
)

824 
¥e_f‹m_ôem
 *
√w
;

826 i‡(!
pf
)

827  
NULL
;

828 i‡(
¥ev
)

829 
√w
 = 
¥ev
->
√xt
 = 
	`New
(
¥e_f‹m_ôem
);

831 
√w
 = 
pf
->
ôem
 = 
	`New
(
¥e_f‹m_ôem
);

832 
√w
->
ty≥
 =Åype;

833 
√w
->
«me
 =Çame;

834 
√w
->
vÆue
 = value;

835 i‡(
checked
 && *checked && (!
	`°rcmp
(checked, "0") ||

836 
	`°rˇ£cmp
(
checked
, "off")

837 || !
	`°rˇ£cmp
(
checked
, "no")))

838 
√w
->
checked
 = 0;

840 
√w
->
checked
 = 1;

841 
√w
->
√xt
 = 
NULL
;

842  
√w
;

843 
	}
}

862 
	$lﬂdPªF‹m
()

864 
FILE
 *
Â
;

865 
Så
 
löe
 = 
NULL
, 
ãxèªa
 = NULL;

866 
¥e_f‹m
 *
pf
 = 
NULL
;

867 
¥e_f‹m_ôem
 *
pi
 = 
NULL
;

868 
ty≥
 = -1;

869 *
«me
 = 
NULL
;

871 
PªF‹m
 = 
NULL
;

872 
Â
 = 
	`›íSe¸ëFûe
(
¥e_f‹m_fûe
);

873 i‡(
Â
 =
NULL
)

876 *
p
, *
s
, *
¨g
;

878 
löe
 = 
	`Såfgës
(
Â
);

879 i‡(
löe
->
Àngth
 == 0)

881 i‡(
ãxèªa
 && !(!
	`°∫cmp
(
löe
->
±r
, "/textarea", 9) &&

882 
	`IS_SPACE
(
löe
->
±r
[9]))) {

883 
	`Såˇt
(
ãxèªa
, 
löe
);

886 
	`Såch›
(
löe
);

887 
	`Såªmovefú°•a˚s
(
löe
);

888 
p
 = 
löe
->
±r
;

889 i‡(*
p
 == '#' || *p == '\0')

891 
s
 = 
	`gëW‹d
(&
p
);

892 
¨g
 = 
	`gëW‹d
(&
p
);

894 i‡(!
	`°rcmp
(
s
, "url")) {

895 i‡(!
¨g
 || !*arg)

897 
p
 = 
	`gëQW‹d
(&p);

898 
pf
 = 
	`add_¥e_f‹m
’f, 
¨g
, 
NULL
, 
p
);

899 
pi
 = 
pf
->
ôem
;

902 i‡(!
pf
)

904 i‡(!
	`°rcmp
(
s
, "form")) {

905 i‡(!
¨g
 || !*arg)

907 
s
 = 
	`gëQW‹d
(&
p
);

908 
p
 = 
	`gëQW‹d
(&p);

909 i‡(!
p
 || !*p) {

910 
p
 = 
s
;

911 
s
 = 
NULL
;

913 i‡(
pf
->
ôem
) {

914 
¥e_f‹m
 *
¥ev
 = 
pf
;

915 
pf
 = 
	`add_¥e_f‹m
(
¥ev
, "", 
s
, 
p
);

917 
pf
->
uæ
 = 
¥ev
->url;

918 
pf
->
ª_uæ
 = 
¥ev
->re_url;

921 
pf
->
«me
 = 
s
;

922 
pf
->
a˘i⁄
 = (
p
 && *pË?Ö : 
NULL
;

924 
pi
 = 
pf
->
ôem
;

927 i‡(!
	`°rcmp
(
s
, "text"))

928 
ty≥
 = 
FORM_INPUT_TEXT
;

929 i‡(!
	`°rcmp
(
s
, "file"))

930 
ty≥
 = 
FORM_INPUT_FILE
;

931 i‡(!
	`°rcmp
(
s
, "passwd") || !strcmp(s, "password"))

932 
ty≥
 = 
FORM_INPUT_PASSWORD
;

933 i‡(!
	`°rcmp
(
s
, "checkbox"))

934 
ty≥
 = 
FORM_INPUT_CHECKBOX
;

935 i‡(!
	`°rcmp
(
s
, "radio"))

936 
ty≥
 = 
FORM_INPUT_RADIO
;

937 i‡(!
	`°rcmp
(
s
, "submit"))

938 
ty≥
 = 
FORM_INPUT_SUBMIT
;

939 i‡(!
	`°rcmp
(
s
, "image"))

940 
ty≥
 = 
FORM_INPUT_IMAGE
;

941 i‡(!
	`°rcmp
(
s
, "select"))

942 
ty≥
 = 
FORM_SELECT
;

943 i‡(!
	`°rcmp
(
s
, "textarea")) {

944 
ty≥
 = 
FORM_TEXTAREA
;

945 
«me
 = 
	`Så√w_ch¨p
(
¨g
)->
±r
;

946 
ãxèªa
 = 
	`Så√w
();

949 i‡(
ãxèªa
 && 
«me
 && !
	`°rcmp
(
s
, "/textarea")) {

950 
pi
 = 
	`add_¥e_f‹m_ôem
(
pf
,Öi, 
ty≥
, 
«me
, 
ãxèªa
->
±r
, 
NULL
);

951 
ãxèªa
 = 
NULL
;

952 
«me
 = 
NULL
;

957 
s
 = 
	`gëQW‹d
(&
p
);

958 
pi
 = 
	`add_¥e_f‹m_ôem
(
pf
,Öi, 
ty≥
, 
¨g
, 
s
, 
	`gëQW‹d
(&
p
));

960 
	`f˛o£
(
Â
);

961 
	}
}

964 
	$¥eF‹mUpd©eBuf„r
(
Buf„r
 *
buf
)

966 
¥e_f‹m
 *
pf
;

967 
¥e_f‹m_ôem
 *
pi
;

968 
i
;

969 
Anch‹
 *
a
;

970 
F‹mLi°
 *
Ê
;

971 
F‹mIãmLi°
 *
fi
;

972 #ifde‡
MENU_SELECT


973 
F‹mSñe˘O±i⁄Iãm
 *
›t
;

974 
j
;

977 i‡(!
buf
 || !buf->
f‹môem
 || !
PªF‹m
)

980 
pf
 = 
PªF‹m
;Öf;Ö‡pf->
√xt
) {

981 i‡(
pf
->
ª_uæ
) {

982 
Så
 
uæ
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
);

983 i‡(!
	`RegexM©ch
(
pf
->
ª_uæ
, 
uæ
->
±r
, uæ->
Àngth
, 1))

986 i‡(
pf
->
uæ
) {

987 i‡(
	`Såcmp_ch¨p
(
	`∑r£dURL2Så
(&
buf
->
cuºítURL
), 
pf
->
uæ
))

992 
i
 = 0; i < 
buf
->
f‹môem
->
«nch‹
; i++) {

993 
a
 = &
buf
->
f‹môem
->
™ch‹s
[
i
];

994 
fi
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

995 
Ê
 = 
fi
->
∑ª¡
;

996 i‡(
pf
->
«me
 && (!
Ê
->«mê|| 
	`°rcmp
(fl->name,Öf->name)))

998 i‡(
pf
->
a˘i⁄


999 && (!
Ê
->
a˘i⁄
 || 
	`Såcmp_ch¨p
(Ê->a˘i⁄, 
pf
->action)))

1001 
pi
 = 
pf
->
ôem
;Öi;Öòpi->
√xt
) {

1002 i‡(
pi
->
ty≥
 !
fi
->type)

1004 i‡(
pi
->
ty≥
 =
FORM_INPUT_SUBMIT
 ||

1005 
pi
->
ty≥
 =
FORM_INPUT_IMAGE
) {

1006 i‡((!
pi
->
«me
 || !*pi->name ||

1007 (
fi
->
«me
 && !
	`Såcmp_ch¨p
(fi->«me, 
pi
->name))) &&

1008 (!
pi
->
vÆue
 || !*pi->value ||

1009 (
fi
->
vÆue
 && !
	`Såcmp_ch¨p
(fi->vÆue, 
pi
->value))))

1010 
buf
->
submô
 = 
a
;

1013 i‡(!
pi
->
«me
 || !
fi
->«mê|| 
	`Såcmp_ch¨p
(fi->name,Öi->name))

1015 
pi
->
ty≥
) {

1016 
FORM_INPUT_TEXT
:

1017 
FORM_INPUT_FILE
:

1018 
FORM_INPUT_PASSWORD
:

1019 
FORM_TEXTAREA
:

1020 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
pi
->value);

1021 
	`f‹mUpd©eBuf„r
(
a
, 
buf
, 
fi
);

1023 
FORM_INPUT_CHECKBOX
:

1024 i‡(
pi
->
vÆue
 && 
fi
->value &&

1025 !
	`Såcmp_ch¨p
(
fi
->
vÆue
, 
pi
->value)) {

1026 
fi
->
checked
 = 
pi
->checked;

1027 
	`f‹mUpd©eBuf„r
(
a
, 
buf
, 
fi
);

1030 
FORM_INPUT_RADIO
:

1031 i‡(
pi
->
vÆue
 && 
fi
->value &&

1032 !
	`Såcmp_ch¨p
(
fi
->
vÆue
, 
pi
->value))

1033 
	`f‹mRecheckRadio
(
a
, 
buf
, 
fi
);

1035 #ifde‡
MENU_SELECT


1036 
FORM_SELECT
:

1037 
j
 = 0, 
›t
 = 
fi
->
£À˘_›ti⁄
; o± !
NULL
;

1038 
j
++, 
›t
 = o±->
√xt
) {

1039 i‡(
pi
->
vÆue
 && 
›t
->value &&

1040 !
	`Såcmp_ch¨p
(
›t
->
vÆue
, 
pi
->value)) {

1041 
fi
->
£À˘ed
 = 
j
;

1042 
fi
->
vÆue
 = 
›t
->value;

1043 
fi
->
œbñ
 = 
›t
->label;

1044 
	`upd©eSñe˘O±i⁄
(
fi
, fi->
£À˘_›ti⁄
);

1045 
	`f‹mUpd©eBuf„r
(
a
, 
buf
, 
fi
);

1055 
	}
}

	@form.h

5 #i‚de‡
FORM_H


6 
	#FORM_H


	)

8 
	~"Så.h
"

10 
	#FORM_UNKNOWN
 -1

	)

11 
	#FORM_INPUT_TEXT
 0

	)

12 
	#FORM_INPUT_PASSWORD
 1

	)

13 
	#FORM_INPUT_CHECKBOX
 2

	)

14 
	#FORM_INPUT_RADIO
 3

	)

15 
	#FORM_INPUT_SUBMIT
 4

	)

16 
	#FORM_INPUT_RESET
 5

	)

17 
	#FORM_INPUT_HIDDEN
 6

	)

18 
	#FORM_INPUT_IMAGE
 7

	)

19 
	#FORM_SELECT
 8

	)

20 
	#FORM_TEXTAREA
 9

	)

21 
	#FORM_INPUT_BUTTON
 10

	)

22 
	#FORM_INPUT_FILE
 11

	)

24 
	#FORM_I_TEXT_DEFAULT_SIZE
 40

	)

25 
	#FORM_I_SELECT_DEFAULT_SIZE
 40

	)

26 
	#FORM_I_TEXTAREA_DEFAULT_WIDTH
 40

	)

28 
	#FORM_METHOD_GET
 0

	)

29 
	#FORM_METHOD_POST
 1

	)

30 
	#FORM_METHOD_INTERNAL
 2

	)

31 
	#FORM_METHOD_HEAD
 3

	)

33 
	#FORM_ENCTYPE_URLENCODED
 0

	)

34 
	#FORM_ENCTYPE_MULTIPART
 1

	)

36 
	#MAX_TEXTAREA
 10

	)

38 #ifde‡
MENU_SELECT


39 
	#MAX_SELECT
 10

	)

43 
	sf‹m_li°
 {

44 
f‹m_ôem_li°
 *
	môem
;

45 
f‹m_ôem_li°
 *
	mœ°ôem
;

46 
	mmëhod
;

47 
Så
 
	ma˘i⁄
;

48 *
	mèrgë
;

49 *
	m«me
;

50 #ifde‡
USE_M17N


51 
wc_˚s
 
	mch¨£t
;

53 
	mí˘y≥
;

54 
f‹m_li°
 *
	m√xt
;

55 
	mnôems
;

56 *
	mbody
;

57 *
	mbound¨y
;

58 
	mÀngth
;

59 } 
	tF‹mLi°
;

61 #ifde‡
MENU_SELECT


62 
	sf‹m_£À˘_›ti⁄_ôem
 {

63 
Så
 
	mvÆue
;

64 
Så
 
	mœbñ
;

65 
	mchecked
;

66 
f‹m_£À˘_›ti⁄_ôem
 *
	m√xt
;

67 } 
	tF‹mSñe˘O±i⁄Iãm
;

69 
	sf‹m_£À˘_›ti⁄
 {

70 
F‹mSñe˘O±i⁄Iãm
 *
	mfú°
;

71 
F‹mSñe˘O±i⁄Iãm
 *
	mœ°
;

72 } 
	tF‹mSñe˘O±i⁄
;

74 
addSñe˘O±i⁄
(
F‹mSñe˘O±i⁄
 *
fso
, 
Så
 
vÆue
, Så 
œbñ
, 
chk
);

75 
choo£Sñe˘O±i⁄
(
f‹m_ôem_li°
 *
fi
, 
F‹mSñe˘O±i⁄Iãm
 *
ôem
);

76 
upd©eSñe˘O±i⁄
(
f‹m_ôem_li°
 *
fi
, 
F‹mSñe˘O±i⁄Iãm
 *
ôem
);

77 
f‹mChoo£O±i⁄ByMíu
(
f‹m_ôem_li°
 *
fi
, 
x
, 
y
);

80 
	sf‹m_ôem_li°
 {

81 
	mty≥
;

82 
Så
 
	m«me
;

83 
Så
 
	mvÆue
, 
	möô_vÆue
;

84 
	mchecked
, 
	möô_checked
;

85 
	mac˚±
;

86 
	msize
;

87 
	mrows
;

88 
	mmaxÀngth
;

89 
	mªad⁄ly
;

90 #ifde‡
MENU_SELECT


91 
F‹mSñe˘O±i⁄Iãm
 *
	m£À˘_›ti⁄
;

92 
Så
 
	mœbñ
, 
	möô_œbñ
;

93 
	m£À˘ed
, 
	möô_£À˘ed
;

95 
f‹m_li°
 *
	m∑ª¡
;

96 
f‹m_ôem_li°
 *
	m√xt
;

97 } 
	tF‹mIãmLi°
;

	@frame.c

2 
	~"fm.h
"

3 
	~"∑r£ègx.h
"

4 
	~"my˘y≥.h
"

5 
	~<sig«l.h
>

6 
	~<£tjmp.h
>

8 
JMP_BUF
 
	gAb‹tLﬂdög
;

9 
‰ame£t
 *
	gªndîFømeSë
 = 
NULL
;

11 
MySig«lH™dÀr


12 
	$KeyAb‹t
(
SIGNAL_ARG
)

14 
	`LONGJMP
(
Ab‹tLﬂdög
, 1);

15 
	}
}

18 
	$∑r£FømeSëLígth
(*
s
, ***
ªt
)

20 
i
, 
Àn
;

21 *
p
, *
q
, **
lv
;

23 
i
 = 1;

25 i‡(
s
)

26 
p
 = 
s
; (∞
	`°rchr
(p, ',')); ++p)

27 ++
i
;

29 
s
 = "*";

31 
lv
 = 
	`New_N
(*, 
i
);

33 
i
 = 0, 
p
 = 
s
;; ++p) {

34 
	`SKIP_BLANKS
(
p
);

35 
Àn
 = 
	`°πﬁ
(
p
, &
q
, 10);

37 *
q
) {

39 
lv
[
i
++] = 
	`S¥ötf
("%d%%", 
Àn
)->
±r
;

42 
lv
[
i
++] = "*";

45 
lv
[
i
++] = 
	`S¥ötf
("%d", 
Àn
)->
±r
;

49 i‡(!(
p
 = 
	`°rchr
(
q
, ',')))

53 *
ªt
 = 
lv
;

54  
i
;

55 
	}
}

57 
‰ame£t
 *

58 
	$√wFømeSë
(
∑r£d_èg
 *
èg
)

60 
‰ame£t
 *
f
;

61 
i
;

62 *
cﬁs
 = 
NULL
, *
rows
 = NULL;

64 
f
 = 
	`New
(
‰ame£t
);

65 
f
->
©å
 = 
F_FRAMESET
;

66 
f
->
«me
 = 
NULL
;

67 
f
->
cuºítURL
 = 
NULL
;

68 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_COLS
, &
cﬁs
);

69 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ROWS
, &
rows
);

70 
f
->
cﬁ
 = 
	`∑r£FømeSëLígth
(
cﬁs
, &f->
width
);

71 
f
->
row
 = 
	`∑r£FømeSëLígth
(
rows
, &f->
height
);

72 
f
->
i
 = 0;

73 
i
 = 
f
->
row
 * f->
cﬁ
;

74 
f
->
‰ame
 = 
	`New_N
(
‰ame£t_ñemít
, 
i
);

76 
f
->
‰ame
[--
i
].
ñemít
 = 
NULL
;

77 } 
i
);

78  
f
;

79 
	}
}

81 
‰ame_body
 *

82 
	$√wFøme
(
∑r£d_èg
 *
èg
, 
Buf„r
 *
buf
)

84 
‰ame_body
 *
body
;

85 *
p
;

87 
body
 = 
	`New
(
‰ame_body
);

88 
	`bzîo
((*)
body
, (*body));

89 
body
->
©å
 = 
F_UNLOADED
;

90 
body
->
Êags
 = 0;

91 
body
->
ba£URL
 = 
	`ba£URL
(
buf
);

92 i‡(
èg
) {

93 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_SRC
, &
p
))

94 
body
->
uæ
 = 
	`uæ_quŸe_c⁄v
(
	`ªmove_•a˚
(
p
), 
buf
->
documít_ch¨£t
);

95 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_NAME
, &
p
) && *p != '_')

96 
body
->
«me
 = 
	`uæ_quŸe_c⁄v
(
p
, 
buf
->
documít_ch¨£t
);

98  
body
;

99 
	}
}

102 
	$u∆ﬂdFøme
(
‰ame_body
 *
b
)

104 
b
->
©å
 = 
F_UNLOADED
;

105 
	}
}

108 
	$dñëeFøme
(
‰ame_body
 *
b
)

110 i‡(
b
 =
NULL
)

112 
	`u∆ﬂdFøme
(
b
);

113 
	`bzîo
((*)
b
, (*b));

114 
	}
}

117 
	$addFømeSëEÀmít
(
‰ame£t
 *
f
, 
‰ame£t_ñemít
 
ñemít
)

119 
i
;

121 i‡(
f
 =
NULL
)

123 
i
 = 
f
->i;

124 i‡(
i
 >
f
->
cﬁ
 * f->
row
)

126 
f
->
‰ame
[
i
] = 
ñemít
;

127 
f
->
i
++;

128 
	}
}

131 
	$dñëeFømeSë
(
‰ame£t
 *
f
)

133 
i
;

135 i‡(
f
 =
NULL
)

137 
i
 = 0; i < 
f
->
cﬁ
 * f->
row
; i++) {

138 
	`dñëeFømeSëEÀmít
(
f
->
‰ame
[
i
]);

140 
f
->
«me
 = 
NULL
;

141 
f
->
cuºítURL
 = 
NULL
;

143 
	}
}

146 
	$dñëeFømeSëEÀmít
(
‰ame£t_ñemít
 
e
)

148 i‡(
e
.
ñemít
 =
NULL
)

150 
e
.
ñemít
->
©å
) {

151 
F_UNLOADED
:

153 
F_BODY
:

154 
	`dñëeFøme
(
e
.
body
);

156 
F_FRAMESET
:

157 
	`dñëeFømeSë
(
e
.
£t
);

163 
	}
}

165 
‰ame_body
 *

166 
	$c›yFøme
(
‰ame_body
 *
ob
)

168 
‰ame_body
 *
rb
;

170 
rb
 = 
	`New
(
‰ame_body
);

171 
	`bc›y
((c⁄° *)
ob
, (*)
rb
, (
‰ame_body
));

172  
rb
;

173 
	}
}

175 
‰ame£t
 *

176 
	$c›yFømeSë
(
‰ame£t
 *
of
)

178 
‰ame£t
 *
rf
;

179 
n
;

181 
rf
 = 
	`New
(
‰ame£t
);

182 
n
 = 
of
->
cﬁ
 * of->
row
;

183 
	`bc›y
((c⁄° *)
of
, (*)
rf
, (
‰ame£t
));

184 
rf
->
width
 = 
	`New_N
(*,Ñf->
cﬁ
);

185 
	`bc›y
((c⁄° *)
of
->
width
,

186 (*)
rf
->
width
, (*Ë*Ñf->
cﬁ
);

187 
rf
->
height
 = 
	`New_N
(*,Ñf->
row
);

188 
	`bc›y
((c⁄° *)
of
->
height
,

189 (*)
rf
->
height
, (*Ë*Ñf->
row
);

190 
rf
->
‰ame
 = 
	`New_N
(
‰ame£t_ñemít
, 
n
);

191 
n
) {

192 
n
--;

193 i‡(!
of
->
‰ame
[
n
].
ñemít
)

194 
©å_deÁu…
;

195 
of
->
‰ame
[
n
].
ñemít
->
©å
) {

196 
F_UNLOADED
:

197 
F_BODY
:

198 
rf
->
‰ame
[
n
].
body
 = 
	`c›yFøme
(
of
->frame[n].body);

200 
F_FRAMESET
:

201 
rf
->
‰ame
[
n
].
£t
 = 
	`c›yFømeSë
(
of
->frame[n].set);

204 
©å_deÁu…
:

205 
rf
->
‰ame
[
n
].
ñemít
 = 
NULL
;

209  
rf
;

210 
	}
}

213 
	$ÊushFømeSë
(
‰ame£t
 *
fs
)

215 
n
 = 
fs
->
i
;

217 
n
) {

218 
n
--;

219 i‡(!
fs
->
‰ame
[
n
].
ñemít
)

220 
©å_deÁu…
;

221 
fs
->
‰ame
[
n
].
ñemít
->
©å
) {

222 
F_UNLOADED
:

223 
F_BODY
:

224 
fs
->
‰ame
[
n
].
body
->
«meLi°
 = 
NULL
;

226 
F_FRAMESET
:

227 
	`ÊushFømeSë
(
fs
->
‰ame
[
n
].
£t
);

230 
©å_deÁu…
:

235 
	}
}

238 
	$pushFømeTªe
(
‰ame£t_queue
 **
fqµ
, 
‰ame£t
 *
fs
, 
Buf„r
 *
buf
)

240 
‰ame£t_queue
 *
rfq
, *
cfq
 = *
fqµ
;

242 i‡(!
fs
)

245 
rfq
 = 
	`New
(
‰ame£t_queue
);

246 
rfq
->
löíumbî
 = (
buf


247 && 
buf
->
cuºítLöe
Ë? buf->cuºítLöe->
löíumbî
 : 1;

248 
rfq
->
t›_löíumbî
 = (
buf
 && buf->
t›Löe
Ë? buf->t›Löe->
löíumbî
 : 1;

249 
rfq
->
pos
 = 
buf
 ? buf->pos : 0;

250 
rfq
->
cuºítCﬁumn
 = 
buf
 ? buf->currentColumn : 0;

251 
rfq
->
f‹môem
 = 
buf
 ? buf->f‹môem : 
NULL
;

253 
rfq
->
back
 = 
cfq
;

254 i‡(
cfq
) {

255 
rfq
->
√xt
 = 
cfq
->next;

256 i‡(
cfq
->
√xt
)

257 
cfq
->
√xt
->
back
 = 
rfq
;

258 
cfq
->
√xt
 = 
rfq
;

261 
rfq
->
√xt
 = 
cfq
;

262 
rfq
->
‰ame£t
 = 
fs
;

263 *
fqµ
 = 
rfq
;

265 
	}
}

267 
‰ame£t
 *

268 
	$p›FømeTªe
(
‰ame£t_queue
 **
fqµ
)

270 
‰ame£t_queue
 *
rfq
 = 
NULL
, *
cfq
 = *
fqµ
;

271 
‰ame£t
 *
rfs
 = 
NULL
;

273 i‡(!
cfq
)

274  
rfs
;

276 
rfs
 = 
cfq
->
‰ame£t
;

277 i‡(
cfq
->
√xt
) {

278 (
rfq
 = 
cfq
->
√xt
)->
back
 = cfq->back;

280 i‡(
cfq
->
back
) {

281 (
rfq
 = 
cfq
->
back
)->
√xt
 = cfq->next;

283 *
fqµ
 = 
rfq
;

284 
	`bzîo
((*)
cfq
, (
‰ame£t_queue
));

285  
rfs
;

286 
	}
}

289 
	$ª£tFømeEÀmít
(
‰ame£t_ñemít
 *
f_ñemít
,

290 
Buf„r
 *
buf
, *
ª„ªr
, 
F‹mLi°
 *
ªque°
)

292 *
f_«me
;

293 
‰ame_body
 *
f_body
;

295 
f_«me
 = 
f_ñemít
->
ñemít
->
«me
;

296 i‡(
buf
->
‰ame£t
) {

298 
	`dñëeFømeSëEÀmít
(*
f_ñemít
);

299 
f_ñemít
->
£t
 = 
buf
->
‰ame£t
;

300 
f_ñemít
->
£t
->
cuºítURL
 = 
	`New
(
P¨£dURL
);

301 
	`c›yP¨£dURL
(
f_ñemít
->
£t
->
cuºítURL
, &
buf
->currentURL);

302 
buf
->
‰ame£t
 = 
	`p›FømeTªe
(&(buf->
‰ameQ
));

303 
f_ñemít
->
£t
->
«me
 = 
f_«me
;

306 
f_body
 = 
	`√wFøme
(
NULL
, 
buf
);

307 
f_body
->
©å
 = 
F_BODY
;

308 
f_body
->
«me
 = 
f_«me
;

309 
f_body
->
uæ
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
;

310 
f_body
->
sour˚
 = 
buf
->
sour˚fûe
;

311 
buf
->
sour˚fûe
 = 
NULL
;

312 i‡(
buf
->
maûˇp_sour˚
) {

313 
f_body
->
sour˚
 = 
buf
->
maûˇp_sour˚
;

314 
buf
->
maûˇp_sour˚
 = 
NULL
;

316 
f_body
->
ty≥
 = 
buf
->type;

317 
f_body
->
ª„ªr
 =Ñeferer;

318 
f_body
->
ªque°
 =Ñequest;

319 
	`dñëeFømeSëEÀmít
(*
f_ñemít
);

320 
f_ñemít
->
body
 = 
f_body
;

322 
	}
}

324 
‰ame£t
 *

325 
	$‰ame_dow∆ﬂd_sour˚
(
‰ame_body
 *
b
, 
P¨£dURL
 *
cuºítURL
,

326 
P¨£dURL
 *
ba£URL
, 
Êag
)

328 
Buf„r
 *
buf
;

329 
‰ame£t
 *
ªt_‰ame£t
 = 
NULL
;

330 
P¨£dURL
 
uæ
;

332 i‡(
b
 =
NULL
 || b->
uæ
 == NULL || b->url[0] == '\0')

333  
NULL
;

334 i‡(
b
->
ba£URL
)

335 
ba£URL
 = 
b
->baseURL;

336 
	`∑r£URL2
(
b
->
uæ
, &uæ, 
cuºítURL
);

337 
uæ
.
scheme
) {

338 
SCM_LOCAL
:

340 
b
->
sour˚
 = 
uæ
.
ªÆ_fûe
;

342 
b
->
Êags
 = 0;

344 
is_ªdi•œy
 = 
TRUE
;

345 
w3m_dump
 |
DUMP_FRAME
;

346 
buf
 = 
	`lﬂdGíîÆFûe
(
b
->
uæ
,

347 
ba£URL
 ? ba£URL : 
cuºítURL
,

348 
b
->
ª„ªr
, 
Êag
 | 
RG_FRAME_SRC
, b->
ªque°
);

349 #ifde‡
USE_SSL


351 i‡(
buf
 && bu‡!
NO_BUFFER
)

352 
b
->
s¶_˚πifiˇã
 = 
buf
->ssl_certificate;

354 
w3m_dump
 &~
DUMP_FRAME
;

355 
is_ªdi•œy
 = 
FALSE
;

359 i‡(
buf
 =
NULL
 || bu‡=
NO_BUFFER
) {

360 
b
->
sour˚
 = 
NULL
;

361 
b
->
Êags
 = (
buf
 =
NO_BUFFER
Ë? 
FB_NO_BUFFER
 : 0;

362  
NULL
;

364 
b
->
uæ
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
;

365 
b
->
ty≥
 = 
buf
->type;

366 
b
->
sour˚
 = 
buf
->
sour˚fûe
;

367 
buf
->
sour˚fûe
 = 
NULL
;

368 i‡(
buf
->
maûˇp_sour˚
) {

369 
b
->
sour˚
 = 
buf
->
maûˇp_sour˚
;

370 
buf
->
maûˇp_sour˚
 = 
NULL
;

372 
b
->
©å
 = 
F_BODY
;

373 i‡(
buf
->
‰ame£t
) {

374 
ªt_‰ame£t
 = 
buf
->
‰ame£t
;

375 
ªt_‰ame£t
->
«me
 = 
b
->name;

376 
ªt_‰ame£t
->
cuºítURL
 = 
	`New
(
P¨£dURL
);

377 
	`c›yP¨£dURL
(
ªt_‰ame£t
->
cuºítURL
, &
buf
->currentURL);

378 
buf
->
‰ame£t
 = 
	`p›FømeTªe
(&(buf->
‰ameQ
));

380 
	`disˇrdBuf„r
(
buf
);

381  
ªt_‰ame£t
;

382 
	}
}

384 
	#CASE_TABLE_TAG
 \

385 
HTML_TR
:\

386 
HTML_N_TR
:\

387 
HTML_TD
:\

388 
HTML_N_TD
:\

389 
HTML_TH
:\

390 
HTML_N_TH
:\

391 
HTML_THEAD
:\

392 
HTML_N_THEAD
:\

393 
HTML_TBODY
:\

394 
HTML_N_TBODY
:\

395 
HTML_TFOOT
:\

396 
HTML_N_TFOOT
:\

397 
HTML_COLGROUP
:\

398 
HTML_N_COLGROUP
:\

399 
HTML_COL


	)

402 
	$¸óãFømeFûe
(
‰ame£t
 *
f
, 
FILE
 * 
f1
, 
Buf„r
 *
cuºít
, 
Àvñ
,

403 
f‹˚_ªlﬂd
)

405 
r
, 
c
, 
t_°ack
;

406 
URLFûe
 
f2
;

407 #ifde‡
USE_M17N


408 
wc_˚s
 
ch¨£t
, 
doc_ch¨£t
;

410 *
d_èrgë
, *
p_èrgë
, *
s_èrgë
, *
t_èrgë
;

411 
P¨£dURL
 *
cuºítURL
, 
ba£
;

412 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

413 
Êag
;

415 i‡(
f
 =
NULL
)

418 i‡(
Àvñ
 == 0) {

419 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

420 
TRAP_OFF
;

423 
TRAP_ON
;

424 
f
->
«me
 = "_top";

427 i‡(
Àvñ
 > 7) {

428 
	`Âuts
("Toÿm™y føme£àèsked.\n", 
f1
);

432 i‡(
Àvñ
 == 0) {

433 
	`Ârötf
(
f1
, "<html><head><title>%s</title></head><body>\n",

434 
	`html_quŸe
(
cuºít
->
buf„∫ame
));

435 
	`Âuts
("<èbÀ hb‹dî width=\"100%\">\n", 
f1
);

438 
	`Âuts
("<èbÀ hb‹dî>\n", 
f1
);

440 
cuºítURL
 = 
f
->cuºítURL ? f->cuºítURL : &
cuºít
->currentURL;

441 
r
 = 0;Ñ < 
f
->
row
;Ñ++) {

442 
	`Âuts
("<å vÆignÒ›>\n", 
f1
);

443 
c
 = 0; c < 
f
->
cﬁ
; c++) {

444 
‰ame£t_ñemít
 
‰ame
;

445 
‰ame£t
 *
f_‰ame£t
;

446 
i
 = 
c
 + 
r
 * 
f
->
cﬁ
;

447 *
p
 = "";

448 
°©us
 = 
R_ST_NORMAL
;

449 
Så
 
tok
 = 
	`Så√w
();

450 
¥e_mode
 = 0;

451 
íd_èg
 = 0;

453 
‰ame
 = 
f
->‰ame[
i
];

455 i‡(
‰ame
.
ñemít
 =
NULL
) {

456 
	`Âuts
("<td>\n</td>\n", 
f1
);

460 
	`Âuts
("<td", 
f1
);

461 i‡(
‰ame
.
ñemít
->
«me
)

462 
	`Ârötf
(
f1
, " id=\"_%s\"", 
	`html_quŸe
(
‰ame
.
ñemít
->
«me
));

463 i‡(!
r
)

464 
	`Ârötf
(
f1
, " width=\"%s\"", 
f
->
width
[
c
]);

465 
	`Âuts
(">\n", 
f1
);

467 
Êag
 = 0;

468 i‡(
f‹˚_ªlﬂd
) {

469 
Êag
 |
RG_NOCACHE
;

470 i‡(
‰ame
.
ñemít
->
©å
 =
F_BODY
)

471 
	`u∆ﬂdFøme
(
‰ame
.
body
);

473 
‰ame
.
ñemít
->
©å
) {

476 
	`Ârötf
(
f1
, "Frameset \"%s\" frame %d:Åype unrecognized",

477 
	`html_quŸe
(
f
->
«me
), 
i
 + 1);

479 
F_UNLOADED
:

480 i‡(!
‰ame
.
body
->
«me
 && 
f
->name) {

481 
‰ame
.
body
->
«me
 = 
	`S¥ötf
("%s_%d", 
f
->«me, 
i
)->
±r
;

483 
	`fÊush
(
f1
);

484 
f_‰ame£t
 = 
	`‰ame_dow∆ﬂd_sour˚
(
‰ame
.
body
,

485 
cuºítURL
,

486 
cuºít
->
ba£URL
, 
Êag
);

487 i‡(
f_‰ame£t
) {

488 
	`dñëeFøme
(
‰ame
.
body
);

489 
f
->
‰ame
[
i
].
£t
 = føme.£à
f_‰ame£t
;

490 
ªndî_‰ame£t
;

493 
F_BODY
:

494 
	`öô_°ªam
(&
f2
, 
SCM_LOCAL
, 
NULL
);

495 i‡(
‰ame
.
body
->
sour˚
) {

496 
	`fÊush
(
f1
);

497 
	`examöeFûe
(
‰ame
.
body
->
sour˚
, &
f2
);

499 i‡(
f2
.
°ªam
 =
NULL
) {

500 
‰ame
.
body
->
©å
 = 
F_UNLOADED
;

501 i‡(
‰ame
.
body
->
Êags
 & 
FB_NO_BUFFER
)

503 
	`Ârötf
(
f1
, "Open %s with other method",

504 
	`html_quŸe
(
‰ame
.
body
->
uæ
));

505 i‡(
‰ame
.
body
->
uæ
)

507 
	`Ârötf
(
f1
, "Can't open %s",

508 
	`html_quŸe
(
‰ame
.
body
->
uæ
));

511 
	`Ârötf
(
f1
,

513 
‰ame
.
body
->
«me
 ? 
	`html_quŸe
(frame.body->name)

517 
	`∑r£URL2
(
‰ame
.
body
->
uæ
, &
ba£
, 
cuºítURL
);

518 
p_èrgë
 = 
f
->
«me
;

519 
s_èrgë
 = 
‰ame
.
body
->
«me
;

520 
t_èrgë
 = "_blank";

521 
d_èrgë
 = 
T¨gëSñf
 ? 
s_èrgë
 : 
t_èrgë
;

522 #ifde‡
USE_M17N


523 
ch¨£t
 = 
WC_CES_US_ASCII
;

524 i‡(
cuºít
->
documít_ch¨£t
 !
WC_CES_US_ASCII
)

525 
doc_ch¨£t
 = 
cuºít
->
documít_ch¨£t
;

527 
doc_ch¨£t
 = 
DocumítCh¨£t
;

529 
t_°ack
 = 0;

530 i‡(
‰ame
.
body
->
ty≥
 &&

531 !
	`°rˇ£cmp
(
‰ame
.
body
->
ty≥
, "text/plain")) {

532 
Så
 
tmp
;

533 
	`Ârötf
(
f1
, "<pre>\n");

534 (
tmp
 = 
	`SåmyUFgës
(&
f2
))->
Àngth
) {

535 
tmp
 = 
	`c⁄vîtLöe
(
NULL
,Åmp, 
HTML_MODE
, &
ch¨£t
,

536 
doc_ch¨£t
);

537 
	`Ârötf
(
f1
, "%s", 
	`html_quŸe
(
tmp
->
±r
));

539 
	`Ârötf
(
f1
, "</pre>\n");

540 
	`UF˛o£
(&
f2
);

544 
is_èg
 = 
FALSE
;

545 *
q
;

546 
∑r£d_èg
 *
èg
;

549 i‡(*
p
 == '\0') {

550 
Så
 
tmp
 = 
	`SåmyUFgës
(&
f2
);

551 i‡(
tmp
->
Àngth
 == 0)

553 
tmp
 = 
	`c⁄vîtLöe
(
NULL
,Åmp, 
HTML_MODE
, &
ch¨£t
,

554 
doc_ch¨£t
);

555 
p
 = 
tmp
->
±r
;

557 
	`ªad_tokí
(
tok
, &
p
, &
°©us
, 1, sètu†!
R_ST_NORMAL
);

558 } 
°©us
 !
R_ST_NORMAL
);

560 i‡(
tok
->
Àngth
 == 0)

563 i‡(
tok
->
±r
[0] == '<') {

564 i‡(
tok
->
±r
[1] &&

565 
	`REALLY_THE_BEGINNING_OF_A_TAG
(
tok
->
±r
))

566 
is_èg
 = 
TRUE
;

567 i‡(!(
¥e_mode
 & (
RB_PLAIN
 | 
RB_INTXTA
 |

568 
RB_SCRIPT
 | 
RB_STYLE
))) {

569 
p
 = 
	`Så√w_m_ch¨p
(
tok
->
±r
 + 1,Ö, 
NULL
)->ptr;

570 
tok
 = 
	`Så√w_ch¨p
("&lt;");

573 i‡(
is_èg
) {

574 i‡(
¥e_mode
 & (
RB_PLAIN
 | 
RB_INTXTA
 | 
RB_SCRIPT
 |

575 
RB_STYLE
)) {

576 
q
 = 
tok
->
±r
;

577 i‡((
èg
 = 
	`∑r£_èg
(&
q
, 
FALSE
)) &&

578 
èg
->
ègid
 =
íd_èg
) {

579 i‡(
¥e_mode
 & 
RB_PLAIN
) {

580 
	`Âuts
("</PRE_PLAIN>", 
f1
);

581 
¥e_mode
 = 0;

582 
íd_èg
 = 0;

583 
tokí_íd
;

585 
¥e_mode
 = 0;

586 
íd_èg
 = 0;

587 
¥oc_n‹mÆ
;

589 i‡(
	`°∫cmp
(
tok
->
±r
, "<!--", 4) &&

590 (
q
 = 
	`°rchr
(
tok
->
±r
 + 1, '<'))) {

591 
tok
 = 
	`Så√w_ch¨p_n
—ok->
±r
, 
q
 -Åok->ptr);

592 
p
 = 
	`Så√w_m_ch¨p
(
q
,Ö, 
NULL
)->
±r
;

593 
°©us
 = 
R_ST_NORMAL
;

595 
is_èg
 = 
FALSE
;

597 i‡(
¥e_mode
 & 
RB_INSELECT
) {

598 
q
 = 
tok
->
±r
;

599 i‡((
èg
 = 
	`∑r£_èg
(&
q
, 
FALSE
))) {

600 i‡((
èg
->
ègid
 =
íd_èg
) ||

601 (
èg
->
ègid
 =
HTML_N_FORM
)) {

602 i‡(
èg
->
ègid
 =
HTML_N_FORM
)

603 
	`Âuts
("</SELECT>", 
f1
);

604 
¥e_mode
 = 0;

605 
íd_èg
 = 0;

606 
¥oc_n‹mÆ
;

608 i‡(
t_°ack
) {

609 
èg
->
ègid
) {

610 
HTML_TABLE
:

611 
HTML_N_TABLE
:

612 
CASE_TABLE_TAG
:

613 
	`Âuts
("</SELECT>", 
f1
);

614 
¥e_mode
 = 0;

615 
íd_èg
 = 0;

616 
¥oc_n‹mÆ
;

623 
¥oc_n‹mÆ
:

624 i‡(
is_èg
) {

625 *
q
 = 
tok
->
±r
;

626 
j
, 
a_èrgë
 = 0;

627 
P¨£dURL
 
uæ
;

629 i‡(!(
èg
 = 
	`∑r£_èg
(&
q
, 
FALSE
)))

630 
tokí_íd
;

632 
èg
->
ègid
) {

633 
HTML_TITLE
:

634 
	`Âuts
("<!--ÅôÀ:", 
f1
);

635 
tokí_íd
;

636 
HTML_N_TITLE
:

637 
	`Âuts
("-->", 
f1
);

638 
tokí_íd
;

639 
HTML_BASE
:

641 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
q
)) {

642 
q
 = 
	`uæ_quŸe_c⁄v
(
	`ªmove_•a˚
(q), 
ch¨£t
);

643 
	`∑r£URL
(
q
, &
ba£
, 
NULL
);

645 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TARGET
, &
q
)) {

646 i‡(!
	`°rˇ£cmp
(
q
, "_self"))

647 
d_èrgë
 = 
s_èrgë
;

648 i‡(!
	`°rˇ£cmp
(
q
, "_parent"))

649 
d_èrgë
 = 
p_èrgë
;

651 
d_èrgë
 = 
	`uæ_quŸe_c⁄v
(
q
, 
ch¨£t
);

653 
	`Såshrökfú°
(
tok
, 1);

654 
	`Såshrök
(
tok
, 1);

655 
	`Ârötf
(
f1
, "<!-- %†-->", 
	`html_quŸe
(
tok
->
±r
));

656 
tokí_íd
;

657 
HTML_META
:

658 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HTTP_EQUIV
, &
q
)

659 && !
	`°rˇ£cmp
(
q
, "refresh")) {

660 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CONTENT
, &
q
)

662 
Så
 
s_tmp
 = 
NULL
;

663 
ª‰esh_öãrvÆ
 =

664 
	`gëMëaRe‰eshP¨am
(
q
, &
s_tmp
);

665 i‡(
s_tmp
) {

666 
q
 = 
	`html_quŸe
(
s_tmp
->
±r
);

667 
	`Ârötf
(
f1
,

669 
ª‰esh_öãrvÆ
, 
q
, q);

673 #ifde‡
USE_M17N


674 i‡(
U£C⁄ã¡Ch¨£t
 &&

675 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HTTP_EQUIV
, &
q
)

676 && !
	`°rˇ£cmp
(
q
, "Content-Type")

677 && 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_CONTENT
, &
q
)

678 && (
q
 = 
	`°rˇ£°r
(q, "ch¨£t")Ë!
NULL
) {

679 
q
 += 7;

680 
	`SKIP_BLANKS
(
q
);

681 i‡(*
q
 == '=') {

682 
wc_˚s
 
c
;

683 
q
++;

684 
	`SKIP_BLANKS
(
q
);

685 i‡((
c
 = 
	`wc_guess_ch¨£t
(
q
, 0)) != 0) {

686 
doc_ch¨£t
 = 
c
;

687 
ch¨£t
 = 
WC_CES_US_ASCII
;

693 
HTML_HEAD
:

694 
HTML_N_HEAD
:

695 
HTML_BODY
:

696 
HTML_N_BODY
:

697 
HTML_DOCTYPE
:

699 
	`Såshrökfú°
(
tok
, 1);

700 
	`Såshrök
(
tok
, 1);

701 
	`Ârötf
(
f1
, "<!-- %†-->", 
	`html_quŸe
(
tok
->
±r
));

702 
tokí_íd
;

703 
HTML_TABLE
:

704 
t_°ack
++;

706 
HTML_N_TABLE
:

707 
t_°ack
--;

708 i‡(
t_°ack
 < 0) {

709 
t_°ack
 = 0;

710 
	`Såshrökfú°
(
tok
, 1);

711 
	`Såshrök
(
tok
, 1);

712 
	`Ârötf
(
f1
,

714 
	`html_quŸe
(
tok
->
±r
));

715 
tokí_íd
;

718 
CASE_TABLE_TAG
:

720 i‡(!
t_°ack
) {

721 
	`Såshrökfú°
(
tok
, 1);

722 
	`Såshrök
(
tok
, 1);

723 
	`Ârötf
(
f1
, "<!-- %s -->",

724 
	`html_quŸe
(
tok
->
±r
));

725 
tokí_íd
;

729 
HTML_SELECT
:

730 
¥e_mode
 = 
RB_INSELECT
;

731 
íd_èg
 = 
HTML_N_SELECT
;

733 
HTML_TEXTAREA
:

734 
¥e_mode
 = 
RB_INTXTA
;

735 
íd_èg
 = 
HTML_N_TEXTAREA
;

737 
HTML_SCRIPT
:

738 
¥e_mode
 = 
RB_SCRIPT
;

739 
íd_èg
 = 
HTML_N_SCRIPT
;

741 
HTML_STYLE
:

742 
¥e_mode
 = 
RB_STYLE
;

743 
íd_èg
 = 
HTML_N_STYLE
;

745 
HTML_LISTING
:

746 
¥e_mode
 = 
RB_PLAIN
;

747 
íd_èg
 = 
HTML_N_LISTING
;

748 
	`Âuts
("<PRE_PLAIN>", 
f1
);

749 
tokí_íd
;

750 
HTML_XMP
:

751 
¥e_mode
 = 
RB_PLAIN
;

752 
íd_èg
 = 
HTML_N_XMP
;

753 
	`Âuts
("<PRE_PLAIN>", 
f1
);

754 
tokí_íd
;

755 
HTML_PLAINTEXT
:

756 
¥e_mode
 = 
RB_PLAIN
;

757 
íd_èg
 = 
MAX_HTMLTAG
;

758 
	`Âuts
("<PRE_PLAIN>", 
f1
);

759 
tokí_íd
;

763 
j
 = 0; j < 
TagMAP
[
èg
->
ègid
].
max_©åibuã
; j++) {

764 
èg
->
©åid
[
j
]) {

765 
ATTR_SRC
:

766 
ATTR_HREF
:

767 
ATTR_ACTION
:

768 i‡(!
èg
->
vÆue
[
j
])

770 
èg
->
vÆue
[
j
] =

771 
	`uæ_quŸe_c⁄v
(
	`ªmove_•a˚
(
èg
->
vÆue
[
j
]),

772 
ch¨£t
);

773 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

774 
	`∑r£URL2
(
èg
->
vÆue
[
j
], &
uæ
, &
ba£
);

775 i‡(
uæ
.
scheme
 =
SCM_UNKNOWN
 ||

776 #i‚de‡
USE_W3MMAILER


777 
uæ
.
scheme
 =
SCM_MAILTO
 ||

779 
uæ
.
scheme
 =
SCM_MISSING
)

781 
a_èrgë
 |= 1;

782 
èg
->
vÆue
[
j
] = 
	`∑r£dURL2Så
(&
uæ
)->
±r
;

783 
	`∑r£dèg_£t_vÆue
(
èg
,

784 
ATTR_REFERER
,

785 
	`∑r£dURL2Så
(&
ba£
)->
±r
);

786 #ifde‡
USE_M17N


787 i‡(
èg
->
©åid
[
j
] =
ATTR_ACTION
 &&

788 
ch¨£t
 !
WC_CES_US_ASCII
)

789 
	`∑r£dèg_£t_vÆue
(
èg
,

790 
ATTR_CHARSET
,

791 
wc_˚s_to_ch¨£t


792 (
ch¨£t
));

795 
ATTR_TARGET
:

796 i‡(!
èg
->
vÆue
[
j
])

798 
a_èrgë
 |= 2;

799 i‡(!
	`°rˇ£cmp
(
èg
->
vÆue
[
j
], "_self")) {

800 
	`∑r£dèg_£t_vÆue
(
èg
,

801 
ATTR_TARGET
, 
s_èrgë
);

803 i‡(!
	`°rˇ£cmp
(
èg
->
vÆue
[
j
], "_parent")) {

804 
	`∑r£dèg_£t_vÆue
(
èg
,

805 
ATTR_TARGET
, 
p_èrgë
);

808 
ATTR_NAME
:

809 
ATTR_ID
:

810 i‡(!
èg
->
vÆue
[
j
])

812 
	`∑r£dèg_£t_vÆue
(
èg
,

813 
ATTR_FRAMENAME
, 
s_èrgë
);

817 i‡(
a_èrgë
 == 1) {

820 
	`∑r£dèg_£t_vÆue
(
èg
, 
ATTR_TARGET
, 
d_èrgë
);

822 i‡(
	`∑r£dèg_√ed_ªc⁄°ru˘
(
èg
))

823 
tok
 = 
	`∑r£dèg2°r
(
èg
);

824 
	`SåÂuts
(
tok
, 
f1
);

827 i‡(
¥e_mode
 & 
RB_PLAIN
)

828 
	`Ârötf
(
f1
, "%s", 
	`html_quŸe
(
tok
->
±r
));

829 i‡(
¥e_mode
 & 
RB_INTXTA
)

830 
	`Ârötf
(
f1
, "%s",

831 
	`html_quŸe
(
	`html_unquŸe
(
tok
->
±r
)));

833 
	`SåÂuts
(
tok
, 
f1
);

835 
tokí_íd
:

836 
	`Så˛ór
(
tok
);

837 } *
p
 !'\0' || !
	`i£os
(
f2
.
°ªam
));

838 i‡(
¥e_mode
 & 
RB_PLAIN
)

839 
	`Âuts
("</PRE_PLAIN>\n", 
f1
);

840 i‡(
¥e_mode
 & 
RB_INTXTA
)

841 
	`Âuts
("</TEXTAREA></FORM>\n", 
f1
);

842 i‡(
¥e_mode
 & 
RB_INSELECT
)

843 
	`Âuts
("</SELECT></FORM>\n", 
f1
);

844 i‡(
¥e_mode
 & (
RB_SCRIPT
 | 
RB_STYLE
)) {

845 i‡(
°©us
 !
R_ST_NORMAL
)

846 
	`Âuts
(
	`c‹ª˘_úπag
(
°©us
)->
±r
, 
f1
);

847 i‡(
¥e_mode
 & 
RB_SCRIPT
)

848 
	`Âuts
("</SCRIPT>\n", 
f1
);

849 i‡(
¥e_mode
 & 
RB_STYLE
)

850 
	`Âuts
("</STYLE>\n", 
f1
);

852 
t_°ack
--)

853 
	`Âuts
("</TABLE>\n", 
f1
);

854 
	`UF˛o£
(&
f2
);

856 
F_FRAMESET
:

857 
ªndî_‰ame£t
:

858 i‡(!
‰ame
.
£t
->
«me
 && 
f
->name) {

859 
‰ame
.
£t
->
«me
 = 
	`S¥ötf
("%s_%d", 
f
->«me, 
i
)->
±r
;

861 
	`¸óãFømeFûe
(
‰ame
.
£t
, 
f1
, 
cuºít
, 
Àvñ
 + 1,

862 
f‹˚_ªlﬂd
);

865 
	`Âuts
("</td>\n", 
f1
);

867 
	`Âuts
("</å>\n", 
f1
);

870 
	`Âuts
("</èbÀ>\n", 
f1
);

871 i‡(
Àvñ
 == 0) {

872 
	`Âuts
("</body></html>\n", 
f1
);

873 
TRAP_OFF
;

876 
	}
}

878 
Buf„r
 *

879 
	$ªndîFøme
(
Buf„r
 *
Cbuf
, 
f‹˚_ªlﬂd
)

881 
Så
 
tmp
;

882 
FILE
 *
f
;

883 
Buf„r
 *
buf
;

884 
Êag
;

885 
‰ame£t
 *
f£t
;

886 #ifde‡
USE_M17N


887 
wc_˚s
 
doc_ch¨£t
 = 
DocumítCh¨£t
;

890 
tmp
 = 
	`tmp‚ame
(
TMPF_FRAME
, ".html");

891 
f
 = 
	`f›í
(
tmp
->
±r
, "w");

892 i‡(
f
 =
NULL
)

893  
NULL
;

896 
f£t
 = 
Cbuf
->
‰ame£t
;

897 i‡(
f£t
 =
NULL
 || 
	`¸óãFømeFûe
(f£t, 
f
, 
Cbuf
, 0, 
f‹˚_ªlﬂd
) < 0)

898  
NULL
;

899 
	`f˛o£
(
f
);

900 
Êag
 = 
RG_FRAME
;

901 i‡((
Cbuf
->
cuºítURL
).
is_noˇche
)

902 
Êag
 |
RG_NOCACHE
;

903 
ªndîFømeSë
 = 
Cbuf
->
‰ame£t
;

904 
	`ÊushFømeSë
(
ªndîFømeSë
);

905 #ifde‡
USE_M17N


906 
DocumítCh¨£t
 = 
I¬îCh¨£t
;

908 
buf
 = 
	`lﬂdGíîÆFûe
(
tmp
->
±r
, 
NULL
, NULL, 
Êag
, NULL);

909 #ifde‡
USE_M17N


910 
DocumítCh¨£t
 = 
doc_ch¨£t
;

912 
ªndîFømeSë
 = 
NULL
;

913 i‡(
buf
 =
NULL
 || bu‡=
NO_BUFFER
)

914  
NULL
;

915 
buf
->
sour˚fûe
 = 
tmp
->
±r
;

916 #ifde‡
USE_M17N


917 
buf
->
documít_ch¨£t
 = 
Cbuf
->document_charset;

919 
	`c›yP¨£dURL
(&
buf
->
cuºítURL
, &
Cbuf
->currentURL);

920 
	`¥eF‹mUpd©eBuf„r
(
buf
);

921  
buf
;

922 
	}
}

924 
‰ame£t_ñemít
 *

925 
	$£¨ch_‰ame
(
‰ame£t
 *
f£t
, *
«me
)

927 
i
;

928 
‰ame£t_ñemít
 *
e
 = 
NULL
;

930 
i
 = 0; i < 
f£t
->
cﬁ
 * f£t->
row
; i++) {

931 
e
 = &(
f£t
->
‰ame
[
i
]);

932 i‡(
e
->
ñemít
 !
NULL
) {

933 i‡(
e
->
ñemít
->
«me
 && !
	`°rcmp
(e->element->name,Çame)) {

934  
e
;

936 i‡(
e
->
ñemít
->
©å
 =
F_FRAMESET
 &&

937 (
e
 = 
	`£¨ch_‰ame
”->
£t
, 
«me
))) {

938  
e
;

942  
NULL
;

943 
	}
}

	@frame.h

6 
	s‰ame_ñemít
 {

7 
	m©å
;

8 
	#F_UNLOADED
 0x00

	)

9 
	#F_BODY
 0x01

	)

10 
	#F_FRAMESET
 0x02

	)

11 
	mdummy
;

12 *
	m«me
;

15 
	s‰ame_body
 {

16 
	m©å
;

17 
	mÊags
;

18 
	#FB_NO_BUFFER
 0x01

	)

19 *
	m«me
;

20 *
	muæ
;

21 
P¨£dURL
 *
	mba£URL
;

22 *
	msour˚
;

23 *
	mty≥
;

24 *
	mª„ªr
;

25 
_™ch‹Li°
 *
	m«meLi°
;

26 
F‹mLi°
 *
	mªque°
;

27 #ifde‡
USE_SSL


28 *
	ms¶_˚πifiˇã
;

32 
	u‰ame£t_ñemít
 {

33 
‰ame_ñemít
 *
	mñemít
;

34 
‰ame_body
 *
	mbody
;

35 
‰ame£t
 *
	m£t
;

38 
	s‰ame£t
 {

39 
	m©å
;

40 
	mdummy
;

41 *
	m«me
;

42 
P¨£dURL
 *
	mcuºítURL
;

43 **
	mwidth
;

44 **
	mheight
;

45 
	mcﬁ
;

46 
	mrow
;

47 
	mi
;

48 
‰ame£t_ñemít
 *
	m‰ame
;

51 
	s‰ame£t_queue
 {

52 
‰ame£t_queue
 *
	m√xt
;

53 
‰ame£t_queue
 *
	mback
;

54 
‰ame£t
 *
	m‰ame£t
;

55 
	mlöíumbî
;

56 
	mt›_löíumbî
;

57 
	mpos
;

58 
	mcuºítCﬁumn
;

59 
_™ch‹Li°
 *
	mf‹môem
;

62 
‰ame£t
 *
ªndîFømeSë
;

	@ftp.c

2 
	~<°dio.h
>

3 #i‚de‡
__MINGW32_VERSION


4 
	~<pwd.h
>

6 
	~<Så.h
>

7 
	~<sig«l.h
>

8 
	~<£tjmp.h
>

9 
	~<time.h
>

11 
	~"fm.h
"

12 
	~"html.h
"

13 
	~"my˘y≥.h
"

15 #ifde‡
DEBUG


16 
	~<mÆloc.h
>

19 #i‚de‡
__MINGW32_VERSION


20 
	~<sys/sockë.h
>

21 
	~<√töë/ö.h
>

22 
	~<√tdb.h
>

23 
	~<¨∑/öë.h
>

25 
	~<wösock.h
>

28 
	s_FTP
 {

29 *
	mho°
;

30 
	mp‹t
;

31 *
	mu£r
;

32 *
	m∑ss
;

33 
I≈utSåóm
 
	mrf
;

34 
FILE
 *
	mwf
;

35 
FILE
 *
	md©a
;

36 } *
	tFTP
;

38 
_FTP
 
	gcuºít_·p
 = {

39 
NULL
, 0, NULL, NULL, NULL, NULL, NULL

42 
JMP_BUF
 
	gAb‹tLﬂdög
;

44 
MySig«lH™dÀr


45 
	$KeyAb‹t
(
SIGNAL_ARG
)

47 
	`LONGJMP
(
Ab‹tLﬂdög
, 1);

48 
SIGNAL_RETURN
;

49 
	}
}

51 
Så


52 
	$·p_comm™d
(
FTP
 
·p
, *
cmd
, *
¨g
, *
°©us
)

54 
Så
 
tmp
;

56 i‡(!
·p
->
ho°
)

57  
NULL
;

58 i‡(
cmd
) {

59 i‡(
¨g
)

60 
tmp
 = 
	`S¥ötf
("%†%s\r\n", 
cmd
, 
¨g
);

62 
tmp
 = 
	`S¥ötf
("%s\r\n", 
cmd
);

63 
	`fwrôe
(
tmp
->
±r
, (),Åmp->
Àngth
, 
·p
->
wf
);

64 
	`fÊush
(
·p
->
wf
);

66 i‡(!
°©us
)

67  
NULL
;

68 *
°©us
 = -1;

69 
tmp
 = 
	`SåISgës
(
·p
->
rf
);

70 i‡(
	`IS_DIGIT
(
tmp
->
±r
[0]) && IS_DIGIT(tmp->ptr[1]) &&

71 
	`IS_DIGIT
(
tmp
->
±r
[2]) &&Åmp->ptr[3] == ' ')

72 
	`ssˇnf
(
tmp
->
±r
, "%d", 
°©us
);

74 i‡(
tmp
->
±r
[3] != '-')

75  
tmp
;

86 
tmp
 = 
	`SåISgës
(
·p
->
rf
);

87 i‡(
	`IS_DIGIT
(
tmp
->
±r
[0]) && IS_DIGIT(tmp->ptr[1]) &&

88 
	`IS_DIGIT
(
tmp
->
±r
[2]) &&Åmp->ptr[3] == ' ') {

89 
	`ssˇnf
(
tmp
->
±r
, "%d", 
°©us
);

93  
tmp
;

94 
	}
}

97 
	$·p_˛o£
(
FTP
 
·p
)

99 i‡(!
·p
->
ho°
)

101 i‡(
·p
->
rf
) {

102 
	`ISty≥
(
·p
->
rf
Ë&~
IST_UNCLOSE
;

103 
	`IS˛o£
(
·p
->
rf
);

104 
·p
->
rf
 = 
NULL
;

106 i‡(
·p
->
wf
) {

107 
	`f˛o£
(
·p
->
wf
);

108 
·p
->
wf
 = 
NULL
;

110 i‡(
·p
->
d©a
) {

111 
	`f˛o£
(
·p
->
d©a
);

112 
·p
->
d©a
 = 
NULL
;

114 
·p
->
ho°
 = 
NULL
;

116 
	}
}

119 
	$·p_logö
(
FTP
 
·p
)

121 
sock
, 
°©us
;

123 
sock
 = 
	`›íSockë
(
·p
->
ho°
, "ftp", 21);

124 i‡(
sock
 < 0)

125 
›í_îr
;

126 i‡(
·µass_ho°«megí
 && !
	`°rcmp
(
·p
->
u£r
, "anonymous")) {

127 
size_t
 
n
 = 
	`°æí
(
·p
->
∑ss
);

129 i‡(
n
 > 0 && 
·p
->
∑ss
[n - 1] == '@') {

130 
sockaddr_ö
 
sock«me
;

131 
sock«mñí
 = (
sock«me
);

133 i‡(!
	`gësock«me
(
sock
, (
sockaddr
 *)&
sock«me
, &
sock«mñí
)) {

134 
ho°ít
 *
sockít
;

135 
Så
 
tmp
 = 
	`Så√w_ch¨p
(
·p
->
∑ss
);

137 i‡((
sockít
 = 
	`gëho°byaddr
((*)&
sock«me
.
sö_addr
,

138 (
sock«me
.
sö_addr
),

139 
sock«me
.
sö_Ámûy
)))

140 
	`Såˇt_ch¨p
(
tmp
, 
sockít
->
h_«me
);

142 
	`Såˇt_m_ch¨p
(
tmp
, "[", 
	`öë_¡ﬂ
(
sock«me
.
sö_addr
),

143 "]", 
NULL
);

145 
·p
->
∑ss
 = 
tmp
->
±r
;

149 
·p
->
rf
 = 
	`√wI≈utSåóm
(
sock
);

150 
·p
->
wf
 = 
	`fd›í
(
	`dup
(
sock
), "wb");

151 i‡(!
·p
->
rf
 || !·p->
wf
)

152 
›í_îr
;

153 
	`ISty≥
(
·p
->
rf
Ë|
IST_UNCLOSE
;

154 
	`·p_comm™d
(
·p
, 
NULL
, NULL, &
°©us
);

155 i‡(
°©us
 != 220)

156 
›í_îr
;

157 i‡(
fmInôülized
) {

158 
	`mesßge
(
	`S¥ötf
("Sending FTP username (%s)ÅoÑemote server.",

159 
·p
->
u£r
)->
±r
, 0, 0);

160 
	`ª‰esh
();

162 
	`·p_comm™d
(
·p
, "USER", fç->
u£r
, &
°©us
);

166 i‡(
°©us
 == 230)

167 
suc˚ed
;

168 i‡(
°©us
 != 331)

169 
›í_îr
;

170 i‡(
fmInôülized
) {

171 
	`mesßge
("Sending FTPÖasswordÅoÑemote server.", 0, 0);

172 
	`ª‰esh
();

174 
	`·p_comm™d
(
·p
, "PASS", fç->
∑ss
, &
°©us
);

175 i‡(
°©us
 != 230)

176 
›í_îr
;

177 
suc˚ed
:

178  
TRUE
;

179 
›í_îr
:

180 
	`·p_˛o£
(
·p
);

181  
FALSE
;

182 
	}
}

185 
	$·p_∑sv
(
FTP
 
·p
)

187 
°©us
;

188 
n1
, 
n2
, 
n3
, 
n4
, 
p1
, 
p2
;

189 
d©a
;

190 *
p
;

191 
Så
 
tmp
;

192 
Ámûy
;

193 #ifde‡
INET6


194 
sockaddr_°‹age
 
sockaddr
;

195 
sockaddæí
, 
p‹t
;

196 
d1
, 
d2
, 
d3
, 
d4
;

197 
abuf
[
INET6_ADDRSTRLEN
];

200 #ifde‡
INET6


201 
sockaddæí
 = (
sockaddr
);

202 i‡(
	`gë≥î«me
(
	`fûío
(
·p
->
wf
),

203 (
sockaddr
 *)&sockaddr, &
sockaddæí
) < 0)

205 #ifde‡
HAVE_OLD_SS_FAMILY


206 
Ámûy
 = 
sockaddr
.
__ss_Ámûy
;

208 
Ámûy
 = 
sockaddr
.
ss_Ámûy
;

211 
Ámûy
 = 
AF_INET
;

213 
Ámûy
) {

214 #ifde‡
INET6


215 
AF_INET6
:

216 
tmp
 = 
	`·p_comm™d
(
·p
, "EPSV", 
NULL
, &
°©us
);

217 i‡(
°©us
 != 229)

219 
p
 = 
tmp
->
±r
 + 4; *p && *p != '(';Ö++) ;

220 i‡(*
p
 == '\0')

222 i‡(
	`ssˇnf
(++
p
, "%c%c%c%d%c", &
d1
, &
d2
, &
d3
, &
p‹t
, &
d4
) != 5

223 || 
d1
 !
d2
 || d1 !
d3
 || d1 !
d4
)

225 i‡(
	`gë«meöfo
((
sockaddr
 *)&sockaddr, 
sockaddæí
,

226 
abuf
, ◊buf), 
NULL
, 0, 
NI_NUMERICHOST
) != 0)

228 
d©a
 = 
	`›íSockë
(
abuf
, "", 
p‹t
);

231 
AF_INET
:

232 
tmp
 = 
	`·p_comm™d
(
·p
, "PASV", 
NULL
, &
°©us
);

233 i‡(
°©us
 != 227)

235 
p
 = 
tmp
->
±r
 + 4; *∞&& !
	`IS_DIGIT
(*p);Ö++) ;

236 i‡(*
p
 == '\0')

238 
	`ssˇnf
(
p
, "%d,%d,%d,%d,%d,%d", &
n1
, &
n2
, &
n3
, &
n4
, &
p1
, &
p2
);

239 
tmp
 = 
	`S¥ötf
("%d.%d.%d.%d", 
n1
, 
n2
, 
n3
, 
n4
);

240 
d©a
 = 
	`›íSockë
(
tmp
->
±r
, "", 
p1
 * 256 + 
p2
);

245 i‡(
d©a
 < 0)

247 
·p
->
d©a
 = 
	`fd›í
(data, "rb");

249 
	}
}

251 
time_t


252 
	$·p_modtime
(
FTP
 
·p
, *
∑th
)

254 
°©us
;

255 
Så
 
tmp
;

256 *
p
;

257 
tm
Åm;

258 
time_t
 
t
, 
…
, 
gt
;

260 
tmp
 = 
	`·p_comm™d
(
·p
, "MDTM", 
∑th
, &
°©us
);

261 i‡(
°©us
 != 213)

263 
p
 = 
tmp
->
±r
 + 4; *p && *p == ' ';Ö++) ;

264 
	`mem£t
(&
tm
, 0, (tm));

265 i‡(
	`ssˇnf
(
p
, "%04d%02d%02d%02d%02d%02d",

266 &
tm
.
tm_yór
, &tm.
tm_m⁄
, &tm.
tm_mday
,

267 &
tm
.
tm_hour
, &tm.
tm_mö
, &tm.
tm_£c
) < 6)

269 
tm
.
tm_yór
 -= 1900;

270 
tm
.
tm_m⁄
--;

271 
t
 = 
	`mktime
(&
tm
);

272 
…
 = 
	`mktime
(
	`loˇ…ime
(&
t
));

273 
gt
 = 
	`mktime
(
	`gmtime
(&
t
));

274  
t
 + (
…
 - 
gt
);

275 
	}
}

278 
	$·p_quô
(
FTP
 
·p
)

287 
	`·p_comm™d
(
·p
, "QUIT", 
NULL
, NULL);

288 
	`·p_˛o£
(
·p
);

290 
	}
}

292 
ex_·pdú_«me_size_d©e
(*, **, **, **,

295 
	#SERVER_NONE
 0

	)

296 
	#UNIXLIKE_SERVER
 1

	)

298 
	#FTPDIR_NONE
 0

	)

299 
	#FTPDIR_DIR
 1

	)

300 
	#FTPDIR_LINK
 2

	)

301 
	#FTPDIR_FILE
 3

	)

304 
	$˛o£FTPd©a
(
FILE
 * 
f
)

306 
°©us
;

307 i‡(
f
) {

308 
	`f˛o£
(
f
);

309 i‡(
f
 =
cuºít_·p
.
d©a
)

310 
cuºít_·p
.
d©a
 = 
NULL
;

312 
	`·p_comm™d
(&
cuºít_·p
, 
NULL
, NULL, &
°©us
);

314 
	}
}

317 
	$˛o£FTP
()

319 
	`·p_˛o£
(&
cuºít_·p
);

320 
	}
}

322 
I≈utSåóm


323 
	$›íFTPSåóm
(
P¨£dURL
 *
pu
, 
URLFûe
 *
uf
)

325 
Så
 
tmp
;

326 
°©us
;

327 *
u£r
 = 
NULL
;

328 *
∑ss
 = 
NULL
;

329 
Så
 
u«me
 = 
NULL
;

330 
Så
 
pwd
 = 
NULL
;

331 
add_auth_cookõ_Êag
 = 
FALSE
;

332 *
ªÆ∑th«me
 = 
NULL
;

334 i‡(!
pu
->
ho°
)

335  
NULL
;

337 i‡(
pu
->
u£r
 =
NULL
 &&Öu->
∑ss
 == NULL) {

338 i‡(
	`föd_auth_u£r_∑sswd
(
pu
, 
NULL
, &
u«me
, &
pwd
, 0)) {

339 i‡(
u«me
)

340 
u£r
 = 
u«me
->
±r
;

341 i‡(
pwd
)

342 
∑ss
 = 
pwd
->
±r
;

345 i‡(
u£r
)

347 i‡(
pu
->
u£r
)

348 
u£r
 = 
pu
->user;

350 
u£r
 = "anonymous";

352 i‡(
cuºít_·p
.
ho°
) {

353 i‡(!
	`°rcmp
(
cuºít_·p
.
ho°
, 
pu
->host) &&

354 
cuºít_·p
.
p‹t
 =
pu
->p‹à&& !
	`°rcmp
(cuºít_·p.
u£r
, user)) {

355 
	`·p_comm™d
(&
cuºít_·p
, "NOOP", 
NULL
, &
°©us
);

356 i‡(
°©us
 != 200)

357 
	`·p_˛o£
(&
cuºít_·p
);

359 
·p_ªad
;

362 
	`·p_quô
(&
cuºít_·p
);

365 i‡(
∑ss
)

367 i‡(
pu
->
∑ss
)

368 
∑ss
 = 
pu
->pass;

369 i‡(
pu
->
u£r
) {

370 
pwd
 = 
NULL
;

371 
	`föd_auth_u£r_∑sswd
(
pu
, 
NULL
, &
u«me
, &
pwd
, 0);

372 i‡(
pwd
 =
NULL
) {

373 i‡(
fmInôülized
) {

374 
	`ãrm_øw
();

375 
pwd
 = 
	`Så√w_ch¨p
(
	`öputLöe
("Passw‹d: ", 
NULL
, 
IN_PASSWORD
));

376 
pwd
 = 
	`Så_c⁄v_to_sy°em
(pwd);

377 
	`ãrm_cbªak
();

380 #i‚de‡
__MINGW32_VERSION


381 
pwd
 = 
	`Så√w_ch¨p
((*)
	`gë∑ss
("Password: "));

383 
	`ãrm_øw
();

384 
pwd
 = 
	`Så√w_ch¨p
(
	`öputLöe
("Passw‹d: ", 
NULL
, 
IN_PASSWORD
));

385 
pwd
 = 
	`Så_c⁄v_to_sy°em
(pwd);

386 
	`ãrm_cbªak
();

389 
add_auth_cookõ_Êag
 = 
TRUE
;

391 
∑ss
 = 
pwd
->
±r
;

393 i‡(
·µasswd
 !
NULL
 && *ftppasswd != '\0')

394 
∑ss
 = 
·µasswd
;

396 #i‚de‡
__MINGW32_VERSION


397 
∑sswd
 *
mypw
 = 
	`gëpwuid
(
	`gëuid
());

398 
tmp
 = 
	`Så√w_ch¨p
(
mypw
 ? mypw->
pw_«me
 : "anonymous");

400 
tmp
 = 
	`Så√w_ch¨p
("anonymous");

402 
	`Såˇt_ch¨
(
tmp
, '@');

403 
∑ss
 = 
tmp
->
±r
;

406 i‡(!
cuºít_·p
.
ho°
) {

407 
cuºít_·p
.
ho°
 = 
	`ÆlocSå
(
pu
->host, -1);

408 
cuºít_·p
.
p‹t
 = 
pu
->port;

409 
cuºít_·p
.
u£r
 = 
	`ÆlocSå
(user, -1);

410 
cuºít_·p
.
∑ss
 = 
	`ÆlocSå
(pass, -1);

411 i‡(!
	`·p_logö
(&
cuºít_·p
))

412  
NULL
;

414 i‡(
add_auth_cookõ_Êag
)

415 
	`add_auth_u£r_∑sswd
(
pu
, 
NULL
, 
u«me
, 
pwd
, 0);

417 
·p_ªad
:

418 
	`·p_comm™d
(&
cuºít_·p
, "TYPE", "I", &
°©us
);

419 i‡(
	`·p_∑sv
(&
cuºít_·p
) < 0) {

420 
	`·p_quô
(&
cuºít_·p
);

421  
NULL
;

423 i‡(
pu
->
fûe
 =
NULL
 || *pu->file == '\0' ||

424 
pu
->
fûe
[
	`°æí
(pu->file) - 1] == '/')

425 
·p_dú
;

427 
ªÆ∑th«me
 = 
	`fûe_unquŸe
(
pu
->
fûe
);

428 i‡(*
ªÆ∑th«me
 == '/' && *(realpathname + 1) == '~')

429 
ªÆ∑th«me
++;

431 
uf
->
modtime
 = 
	`·p_modtime
(&
cuºít_·p
, 
ªÆ∑th«me
);

432 
	`·p_comm™d
(&
cuºít_·p
, "RETR", 
ªÆ∑th«me
, &
°©us
);

433 i‡(
°©us
 == 125 || status == 150)

434  
	`√wFûeSåóm
(
cuºít_·p
.
d©a
, ((*)())
˛o£FTPd©a
);

436 
·p_dú
:

437 
pu
->
scheme
 = 
SCM_FTPDIR
;

438  
NULL
;

439 
	}
}

441 #ifde‡
USE_M17N


442 
Så


443 
	$lﬂdFTPDú
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
)

445 
Så


446 
	$lﬂdFTPDú0
(
P¨£dURL
 *
pu
)

449 
Så
 
FTPDIRtmp
;

450 
Så
 
tmp
;

451 
°©us
;

452 vﬁ©ûê
sv_ty≥
;

453 *
ªÆ∑th«me
, *
‚
, *
q
;

454 **
Êi°
;

455 
i
, 
nfûe
, 
nfûe_max
;

456 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

457 #ifde‡
USE_M17N


458 
wc_˚s
 
doc_ch¨£t
 = 
DocumítCh¨£t
;

460 *
ch¨£t
 = 
WC_CES_US_ASCII
;

462 i‡(
cuºít_·p
.
d©a
 =
NULL
)

463  
NULL
;

464 
tmp
 = 
	`·p_comm™d
(&
cuºít_·p
, "SYST", 
NULL
, &
°©us
);

465 i‡(
	`°r°r
(
tmp
->
±r
, "UNIX"Ë!
NULL
 || !
	`°∫cmp
(tmp->ptr + 4, "Windows_NT", 10))

466 
sv_ty≥
 = 
UNIXLIKE_SERVER
;

468 
sv_ty≥
 = 
SERVER_NONE
;

469 i‡(
pu
->
fûe
 =
NULL
 || *pu->file == '\0') {

470 i‡(
sv_ty≥
 =
UNIXLIKE_SERVER
)

471 
	`·p_comm™d
(&
cuºít_·p
, "LIST", 
NULL
, &
°©us
);

473 
	`·p_comm™d
(&
cuºít_·p
, "NLST", 
NULL
, &
°©us
);

474 
pu
->
fûe
 = "/";

477 
ªÆ∑th«me
 = 
	`fûe_unquŸe
(
pu
->
fûe
);

478 i‡(*
ªÆ∑th«me
 == '/' && *(realpathname + 1) == '~')

479 
ªÆ∑th«me
++;

480 i‡(
sv_ty≥
 =
UNIXLIKE_SERVER
) {

481 
	`·p_comm™d
(&
cuºít_·p
, "CWD", 
ªÆ∑th«me
, &
°©us
);

482 i‡(
°©us
 == 250)

483 
	`·p_comm™d
(&
cuºít_·p
, "LIST", 
NULL
, &
°©us
);

486 
	`·p_comm™d
(&
cuºít_·p
, "NLST", 
ªÆ∑th«me
, &
°©us
);

488 i‡(
°©us
 != 125 && status != 150) {

489 
	`f˛o£
(
cuºít_·p
.
d©a
);

490 
cuºít_·p
.
d©a
 = 
NULL
;

491  
NULL
;

493 
tmp
 = 
	`∑r£dURL2Så
(
pu
);

494 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

495 
	`Såˇt_ch¨
(
tmp
, '/');

496 
‚
 = 
	`html_quŸe
(
tmp
->
±r
);

497 
tmp
 =

498 
	`c⁄vîtLöe
(
NULL
, 
	`Så√w_ch¨p
(
	`fûe_unquŸe
(
tmp
->
±r
)), 
RAW_MODE
,

499 
ch¨£t
, 
doc_ch¨£t
);

500 
q
 = 
	`html_quŸe
(
tmp
->
±r
);

501 
FTPDIRtmp
 = 
	`Så√w_m_ch¨p
("<html>\n<hód>\n<ba£ hªf=\"", 
‚
,

502 "\">\n<tôÀ>", 
q
,

503 "</tôÀ>\n</hód>\n<body>\n<h1>Index o‡", 
q
,

504 "</h1>\n", 
NULL
);

506 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

507 i‡(
sv_ty≥
 =
UNIXLIKE_SERVER
)

508 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "</a></pre>\n");

510 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "</a></ul>\n");

511 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "<p>Transfer Interrupted!\n");

512 
·p_íd
;

514 
TRAP_ON
;

516 i‡(
sv_ty≥
 =
UNIXLIKE_SERVER
)

517 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "<pre>\n");

519 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "<ul>\n<li>");

520 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "<a href=\"..\">[Upper Directory]</a>\n");

522 
nfûe_max
 = 100;

523 
Êi°
 = 
	`New_N
(*, 
nfûe_max
);

524 
nfûe
 = 0;

525 i‡(
sv_ty≥
 =
UNIXLIKE_SERVER
) {

526 *
«me
, *
lök
, *
d©e
, *
size
, *
ty≥_°r
;

527 
·y≥
, 
max_Àn
, 
Àn
, 
j
;

529 
max_Àn
 = 20;

530 
tmp
 = 
	`Såfgës
(
cuºít_·p
.
d©a
),Åmp->
Àngth
 > 0) {

531 
	`Såch›
(
tmp
);

532 i‡((
·y≥
 =

533 
	`ex_·pdú_«me_size_d©e
(
tmp
->
±r
, &
«me
, &
lök
, &
d©e
,

534 &
size
)Ë=
FTPDIR_NONE
)

536 i‡(!
	`°rcmp
(".", 
«me
) || !strcmp("..",Çame))

538 
Àn
 = 
	`°æí
(
«me
);

539 i‡(!
Àn
)

541 i‡(
·y≥
 =
FTPDIR_DIR
) {

542 
Àn
++;

543 
ty≥_°r
 = "/";

545 i‡(
·y≥
 =
FTPDIR_LINK
) {

546 
Àn
++;

547 
ty≥_°r
 = "@";

550 
ty≥_°r
 = " ";

552 i‡(
max_Àn
 < 
Àn
)

553 
max_Àn
 = 
Àn
;

554 
Êi°
[
nfûe
++] = 
	`S¥ötf
("%s%s\n%† %5s%s", 
«me
, 
ty≥_°r
, 
d©e
,

555 
size
, 
lök
)->
±r
;

556 i‡(
nfûe
 =
nfûe_max
) {

557 
nfûe_max
 *= 2;

558 
Êi°
 = 
	`New_Reu£
(*, fli°, 
nfûe_max
);

561 
	`qs‹t
(
Êi°
, 
nfûe
, (*), 
°rCmp
);

562 
j
 = 0; j < 
nfûe
; j++) {

563 
‚
 = 
Êi°
[
j
];

564 
d©e
 = 
	`°rchr
(
‚
, '\n');

565 i‡(*(
d©e
 - 1) == '/') {

566 
·y≥
 = 
FTPDIR_DIR
;

567 *
d©e
 = '\0';

569 i‡(*(
d©e
 - 1) == '@') {

570 
·y≥
 = 
FTPDIR_LINK
;

571 *(
d©e
 - 1) = '\0';

574 
·y≥
 = 
FTPDIR_FILE
;

575 *(
d©e
 - 1) = '\0';

577 
d©e
++;

578 
tmp
 = 
	`c⁄vîtLöe
(
NULL
, 
	`Så√w_ch¨p
(
‚
), 
RAW_MODE
, 
ch¨£t
,

579 
doc_ch¨£t
);

580 i‡(
·y≥
 =
FTPDIR_LINK
)

581 
	`Såˇt_ch¨
(
tmp
, '@');

582 
	`Såˇt_m_ch¨p
(
FTPDIRtmp
, "<®hªf=\"", 
	`html_quŸe
(
	`fûe_quŸe
(
‚
)),

583 "\">", 
	`html_quŸe
(
tmp
->
±r
), "</a>", 
NULL
);

584 
i
 = 
	`gë_Så_°rwidth
(
tmp
); i <
max_Àn
; i++) {

585 i‡((
max_Àn
 % 2 + 
i
) % 2)

586 
	`Såˇt_ch¨
(
FTPDIRtmp
, '.');

588 
	`Såˇt_ch¨
(
FTPDIRtmp
, ' ');

590 
tmp
 = 
	`c⁄vîtLöe
(
NULL
, 
	`Så√w_ch¨p
(
d©e
), 
RAW_MODE
, 
ch¨£t
,

591 
doc_ch¨£t
);

592 
	`Såˇt_m_ch¨p
(
FTPDIRtmp
, 
	`html_quŸe
(
tmp
->
±r
), "\n", 
NULL
);

594 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "</pre>\n");

597 
tmp
 = 
	`Såfgës
(
cuºít_·p
.
d©a
),Åmp->
Àngth
 > 0) {

598 
	`Såch›
(
tmp
);

599 
Êi°
[
nfûe
++] = 
	`myba£«me
(
tmp
->
±r
);

600 i‡(
nfûe
 =
nfûe_max
) {

601 
nfûe_max
 *= 2;

602 
Êi°
 = 
	`New_Reu£
(*, fli°, 
nfûe_max
);

605 
	`qs‹t
(
Êi°
, 
nfûe
, (*), 
°rCmp
);

606 
i
 = 0; i < 
nfûe
; i++) {

607 
‚
 = 
Êi°
[
i
];

608 
tmp
 = 
	`c⁄vîtLöe
(
NULL
, 
	`Så√w_ch¨p
(
‚
), 
RAW_MODE
, 
ch¨£t
,

609 
doc_ch¨£t
);

610 
	`Såˇt_m_ch¨p
(
FTPDIRtmp
, "<li><a href=\"",

611 
	`html_quŸe
(
	`fûe_quŸe
(
‚
)), "\">",

612 
	`html_quŸe
(
tmp
->
±r
), "</a>\n", 
NULL
);

614 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "</ul>\n");

617 
·p_íd
:

618 
	`Såˇt_ch¨p
(
FTPDIRtmp
, "</body>\n</html>\n");

619 
TRAP_OFF
;

620 
	`˛o£FTPd©a
(
cuºít_·p
.
d©a
);

621  
FTPDIRtmp
;

622 
	}
}

625 
	$disc⁄√˘FTP
()

627 
	`·p_quô
(&
cuºít_·p
);

628 
	}
}

630 
	#EX_SKIP_SPACE
(
˝
) {\

631 
	`IS_SPACE
(*
˝
) && *cp != '\0') cp++;\

632 i‡(*
˝
 == '\0')\

633 
d⁄e
;\

634 }

	)

635 
	#EX_SKIP_NONE_SPACE
(
˝
) {\

636 !
	`IS_SPACE
(*
˝
) && *cp != '\0') cp++;\

637 i‡(*
˝
 == '\0')\

638 
d⁄e
;\

639 }

	)

640 
	#EX_COUNT_DIGIT
(
˝
) {\

641 
size
 = 0;\

642 *
˝
 && 
	`IS_DIGIT
(*cp))\

643 
size
 = sizê* 10 + *(
˝
++) - '0';\

644 i‡(*
˝
 == '\0')\

645 
d⁄e
;\

646 }

	)

648 
Så
 
size_öt2°r
(
˛í_t
);

651 
	$ex_·pdú_«me_size_d©e
(*
löe
, **
«me
, **
lök
, **
d©e
,

652 **
sizï
)

654 
·y≥
 = 
FTPDIR_NONE
;

655 *
˝
 = 
löe
, *
p
;

656 
˛í_t
 
size
;

658 i‡(
	`°æí
(
˝
) < 11)

659 
d⁄e
;

661 
˝
 += 10;

662 i‡(!
	`IS_SPACE
(*
˝
))

663 
d⁄e
;

664 
˝
++;

667 
	`EX_SKIP_SPACE
(
˝
);

668 
	`EX_COUNT_DIGIT
(
˝
);

669 
˝
++;

672 
	`EX_SKIP_SPACE
(
˝
);

673 
	`EX_SKIP_NONE_SPACE
(
˝
);

674 
˝
++;

677 
	`EX_SKIP_SPACE
(
˝
);

678 
	`EX_SKIP_NONE_SPACE
(
˝
);

679 
˝
++;

682 
	`EX_SKIP_SPACE
(
˝
);

683 
p
 = 
˝
;

684 
	`EX_COUNT_DIGIT
(
˝
);

685 i‡(*
˝
 == ',') {

686 
˝
++;

687 
	`EX_SKIP_SPACE
(
˝
);

688 
	`EX_SKIP_NONE_SPACE
(
˝
);

689 *
sizï
 = 
	`ÆlocSå
(
p
, 
˝
 -Ö);

692 *
sizï
 = 
	`size_öt2°r
(
size
)->
±r
;

694 
˝
++;

698 
p
 = 
˝
;

699 
	`EX_SKIP_SPACE
(
˝
);

700 
	`EX_SKIP_NONE_SPACE
(
˝
);

701 
	`EX_SKIP_SPACE
(
˝
);

702 
	`EX_SKIP_NONE_SPACE
(
˝
);

703 
	`EX_SKIP_SPACE
(
˝
);

704 
	`EX_SKIP_NONE_SPACE
(
˝
);

705 *
d©e
 = 
	`ÆlocSå
(
p
, 
˝
 -Ö);

706 
˝
++;

709 
	`EX_SKIP_SPACE
(
˝
);

710 
löe
[0]) {

712 
·y≥
 = 
FTPDIR_LINK
;

713 i‡((
p
 = 
	`°r°r
(
˝
, " -> ")Ë=
NULL
)

714 
d⁄e
;

715 *
«me
 = 
	`ÆlocSå
(
˝
, 
p
 - cp);

716 *
lök
 = 
	`ÆlocSå
(
p
, -1);

717 *
sizï
 = "";

720 
·y≥
 = 
FTPDIR_DIR
;

721 *
«me
 = 
	`ÆlocSå
(
˝
, -1);

722 *
lök
 = "";

723 *
sizï
 = "";

726 
·y≥
 = 
FTPDIR_FILE
;

727 *
«me
 = 
	`ÆlocSå
(
˝
, -1);

728 *
lök
 = "";

732 
d⁄e
:

733  (
·y≥
);

734 
	}
}

736 
Så


737 
	$size_öt2°r
(
˛í_t
 
size
)

739 
Så
 
size_°r
;

740 
unô
;

741 
dtmp
;

742 *
size_f‹m©
, *
unô_°r
;

744 
dtmp
 = ()
size
;

745 
unô
 = 0; unit < 3; unit++) {

746 i‡(
dtmp
 < 1024) {

749 
dtmp
 /= 1024;

751 i‡(!
unô
 || 
dtmp
 > 100) {

752 
size_f‹m©
 = "%.0f%s";

754 i‡(
dtmp
 > 10) {

755 
size_f‹m©
 = "%.1f%s";

758 
size_f‹m©
 = "%.2f%s";

760 
unô
) {

762 
unô_°r
 = "G";

765 
unô_°r
 = "M";

768 
unô_°r
 = "K";

771 
unô_°r
 = "";

774 
size_°r
 = 
	`S¥ötf
(
size_f‹m©
, 
dtmp
, 
unô_°r
);

776  (
size_°r
);

777 
	}
}

	@func.c

6 
	~<°dio.h
>

8 
	~"fm.h
"

9 
	~"func.h
"

10 
	~"my˘y≥.h
"

12 
	~"fun˙ame.c
"

13 
	~"fun˘abÀ.c
"

15 
	#KEYDATA_HASH_SIZE
 16

	)

16 
Hash_iv
 *
	gkeyD©a
 = 
NULL
;

17 
	gkeym≠_öôülized
 = 
FALSE
;

18 
°©
 
	gsys_cuºít_keym≠_fûe
;

19 
°©
 
	gcuºít_keym≠_fûe
;

22 
	$£tKeym≠
(*
p
, 
löío
, 
vîbo£
)

24 *
m≠
 = 
NULL
;

25 *
s
, *
emsg
;

26 
c
, 
f
;

28 
s
 = 
	`gëQW‹d
(&
p
);

29 
c
 = 
	`gëKey
(
s
);

30 i‡(
c
 < 0) {

31 i‡(
löío
 > 0)

33 
emsg
 = 
	`S¥ötf
("löê%d: unknow¿key '%s'", 
löío
, 
s
)->
±r
;

36 
emsg
 = 
	`S¥ötf
("defkey: unknow¿key '%s'", 
s
)->
±r
;

37 
	`ªc‹d_îr_mesßge
(
emsg
);

38 i‡(
vîbo£
)

39 
	`di•_mesßge_n£c
(
emsg
, 
FALSE
, 1, 
TRUE
, FALSE);

42 
s
 = 
	`gëW‹d
(&
p
);

43 
f
 = 
	`gëFuncLi°
(
s
);

44 i‡(
f
 < 0) {

45 i‡(
löío
 > 0)

47 
emsg
 = 
	`S¥ötf
("löê%d: invÆid comm™d '%s'", 
löío
, 
s
)->
±r
;

50 
emsg
 = 
	`S¥ötf
("defkey: invÆid comm™d '%s'", 
s
)->
±r
;

51 
	`ªc‹d_îr_mesßge
(
emsg
);

52 i‡(
vîbo£
)

53 
	`di•_mesßge_n£c
(
emsg
, 
FALSE
, 1, 
TRUE
, FALSE);

56 i‡(
c
 & 
K_MULTI
) {

57 **
mm≠
 = 
NULL
;

58 
i
, 
j
, 
m
 = 
	`MULTI_KEY
(
c
);

60 i‡(
m
 & 
K_ESCD
)

61 
m≠
 = 
EscDKeym≠
;

62 i‡(
m
 & 
K_ESCB
)

63 
m≠
 = 
EscBKeym≠
;

64 i‡(
m
 & 
K_ESC
)

65 
m≠
 = 
EscKeym≠
;

67 
m≠
 = 
GlobÆKeym≠
;

68 i‡(
m≠
[
m
 & 0x7F] =
FUNCNAME_mu…im≠
)

69 
mm≠
 = (**)
	`gëKeyD©a
(
m
);

71 
m≠
[
m
 & 0x7F] = 
FUNCNAME_mu…im≠
;

72 i‡(!
mm≠
) {

73 
mm≠
 = 
	`New_N
(*, 4);

74 
i
 = 0; i < 4; i++) {

75 
mm≠
[
i
] = 
	`New_N
(, 128);

76 
j
 = 0; j < 128; j++)

77 
mm≠
[
i
][
j
] = 
FUNCNAME_nulcmd
;

79 
mm≠
[0][
ESC_CODE
] = 
FUNCNAME_escm≠
;

80 
mm≠
[1]['['] = 
FUNCNAME_escbm≠
;

81 
mm≠
[1]['O'] = 
FUNCNAME_escbm≠
;

83 i‡(
keyD©a
 =
NULL
)

84 
keyD©a
 = 
	`√wHash_iv
(
KEYDATA_HASH_SIZE
);

85 
	`putHash_iv
(
keyD©a
, 
m
, (*)
mm≠
);

86 i‡(
c
 & 
K_ESCD
)

87 
m≠
 = 
mm≠
[3];

88 i‡(
c
 & 
K_ESCB
)

89 
m≠
 = 
mm≠
[2];

90 i‡(
c
 & 
K_ESC
)

91 
m≠
 = 
mm≠
[1];

93 
m≠
 = 
mm≠
[0];

96 i‡(
c
 & 
K_ESCD
)

97 
m≠
 = 
EscDKeym≠
;

98 i‡(
c
 & 
K_ESCB
)

99 
m≠
 = 
EscBKeym≠
;

100 i‡(
c
 & 
K_ESC
)

101 
m≠
 = 
EscKeym≠
;

103 
m≠
 = 
GlobÆKeym≠
;

105 
m≠
[
c
 & 0x7F] = 
f
;

106 
s
 = 
	`gëQW‹d
(&
p
);

107 i‡(*
s
) {

108 i‡(
keyD©a
 =
NULL
)

109 
keyD©a
 = 
	`√wHash_iv
(
KEYDATA_HASH_SIZE
);

110 
	`putHash_iv
(
keyD©a
, 
c
, (*)
s
);

112 i‡(
	`gëKeyD©a
(
c
))

113 
	`putHash_iv
(
keyD©a
, 
c
, 
NULL
);

114 
	}
}

117 
	$öãΩªt_keym≠
(
FILE
 * 
kf
, 
°©
 *
cuºít
, 
f‹˚
)

119 
fd
;

120 
°©
 
k°©
;

121 
Så
 
löe
;

122 *
p
, *
s
, *
emsg
;

123 
löío
;

124 #ifde‡
USE_M17N


125 
wc_˚s
 
ch¨£t
 = 
Sy°emCh¨£t
;

127 
vîbo£
 = 1;

128 
	`°r_to_boﬁ
(*
vÆue
, 
ﬁd
);

130 i‡((
fd
 = 
	`fûío
(
kf
)Ë< 0 || 
	`f°©
(fd, &
k°©
) ||

131 (!
f‹˚
 &&

132 
k°©
.
°_mtime
 =
cuºít
->st_mtime &&

133 
k°©
.
°_dev
 =
cuºít
->st_dev &&

134 
k°©
.
°_öo
 =
cuºít
->°_öÿ&& k°©.
°_size
 == current->st_size))

136 *
cuºít
 = 
k°©
;

138 
löío
 = 0;

139 !
	`„of
(
kf
)) {

140 
löe
 = 
	`Såfgës
(
kf
);

141 
löío
++;

142 
	`Såch›
(
löe
);

143 
	`Såªmovefú°•a˚s
(
löe
);

144 i‡(
löe
->
Àngth
 == 0)

146 #ifde‡
USE_M17N


147 
löe
 = 
	`wc_Så_c⁄v
÷öe, 
ch¨£t
, 
I¬îCh¨£t
);

149 
p
 = 
löe
->
±r
;

150 
s
 = 
	`gëW‹d
(&
p
);

151 i‡(*
s
 == '#')

153 i‡(!
	`°rcmp
(
s
, "keymap")) ;

154 #ifde‡
USE_M17N


155 i‡(!
	`°rcmp
(
s
, "charset") || !strcmp(s, "encoding")) {

156 
s
 = 
	`gëQW‹d
(&
p
);

157 i‡(*
s
)

158 
ch¨£t
 = 
	`wc_guess_ch¨£t
(
s
, charset);

162 i‡(!
	`°rcmp
(
s
, "verbose")) {

163 
s
 = 
	`gëW‹d
(&
p
);

164 i‡(*
s
)

165 
vîbo£
 = 
	`°r_to_boﬁ
(
s
, verbose);

169 
emsg
 = 
	`S¥ötf
("löê%d: sy¡axÉº‹ '%s'", 
löío
, 
s
)->
±r
;

170 
	`ªc‹d_îr_mesßge
(
emsg
);

171 i‡(
vîbo£
)

172 
	`di•_mesßge_n£c
(
emsg
, 
FALSE
, 1, 
TRUE
, FALSE);

175 
	`£tKeym≠
(
p
, 
löío
, 
vîbo£
);

177 
	}
}

180 
	$öôKeym≠
(
f‹˚
)

182 
FILE
 *
kf
;

184 i‡((
kf
 = 
	`f›í
(
	`c⁄fFûe
(
KEYMAP_FILE
), "π")Ë!
NULL
) {

185 
	`öãΩªt_keym≠
(
kf
, &
sys_cuºít_keym≠_fûe
,

186 
f‹˚
 || !
keym≠_öôülized
);

187 
	`f˛o£
(
kf
);

189 i‡((
kf
 = 
	`f›í
(
	`rcFûe
(
keym≠_fûe
), "π")Ë!
NULL
) {

190 
	`öãΩªt_keym≠
(
kf
, &
cuºít_keym≠_fûe
,

191 
f‹˚
 || !
keym≠_öôülized
);

192 
	`f˛o£
(
kf
);

194 
keym≠_öôülized
 = 
TRUE
;

195 
	}
}

198 
	$gëFuncLi°
(*
id
)

200  
	`gëHash_si
(&
fun˘abÀ
, 
id
, -1);

201 
	}
}

204 
	$gëKeyD©a
(
key
)

206 i‡(
keyD©a
 =
NULL
)

207  
NULL
;

208  (*)
	`gëHash_iv
(
keyD©a
, 
key
, 
NULL
);

209 
	}
}

212 
	$gëKey2
(**
°r
)

214 *
s
 = *
°r
;

215 
c
, 
esc
 = 0, 
˘æ
 = 0;

217 i‡(
s
 =
NULL
 || *s == '\0')

220 i‡(
	`°rˇ£cmp
(
s
, "UP") == 0) {

221 *
°r
 = 
s
 + 2;

222  
K_ESCB
 | 'A';

224 i‡(
	`°rˇ£cmp
(
s
, "DOWN") == 0) {

225 *
°r
 = 
s
 + 4;

226  
K_ESCB
 | 'B';

228 i‡(
	`°rˇ£cmp
(
s
, "RIGHT") == 0) {

229 *
°r
 = 
s
 + 5;

230  
K_ESCB
 | 'C';

232 i‡(
	`°rˇ£cmp
(
s
, "LEFT") == 0) {

233 *
°r
 = 
s
 + 4;

234  
K_ESCB
 | 'D';

237 i‡(
	`°∫ˇ£cmp
(
s
, "ESC-", 4) == 0 || strncasecmp(s, "ESC ", 4) == 0) {

238 
s
 += 4;

239 
esc
 = 
K_ESC
;

241 i‡(
	`°∫ˇ£cmp
(
s
, "M-", 2) == 0 || strncasecmp(s, "\\E", 2) == 0) {

242 
s
 += 2;

243 
esc
 = 
K_ESC
;

245 i‡(*
s
 =
ESC_CODE
) {

246 
s
++;

247 
esc
 = 
K_ESC
;

249 i‡(
	`°∫ˇ£cmp
(
s
, "C-", 2) == 0) {

250 
s
 += 2;

251 
˘æ
 = 1;

253 i‡(*
s
 == '^' && *(s + 1)) {

254 
s
++;

255 
˘æ
 = 1;

257 i‡(!
esc
 && 
˘æ
 && *
s
 == '[') {

258 
s
++;

259 
˘æ
 = 0;

260 
esc
 = 
K_ESC
;

262 i‡(
esc
 && !
˘æ
) {

263 i‡(*
s
 == '[' || *s == 'O') {

264 
s
++;

265 
esc
 = 
K_ESCB
;

267 i‡(
	`°∫ˇ£cmp
(
s
, "C-", 2) == 0) {

268 
s
 += 2;

269 
˘æ
 = 1;

271 i‡(*
s
 == '^' && *(s + 1)) {

272 
s
++;

273 
˘æ
 = 1;

277 i‡(
˘æ
) {

278 *
°r
 = 
s
 + 1;

279 i‡(*
s
 >= '@' && *s <= '_')

280  
esc
 | (*
s
 - '@');

281 i‡(*
s
 >= 'a' && *s <= 'z')

282  
esc
 | (*
s
 - 'a' + 1);

283 i‡(*
s
 == '?')

284  
esc
 | 
DEL_CODE
;

289 i‡(
esc
 =
K_ESCB
 && 
	`IS_DIGIT
(*
s
)) {

290 
c
 = ()(*
s
 - '0');

291 
s
++;

292 i‡(
	`IS_DIGIT
(*
s
)) {

293 
c
 = c * 10 + ()(*
s
 - '0');

294 
s
++;

296 *
°r
 = 
s
 + 1;

297 i‡(*
s
 == '~')

298  
K_ESCD
 | 
c
;

303 i‡(
	`°∫ˇ£cmp
(
s
, "SPC", 3) == 0) {

304 *
°r
 = 
s
 + 3;

305  
esc
 | ' ';

307 i‡(
	`°∫ˇ£cmp
(
s
, "TAB", 3) == 0) {

308 *
°r
 = 
s
 + 3;

309  
esc
 | '\t';

311 i‡(
	`°∫ˇ£cmp
(
s
, "DEL", 3) == 0) {

312 *
°r
 = 
s
 + 3;

313  
esc
 | 
DEL_CODE
;

316 i‡(*
s
 == '\\' && *(s + 1) != '\0') {

317 
s
++;

318 *
°r
 = 
s
 + 1;

319 *
s
) {

321  
esc
 | 
CTRL_G
;

323  
esc
 | 
CTRL_H
;

325  
esc
 | 
CTRL_I
;

327  
esc
 | 
CTRL_J
;

329  
esc
 | 
CTRL_M
;

331  
esc
 | 
ESC_CODE
;

333  
esc
 | '^';

335  
esc
 | '\\';

340 *
°r
 = 
s
 + 1;

341 i‡(
	`IS_ASCII
(*
s
))

342  
esc
 | *
s
;

345 
	}
}

348 
	$gëKey
(*
s
)

350 
c
, 
c2
;

352 
c
 = 
	`gëKey2
(&
s
);

353 i‡(
c
 < 0)

355 i‡(*
s
 == ' ' || *s == '-')

356 
s
++;

357 i‡(*
s
) {

358 
c2
 = 
	`gëKey2
(&
s
);

359 i‡(
c2
 < 0)

361 
c
 = 
K_MULTI
 | (¯<< 16Ë| 
c2
;

363  
c
;

364 
	}
}

367 
	$gëW‹d
(**
°r
)

369 *
p
, *
s
;

371 
p
 = *
°r
;

372 
	`SKIP_BLANKS
(
p
);

373 
s
 = 
p
; *∞&& !
	`IS_SPACE
(*p) && *p != ';';Ö++) ;

374 *
°r
 = 
p
;

375  
	`Så√w_ch¨p_n
(
s
, 
p
 - s)->
±r
;

376 
	}
}

379 
	$gëQW‹d
(**
°r
)

381 
Så
 
tmp
 = 
	`Så√w
();

382 *
p
;

383 
ö_q
 = 0, 
ö_dq
 = 0, 
esc
 = 0;

385 
p
 = *
°r
;

386 
	`SKIP_BLANKS
(
p
);

387 ; *
p
;Ö++) {

388 i‡(
esc
) {

389 i‡(
ö_q
) {

390 i‡(*
p
 != '\\' && *p != '\'')

391 
	`Såˇt_ch¨
(
tmp
, '\\');

393 i‡(
ö_dq
) {

394 i‡(*
p
 != '\\' && *p != '"')

395 
	`Såˇt_ch¨
(
tmp
, '\\');

398 i‡(*
p
 != '\\' && *p != '\'' &&

399 *
p
 !'"' && !
	`IS_SPACE
(*p))

400 
	`Såˇt_ch¨
(
tmp
, '\\');

402 
	`Såˇt_ch¨
(
tmp
, *
p
);

403 
esc
 = 0;

405 i‡(*
p
 == '\\') {

406 
esc
 = 1;

408 i‡(
ö_q
) {

409 i‡(*
p
 == '\'')

410 
ö_q
 = 0;

412 
	`Såˇt_ch¨
(
tmp
, *
p
);

414 i‡(
ö_dq
) {

415 i‡(*
p
 == '"')

416 
ö_dq
 = 0;

418 
	`Såˇt_ch¨
(
tmp
, *
p
);

420 i‡(*
p
 == '\'') {

421 
ö_q
 = 1;

423 i‡(*
p
 == '"') {

424 
ö_dq
 = 1;

426 i‡(
	`IS_SPACE
(*
p
) || *p == ';') {

430 
	`Såˇt_ch¨
(
tmp
, *
p
);

433 *
°r
 = 
p
;

434  
tmp
->
±r
;

435 
	}
}

437 #ifde‡
USE_MOUSE


438 
Mou£A˘i⁄
 
	gdeÁu…_mou£_a˘i⁄
 = {

439 
NULL
,

441 0, 6, 
FALSE
, 0, 0,

442 {{
movMs
, 
NULL
}, {
backBf
, NULL}, {
míuMs
, NULL}},

443 {{
NULL
, NULL}, {NULL, NULL}, {NULL, NULL}},

444 {{
fﬁlowA
, 
NULL
}, {NULL, NULL}, {NULL, NULL}},

445 {{
èbMs
, 
NULL
}, {
˛o£TMs
, NULL}, {NULL, NULL}},

446 {
NULL
, NULL, NULL},

447 {
NULL
, NULL, NULL}

449 
Mou£A˘i⁄M≠
 
	gdeÁu…_œ°löe_a˘i⁄
[6] = {

450 {
backBf
, 
NULL
},

451 {
backBf
, 
NULL
},

452 {
pgBack
, 
NULL
},

453 {
pgBack
, 
NULL
},

454 {
pgF‹e
, 
NULL
},

455 {
pgF‹e
, 
NULL
}

459 
	$£tMou£A˘i⁄0
(**
°r
, *
width
, 
Mou£A˘i⁄M≠
 ** 
m≠
, *
p
)

461 *
s
;

462 
b
, 
w
, 
x
;

464 
s
 = 
	`gëQW‹d
(&
p
);

465 i‡(!*
s
) {

466 *
°r
 = 
NULL
;

467 
width
 = 0;

468 
b
 = 0; b < 3; b++)

469 
m≠
[
b
] = 
NULL
;

472 
w
 = *
width
;

473 *
°r
 = 
s
;

474 *
width
 = 
	`gë_°rwidth
(
s
);

475 i‡(*
width
 >
LIMIT_MOUSE_MENU
)

476 *
width
 = 
LIMIT_MOUSE_MENU
;

477 i‡(*
width
 <
w
)

479 
b
 = 0; b < 3; b++) {

480 i‡(!
m≠
[
b
])

482 
m≠
[
b
] = 
	`New_Reu£
(
Mou£A˘i⁄M≠
, m≠[b], *
width
);

483 
x
 = 
w
 + 1; x < *
width
; x++) {

484 
m≠
[
b
][
x
].
func
 = 
NULL
;

485 
m≠
[
b
][
x
].
d©a
 = 
NULL
;

488 
	}
}

491 
	$£tMou£A˘i⁄1
(
Mou£A˘i⁄M≠
 ** 
m≠
, 
width
, *
p
)

493 *
s
;

494 
x
, 
x2
, 
f
;

496 i‡(!*
m≠
) {

497 *
m≠
 = 
	`New_N
(
Mou£A˘i⁄M≠
, 
width
);

498 
x
 = 0; x < 
width
; x++) {

499 (*
m≠
)[
x
].
func
 = 
NULL
;

500 (*
m≠
)[
x
].
d©a
 = 
NULL
;

503 
s
 = 
	`gëW‹d
(&
p
);

504 
x
 = 
	`©oi
(
s
);

505 i‡(!(
	`IS_DIGIT
(*
s
Ë&& 
x
 >0 && x < 
width
))

507 
s
 = 
	`gëW‹d
(&
p
);

508 
x2
 = 
	`©oi
(
s
);

509 i‡(!(
	`IS_DIGIT
(*
s
Ë&& 
x2
 >0 && x2 < 
width
))

511 
s
 = 
	`gëW‹d
(&
p
);

512 
f
 = 
	`gëFuncLi°
(
s
);

513 
s
 = 
	`gëQW‹d
(&
p
);

514 i‡(!*
s
)

515 
s
 = 
NULL
;

516 ; 
x
 <
x2
; x++) {

517 (*
m≠
)[
x
].
func
 = (
f
 >0Ë? 
w3mFuncLi°
[f].fun¯: 
NULL
;

518 (*
m≠
)[
x
].
d©a
 = 
s
;

520 
	}
}

523 
	$£tMou£A˘i⁄2
(
Mou£A˘i⁄M≠
 * 
m≠
, *
p
)

525 *
s
;

526 
f
;

528 
s
 = 
	`gëW‹d
(&
p
);

529 
f
 = 
	`gëFuncLi°
(
s
);

530 
s
 = 
	`gëQW‹d
(&
p
);

531 i‡(!*
s
)

532 
s
 = 
NULL
;

533 
m≠
->
func
 = (
f
 >0Ë? 
w3mFuncLi°
[f].fun¯: 
NULL
;

534 
m≠
->
d©a
 = 
s
;

535 
	}
}

538 
	$öãΩªt_mou£_a˘i⁄
(
FILE
 * 
mf
)

540 
Så
 
löe
;

541 *
p
, *
s
;

542 
b
;

544 !
	`„of
(
mf
)) {

545 
löe
 = 
	`Såfgës
(
mf
);

546 
	`Såch›
(
löe
);

547 
	`Såªmovefú°•a˚s
(
löe
);

548 i‡(
löe
->
Àngth
 == 0)

550 
p
 = 
	`c⁄v_‰om_sy°em
(
löe
->
±r
);

551 
s
 = 
	`gëW‹d
(&
p
);

552 i‡(*
s
 == '#')

554 i‡(!
	`°rcmp
(
s
, "menu")) {

555 
	`£tMou£A˘i⁄0
(&
mou£_a˘i⁄
.
míu_°r
, &mou£_a˘i⁄.
míu_width
,

556 
mou£_a˘i⁄
.
míu_m≠
, 
p
);

559 i‡(!
	`°rcmp
(
s
, "lastline")) {

560 
	`£tMou£A˘i⁄0
(&
mou£_a˘i⁄
.
œ°löe_°r
,

561 &
mou£_a˘i⁄
.
œ°löe_width
,

562 
mou£_a˘i⁄
.
œ°löe_m≠
, 
p
);

565 i‡(
	`°rcmp
(
s
, "button"))

567 
s
 = 
	`gëW‹d
(&
p
);

568 
b
 = 
	`©oi
(
s
) - 1;

569 i‡(!(
b
 >= 0 && b <= 2))

571 
	`SKIP_BLANKS
(
p
);

572 i‡(
	`IS_DIGIT
(*
p
))

573 
s
 = "menu";

575 
s
 = 
	`gëW‹d
(&
p
);

576 i‡(!
	`°rˇ£cmp
(
s
, "menu")) {

577 i‡(!
mou£_a˘i⁄
.
míu_°r
)

579 
	`£tMou£A˘i⁄1
(&
mou£_a˘i⁄
.
míu_m≠
[
b
], mou£_a˘i⁄.
míu_width
,

580 
p
);

582 i‡(!
	`°rˇ£cmp
(
s
, "lastline")) {

583 i‡(!
mou£_a˘i⁄
.
œ°löe_°r
)

585 
	`£tMou£A˘i⁄1
(&
mou£_a˘i⁄
.
œ°löe_m≠
[
b
],

586 
mou£_a˘i⁄
.
œ°löe_width
, 
p
);

588 i‡(!
	`°rˇ£cmp
(
s
, "default"))

589 
	`£tMou£A˘i⁄2
(&
mou£_a˘i⁄
.
deÁu…_m≠
[
b
], 
p
);

590 i‡(!
	`°rˇ£cmp
(
s
, "anchor"))

591 
	`£tMou£A˘i⁄2
(&
mou£_a˘i⁄
.
™ch‹_m≠
[
b
], 
p
);

592 i‡(!
	`°rˇ£cmp
(
s
, "active"))

593 
	`£tMou£A˘i⁄2
(&
mou£_a˘i⁄
.
a˘ive_m≠
[
b
], 
p
);

594 i‡(!
	`°rˇ£cmp
(
s
, "tab"))

595 
	`£tMou£A˘i⁄2
(&
mou£_a˘i⁄
.
èb_m≠
[
b
], 
p
);

597 
	}
}

600 
	$öôMou£A˘i⁄
()

602 
FILE
 *
mf
;

604 
	`bc›y
((*)&
deÁu…_mou£_a˘i⁄
, (*)&
mou£_a˘i⁄
,

605 (
deÁu…_mou£_a˘i⁄
));

606 
mou£_a˘i⁄
.
œ°löe_m≠
[0] = 
	`New_N
(
Mou£A˘i⁄M≠
, 6);

607 
	`bc›y
((*)&
deÁu…_œ°löe_a˘i⁄
,

608 (*)
mou£_a˘i⁄
.
œ°löe_m≠
[0],

609 (
deÁu…_œ°löe_a˘i⁄
));

611 #ifde‡
USE_M17N


612 
w
 = 0;

613 **
symbﬁ
 = 
	`gë_symbﬁ
(
Di•œyCh¨£t
, &
w
);

615 **
symbﬁ
 = 
	`gë_symbﬁ
();

617 
mou£_a˘i⁄
.
œ°löe_°r
 =

618 
	`Så√w_ch¨p
(
symbﬁ
[
N_GRAPH_SYMBOL
 + 13])->
±r
;

621 i‡((
mf
 = 
	`f›í
(
	`c⁄fFûe
(
MOUSE_FILE
), "π")Ë!
NULL
) {

622 
	`öãΩªt_mou£_a˘i⁄
(
mf
);

623 
	`f˛o£
(
mf
);

625 i‡((
mf
 = 
	`f›í
(
	`rcFûe
(
MOUSE_FILE
), "π")Ë!
NULL
) {

626 
	`öãΩªt_mou£_a˘i⁄
(
mf
);

627 
	`f˛o£
(
mf
);

629 
	}
}

	@func.h

6 #i‚de‡
FUNC_H


7 
	#FUNC_H


	)

9 
	~"ãxéi°.h
"

10 
	~"hash.h
"

12 
	#KEY_HASH_SIZE
 127

	)

14 
	#K_ESC
 0x100

	)

15 
	#K_ESCB
 0x200

	)

16 
	#K_ESCD
 0x400

	)

17 
	#K_MULTI
 0x10000000

	)

18 
	#MULTI_KEY
(
c
Ë(((cË>> 16Ë& 0x77F)

	)

20 
	s_FuncLi°
 {

21 *
	mid
;

22 (*
	mfunc
) ();

23 } 
	tFuncLi°
;

	@funcname.c

1 
FuncLi°
 
	gw3mFuncLi°
[] = {

2  {"@@@",
nulcmd
},

3  {"ABORT",
quôfm
},

4  {"ACCESSKEY",
ac˚ssKey
},

5  {"ADD_BOOKMARK",
adBm¨k
},

6  {"ALARM",
£tAœrm
},

7  {"BACK",
backBf
},

8  {"BEGIN",
goLöeF
},

9  {"BOOKMARK",
ldBm¨k
},

10  {"CENTER_H",
˘rC§H
},

11  {"CENTER_V",
˘rC§V
},

12  {"CHARSET",
docCSë
},

13  {"CLOSE_TAB",
˛o£T
},

14  {"CLOSE_TAB_MOUSE",
˛o£TMs
},

15  {"COMMAND",
execCmd
},

16  {"COOKIE",
cooL°
},

17  {"DEFAULT_CHARSET",
defCSë
},

18  {"DEFINE_KEY",
defKey
},

19  {"DELETE_PREVBUF",
dñëePªvBuf
},

20  {"DICT_WORD",
di˘w‹d
},

21  {"DICT_WORD_AT",
di˘w‹d©
},

22  {"DISPLAY_IMAGE",
di•I
},

23  {"DOWN",
ldown1
},

24  {"DOWNLOAD",
svSrc
},

25  {"DOWNLOAD_LIST",
ldDL
},

26  {"EDIT",
edôBf
},

27  {"EDIT_SCREEN",
edôS¸
},

28  {"END",
goLöeL
},

29  {"ESCBMAP",
escbm≠
},

30  {"ESCMAP",
escm≠
},

31  {"EXEC_SHELL",
execsh
},

32  {"EXIT",
quôfm
},

33  {"EXTERN",
extbrz
},

34  {"EXTERN_LINK",
lökbrz
},

35  {"FRAME",
rFøme
},

36  {"GOOGLE_LUCKY_WORD",
googÀluckyw‹d
},

37  {"GOOGLE_LUCKY_WORD_AT",
googÀluckyw‹d©
},

38  {"GOOGLE_WORD",
googÀw‹d
},

39  {"GOOGLE_WORD_AT",
googÀw‹d©
},

40  {"GOTO",
goURL
},

41  {"GOTO_LINE",
goLöe
},

42  {"GOTO_LINK",
fﬁlowA
},

43  {"GOTO_RELATIVE",
g‹URL
},

44  {"HELP",
ldhñp
},

45  {"HISTORY",
ldHi°
},

46  {"INFO",
pgöfo
},

47  {"INTERRUPT",
su•
},

48  {"ISEARCH",
i§chf‹
},

49  {"ISEARCH_BACK",
i§chbak
},

50  {"LEFT",
cﬁ1L
},

51  {"LINE_BEGIN",
löbeg
},

52  {"LINE_END",
löíd
},

53  {"LINE_INFO",
cuæno
},

54  {"LINK_BEGIN",
t›A
},

55  {"LINK_END",
œ°A
},

56  {"LINK_MENU",
lökMn
},

57  {"LIST",
lökL°
},

58  {"LIST_MENU",
li°Mn
},

59  {"LOAD",
ldfûe
},

60  {"MAIN_MENU",
maöMn
},

61  {"MARK",
_m¨k
},

62  {"MARK_MID",
chkNMID
},

63  {"MARK_URL",
chkURL
},

64  {"MARK_WORD",
chkWORD
},

65  {"MENU",
maöMn
},

66  {"MENU_MOUSE",
míuMs
},

67  {"MOUSE",
mou£
},

68  {"MOUSE_TOGGLE",
msToggÀ
},

69  {"MOVE_DOWN",
movD
},

70  {"MOVE_DOWN1",
movD1
},

71  {"MOVE_LEFT",
movL
},

72  {"MOVE_LEFT1",
movL1
},

73  {"MOVE_LIST_MENU",
movli°Mn
},

74  {"MOVE_MOUSE",
movMs
},

75  {"MOVE_RIGHT",
movR
},

76  {"MOVE_RIGHT1",
movR1
},

77  {"MOVE_UP",
movU
},

78  {"MOVE_UP1",
movU1
},

79  {"MSGS",
msgs
},

80  {"MULTIMAP",
mu…im≠
},

81  {"NEW_TAB",
√wT
},

82  {"NEXT",
√xtBf
},

83  {"NEXT_DOWN",
√xtD
},

84  {"NEXT_LEFT",
√xtL
},

85  {"NEXT_LEFT_UP",
√xtLU
},

86  {"NEXT_LINK",
√xtA
},

87  {"NEXT_MARK",
√xtMk
},

88  {"NEXT_PAGE",
pgF‹e
},

89  {"NEXT_RIGHT",
√xtR
},

90  {"NEXT_RIGHT_DOWN",
√xtRD
},

91  {"NEXT_TAB",
√xtT
},

92  {"NEXT_UP",
√xtU
},

93  {"NEXT_VISITED",
√xtVA
},

94  {"NEXT_WORD",
movRW
},

95  {"NOTHING",
nulcmd
},

96  {"NULL",
nulcmd
},

97  {"OPTIONS",
ldO±
},

98  {"PCMAP",
pcm≠
},

99  {"PEEK",
curURL
},

100  {"PEEK_IMG",
≥ekIMG
},

101  {"PEEK_LINK",
≥ekURL
},

102  {"PIPE_BUF",
pùeBuf
},

103  {"PIPE_SHELL",
pùesh
},

104  {"PREV",
¥evBf
},

105  {"PREV_LINK",
¥evA
},

106  {"PREV_MARK",
¥evMk
},

107  {"PREV_PAGE",
pgBack
},

108  {"PREV_TAB",
¥evT
},

109  {"PREV_VISITED",
¥evVA
},

110  {"PREV_WORD",
movLW
},

111  {"PRINT",
svBuf
},

112  {"QUIT",
qquôfm
},

113  {"READ_SHELL",
ªadsh
},

114  {"REDO",
ªdoPos
},

115  {"REDRAW",
rdrwSc
},

116  {"REG_MARK",
ªM¨k
},

117  {"REINIT",
ªöô
},

118  {"RELOAD",
ªlﬂd
},

119  {"RESHAPE",
ªsh≠e
},

120  {"RIGHT",
cﬁ1R
},

121  {"SAVE",
svSrc
},

122  {"SAVE_IMAGE",
svI
},

123  {"SAVE_LINK",
svA
},

124  {"SAVE_SCREEN",
svBuf
},

125  {"SEARCH",
§chf‹
},

126  {"SEARCH_BACK",
§chbak
},

127  {"SEARCH_FORE",
§chf‹
},

128  {"SEARCH_NEXT",
§chnxt
},

129  {"SEARCH_PREV",
§ch¥v
},

130  {"SELECT",
£lBuf
},

131  {"SELECT_MENU",
£lMn
},

132  {"SETENV",
£tEnv
},

133  {"SET_OPTION",
£tO±
},

134  {"SHELL",
execsh
},

135  {"SHIFT_LEFT",
shi·l
},

136  {"SHIFT_RIGHT",
shi·r
},

137  {"SOURCE",
vwSrc
},

138  {"STOP_IMAGE",
°›I
},

139  {"SUBMIT",
submôF‹m
},

140  {"SUSPEND",
su•
},

141  {"TAB_GOTO",
èbURL
},

142  {"TAB_GOTO_RELATIVE",
èbrURL
},

143  {"TAB_LEFT",
èbL
},

144  {"TAB_LINK",
èbA
},

145  {"TAB_MENU",
èbMn
},

146  {"TAB_MOUSE",
èbMs
},

147  {"TAB_RIGHT",
èbR
},

148  {"UNDO",
undoPos
},

149  {"UP",
lup1
},

150  {"VERSION",
di•Vî
},

151  {"VIEW",
vwSrc
},

152  {"VIEW_BOOKMARK",
ldBm¨k
},

153  {"VIEW_IMAGE",
fﬁlowI
},

154  {"WHEREIS",
§chf‹
},

155  {"WRAP_TOGGLE",
wøpToggÀ
},

156 { 
NULL
, NULL }

	@funcname1.h

1 
	#FUNCNAME_nulcmd
 0

	)

2 
	#FUNCNAME_quôfm
 1

	)

3 
	#FUNCNAME_ac˚ssKey
 2

	)

4 
	#FUNCNAME_adBm¨k
 3

	)

5 
	#FUNCNAME_£tAœrm
 4

	)

6 
	#FUNCNAME_backBf
 5

	)

7 
	#FUNCNAME_goLöeF
 6

	)

8 
	#FUNCNAME_ldBm¨k
 7

	)

9 
	#FUNCNAME_˘rC§H
 8

	)

10 
	#FUNCNAME_˘rC§V
 9

	)

11 
	#FUNCNAME_docCSë
 10

	)

12 
	#FUNCNAME_˛o£T
 11

	)

13 
	#FUNCNAME_˛o£TMs
 12

	)

14 
	#FUNCNAME_execCmd
 13

	)

15 
	#FUNCNAME_cooL°
 14

	)

16 
	#FUNCNAME_defCSë
 15

	)

17 
	#FUNCNAME_defKey
 16

	)

18 
	#FUNCNAME_dñëePªvBuf
 17

	)

19 
	#FUNCNAME_di˘w‹d
 18

	)

20 
	#FUNCNAME_di˘w‹d©
 19

	)

21 
	#FUNCNAME_di•I
 20

	)

22 
	#FUNCNAME_ldown1
 21

	)

23 
	#FUNCNAME_svSrc
 22

	)

24 
	#FUNCNAME_ldDL
 23

	)

25 
	#FUNCNAME_edôBf
 24

	)

26 
	#FUNCNAME_edôS¸
 25

	)

27 
	#FUNCNAME_goLöeL
 26

	)

28 
	#FUNCNAME_escbm≠
 27

	)

29 
	#FUNCNAME_escm≠
 28

	)

30 
	#FUNCNAME_execsh
 29

	)

31 
	#FUNCNAME_extbrz
 31

	)

32 
	#FUNCNAME_lökbrz
 32

	)

33 
	#FUNCNAME_rFøme
 33

	)

34 
	#FUNCNAME_googÀluckyw‹d
 34

	)

35 
	#FUNCNAME_googÀluckyw‹d©
 35

	)

36 
	#FUNCNAME_googÀw‹d
 36

	)

37 
	#FUNCNAME_googÀw‹d©
 37

	)

38 
	#FUNCNAME_goURL
 38

	)

39 
	#FUNCNAME_goLöe
 39

	)

40 
	#FUNCNAME_fﬁlowA
 40

	)

41 
	#FUNCNAME_g‹URL
 41

	)

42 
	#FUNCNAME_ldhñp
 42

	)

43 
	#FUNCNAME_ldHi°
 43

	)

44 
	#FUNCNAME_pgöfo
 44

	)

45 
	#FUNCNAME_su•
 45

	)

46 
	#FUNCNAME_i§chf‹
 46

	)

47 
	#FUNCNAME_i§chbak
 47

	)

48 
	#FUNCNAME_cﬁ1L
 48

	)

49 
	#FUNCNAME_löbeg
 49

	)

50 
	#FUNCNAME_löíd
 50

	)

51 
	#FUNCNAME_cuæno
 51

	)

52 
	#FUNCNAME_t›A
 52

	)

53 
	#FUNCNAME_œ°A
 53

	)

54 
	#FUNCNAME_lökMn
 54

	)

55 
	#FUNCNAME_lökL°
 55

	)

56 
	#FUNCNAME_li°Mn
 56

	)

57 
	#FUNCNAME_ldfûe
 57

	)

58 
	#FUNCNAME_maöMn
 58

	)

59 
	#FUNCNAME__m¨k
 59

	)

60 
	#FUNCNAME_chkNMID
 60

	)

61 
	#FUNCNAME_chkURL
 61

	)

62 
	#FUNCNAME_chkWORD
 62

	)

63 
	#FUNCNAME_míuMs
 64

	)

64 
	#FUNCNAME_mou£
 65

	)

65 
	#FUNCNAME_msToggÀ
 66

	)

66 
	#FUNCNAME_movD
 67

	)

67 
	#FUNCNAME_movD1
 68

	)

68 
	#FUNCNAME_movL
 69

	)

69 
	#FUNCNAME_movL1
 70

	)

70 
	#FUNCNAME_movli°Mn
 71

	)

71 
	#FUNCNAME_movMs
 72

	)

72 
	#FUNCNAME_movR
 73

	)

73 
	#FUNCNAME_movR1
 74

	)

74 
	#FUNCNAME_movU
 75

	)

75 
	#FUNCNAME_movU1
 76

	)

76 
	#FUNCNAME_msgs
 77

	)

77 
	#FUNCNAME_mu…im≠
 78

	)

78 
	#FUNCNAME_√wT
 79

	)

79 
	#FUNCNAME_√xtBf
 80

	)

80 
	#FUNCNAME_√xtD
 81

	)

81 
	#FUNCNAME_√xtL
 82

	)

82 
	#FUNCNAME_√xtLU
 83

	)

83 
	#FUNCNAME_√xtA
 84

	)

84 
	#FUNCNAME_√xtMk
 85

	)

85 
	#FUNCNAME_pgF‹e
 86

	)

86 
	#FUNCNAME_√xtR
 87

	)

87 
	#FUNCNAME_√xtRD
 88

	)

88 
	#FUNCNAME_√xtT
 89

	)

89 
	#FUNCNAME_√xtU
 90

	)

90 
	#FUNCNAME_√xtVA
 91

	)

91 
	#FUNCNAME_movRW
 92

	)

92 
	#FUNCNAME_ldO±
 95

	)

93 
	#FUNCNAME_pcm≠
 96

	)

94 
	#FUNCNAME_curURL
 97

	)

95 
	#FUNCNAME_≥ekIMG
 98

	)

96 
	#FUNCNAME_≥ekURL
 99

	)

97 
	#FUNCNAME_pùeBuf
 100

	)

98 
	#FUNCNAME_pùesh
 101

	)

99 
	#FUNCNAME_¥evBf
 102

	)

100 
	#FUNCNAME_¥evA
 103

	)

101 
	#FUNCNAME_¥evMk
 104

	)

102 
	#FUNCNAME_pgBack
 105

	)

103 
	#FUNCNAME_¥evT
 106

	)

104 
	#FUNCNAME_¥evVA
 107

	)

105 
	#FUNCNAME_movLW
 108

	)

106 
	#FUNCNAME_svBuf
 109

	)

107 
	#FUNCNAME_qquôfm
 110

	)

108 
	#FUNCNAME_ªadsh
 111

	)

109 
	#FUNCNAME_ªdoPos
 112

	)

110 
	#FUNCNAME_rdrwSc
 113

	)

111 
	#FUNCNAME_ªM¨k
 114

	)

112 
	#FUNCNAME_ªöô
 115

	)

113 
	#FUNCNAME_ªlﬂd
 116

	)

114 
	#FUNCNAME_ªsh≠e
 117

	)

115 
	#FUNCNAME_cﬁ1R
 118

	)

116 
	#FUNCNAME_svI
 120

	)

117 
	#FUNCNAME_svA
 121

	)

118 
	#FUNCNAME_§chf‹
 123

	)

119 
	#FUNCNAME_§chbak
 124

	)

120 
	#FUNCNAME_§chnxt
 126

	)

121 
	#FUNCNAME_§ch¥v
 127

	)

122 
	#FUNCNAME_£lBuf
 128

	)

123 
	#FUNCNAME_£lMn
 129

	)

124 
	#FUNCNAME_£tEnv
 130

	)

125 
	#FUNCNAME_£tO±
 131

	)

126 
	#FUNCNAME_shi·l
 133

	)

127 
	#FUNCNAME_shi·r
 134

	)

128 
	#FUNCNAME_vwSrc
 135

	)

129 
	#FUNCNAME_°›I
 136

	)

130 
	#FUNCNAME_submôF‹m
 137

	)

131 
	#FUNCNAME_èbURL
 139

	)

132 
	#FUNCNAME_èbrURL
 140

	)

133 
	#FUNCNAME_èbL
 141

	)

134 
	#FUNCNAME_èbA
 142

	)

135 
	#FUNCNAME_èbMn
 143

	)

136 
	#FUNCNAME_èbMs
 144

	)

137 
	#FUNCNAME_èbR
 145

	)

138 
	#FUNCNAME_undoPos
 146

	)

139 
	#FUNCNAME_lup1
 147

	)

140 
	#FUNCNAME_di•Vî
 148

	)

141 
	#FUNCNAME_fﬁlowI
 151

	)

142 
	#FUNCNAME_wøpToggÀ
 153

	)

	@funcname2.h

1 
	#nulcmd
 0

	)

2 
	#quôfm
 1

	)

3 
	#ac˚ssKey
 2

	)

4 
	#adBm¨k
 3

	)

5 
	#£tAœrm
 4

	)

6 
	#backBf
 5

	)

7 
	#goLöeF
 6

	)

8 
	#ldBm¨k
 7

	)

9 
	#˘rC§H
 8

	)

10 
	#˘rC§V
 9

	)

11 
	#docCSë
 10

	)

12 
	#˛o£T
 11

	)

13 
	#˛o£TMs
 12

	)

14 
	#execCmd
 13

	)

15 
	#cooL°
 14

	)

16 
	#defCSë
 15

	)

17 
	#defKey
 16

	)

18 
	#dñëePªvBuf
 17

	)

19 
	#di˘w‹d
 18

	)

20 
	#di˘w‹d©
 19

	)

21 
	#di•I
 20

	)

22 
	#ldown1
 21

	)

23 
	#svSrc
 22

	)

24 
	#ldDL
 23

	)

25 
	#edôBf
 24

	)

26 
	#edôS¸
 25

	)

27 
	#goLöeL
 26

	)

28 
	#escbm≠
 27

	)

29 
	#escm≠
 28

	)

30 
	#execsh
 29

	)

31 
	#extbrz
 31

	)

32 
	#lökbrz
 32

	)

33 
	#rFøme
 33

	)

34 
	#googÀluckyw‹d
 34

	)

35 
	#googÀluckyw‹d©
 35

	)

36 
	#googÀw‹d
 36

	)

37 
	#googÀw‹d©
 37

	)

38 
	#goURL
 38

	)

39 
	#goLöe
 39

	)

40 
	#fﬁlowA
 40

	)

41 
	#g‹URL
 41

	)

42 
	#ldhñp
 42

	)

43 
	#ldHi°
 43

	)

44 
	#pgöfo
 44

	)

45 
	#su•
 45

	)

46 
	#i§chf‹
 46

	)

47 
	#i§chbak
 47

	)

48 
	#cﬁ1L
 48

	)

49 
	#löbeg
 49

	)

50 
	#löíd
 50

	)

51 
	#cuæno
 51

	)

52 
	#t›A
 52

	)

53 
	#œ°A
 53

	)

54 
	#lökMn
 54

	)

55 
	#lökL°
 55

	)

56 
	#li°Mn
 56

	)

57 
	#ldfûe
 57

	)

58 
	#maöMn
 58

	)

59 
	#_m¨k
 59

	)

60 
	#chkNMID
 60

	)

61 
	#chkURL
 61

	)

62 
	#chkWORD
 62

	)

63 
	#míuMs
 64

	)

64 
	#mou£
 65

	)

65 
	#msToggÀ
 66

	)

66 
	#movD
 67

	)

67 
	#movD1
 68

	)

68 
	#movL
 69

	)

69 
	#movL1
 70

	)

70 
	#movli°Mn
 71

	)

71 
	#movMs
 72

	)

72 
	#movR
 73

	)

73 
	#movR1
 74

	)

74 
	#movU
 75

	)

75 
	#movU1
 76

	)

76 
	#msgs
 77

	)

77 
	#mu…im≠
 78

	)

78 
	#√wT
 79

	)

79 
	#√xtBf
 80

	)

80 
	#√xtD
 81

	)

81 
	#√xtL
 82

	)

82 
	#√xtLU
 83

	)

83 
	#√xtA
 84

	)

84 
	#√xtMk
 85

	)

85 
	#pgF‹e
 86

	)

86 
	#√xtR
 87

	)

87 
	#√xtRD
 88

	)

88 
	#√xtT
 89

	)

89 
	#√xtU
 90

	)

90 
	#√xtVA
 91

	)

91 
	#movRW
 92

	)

92 
	#ldO±
 95

	)

93 
	#pcm≠
 96

	)

94 
	#curURL
 97

	)

95 
	#≥ekIMG
 98

	)

96 
	#≥ekURL
 99

	)

97 
	#pùeBuf
 100

	)

98 
	#pùesh
 101

	)

99 
	#¥evBf
 102

	)

100 
	#¥evA
 103

	)

101 
	#¥evMk
 104

	)

102 
	#pgBack
 105

	)

103 
	#¥evT
 106

	)

104 
	#¥evVA
 107

	)

105 
	#movLW
 108

	)

106 
	#svBuf
 109

	)

107 
	#qquôfm
 110

	)

108 
	#ªadsh
 111

	)

109 
	#ªdoPos
 112

	)

110 
	#rdrwSc
 113

	)

111 
	#ªM¨k
 114

	)

112 
	#ªöô
 115

	)

113 
	#ªlﬂd
 116

	)

114 
	#ªsh≠e
 117

	)

115 
	#cﬁ1R
 118

	)

116 
	#svI
 120

	)

117 
	#svA
 121

	)

118 
	#§chf‹
 123

	)

119 
	#§chbak
 124

	)

120 
	#§chnxt
 126

	)

121 
	#§ch¥v
 127

	)

122 
	#£lBuf
 128

	)

123 
	#£lMn
 129

	)

124 
	#£tEnv
 130

	)

125 
	#£tO±
 131

	)

126 
	#shi·l
 133

	)

127 
	#shi·r
 134

	)

128 
	#vwSrc
 135

	)

129 
	#°›I
 136

	)

130 
	#submôF‹m
 137

	)

131 
	#èbURL
 139

	)

132 
	#èbrURL
 140

	)

133 
	#èbL
 141

	)

134 
	#èbA
 142

	)

135 
	#èbMn
 143

	)

136 
	#èbMs
 144

	)

137 
	#èbR
 145

	)

138 
	#undoPos
 146

	)

139 
	#lup1
 147

	)

140 
	#di•Vî
 148

	)

141 
	#fﬁlowI
 151

	)

142 
	#wøpToggÀ
 153

	)

	@functable.c

1 
	~"hash.h
"

2 
	~<°dio.h
>

3 
	~"fun˙ame1.h
"

4 
HashIãm_si
 
	gMyHashIãm
[] = {

5  {"SUSPEND",
FUNCNAME_su•
,&
MyHashIãm
[1]},

6  {"SET_OPTION",
FUNCNAME_£tO±
,&
MyHashIãm
[2]},

7  {"GOOGLE_WORD",
FUNCNAME_googÀw‹d
,&
MyHashIãm
[3]},

8  {"END",
FUNCNAME_goLöeL
,
NULL
},

9  {"VIEW",
FUNCNAME_vwSrc
,
NULL
},

10  {"PREV_VISITED",
FUNCNAME_¥evVA
,&
MyHashIãm
[6]},

11  {"EXTERN",
FUNCNAME_extbrz
,
NULL
},

12  {"UNDO",
FUNCNAME_undoPos
,
NULL
},

13  {"SHELL",
FUNCNAME_execsh
,&
MyHashIãm
[9]},

14  {"RIGHT",
FUNCNAME_cﬁ1R
,&
MyHashIãm
[10]},

15  {"PREV_WORD",
FUNCNAME_movLW
,&
MyHashIãm
[11]},

16  {"LEFT",
FUNCNAME_cﬁ1L
,&
MyHashIãm
[12]},

17  {"INTERRUPT",
FUNCNAME_su•
,
NULL
},

18  {"TAB_GOTO_RELATIVE",
FUNCNAME_èbrURL
,
NULL
},

19  {"NEXT_UP",
FUNCNAME_√xtU
,
NULL
},

20  {"CLOSE_TAB_MOUSE",
FUNCNAME_˛o£TMs
,
NULL
},

21  {"DOWN",
FUNCNAME_ldown1
,
NULL
},

22  {"HISTORY",
FUNCNAME_ldHi°
,
NULL
},

23  {"SEARCH",
FUNCNAME_§chf‹
,&
MyHashIãm
[19]},

24  {"NEXT_VISITED",
FUNCNAME_√xtVA
,&
MyHashIãm
[20]},

25  {"NEXT_LEFT_UP",
FUNCNAME_√xtLU
,&
MyHashIãm
[21]},

26  {"MOVE_UP",
FUNCNAME_movU
,&
MyHashIãm
[22]},

27  {"DOWNLOAD",
FUNCNAME_svSrc
,
NULL
},

28  {"VIEW_IMAGE",
FUNCNAME_fﬁlowI
,&
MyHashIãm
[24]},

29  {"MARK",
FUNCNAME__m¨k
,&
MyHashIãm
[25]},

30  {"INFO",
FUNCNAME_pgöfo
,
NULL
},

31  {"VERSION",
FUNCNAME_di•Vî
,&
MyHashIãm
[27]},

32  {"BEGIN",
FUNCNAME_goLöeF
,
NULL
},

33  {"REDRAW",
FUNCNAME_rdrwSc
,
NULL
},

34  {"QUIT",
FUNCNAME_qquôfm
,&
MyHashIãm
[30]},

35  {"DOWNLOAD_LIST",
FUNCNAME_ldDL
,
NULL
},

36  {"REG_MARK",
FUNCNAME_ªM¨k
,
NULL
},

37  {"MOVE_RIGHT",
FUNCNAME_movR
,
NULL
},

38  {"MARK_MID",
FUNCNAME_chkNMID
,&
MyHashIãm
[34]},

39  {"LOAD",
FUNCNAME_ldfûe
,
NULL
},

40  {"EXEC_SHELL",
FUNCNAME_execsh
,
NULL
},

41  {"VIEW_BOOKMARK",
FUNCNAME_ldBm¨k
,&
MyHashIãm
[37]},

42  {"TAB_MOUSE",
FUNCNAME_èbMs
,&
MyHashIãm
[38]},

43  {"STOP_IMAGE",
FUNCNAME_°›I
,
NULL
},

44  {"SHIFT_RIGHT",
FUNCNAME_shi·r
,&
MyHashIãm
[40]},

45  {"SEARCH_NEXT",
FUNCNAME_§chnxt
,
NULL
},

46  {"PEEK",
FUNCNAME_curURL
,
NULL
},

47  {"DICT_WORD_AT",
FUNCNAME_di˘w‹d©
,
NULL
},

48  {"SOURCE",
FUNCNAME_vwSrc
,&
MyHashIãm
[44]},

49  {"SAVE_LINK",
FUNCNAME_svA
,&
MyHashIãm
[45]},

50  {"GOTO",
FUNCNAME_goURL
,&
MyHashIãm
[46]},

51  {"ACCESSKEY",
FUNCNAME_ac˚ssKey
,
NULL
},

52  {"ABORT",
FUNCNAME_quôfm
,
NULL
},

53  {"MENU",
FUNCNAME_maöMn
,
NULL
},

54  {"PCMAP",
FUNCNAME_pcm≠
,&
MyHashIãm
[50]},

55  {"EXIT",
FUNCNAME_quôfm
,
NULL
},

56  {"LINE_INFO",
FUNCNAME_cuæno
,&
MyHashIãm
[52]},

57  {"ADD_BOOKMARK",
FUNCNAME_adBm¨k
,
NULL
},

58  {"WHEREIS",
FUNCNAME_§chf‹
,&
MyHashIãm
[54]},

59  {"SELECT_MENU",
FUNCNAME_£lMn
,&
MyHashIãm
[55]},

60  {"GOTO_LINE",
FUNCNAME_goLöe
,
NULL
},

61  {"MOUSE",
FUNCNAME_mou£
,
NULL
},

62  {"PIPE_BUF",
FUNCNAME_pùeBuf
,&
MyHashIãm
[58]},

63  {"LINK_BEGIN",
FUNCNAME_t›A
,
NULL
},

64  {"PEEK_IMG",
FUNCNAME_≥ekIMG
,
NULL
},

65  {"CHARSET",
FUNCNAME_docCSë
,
NULL
},

66  {"GOTO_LINK",
FUNCNAME_fﬁlowA
,&
MyHashIãm
[62]},

67  {"EXTERN_LINK",
FUNCNAME_lökbrz
,
NULL
},

68  {"MARK_WORD",
FUNCNAME_chkWORD
,&
MyHashIãm
[64]},

69  {"GOOGLE_LUCKY_WORD",
FUNCNAME_googÀluckyw‹d
,
NULL
},

70  {"MOVE_LIST_MENU",
FUNCNAME_movli°Mn
,&
MyHashIãm
[66]},

71  {"LINK_MENU",
FUNCNAME_lökMn
,
NULL
},

72  {"GOOGLE_LUCKY_WORD_AT",
FUNCNAME_googÀluckyw‹d©
,
NULL
},

73  {"REDO",
FUNCNAME_ªdoPos
,&
MyHashIãm
[69]},

74  {"BOOKMARK",
FUNCNAME_ldBm¨k
,
NULL
},

75  {"NEXT_RIGHT_DOWN",
FUNCNAME_√xtRD
,&
MyHashIãm
[71]},

76  {"NEXT_LEFT",
FUNCNAME_√xtL
,&
MyHashIãm
[72]},

77  {"COMMAND",
FUNCNAME_execCmd
,&
MyHashIãm
[73]},

78  {"@@@",
FUNCNAME_nulcmd
,
NULL
},

79  {"RESHAPE",
FUNCNAME_ªsh≠e
,&
MyHashIãm
[75]},

80  {"ALARM",
FUNCNAME_£tAœrm
,
NULL
},

81  {"UP",
FUNCNAME_lup1
,&
MyHashIãm
[77]},

82  {"SETENV",
FUNCNAME_£tEnv
,&
MyHashIãm
[78]},

83  {"RELOAD",
FUNCNAME_ªlﬂd
,&
MyHashIãm
[79]},

84  {"LIST",
FUNCNAME_lökL°
,
NULL
},

85  {"NEXT_PAGE",
FUNCNAME_pgF‹e
,&
MyHashIãm
[81]},

86  {"MOVE_MOUSE",
FUNCNAME_movMs
,&
MyHashIãm
[82]},

87  {"DISPLAY_IMAGE",
FUNCNAME_di•I
,
NULL
},

88  {"TAB_LEFT",
FUNCNAME_èbL
,&
MyHashIãm
[84]},

89  {"PIPE_SHELL",
FUNCNAME_pùesh
,&
MyHashIãm
[85]},

90  {"NEXT_TAB",
FUNCNAME_√xtT
,&
MyHashIãm
[86]},

91  {"NEXT_DOWN",
FUNCNAME_√xtD
,
NULL
},

92  {"MAIN_MENU",
FUNCNAME_maöMn
,&
MyHashIãm
[88]},

93  {"LIST_MENU",
FUNCNAME_li°Mn
,
NULL
},

94  {"REINIT",
FUNCNAME_ªöô
,&
MyHashIãm
[90]},

95  {"EDIT",
FUNCNAME_edôBf
,
NULL
},

96  {"SAVE_IMAGE",
FUNCNAME_svI
,&
MyHashIãm
[92]},

97  {"NEXT_MARK",
FUNCNAME_√xtMk
,&
MyHashIãm
[93]},

98  {"COOKIE",
FUNCNAME_cooL°
,
NULL
},

99  {"LINK_END",
FUNCNAME_œ°A
,&
MyHashIãm
[95]},

100  {"LINE_BEGIN",
FUNCNAME_löbeg
,&
MyHashIãm
[96]},

101  {"DELETE_PREVBUF",
FUNCNAME_dñëePªvBuf
,
NULL
},

102  {"WRAP_TOGGLE",
FUNCNAME_wøpToggÀ
,
NULL
},

103  {"DEFAULT_CHARSET",
FUNCNAME_defCSë
,
NULL
},

104  {"NOTHING",
FUNCNAME_nulcmd
,&
MyHashIãm
[100]},

105  {"FRAME",
FUNCNAME_rFøme
,
NULL
},

106  {"SEARCH_PREV",
FUNCNAME_§ch¥v
,&
MyHashIãm
[102]},

107  {"NEXT",
FUNCNAME_√xtBf
,&
MyHashIãm
[103]},

108  {"LINE_END",
FUNCNAME_löíd
,
NULL
},

109  {"SELECT",
FUNCNAME_£lBuf
,
NULL
},

110  {"PREV_TAB",
FUNCNAME_¥evT
,&
MyHashIãm
[106]},

111  {"MOVE_LEFT",
FUNCNAME_movL
,
NULL
},

112  {"SEARCH_BACK",
FUNCNAME_§chbak
,&
MyHashIãm
[108]},

113  {"SAVE",
FUNCNAME_svSrc
,
NULL
},

114  {"SHIFT_LEFT",
FUNCNAME_shi·l
,&
MyHashIãm
[110]},

115  {"READ_SHELL",
FUNCNAME_ªadsh
,&
MyHashIãm
[111]},

116  {"PRINT",
FUNCNAME_svBuf
,&
MyHashIãm
[112]},

117  {"MOVE_DOWN",
FUNCNAME_movD
,&
MyHashIãm
[113]},

118  {"EDIT_SCREEN",
FUNCNAME_edôS¸
,
NULL
},

119  {"ISEARCH_BACK",
FUNCNAME_i§chbak
,
NULL
},

120  {"NEXT_LINK",
FUNCNAME_√xtA
,
NULL
},

121  {"MSGS",
FUNCNAME_msgs
,
NULL
},

122  {"MULTIMAP",
FUNCNAME_mu…im≠
,&
MyHashIãm
[118]},

123  {"CENTER_H",
FUNCNAME_˘rC§H
,
NULL
},

124  {"TAB_LINK",
FUNCNAME_èbA
,&
MyHashIãm
[120]},

125  {"TAB_GOTO",
FUNCNAME_èbURL
,&
MyHashIãm
[121]},

126  {"PREV_PAGE",
FUNCNAME_pgBack
,
NULL
},

127  {"SAVE_SCREEN",
FUNCNAME_svBuf
,
NULL
},

128  {"TAB_MENU",
FUNCNAME_èbMn
,&
MyHashIãm
[124]},

129  {"SEARCH_FORE",
FUNCNAME_§chf‹
,&
MyHashIãm
[125]},

130  {"MOVE_UP1",
FUNCNAME_movU1
,&
MyHashIãm
[126]},

131  {"MOVE_LEFT1",
FUNCNAME_movL1
,
NULL
},

132  {"PREV_MARK",
FUNCNAME_¥evMk
,&
MyHashIãm
[128]},

133  {"PEEK_LINK",
FUNCNAME_≥ekURL
,
NULL
},

134  {"MARK_URL",
FUNCNAME_chkURL
,
NULL
},

135  {"GOTO_RELATIVE",
FUNCNAME_g‹URL
,
NULL
},

136  {"SUBMIT",
FUNCNAME_submôF‹m
,
NULL
},

137  {"NEXT_WORD",
FUNCNAME_movRW
,&
MyHashIãm
[133]},

138  {"NEW_TAB",
FUNCNAME_√wT
,&
MyHashIãm
[134]},

139  {"HELP",
FUNCNAME_ldhñp
,
NULL
},

140  {"MOVE_DOWN1",
FUNCNAME_movD1
,
NULL
},

141  {"ISEARCH",
FUNCNAME_i§chf‹
,
NULL
},

142  {"NEXT_RIGHT",
FUNCNAME_√xtR
,&
MyHashIãm
[138]},

143  {"CLOSE_TAB",
FUNCNAME_˛o£T
,&
MyHashIãm
[139]},

144  {"CENTER_V",
FUNCNAME_˘rC§V
,
NULL
},

145  {"MOVE_RIGHT1",
FUNCNAME_movR1
,
NULL
},

146  {"ESCMAP",
FUNCNAME_escm≠
,&
MyHashIãm
[142]},

147  {"ESCBMAP",
FUNCNAME_escbm≠
,
NULL
},

148  {"MENU_MOUSE",
FUNCNAME_míuMs
,
NULL
},

149  {"PREV",
FUNCNAME_¥evBf
,&
MyHashIãm
[145]},

150  {"NULL",
FUNCNAME_nulcmd
,&
MyHashIãm
[146]},

151  {"DICT_WORD",
FUNCNAME_di˘w‹d
,
NULL
},

152  {"GOOGLE_WORD_AT",
FUNCNAME_googÀw‹d©
,
NULL
},

153  {"PREV_LINK",
FUNCNAME_¥evA
,
NULL
},

154  {"TAB_RIGHT",
FUNCNAME_èbR
,
NULL
},

155  {"MOUSE_TOGGLE",
FUNCNAME_msToggÀ
,&
MyHashIãm
[151]},

156  {"BACK",
FUNCNAME_backBf
,
NULL
},

157  {"OPTIONS",
FUNCNAME_ldO±
,&
MyHashIãm
[153]},

158  {"DEFINE_KEY",
FUNCNAME_defKey
,
NULL
},

161 
HashIãm_si
 *
	gMyHashIãmTbl
[] = {

162 &
MyHashIãm
[0],

163 
NULL
,

164 
NULL
,

165 
NULL
,

166 
NULL
,

167 &
MyHashIãm
[4],

168 &
MyHashIãm
[5],

169 &
MyHashIãm
[7],

170 &
MyHashIãm
[8],

171 &
MyHashIãm
[13],

172 &
MyHashIãm
[14],

173 &
MyHashIãm
[15],

174 &
MyHashIãm
[16],

175 &
MyHashIãm
[17],

176 &
MyHashIãm
[18],

177 &
MyHashIãm
[23],

178 &
MyHashIãm
[26],

179 &
MyHashIãm
[28],

180 &
MyHashIãm
[29],

181 &
MyHashIãm
[31],

182 &
MyHashIãm
[32],

183 
NULL
,

184 &
MyHashIãm
[33],

185 
NULL
,

186 &
MyHashIãm
[35],

187 
NULL
,

188 
NULL
,

189 &
MyHashIãm
[36],

190 &
MyHashIãm
[39],

191 &
MyHashIãm
[41],

192 &
MyHashIãm
[42],

193 &
MyHashIãm
[43],

194 &
MyHashIãm
[47],

195 &
MyHashIãm
[48],

196 &
MyHashIãm
[49],

197 &
MyHashIãm
[51],

198 
NULL
,

199 &
MyHashIãm
[53],

200 
NULL
,

201 &
MyHashIãm
[56],

202 &
MyHashIãm
[57],

203 &
MyHashIãm
[59],

204 &
MyHashIãm
[60],

205 &
MyHashIãm
[61],

206 &
MyHashIãm
[63],

207 &
MyHashIãm
[65],

208 &
MyHashIãm
[67],

209 &
MyHashIãm
[68],

210 &
MyHashIãm
[70],

211 &
MyHashIãm
[74],

212 &
MyHashIãm
[76],

213 &
MyHashIãm
[80],

214 &
MyHashIãm
[83],

215 &
MyHashIãm
[87],

216 &
MyHashIãm
[89],

217 &
MyHashIãm
[91],

218 &
MyHashIãm
[94],

219 &
MyHashIãm
[97],

220 &
MyHashIãm
[98],

221 &
MyHashIãm
[99],

222 &
MyHashIãm
[101],

223 
NULL
,

224 &
MyHashIãm
[104],

225 
NULL
,

226 &
MyHashIãm
[105],

227 &
MyHashIãm
[107],

228 
NULL
,

229 
NULL
,

230 &
MyHashIãm
[109],

231 &
MyHashIãm
[114],

232 
NULL
,

233 &
MyHashIãm
[115],

234 
NULL
,

235 &
MyHashIãm
[116],

236 &
MyHashIãm
[117],

237 &
MyHashIãm
[119],

238 &
MyHashIãm
[122],

239 &
MyHashIãm
[123],

240 
NULL
,

241 &
MyHashIãm
[127],

242 &
MyHashIãm
[129],

243 &
MyHashIãm
[130],

244 &
MyHashIãm
[131],

245 
NULL
,

246 &
MyHashIãm
[132],

247 &
MyHashIãm
[135],

248 &
MyHashIãm
[136],

249 
NULL
,

250 &
MyHashIãm
[137],

251 &
MyHashIãm
[140],

252 &
MyHashIãm
[141],

253 &
MyHashIãm
[143],

254 &
MyHashIãm
[144],

255 
NULL
,

256 &
MyHashIãm
[147],

257 &
MyHashIãm
[148],

258 &
MyHashIãm
[149],

259 &
MyHashIãm
[150],

260 
NULL
,

261 &
MyHashIãm
[152],

264 
Hash_si
 
	gfun˘abÀ
 = {100, 
MyHashIãmTbl
};

	@hash.c

2 
	~<°rög.h
>

3 
	~"hash.h
"

4 
	~<gc.h
>

7 
	$hashfunc
(*
s
)

9 
h
 = 0;

10 *
s
) {

11 i‡(
h
 & 0x80000000) {

12 
h
 <<= 1;

13 
h
 |= 1;

16 
h
 <<= 1;

17 
h
 +*
s
;

18 
s
++;

20  
h
;

21 
	}
}

23 
	#keycomp
(
x
,
y
Ë!
	`°rcmp
(x,y)

	)

26 
	$defhashfunc
(*, , 
si
)

27 
	$defhashfunc
(*, *, 
ss
)

28 
	$defhashfunc
(*, *, 
sv
)

29 
	`defhashfunc_i
(, *, 
iv
)

	@hash.h

2 #i‚de‡
HASH_H


3 
	#HASH_H


	)

7 
	#defhash
(
keyty≥
,
ty≥
,
sym
) \

8 
HashIãm_
##
	tsym
 { \

9 
keyty≥
 
key
; \

10 
ty≥
 
vÆue
; \

11 
HashIãm_
##
sym
 *
√xt
; \

12 } 
	tHashIãm_
##
	tsym
; \

13 
Hash_
##
	tsym
 { \

14 
size
; \

15 
HashIãm_
##
sym
 **
èb
; \

16 } 
	tHash_
##
	tsym
; \

17 
Hash_
##
sym
 *
√wHash_
##
	`sym
(
size
); \

18 
putHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, 
ty≥
 
vÆue
); \

19 
ty≥
 
gëHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
,Åy≥ 
ÁûvÆ
);

	)

21 
	$defhash
(*, , 
si
)

22 
	$defhash
(*, *, 
ss
)

23 
	$defhash
(*, *, 
sv
)

24 
	$defhash
(, *, 
iv
)

25 
	#defhashfunc
(
keyty≥
,
ty≥
,
sym
) \

26 
Hash_
##
sym
 * \

27 
√wHash_
##
	`sym
(
size
)\

29 
Hash_
##
sym
 *
hash
;\

30 
i
;\

32 
hash
 = (
Hash_
##
sym
*)
	`GC_mÆloc
((Hash_##sym));\

33 
hash
->
size
 = size;\

34 
hash
->
èb
 = (
HashIãm_
##
sym
**)
	`GC_mÆloc
(
size
*(HashItem_##sym*));\

35 
i
 = 0; i < 
size
; i++)\

36 
hash
->
èb
[
i
] = 
NULL
;\

37  
hash
;\

38 
	}
}\

40 
HashIãm_
##
sym
* \

41 
lookupHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, *
hashvÆ_ªtu∫
)\

43 
HashIãm_
##
sym
 *
hi
;\

45 *
hashvÆ_ªtu∫
 = 
	`hashfunc
(
key
)%
t
->
size
;\

46 
hi
 = 
t
->
èb
[*
hashvÆ_ªtu∫
]; hò!
NULL
; hòhi->
√xt
) {\

47 i‡(
	`keycomp
(
hi
->
key
,key))\

48  
hi
;\

50  
NULL
;\

54 
putHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, 
ty≥
 
vÆue
)\

56 
h
;\

57 
HashIãm_
##
sym
 *
hi
;\

59 
hi
 = 
lookupHash_
##
	`sym
(
t
,
key
,&
h
);\

60 i‡(
hi
) {\

61 
hi
->
vÆue
 = value;\

65 
hi
 = (
HashIãm_
##
sym
*)
	`GC_mÆloc
((HashItem_##sym));\

66 
hi
->
key
 = key;\

67 
hi
->
vÆue
 = value;\

68 
hi
->
√xt
 = 
t
->
èb
[
h
];\

69 
t
->
èb
[
h
] = 
hi
;\

72 
ty≥
 \

73 
gëHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, 
ty≥
 
ÁûvÆ
)\

75 
h
;\

76 
HashIãm_
##
sym
 *
hi
;\

78 
hi
 = 
lookupHash_
##
	`sym
(
t
,
key
,&
h
);\

79 i‡(
hi
 =
NULL
)\

80  
ÁûvÆ
;\

81  
hi
->
vÆue
;\

82 }

	)

83 
	#defhashfunc_i
(
keyty≥
,
ty≥
,
sym
) \

84 
Hash_
##
sym
 * \

85 
√wHash_
##
	`sym
(
size
)\

87 
Hash_
##
sym
 *
hash
;\

88 
i
;\

90 
hash
 = (
Hash_
##
sym
*)
	`GC_mÆloc
((Hash_##sym));\

91 
hash
->
size
 = size;\

92 
hash
->
èb
 = (
HashIãm_
##
sym
**)
	`GC_mÆloc
(
size
*(HashItem_##sym*));\

93 
i
 = 0; i < 
size
; i++)\

94 
hash
->
èb
[
i
] = 
NULL
;\

95  
hash
;\

98 
HashIãm_
##
sym
* \

99 
lookupHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, *
hashvÆ_ªtu∫
)\

101 
HashIãm_
##
sym
 *
hi
;\

103 *
hashvÆ_ªtu∫
 = 
key
%
t
->
size
;\

104 
hi
 = 
t
->
èb
[*
hashvÆ_ªtu∫
]; hò!
NULL
; hòhi->
√xt
) {\

105 i‡(
hi
->
key
 == key)\

106  
hi
;\

108  
NULL
;\

112 
putHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, 
ty≥
 
vÆue
)\

114 
h
;\

115 
HashIãm_
##
sym
 *
hi
;\

117 
hi
 = 
lookupHash_
##
	`sym
(
t
,
key
,&
h
);\

118 i‡(
hi
) {\

119 
hi
->
vÆue
 = value;\

123 
hi
 = (
HashIãm_
##
sym
*)
	`GC_mÆloc
((HashItem_##sym));\

124 
hi
->
key
 = key;\

125 
hi
->
vÆue
 = value;\

126 
hi
->
√xt
 = 
t
->
èb
[
h
];\

127 
t
->
èb
[
h
] = 
hi
;\

130 
ty≥
 \

131 
gëHash_
##
	`sym
(
Hash_
##
sym
 *
t
, 
keyty≥
 
key
, 
ty≥
 
ÁûvÆ
)\

133 
h
;\

134 
HashIãm_
##
sym
 *
hi
;\

136 
hi
 = 
lookupHash_
##
	`sym
(
t
,
key
,&
h
);\

137 i‡(
hi
 =
NULL
)\

138  
ÁûvÆ
;\

139  
hi
->
vÆue
;\

140 }

	)

	@history.c

2 
	~"fm.h
"

4 #ifde‡
USE_HISTORY


5 
Buf„r
 *

6 
	$hi°‹yBuf„r
(
Hi°
 *
hi°
)

8 
Så
 
§c
 = 
	`Så√w
();

9 
Hi°Iãm
 *
ôem
;

10 *
p
, *
q
;

13 
	`Såˇt_ch¨p
(
§c
, "<html>\n<head><title>History Page</title></head>\n");

14 
	`Såˇt_ch¨p
(
§c
, "<body>\n<h1>History Page</h1>\n<hr>\n");

15 
	`Såˇt_ch¨p
(
§c
, "<ol>\n");

16 i‡(
hi°
 && hi°->
li°
) {

17 
ôem
 = 
hi°
->
li°
->
œ°
; iãm; iãm = iãm->
¥ev
) {

18 
q
 = 
	`html_quŸe
((*)
ôem
->
±r
);

19 i‡(
DecodeURL
)

20 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
((*)
ôem
->
±r
, 0));

22 
p
 = 
q
;

23 
	`Såˇt_ch¨p
(
§c
, "<li><a href=\"");

24 
	`Såˇt_ch¨p
(
§c
, 
q
);

25 
	`Såˇt_ch¨p
(
§c
, "\">");

26 
	`Såˇt_ch¨p
(
§c
, 
p
);

27 
	`Såˇt_ch¨p
(
§c
, "</a>\n");

30 
	`Såˇt_ch¨p
(
§c
, "</ol>\n</body>\n</html>");

31  
	`lﬂdHTMLSåög
(
§c
);

32 
	}
}

35 
	$lﬂdHi°‹y
(
Hi°
 *
hi°
)

37 
FILE
 *
f
;

38 
Så
 
löe
;

40 i‡(
hi°
 =
NULL
)

42 i‡((
f
 = 
	`f›í
(
	`rcFûe
(
HISTORY_FILE
), "π")Ë=
NULL
)

45 !
	`„of
(
f
)) {

46 
löe
 = 
	`Såfgës
(
f
);

47 
	`Såch›
(
löe
);

48 
	`Såªmovefú°•a˚s
(
löe
);

49 
	`Såªmovëøûög•a˚s
(
löe
);

50 i‡(
löe
->
Àngth
 == 0)

52 
	`pushHi°
(
hi°
, 
	`uæ_quŸe
(
löe
->
±r
));

54 
	`f˛o£
(
f
);

55 
	}
}

58 
	$ßveHi°‹y
(
Hi°
 *
hi°
, 
size_t
 
size
)

60 
FILE
 *
f
;

61 
Hi°Iãm
 *
ôem
;

62 *
tmpf
;

64 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

66 
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

67 i‡((
f
 = 
	`f›í
(
tmpf
, "w")Ë=
NULL
) {

69 
	`di•_îr_mesßge
("C™'à›í hi°‹y", 
FALSE
);

72 
ôem
 = 
hi°
->
li°
->
fú°
; iãm && hi°->li°->
nôem
 > 
size
;

73 
ôem
 = iãm->
√xt
)

74 
size
++;

75 ; 
ôem
; iãm = iãm->
√xt
)

76 
	`Ârötf
(
f
, "%s\n", (*)
ôem
->
±r
);

77 i‡(
	`f˛o£
(
f
Ë=
EOF
) {

79 
	`di•_îr_mesßge
("C™'àßvêhi°‹y", 
FALSE
);

82 
	`ª«me
(
tmpf
, 
	`rcFûe
(
HISTORY_FILE
));

83 
	}
}

86 
Hi°
 *

87 
	$√wHi°
()

89 
Hi°
 *
hi°
;

91 
hi°
 = 
	`New
(
Hi°
);

92 
hi°
->
li°
 = (
Hi°Li°
 *)
	`√wGíîÆLi°
();

93 
hi°
->
cuºít
 = 
NULL
;

94 
hi°
->
hash
 = 
NULL
;

95  
hi°
;

96 
	}
}

98 
Hi°
 *

99 
	$c›yHi°
(
Hi°
 *
hi°
)

101 
Hi°
 *
√w
;

102 
Hi°Iãm
 *
ôem
;

104 i‡(
hi°
 =
NULL
)

105  
NULL
;

106 
√w
 = 
	`√wHi°
();

107 
ôem
 = 
hi°
->
li°
->
fú°
; iãm; iãm = iãm->
√xt
)

108 
	`pushHi°
(
√w
, (*)
ôem
->
±r
);

109  
√w
;

110 
	}
}

112 
Hi°Iãm
 *

113 
	$unshi·Hi°
(
Hi°
 *
hi°
, *
±r
)

115 
Hi°Iãm
 *
ôem
;

117 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

118  
NULL
;

119 
ôem
 = (
Hi°Iãm
 *)
	`√wLi°Iãm
((*)
	`ÆlocSå
(
±r
, -1),

120 (
Li°Iãm
 *)
hi°
->
li°
->
fú°
, 
NULL
);

121 i‡(
hi°
->
li°
->
fú°
)

122 
hi°
->
li°
->
fú°
->
¥ev
 = 
ôem
;

124 
hi°
->
li°
->
œ°
 = 
ôem
;

125 
hi°
->
li°
->
fú°
 = 
ôem
;

126 
hi°
->
li°
->
nôem
++;

127  
ôem
;

128 
	}
}

130 
Hi°Iãm
 *

131 
	$pushHi°
(
Hi°
 *
hi°
, *
±r
)

133 
Hi°Iãm
 *
ôem
;

135 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

136  
NULL
;

137 
ôem
 = (
Hi°Iãm
 *)
	`√wLi°Iãm
((*)
	`ÆlocSå
(
±r
, -1),

138 
NULL
, (
Li°Iãm
 *)
hi°
->
li°
->
œ°
);

139 i‡(
hi°
->
li°
->
œ°
)

140 
hi°
->
li°
->
œ°
->
√xt
 = 
ôem
;

142 
hi°
->
li°
->
fú°
 = 
ôem
;

143 
hi°
->
li°
->
œ°
 = 
ôem
;

144 
hi°
->
li°
->
nôem
++;

145  
ôem
;

146 
	}
}

150 
Hi°Iãm
 *

151 
	$pushHashHi°
(
Hi°
 *
hi°
, *
±r
)

153 
Hi°Iãm
 *
ôem
;

155 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

156  
NULL
;

157 
ôem
 = 
	`gëHashHi°
(
hi°
, 
±r
);

158 i‡(
ôem
) {

159 i‡(
ôem
->
√xt
)

160 
ôem
->
√xt
->
¥ev
 = item->prev;

162 
hi°
->
li°
->
œ°
 = 
ôem
->
¥ev
;

163 i‡(
ôem
->
¥ev
)

164 
ôem
->
¥ev
->
√xt
 = item->next;

166 
hi°
->
li°
->
fú°
 = 
ôem
->
√xt
;

167 
hi°
->
li°
->
nôem
--;

169 
ôem
 = 
	`pushHi°
(
hi°
, 
±r
);

170 
	`putHash_sv
(
hi°
->
hash
, 
±r
, (*)
ôem
);

171  
ôem
;

172 
	}
}

174 
Hi°Iãm
 *

175 
	$gëHashHi°
(
Hi°
 *
hi°
, *
±r
)

177 
Hi°Iãm
 *
ôem
;

179 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

180  
NULL
;

181 i‡(
hi°
->
hash
 =
NULL
) {

182 
hi°
->
hash
 = 
	`√wHash_sv
(
HIST_HASH_SIZE
);

183 
ôem
 = 
hi°
->
li°
->
fú°
; iãm; iãm = iãm->
√xt
)

184 
	`putHash_sv
(
hi°
->
hash
, (*)
ôem
->
±r
, (*)item);

186  (
Hi°Iãm
 *)
	`gëHash_sv
(
hi°
->
hash
, 
±r
, 
NULL
);

187 
	}
}

190 
	$œ°Hi°
(
Hi°
 *
hi°
)

192 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

193  
NULL
;

194 i‡(
hi°
->
li°
->
œ°
) {

195 
hi°
->
cuºít
 = hi°->
li°
->
œ°
;

196  (*)
hi°
->
cuºít
->
±r
;

198  
NULL
;

199 
	}
}

202 
	$√xtHi°
(
Hi°
 *
hi°
)

204 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

205  
NULL
;

206 i‡(
hi°
->
cuºít
 && hi°->cuºít->
√xt
) {

207 
hi°
->
cuºít
 = hi°->cuºít->
√xt
;

208  (*)
hi°
->
cuºít
->
±r
;

210  
NULL
;

211 
	}
}

214 
	$¥evHi°
(
Hi°
 *
hi°
)

216 i‡(
hi°
 =
NULL
 || hi°->
li°
 == NULL)

217  
NULL
;

218 i‡(
hi°
->
cuºít
 && hi°->cuºít->
¥ev
) {

219 
hi°
->
cuºít
 = hi°->cuºít->
¥ev
;

220  (*)
hi°
->
cuºít
->
±r
;

222  
NULL
;

223 
	}
}

	@history.h

2 #i‚de‡
HISTORY_H


3 
	#HISTORY_H


	)

5 
	~"ãxéi°.h
"

6 
	~"hash.h
"

8 
	#HIST_HASH_SIZE
 127

	)

10 
Li°Iãm
 
	tHi°Iãm
;

12 
GíîÆLi°
 
	tHi°Li°
;

15 
Hi°Li°
 *
	mli°
;

16 
Hi°Iãm
 *
	mcuºít
;

17 
Hash_sv
 *
	mhash
;

18 } 
	tHi°
;

20 
Hi°
 *
√wHi°
();

21 
Hi°
 *
c›yHi°
(Hi° *
hi°
);

22 
Hi°Iãm
 *
unshi·Hi°
(
Hi°
 *
hi°
, *
±r
);

23 
Hi°Iãm
 *
pushHi°
(
Hi°
 *
hi°
, *
±r
);

24 
Hi°Iãm
 *
pushHashHi°
(
Hi°
 *
hi°
, *
±r
);

25 
Hi°Iãm
 *
gëHashHi°
(
Hi°
 *
hi°
, *
±r
);

26 *
œ°Hi°
(
Hi°
 *
hi°
);

27 *
√xtHi°
(
Hi°
 *
hi°
);

28 *
¥evHi°
(
Hi°
 *
hi°
);

	@html.c

2 
	~"html.h
"

6 
	#ATTR_CORE
 
ATTR_ID


	)

7 
	#MAXA_CORE
 1

	)

8 
	gALST_A
[] = {

9 
ATTR_NAME
, 
ATTR_HREF
, 
ATTR_REL
, 
ATTR_CHARSET
, 
ATTR_TARGET
, 
ATTR_HSEQ
,

10 
ATTR_REFERER
,

11 
ATTR_FRAMENAME
, 
ATTR_TITLE
, 
ATTR_ACCESSKEY
, 
ATTR_CORE


13 
	#MAXA_A
 
MAXA_CORE
 + 10

	)

14 
	gALST_P
[] = { 
ATTR_ALIGN
, 
ATTR_CORE
 };

15 
	#MAXA_P
 
MAXA_CORE
 + 1

	)

16 
	gALST_UL
[] = { 
ATTR_START
, 
ATTR_TYPE
, 
ATTR_CORE
 };

17 
	#MAXA_UL
 
MAXA_CORE
 + 2

	)

18 
	gALST_LI
[] = { 
ATTR_TYPE
, 
ATTR_VALUE
, 
ATTR_CORE
 };

19 
	#MAXA_LI
 
MAXA_CORE
 + 2

	)

20 
	gALST_HR
[] = { 
ATTR_WIDTH
, 
ATTR_ALIGN
, 
ATTR_CORE
 };

21 
	#MAXA_HR
 
MAXA_CORE
 + 2

	)

22 
	gALST_LINK
[] = { 
ATTR_HREF
, 
ATTR_HSEQ
, 
ATTR_REL
, 
ATTR_REV
,

23 
ATTR_TITLE
, 
ATTR_TYPE
, 
ATTR_CORE


25 
	#MAXA_LINK
 
MAXA_CORE
 +  
ALST_LINK
/ ALST_LINK[0] - 1

	)

26 
	gALST_DL
[] = { 
ATTR_COMPACT
, 
ATTR_CORE
 };

27 
	#MAXA_DL
 
MAXA_CORE
 + 1

	)

28 
	gALST_PRE
[] = { 
ATTR_FOR_TABLE
, 
ATTR_CORE
 };

29 
	#MAXA_PRE
 
MAXA_CORE
 + 1

	)

30 
	gALST_IMG
[] =

31 { 
ATTR_SRC
, 
ATTR_ALT
, 
ATTR_WIDTH
, 
ATTR_HEIGHT
, 
ATTR_ALIGN
, 
ATTR_USEMAP
,

32 
ATTR_ISMAP
, 
ATTR_TITLE
, 
ATTR_PRE_INT
, 
ATTR_CORE


34 
	#MAXA_IMG
 
MAXA_CORE
 + 9

	)

35 
	gALST_TABLE
[] =

36 { 
ATTR_BORDER
, 
ATTR_WIDTH
, 
ATTR_HBORDER
, 
ATTR_CELLSPACING
,

37 
ATTR_CELLPADDING
, 
ATTR_VSPACE
, 
ATTR_CORE


39 
	#MAXA_TABLE
 
MAXA_CORE
 + 6

	)

40 
	gALST_META
[] = { 
ATTR_HTTP_EQUIV
, 
ATTR_CONTENT
, 
ATTR_CORE
 };

41 
	#MAXA_META
 
MAXA_CORE
 + 2

	)

42 
	gALST_FRAME
[] = { 
ATTR_SRC
, 
ATTR_NAME
, 
ATTR_CORE
 };

43 
	#MAXA_FRAME
 
MAXA_CORE
 + 2

	)

44 
	gALST_FRAMESET
[] = { 
ATTR_COLS
, 
ATTR_ROWS
, 
ATTR_CORE
 };

45 
	#MAXA_FRAMESET
 
MAXA_CORE
 + 2

	)

46 
	gALST_NOFRAMES
[] = { 
ATTR_CORE
 };

47 
	#MAXA_NOFRAMES
 
MAXA_CORE


	)

48 
	gALST_FORM
[] =

49 { 
ATTR_METHOD
, 
ATTR_ACTION
, 
ATTR_CHARSET
, 
ATTR_ACCEPT_CHARSET
,

50 
ATTR_ENCTYPE
, 
ATTR_TARGET
, 
ATTR_NAME
, 
ATTR_CORE


52 
	#MAXA_FORM
 
MAXA_CORE
 + 7

	)

53 
	gALST_INPUT
[] =

54 { 
ATTR_TYPE
, 
ATTR_VALUE
, 
ATTR_NAME
, 
ATTR_CHECKED
, 
ATTR_ACCEPT
, 
ATTR_SIZE
,

55 
ATTR_MAXLENGTH
, 
ATTR_ALT
, 
ATTR_READONLY
, 
ATTR_SRC
, 
ATTR_WIDTH
, 
ATTR_HEIGHT
,

56 
ATTR_CORE


58 
	#MAXA_INPUT
 
MAXA_CORE
 + 12

	)

59 
	gALST_TEXTAREA
[] =

60 { 
ATTR_COLS
, 
ATTR_ROWS
, 
ATTR_NAME
, 
ATTR_READONLY
, 
ATTR_CORE
 };

61 
	#MAXA_TEXTAREA
 
MAXA_CORE
 + 4

	)

62 
	gALST_SELECT
[] = { 
ATTR_NAME
, 
ATTR_MULTIPLE
, 
ATTR_CORE
 };

63 
	#MAXA_SELECT
 
MAXA_CORE
 + 2

	)

64 
	gALST_OPTION
[] =

65 { 
ATTR_VALUE
, 
ATTR_LABEL
, 
ATTR_SELECTED
, 
ATTR_CORE
 };

66 
	#MAXA_OPTION
 
MAXA_CORE
 + 3

	)

67 
	gALST_ISINDEX
[] = { 
ATTR_ACTION
, 
ATTR_PROMPT
, 
ATTR_CORE
 };

68 
	#MAXA_ISINDEX
 
MAXA_CORE
 + 2

	)

69 
	gALST_MAP
[] = { 
ATTR_NAME
, 
ATTR_CORE
 };

70 
	#MAXA_MAP
 
MAXA_CORE
 + 1

	)

71 
	gALST_AREA
[] =

72 { 
ATTR_HREF
, 
ATTR_TARGET
, 
ATTR_ALT
, 
ATTR_SHAPE
, 
ATTR_COORDS
, 
ATTR_CORE
 };

73 
	#MAXA_AREA
 
MAXA_CORE
 + 5

	)

74 
	gALST_BASE
[] = { 
ATTR_HREF
, 
ATTR_TARGET
, 
ATTR_CORE
 };

75 
	#MAXA_BASE
 
MAXA_CORE
 + 2

	)

76 
	gALST_BODY
[] = { 
ATTR_BACKGROUND
, 
ATTR_CORE
 };

77 
	#MAXA_BODY
 
MAXA_CORE
 + 1

	)

78 
	gALST_TR
[] = { 
ATTR_ALIGN
, 
ATTR_VALIGN
, 
ATTR_CORE
 };

79 
	#MAXA_TR
 
MAXA_CORE
 + 2

	)

80 
	gALST_TD
[] =

81 { 
ATTR_COLSPAN
, 
ATTR_ROWSPAN
, 
ATTR_ALIGN
, 
ATTR_VALIGN
, 
ATTR_WIDTH
,

82 
ATTR_NOWRAP
, 
ATTR_CORE


84 
	#MAXA_TD
 
MAXA_CORE
 + 6

	)

85 
	gALST_BGSOUND
[] = { 
ATTR_SRC
, 
ATTR_CORE
 };

86 
	#MAX_BGSOUND
 
MAXA_CORE
 + 1

	)

87 
	gALST_APPLET
[] = { 
ATTR_ARCHIVE
, 
ATTR_CORE
 };

88 
	#MAX_APPLET
 
MAXA_CORE
 + 1

	)

89 
	gALST_EMBED
[] = { 
ATTR_SRC
, 
ATTR_CORE
 };

90 
	#MAX_EMBED
 
MAXA_CORE
 + 1

	)

92 
	gALST_TEXTAREA_INT
[] = { 
ATTR_TEXTAREANUMBER
 };

93 
	#MAXA_TEXTAREA_INT
 1

	)

94 
	gALST_SELECT_INT
[] = { 
ATTR_SELECTNUMBER
 };

95 
	#MAXA_SELECT_INT
 1

	)

96 
	gALST_TABLE_ALT
[] = { 
ATTR_TID
 };

97 
	#MAXA_TABLE_ALT
 1

	)

98 
	gALST_SYMBOL
[] = { 
ATTR_TYPE
 };

99 
	#MAXA_SYMBOL
 1

	)

100 
	gALST_TITLE_ALT
[] = { 
ATTR_TITLE
 };

101 
	#MAXA_TITLE_ALT
 1

	)

102 
	gALST_FORM_INT
[] =

103 { 
ATTR_METHOD
, 
ATTR_ACTION
, 
ATTR_CHARSET
, 
ATTR_ACCEPT_CHARSET
,

104 
ATTR_ENCTYPE
, 
ATTR_TARGET
, 
ATTR_NAME
, 
ATTR_FID


106 
	#MAXA_FORM_INT
 8

	)

107 
	gALST_INPUT_ALT
[] =

108 { 
ATTR_HSEQ
, 
ATTR_FID
, 
ATTR_NO_EFFECT
, 
ATTR_TYPE
, 
ATTR_NAME
, 
ATTR_VALUE
,

109 
ATTR_CHECKED
, 
ATTR_ACCEPT
, 
ATTR_SIZE
, 
ATTR_MAXLENGTH
, 
ATTR_READONLY
,

110 
ATTR_TEXTAREANUMBER
,

111 
ATTR_SELECTNUMBER
, 
ATTR_ROWS
, 
ATTR_TOP_MARGIN
, 
ATTR_BOTTOM_MARGIN


113 
	#MAXA_INPUT_ALT
 16

	)

114 
	gALST_IMG_ALT
[] =

115 { 
ATTR_SRC
, 
ATTR_WIDTH
, 
ATTR_HEIGHT
, 
ATTR_USEMAP
, 
ATTR_ISMAP
, 
ATTR_HSEQ
,

116 
ATTR_XOFFSET
, 
ATTR_YOFFSET
, 
ATTR_TOP_MARGIN
, 
ATTR_BOTTOM_MARGIN
,

117 
ATTR_TITLE


119 
	#MAXA_IMG_ALT
 11

	)

120 
	gALST_NOP
[] = { 
ATTR_CORE
 };

121 
	#MAXA_NOP
 
MAXA_CORE


	)

123 
TagInfo
 
	gTagMAP
[
MAX_HTMLTAG
] = {

124 {
NULL
, NULL, 0, 0},

125 {"a", 
ALST_A
, 
MAXA_A
, 0},

126 {"/a", 
NULL
, 0, 
TFLG_END
},

127 {"h", 
ALST_P
, 
MAXA_P
, 0},

128 {"/h", 
NULL
, 0, 
TFLG_END
},

129 {"p", 
ALST_P
, 
MAXA_P
, 0},

130 {"br", 
NULL
, 0, 0},

131 {"b", 
NULL
, 0, 0},

132 {"/b", 
NULL
, 0, 
TFLG_END
},

133 {"ul", 
ALST_UL
, 
MAXA_UL
, 0},

134 {"/ul", 
NULL
, 0, 
TFLG_END
},

135 {"li", 
ALST_LI
, 
MAXA_LI
, 0},

136 {"ﬁ", 
ALST_UL
, 
MAXA_UL
, 0},

137 {"/ﬁ", 
NULL
, 0, 
TFLG_END
},

138 {"tôÀ", 
NULL
, 0, 0},

139 {"/tôÀ", 
NULL
, 0, 
TFLG_END
},

140 {"hr", 
ALST_HR
, 
MAXA_HR
, 0},

141 {"dl", 
ALST_DL
, 
MAXA_DL
, 0},

142 {"/dl", 
NULL
, 0, 
TFLG_END
},

143 {"dt", 
ALST_NOP
, 
MAXA_NOP
, 0},

144 {"dd", 
ALST_NOP
, 
MAXA_NOP
, 0},

145 {"¥e", 
ALST_PRE
, 
MAXA_PRE
, 0},

146 {"/¥e", 
NULL
, 0, 
TFLG_END
},

147 {"blockquŸe", 
ALST_NOP
, 
MAXA_NOP
, 0},

148 {"/blockquŸe", 
NULL
, 0, 
TFLG_END
},

149 {"img", 
ALST_IMG
, 
MAXA_IMG
, 0},

150 {"li°ög", 
NULL
, 0, 0},

151 {"/li°ög", 
NULL
, 0, 
TFLG_END
},

152 {"xmp", 
NULL
, 0, 0},

153 {"/xmp", 
NULL
, 0, 
TFLG_END
},

154 {"∂aöãxt", 
NULL
, 0, 0},

155 {"èbÀ", 
ALST_TABLE
, 
MAXA_TABLE
, 0},

156 {"/èbÀ", 
NULL
, 0, 
TFLG_END
},

157 {"mëa", 
ALST_META
, 
MAXA_META
, 0},

158 {"/p", 
NULL
, 0, 
TFLG_END
},

159 {"‰ame", 
ALST_FRAME
, 
MAXA_FRAME
, 0},

160 {"‰ame£t", 
ALST_FRAMESET
, 
MAXA_FRAMESET
, 0},

161 {"/‰ame£t", 
NULL
, 0, 
TFLG_END
},

162 {"˚¡î", 
NULL
, 0, 0},

163 {"/˚¡î", 
NULL
, 0, 
TFLG_END
},

164 {"f⁄t", 
NULL
, 0, 0},

165 {"/f⁄t", 
NULL
, 0, 
TFLG_END
},

166 {"f‹m", 
ALST_FORM
, 
MAXA_FORM
, 0},

167 {"/f‹m", 
NULL
, 0, 
TFLG_END
},

168 {"öput", 
ALST_INPUT
, 
MAXA_INPUT
, 0},

169 {"ãxèªa", 
ALST_TEXTAREA
, 
MAXA_TEXTAREA
, 0},

170 {"/ãxèªa", 
NULL
, 0, 
TFLG_END
},

171 {"£À˘", 
ALST_SELECT
, 
MAXA_SELECT
, 0},

172 {"/£À˘", 
NULL
, 0, 
TFLG_END
},

173 {"›ti⁄", 
ALST_OPTION
, 
MAXA_OPTION
, 0},

174 {"nobr", 
NULL
, 0, 0},

175 {"/nobr", 
NULL
, 0, 
TFLG_END
},

176 {"div", 
ALST_P
, 
MAXA_P
, 0},

177 {"/div", 
NULL
, 0, 
TFLG_END
},

178 {"isödex", 
ALST_ISINDEX
, 
MAXA_ISINDEX
, 0},

179 {"m≠", 
ALST_MAP
, 
MAXA_MAP
, 0},

180 {"/m≠", 
NULL
, 0, 
TFLG_END
},

181 {"¨ó", 
ALST_AREA
, 
MAXA_AREA
, 0},

182 {"s¸ùt", 
NULL
, 0, 0},

183 {"/s¸ùt", 
NULL
, 0, 
TFLG_END
},

184 {"ba£", 
ALST_BASE
, 
MAXA_BASE
, 0},

185 {"dñ", 
NULL
, 0, 0},

186 {"/dñ", 
NULL
, 0, 
TFLG_END
},

187 {"ös", 
NULL
, 0, 0},

188 {"/ös", 
NULL
, 0, 
TFLG_END
},

189 {"u", 
NULL
, 0, 0},

190 {"/u", 
NULL
, 0, 
TFLG_END
},

191 {"°yÀ", 
NULL
, 0, 0},

192 {"/°yÀ", 
NULL
, 0, 
TFLG_END
},

193 {"wbr", 
NULL
, 0, 0},

194 {"em", 
NULL
, 0, 0},

195 {"/em", 
NULL
, 0, 
TFLG_END
},

196 {"body", 
ALST_BODY
, 
MAXA_BODY
, 0},

197 {"/body", 
NULL
, 0, 
TFLG_END
},

198 {"å", 
ALST_TR
, 
MAXA_TR
, 0},

199 {"/å", 
NULL
, 0, 
TFLG_END
},

200 {"td", 
ALST_TD
, 
MAXA_TD
, 0},

201 {"/td", 
NULL
, 0, 
TFLG_END
},

202 {"ˇ±i⁄", 
ALST_NOP
, 
MAXA_NOP
, 0},

203 {"/ˇ±i⁄", 
NULL
, 0, 
TFLG_END
},

204 {"th", 
ALST_TD
, 
MAXA_TD
, 0},

205 {"/th", 
NULL
, 0, 
TFLG_END
},

206 {"thód", 
NULL
, 0, 0},

207 {"/thód", 
NULL
, 0, 
TFLG_END
},

208 {"tbody", 
NULL
, 0, 0},

209 {"/tbody", 
NULL
, 0, 
TFLG_END
},

210 {"tfoŸ", 
NULL
, 0, 0},

211 {"/tfoŸ", 
NULL
, 0, 
TFLG_END
},

212 {"cﬁgroup", 
NULL
, 0, 0},

213 {"/cﬁgroup", 
NULL
, 0, 
TFLG_END
},

214 {"cﬁ", 
NULL
, 0, 0},

215 {"bgsound", 
ALST_BGSOUND
, 
MAX_BGSOUND
, 0},

216 {"≠∂ë", 
ALST_APPLET
, 
MAX_APPLET
, 0},

217 {"embed", 
ALST_EMBED
, 
MAX_EMBED
, 0},

218 {"/›ti⁄", 
NULL
, 0, 
TFLG_END
},

219 {"hód", 
NULL
, 0, 0},

220 {"/hód", 
NULL
, 0, 
TFLG_END
},

221 {"do˘y≥", 
NULL
, 0, 0},

222 {"no‰ames", 
ALST_NOFRAMES
, 
MAXA_NOFRAMES
, 0},

223 {"/no‰ames", 
NULL
, 0, 
TFLG_END
},

225 {"sup", 
NULL
, 0, 0},

226 {"/sup", 
NULL
, 0, 0},

227 {"sub", 
NULL
, 0, 0},

228 {"/sub", 
NULL
, 0, 0},

229 {"lök", 
ALST_LINK
, 
MAXA_LINK
, 0},

230 {"s", 
NULL
, 0, 0},

231 {"/s", 
NULL
, 0, 
TFLG_END
},

232 {"q", 
NULL
, 0, 0},

233 {"/q", 
NULL
, 0, 
TFLG_END
},

234 {"i", 
NULL
, 0, 0},

235 {"/i", 
NULL
, 0, 
TFLG_END
},

236 {"°r⁄g", 
NULL
, 0, 0},

237 {"/°r⁄g", 
NULL
, 0, 
TFLG_END
},

238 {
NULL
, NULL, 0, 0},

239 {
NULL
, NULL, 0, 0},

240 {
NULL
, NULL, 0, 0},

241 {
NULL
, NULL, 0, 0},

242 {
NULL
, NULL, 0, 0},

243 {
NULL
, NULL, 0, 0},

244 {
NULL
, NULL, 0, 0},

247 {"£À˘_öt", 
ALST_SELECT_INT
, 
MAXA_SELECT_INT
, 
TFLG_INT
},

248 {"/£À˘_öt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

249 {"›ti⁄_öt", 
ALST_OPTION
, 
MAXA_OPTION
, 
TFLG_INT
},

250 {"ãxèªa_öt", 
ALST_TEXTAREA_INT
, 
MAXA_TEXTAREA_INT
, 
TFLG_INT
},

251 {"/ãxèªa_öt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

252 {"èbÀ_Æt", 
ALST_TABLE_ALT
, 
MAXA_TABLE_ALT
, 
TFLG_INT
},

253 {"symbﬁ", 
ALST_SYMBOL
, 
MAXA_SYMBOL
, 
TFLG_INT
},

254 {"/symbﬁ", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

255 {"¥e_öt", 
NULL
, 0, 
TFLG_INT
},

256 {"/¥e_öt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

257 {"tôÀ_Æt", 
ALST_TITLE_ALT
, 
MAXA_TITLE_ALT
, 
TFLG_INT
},

258 {"f‹m_öt", 
ALST_FORM_INT
, 
MAXA_FORM_INT
, 
TFLG_INT
},

259 {"/f‹m_öt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

260 {"dl_com∑˘", 
NULL
, 0, 
TFLG_INT
},

261 {"öput_Æt", 
ALST_INPUT_ALT
, 
MAXA_INPUT_ALT
, 
TFLG_INT
},

262 {"/öput_Æt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

263 {"img_Æt", 
ALST_IMG_ALT
, 
MAXA_IMG_ALT
, 
TFLG_INT
},

264 {"/img_Æt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

265 {" ", 
ALST_NOP
, 
MAXA_NOP
, 
TFLG_INT
},

266 {"¥e_∂aö", 
NULL
, 0, 
TFLG_INT
},

267 {"/¥e_∂aö", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

268 {"öã∫Æ", 
NULL
, 0, 
TFLG_INT
},

269 {"/öã∫Æ", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

270 {"div_öt", 
ALST_P
, 
MAXA_P
, 
TFLG_INT
},

271 {"/div_öt", 
NULL
, 0, 
TFLG_INT
 | 
TFLG_END
},

274 
TagAârInfo
 
	gAârMAP
[
MAX_TAGATTR
] = {

275 {
NULL
, 
VTYPE_NONE
, 0},

276 {"ac˚±", 
VTYPE_NONE
, 0},

277 {"ac˚±-ch¨£t", 
VTYPE_STR
, 0},

278 {"a˘i⁄", 
VTYPE_ACTION
, 0},

279 {"Æign", 
VTYPE_ALIGN
, 0},

280 {"Æt", 
VTYPE_STR
, 0},

281 {"¨chive", 
VTYPE_STR
, 0},

282 {"background", 
VTYPE_STR
, 0},

283 {"b‹dî", 
VTYPE_NUMBER
, 0},

284 {"˚Œ∑ddög", 
VTYPE_NUMBER
, 0},

285 {"˚Œ•acög", 
VTYPE_NUMBER
, 0},

286 {"ch¨£t", 
VTYPE_STR
, 0},

287 {"checked", 
VTYPE_NONE
, 0},

288 {"cﬁs", 
VTYPE_MLENGTH
, 0},

289 {"cﬁ•™", 
VTYPE_NUMBER
, 0},

290 {"c⁄ã¡", 
VTYPE_STR
, 0},

291 {"í˘y≥", 
VTYPE_ENCTYPE
, 0},

292 {"height", 
VTYPE_LENGTH
, 0},

293 {"hªf", 
VTYPE_STR
, 0},

294 {"hâp-equiv", 
VTYPE_STR
, 0},

295 {"id", 
VTYPE_STR
, 0},

296 {"lök", 
VTYPE_STR
, 0},

297 {"maxÀngth", 
VTYPE_NUMBER
, 0},

298 {"mëhod", 
VTYPE_METHOD
, 0},

299 {"mu…ùÀ", 
VTYPE_NONE
, 0},

300 {"«me", 
VTYPE_STR
, 0},

301 {"nowøp", 
VTYPE_NONE
, 0},

302 {"¥om±", 
VTYPE_STR
, 0},

303 {"rows", 
VTYPE_MLENGTH
, 0},

304 {"row•™", 
VTYPE_NUMBER
, 0},

305 {"size", 
VTYPE_NUMBER
, 0},

306 {"§c", 
VTYPE_STR
, 0},

307 {"èrgë", 
VTYPE_STR
, 0},

308 {"ty≥", 
VTYPE_TYPE
, 0},

309 {"u£m≠", 
VTYPE_STR
, 0},

310 {"vÆign", 
VTYPE_VALIGN
, 0},

311 {"vÆue", 
VTYPE_STR
, 0},

312 {"v•a˚", 
VTYPE_NUMBER
, 0},

313 {"width", 
VTYPE_LENGTH
, 0},

314 {"com∑˘", 
VTYPE_NONE
, 0},

315 {"°¨t", 
VTYPE_NUMBER
, 0},

316 {"£À˘ed", 
VTYPE_NONE
, 0},

317 {"œbñ", 
VTYPE_STR
, 0},

318 {"ªad⁄ly", 
VTYPE_NONE
, 0},

319 {"sh≠e", 
VTYPE_STR
, 0},

320 {"co‹ds", 
VTYPE_STR
, 0},

321 {"ism≠", 
VTYPE_NONE
, 0},

322 {"ªl", 
VTYPE_STR
, 0},

323 {"ªv", 
VTYPE_STR
, 0},

324 {"tôÀ", 
VTYPE_STR
, 0},

325 {"ac˚sskey", 
VTYPE_STR
, 0},

326 {
NULL
, 
VTYPE_NONE
, 0},

327 {
NULL
, 
VTYPE_NONE
, 0},

328 {
NULL
, 
VTYPE_NONE
, 0},

329 {
NULL
, 
VTYPE_NONE
, 0},

330 {
NULL
, 
VTYPE_NONE
, 0},

331 {
NULL
, 
VTYPE_NONE
, 0},

332 {
NULL
, 
VTYPE_NONE
, 0},

333 {
NULL
, 
VTYPE_NONE
, 0},

334 {
NULL
, 
VTYPE_NONE
, 0},

337 {"xoff£t", 
VTYPE_NUMBER
, 
AFLG_INT
},

338 {"yoff£t", 
VTYPE_NUMBER
, 
AFLG_INT
},

339 {"t›_m¨gö", 
VTYPE_NUMBER
, 
AFLG_INT
},

340 {"bŸtom_m¨gö", 
VTYPE_NUMBER
, 
AFLG_INT
},

341 {"tid", 
VTYPE_NUMBER
, 
AFLG_INT
},

342 {"fid", 
VTYPE_NUMBER
, 
AFLG_INT
},

343 {"f‹_èbÀ", 
VTYPE_NONE
, 
AFLG_INT
},

344 {"‰amíame", 
VTYPE_STR
, 
AFLG_INT
},

345 {"hb‹dî", 
VTYPE_NONE
, 0},

346 {"h£q", 
VTYPE_NUMBER
, 
AFLG_INT
},

347 {"no_ef„˘", 
VTYPE_NONE
, 
AFLG_INT
},

348 {"ª„ªr", 
VTYPE_STR
, 
AFLG_INT
},

349 {"£À˘numbî", 
VTYPE_NUMBER
, 
AFLG_INT
},

350 {"ãxèª™umbî", 
VTYPE_NUMBER
, 
AFLG_INT
},

351 {"¥e_öt", 
VTYPE_NONE
, 
AFLG_INT
},

	@html.h

2 #i‚de‡
_HTML_H


3 
	#_HTML_H


	)

4 #ifde‡
USE_SSL


5 
	~<›ís¶/bio.h
>

6 
	~<›ís¶/x509.h
>

7 
	~<›ís¶/s¶.h
>

10 
	~"i°ªam.h
"

12 
	#SåUFgës
(
f
Ë
	`SåISgës
((f)->
°ªam
)

	)

13 
	#SåmyUFgës
(
f
Ë
	`SåmyISgës
((f)->
°ªam
)

	)

14 
	#UFgëc
(
f
Ë
	`ISgëc
((f)->
°ªam
)

	)

15 
	#UFundogëc
(
f
Ë
	`ISundogëc
((f)->
°ªam
)

	)

16 
	#UFªad
(
f
,
buf
,
Àn
Ë
	`ISªad
((f)->
°ªam
,buf,Àn)

	)

17 
	#UF˛o£
(
f
Ë()(
	`IS˛o£
((f)->
°ªam
Ë=0 && ((f)->°ªam = 
NULL
))

	)

18 
	#UFfûío
(
f
Ë
	`ISfûío
((f)->
°ªam
)

	)

20 
	scmdèbÀ
 {

21 *
	mcmd«me
;

22 
	mcmd
;

25 
	smaûˇp
 {

26 *
	mty≥
;

27 *
	mvõwî
;

28 
	mÊags
;

29 *
	mã°
;

30 *
	m«mëem∂©e
;

31 *
	medô
;

34 
	#MAILCAP_NEEDSTERMINAL
 0x01

	)

35 
	#MAILCAP_COPIOUSOUTPUT
 0x02

	)

36 
	#MAILCAP_HTMLOUTPUT
 0x04

	)

38 
	#MCSTAT_REPNAME
 0x01

	)

39 
	#MCSTAT_REPTYPE
 0x02

	)

40 
	#MCSTAT_REPPARAM
 0x04

	)

42 
	sèbÀ2
 {

43 *
	môem1
;

44 *
	môem2
;

48 *
	mª„ªr
;

49 
	mÊag
;

50 } 
	tURLO±i⁄
;

52 
	s_P¨£dURL
 {

53 
	mscheme
;

54 *
	mu£r
;

55 *
	m∑ss
;

56 *
	mho°
;

57 
	mp‹t
;

58 *
	mfûe
;

59 *
	mªÆ_fûe
;

60 *
	mquîy
;

61 *
	mœbñ
;

62 
	mis_noˇche
;

63 } 
	tP¨£dURL
;

66 
	mscheme
;

67 
	mis_cgi
;

68 
	mícodög
;

69 
I≈utSåóm
 
	m°ªam
;

70 *
	mext
;

71 
	mcom¥essi⁄
;

72 
	mc⁄ã¡_ícodög
;

73 *
	mguess_ty≥
;

74 #ifde‡
USE_SSL


75 *
	ms¶_˚πifiˇã
;

77 *
	muæ
;

78 
time_t
 
	mmodtime
;

79 } 
	tURLFûe
;

81 
	#CMP_NOCOMPRESS
 0

	)

82 
	#CMP_COMPRESS
 1

	)

83 
	#CMP_GZIP
 2

	)

84 
	#CMP_BZIP2
 3

	)

85 
	#CMP_DEFLATE
 4

	)

87 
	#ENC_7BIT
 0

	)

88 
	#ENC_BASE64
 1

	)

89 
	#ENC_QUOTE
 2

	)

90 
	#ENC_UUENCODE
 3

	)

92 
	#HTML_UNKNOWN
 0

	)

93 
	#HTML_A
 1

	)

94 
	#HTML_N_A
 2

	)

95 
	#HTML_H
 3

	)

96 
	#HTML_N_H
 4

	)

97 
	#HTML_P
 5

	)

98 
	#HTML_BR
 6

	)

99 
	#HTML_B
 7

	)

100 
	#HTML_N_B
 8

	)

101 
	#HTML_UL
 9

	)

102 
	#HTML_N_UL
 10

	)

103 
	#HTML_LI
 11

	)

104 
	#HTML_OL
 12

	)

105 
	#HTML_N_OL
 13

	)

106 
	#HTML_TITLE
 14

	)

107 
	#HTML_N_TITLE
 15

	)

108 
	#HTML_HR
 16

	)

109 
	#HTML_DL
 17

	)

110 
	#HTML_N_DL
 18

	)

111 
	#HTML_DT
 19

	)

112 
	#HTML_DD
 20

	)

113 
	#HTML_PRE
 21

	)

114 
	#HTML_N_PRE
 22

	)

115 
	#HTML_BLQ
 23

	)

116 
	#HTML_N_BLQ
 24

	)

117 
	#HTML_IMG
 25

	)

118 
	#HTML_LISTING
 26

	)

119 
	#HTML_N_LISTING
 27

	)

120 
	#HTML_XMP
 28

	)

121 
	#HTML_N_XMP
 29

	)

122 
	#HTML_PLAINTEXT
 30

	)

123 
	#HTML_TABLE
 31

	)

124 
	#HTML_N_TABLE
 32

	)

125 
	#HTML_META
 33

	)

126 
	#HTML_N_P
 34

	)

127 
	#HTML_FRAME
 35

	)

128 
	#HTML_FRAMESET
 36

	)

129 
	#HTML_N_FRAMESET
 37

	)

130 
	#HTML_CENTER
 38

	)

131 
	#HTML_N_CENTER
 39

	)

132 
	#HTML_FONT
 40

	)

133 
	#HTML_N_FONT
 41

	)

134 
	#HTML_FORM
 42

	)

135 
	#HTML_N_FORM
 43

	)

136 
	#HTML_INPUT
 44

	)

137 
	#HTML_TEXTAREA
 45

	)

138 
	#HTML_N_TEXTAREA
 46

	)

139 
	#HTML_SELECT
 47

	)

140 
	#HTML_N_SELECT
 48

	)

141 
	#HTML_OPTION
 49

	)

142 
	#HTML_NOBR
 50

	)

143 
	#HTML_N_NOBR
 51

	)

144 
	#HTML_DIV
 52

	)

145 
	#HTML_N_DIV
 53

	)

146 
	#HTML_ISINDEX
 54

	)

147 
	#HTML_MAP
 55

	)

148 
	#HTML_N_MAP
 56

	)

149 
	#HTML_AREA
 57

	)

150 
	#HTML_SCRIPT
 58

	)

151 
	#HTML_N_SCRIPT
 59

	)

152 
	#HTML_BASE
 60

	)

153 
	#HTML_DEL
 61

	)

154 
	#HTML_N_DEL
 62

	)

155 
	#HTML_INS
 63

	)

156 
	#HTML_N_INS
 64

	)

157 
	#HTML_U
 65

	)

158 
	#HTML_N_U
 66

	)

159 
	#HTML_STYLE
 67

	)

160 
	#HTML_N_STYLE
 68

	)

161 
	#HTML_WBR
 69

	)

162 
	#HTML_EM
 70

	)

163 
	#HTML_N_EM
 71

	)

164 
	#HTML_BODY
 72

	)

165 
	#HTML_N_BODY
 73

	)

166 
	#HTML_TR
 74

	)

167 
	#HTML_N_TR
 75

	)

168 
	#HTML_TD
 76

	)

169 
	#HTML_N_TD
 77

	)

170 
	#HTML_CAPTION
 78

	)

171 
	#HTML_N_CAPTION
 79

	)

172 
	#HTML_TH
 80

	)

173 
	#HTML_N_TH
 81

	)

174 
	#HTML_THEAD
 82

	)

175 
	#HTML_N_THEAD
 83

	)

176 
	#HTML_TBODY
 84

	)

177 
	#HTML_N_TBODY
 85

	)

178 
	#HTML_TFOOT
 86

	)

179 
	#HTML_N_TFOOT
 87

	)

180 
	#HTML_COLGROUP
 88

	)

181 
	#HTML_N_COLGROUP
 89

	)

182 
	#HTML_COL
 90

	)

183 
	#HTML_BGSOUND
 91

	)

184 
	#HTML_APPLET
 92

	)

185 
	#HTML_EMBED
 93

	)

186 
	#HTML_N_OPTION
 94

	)

187 
	#HTML_HEAD
 95

	)

188 
	#HTML_N_HEAD
 96

	)

189 
	#HTML_DOCTYPE
 97

	)

190 
	#HTML_NOFRAMES
 98

	)

191 
	#HTML_N_NOFRAMES
 99

	)

192 
	#HTML_SUP
 100

	)

193 
	#HTML_N_SUP
 101

	)

194 
	#HTML_SUB
 102

	)

195 
	#HTML_N_SUB
 103

	)

196 
	#HTML_LINK
 104

	)

197 
	#HTML_S
 105

	)

198 
	#HTML_N_S
 106

	)

199 
	#HTML_Q
 107

	)

200 
	#HTML_N_Q
 108

	)

201 
	#HTML_I
 109

	)

202 
	#HTML_N_I
 110

	)

203 
	#HTML_STRONG
 111

	)

204 
	#HTML_N_STRONG
 112

	)

207 
	#HTML_SELECT_INT
 120

	)

208 
	#HTML_N_SELECT_INT
 121

	)

209 
	#HTML_OPTION_INT
 122

	)

210 
	#HTML_TEXTAREA_INT
 123

	)

211 
	#HTML_N_TEXTAREA_INT
 124

	)

212 
	#HTML_TABLE_ALT
 125

	)

213 
	#HTML_SYMBOL
 126

	)

214 
	#HTML_N_SYMBOL
 127

	)

215 
	#HTML_PRE_INT
 128

	)

216 
	#HTML_N_PRE_INT
 129

	)

217 
	#HTML_TITLE_ALT
 130

	)

218 
	#HTML_FORM_INT
 131

	)

219 
	#HTML_N_FORM_INT
 132

	)

220 
	#HTML_DL_COMPACT
 133

	)

221 
	#HTML_INPUT_ALT
 134

	)

222 
	#HTML_N_INPUT_ALT
 135

	)

223 
	#HTML_IMG_ALT
 136

	)

224 
	#HTML_N_IMG_ALT
 137

	)

225 
	#HTML_NOP
 138

	)

226 
	#HTML_PRE_PLAIN
 139

	)

227 
	#HTML_N_PRE_PLAIN
 140

	)

228 
	#HTML_INTERNAL
 141

	)

229 
	#HTML_N_INTERNAL
 142

	)

230 
	#HTML_DIV_INT
 143

	)

231 
	#HTML_N_DIV_INT
 144

	)

233 
	#MAX_HTMLTAG
 145

	)

237 
	#ATTR_UNKNOWN
 0

	)

238 
	#ATTR_ACCEPT
 1

	)

239 
	#ATTR_ACCEPT_CHARSET
 2

	)

240 
	#ATTR_ACTION
 3

	)

241 
	#ATTR_ALIGN
 4

	)

242 
	#ATTR_ALT
 5

	)

243 
	#ATTR_ARCHIVE
 6

	)

244 
	#ATTR_BACKGROUND
 7

	)

245 
	#ATTR_BORDER
 8

	)

246 
	#ATTR_CELLPADDING
 9

	)

247 
	#ATTR_CELLSPACING
 10

	)

248 
	#ATTR_CHARSET
 11

	)

249 
	#ATTR_CHECKED
 12

	)

250 
	#ATTR_COLS
 13

	)

251 
	#ATTR_COLSPAN
 14

	)

252 
	#ATTR_CONTENT
 15

	)

253 
	#ATTR_ENCTYPE
 16

	)

254 
	#ATTR_HEIGHT
 17

	)

255 
	#ATTR_HREF
 18

	)

256 
	#ATTR_HTTP_EQUIV
 19

	)

257 
	#ATTR_ID
 20

	)

258 
	#ATTR_LINK
 21

	)

259 
	#ATTR_MAXLENGTH
 22

	)

260 
	#ATTR_METHOD
 23

	)

261 
	#ATTR_MULTIPLE
 24

	)

262 
	#ATTR_NAME
 25

	)

263 
	#ATTR_NOWRAP
 26

	)

264 
	#ATTR_PROMPT
 27

	)

265 
	#ATTR_ROWS
 28

	)

266 
	#ATTR_ROWSPAN
 29

	)

267 
	#ATTR_SIZE
 30

	)

268 
	#ATTR_SRC
 31

	)

269 
	#ATTR_TARGET
 32

	)

270 
	#ATTR_TYPE
 33

	)

271 
	#ATTR_USEMAP
 34

	)

272 
	#ATTR_VALIGN
 35

	)

273 
	#ATTR_VALUE
 36

	)

274 
	#ATTR_VSPACE
 37

	)

275 
	#ATTR_WIDTH
 38

	)

276 
	#ATTR_COMPACT
 39

	)

277 
	#ATTR_START
 40

	)

278 
	#ATTR_SELECTED
 41

	)

279 
	#ATTR_LABEL
 42

	)

280 
	#ATTR_READONLY
 43

	)

281 
	#ATTR_SHAPE
 44

	)

282 
	#ATTR_COORDS
 45

	)

283 
	#ATTR_ISMAP
 46

	)

284 
	#ATTR_REL
 47

	)

285 
	#ATTR_REV
 48

	)

286 
	#ATTR_TITLE
 49

	)

287 
	#ATTR_ACCESSKEY
 50

	)

290 
	#ATTR_XOFFSET
 60

	)

291 
	#ATTR_YOFFSET
 61

	)

292 
	#ATTR_TOP_MARGIN
 62

	)

293 
	#ATTR_BOTTOM_MARGIN
 63

	)

294 
	#ATTR_TID
 64

	)

295 
	#ATTR_FID
 65

	)

296 
	#ATTR_FOR_TABLE
 66

	)

297 
	#ATTR_FRAMENAME
 67

	)

298 
	#ATTR_HBORDER
 68

	)

299 
	#ATTR_HSEQ
 69

	)

300 
	#ATTR_NO_EFFECT
 70

	)

301 
	#ATTR_REFERER
 71

	)

302 
	#ATTR_SELECTNUMBER
 72

	)

303 
	#ATTR_TEXTAREANUMBER
 73

	)

304 
	#ATTR_PRE_INT
 74

	)

306 
	#MAX_TAGATTR
 75

	)

310 
	shtml_èg_öfo
 {

311 *
	m«me
;

312 *
	mac˚±_©åibuã
;

313 
	mmax_©åibuã
;

314 
	mÊag
;

315 } 
	tTagInfo
;

317 
	#TFLG_END
 1

	)

318 
	#TFLG_INT
 2

	)

322 
	sèg_©åibuã_öfo
 {

323 *
	m«me
;

324 
	mvty≥
;

325 
	mÊag
;

326 } 
	tTagAârInfo
;

328 
	#AFLG_INT
 1

	)

330 
	#VTYPE_NONE
 0

	)

331 
	#VTYPE_STR
 1

	)

332 
	#VTYPE_NUMBER
 2

	)

333 
	#VTYPE_LENGTH
 3

	)

334 
	#VTYPE_ALIGN
 4

	)

335 
	#VTYPE_VALIGN
 5

	)

336 
	#VTYPE_ACTION
 6

	)

337 
	#VTYPE_ENCTYPE
 7

	)

338 
	#VTYPE_METHOD
 8

	)

339 
	#VTYPE_MLENGTH
 9

	)

340 
	#VTYPE_TYPE
 10

	)

342 
	#SHAPE_UNKNOWN
 0

	)

343 
	#SHAPE_DEFAULT
 1

	)

344 
	#SHAPE_RECT
 2

	)

345 
	#SHAPE_CIRCLE
 3

	)

346 
	#SHAPE_POLY
 4

	)

348 
TagInfo
 
TagMAP
[];

349 
TagAârInfo
 
AârMAP
[];

351 
	sívú⁄mít
 {

352 
	mív
;

353 
	mty≥
;

354 
	mcou¡
;

355 
	mödít
;

358 
	#MAX_ENV_LEVEL
 20

	)

359 
	#MAX_INDENT_LEVEL
 10

	)

361 
	#INDENT_INCR
 
IndítIn¸


	)

363 
	#SCM_UNKNOWN
 255

	)

364 
	#SCM_MISSING
 254

	)

365 
	#SCM_HTTP
 0

	)

366 
	#SCM_GOPHER
 1

	)

367 
	#SCM_FTP
 2

	)

368 
	#SCM_FTPDIR
 3

	)

369 
	#SCM_LOCAL
 4

	)

370 
	#SCM_LOCAL_CGI
 5

	)

371 
	#SCM_EXEC
 6

	)

372 
	#SCM_NNTP
 7

	)

373 
	#SCM_NNTP_GROUP
 8

	)

374 
	#SCM_NEWS
 9

	)

375 
	#SCM_NEWS_GROUP
 10

	)

376 
	#SCM_DATA
 11

	)

377 
	#SCM_MAILTO
 12

	)

378 #ifde‡
USE_SSL


379 
	#SCM_HTTPS
 13

	)

	@image.c

3 
	~"fm.h
"

4 
	~<sys/ty≥s.h
>

5 
	~<sys/°©.h
>

6 
	~<sig«l.h
>

7 
	~<î∫o.h
>

8 
	~<uni°d.h
>

9 #ifde‡
HAVE_WAITPID


10 
	~<sys/waô.h
>

13 #ifde‡
USE_IMAGE


15 
	gimage_ödex
 = 0;

19 
	s_ãrmülImage
 {

20 
ImageCache
 *
	mˇche
;

21 
	mx
;

22 
	my
;

23 
	msx
;

24 
	msy
;

25 
	mwidth
;

26 
	mheight
;

27 } 
	tTîmöÆImage
;

29 
TîmöÆImage
 *
	gãrmöÆ_image
 = 
NULL
;

30 
	gn_ãrmöÆ_image
 = 0;

31 
	gmax_ãrmöÆ_image
 = 0;

32 
FILE
 *
	gImgdi•œy_rf
 = 
NULL
, *
	gImgdi•œy_wf
 = NULL;

33 
pid_t
 
	gImgdi•œy_pid
 = 0;

34 
›íImgdi•œy
();

35 
˛o£Imgdi•œy
();

36 
gëCh¨Size
();

39 
	$öôImage
()

41 i‡(
a˘iveImage
)

43 i‡(
	`gëCh¨Size
())

44 
a˘iveImage
 = 
TRUE
;

45 
	}
}

48 
	$gëCh¨Size
()

50 
FILE
 *
f
;

51 
Så
 
tmp
;

52 
w
 = 0, 
h
 = 0;

54 
	`£t_ívú⁄
("W3M_TTY", 
	`ây«me_ây
());

55 
tmp
 = 
	`Så√w
();

56 i‡(!
	`°rchr
(
Imgdi•œy
, '/'))

57 
	`Såˇt_m_ch¨p
(
tmp
, 
	`w3m_auxbö_dú
(), "/", 
NULL
);

58 
	`Såˇt_m_ch¨p
(
tmp
, 
Imgdi•œy
, " -ã° 2>/dev/nuŒ", 
NULL
);

59 
f
 = 
	`p›í
(
tmp
->
±r
, "r");

60 i‡(!
f
)

61  
FALSE
;

62 
	`fsˇnf
(
f
, "%d %d", &
w
, &
h
) < 0) {

63 i‡(
	`„of
(
f
))

66 
	`p˛o£
(
f
);

68 i‡(!(
w
 > 0 && 
h
 > 0))

69  
FALSE
;

70 i‡(!
£t_pixñ_≥r_ch¨
)

71 
pixñ_≥r_ch¨
 = ()(1.0 * 
w
 / 
COLS
 + 0.5);

72 i‡(!
£t_pixñ_≥r_löe
)

73 
pixñ_≥r_löe
 = ()(1.0 * 
h
 / 
LINES
 + 0.5);

74  
TRUE
;

75 
	}
}

78 
	$ãrmImage
()

80 i‡(!
a˘iveImage
)

82 
	`˛órImage
();

83 i‡(
Imgdi•œy_wf
) {

84 
	`Âuts
("2;\n", 
Imgdi•œy_wf
);

85 
	`fÊush
(
Imgdi•œy_wf
);

87 
	`˛o£Imgdi•œy
();

88 
	}
}

91 
	$›íImgdi•œy
()

93 
Imgdi•œy_pid
 = 
	`›í_pùe_rw
(&
Imgdi•œy_rf
, &
Imgdi•œy_wf
);

94 i‡(
Imgdi•œy_pid
 < 0)

95 
îr0
;

96 i‡(
Imgdi•œy_pid
 == 0) {

98 *
cmd
;

99 
	`£tup_chûd
(
FALSE
, 2, -1);

100 i‡(!
	`°rchr
(
Imgdi•œy
, '/'))

101 
cmd
 = 
	`Så√w_m_ch¨p
(
	`w3m_auxbö_dú
(), "/", 
Imgdi•œy
, 
NULL
)->
±r
;

103 
cmd
 = 
Imgdi•œy
;

104 
	`myExec
(
cmd
);

107 
a˘iveImage
 = 
TRUE
;

108  
TRUE
;

109 
îr0
:

110 
Imgdi•œy_pid
 = 0;

111 
a˘iveImage
 = 
FALSE
;

112  
FALSE
;

113 
	}
}

116 
	$˛o£Imgdi•œy
()

118 i‡(
Imgdi•œy_rf
)

119 
	`f˛o£
(
Imgdi•œy_rf
);

120 i‡(
Imgdi•œy_wf
)

121 
	`f˛o£
(
Imgdi•œy_wf
);

122 i‡(
Imgdi•œy_pid
)

123 
	`kûl
(
Imgdi•œy_pid
, 
SIGKILL
);

124 
Imgdi•œy_rf
 = 
NULL
;

125 
Imgdi•œy_wf
 = 
NULL
;

126 
Imgdi•œy_pid
 = 0;

127 
	}
}

130 
	$addImage
(
ImageCache
 * 
ˇche
, 
x
, 
y
, 
sx
, 
sy
, 
w
, 
h
)

132 
TîmöÆImage
 *
i
;

134 i‡(!
a˘iveImage
)

136 i‡(
n_ãrmöÆ_image
 >
max_ãrmöÆ_image
) {

137 
max_ãrmöÆ_image
 = max_terminal_image ? (2 * max_terminal_image) : 8;

138 
ãrmöÆ_image
 = 
	`New_Reu£
(
TîmöÆImage
,Åerminal_image,

139 
max_ãrmöÆ_image
);

141 
i
 = &
ãrmöÆ_image
[
n_ãrmöÆ_image
];

142 
i
->
ˇche
 = cache;

143 
i
->
x
 = x;

144 
i
->
y
 = y;

145 
i
->
sx
 = sx;

146 
i
->
sy
 = sy;

147 
i
->
width
 = 
w
;

148 
i
->
height
 = 
h
;

149 
n_ãrmöÆ_image
++;

150 
	}
}

153 
	$syncImage
()

155 
	`Âuts
("3;\n", 
Imgdi•œy_wf
);

156 
	`Âuts
("4;\n", 
Imgdi•œy_wf
);

157 
	`fÊush
(
Imgdi•œy_wf
) != 0) {

158 i‡(
	`„º‹
(
Imgdi•œy_wf
))

159 
îr
;

161 i‡(!
	`fgëc
(
Imgdi•œy_rf
))

162 
îr
;

164 
îr
:

165 
	`˛o£Imgdi•œy
();

166 
image_ödex
 +
MAX_IMAGE
;

167 
n_ãrmöÆ_image
 = 0;

168 
	}
}

171 
	$døwImage
()

173 
buf
[64];

174 
j
, 
døw
 = 
FALSE
;

175 
TîmöÆImage
 *
i
;

177 i‡(!
a˘iveImage
)

179 i‡(!
n_ãrmöÆ_image
)

181 
j
 = 0; j < 
n_ãrmöÆ_image
; j++) {

182 
i
 = &
ãrmöÆ_image
[
j
];

183 i‡(!(
i
->
ˇche
->
lﬂded
 & 
IMG_FLAG_LOADED
 &&

184 
i
->
width
 > 0 && i->
height
 > 0))

186 i‡(!(
Imgdi•œy_rf
 && 
Imgdi•œy_wf
)) {

187 i‡(!
	`›íImgdi•œy
())

190 i‡(
i
->
ˇche
->
ödex
 > 0) {

191 
i
->
ˇche
->
ödex
 *= -1;

192 
	`Âuts
("0;", 
Imgdi•œy_wf
);

195 
	`Âuts
("1;", 
Imgdi•œy_wf
);

196 
	`•rötf
(
buf
, "%d;%d;%d;%d;%d;%d;%d;%d;%d;",

197 (-
i
->
ˇche
->
ödex
 - 1Ë% 
MAX_IMAGE
 + 1, i->
x
, i->
y
,

198 (
i
->
ˇche
->
width
 > 0) ? i->cache->width : 0,

199 (
i
->
ˇche
->
height
 > 0) ? i->cache->height : 0,

200 
i
->
sx
, i->
sy
, i->
width
, i->
height
);

201 
	`Âuts
(
buf
, 
Imgdi•œy_wf
);

202 
	`Âuts
(
i
->
ˇche
->
fûe
, 
Imgdi•œy_wf
);

203 
	`Âuts
("\n", 
Imgdi•œy_wf
);

204 
døw
 = 
TRUE
;

206 i‡(!
døw
)

208 
	`syncImage
();

209 
	`touch_curs‹
();

210 
	`ª‰esh
();

211 
	}
}

214 
	$˛órImage
()

216 
buf
[64];

217 
j
;

218 
TîmöÆImage
 *
i
;

220 i‡(!
a˘iveImage
)

222 i‡(!
n_ãrmöÆ_image
)

224 i‡(!
Imgdi•œy_wf
) {

225 
n_ãrmöÆ_image
 = 0;

228 
j
 = 0; j < 
n_ãrmöÆ_image
; j++) {

229 
i
 = &
ãrmöÆ_image
[
j
];

230 i‡(!(
i
->
ˇche
->
lﬂded
 & 
IMG_FLAG_LOADED
 &&

231 
i
->
width
 > 0 && i->
height
 > 0))

233 
	`•rötf
(
buf
, "6;%d;%d;%d;%d\n", 
i
->
x
, i->
y
, i->
width
, i->
height
);

234 
	`Âuts
(
buf
, 
Imgdi•œy_wf
);

236 
	`syncImage
();

237 
n_ãrmöÆ_image
 = 0;

238 
	}
}

242 #i‚de‡
MAX_LOAD_IMAGE


243 
	#MAX_LOAD_IMAGE
 8

	)

245 
	gn_lﬂd_image
 = 0;

246 
Hash_sv
 *
	gimage_hash
 = 
NULL
;

247 
Hash_sv
 *
	gimage_fûe
 = 
NULL
;

248 
GíîÆLi°
 *
	gimage_li°
 = 
NULL
;

249 
ImageCache
 **
	gimage_ˇche
 = 
NULL
;

250 
Buf„r
 *
	gimage_buf„r
 = 
NULL
;

253 
	$dñëeImage
(
Buf„r
 *
buf
)

255 
Anch‹Li°
 *
Æ
;

256 
Anch‹
 *
a
;

257 
i
;

259 i‡(!
buf
)

261 
Æ
 = 
buf
->
img
;

262 i‡(!
Æ
)

264 
i
 = 0, 
a
 = 
Æ
->
™ch‹s
; i <ál->
«nch‹
; i++,á++) {

265 i‡(
a
->
image
 &&á->image->
ˇche
 &&

266 
a
->
image
->
ˇche
->
lﬂded
 !
IMG_FLAG_UNLOADED
 &&

267 !(
a
->
image
->
ˇche
->
lﬂded
 & 
IMG_FLAG_DONT_REMOVE
) &&

268 
a
->
image
->
ˇche
->
ödex
 < 0)

269 
	`u∆ök
(
a
->
image
->
ˇche
->
fûe
);

271 
	`lﬂdImage
(
NULL
, 
IMG_FLAG_STOP
);

272 
	}
}

275 
	$gëAŒImage
(
Buf„r
 *
buf
)

277 
Anch‹Li°
 *
Æ
;

278 
Anch‹
 *
a
;

279 
P¨£dURL
 *
cuºít
;

280 
i
;

282 
image_buf„r
 = 
buf
;

283 i‡(!
buf
)

285 
buf
->
image_lﬂded
 = 
TRUE
;

286 
Æ
 = 
buf
->
img
;

287 i‡(!
Æ
)

289 
cuºít
 = 
	`ba£URL
(
buf
);

290 
i
 = 0, 
a
 = 
Æ
->
™ch‹s
; i <ál->
«nch‹
; i++,á++) {

291 i‡(
a
->
image
) {

292 
a
->
image
->
ˇche
 = 
	`gëImage
◊->image, 
cuºít
, 
buf
->
image_Êag
);

293 i‡(
a
->
image
->
ˇche
 &&

294 
a
->
image
->
ˇche
->
lﬂded
 =
IMG_FLAG_UNLOADED
)

295 
buf
->
image_lﬂded
 = 
FALSE
;

298 
	}
}

301 
	$showImageProgªss
(
Buf„r
 *
buf
)

303 
Anch‹Li°
 *
Æ
;

304 
Anch‹
 *
a
;

305 
i
, 
l
, 
n
;

307 i‡(!
buf
)

309 
Æ
 = 
buf
->
img
;

310 i‡(!
Æ
)

312 
i
 = 0, 
l
 = 0, 
n
 = 0, 
a
 = 
Æ
->
™ch‹s
; i <ál->
«nch‹
; i++,á++) {

313 i‡(
a
->
image
 &&á->
h£q
 >= 0) {

314 
n
++;

315 i‡(
a
->
image
->
ˇche
 &&á->image->ˇche->
lﬂded
 & 
IMG_FLAG_LOADED
)

316 
l
++;

319 i‡(
n
) {

320 
	`mesßge
(
	`S¥ötf
("%d/%d image†lﬂded", 
l
, 
n
)->
±r
,

321 
buf
->
curs‹X
 + buf->
roŸX
, buf->
curs‹Y
 + buf->
roŸY
);

322 
	`ª‰esh
();

324 
	}
}

327 
	$lﬂdImage
(
Buf„r
 *
buf
, 
Êag
)

329 
ImageCache
 *
ˇche
;

330 
°©
 
°
;

331 
i
, 
døw
 = 
FALSE
;

334 i‡(
maxLﬂdImage
 > 
MAX_LOAD_IMAGE
)

335 
maxLﬂdImage
 = 
MAX_LOAD_IMAGE
;

336 i‡(
maxLﬂdImage
 < 1)

337 
maxLﬂdImage
 = 1;

338 i‡(
n_lﬂd_image
 == 0)

339 
n_lﬂd_image
 = 
maxLﬂdImage
;

340 i‡(!
image_ˇche
) {

341 
image_ˇche
 = 
	`New_N
(
ImageCache
 *, 
MAX_LOAD_IMAGE
);

342 
	`bzîo
(
image_ˇche
, (
ImageCache
 *Ë* 
MAX_LOAD_IMAGE
);

344 
i
 = 0; i < 
n_lﬂd_image
; i++) {

345 
ˇche
 = 
image_ˇche
[
i
];

346 i‡(!
ˇche
)

348 i‡(
	`l°©
(
ˇche
->
touch
, &
°
))

350 i‡(
ˇche
->
pid
) {

351 
	`kûl
(
ˇche
->
pid
, 
SIGKILL
);

359 
ˇche
->
pid
 = 0;

361 i‡(!
	`°©
(
ˇche
->
fûe
, &
°
)) {

362 
ˇche
->
lﬂded
 = 
IMG_FLAG_LOADED
;

363 i‡(
	`gëImageSize
(
ˇche
)) {

364 i‡(
image_buf„r
)

365 
image_buf„r
->
√ed_ªsh≠e
 = 
TRUE
;

367 
døw
 = 
TRUE
;

370 
ˇche
->
lﬂded
 = 
IMG_FLAG_ERROR
;

371 
	`u∆ök
(
ˇche
->
touch
);

372 
image_ˇche
[
i
] = 
NULL
;

375 
i
 = (
buf
 !
image_buf„r
Ë? 0 : 
maxLﬂdImage
; i < 
n_lﬂd_image
; i++) {

376 
ˇche
 = 
image_ˇche
[
i
];

377 i‡(!
ˇche
)

379 i‡(
ˇche
->
pid
) {

380 
	`kûl
(
ˇche
->
pid
, 
SIGKILL
);

388 
ˇche
->
pid
 = 0;

390 
	`u∆ök
(
ˇche
->
touch
);

391 
image_ˇche
[
i
] = 
NULL
;

394 i‡(
Êag
 =
IMG_FLAG_STOP
) {

395 
image_li°
 = 
NULL
;

396 
image_fûe
 = 
NULL
;

397 
n_lﬂd_image
 = 
maxLﬂdImage
;

398 
image_buf„r
 = 
NULL
;

402 i‡(
døw
 && 
image_buf„r
) {

403 
	`døwImage
();

404 
	`showImageProgªss
(
image_buf„r
);

407 
image_buf„r
 = 
buf
;

409 i‡(!
image_li°
)

411 
i
 = 0; i < 
n_lﬂd_image
; i++) {

412 i‡(
image_ˇche
[
i
])

415 
ˇche
 = (
ImageCache
 *Ë
	`p›VÆue
(
image_li°
);

416 i‡(!
ˇche
) {

417 
i
 = 0; i < 
n_lﬂd_image
; i++) {

418 i‡(
image_ˇche
[
i
])

421 
image_li°
 = 
NULL
;

422 
image_fûe
 = 
NULL
;

423 i‡(
image_buf„r
)

424 
	`di•œyBuf„r
(
image_buf„r
, 
B_NORMAL
);

427 i‡(
ˇche
->
lﬂded
 =
IMG_FLAG_UNLOADED
)

430 
image_ˇche
[
i
] = 
ˇche
;

432 
	`Êush_ây
();

433 i‡((
ˇche
->
pid
 = 
	`f‹k
()) == 0) {

434 
Buf„r
 *
b
;

438 
	`£tup_chûd
(
FALSE
, 0, -1);

439 
image_sour˚
 = 
ˇche
->
fûe
;

440 
b
 = 
	`lﬂdGíîÆFûe
(
ˇche
->
uæ
, cache->
cuºít
, 
NULL
, 0, NULL);

441 i‡(!
b
 || !b->
ªÆ_ty≥
 || 
	`°∫ˇ£cmp
(b->real_type, "image/", 6))

442 
	`u∆ök
(
ˇche
->
fûe
);

443 #i‡
	`deföed
(
HAVE_SYMLINK
Ë&& deföed(
HAVE_LSTAT
)

444 
	`symlök
(
ˇche
->
fûe
, cache->
touch
);

447 
FILE
 *
f
 = 
	`f›í
(
ˇche
->
touch
, "w");

448 i‡(
f
)

449 
	`f˛o£
(
f
);

452 
	`exô
(0);

454 i‡(
ˇche
->
pid
 < 0) {

455 
ˇche
->
pid
 = 0;

459 
	}
}

461 
ImageCache
 *

462 
	$gëImage
(
Image
 * 
image
, 
P¨£dURL
 *
cuºít
, 
Êag
)

464 
Så
 
key
 = 
NULL
;

465 
ImageCache
 *
ˇche
;

467 i‡(!
a˘iveImage
)

468  
NULL
;

469 i‡(!
image_hash
)

470 
image_hash
 = 
	`√wHash_sv
(100);

471 i‡(
image
->
ˇche
)

472 
ˇche
 = 
image
->cache;

474 
key
 = 
	`S¥ötf
("%d;%d;%s", 
image
->
width
, image->
height
, image->
uæ
);

475 
ˇche
 = (
ImageCache
 *Ë
	`gëHash_sv
(
image_hash
, 
key
->
±r
, 
NULL
);

477 i‡(
ˇche
 && cache->
ödex
 && 
	`abs
(ˇche->ödexË<
image_ödex
 - 
MAX_IMAGE
) {

478 
°©
 
°
;

479 i‡(
	`°©
(
ˇche
->
fûe
, &
°
))

480 
ˇche
->
lﬂded
 = 
IMG_FLAG_UNLOADED
;

481 
ˇche
->
ödex
 = 0;

484 i‡(!
ˇche
) {

485 i‡(
Êag
 =
IMG_FLAG_SKIP
)

486  
NULL
;

488 
ˇche
 = 
	`New
(
ImageCache
);

489 
ˇche
->
uæ
 = 
image
->url;

490 
ˇche
->
cuºít
 = current;

491 
ˇche
->
fûe
 = 
	`tmp‚ame
(
TMPF_DFL
, 
image
->
ext
)->
±r
;

492 
ˇche
->
touch
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

493 
ˇche
->
pid
 = 0;

494 
ˇche
->
ödex
 = 0;

495 
ˇche
->
lﬂded
 = 
IMG_FLAG_UNLOADED
;

496 
ˇche
->
width
 = 
image
->width;

497 
ˇche
->
height
 = 
image
->height;

498 
	`putHash_sv
(
image_hash
, 
key
->
±r
, (*)
ˇche
);

500 i‡(
Êag
 !
IMG_FLAG_SKIP
) {

501 i‡(
ˇche
->
lﬂded
 =
IMG_FLAG_UNLOADED
) {

502 i‡(!
image_fûe
)

503 
image_fûe
 = 
	`√wHash_sv
(100);

504 i‡(!
	`gëHash_sv
(
image_fûe
, 
ˇche
->
fûe
, 
NULL
)) {

505 
	`putHash_sv
(
image_fûe
, 
ˇche
->
fûe
, (*)cache);

506 i‡(!
image_li°
)

507 
image_li°
 = 
	`√wGíîÆLi°
();

508 
	`pushVÆue
(
image_li°
, (*)
ˇche
);

511 i‡(!
ˇche
->
ödex
)

512 
ˇche
->
ödex
 = ++
image_ödex
;

514 i‡(
ˇche
->
lﬂded
 & 
IMG_FLAG_LOADED
)

515 
	`gëImageSize
(
ˇche
);

516  
ˇche
;

517 
	}
}

520 
	$gëImageSize
(
ImageCache
 * 
ˇche
)

522 
Så
 
tmp
;

523 
FILE
 *
f
;

524 
w
 = 0, 
h
 = 0;

526 i‡(!
a˘iveImage
)

527  
FALSE
;

528 i‡(!
ˇche
 || !(ˇche->
lﬂded
 & 
IMG_FLAG_LOADED
) ||

529 (
ˇche
->
width
 > 0 && cache->
height
 > 0))

530  
FALSE
;

531 
tmp
 = 
	`Så√w
();

532 i‡(!
	`°rchr
(
Imgdi•œy
, '/'))

533 
	`Såˇt_m_ch¨p
(
tmp
, 
	`w3m_auxbö_dú
(), "/", 
NULL
);

534 
	`Såˇt_m_ch¨p
(
tmp
, 
Imgdi•œy
, " -sizê", 
	`shñl_quŸe
(
ˇche
->
fûe
), 
NULL
);

535 
f
 = 
	`p›í
(
tmp
->
±r
, "r");

536 i‡(!
f
)

537  
FALSE
;

538 
	`fsˇnf
(
f
, "%d %d", &
w
, &
h
) < 0) {

539 i‡(
	`„of
(
f
))

542 
	`p˛o£
(
f
);

544 i‡(!(
w
 > 0 && 
h
 > 0))

545  
FALSE
;

546 
w
 = ()(w * 
image_sˇÀ
 / 100 + 0.5);

547 i‡(
w
 == 0)

548 
w
 = 1;

549 
h
 = ()(h * 
image_sˇÀ
 / 100 + 0.5);

550 i‡(
h
 == 0)

551 
h
 = 1;

552 i‡(
ˇche
->
width
 < 0 && cache->
height
 < 0) {

553 
ˇche
->
width
 = (
w
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE : w;

554 
ˇche
->
height
 = (
h
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE : h;

556 i‡(
ˇche
->
width
 < 0) {

557 
tmp
 = ()(()
ˇche
->
height
 * 
w
 / 
h
 + 0.5);

558 
ˇche
->
width
 = (
tmp
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE :Åmp;

560 i‡(
ˇche
->
height
 < 0) {

561 
tmp
 = ()(()
ˇche
->
width
 * 
h
 / 
w
 + 0.5);

562 
ˇche
->
height
 = (
tmp
 > 
MAX_IMAGE_SIZE
) ? MAX_IMAGE_SIZE :Åmp;

564 i‡(
ˇche
->
width
 == 0)

565 
ˇche
->
width
 = 1;

566 i‡(
ˇche
->
height
 == 0)

567 
ˇche
->
height
 = 1;

568 
tmp
 = 
	`S¥ötf
("%d;%d;%s", 
ˇche
->
width
, cache->
height
, cache->
uæ
);

569 
	`putHash_sv
(
image_hash
, 
tmp
->
±r
, (*)
ˇche
);

570  
TRUE
;

571 
	}
}

	@indep.c

2 
	~"fm.h
"

3 
	~<°dio.h
>

4 #i‚de‡
__MINGW32_VERSION


5 
	~<pwd.h
>

7 
	~<sys/∑øm.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<°dlib.h
>

10 
	~"ödï.h
"

11 
	~"Så.h
"

12 
	~<gc.h
>

13 
	~"my˘y≥.h
"

14 
	~"ítôy.h
"

16 
	gQUOTE_MAP
[0x100] = {

44 *
	gHTML_QUOTE_MAP
[] = {

45 
NULL
,

50 
NULL
,

51 
NULL
,

52 
NULL
,

55 
˛í_t


56 
	$°πo˛í
(c⁄° *
s
)

58 #ifde‡
HAVE_STRTOLL


59  
	`°πﬁl
(
s
, 
NULL
, 10);

60 #ñi‡
	`deföed
(
HAVE_STRTOQ
)

61  
	`°πoq
(
s
, 
NULL
, 10);

62 #ñi‡
	`deföed
(
HAVE_ATOLL
)

63  
	`©ﬁl
(
s
);

64 #ñi‡
	`deföed
(
HAVE_ATOQ
)

65  
	`©oq
(
s
);

67  
	`©oi
(
s
);

69 
	}
}

71 #i‚de‡
HAVE_BCOPY


73 
	$bc›y
(c⁄° *
§c
, *
de°
, 
Àn
)

75 
i
;

76 i‡(
§c
 =
de°
)

78 i‡(
§c
 < 
de°
) {

79 
i
 = 
Àn
 - 1; i >= 0; i--)

80 ((*)
de°
)[
i
] = ((c⁄° *)
§c
)[i];

83 
i
 = 0; i < 
Àn
; i++)

84 ((*)
de°
)[
i
] = ((c⁄° *)
§c
)[i];

86 
	}
}

89 
	$bzîo
(*
±r
, 
Àn
)

91 
i
;

92 *
p
 = 
±r
;

93 
i
 = 0; i < 
Àn
; i++)

94 *(
p
++) = 0;

95 
	}
}

99 
	$ÆlocSå
(c⁄° *
s
, 
Àn
)

101 *
±r
;

103 i‡(
s
 =
NULL
)

104  
NULL
;

105 i‡(
Àn
 < 0)

106 
Àn
 = 
	`°æí
(
s
);

107 
±r
 = 
	`NewAtom_N
(, 
Àn
 + 1);

108 i‡(
±r
 =
NULL
) {

109 
	`Ârötf
(
°dîr
, "fm: Can'tállocate string. Give me more memory!\n");

110 
	`exô
(-1);

112 
	`bc›y
(
s
, 
±r
, 
Àn
);

113 
±r
[
Àn
] = '\0';

114  
±r
;

115 
	}
}

118 
	$°rCmp
(c⁄° *
s1
, c⁄° *
s2
)

120  
	`°rcmp
(*(c⁄° **)
s1
, *(c⁄° **)
s2
);

121 
	}
}

124 
	$cuºítdú
()

126 *
∑th
;

127 #ifde‡
HAVE_GETCWD


128 #ifde‡
MAXPATHLEN


129 
∑th
 = 
	`NewAtom_N
(, 
MAXPATHLEN
);

130 
	`gëcwd
(
∑th
, 
MAXPATHLEN
);

132 
∑th
 = 
	`gëcwd
(
NULL
, 0);

135 #ifde‡
HAVE_GETWD


136 
∑th
 = 
	`NewAtom_N
(, 1024);

137 
	`gëwd
(
∑th
);

139 
FILE
 *
f
;

140 *
p
;

141 
∑th
 = 
	`NewAtom_N
(, 1024);

142 
f
 = 
	`p›í
("pwd", "r");

143 
	`fgës
(
∑th
, 1024, 
f
);

144 
	`p˛o£
(
f
);

145 
p
 = 
∑th
; *p;Ö++)

146 i‡(*
p
 == '\n') {

147 *
p
 = '\0';

152  
∑th
;

153 
	}
}

156 
	$˛ónupName
(*
«me
)

158 *
buf
, *
p
, *
q
;

160 
buf
 = 
	`ÆlocSå
(
«me
, -1);

161 
p
 = 
buf
;

162 
q
 = 
«me
;

163 *
q
 != '\0') {

164 i‡(
	`°∫cmp
(
p
, "/../", 4) == 0) {

165 i‡(
p
 - 2 =
buf
 && 
	`°∫cmp
(p - 2, "..", 2) == 0) {

167 
p
 += 3;

168 
q
 += 3;

170 i‡(
p
 - 3 >
buf
 && 
	`°∫cmp
(p - 3, "/..", 3) == 0) {

172 
p
 += 3;

173 
q
 += 3;

176 
p
 !
buf
 && *--p != '/') ;

177 *
p
 = '\0';

178 
q
 += 3;

179 
	`°rˇt
(
buf
, 
q
);

182 i‡(
	`°rcmp
(
p
, "/..") == 0) {

183 i‡(
p
 - 2 =
buf
 && 
	`°∫cmp
(p - 2, "..", 2) == 0) {

186 i‡(
p
 - 3 >
buf
 && 
	`°∫cmp
(p - 3, "/..", 3) == 0) {

190 
p
 !
buf
 && *--p != '/') ;

191 *++
p
 = '\0';

195 i‡(
	`°∫cmp
(
p
, "/./", 3) == 0) {

196 *
p
 = '\0';

197 
q
 += 2;

198 
	`°rˇt
(
buf
, 
q
);

200 i‡(
	`°rcmp
(
p
, "/.") == 0) {

201 *++
p
 = '\0';

204 i‡(
	`°∫cmp
(
p
, "//", 2) == 0) {

206 *
p
 = '\0';

207 
q
++;

208 
	`°rˇt
(
buf
, 
q
);

211 
p
++;

212 
q
++;

215  
buf
;

216 
	}
}

219 
	$ex∑ndP©h
(*
«me
)

221 *
p
;

222 
∑sswd
 *
∑s£¡
, *
	`gëpw«m
(const *);

223 
Så
 
exç©h
 = 
NULL
;

225 i‡(
«me
 =
NULL
)

226  
NULL
;

227 
p
 = 
«me
;

228 i‡(*
p
 == '~') {

229 
p
++;

230 #i‚de‡
__MINGW32_VERSION


231 i‡(
	`IS_ALPHA
(*
p
)) {

232 *
q
 = 
	`°rchr
(
p
, '/');

233 i‡(
q
) {

234 
∑s£¡
 = 
	`gëpw«m
(
	`ÆlocSå
(
p
, 
q
 -Ö));

235 
p
 = 
q
;

238 
∑s£¡
 = 
	`gëpw«m
(
p
);

239 
p
 = "";

241 i‡(!
∑s£¡
)

242 
ª°
;

243 
exç©h
 = 
	`Så√w_ch¨p
(
∑s£¡
->
pw_dú
);

246 i‡(*
p
 == '/' || *p == '\0') {

247 
exç©h
 = 
	`Så√w_ch¨p
(
	`gëív
("HOME"));

250 
ª°
;

251 i‡(
	`Såcmp_ch¨p
(
exç©h
, "/"Ë=0 && *
p
 == '/')

252 
p
++;

253 
	`Såˇt_ch¨p
(
exç©h
, 
p
);

254  
exç©h
->
±r
;

256 
ª°
:

257  
«me
;

258 
	}
}

260 #i‚de‡
HAVE_STRCHR


262 
	$°rchr
(c⁄° *
s
, 
c
)

264 *
s
) {

265 i‡(()*
s
 =
c
)

266  (*)
s
;

267 
s
++;

269  
NULL
;

270 
	}
}

273 #i‚de‡
HAVE_STRCASECMP


275 
	$°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
)

277 
x
;

278 *
s1
) {

279 
x
 = 
	`TOLOWER
(*
s1
Ë- TOLOWER(*
s2
);

280 i‡(
x
 != 0)

281  
x
;

282 
s1
++;

283 
s2
++;

285  -
	`TOLOWER
(*
s2
);

286 
	}
}

289 
	$°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

291 
x
;

292 *
s1
 && 
n
) {

293 
x
 = 
	`TOLOWER
(*
s1
Ë- TOLOWER(*
s2
);

294 i‡(
x
 != 0)

295  
x
;

296 
s1
++;

297 
s2
++;

298 
n
--;

300  
n
 ? -
	`TOLOWER
(*
s2
) : 0;

301 
	}
}

304 #i‚de‡
HAVE_STRCASESTR


307 
	$°rˇ£°r
(c⁄° *
s1
, c⁄° *
s2
)

309 
Àn1
, 
Àn2
;

310 i‡(
s2
 =
NULL
)

311  (*)
s1
;

312 i‡(*
s2
 == '\0')

313  (*)
s1
;

314 
Àn1
 = 
	`°æí
(
s1
);

315 
Àn2
 = 
	`°æí
(
s2
);

316 *
s1
 && 
Àn1
 >
Àn2
) {

317 i‡(
	`°∫ˇ£cmp
(
s1
, 
s2
, 
Àn2
) == 0)

318  (*)
s1
;

319 
s1
++;

320 
Àn1
--;

323 
	}
}

327 
	$°rˇ£m©ch
(*
s1
, *
s2
)

329 
x
;

330 *
s1
) {

331 i‡(*
s2
 == '\0')

333 
x
 = 
	`TOLOWER
(*
s1
Ë- TOLOWER(*
s2
);

334 i‡(
x
 != 0)

336 
s1
++;

337 
s2
++;

339  (*
s2
 == '\0');

340 
	}
}

344 
	$°rˇ£m°r
(*
°r
, *
§ch
[], **
ªt_±r
)

346 
i
;

347 *
°r
) {

348 
i
 = 0; 
§ch
[i]; i++) {

349 i‡(
	`°rˇ£m©ch
(
°r
, 
§ch
[
i
])) {

350 i‡(
ªt_±r
)

351 *
ªt_±r
 = 
°r
;

352  
i
;

355 
°r
++;

358 
	}
}

361 
	$ªmove_•a˚
(*
°r
)

363 *
p
, *
q
;

365 
p
 = 
°r
; *∞&& 
	`IS_SPACE
(*p);Ö++) ;

366 
q
 = 
p
; *q; q++) ;

367 ; 
q
 > 
p
 && 
	`IS_SPACE
(*(q - 1)); q--) ;

368 i‡(*
q
 != '\0')

369  
	`Så√w_ch¨p_n
(
p
, 
q
 -Ö)->
±r
;

370  
p
;

371 
	}
}

374 
	$n⁄_nuŒ
(*
s
)

376 i‡(
s
 =
NULL
)

377  
FALSE
;

378 *
s
) {

379 i‡(!
	`IS_SPACE
(*
s
))

380  
TRUE
;

381 
s
++;

383  
FALSE
;

384 
	}
}

387 
	$˛ónup_löe
(
Så
 
s
, 
mode
)

389 i‡(
s
->
Àngth
 >= 2 &&

390 
s
->
±r
[s->
Àngth
 - 2] == '\r' && s->ptr[s->length - 1] == '\n') {

391 
	`Såshrök
(
s
, 2);

392 
	`Såˇt_ch¨
(
s
, '\n');

394 i‡(
	`Såœ°ch¨
(
s
) == '\r')

395 
s
->
±r
[s->
Àngth
 - 1] = '\n';

396 i‡(
	`Såœ°ch¨
(
s
) != '\n')

397 
	`Såˇt_ch¨
(
s
, '\n');

398 i‡(
mode
 !
PAGER_MODE
) {

399 
i
;

400 
i
 = 0; i < 
s
->
Àngth
; i++) {

401 i‡(
s
->
±r
[
i
] == '\0')

402 
s
->
±r
[
i
] = ' ';

405 
	}
}

408 
	$gëesˇ≥ch¨
(**
°r
)

410 
dummy
 = -1;

411 *
p
 = *
°r
, *
q
;

412 
°ri˘_ítôy
 = 
TRUE
;

414 i‡(*
p
 == '&')

415 
p
++;

416 i‡(*
p
 == '#') {

417 
p
++;

418 i‡(*
p
 == 'x' || *p == 'X') {

419 
p
++;

420 i‡(!
	`IS_XDIGIT
(*
p
)) {

421 *
°r
 = 
p
;

424 
dummy
 = 
	`GET_MYCDIGIT
(*
p
),Ö++; 
	`IS_XDIGIT
(*p);Ö++)

425 
dummy
 = dummy * 0x10 + 
	`GET_MYCDIGIT
(*
p
);

426 i‡(*
p
 == ';')

427 
p
++;

428 *
°r
 = 
p
;

429  
dummy
;

432 i‡(!
	`IS_DIGIT
(*
p
)) {

433 *
°r
 = 
p
;

436 
dummy
 = 
	`GET_MYCDIGIT
(*
p
),Ö++; 
	`IS_DIGIT
(*p);Ö++)

437 
dummy
 = dummy * 10 + 
	`GET_MYCDIGIT
(*
p
);

438 i‡(*
p
 == ';')

439 
p
++;

440 *
°r
 = 
p
;

441  
dummy
;

444 i‡(!
	`IS_ALPHA
(*
p
)) {

445 *
°r
 = 
p
;

448 
q
 = 
p
;

449 
p
++; 
	`IS_ALNUM
(*p);Ö++) ;

450 
q
 = 
	`ÆlocSå
(q, 
p
 - q);

451 i‡(
	`°rˇ£°r
("… gàam∞quŸÇb•", 
q
Ë&& *
p
 != '=') {

460 
°ri˘_ítôy
 = 
FALSE
;

462 i‡(*
p
 == ';')

463 
p
++;

464 i‡(
°ri˘_ítôy
) {

465 *
°r
 = 
p
;

468 *
°r
 = 
p
;

469  
	`gëHash_si
(&
ítôy
, 
q
, -1);

470 
	}
}

473 
	$gëesˇ≥cmd
(**
s
)

475 *
ßve
 = *
s
;

476 
Så
 
tmp
;

477 
ch
 = 
	`gëesˇ≥ch¨
(
s
);

479 i‡(
ch
 >= 0)

480  
	`c⁄v_ítôy
(
ch
);

482 i‡(*
ßve
 != '&')

483 
tmp
 = 
	`Så√w_ch¨p
("&");

485 
tmp
 = 
	`Så√w
();

486 
	`Såˇt_ch¨p_n
(
tmp
, 
ßve
, *
s
 - save);

487  
tmp
->
±r
;

488 
	}
}

491 
	$html_quŸe
(*
°r
)

493 
Så
 
tmp
 = 
NULL
;

494 *
p
, *
q
;

496 
p
 = 
°r
; *p;Ö++) {

497 
q
 = 
	`html_quŸe_ch¨
(*
p
);

498 i‡(
q
) {

499 i‡(
tmp
 =
NULL
)

500 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

501 
	`Såˇt_ch¨p
(
tmp
, 
q
);

504 i‡(
tmp
)

505 
	`Såˇt_ch¨
(
tmp
, *
p
);

508 i‡(
tmp
)

509  
tmp
->
±r
;

510  
°r
;

511 
	}
}

514 
	$html_unquŸe
(*
°r
)

516 
Så
 
tmp
 = 
NULL
;

517 *
p
, *
q
;

519 
p
 = 
°r
; *p;) {

520 i‡(*
p
 == '&') {

521 i‡(
tmp
 =
NULL
)

522 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

523 
q
 = 
	`gëesˇ≥cmd
(&
p
);

524 
	`Såˇt_ch¨p
(
tmp
, 
q
);

527 i‡(
tmp
)

528 
	`Såˇt_ch¨
(
tmp
, *
p
);

529 
p
++;

533 i‡(
tmp
)

534  
tmp
->
±r
;

535  
°r
;

536 
	}
}

538 
	gxdigô
[0x10] = "0123456789ABCDEF";

540 
	#uæ_unquŸe_ch¨
(
p°r
) \

541 ((
	`IS_XDIGIT
((*(
p°r
))[1]) && IS_XDIGIT((*(pstr))[2])) ? \

542 (*(
p°r
Ë+3, (
	`GET_MYCDIGIT
((*(pstr))[-2]) << 4) | GET_MYCDIGIT((*(pstr))[-1])) : \

543 -1)

	)

546 
	$uæ_quŸe
(*
°r
)

548 
Så
 
tmp
 = 
NULL
;

549 *
p
;

551 
p
 = 
°r
; *p;Ö++) {

552 i‡(
	`is_uæ_quŸe
(*
p
)) {

553 i‡(
tmp
 =
NULL
)

554 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

555 
	`Såˇt_ch¨
(
tmp
, '%');

556 
	`Såˇt_ch¨
(
tmp
, 
xdigô
[(()*
p
 >> 4) & 0xF]);

557 
	`Såˇt_ch¨
(
tmp
, 
xdigô
[()*
p
 & 0xF]);

560 i‡(
tmp
)

561 
	`Såˇt_ch¨
(
tmp
, *
p
);

564 i‡(
tmp
)

565  
tmp
->
±r
;

566  
°r
;

567 
	}
}

570 
	$fûe_quŸe
(*
°r
)

572 
Så
 
tmp
 = 
NULL
;

573 *
p
;

574 
buf
[4];

576 
p
 = 
°r
; *p;Ö++) {

577 i‡(
	`is_fûe_quŸe
(*
p
)) {

578 i‡(
tmp
 =
NULL
)

579 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

580 
	`•rötf
(
buf
, "%%%02X", ()*
p
);

581 
	`Såˇt_ch¨p
(
tmp
, 
buf
);

584 i‡(
tmp
)

585 
	`Såˇt_ch¨
(
tmp
, *
p
);

588 i‡(
tmp
)

589  
tmp
->
±r
;

590  
°r
;

591 
	}
}

594 
	$fûe_unquŸe
(*
°r
)

596 
Så
 
tmp
 = 
NULL
;

597 *
p
, *
q
;

598 
c
;

600 
p
 = 
°r
; *p;) {

601 i‡(*
p
 == '%') {

602 
q
 = 
p
;

603 
c
 = 
	`uæ_unquŸe_ch¨
(&
q
);

604 i‡(
c
 >= 0) {

605 i‡(
tmp
 =
NULL
)

606 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

607 i‡(
c
 != '\0' && c != '\n' && c != '\r')

608 
	`Såˇt_ch¨
(
tmp
, ()
c
);

609 
p
 = 
q
;

613 i‡(
tmp
)

614 
	`Såˇt_ch¨
(
tmp
, *
p
);

615 
p
++;

617 i‡(
tmp
)

618  
tmp
->
±r
;

619  
°r
;

620 
	}
}

622 
Så


623 
	$Så_f‹m_quŸe
(
Så
 
x
)

625 
Så
 
tmp
 = 
NULL
;

626 *
p
 = 
x
->
±r
, *
ï
 = x->±∏+ x->
Àngth
;

627 
buf
[4];

629 ; 
p
 < 
ï
;Ö++) {

630 i‡(*
p
 == ' ') {

631 i‡(
tmp
 =
NULL
)

632 
tmp
 = 
	`Så√w_ch¨p_n
(
x
->
±r
, ()(
p
 - x->ptr));

633 
	`Såˇt_ch¨
(
tmp
, '+');

635 i‡(
	`is_uæ_unß„
(*
p
)) {

636 i‡(
tmp
 =
NULL
)

637 
tmp
 = 
	`Så√w_ch¨p_n
(
x
->
±r
, ()(
p
 - x->ptr));

638 
	`•rötf
(
buf
, "%%%02X", ()*
p
);

639 
	`Såˇt_ch¨p
(
tmp
, 
buf
);

642 i‡(
tmp
)

643 
	`Såˇt_ch¨
(
tmp
, *
p
);

646 i‡(
tmp
)

647  
tmp
;

648  
x
;

649 
	}
}

652 
Så


653 
	$Så_uæ_unquŸe
(
Så
 
x
, 
is_f‹m
, 
ß„
)

655 
Så
 
tmp
 = 
NULL
;

656 *
p
 = 
x
->
±r
, *
ï
 = x->±∏+ x->
Àngth
, *
q
;

657 
c
;

659 ; 
p
 < 
ï
;) {

660 i‡(
is_f‹m
 && *
p
 == '+') {

661 i‡(
tmp
 =
NULL
)

662 
tmp
 = 
	`Så√w_ch¨p_n
(
x
->
±r
, ()(
p
 - x->ptr));

663 
	`Såˇt_ch¨
(
tmp
, ' ');

664 
p
++;

667 i‡(*
p
 == '%') {

668 
q
 = 
p
;

669 
c
 = 
	`uæ_unquŸe_ch¨
(&
q
);

670 i‡(
c
 >0 && (!
ß„
 || !
	`IS_ASCII
(cË|| !
	`is_fûe_quŸe
(c))) {

671 i‡(
tmp
 =
NULL
)

672 
tmp
 = 
	`Så√w_ch¨p_n
(
x
->
±r
, ()(
p
 - x->ptr));

673 
	`Såˇt_ch¨
(
tmp
, ()
c
);

674 
p
 = 
q
;

678 i‡(
tmp
)

679 
	`Såˇt_ch¨
(
tmp
, *
p
);

680 
p
++;

682 i‡(
tmp
)

683  
tmp
;

684  
x
;

685 
	}
}

688 
	$shñl_quŸe
(*
°r
)

690 
Så
 
tmp
 = 
NULL
;

691 *
p
;

693 
p
 = 
°r
; *p;Ö++) {

694 i‡(
	`is_shñl_unß„
(*
p
)) {

695 i‡(
tmp
 =
NULL
)

696 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

697 
	`Såˇt_ch¨
(
tmp
, '\\');

698 
	`Såˇt_ch¨
(
tmp
, *
p
);

701 i‡(
tmp
)

702 
	`Såˇt_ch¨
(
tmp
, *
p
);

705 i‡(
tmp
)

706  
tmp
->
±r
;

707  
°r
;

708 
	}
}

711 
	$w3m_dú
(c⁄° *
«me
, *
d·
)

713 #ifde‡
USE_PATH_ENVVAR


714 *
vÆue
 = 
	`gëív
(
«me
);

715  
vÆue
 ? vÆuê: 
d·
;

717  
d·
;

719 
	}
}

722 
	$w3m_auxbö_dú
()

724  
	`w3m_dú
("W3M_AUXBIN_DIR", 
AUXBIN_DIR
);

725 
	}
}

728 
	$w3m_lib_dú
()

731  
	`w3m_dú
("W3M_LIB_DIR", 
CGIBIN_DIR
);

732 
	}
}

735 
	$w3m_ëc_dú
()

737  
	`w3m_dú
("W3M_ETC_DIR", 
ETC_DIR
);

738 
	}
}

741 
	$w3m_c⁄f_dú
()

743  
	`w3m_dú
("W3M_CONF_DIR", 
CONF_DIR
);

744 
	}
}

747 
	$w3m_hñp_dú
()

749  
	`w3m_dú
("W3M_HELP_DIR", 
HELP_DIR
);

750 
	}
}

	@indep.h

2 #i‚de‡
INDEP_H


3 
	#INDEP_H


	)

4 
	~<gc.h
>

5 
	~"Så.h
"

6 
	~"c⁄fig.h
"

8 #i‚de‡
TRUE


9 
	#TRUE
 1

	)

11 #i‚de‡
FALSE


12 
	#FALSE
 0

	)

15 
	#RAW_MODE
 0

	)

16 
	#PAGER_MODE
 1

	)

17 
	#HTML_MODE
 2

	)

18 
	#HEADER_MODE
 3

	)

20 
QUOTE_MAP
[];

21 *
HTML_QUOTE_MAP
[];

22 
	#HTML_QUOTE_MASK
 0x07

	)

23 
	#SHELL_UNSAFE_MASK
 0x08

	)

24 
	#URL_QUOTE_MASK
 0x10

	)

25 
	#FILE_QUOTE_MASK
 0x30

	)

26 
	#URL_UNSAFE_MASK
 0x70

	)

27 
	#GET_QUOTE_TYPE
(
c
Ë
QUOTE_MAP
[()()(c)]

	)

28 
	#is_html_quŸe
(
c
Ë(
	`GET_QUOTE_TYPE
(cË& 
HTML_QUOTE_MASK
)

	)

29 
	#is_shñl_unß„
(
c
Ë(
	`GET_QUOTE_TYPE
(cË& 
SHELL_UNSAFE_MASK
)

	)

30 
	#is_uæ_quŸe
(
c
Ë(
	`GET_QUOTE_TYPE
(cË& 
URL_QUOTE_MASK
)

	)

31 
	#is_fûe_quŸe
(
c
Ë(
	`GET_QUOTE_TYPE
(cË& 
FILE_QUOTE_MASK
)

	)

32 
	#is_uæ_unß„
(
c
Ë(
	`GET_QUOTE_TYPE
(cË& 
URL_UNSAFE_MASK
)

	)

33 
	#html_quŸe_ch¨
(
c
Ë
HTML_QUOTE_MAP
[()
	`is_html_quŸe
(c)]

	)

35 
˛í_t
 
°πo˛í
(c⁄° *
s
);

36 *
c⁄v_ítôy
(
ch
);

37 
gëesˇ≥ch¨
(**
s
);

38 *
gëesˇ≥cmd
(**
s
);

39 *
ÆlocSå
(c⁄° *
s
, 
Àn
);

40 
°rCmp
(c⁄° *
s1
, c⁄° *
s2
);

41 *
cuºítdú
();

42 *
˛ónupName
(*
«me
);

43 *
ex∑ndP©h
(*
«me
);

44 #i‚de‡
HAVE_STRCHR


45 *
°rchr
(c⁄° *
s
, 
c
);

47 #i‚de‡
HAVE_STRCASECMP


48 
°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
);

49 
°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

51 #i‚de‡
HAVE_STRCASESTR


52 *
°rˇ£°r
(c⁄° *
s1
, c⁄° *
s2
);

54 
°rˇ£m°r
(*
°r
, *
§ch
[], **
ªt_±r
);

55 *
ªmove_•a˚
(*
°r
);

56 
n⁄_nuŒ
(*
s
);

57 
˛ónup_löe
(
Så
 
s
, 
mode
);

58 *
html_quŸe
(*
°r
);

59 *
html_unquŸe
(*
°r
);

60 *
fûe_quŸe
(*
°r
);

61 *
fûe_unquŸe
(*
°r
);

62 *
uæ_quŸe
(*
°r
);

63 
Så
 
Så_uæ_unquŸe
(Så 
x
, 
is_f‹m
, 
ß„
);

64 
Så
 
Så_f‹m_quŸe
(Så 
x
);

65 
	#Så_f‹m_unquŸe
(
x
Ë
	`Så_uæ_unquŸe
((x), 
TRUE
, 
FALSE
)

	)

66 *
shñl_quŸe
(*
°r
);

68 *
w3m_auxbö_dú
();

69 *
w3m_lib_dú
();

70 *
w3m_ëc_dú
();

71 *
w3m_c⁄f_dú
();

72 *
w3m_hñp_dú
();

74 
	#New
(
ty≥
Ë(—y≥*)
	`GC_MALLOC
(—y≥)))

	)

75 
	#NewAtom
(
ty≥
Ë(—y≥*)
	`GC_MALLOC_ATOMIC
(—y≥)))

	)

76 
	#New_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC
(“)*—y≥)))

	)

77 
	#NewAtom_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC_ATOMIC
(“)*—y≥)))

	)

78 
	#New_Reu£
(
ty≥
,
±r
,
n
Ë(—y≥*)
	`GC_REALLOC
(’å),“)*—y≥)))

	)

	@inflate.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<zlib.h
>

6 #unde‡
BUFSIZE


7 
	#BUFSIZE
 4096

	)

9 
	gdummy_hód
[1 + 1] = {

15 
	$maö
(
¨gc
, **
¨gv
)

17 
z_°ªam
 
s
;

18 
FILE
 *
f
;

19 
öbuf
[
BUFSIZE
], 
outbuf
[BUFSIZE];

20 
°©us
, 
Êush
, 
ªåy
 = 0, 
Àn
 = 0;

22 i‡(
¨gc
 > 1) {

23 
f
 = 
	`f›í
(
¨gv
[1], "rb");

24 i‡(!
f
) {

25 
	`Ârötf
(
°dîr
, "%s: c™nŸ o≥¿%s\n", 
¨gv
[0],árgv[1]);

26 
	`exô
(1);

30 
f
 = 
°dö
;

32 
s
.
zÆloc
 = 
Z_NULL
;

33 
s
.
z‰ì
 = 
Z_NULL
;

34 
s
.
›aque
 = 
Z_NULL
;

35 
°©us
 = 
	`öÊ©eInô
(&
s
);

36 i‡(
°©us
 !
Z_OK
) {

37 
	`Ârötf
(
°dîr
, "%s: inÊ©eInô(Ë%s\n", 
¨gv
[0], 
	`zEº‹
(
°©us
));

38 
	`exô
(1);

40 
s
.
avaû_ö
 = 0;

41 
s
.
√xt_out
 = (
Byãf
 *Ë
outbuf
;

42 
s
.
avaû_out
 = (
outbuf
);

43 
Êush
 = 
Z_NO_FLUSH
;

45 i‡(
s
.
avaû_ö
 == 0) {

46 
s
.
√xt_ö
 = (
Byãf
 *Ë
öbuf
;

47 
Àn
 = 
s
.
avaû_ö
 = 
	`‰ód
(
öbuf
, 1, (öbuf), 
f
);

49 
°©us
 = 
	`öÊ©e
(&
s
, 
Êush
);

50 i‡(
°©us
 =
Z_STREAM_END
 || sètu†=
Z_BUF_ERROR
) {

51 i‡((
outbuf
Ë- 
s
.
avaû_out
)

52 
	`fwrôe
(
outbuf
, 1, (outbufË- 
s
.
avaû_out
, 
°dout
);

55 i‡(
°©us
 =
Z_DATA_ERROR
 && !
ªåy
++) {

56 
°©us
 = 
	`öÊ©eRe£t
(&
s
);

57 i‡(
°©us
 !
Z_OK
) {

58 
	`Ârötf
(
°dîr
, "%s: inÊ©eRe£t(Ë%s\n", 
¨gv
[0],

59 
	`zEº‹
(
°©us
));

60 
	`exô
(1);

62 
s
.
√xt_ö
 = (
Byãf
 *Ë
dummy_hód
;

63 
s
.
avaû_ö
 = (
dummy_hód
);

64 
°©us
 = 
	`öÊ©e
(&
s
, 
Êush
);

65 
s
.
√xt_ö
 = (
Byãf
 *Ë
öbuf
;

66 
s
.
avaû_ö
 = 
Àn
;

69 i‡(
°©us
 !
Z_OK
) {

70 
	`Ârötf
(
°dîr
, "%s: inÊ©e(Ë%s\n", 
¨gv
[0], 
	`zEº‹
(
°©us
));

71 
	`exô
(1);

73 i‡(
s
.
avaû_out
 == 0) {

74 
	`fwrôe
(
outbuf
, 1, (outbuf), 
°dout
);

75 
s
.
√xt_out
 = (
Byãf
 *Ë
outbuf
;

76 
s
.
avaû_out
 = (
outbuf
);

78 
ªåy
 = 1;

80 
	`öÊ©eEnd
(&
s
);

81 
	`f˛o£
(
f
);

83 
	}
}

	@islang.c

7 
	#INCL_DOSNLS


	)

8 
	~<os2.h
>

9 
	~<°dlib.h
>

10 
	~<°dio.h
>

11 
	~<°rög.h
>

12 
	~<˘y≥.h
>

15 
	$maö
(
¨gc
, **
¨gv
)

17 i‡(
¨gc
 <= 1)

20 i‡(
	`isdigô
(()*
¨gv
[1])) {

21 
CpLi°
[8], 
CpSize
;

22 
APIRET
 
rc
 = 
	`DosQuîyCp
((
CpLi°
), CpLi°, &
CpSize
);

23 i‡(
rc
)

24  
rc
;

25 --
¨gc
 > 0)

26 i‡(*
CpLi°
 =
	`©oi
(
¨gv
[
¨gc
]))

30 *
œng
 = 
	`gëív
("LANG");

31 i‡(!
œng
 || !*lang) {

32 
œng
 = 
	`gëív
("LANGUAGE");

33 i‡(!
œng
 || !*lang)

36 i‡(!
	`°∫icmp
(
œng
, 
¨gv
[1], 2))

40 
	}
}

	@istream.c

2 
	~"fm.h
"

3 
	~"my˘y≥.h
"

4 
	~"i°ªam.h
"

5 
	~<sig«l.h
>

6 #ifde‡
USE_SSL


7 
	~<›ís¶/x509v3.h
>

9 #ifde‡
__MINGW32_VERSION


10 
	~<wösock.h
>

13 
	#uch¨
 

	)

15 
	#STREAM_BUF_SIZE
 8192

	)

16 
	#SSL_BUF_SIZE
 1536

	)

18 
	#MUST_BE_UPDATED
(
bs
Ë((bs)->
°ªam
.
cur
==(bs)->°ªam.
√xt
)

	)

20 
	#POP_CHAR
(
bs
Ë((bs)->
i£os
?'\0':(bs)->
°ªam
.
buf
[(bs)->°ªam.
cur
++])

	)

22 
basic_˛o£
(*
h™dÀ
);

23 
basic_ªad
(*
h™dÀ
, *
buf
, 
Àn
);

25 
fûe_˛o£
(
fûe_h™dÀ
 *
h™dÀ
);

26 
fûe_ªad
(
fûe_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
);

28 
°r_ªad
(
Så
 
h™dÀ
, *
buf
, 
Àn
);

30 #ifde‡
USE_SSL


31 
s¶_˛o£
(
s¶_h™dÀ
 *
h™dÀ
);

32 
s¶_ªad
(
s¶_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
);

35 
ís_ªad
(
ís_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
);

36 
ís_˛o£
(
ís_h™dÀ
 *
h™dÀ
);

39 
	$do_upd©e
(
Ba£Såóm
 
ba£
)

41 
Àn
;

42 
ba£
->
°ªam
.
cur
 = ba£->°ªam.
√xt
 = 0;

43 
Àn
 = (
ba£
->
ªad
Ë(ba£->
h™dÀ
, ba£->
°ªam
.
buf
, ba£->°ªam.
size
);

44 i‡(
Àn
 <= 0)

45 
ba£
->
i£os
 = 
TRUE
;

47 
ba£
->
°ªam
.
√xt
 +
Àn
;

48 
	}
}

51 
	$buf„r_ªad
(
SåómBuf„r
 
sb
, *
obuf
, 
cou¡
)

53 
Àn
 = 
sb
->
√xt
 - sb->
cur
;

54 i‡(
Àn
 > 0) {

55 i‡(
Àn
 > 
cou¡
)

56 
Àn
 = 
cou¡
;

57 
	`bc›y
((c⁄° *)&
sb
->
buf
[sb->
cur
], 
obuf
, 
Àn
);

58 
sb
->
cur
 +
Àn
;

60  
Àn
;

61 
	}
}

64 
	$öô_buf„r
(
Ba£Såóm
 
ba£
, *
buf
, 
bufsize
)

66 
SåómBuf„r
 
sb
 = &
ba£
->
°ªam
;

67 
sb
->
size
 = 
bufsize
;

68 
sb
->
cur
 = 0;

69 i‡(
buf
) {

70 
sb
->
buf
 = (
uch¨
 *) buf;

71 
sb
->
√xt
 = 
bufsize
;

74 
sb
->
buf
 = 
	`NewAtom_N
(
uch¨
, 
bufsize
);

75 
sb
->
√xt
 = 0;

77 
ba£
->
i£os
 = 
FALSE
;

78 
	}
}

81 
	$öô_ba£_°ªam
(
Ba£Såóm
 
ba£
, 
bufsize
)

83 
	`öô_buf„r
(
ba£
, 
NULL
, 
bufsize
);

84 
	}
}

87 
	$öô_°r_°ªam
(
Ba£Såóm
 
ba£
, 
Så
 
s
)

89 
	`öô_buf„r
(
ba£
, 
s
->
±r
, s->
Àngth
);

90 
	}
}

92 
I≈utSåóm


93 
	$√wI≈utSåóm
(
des
)

95 
I≈utSåóm
 
°ªam
;

96 i‡(
des
 < 0)

97  
NULL
;

98 
°ªam
 = 
	`New
(
öput_°ªam
);

99 
	`öô_ba£_°ªam
(&
°ªam
->
ba£
, 
STREAM_BUF_SIZE
);

100 
°ªam
->
ba£
.
ty≥
 = 
IST_BASIC
;

101 
°ªam
->
ba£
.
h™dÀ
 = 
	`New
();

102 *(*)
°ªam
->
ba£
.
h™dÀ
 = 
des
;

103 
°ªam
->
ba£
.
ªad
 = ((*)())
basic_ªad
;

104 
°ªam
->
ba£
.
˛o£
 = ((*)())
basic_˛o£
;

105  
°ªam
;

106 
	}
}

108 
I≈utSåóm


109 
√wFûeSåóm
(
FILE
 * 
f
, (*
˛o£p
) ())

111 
I≈utSåóm
 
°ªam
;

112 i‡(
f
 =
NULL
)

113  
NULL
;

114 
°ªam
 = 
	`New
(
öput_°ªam
);

115 
	`öô_ba£_°ªam
(&
°ªam
->
ba£
, 
STREAM_BUF_SIZE
);

116 
°ªam
->
fûe
.
ty≥
 = 
IST_FILE
;

117 
°ªam
->
fûe
.
h™dÀ
 = 
	`New
(
fûe_h™dÀ
);

118 
°ªam
->
fûe
.
h™dÀ
->
f
 = f;

119 i‡(
˛o£p
)

120 
°ªam
->
fûe
.
h™dÀ
->
˛o£
 = 
˛o£p
;

122 
°ªam
->
fûe
.
h™dÀ
->
˛o£
 = ((*)())
f˛o£
;

123 
°ªam
->
fûe
.
ªad
 = ((*)())
fûe_ªad
;

124 
°ªam
->
fûe
.
˛o£
 = ((*)())
fûe_˛o£
;

125  
°ªam
;

126 
	}
}

128 
I≈utSåóm


129 
	$√wSåSåóm
(
Så
 
s
)

131 
I≈utSåóm
 
°ªam
;

132 i‡(
s
 =
NULL
)

133  
NULL
;

134 
°ªam
 = 
	`New
(
öput_°ªam
);

135 
	`öô_°r_°ªam
(&
°ªam
->
ba£
, 
s
);

136 
°ªam
->
°r
.
ty≥
 = 
IST_STR
;

137 
°ªam
->
°r
.
h™dÀ
 = 
s
;

138 
°ªam
->
°r
.
ªad
 = ((*)())
°r_ªad
;

139 
°ªam
->
°r
.
˛o£
 = 
NULL
;

140  
°ªam
;

141 
	}
}

143 #ifde‡
USE_SSL


144 
I≈utSåóm


145 
	$√wSSLSåóm
(
SSL
 * 
s¶
, 
sock
)

147 
I≈utSåóm
 
°ªam
;

148 i‡(
sock
 < 0)

149  
NULL
;

150 
°ªam
 = 
	`New
(
öput_°ªam
);

151 
	`öô_ba£_°ªam
(&
°ªam
->
ba£
, 
SSL_BUF_SIZE
);

152 
°ªam
->
s¶
.
ty≥
 = 
IST_SSL
;

153 
°ªam
->
s¶
.
h™dÀ
 = 
	`New
(
s¶_h™dÀ
);

154 
°ªam
->
s¶
.
h™dÀ
->ssl = ssl;

155 
°ªam
->
s¶
.
h™dÀ
->
sock
 = sock;

156 
°ªam
->
s¶
.
ªad
 = ((*)())
s¶_ªad
;

157 
°ªam
->
s¶
.
˛o£
 = ((*)())
s¶_˛o£
;

158  
°ªam
;

159 
	}
}

162 
I≈utSåóm


163 
	$√wEncodedSåóm
(
I≈utSåóm
 
is
, 
ícodög
)

165 
I≈utSåóm
 
°ªam
;

166 i‡(
is
 =
NULL
 || (
ícodög
 !
ENC_QUOTE
 &&Éncodög !
ENC_BASE64
 &&

167 
ícodög
 !
ENC_UUENCODE
))

168  
is
;

169 
°ªam
 = 
	`New
(
öput_°ªam
);

170 
	`öô_ba£_°ªam
(&
°ªam
->
ba£
, 
STREAM_BUF_SIZE
);

171 
°ªam
->
ís
.
ty≥
 = 
IST_ENCODED
;

172 
°ªam
->
ís
.
h™dÀ
 = 
	`New
(
ís_h™dÀ
);

173 
°ªam
->
ís
.
h™dÀ
->
is
 = is;

174 
°ªam
->
ís
.
h™dÀ
->
pos
 = 0;

175 
°ªam
->
ís
.
h™dÀ
->
ícodög
 =Éncoding;

176 
°ªam
->
ís
.
h™dÀ
->
s
 = 
NULL
;

177 
°ªam
->
ís
.
ªad
 = ((*)())
ís_ªad
;

178 
°ªam
->
ís
.
˛o£
 = ((*)())
ís_˛o£
;

179  
°ªam
;

180 
	}
}

183 
	$IS˛o£
(
I≈utSåóm
 
°ªam
)

185 
	`MySig«lH™dÀr
(*
¥evå≠
) ();

186 i‡(
°ªam
 =
NULL
 || såóm->
ba£
.
˛o£
 == NULL ||

187 
°ªam
->
ba£
.
ty≥
 & 
IST_UNCLOSE
)

189 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
SIG_IGN
);

190 
°ªam
->
ba£
.
	`˛o£
(°ªam->ba£.
h™dÀ
);

191 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

193 
	}
}

196 
	$ISgëc
(
I≈utSåóm
 
°ªam
)

198 
Ba£Såóm
 
ba£
;

199 i‡(
°ªam
 =
NULL
)

201 
ba£
 = &
°ªam
->base;

202 i‡(!
ba£
->
i£os
 && 
	`MUST_BE_UPDATED
(base))

203 
	`do_upd©e
(
ba£
);

204  
	`POP_CHAR
(
ba£
);

205 
	}
}

208 
	$ISundogëc
(
I≈utSåóm
 
°ªam
)

210 
SåómBuf„r
 
sb
;

211 i‡(
°ªam
 =
NULL
)

213 
sb
 = &
°ªam
->
ba£
.stream;

214 i‡(
sb
->
cur
 > 0) {

215 
sb
->
cur
--;

219 
	}
}

221 
	#MARGIN_STR_SIZE
 10

	)

222 
Så


223 
	$SåISgës
(
I≈utSåóm
 
°ªam
)

225 
Ba£Såóm
 
ba£
;

226 
SåómBuf„r
 
sb
;

227 
Så
 
s
 = 
NULL
;

228 
uch¨
 *
p
;

229 
Àn
;

231 i‡(
°ªam
 =
NULL
)

233 
ba£
 = &
°ªam
->base;

234 
sb
 = &
ba£
->
°ªam
;

236 !
ba£
->
i£os
) {

237 i‡(
	`MUST_BE_UPDATED
(
ba£
)) {

238 
	`do_upd©e
(
ba£
);

241 i‡((
p
 = 
	`memchr
(&
sb
->
buf
[sb->
cur
], '\n', sb->
√xt
 - sb->cur))) {

242 
Àn
 = 
p
 - &
sb
->
buf
[sb->
cur
] + 1;

243 i‡(
s
 =
NULL
)

244 
s
 = 
	`Så√w_size
(
Àn
);

245 
	`Såˇt_ch¨p_n
(
s
, (*)&
sb
->
buf
[sb->
cur
], 
Àn
);

246 
sb
->
cur
 +
Àn
;

247  
s
;

250 i‡(
s
 =
NULL
)

251 
s
 = 
	`Så√w_size
(
sb
->
√xt
 - sb->
cur
 + 
MARGIN_STR_SIZE
);

252 
	`Såˇt_ch¨p_n
(
s
, (*)&
sb
->
buf
[sb->
cur
],

253 
sb
->
√xt
 - sb->
cur
);

254 
sb
->
cur
 = sb->
√xt
;

259 i‡(
s
 =
NULL
)

260  
	`Så√w
();

261  
s
;

262 
	}
}

264 
Så


265 
	$SåmyISgës
(
I≈utSåóm
 
°ªam
)

267 
Ba£Såóm
 
ba£
;

268 
SåómBuf„r
 
sb
;

269 
Så
 
s
 = 
NULL
;

270 
i
, 
Àn
;

272 i‡(
°ªam
 =
NULL
)

274 
ba£
 = &
°ªam
->base;

275 
sb
 = &
ba£
->
°ªam
;

277 !
ba£
->
i£os
) {

278 i‡(
	`MUST_BE_UPDATED
(
ba£
)) {

279 
	`do_upd©e
(
ba£
);

282 i‡(
s
 && 
	`Såœ°ch¨
(s) == '\r') {

283 i‡(
sb
->
buf
[sb->
cur
] == '\n')

284 
	`Såˇt_ch¨
(
s
, ()
sb
->
buf
[sb->
cur
++]);

285  
s
;

287 
i
 = 
sb
->
cur
;

288 
i
 < 
sb
->
√xt
 && sb->
buf
[i] != '\n' && sb->buf[i] != '\r';

289 
i
++) ;

290 i‡(
i
 < 
sb
->
√xt
) {

291 
Àn
 = 
i
 - 
sb
->
cur
 + 1;

292 i‡(
s
 =
NULL
)

293 
s
 = 
	`Så√w_size
(
Àn
 + 
MARGIN_STR_SIZE
);

294 
	`Såˇt_ch¨p_n
(
s
, (*)&
sb
->
buf
[sb->
cur
], 
Àn
);

295 
sb
->
cur
 = 
i
 + 1;

296 i‡(
sb
->
buf
[
i
] == '\n')

297  
s
;

300 i‡(
s
 =
NULL
)

301 
s
 = 
	`Så√w_size
(
sb
->
√xt
 - sb->
cur
 + 
MARGIN_STR_SIZE
);

302 
	`Såˇt_ch¨p_n
(
s
, (*)&
sb
->
buf
[sb->
cur
],

303 
sb
->
√xt
 - sb->
cur
);

304 
sb
->
cur
 = sb->
√xt
;

309 i‡(
s
 =
NULL
)

310  
	`Så√w
();

311  
s
;

312 
	}
}

315 
	$ISªad
(
I≈utSåóm
 
°ªam
, 
Så
 
buf
, 
cou¡
)

317 
ª°
, 
Àn
;

318 
Ba£Såóm
 
ba£
;

320 i‡(
°ªam
 =
NULL
 || (
ba£
 = &°ªam->ba£)->
i£os
)

323 
Àn
 = 
	`buf„r_ªad
(&
ba£
->
°ªam
, 
buf
->
±r
, 
cou¡
);

324 
ª°
 = 
cou¡
 - 
Àn
;

325 i‡(
	`MUST_BE_UPDATED
(
ba£
)) {

326 
Àn
 = (
ba£
->
ªad
Ë(ba£->
h™dÀ
, &
buf
->
±r
[Àn], 
ª°
);

327 i‡(
Àn
 <= 0) {

328 
ba£
->
i£os
 = 
TRUE
;

329 
Àn
 = 0;

331 
ª°
 -
Àn
;

333 
	`Sååunˇã
(
buf
, 
cou¡
 - 
ª°
);

334 i‡(
buf
->
Àngth
 > 0)

337 
	}
}

340 
	$ISfûío
(
I≈utSåóm
 
°ªam
)

342 i‡(
°ªam
 =
NULL
)

344 
	`ISty≥
(
°ªam
Ë& ~
IST_UNCLOSE
) {

345 
IST_BASIC
:

346  *(*)
°ªam
->
ba£
.
h™dÀ
;

347 
IST_FILE
:

348  
	`fûío
(
°ªam
->
fûe
.
h™dÀ
->
f
);

349 #ifde‡
USE_SSL


350 
IST_SSL
:

351  
°ªam
->
s¶
.
h™dÀ
->
sock
;

353 
IST_ENCODED
:

354  
	`ISfûío
(
°ªam
->
ís
.
h™dÀ
->
is
);

358 
	}
}

361 
	$ISeos
(
I≈utSåóm
 
°ªam
)

363 
Ba£Såóm
 
ba£
 = &
°ªam
->base;

364 i‡(!
ba£
->
i£os
 && 
	`MUST_BE_UPDATED
(base))

365 
	`do_upd©e
(
ba£
);

366  
ba£
->
i£os
;

367 
	}
}

369 #ifde‡
USE_SSL


370 
Så
 
	gac˚±_this_sôe
;

373 
	$s¶_ac˚±_this_sôe
(*
ho°«me
)

375 i‡(
ho°«me
)

376 
ac˚±_this_sôe
 = 
	`Så√w_ch¨p
(
ho°«me
);

378 
ac˚±_this_sôe
 = 
NULL
;

379 
	}
}

382 
	$s¶_m©ch_˚π_idít
(*
idít
, 
ûí
, *
ho°«me
)

390 
hÀn
 = 
	`°æí
(
ho°«me
);

391 
i
, 
c
;

394 i‡((
ûí
 =
hÀn
Ë&& 
	`°∫ˇ£cmp
(
idít
, 
ho°«me
, hlen) == 0)

395  
TRUE
;

397 
i
 = 0; i < 
ûí
; i++) {

398 i‡(
idít
[
i
] == '*' && ident[i + 1] == '.') {

399 (
c
 = *
ho°«me
++) != '\0')

400 i‡(
c
 == '.')

402 
i
++;

405 i‡(
idít
[
i
] !*
ho°«me
++)

406  
FALSE
;

409  *
ho°«me
 == '\0';

410 
	}
}

412 
Så


413 
	$s¶_check_˚π_idít
(
X509
 * 
x
, *
ho°«me
)

415 
i
;

416 
Så
 
ªt
 = 
NULL
;

417 
m©ch_idít
 = 
FALSE
;

428 
i
 = 
	`X509_gë_ext_by_NID
(
x
, 
NID_subje˘_Æt_«me
, -1);

429 i‡(
i
 >= 0) {

430 
X509_EXTENSION
 *
ex
;

431 
	`STACK_OF
(
GENERAL_NAME
Ë* 
Æt
;

433 
ex
 = 
	`X509_gë_ext
(
x
, 
i
);

434 
Æt
 = 
	`X509V3_EXT_d2i
(
ex
);

435 i‡(
Æt
) {

436 
n
;

437 
GENERAL_NAME
 *
gn
;

438 
X509V3_EXT_METHOD
 *
mëhod
;

439 
Så
 
£í_dn¢ame
 = 
NULL
;

441 
n
 = 
	`sk_GENERAL_NAME_num
(
Æt
);

442 
i
 = 0; i < 
n
; i++) {

443 
gn
 = 
	`sk_GENERAL_NAME_vÆue
(
Æt
, 
i
);

444 i‡(
gn
->
ty≥
 =
GEN_DNS
) {

445 *
¢
 = 
	`ASN1_STRING_d©a
(
gn
->
d
.
ü5
);

446 
¶
 = 
	`ASN1_STRING_Àngth
(
gn
->
d
.
ü5
);

448 i‡(!
£í_dn¢ame
)

449 
£í_dn¢ame
 = 
	`Så√w
();

450 
	`Såˇt_m_ch¨p
(
£í_dn¢ame
, 
¢
, " ", 
NULL
);

451 i‡(
	`s¶_m©ch_˚π_idít
(
¢
, 
¶
, 
ho°«me
))

455 
mëhod
 = 
	`X509V3_EXT_gë
(
ex
);

456 
	`sk_GENERAL_NAME_‰ì
(
Æt
);

457 i‡(
i
 < 
n
)

458 
m©ch_idít
 = 
TRUE
;

459 i‡(
£í_dn¢ame
)

461 
ªt
 = 
	`S¥ötf
("Bad cîàidíà‰om %s: dNSName=%s", 
ho°«me
,

462 
£í_dn¢ame
->
±r
);

466 i‡(
m©ch_idít
 =
FALSE
 && 
ªt
 =
NULL
) {

467 
X509_NAME
 *
xn
;

468 
buf
[2048];

470 
xn
 = 
	`X509_gë_subje˘_«me
(
x
);

472 i‡(
	`X509_NAME_gë_ãxt_by_NID
(
xn
, 
NID_comm⁄Name
,

473 
buf
, (buf)) == -1)

475 
ªt
 = 
	`Så√w_ch¨p
("UnableÅo get commonÇame fromÖeer cert");

476 i‡(!
	`s¶_m©ch_˚π_idít
(
buf
, 
	`°æí
(buf), 
ho°«me
))

478 
ªt
 = 
	`S¥ötf
("Bad cîàidíà%†‰om %s", 
buf
, 
ho°«me
);

480 
m©ch_idít
 = 
TRUE
;

482  
ªt
;

483 
	}
}

485 
Så


486 
	$s¶_gë_˚πifiˇã
(
SSL
 * 
s¶
, *
ho°«me
)

488 
BIO
 *
bp
;

489 
X509
 *
x
;

490 
X509_NAME
 *
xn
;

491 *
p
;

492 
Àn
;

493 
Så
 
s
;

494 
buf
[2048];

495 
Så
 
amsg
 = 
NULL
;

496 
Så
 
emsg
;

497 *
™s
;

499 i‡(
s¶
 =
NULL
)

500  
NULL
;

501 
x
 = 
	`SSL_gë_≥î_˚πifiˇã
(
s¶
);

502 i‡(
x
 =
NULL
) {

503 i‡(
ac˚±_this_sôe


504 && 
	`°rˇ£cmp
(
ac˚±_this_sôe
->
±r
, 
ho°«me
) == 0)

505 
™s
 = "y";

508 
emsg
 = 
	`Så√w_ch¨p
("No SSLÖeer certificate:áccept? (y/n)");

509 
™s
 = 
	`öputAnswî
(
emsg
->
±r
);

511 i‡(
™s
 && 
	`TOLOWER
(*ans) == 'y')

513 
amsg
 = 
Så√w_ch¨p


517 *
e
 = "This SSL session wasÑejected "

519 
	`di•_îr_mesßge
(
e
, 
FALSE
);

520 
	`‰ì_s¶_˘x
();

521  
NULL
;

523 i‡(
amsg
)

524 
	`di•_îr_mesßge
(
amsg
->
±r
, 
FALSE
);

525 
	`s¶_ac˚±_this_sôe
(
ho°«me
);

527 
s
 = 
amsg
 ?ámsg : 
	`Så√w_ch¨p
("valid certificate");

528  
s
;

530 #ifde‡
USE_SSL_VERIFY


535 i‡(
s¶_vîify_£rvî
) {

536 
vîr
;

537 i‡((
vîr
 = 
	`SSL_gë_vîify_ªsu…
(
s¶
))

538 !
X509_V_OK
) {

539 c⁄° *
em
 = 
	`X509_vîify_˚π_îr‹_°rög
(
vîr
);

540 i‡(
ac˚±_this_sôe


541 && 
	`°rˇ£cmp
(
ac˚±_this_sôe
->
±r
, 
ho°«me
) == 0)

542 
™s
 = "y";

545 
emsg
 = 
	`S¥ötf
("%s:ác˚±? (y/n)", 
em
);

546 
™s
 = 
	`öputAnswî
(
emsg
->
±r
);

548 i‡(
™s
 && 
	`TOLOWER
(*ans) == 'y') {

550 
amsg
 = 
	`S¥ötf
("Accept unsecure SSL session: "

551 "unvîifõd: %s", 
em
);

555 *
e
 =

556 
	`S¥ötf
("Thi†SSL sessi⁄ wa†ªje˘ed: %s", 
em
)->
±r
;

557 
	`di•_îr_mesßge
(
e
, 
FALSE
);

558 
	`‰ì_s¶_˘x
();

559  
NULL
;

564 
emsg
 = 
	`s¶_check_˚π_idít
(
x
, 
ho°«me
);

565 i‡(
emsg
 !
NULL
) {

566 i‡(
ac˚±_this_sôe


567 && 
	`°rˇ£cmp
(
ac˚±_this_sôe
->
±r
, 
ho°«me
) == 0)

568 
™s
 = "y";

570 
Så
 
ï
 = 
	`Sådup
(
emsg
);

571 i‡(
ï
->
Àngth
 > 
COLS
 - 16)

572 
	`Såshrök
(
ï
,Ép->
Àngth
 - (
COLS
 - 16));

573 
	`Såˇt_ch¨p
(
ï
, ":áccept? (y/n)");

574 
™s
 = 
	`öputAnswî
(
ï
->
±r
);

576 i‡(
™s
 && 
	`TOLOWER
(*ans) == 'y') {

578 
amsg
 = 
	`Så√w_ch¨p
("Accept unsecure SSL session:");

579 
	`Såˇt
(
amsg
, 
emsg
);

583 *
e
 = "This SSL session wasÑejected "

585 
	`di•_îr_mesßge
(
e
, 
FALSE
);

586 
	`‰ì_s¶_˘x
();

587  
NULL
;

590 i‡(
amsg
)

591 
	`di•_îr_mesßge
(
amsg
->
±r
, 
FALSE
);

592 
	`s¶_ac˚±_this_sôe
(
ho°«me
);

594 
s
 = 
amsg
 ?ámsg : 
	`Så√w_ch¨p
("valid certificate");

595 
	`Såˇt_ch¨p
(
s
, "\n");

596 
xn
 = 
	`X509_gë_subje˘_«me
(
x
);

597 i‡(
	`X509_NAME_gë_ãxt_by_NID
(
xn
, 
NID_comm⁄Name
, 
buf
, (buf)) == -1)

598 
	`Såˇt_ch¨p
(
s
, " subject=<unknown>");

600 
	`Såˇt_m_ch¨p
(
s
, " subje˘=", 
buf
, 
NULL
);

601 
xn
 = 
	`X509_gë_issuî_«me
(
x
);

602 i‡(
	`X509_NAME_gë_ãxt_by_NID
(
xn
, 
NID_comm⁄Name
, 
buf
, (buf)) == -1)

603 
	`Såˇt_ch¨p
(
s
, ": issuer=<unknown>");

605 
	`Såˇt_m_ch¨p
(
s
, ": issuî=", 
buf
, 
NULL
);

606 
	`Såˇt_ch¨p
(
s
, "\n\n");

608 
bp
 = 
	`BIO_√w
(
	`BIO_s_mem
());

609 
	`X509_¥öt
(
bp
, 
x
);

610 
Àn
 = ()
	`BIO_˘æ
(
bp
, 
BIO_CTRL_INFO
, 0, (*)&
p
);

611 
	`Såˇt_ch¨p_n
(
s
, 
p
, 
Àn
);

612 
	`BIO_‰ì_Æl
(
bp
);

613 
	`X509_‰ì
(
x
);

614  
s
;

615 
	}
}

621 
	$basic_˛o£
(*
h™dÀ
)

623 #ifde‡
__MINGW32_VERSION


624 
	`˛o£sockë
(*(*)
h™dÀ
);

626 
	`˛o£
(*(*)
h™dÀ
);

628 
	}
}

631 
	$basic_ªad
(*
h™dÀ
, *
buf
, 
Àn
)

633 #ifde‡
__MINGW32_VERSION


634  
	`ªcv
(*(*)
h™dÀ
, 
buf
, 
Àn
, 0);

636  
	`ªad
(*(*)
h™dÀ
, 
buf
, 
Àn
);

638 
	}
}

641 
	$fûe_˛o£
(
fûe_h™dÀ
 *
h™dÀ
)

643 
h™dÀ
->
	`˛o£
(h™dÀ->
f
);

644 
	}
}

647 
	$fûe_ªad
(
fûe_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
)

649  
	`‰ód
(
buf
, 1, 
Àn
, 
h™dÀ
->
f
);

650 
	}
}

653 
	$°r_ªad
(
Så
 
h™dÀ
, *
buf
, 
Àn
)

656 
	}
}

658 #ifde‡
USE_SSL


660 
	$s¶_˛o£
(
s¶_h™dÀ
 *
h™dÀ
)

662 
	`˛o£
(
h™dÀ
->
sock
);

663 i‡(
h™dÀ
->
s¶
)

664 
	`SSL_‰ì
(
h™dÀ
->
s¶
);

665 
	}
}

668 
	$s¶_ªad
(
s¶_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
)

670 
°©us
;

671 i‡(
h™dÀ
->
s¶
) {

672 #ifde‡
USE_SSL_VERIFY


674 
°©us
 = 
	`SSL_ªad
(
h™dÀ
->
s¶
, 
buf
, 
Àn
);

675 i‡(
°©us
 > 0)

677 
	`SSL_gë_îr‹
(
h™dÀ
->
s¶
, 
°©us
)) {

678 
SSL_ERROR_WANT_READ
:

679 
SSL_ERROR_WANT_WRITE
:

687 
°©us
 = 
	`SSL_ªad
(
h™dÀ
->
s¶
, 
buf
, 
Àn
);

691 
°©us
 = 
	`ªad
(
h™dÀ
->
sock
, 
buf
, 
Àn
);

692  
°©us
;

693 
	}
}

697 
	$ís_˛o£
(
ís_h™dÀ
 *
h™dÀ
)

699 
	`IS˛o£
(
h™dÀ
->
is
);

700 
	}
}

703 
	$ís_ªad
(
ís_h™dÀ
 *
h™dÀ
, *
buf
, 
Àn
)

705 i‡(
h™dÀ
->
s
 =
NULL
 || h™dÀ->
pos
 =h™dÀ->s->
Àngth
) {

706 *
p
;

707 
h™dÀ
->
s
 = 
	`SåmyISgës
(h™dÀ->
is
);

708 i‡(
h™dÀ
->
s
->
Àngth
 == 0)

710 
	`˛ónup_löe
(
h™dÀ
->
s
, 
PAGER_MODE
);

711 i‡(
h™dÀ
->
ícodög
 =
ENC_BASE64
)

712 
	`Såch›
(
h™dÀ
->
s
);

713 i‡(
h™dÀ
->
ícodög
 =
ENC_UUENCODE
) {

714 i‡(!
	`°∫cmp
(
h™dÀ
->
s
->
±r
, "begin", 5))

715 
h™dÀ
->
s
 = 
	`SåmyISgës
(h™dÀ->
is
);

716 
	`Såch›
(
h™dÀ
->
s
);

718 
p
 = 
h™dÀ
->
s
->
±r
;

719 i‡(
h™dÀ
->
ícodög
 =
ENC_QUOTE
)

720 
h™dÀ
->
s
 = 
	`decodeQP
(&
p
);

721 i‡(
h™dÀ
->
ícodög
 =
ENC_BASE64
)

722 
h™dÀ
->
s
 = 
	`decodeB
(&
p
);

723 i‡(
h™dÀ
->
ícodög
 =
ENC_UUENCODE
)

724 
h™dÀ
->
s
 = 
	`decodeU
(&
p
);

725 
h™dÀ
->
pos
 = 0;

728 i‡(
Àn
 > 
h™dÀ
->
s
->
Àngth
 - h™dÀ->
pos
)

729 
Àn
 = 
h™dÀ
->
s
->
Àngth
 - h™dÀ->
pos
;

731 
	`bc›y
(&
h™dÀ
->
s
->
±r
[h™dÀ->
pos
], 
buf
, 
Àn
);

732 
h™dÀ
->
pos
 +
Àn
;

733  
Àn
;

734 
	}
}

	@istream.h

2 #i‚de‡
IO_STREAM_H


3 
	#IO_STREAM_H


	)

5 
	~<°dio.h
>

6 #ifde‡
USE_SSL


7 
	~<›ís¶/bio.h
>

8 
	~<›ís¶/x509.h
>

9 
	~<›ís¶/s¶.h
>

11 
	~"Så.h
"

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<f˙é.h
>

16 
	s°ªam_buf„r
 {

17 *
	mbuf
;

18 
	msize
, 
	mcur
, 
	m√xt
;

21 
°ªam_buf„r
 *
	tSåómBuf„r
;

23 
	sfûe_h™dÀ
 {

24 
FILE
 *
	mf
;

25 (*
	m˛o£
) ();

28 #ifde‡
USE_SSL


29 
	ss¶_h™dÀ
 {

30 
SSL
 *
	ms¶
;

31 
	msock
;

35 
	göput_°ªam
;

37 
	sís_h™dÀ
 {

38 
öput_°ªam
 *
	mis
;

39 
Så
 
	ms
;

40 
	mpos
;

41 
	mícodög
;

45 
	sba£_°ªam
 {

46 
°ªam_buf„r
 
	m°ªam
;

47 *
	mh™dÀ
;

48 
	mty≥
;

49 
	mi£os
;

50 (*
	mªad
) ();

51 (*
	m˛o£
) ();

54 
	sfûe_°ªam
 {

55 
°ªam_buf„r
 
	m°ªam
;

56 
fûe_h™dÀ
 *
	mh™dÀ
;

57 
	mty≥
;

58 
	mi£os
;

59 (*
	mªad
) ();

60 (*
	m˛o£
) ();

63 
	s°r_°ªam
 {

64 
°ªam_buf„r
 
	m°ªam
;

65 
Så
 
	mh™dÀ
;

66 
	mty≥
;

67 
	mi£os
;

68 (*
	mªad
) ();

69 (*
	m˛o£
) ();

72 #ifde‡
USE_SSL


73 
	ss¶_°ªam
 {

74 
°ªam_buf„r
 
	m°ªam
;

75 
s¶_h™dÀ
 *
	mh™dÀ
;

76 
	mty≥
;

77 
	mi£os
;

78 (*
	mªad
) ();

79 (*
	m˛o£
) ();

83 
	sícoded_°ªam
 {

84 
°ªam_buf„r
 
	m°ªam
;

85 
ís_h™dÀ
 *
	mh™dÀ
;

86 
	mty≥
;

87 
	mi£os
;

88 (*
	mªad
) ();

89 (*
	m˛o£
) ();

92 
	uöput_°ªam
 {

93 
ba£_°ªam
 
	mba£
;

94 
fûe_°ªam
 
	mfûe
;

95 
°r_°ªam
 
	m°r
;

96 #ifde‡
USE_SSL


97 
s¶_°ªam
 
	ms¶
;

99 
ícoded_°ªam
 
	mís
;

102 
ba£_°ªam
 *
	tBa£Såóm
;

103 
fûe_°ªam
 *
	tFûeSåóm
;

104 
°r_°ªam
 *
	tSåSåóm
;

105 #ifde‡
USE_SSL


106 
s¶_°ªam
 *
	tSSLSåóm
;

108 
ícoded_°ªam
 *
	tEncodedSåSåóm
;

110 
öput_°ªam
 *
	tI≈utSåóm
;

112 
I≈utSåóm
 
√wI≈utSåóm
(
des
);

113 
I≈utSåóm
 
√wFûeSåóm
(
FILE
 * 
f
, (*
˛o£p
) ());

114 
I≈utSåóm
 
√wSåSåóm
(
Så
 
s
);

115 #ifde‡
USE_SSL


116 
I≈utSåóm
 
√wSSLSåóm
(
SSL
 * 
s¶
, 
sock
);

118 
I≈utSåóm
 
√wEncodedSåóm
(I≈utSåóm 
is
, 
ícodög
);

119 
IS˛o£
(
I≈utSåóm
 
°ªam
);

120 
ISgëc
(
I≈utSåóm
 
°ªam
);

121 
ISundogëc
(
I≈utSåóm
 
°ªam
);

122 
Så
 
SåISgës
(
I≈utSåóm
 
°ªam
);

123 
Så
 
SåmyISgës
(
I≈utSåóm
 
°ªam
);

124 
ISªad
(
I≈utSåóm
 
°ªam
, 
Så
 
buf
, 
cou¡
);

125 
ISfûío
(
I≈utSåóm
 
°ªam
);

126 
ISeos
(
I≈utSåóm
 
°ªam
);

127 #ifde‡
USE_SSL


128 
s¶_ac˚±_this_sôe
(*
ho°«me
);

129 
Så
 
s¶_gë_˚πifiˇã
(
SSL
 * 
s¶
, *
ho°«me
);

132 
	#IST_BASIC
 0

	)

133 
	#IST_FILE
 1

	)

134 
	#IST_STR
 2

	)

135 
	#IST_SSL
 3

	)

136 
	#IST_ENCODED
 4

	)

137 
	#IST_UNCLOSE
 0x10

	)

139 
	#ISty≥
(
°ªam
Ë((°ªam)->
ba£
.
ty≥
)

	)

140 
	#is_eos
(
°ªam
Ë
	`ISeos
(°ªam)

	)

141 
	#i£os
(
°ªam
Ë((°ªam)->
ba£
.
i£os
)

	)

142 
	#fûe_of
(
°ªam
Ë((°ªam)->
fûe
.
h™dÀ
->
f
)

	)

143 
	#£t_˛o£
(
°ªam
,
˛o£p
Ë((
	`ISty≥
(°ªam)==
IST_FILE
)?((°ªam)->
fûe
.
h™dÀ
->
˛o£
=(˛o£p)):0)

	)

144 
	#°r_of
(
°ªam
Ë((°ªam)->
°r
.
h™dÀ
)

	)

145 #ifde‡
USE_SSL


146 
	#s¶_sockë_of
(
°ªam
Ë((°ªam)->
s¶
.
h™dÀ
->
sock
)

	)

147 
	#s¶_of
(
°ªam
Ë((°ªam)->
s¶
.
h™dÀ
->s¶)

	)

150 #ifde‡
USE_BINMODE_STREAM


151 
	#›íIS
(
∑th
Ë
	`√wI≈utSåóm
(
	`›í
(’©h),
O_RDONLY
|
O_BINARY
))

	)

153 
	#›íIS
(
∑th
Ë
	`√wI≈utSåóm
(
	`›í
(’©h),
O_RDONLY
))

	)

	@keybind.c

2 
	~"fun˙ame2.h
"

4 
	gGlobÆKeym≠
[128] = {

6 #ifde‡
__EMX__


7 
pcm≠
, 
löbeg
, 
movL
, 
nulcmd
,Çulcmd, 
löíd
, 
movR
, 
cuæno
,

9 
_m¨k
, 
löbeg
, 
movL
, 
nulcmd
,Çulcmd, 
löíd
, 
movR
, 
cuæno
,

12 
ldHi°
, 
√xtA
, 
fﬁlowA
, 
cooL°
, 
rdrwSc
, fﬁlowA, 
movD
, 
nulcmd
,

14 
movU
, 
˛o£T
, 
i§chbak
, 
i§chf‹
, 
èbA
, 
¥evA
, 
pgF‹e
, 
wøpToggÀ
,

16 
nulcmd
,Çulcmd, 
su•
, 
escm≠
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

18 
pgF‹e
, 
execsh
, 
ªM¨k
, 
pùesh
, 
löíd
, 
nulcmd
,Çulcmd,Çulcmd,

20 
undoPos
, 
ªdoPos
, 
nulcmd
, 
pgF‹e
, 
cﬁ1L
, 
pgBack
, 
cﬁ1R
, 
§chf‹
,

22 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

24 
nulcmd
,Çulcmd, 
chkURL
, 
chkWORD
, 
shi·l
, 
pgöfo
, 
shi·r
, 
§chbak
,

26 
ªadsh
, 
nulcmd
, 
backBf
,Çulcmd, 
ldDL
, 
edôBf
, 
rFøme
, 
goLöeL
,

28 
ldhñp
, 
fﬁlowI
, 
lup1
, 
ldown1
, 
lökL°
, 
extbrz
, 
§ch¥v
, 
nulcmd
,

30 
nulcmd
, 
quôfm
, 
ªlﬂd
, 
svBuf
, 
√wT
, 
goURL
, 
ldfûe
, 
movLW
,

32 
nulcmd
,Çulcmd, 
˘rC§H
, 
t›A
,Çulcmd, 
œ°A
, 
löbeg
,Çulcmd,

34 
nulcmd
, 
svA
, 
pgBack
, 
curURL
,Çulcmd,Çulcmd,Çulcmd, 
goLöeF
,

36 
movL
, 
≥ekIMG
, 
movD
, 
movU
, 
movR
, 
msToggÀ
, 
§chnxt
, 
ldO±
,

38 
nulcmd
, 
qquôfm
, 
di•Vî
, 
£lMn
,Çulcmd, 
≥ekURL
, 
vwSrc
, 
movRW
,

40 
nulcmd
,Çulcmd, 
˘rC§V
, 
¥evT
, 
pùeBuf
, 
√xtT
,Çulcmd,Çulcmd,

43 
	gEscKeym≠
[128] = {

45 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

47 
nulcmd
, 
¥evA
, 
svA
,Çulcmd,Çulcmd, svA,Çulcmd,Çulcmd,

49 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

51 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

53 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

55 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

57 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

59 
nulcmd
,Çulcmd, 
chkNMID
,Çulcmd, 
goLöeF
,Çulcmd, 
goLöeL
,Çulcmd,

61 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

63 
nulcmd
, 
svI
,Çulcmd,Çulcmd,Çulcmd, 
lökbrz
,Çulcmd, 
escbm≠
,

65 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd, 
di˘w‹d©
,

67 
nulcmd
,Çulcmd,Çulcmd, 
escbm≠
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

69 
nulcmd
, 
adBm¨k
, 
ldBm¨k
, 
execCmd
,Çulcmd, 
edôS¸
,Çulcmd, 
goLöe
,

71 
nulcmd
,Çulcmd,Çulcmd, 
defKey
, 
li°Mn
, 
movli°Mn
, 
√xtMk
, 
£tO±
,

73 
¥evMk
, 
nulcmd
,Çulcmd, 
svSrc
, 
èbMn
, 
g‹URL
, 
pgBack
, 
di˘w‹d
,

75 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

78 
	gEscBKeym≠
[128] = {

80 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

82 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

84 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

86 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

88 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

90 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

92 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

94 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

96 
nulcmd
, 
movU
, 
movD
, 
movR
, 
movL
,Çulcmd, 
goLöeL
, 
pgF‹e
,

98 
goLöeF
, 
pgBack
, 
nulcmd
,Çulcmd,Çulcmd, 
mou£
,Çulcmd,Çulcmd,

100 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

102 
nulcmd
,Çulcmd, 
¥evA
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

104 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

106 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

108 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

110 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

113 
	gEscDKeym≠
[128] = {

115 
nulcmd
, 
goLöeF
, 
maöMn
,Çulcmd, 
goLöeL
, 
pgBack
, 
pgF‹e
,Çulcmd,

117 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

119 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

121 
nulcmd
,Çulcmd,Çulcmd,Çulcmd, 
maöMn
,Çulcmd,Çulcmd,Çulcmd,

123 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

124 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

125 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

126 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

128 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

129 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

130 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

131 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

133 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

134 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

135 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

136 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

139 #ifde‡
__EMX__


140 
	gPcKeym≠
[256] = {

142 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

144 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd, 
¥evA
,

146 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

148 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

150 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

152 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

154 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

156 
nulcmd
,Çulcmd,Çulcmd, 
ldhñp
,Çulcmd, 
qquôfm
,Çulcmd,Çulcmd,

158 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd, 
goLöeF
,

160 
movU
, 
pgBack
, 
nulcmd
, 
movL
,Çulcmd, 
movR
,Çulcmd, 
goLöeL
,

162 
movD
, 
pgF‹e
, 
maöMn
, 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

164 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

166 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

168 
nulcmd
,Çulcmd,Çulcmd, 
qquôfm
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

170 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

172 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

174 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

176 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

178 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

179 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

181 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

182 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

183 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

184 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

185 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

186 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

187 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

188 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

189 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

190 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

191 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

192 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd

	@keybind_lynx.c

14 
	~"fun˙ame2.h
"

16 
	gGlobÆKeym≠
[128] = {

18 
_m¨k
, 
goLöeF
, 
backBf
, 
nulcmd
,Çulcmd, 
goLöeL
, 
fﬁlowA
, 
cuæno
,

20 
ldHi°
, 
√xtA
, 
fﬁlowA
, 
cooL°
, 
rdrwSc
, fﬁlowA,ÇextA, 
nulcmd
,

22 
¥evA
, 
˛o£T
, 
ªlﬂd
, 
§chf‹
, 
èbA
,ÖªvA, 
pgF‹e
, 
rdrwSc
,

24 
nulcmd
,Çulcmd, 
su•
, 
escm≠
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

26 
pgF‹e
, 
execsh
, 
ªM¨k
, 
pùesh
, 
löíd
, 
nulcmd
,Çulcmd,Çulcmd,

28 
undoPos
, 
ªdoPos
, 
nulcmd
, 
pgF‹e
, 
cﬁ1L
, 
pgBack
, 
cﬁ1R
, 
§chf‹
,

30 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

32 
nulcmd
,Çulcmd, 
chkURL
, 
chkWORD
, 
shi·l
, 
pgöfo
, 
shi·r
, 
ldhñp
,

34 
ªadsh
, 
nulcmd
, 
backBf
,Çulcmd, 
ldDL
, 
edôBf
, 
rFøme
, 
goLöe
,

36 
ldhñp
, 
fﬁlowI
, 
lup1
, 
ldown1
, 
lökL°
, 
extbrz
, 
√xtMk
, 
nulcmd
,

38 
¥evMk
, 
quôfm
, 
ªlﬂd
, 
svBuf
, 
√wT
, 
goURL
, 
ldfûe
, 
movLW
,

40 
nulcmd
,Çulcmd, 
˘rC§H
, 
t›A
, 
vwSrc
, 
œ°A
, 
löbeg
,Çulcmd,

42 
nulcmd
, 
adBm¨k
, 
pgBack
, 
curURL
, 
svA
,Çulcmd,Çulcmd, 
goURL
,

44 
movL
, 
≥ekIMG
, 
movD
, 
movU
, 
movR
, 
msToggÀ
, 
§chnxt
, 
ldO±
,

46 
svBuf
, 
qquôfm
, 
di•Vî
, 
£lMn
, 
nulcmd
, 
≥ekURL
, 
ldBm¨k
, 
movRW
,

48 
nulcmd
,Çulcmd, 
˘rC§V
, 
¥evT
, 
pùeBuf
, 
√xtT
,Çulcmd,Çulcmd,

51 
	gEscKeym≠
[128] = {

53 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

55 
nulcmd
, 
¥evA
, 
svA
,Çulcmd,Çulcmd, svA,Çulcmd,Çulcmd,

57 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

59 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

61 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

63 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

65 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

67 
nulcmd
,Çulcmd, 
chkNMID
,Çulcmd, 
goLöeF
,Çulcmd, 
goLöeL
,Çulcmd,

69 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

71 
nulcmd
, 
svI
,Çulcmd,Çulcmd,Çulcmd, 
lökbrz
,Çulcmd, 
escbm≠
,

73 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd, 
di˘w‹d©
,

75 
nulcmd
,Çulcmd,Çulcmd, 
escbm≠
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

77 
nulcmd
, 
adBm¨k
, 
ldBm¨k
, 
execCmd
,Çulcmd, 
edôS¸
,Çulcmd, 
goLöe
,

79 
nulcmd
,Çulcmd,Çulcmd, 
defKey
, 
li°Mn
, 
movli°Mn
, 
√xtMk
, 
£tO±
,

81 
¥evMk
, 
nulcmd
,Çulcmd, 
svSrc
, 
èbMn
, 
g‹URL
, 
pgBack
, 
di˘w‹d
,

83 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

86 
	gEscBKeym≠
[128] = {

88 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

90 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

92 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

94 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

96 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

98 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

100 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

102 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

104 
nulcmd
, 
¥evA
, 
√xtA
, 
fﬁlowA
, 
backBf
,Çulcmd, 
goLöeL
, 
pgF‹e
,

106 
goLöeF
, 
pgBack
, 
nulcmd
,Çulcmd,Çulcmd, 
mou£
,Çulcmd,Çulcmd,

108 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

110 
nulcmd
,Çulcmd, 
¥evA
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

112 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

114 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

116 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

118 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

121 
	gEscDKeym≠
[128] = {

123 
nulcmd
, 
goLöeF
, 
maöMn
,Çulcmd, 
goLöeL
, 
pgBack
, 
pgF‹e
,Çulcmd,

125 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

127 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

129 
nulcmd
,Çulcmd,Çulcmd,Çulcmd, 
maöMn
,Çulcmd,Çulcmd,Çulcmd,

131 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

132 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

133 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

134 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

136 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

137 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

138 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

139 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

141 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

142 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

143 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

144 
nulcmd
,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,Çulcmd,

	@libwc/big5.c

2 
	~"wc.h
"

3 
	~"big5.h
"

4 
	~"£¨ch.h
"

5 
	~"wtf.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

10 
	#C0
 
WC_BIG5_MAP_C0


	)

11 
	#GL
 
WC_BIG5_MAP_GL


	)

12 
	#C1
 
WC_BIG5_MAP_C1


	)

13 
	#LB
 
WC_BIG5_MAP_LB


	)

14 
	#UB
 
WC_BIG5_MAP_UB


	)

16 
wc_uöt8
 
	gWC_BIG5_MAP
[ 0x100 ] = {

17 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

18 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

19 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

20 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

21 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

22 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

23 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

24 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
C0
,

26 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

27 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

28 
C1
, 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

29 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

30 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

31 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

32 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

33 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, 
C1
,

36 
wc_wch¨_t


37 
	$wc_big5_to_cs94w
(
wc_wch¨_t
 
cc
)

39 
cc
.
code
 = 
	`WC_BIG5_N
(cc.code);

40 i‡(
cc
.
code
 < 
WC_C_BIG5_2_BASE
)

41 
cc
.
ccs
 = 
WC_CCS_BIG5_1
;

43 
cc
.
ccs
 = 
WC_CCS_BIG5_2
;

44 
cc
.
code
 -
WC_C_BIG5_2_BASE
;

46 
cc
.
code
 = 
	`WC_N_CS94W
(cc.code);

47  
cc
;

48 
	}
}

50 
wc_wch¨_t


51 
	$wc_cs94w_to_big5
(
wc_wch¨_t
 
cc
)

53 
cc
.
code
 = 
	`WC_CS94W_N
(cc.code);

54 i‡(
cc
.
ccs
 =
WC_CCS_BIG5_2
)

55 
cc
.
code
 +
WC_C_BIG5_2_BASE
;

56 
cc
.
code
 = 
	`WC_N_BIG5
(cc.code);

57 
cc
.
ccs
 = 
WC_CCS_BIG5
;

58  
cc
;

59 
	}
}

61 
Så


62 
	$wc_c⁄v_‰om_big5
(
Så
 
is
, 
wc_˚s
 
˚s
)

64 
Så
 
os
;

65 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

66 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

67 
wc_uch¨
 *
p
;

68 
°©e
 = 
WC_BIG5_NOSTATE
;

70 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

72 i‡(
p
 =
ï
)

73  
is
;

74 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

75 i‡(
p
 > 
•
)

76 
	`Såˇt_ch¨p_n
(
os
, (*)
is
->
±r
, ()(
p
 - 
•
));

78 ; 
p
 < 
ï
;Ö++) {

79 
°©e
) {

80 
WC_BIG5_NOSTATE
:

81 
WC_BIG5_MAP
[*
p
]) {

82 
UB
:

83 
°©e
 = 
WC_BIG5_MBYTE1
;

85 
C1
:

86 
	`wtf_push_unknown
(
os
, 
p
, 1);

89 
	`Såˇt_ch¨
(
os
, ()*
p
);

93 
WC_BIG5_MBYTE1
:

94 i‡(
WC_BIG5_MAP
[*
p
] & 
LB
)

95 
	`wtf_push
(
os
, 
WC_CCS_BIG5
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

97 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

98 
°©e
 = 
WC_BIG5_NOSTATE
;

102 
°©e
) {

103 
WC_BIG5_MBYTE1
:

104 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

107  
os
;

108 
	}
}

111 
	$wc_push_to_big5
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

114 
cc
.
ccs
) {

115 
WC_CCS_US_ASCII
:

116 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

118 
WC_CCS_BIG5_1
:

119 
WC_CCS_BIG5_2
:

120 
cc
 = 
	`wc_cs94w_to_big5
(cc);

121 
WC_CCS_BIG5
:

122 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

123 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

125 
WC_CCS_UNKNOWN_W
:

126 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

127 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

129 
WC_CCS_UNKNOWN
:

130 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

131 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

134 #ifde‡
USE_UNICODE


135 i‡(
WcO±i⁄
.
ucs_c⁄v
)

136 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

139 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

143 
	}
}

145 
Så


146 
	$wc_ch¨_c⁄v_‰om_big5
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

148 
Så
 
os
;

149 
wc_uch¨
 
big5u
;

151 i‡(
°
->
°©e
 == -1) {

152 
°
->
°©e
 = 
WC_BIG5_NOSTATE
;

153 
os
 = 
	`Så√w_size
(8);

156 
°
->
°©e
) {

157 
WC_BIG5_NOSTATE
:

158 
WC_BIG5_MAP
[
c
]) {

159 
UB
:

160 
big5u
 = 
c
;

161 
°
->
°©e
 = 
WC_BIG5_MBYTE1
;

162  
NULL
;

163 
C1
:

166 
	`Såˇt_ch¨
(
os
, ()
c
);

170 
WC_BIG5_MBYTE1
:

171 i‡(
WC_BIG5_MAP
[
c
] & 
LB
)

172 
	`wtf_push
(
os
, 
WC_CCS_BIG5
, ((
wc_uöt32
)
big5u
 << 8Ë| 
c
);

175 
°
->
°©e
 = -1;

176  
os
;

177 
	}
}

	@libwc/big5.h

2 #i‚de‡
_WC_BIG5_H


3 
	#_WC_BIG5_H


	)

5 
	#WC_C_BIG5_2_BASE
 (0x28 * 0x9D)

	)

7 
	#WC_BIG5_NOSTATE
 0

	)

8 
	#WC_BIG5_MBYTE1
 1

	)

10 
	#WC_BIG5_MAP_C0
 0x0

	)

11 
	#WC_BIG5_MAP_GL
 0x1

	)

12 
	#WC_BIG5_MAP_C1
 0x2

	)

13 
	#WC_BIG5_MAP_LB
 0x4

	)

14 
	#WC_BIG5_MAP_UB
 (0x3 | 
WC_BIG5_MAP_LB
)

	)

16 
	#WC_BIG5UL_N
(
U
,
L
) (((U) - 0xA1) * 0x9D \

17 + (
L
Ë- (((LË< 0xA1Ë? 0x40 : 0x62))

	)

18 
	#WC_BIG5_N
(
c
Ë
	`WC_BIG5UL_N
(((cË>> 8Ë& 0xFF, (cË& 0xFF)

	)

19 
	#WC_N_BIG5U
(
c
Ë((cË/ 0x9D + 0xA1)

	)

20 
	#WC_N_BIG5L
(
c
Ë((cË% 0x9D + (((cË% 0x9D < 0x3FË? 0x40 : 0x62))

	)

21 
	#WC_N_BIG5
(
c
Ë((
	`WC_N_BIG5U
(cË<< 8Ë+ 
	`WC_N_BIG5L
(c))

	)

23 
wc_uch¨
 
WC_BIG5_MAP
[];

25 
wc_wch¨_t
 
wc_big5_to_cs94w
(wc_wch¨_à
cc
);

26 
wc_wch¨_t
 
wc_cs94w_to_big5
(wc_wch¨_à
cc
);

27 
Så
 
wc_c⁄v_‰om_big5
(Så 
is
, 
wc_˚s
 
˚s
);

28 
wc_push_to_big5
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

29 
Så
 
wc_ch¨_c⁄v_‰om_big5
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/ccs.h

2 #i‚de‡
_WC_CCS_H


3 
	#_WC_CCS_H


	)

5 
	~"iso2022.h
"

6 
	~"¥iv.h
"

8 
	#WC_F_ISO_BASE
 0x40

	)

9 
	#WC_F_PCS_BASE
 0x01

	)

10 
	#WC_F_WCS_BASE
 0x00

	)

12 
	#WC_F_CS94_END
 
WC_F_GB_1988


	)

13 
	#WC_F_CS96_END
 
WC_F_ISO_8859_16


	)

14 
	#WC_F_CS94W_END
 
WC_F_JIS_X_0213_2


	)

15 
	#WC_F_CS96W_END
 0

	)

16 
	#WC_F_CS942_END
 0

	)

17 
	#WC_F_PCS_END
 
WC_F_RAW


	)

18 
	#WC_F_PCSW_END
 
WC_F_HKSCS_2


	)

19 
	#WC_F_WCS16_END
 
WC_F_UCS2


	)

20 
	#WC_F_WCS16W_END
 
WC_F_UCS2


	)

21 
	#WC_F_WCS32_END
 
WC_F_GB18030


	)

22 
	#WC_F_WCS32W_END
 
WC_F_GB18030


	)

24 
	#WC_CCS_A_SET
 0x0FFFF

	)

25 
	#WC_CCS_A_TYPE
 0x0FF00

	)

26 
	#WC_CCS_A_INDEX
 0x000FF

	)

27 
	#WC_CCS_A_MBYTE
 0x08000

	)

28 
	#WC_CCS_A_WIDE
 0x10000

	)

29 
	#WC_CCS_A_COMB
 0x20000

	)

30 
	#WC_CCS_A_ISO_2022
 0x00700

	)

32 
	#WC_CCS_A_CS94
 0x00100

	)

33 
	#WC_CCS_A_CS96
 0x00200

	)

34 
	#WC_CCS_A_CS942
 0x00400

	)

35 
	#WC_CCS_A_PCS
 0x00800

	)

36 
	#WC_CCS_A_WCS16
 0x01000

	)

37 
	#WC_CCS_A_WCS32
 0x02000

	)

38 
	#WC_CCS_A_UNKNOWN
 0x04000

	)

39 
	#WC_CCS_A_CS94W
 (
WC_CCS_A_CS94
|
WC_CCS_A_MBYTE
)

	)

40 
	#WC_CCS_A_CS96W
 (
WC_CCS_A_CS96
|
WC_CCS_A_MBYTE
)

	)

41 
	#WC_CCS_A_PCSW
 (
WC_CCS_A_PCS
|
WC_CCS_A_MBYTE
)

	)

42 
	#WC_CCS_A_WCS16W
 (
WC_CCS_A_WCS16
|
WC_CCS_A_WIDE
)

	)

43 
	#WC_CCS_A_WCS32W
 (
WC_CCS_A_WCS32
|
WC_CCS_A_WIDE
)

	)

44 
	#WC_CCS_A_UNKNOWN_W
 (
WC_CCS_A_UNKNOWN
|
WC_CCS_A_MBYTE
)

	)

45 
	#WC_CCS_A_CS94_C
 (
WC_CCS_A_CS94
|
WC_CCS_A_COMB
)

	)

46 
	#WC_CCS_A_CS96_C
 (
WC_CCS_A_CS96
|
WC_CCS_A_COMB
)

	)

47 
	#WC_CCS_A_CS942_C
 (
WC_CCS_A_CS942
|
WC_CCS_A_COMB
)

	)

48 
	#WC_CCS_A_PCS_C
 (
WC_CCS_A_PCS
|
WC_CCS_A_COMB
)

	)

49 
	#WC_CCS_A_WCS16_C
 (
WC_CCS_A_WCS16
|
WC_CCS_A_COMB
)

	)

50 
	#WC_CCS_A_WCS32_C
 (
WC_CCS_A_WCS32
|
WC_CCS_A_COMB
)

	)

51 
	#WC_CCS_A_CS94W_C
 (
WC_CCS_A_CS94W
|
WC_CCS_A_COMB
)

	)

52 
	#WC_CCS_A_CS96W_C
 (
WC_CCS_A_CS96W
|
WC_CCS_A_COMB
)

	)

53 
	#WC_CCS_A_PCSW_C
 (
WC_CCS_A_PCSW
|
WC_CCS_A_COMB
)

	)

54 
	#WC_CCS_A_WCS16W_C
 (
WC_CCS_A_WCS16W
|
WC_CCS_A_COMB
)

	)

55 
	#WC_CCS_A_WCS32W_C
 (
WC_CCS_A_WCS32W
|
WC_CCS_A_COMB
)

	)

57 
	#WC_CCS_SET_CS94
(
c
Ë((c)|
WC_CCS_A_CS94
)

	)

58 
	#WC_CCS_SET_CS94W
(
c
Ë((c)|
WC_CCS_A_CS94W
)

	)

59 
	#WC_CCS_SET_CS96
(
c
Ë((c)|
WC_CCS_A_CS96
)

	)

60 
	#WC_CCS_SET_CS96W
(
c
Ë((c)|
WC_CCS_A_CS96W
)

	)

61 
	#WC_CCS_SET_CS942
(
c
Ë((c)|
WC_CCS_A_CS942
)

	)

62 
	#WC_CCS_SET_PCS
(
c
Ë((c)|
WC_CCS_A_PCS
)

	)

63 
	#WC_CCS_SET_PCSW
(
c
Ë((c)|
WC_CCS_A_PCSW
)

	)

64 
	#WC_CCS_SET_WCS16
(
c
Ë((c)|
WC_CCS_A_WCS16
)

	)

65 
	#WC_CCS_SET_WCS16W
(
c
Ë((c)|
WC_CCS_A_WCS16W
)

	)

66 
	#WC_CCS_SET_WCS32
(
c
Ë((c)|
WC_CCS_A_WCS32
)

	)

67 
	#WC_CCS_SET_WCS32W
(
c
Ë((c)|
WC_CCS_A_WCS32W
)

	)

69 
	#WC_CCS_IS_WIDE
(
c
Ë((c)&(
WC_CCS_A_MBYTE
|
WC_CCS_A_WIDE
))

	)

70 
	#WC_CCS_IS_COMB
(
c
Ë((c)&
WC_CCS_A_COMB
)

	)

71 
	#WC_CCS_IS_ISO_2022
(
c
Ë((c)&
WC_CCS_A_ISO_2022
)

	)

72 
	#WC_CCS_IS_UNKNOWN
(
c
Ë((c)&
WC_CCS_A_UNKNOWN
)

	)

74 
	#WC_CCS_SET
(
c
Ë((c)&
WC_CCS_A_SET
)

	)

75 
	#WC_CCS_TYPE
(
c
Ë((c)&
WC_CCS_A_TYPE
)

	)

76 
	#WC_CCS_INDEX
(
c
Ë((c)&
WC_CCS_A_INDEX
)

	)

77 
	#WC_CCS_GET_F
(
c
Ë
	`WC_CCS_INDEX
(c)

	)

79 
	#WC_CCS_US_ASCII
 
	`WC_CCS_SET_CS94
(
WC_F_US_ASCII
)

	)

80 
	#WC_CCS_JIS_X_0201
 
	`WC_CCS_SET_CS94
(
WC_F_JIS_X_0201
)

	)

81 
	#WC_CCS_JIS_X_0201K
 
	`WC_CCS_SET_CS94
(
WC_F_JIS_X_0201K
)

	)

82 
	#WC_CCS_GB_1988
 
	`WC_CCS_SET_CS94
(
WC_F_GB_1988
)

	)

84 
	#WC_CCS_ISO_8859_1
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_1
)

	)

85 
	#WC_CCS_ISO_8859_2
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_2
)

	)

86 
	#WC_CCS_ISO_8859_3
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_3
)

	)

87 
	#WC_CCS_ISO_8859_4
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_4
)

	)

88 
	#WC_CCS_ISO_8859_5
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_5
)

	)

89 
	#WC_CCS_ISO_8859_6
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_6
)

	)

90 
	#WC_CCS_ISO_8859_7
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_7
)

	)

91 
	#WC_CCS_ISO_8859_8
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_8
)

	)

92 
	#WC_CCS_ISO_8859_9
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_9
)

	)

93 
	#WC_CCS_ISO_8859_10
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_10
)

	)

94 
	#WC_CCS_ISO_8859_11
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_11
)

	)

95 
	#WC_CCS_TIS_620
 
WC_CCS_ISO_8859_11


	)

96 
	#WC_CCS_ISO_8859_13
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_13
)

	)

97 
	#WC_CCS_ISO_8859_14
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_14
)

	)

98 
	#WC_CCS_ISO_8859_15
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_15
)

	)

99 
	#WC_CCS_ISO_8859_16
 
	`WC_CCS_SET_CS96
(
WC_F_ISO_8859_16
)

	)

101 
	#WC_CCS_SPECIAL
 
	`WC_CCS_SET_PCS
(
WC_F_SPECIAL
)

	)

102 
	#WC_CCS_CP437
 
	`WC_CCS_SET_PCS
(
WC_F_CP437
)

	)

103 
	#WC_CCS_CP737
 
	`WC_CCS_SET_PCS
(
WC_F_CP737
)

	)

104 
	#WC_CCS_CP775
 
	`WC_CCS_SET_PCS
(
WC_F_CP775
)

	)

105 
	#WC_CCS_CP850
 
	`WC_CCS_SET_PCS
(
WC_F_CP850
)

	)

106 
	#WC_CCS_CP852
 
	`WC_CCS_SET_PCS
(
WC_F_CP852
)

	)

107 
	#WC_CCS_CP855
 
	`WC_CCS_SET_PCS
(
WC_F_CP855
)

	)

108 
	#WC_CCS_CP856
 
	`WC_CCS_SET_PCS
(
WC_F_CP856
)

	)

109 
	#WC_CCS_CP857
 
	`WC_CCS_SET_PCS
(
WC_F_CP857
)

	)

110 
	#WC_CCS_CP860
 
	`WC_CCS_SET_PCS
(
WC_F_CP860
)

	)

111 
	#WC_CCS_CP861
 
	`WC_CCS_SET_PCS
(
WC_F_CP861
)

	)

112 
	#WC_CCS_CP862
 
	`WC_CCS_SET_PCS
(
WC_F_CP862
)

	)

113 
	#WC_CCS_CP863
 
	`WC_CCS_SET_PCS
(
WC_F_CP863
)

	)

114 
	#WC_CCS_CP864
 
	`WC_CCS_SET_PCS
(
WC_F_CP864
)

	)

115 
	#WC_CCS_CP865
 
	`WC_CCS_SET_PCS
(
WC_F_CP865
)

	)

116 
	#WC_CCS_CP866
 
	`WC_CCS_SET_PCS
(
WC_F_CP866
)

	)

117 
	#WC_CCS_CP869
 
	`WC_CCS_SET_PCS
(
WC_F_CP869
)

	)

118 
	#WC_CCS_CP874
 
	`WC_CCS_SET_PCS
(
WC_F_CP874
)

	)

119 
	#WC_CCS_CP1006
 
	`WC_CCS_SET_PCS
(
WC_F_CP1006
)

	)

120 
	#WC_CCS_CP1250
 
	`WC_CCS_SET_PCS
(
WC_F_CP1250
)

	)

121 
	#WC_CCS_CP1251
 
	`WC_CCS_SET_PCS
(
WC_F_CP1251
)

	)

122 
	#WC_CCS_CP1252
 
	`WC_CCS_SET_PCS
(
WC_F_CP1252
)

	)

123 
	#WC_CCS_CP1253
 
	`WC_CCS_SET_PCS
(
WC_F_CP1253
)

	)

124 
	#WC_CCS_CP1254
 
	`WC_CCS_SET_PCS
(
WC_F_CP1254
)

	)

125 
	#WC_CCS_CP1255
 
	`WC_CCS_SET_PCS
(
WC_F_CP1255
)

	)

126 
	#WC_CCS_CP1256
 
	`WC_CCS_SET_PCS
(
WC_F_CP1256
)

	)

127 
	#WC_CCS_CP1257
 
	`WC_CCS_SET_PCS
(
WC_F_CP1257
)

	)

128 
	#WC_CCS_CP1258_1
 
	`WC_CCS_SET_PCS
(
WC_F_CP1258_1
)

	)

129 
	#WC_CCS_CP1258_2
 
	`WC_CCS_SET_PCS
(
WC_F_CP1258_2
)

	)

130 
	#WC_CCS_TCVN_5712_1
 
	`WC_CCS_SET_PCS
(
WC_F_TCVN_5712_1
)

	)

131 
	#WC_CCS_TCVN_5712_2
 
	`WC_CCS_SET_PCS
(
WC_F_TCVN_5712_2
)

	)

132 
	#WC_CCS_TCVN_5712_3
 
	`WC_CCS_SET_PCS
(
WC_F_TCVN_5712_3
)

	)

133 
	#WC_CCS_VISCII_11_1
 
	`WC_CCS_SET_PCS
(
WC_F_VISCII_11_1
)

	)

134 
	#WC_CCS_VISCII_11_2
 
	`WC_CCS_SET_PCS
(
WC_F_VISCII_11_2
)

	)

135 
	#WC_CCS_VPS_1
 
	`WC_CCS_SET_PCS
(
WC_F_VPS_1
)

	)

136 
	#WC_CCS_VPS_2
 
	`WC_CCS_SET_PCS
(
WC_F_VPS_2
)

	)

137 
	#WC_CCS_KOI8_R
 
	`WC_CCS_SET_PCS
(
WC_F_KOI8_R
)

	)

138 
	#WC_CCS_KOI8_U
 
	`WC_CCS_SET_PCS
(
WC_F_KOI8_U
)

	)

139 
	#WC_CCS_NEXTSTEP
 
	`WC_CCS_SET_PCS
(
WC_F_NEXTSTEP
)

	)

140 
	#WC_CCS_GBK_80
 
	`WC_CCS_SET_PCS
(
WC_F_GBK_80
)

	)

141 
	#WC_CCS_RAW
 
	`WC_CCS_SET_PCS
(
WC_F_RAW
)

	)

143 
	#WC_CCS_JIS_C_6226
 
	`WC_CCS_SET_CS94W
(
WC_F_JIS_C_6226
)

	)

144 
	#WC_CCS_JIS_X_0208
 
	`WC_CCS_SET_CS94W
(
WC_F_JIS_X_0208
)

	)

145 
	#WC_CCS_JIS_X_0212
 
	`WC_CCS_SET_CS94W
(
WC_F_JIS_X_0212
)

	)

146 
	#WC_CCS_GB_2312
 
	`WC_CCS_SET_CS94W
(
WC_F_GB_2312
)

	)

147 
	#WC_CCS_ISO_IR_165
 
	`WC_CCS_SET_CS94W
(
WC_F_ISO_IR_165
)

	)

148 
	#WC_CCS_CNS_11643_1
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_1
)

	)

149 
	#WC_CCS_CNS_11643_2
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_2
)

	)

150 
	#WC_CCS_CNS_11643_3
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_3
)

	)

151 
	#WC_CCS_CNS_11643_4
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_4
)

	)

152 
	#WC_CCS_CNS_11643_5
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_5
)

	)

153 
	#WC_CCS_CNS_11643_6
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_6
)

	)

154 
	#WC_CCS_CNS_11643_7
 
	`WC_CCS_SET_CS94W
(
WC_F_CNS_11643_7
)

	)

155 
	#WC_CCS_KS_X_1001
 
	`WC_CCS_SET_CS94W
(
WC_F_KS_X_1001
)

	)

156 
	#WC_CCS_KPS_9566
 
	`WC_CCS_SET_CS94W
(
WC_F_KPS_9566
)

	)

157 
	#WC_CCS_JIS_X_0213_1
 
	`WC_CCS_SET_CS94W
(
WC_F_JIS_X_0213_1
)

	)

158 
	#WC_CCS_JIS_X_0213_2
 
	`WC_CCS_SET_CS94W
(
WC_F_JIS_X_0213_2
)

	)

160 
	#WC_CCS_SPECIAL_W
 
	`WC_CCS_SET_PCSW
(
WC_F_SPECIAL_W
)

	)

161 
	#WC_CCS_BIG5
 
	`WC_CCS_SET_PCSW
(
WC_F_BIG5
)

	)

162 
	#WC_CCS_BIG5_1
 
	`WC_CCS_SET_PCSW
(
WC_F_BIG5_1
)

	)

163 
	#WC_CCS_BIG5_2
 
	`WC_CCS_SET_PCSW
(
WC_F_BIG5_2
)

	)

164 
	#WC_CCS_CNS_11643_8
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_8
)

	)

165 
	#WC_CCS_CNS_11643_9
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_9
)

	)

166 
	#WC_CCS_CNS_11643_10
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_10
)

	)

167 
	#WC_CCS_CNS_11643_11
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_11
)

	)

168 
	#WC_CCS_CNS_11643_12
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_12
)

	)

169 
	#WC_CCS_CNS_11643_13
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_13
)

	)

170 
	#WC_CCS_CNS_11643_14
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_14
)

	)

171 
	#WC_CCS_CNS_11643_15
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_15
)

	)

172 
	#WC_CCS_CNS_11643_16
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_16
)

	)

173 
	#WC_CCS_CNS_11643_X
 
	`WC_CCS_SET_PCSW
(
WC_F_CNS_11643_X
)

	)

174 
	#WC_CCS_GB_12345
 
	`WC_CCS_SET_PCSW
(
WC_F_GB_12345
)

	)

175 
	#WC_CCS_JOHAB
 
	`WC_CCS_SET_PCSW
(
WC_F_JOHAB
)

	)

176 
	#WC_CCS_JOHAB_1
 
	`WC_CCS_SET_PCSW
(
WC_F_JOHAB_1
)

	)

177 
	#WC_CCS_JOHAB_2
 
	`WC_CCS_SET_PCSW
(
WC_F_JOHAB_2
)

	)

178 
	#WC_CCS_JOHAB_3
 
	`WC_CCS_SET_PCSW
(
WC_F_JOHAB_3
)

	)

179 
	#WC_CCS_SJIS_EXT
 
	`WC_CCS_SET_PCSW
(
WC_F_SJIS_EXT
)

	)

180 
	#WC_CCS_SJIS_EXT_1
 
	`WC_CCS_SET_PCSW
(
WC_F_SJIS_EXT_1
)

	)

181 
	#WC_CCS_SJIS_EXT_2
 
	`WC_CCS_SET_PCSW
(
WC_F_SJIS_EXT_2
)

	)

182 
	#WC_CCS_GBK
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK
)

	)

183 
	#WC_CCS_GBK_1
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK_1
)

	)

184 
	#WC_CCS_GBK_2
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK_2
)

	)

185 
	#WC_CCS_GBK_EXT
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK_EXT
)

	)

186 
	#WC_CCS_GBK_EXT_1
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK_EXT_1
)

	)

187 
	#WC_CCS_GBK_EXT_2
 
	`WC_CCS_SET_PCSW
(
WC_F_GBK_EXT_2
)

	)

188 
	#WC_CCS_UHC
 
	`WC_CCS_SET_PCSW
(
WC_F_UHC
)

	)

189 
	#WC_CCS_UHC_1
 
	`WC_CCS_SET_PCSW
(
WC_F_UHC_1
)

	)

190 
	#WC_CCS_UHC_2
 
	`WC_CCS_SET_PCSW
(
WC_F_UHC_2
)

	)

191 
	#WC_CCS_HKSCS
 
	`WC_CCS_SET_PCSW
(
WC_F_HKSCS
)

	)

192 
	#WC_CCS_HKSCS_1
 
	`WC_CCS_SET_PCSW
(
WC_F_HKSCS_1
)

	)

193 
	#WC_CCS_HKSCS_2
 
	`WC_CCS_SET_PCSW
(
WC_F_HKSCS_2
)

	)

195 
	#WC_CCS_UCS2
 
	`WC_CCS_SET_WCS16
(
WC_F_UCS2
)

	)

196 
	#WC_CCS_UCS4
 
	`WC_CCS_SET_WCS32
(
WC_F_UCS4
)

	)

197 
	#WC_CCS_UCS_TAG
 
	`WC_CCS_SET_WCS32
(
WC_F_UCS_TAG
)

	)

198 
	#WC_CCS_GB18030
 
	`WC_CCS_SET_WCS32
(
WC_F_GB18030
)

	)

199 
	#WC_CCS_UCS2_W
 
	`WC_CCS_SET_WCS16W
(
WC_F_UCS2
)

	)

200 
	#WC_CCS_UCS4_W
 
	`WC_CCS_SET_WCS32W
(
WC_F_UCS4
)

	)

201 
	#WC_CCS_UCS_TAG_W
 
	`WC_CCS_SET_WCS32W
(
WC_F_UCS_TAG
)

	)

202 
	#WC_CCS_GB18030_W
 
	`WC_CCS_SET_WCS32W
(
WC_F_GB18030
)

	)

204 
	#WC_CCS_UNKNOWN
 
WC_CCS_A_UNKNOWN


	)

205 
	#WC_CCS_C1
 (
WC_CCS_A_UNKNOWN
|
WC_F_C1
)

	)

206 
	#WC_CCS_UNKNOWN_W
 
WC_CCS_A_UNKNOWN_W


	)

208 
	#WC_CCS_IS_UNICODE
(
c
Ë(
	`WC_CCS_SET
(cË=
WC_CCS_UCS2
 || WC_CCS_SET(cË=
WC_CCS_UCS4
 || WC_CCS_SET(cË=
WC_CCS_UCS_TAG
)

	)

210 
wc_boﬁ
 
wc_is_comböög
(
wc_wch¨_t
 
cc
);

	@libwc/ces.c

2 
	~"wc.h
"

3 
	~"iso2022.h
"

4 
	~"sjis.h
"

5 
	~"hz.h
"

6 
	~"big5.h
"

7 
	~"hkscs.h
"

8 
	~"johab.h
"

9 
	~"gbk.h
"

10 
	~"gb18030.h
"

11 
	~"uhc.h
"

12 
	~"võt.h
"

13 
	~"¥iv.h
"

14 #ifde‡
USE_UNICODE


15 
	~"utf8.h
"

16 
	~"utf7.h
"

19 
wc_g£t
 
	gg£t_ußscii
[] = {

20 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

24 
	#g£t_iso8859
(
no
) \

25 
wc_g£t
 
g£t_iso8859
##
no
[] = { \

26 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 }, \

27 { 
WC_CCS_ISO_8859_
##
no
, 
WC_C_G1_CS96
 | 0x80, 1 }, \

29 }

	)

30 
g£t_iso8859
(1); gset_iso8859(2); gset_iso8859(3); gset_iso8859(4);

31 
g£t_iso8859
(5); gset_iso8859(6); gset_iso8859(7); gset_iso8859(8);

32 
g£t_iso8859
(9); gset_iso8859(10); gset_iso8859(11);

33 
g£t_iso8859
(13); gset_iso8859(14); gset_iso8859(15); gset_iso8859(16);

35 
	#g£t_˝
(
no
Ë
	`g£t_¥iv1
(
CP
##no, 
˝
##no)

	)

36 
	#g£t_¥iv1
(
ccs
, 
˚s
) \

37 
wc_g£t
 
g£t_
##
˚s
[] = { \

38 { 
WC_CCS_US_ASCII
, 0, 1 }, \

39 { 
WC_CCS_
##
ccs
, 0x80, 1 }, \

41 }

	)

42 
g£t_˝
(437); gset_cp(737); gset_cp(775); gset_cp(850); gset_cp(852);

43 
g£t_˝
(855); gset_cp(856); gset_cp(857); gset_cp(860); gset_cp(861);

44 
g£t_˝
(862); gset_cp(863); gset_cp(864); gset_cp(865); gset_cp(866);

45 
g£t_˝
(869); gset_cp(874); gset_cp(1006);

46 
g£t_˝
(1250); gset_cp(1251); gset_cp(1252); gset_cp(1253); gset_cp(1254);

47 
g£t_˝
(1255); gset_cp(1256); gset_cp(1257);

48 
g£t_¥iv1
(
KOI8_R
, 
koi8r
);

49 
g£t_¥iv1
(
KOI8_U
, 
koi8u
);

50 
g£t_¥iv1
(
NEXTSTEP
, 
√xt°ï
);

52 
wc_g£t
 
	gg£t_iso2022jp
[] = {

53 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

54 { 
WC_CCS_JIS_X_0208
, 
WC_C_G0_CS94
, 0 },

57 
wc_g£t
 
	gg£t_iso2022jp2
[] = {

58 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

59 { 
WC_CCS_JIS_X_0208
, 
WC_C_G0_CS94
, 0 },

60 { 
WC_CCS_JIS_X_0212
, 
WC_C_G0_CS94
, 0 },

61 { 
WC_CCS_GB_2312
, 
WC_C_G0_CS94
, 0 },

62 { 
WC_CCS_KS_X_1001
, 
WC_C_G0_CS94
, 0 },

63 { 
WC_CCS_ISO_8859_1
, 
WC_C_G2_CS96
, 0 },

64 { 
WC_CCS_ISO_8859_7
, 
WC_C_G2_CS96
, 0 },

67 
wc_g£t
 
	gg£t_iso2022jp3
[] = {

68 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

69 { 
WC_CCS_JIS_X_0208
, 
WC_C_G0_CS94
, 0 },

70 { 
WC_CCS_JIS_X_0213_1
, 
WC_C_G0_CS94
, 0 },

71 { 
WC_CCS_JIS_X_0213_2
, 
WC_C_G0_CS94
, 0 },

74 
wc_g£t
 
	gg£t_iso2022˙
[] = {

75 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

76 { 
WC_CCS_GB_2312
, 
WC_C_G1_CS94
, 1 },

77 { 
WC_CCS_ISO_IR_165
, 
WC_C_G1_CS94
, 0 },

78 { 
WC_CCS_CNS_11643_1
, 
WC_C_G1_CS94
, 0 },

79 { 
WC_CCS_CNS_11643_2
, 
WC_C_G2_CS94
, 0 },

80 { 
WC_CCS_CNS_11643_3
, 
WC_C_G3_CS94
, 0 },

81 { 
WC_CCS_CNS_11643_4
, 
WC_C_G3_CS94
, 0 },

82 { 
WC_CCS_CNS_11643_5
, 
WC_C_G3_CS94
, 0 },

83 { 
WC_CCS_CNS_11643_6
, 
WC_C_G3_CS94
, 0 },

84 { 
WC_CCS_CNS_11643_7
, 
WC_C_G3_CS94
, 0 },

87 
wc_g£t
 
	gg£t_iso2022kr
[] = {

88 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

89 { 
WC_CCS_KS_X_1001
, 
WC_C_G1_CS94
, 1 },

92 
wc_uch¨
 
	gg£t_ext_iso2022jp
[] = {

93 
WC_C_G0_CS94
, 
WC_C_G2_CS96
, WC_C_G0_CS94, WC_C_G2_CS96

95 
wc_uch¨
 
	gg£t_ext_iso2022˙
[] = {

96 
WC_C_G2_CS94
, 
WC_C_G2_CS96
, WC_C_G2_CS94, WC_C_G2_CS96

98 
wc_uch¨
 
	gg£t_ext_iso2022kr
[] = {

99 
WC_C_G1_CS94
, 
WC_C_G1_CS96
, WC_C_G1_CS94, WC_C_G1_CS96

101 
wc_g£t
 
	gg£t_eucjp
[] = {

102 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

103 { 
WC_CCS_JIS_X_0208
, 
WC_C_G1_CS94
 | 0x80, 1 },

104 { 
WC_CCS_JIS_X_0201K
, 
WC_C_G2_CS94
 | 0x80, 1 },

105 { 
WC_CCS_JIS_X_0213_1
, 
WC_C_G1_CS94
 | 0x80, 0 },

106 { 
WC_CCS_JIS_X_0213_2
, 
WC_C_G3_CS94
 | 0x80, 0 },

107 { 
WC_CCS_JIS_X_0212
, 
WC_C_G3_CS94
 | 0x80, 1 },

110 
wc_g£t
 
	gg£t_euc˙
[] = {

111 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

112 { 
WC_CCS_GB_2312
, 
WC_C_G1_CS94
 | 0x80, 1 },

115 
wc_g£t
 
	gg£t_eu˘w
[] = {

116 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

117 { 
WC_CCS_CNS_11643_1
, 
WC_C_G1_CS94
 | 0x80, 1 },

118 { 
WC_CCS_CNS_11643_X
, 
WC_C_G2_CS94
 | 0x80, 1 },

121 
wc_g£t
 
	gg£t_euckr
[] = {

122 { 
WC_CCS_US_ASCII
, 
WC_C_G0_CS94
, 1 },

123 { 
WC_CCS_KS_X_1001
, 
WC_C_G1_CS94
 | 0x80, 1 },

126 
wc_g£t
 
	gg£t_sjis
[] = {

127 { 
WC_CCS_US_ASCII
, 0, 1 },

128 { 
WC_CCS_JIS_X_0208
, 0x80, 1 },

129 { 
WC_CCS_JIS_X_0201K
, 0x80, 1 },

130 { 
WC_CCS_SJIS_EXT_1
, 0x80, 1 },

131 { 
WC_CCS_SJIS_EXT_2
, 0x80, 1 },

132 { 
WC_CCS_SJIS_EXT
, 0x80, 1 },

135 
wc_g£t
 
	gg£t_sjisx0213
[] = {

136 { 
WC_CCS_US_ASCII
, 0, 1 },

137 { 
WC_CCS_JIS_X_0208
, 0x80, 1 },

138 { 
WC_CCS_JIS_X_0201K
, 0x80, 1 },

139 { 
WC_CCS_JIS_X_0213_1
, 0x80, 1 },

140 { 
WC_CCS_JIS_X_0213_2
, 0x80, 1 },

143 
wc_g£t
 
	gg£t_hz
[] = {

144 { 
WC_CCS_US_ASCII
, 0, 1 },

145 { 
WC_CCS_GB_2312
, 0, 0 },

148 
wc_g£t
 
	gg£t_big5
[] = {

149 { 
WC_CCS_US_ASCII
, 0, 1 },

150 { 
WC_CCS_BIG5_1
, 0x80, 1 },

151 { 
WC_CCS_BIG5_2
, 0x80, 1 },

152 { 
WC_CCS_BIG5
, 0x80, 1 },

155 
wc_g£t
 
	gg£t_hkscs
[] = {

156 { 
WC_CCS_US_ASCII
, 0, 1 },

157 { 
WC_CCS_BIG5_1
, 0x80, 1 },

158 { 
WC_CCS_BIG5_2
, 0x80, 1 },

159 { 
WC_CCS_BIG5
, 0x80, 1 },

160 { 
WC_CCS_HKSCS_1
, 0x80, 1 },

161 { 
WC_CCS_HKSCS_2
, 0x80, 1 },

162 { 
WC_CCS_HKSCS
, 0x80, 1 },

165 
wc_g£t
 
	gg£t_johab
[] = {

166 { 
WC_CCS_US_ASCII
, 0, 1 },

167 { 
WC_CCS_JOHAB_1
, 0x80, 1 },

168 { 
WC_CCS_JOHAB_2
, 0x80, 1 },

169 { 
WC_CCS_JOHAB_3
, 0x80, 1 },

170 { 
WC_CCS_JOHAB
, 0x80, 1 },

173 
wc_g£t
 
	gg£t_gbk
[] = {

174 { 
WC_CCS_US_ASCII
, 0, 1 },

175 { 
WC_CCS_GB_2312
, 0x80, 1 },

176 { 
WC_CCS_GBK_80
, 0x80, 1 },

177 { 
WC_CCS_GBK_1
, 0x80, 1 },

178 { 
WC_CCS_GBK_2
, 0x80, 1 },

179 { 
WC_CCS_GBK
, 0x80, 1 },

182 
wc_g£t
 
	gg£t_gb18030
[] = {

183 { 
WC_CCS_US_ASCII
, 0, 1 },

184 { 
WC_CCS_GB_2312
, 0x80, 1 },

185 { 
WC_CCS_GBK_1
, 0x80, 1 },

186 { 
WC_CCS_GBK_2
, 0x80, 1 },

187 { 
WC_CCS_GBK
, 0x80, 1 },

188 { 
WC_CCS_GBK_EXT_1
, 0x80, 1 },

189 { 
WC_CCS_GBK_EXT_2
, 0x80, 1 },

190 { 
WC_CCS_GBK_EXT
, 0x80, 1 },

191 { 
WC_CCS_GB18030
, 0x80, 1 },

194 
wc_g£t
 
	gg£t_uhc
[] = {

195 { 
WC_CCS_US_ASCII
, 0, 1 },

196 { 
WC_CCS_KS_X_1001
, 0x80, 1 },

197 { 
WC_CCS_UHC_1
, 0x80, 1 },

198 { 
WC_CCS_UHC_2
, 0x80, 1 },

199 { 
WC_CCS_UHC
, 0x80, 1 },

202 
	#g£t_¥iv2
(
ccs
, 
˚s
) \

203 
wc_g£t
 
g£t_
##
˚s
[] = { \

204 { 
WC_CCS_US_ASCII
, 0, 1 }, \

205 { 
WC_CCS_
##
ccs
##
_1
, 0x80, 1 }, \

206 { 
WC_CCS_
##
ccs
##
_2
, 0x80, 1 }, \

208 }

	)

209 
g£t_¥iv2
(
CP1258
, 
˝1258
);

210 
g£t_¥iv2
(
VISCII_11
, 
viscii11
);

211 
g£t_¥iv2
(
VPS
, 
vps
);

212 
wc_g£t
 
	gg£t_tcvn5712
[] = {

213 { 
WC_CCS_US_ASCII
, 0, 1 },

214 { 
WC_CCS_TCVN_5712_1
, 0x80, 1 },

215 { 
WC_CCS_TCVN_5712_2
, 0x80, 1 },

216 { 
WC_CCS_TCVN_5712_3
, 0x80, 1 },

220 #ifde‡
USE_UNICODE


221 
wc_g£t
 
	gg£t_utf8
[] = {

222 { 
WC_CCS_US_ASCII
, 0, 1 },

223 { 
WC_CCS_UCS2
, 0x80, 1 },

224 { 
WC_CCS_UCS4
, 0x80, 1 },

225 { 
WC_CCS_UCS_TAG
, 0x80, 1 },

228 
wc_g£t
 
	gg£t_utf7
[] = {

229 { 
WC_CCS_US_ASCII
, 0, 1 },

230 { 
WC_CCS_UCS2
, 0x80, 1 },

231 { 
WC_CCS_UCS4
, 0x80, 1 },

232 { 
WC_CCS_UCS_TAG
, 0x80, 1 },

237 
wc_g£t
 
	gg£t_øw
[] = {

238 { 
WC_CCS_US_ASCII
, 0, 1 },

239 { 
WC_CCS_RAW
, 0x80, 1 },

243 
	#˚s_ascii
(
id
,
«me
,
desc
) \

244 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_ußscii
, 
NULL
, \

245 (*)
wc_c⁄v_‰om_ascii
, (*)
wc_push_to_iso8859
, \

246 (*)
wc_ch¨_c⁄v_‰om_iso2022
 }

	)

247 
	#˚s_iso8859
(
id
,
«me
,
desc
,
no
) \

248 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_iso8859
##
no
, 
NULL
, \

249 (*)
wc_c⁄v_‰om_iso2022
, (*)
wc_push_to_iso8859
, \

250 (*)
wc_ch¨_c⁄v_‰om_iso2022
 }

	)

251 
	#˚s_¥iv1
(
id
,
«me
,
desc
,
˚s
) \

252 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_
##
˚s
, 
NULL
, \

253 (*)
wc_c⁄v_‰om_¥iv1
, (*)
wc_push_to_¥iv1
, \

254 (*)
wc_ch¨_c⁄v_‰om_¥iv1
 }

	)

255 
	#˚s_iso2022
(
id
,
«me
,
desc
,
ãº
) \

256 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_iso2022
##
ãº
, 
g£t_ext_iso2022
##terr, \

257 (*)
wc_c⁄v_‰om_iso2022
, (*)
wc_push_to_iso2022
, \

258 (*)
wc_ch¨_c⁄v_‰om_iso2022
 }

	)

259 
	#˚s_euc
(
id
,
«me
,
desc
,
ãº
) \

260 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_euc
##
ãº
, 
NULL
, \

261 (*)
wc_c⁄v_‰om_iso2022
, (*)
wc_push_to_euc
##
ãº
, \

262 (*)
wc_ch¨_c⁄v_‰om_iso2022
 }

	)

263 
	#˚s_¥iv2
(
id
,
«me
,
desc
,
˚s
) \

264 { 
WC_CES_
##
id
, 
«me
, 
desc
, 
g£t_
##
˚s
, 
NULL
, \

265 (*)
wc_c⁄v_‰om_
##
˚s
, (*)
wc_push_to_
##ces, \

266 (*)
wc_ch¨_c⁄v_‰om_
##
˚s
 }

	)

268 
	#g£t_ext_iso2022jp2
 
g£t_ext_iso2022jp


	)

269 
	#g£t_ext_iso2022jp3
 
g£t_ext_iso2022jp


	)

270 
	#wc_push_to_euckr
 
wc_push_to_euc


	)

271 
	#wc_push_to_euc˙
 
wc_push_to_euc


	)

272 
	#wc_push_to_¥iv1
 
wc_push_to_iso8859


	)

273 
	#wc_push_to_˝1258
 
wc_push_to_võt


	)

274 
	#wc_push_to_tcvn5712
 
wc_push_to_võt


	)

275 
	#wc_push_to_viscii11
 
wc_push_to_võt


	)

276 
	#wc_push_to_vps
 
wc_push_to_võt


	)

277 
	#wc_c⁄v_‰om_˝1258
 
wc_c⁄v_‰om_¥iv1


	)

278 
	#wc_c⁄v_‰om_tcvn5712
 
wc_c⁄v_‰om_võt


	)

279 
	#wc_c⁄v_‰om_viscii11
 
wc_c⁄v_‰om_võt


	)

280 
	#wc_c⁄v_‰om_vps
 
wc_c⁄v_‰om_võt


	)

281 
	#wc_c⁄v_‰om_øw
 
wc_c⁄v_‰om_¥iv1


	)

282 
	#wc_ch¨_c⁄v_‰om_hz
 
wc_ch¨_c⁄v_‰om_iso2022


	)

283 
	#wc_ch¨_c⁄v_‰om_˝1258
 
wc_ch¨_c⁄v_‰om_¥iv1


	)

284 
	#wc_ch¨_c⁄v_‰om_tcvn5712
 
wc_ch¨_c⁄v_‰om_võt


	)

285 
	#wc_ch¨_c⁄v_‰om_viscii11
 
wc_ch¨_c⁄v_‰om_võt


	)

286 
	#wc_ch¨_c⁄v_‰om_vps
 
wc_ch¨_c⁄v_‰om_võt


	)

287 
	#wc_ch¨_c⁄v_‰om_øw
 
wc_ch¨_c⁄v_‰om_¥iv1


	)

289 
wc_˚s_öfo
 
	gWcCesInfo
[] = {

290 
˚s_ascii
(
US_ASCII
, "US-ASCII", "Latin (US-ASCII)"),

292 
˚s_iso8859
(
ISO_8859_1
, "ISO-8859-1", "Latin 1 (ISO-8859-1)", 1),

293 
˚s_iso8859
(
ISO_8859_2
, "ISO-8859-2", "Latin 2 (ISO-8859-2)", 2),

294 
˚s_iso8859
(
ISO_8859_3
, "ISO-8859-3", "Latin 3 (ISO-8859-3)", 3),

295 
˚s_iso8859
(
ISO_8859_4
, "ISO-8859-4", "Latin 4 (ISO-8859-4)", 4),

296 
˚s_iso8859
(
ISO_8859_5
, "ISO-8859-5", "Cyrillic (ISO-8859-5)", 5),

297 
˚s_iso8859
(
ISO_8859_6
, "ISO-8859-6", "Arabic (ISO-8859-6)", 6),

298 
˚s_iso8859
(
ISO_8859_7
, "ISO-8859-7", "Greek (ISO-8859-7)", 7),

299 
˚s_iso8859
(
ISO_8859_8
, "ISO-8859-8", "Hebrew (ISO-8859-8)", 8),

300 
˚s_iso8859
(
ISO_8859_9
, "ISO-8859-9", "Turkish (ISO-8859-9)", 9),

301 
˚s_iso8859
(
ISO_8859_10
, "ISO-8859-10", "Nordic (ISO-8859-10)", 10),

302 
˚s_iso8859
(
ISO_8859_11
, "ISO-8859-11", "Thai (ISO-8859-11, TIS-620)", 11),

303 { 
WC_CES_ISO_8859_12
, 
NULL
, NULL, NULL, NULL, NULL, NULL, NULL },

304 
˚s_iso8859
(
ISO_8859_13
, "ISO-8859-13", "Baltic Rim (ISO-8859-13)", 13),

305 
˚s_iso8859
(
ISO_8859_14
, "ISO-8859-14", "Celtic (ISO-8859-14)", 14),

306 
˚s_iso8859
(
ISO_8859_15
, "ISO-8859-15", "Latin 9 (ISO-8859-15)", 15),

307 
˚s_iso8859
(
ISO_8859_16
, "ISO-8859-16", "Romanian (ISO-8859-16)", 16),

309 
˚s_iso2022
(
ISO_2022_JP
, "ISO-2022-JP", "J≠™e£ (ISO-2022-JP)", 
jp
),

310 
˚s_iso2022
(
ISO_2022_JP_2
, "ISO-2022-JP-2", "J≠™e£ (ISO-2022-JP-2)", 
jp2
),

311 
˚s_iso2022
(
ISO_2022_JP_3
, "ISO-2022-JP-3", "J≠™e£ (ISO-2022-JP-3)", 
jp3
),

312 
˚s_iso2022
(
ISO_2022_CN
, "ISO-2022-CN", "Chöe£ (ISO-2022-CN)", 
˙
),

313 
˚s_iso2022
(
ISO_2022_KR
, "ISO-2022-KR", "K‹ó¿(ISO-2022-KR)", 
kr
),

315 
˚s_euc
(
EUC_JP
, "EUC-JP", "J≠™e£ (EUC-JP)", 
jp
),

316 
˚s_euc
(
EUC_CN
, "EUC-CN", "Chöe£ (EUC-CN, GB2312)", 
˙
),

317 
˚s_euc
(
EUC_TW
, "EUC-TW", "Chöe£ Taiw™ (EUC-TW)", 
tw
),

318 
˚s_euc
(
EUC_KR
, "EUC-KR", "K‹ó¿(EUC-KR)", 
kr
),

320 
˚s_¥iv1
(
CP437
, "CP437", "L©ö (CP437)", 
˝437
),

321 
˚s_¥iv1
(
CP737
, "CP737", "Gªek (CP737)", 
˝737
),

322 
˚s_¥iv1
(
CP775
, "CP775", "BÆti¯Rim (CP775)", 
˝775
),

323 
˚s_¥iv1
(
CP850
, "CP850", "L©ö 1 (CP850)", 
˝850
),

324 
˚s_¥iv1
(
CP852
, "CP852", "L©ö 2 (CP852)", 
˝852
),

325 
˚s_¥iv1
(
CP855
, "CP855", "Cyrûli¯(CP855)", 
˝855
),

326 
˚s_¥iv1
(
CP856
, "CP856", "Hebªw (CP856)", 
˝856
),

327 
˚s_¥iv1
(
CP857
, "CP857", "Turkish (CP857)", 
˝857
),

328 
˚s_¥iv1
(
CP860
, "CP860", "P‹tugue£ (CP860)", 
˝860
),

329 
˚s_¥iv1
(
CP861
, "CP861", "I˚œndi¯(CP861)", 
˝861
),

330 
˚s_¥iv1
(
CP862
, "CP862", "Hebªw (CP862)", 
˝862
),

331 
˚s_¥iv1
(
CP863
, "CP863", "C™ad®Fªnch (CP863)", 
˝863
),

332 
˚s_¥iv1
(
CP864
, "CP864", "Aøbi¯(CP864)", 
˝864
),

333 
˚s_¥iv1
(
CP865
, "CP865", "N‹di¯(CP865)", 
˝865
),

334 
˚s_¥iv1
(
CP866
, "CP866", "Cyrûli¯(CP866)", 
˝866
),

335 
˚s_¥iv1
(
CP869
, "CP869", "Gªek 2 (CP869)", 
˝869
),

336 
˚s_¥iv1
(
CP874
, "CP874", "Thaò(CP874)", 
˝874
),

337 
˚s_¥iv1
(
CP1006
, "CP1006", "Aøbi¯(CP1006)", 
˝1006
),

338 
˚s_¥iv1
(
CP1250
, "CP1250", "L©ö 2 (CP1250)", 
˝1250
),

339 
˚s_¥iv1
(
CP1251
, "CP1251", "Cyrûli¯(CP1251)", 
˝1251
),

340 
˚s_¥iv1
(
CP1252
, "CP1252", "L©ö 1 (CP1252)", 
˝1252
),

341 
˚s_¥iv1
(
CP1253
, "CP1253", "Gªek (CP1253)", 
˝1253
),

342 
˚s_¥iv1
(
CP1254
, "CP1254", "Turkish (CP1254)", 
˝1254
),

343 
˚s_¥iv1
(
CP1255
, "CP1255", "Hebªw (CP1255)", 
˝1255
),

344 
˚s_¥iv1
(
CP1256
, "CP1256", "Aøbi¯(CP1256)", 
˝1256
),

345 
˚s_¥iv1
(
CP1257
, "CP1257", "BÆti¯Rim (CP1257)", 
˝1257
),

346 
˚s_¥iv1
(
KOI8_R
, "KOI8-R", "Cyrûli¯(KOI8-R)", 
koi8r
),

347 
˚s_¥iv1
(
KOI8_U
, "KOI8-U", "Ukøöü¿(KOI8-U)", 
koi8u
),

348 
˚s_¥iv1
(
NEXTSTEP
, "NeXTSTEP", "NeXTSTEP", 
√xt°ï
),

350 
˚s_¥iv2
(
RAW
, "Raw", "8bô Raw", 
øw
),

352 
˚s_¥iv2
(
SHIFT_JIS
, "Shi·_JIS", "J≠™e£ (Shi·_JIS, CP932)", 
sjis
),

353 
˚s_¥iv2
(
SHIFT_JISX0213
, "Shi·_JISX0213", "J≠™e£ (Shi·_JISX0213)", 
sjisx0213
),

354 
˚s_¥iv2
(
GBK
, "GBK", "Chöe£ (GBK, CP936)", 
gbk
),

355 
˚s_¥iv2
(
GB18030
, "GB18030", "Chöe£ (GB18030)", 
gb18030
),

356 
˚s_¥iv2
(
HZ_GB_2312
, "HZ-GB-2312", "Chöe£ (HZ-GB-2312)", 
hz
),

357 
˚s_¥iv2
(
BIG5
, "Big5", "Chöe£ Taiw™ (Big5, CP950)", 
big5
),

358 
˚s_¥iv2
(
HKSCS
, "HKSCS", "Chöe£ H⁄g K⁄g (HKSCS)", 
hkscs
),

359 
˚s_¥iv2
(
UHC
, "UHC", "K‹ó¿(UHC, CP949)", 
uhc
),

360 
˚s_¥iv2
(
JOHAB
, "Johab", "K‹ó¿(Johab)", 
johab
),

362 
˚s_¥iv2
(
CP1258
, "CP1258", "Võäame£ (CP1258)", 
˝1258
),

363 
˚s_¥iv2
(
TCVN_5712
, "TCVN-5712", "Võäame£ (TCVN-5712)", 
tcvn5712
),

364 
˚s_¥iv2
(
VISCII_11
, "VISCII-1.1", "Võäame£ (VISCII 1.1)", 
viscii11
),

365 
˚s_¥iv2
(
VPS
, "VPS", "Võäame£ (VPS)", 
vps
),

367 #ifde‡
USE_UNICODE


368 
˚s_¥iv2
(
UTF_8
, "UTF-8", "Unicodê(UTF-8)", 
utf8
),

369 
˚s_¥iv2
(
UTF_7
, "UTF-7", "Unicodê(UTF-7)", 
utf7
),

371 { 
WC_CES_UTF_8
, 
NULL
, NULL, NULL, NULL, NULL, NULL, NULL },

372 { 
WC_CES_UTF_7
, 
NULL
, NULL, NULL, NULL, NULL, NULL, NULL },

374 { 0, 
NULL
, NULL, NULL, NULL, NULL, NULL, NULL },

	@libwc/ces.h

2 #i‚de‡
_WC_CES_H


3 
	#_WC_CES_H


	)

5 
	~"ccs.h
"

7 
	#WC_CES_T_INDEX
 0x0000ff

	)

8 
	#WC_CES_T_TYPE
 0x31ff00

	)

9 
	#WC_CES_T_NASCII
 0x01„00

	)

10 
	#WC_CES_T_8BIT
 0x100000

	)

11 
	#WC_CES_T_MBYTE
 0x200000

	)

12 
	#WC_CES_T_ASCII
 0x000100

	)

13 
	#WC_CES_T_ISO_8859
 0x000200

	)

14 
	#WC_CES_T_PRIV1
 0x000400

	)

15 
	#WC_CES_T_ISO_2022
 0x000800

	)

16 
	#WC_CES_T_EUC
 0x001000

	)

17 
	#WC_CES_T_PRIV2
 0x002000

	)

18 
	#WC_CES_T_VIET
 0x004000

	)

19 
	#WC_CES_T_UTF
 0x008000

	)

20 
	#WC_CES_T_WTF
 0x010000

	)

21 
	#WC_CES_E_ISO_8859
 (
WC_CES_T_ISO_8859
|
WC_CES_T_8BIT
)

	)

22 
	#WC_CES_E_PRIV1
 (
WC_CES_T_PRIV1
|
WC_CES_T_8BIT
)

	)

23 
	#WC_CES_E_ISO_2022
 (
WC_CES_T_ISO_2022
|
WC_CES_T_MBYTE
)

	)

24 
	#WC_CES_E_EUC
 (
WC_CES_T_EUC
|
WC_CES_T_8BIT
|
WC_CES_T_MBYTE
)

	)

25 
	#WC_CES_E_PRIV2
 (
WC_CES_T_PRIV2
|
WC_CES_T_8BIT
|
WC_CES_T_MBYTE
)

	)

26 
	#WC_CES_E_VIET
 (
WC_CES_T_VIET
|
WC_CES_T_PRIV1
|
WC_CES_T_8BIT
)

	)

28 
	#WC_CES_WTF
 (
WC_CES_T_WTF
|
WC_CES_T_8BIT
|
WC_CES_T_MBYTE
)

	)

30 
	#WC_CES_INDEX
(
c
Ë((c)&
WC_CES_T_INDEX
)

	)

31 
	#WC_CES_TYPE
(
c
Ë((c)&
WC_CES_T_TYPE
)

	)

34 
	mWC_CES_N_US_ASCII
,

36 
	mWC_CES_N_ISO_8859_1
,

37 
	mWC_CES_N_ISO_8859_2
,

38 
	mWC_CES_N_ISO_8859_3
,

39 
	mWC_CES_N_ISO_8859_4
,

40 
	mWC_CES_N_ISO_8859_5
,

41 
	mWC_CES_N_ISO_8859_6
,

42 
	mWC_CES_N_ISO_8859_7
,

43 
	mWC_CES_N_ISO_8859_8
,

44 
	mWC_CES_N_ISO_8859_9
,

45 
	mWC_CES_N_ISO_8859_10
,

46 
	mWC_CES_N_ISO_8859_11
,

47 
	mWC_CES_N_ISO_8859_12
,

48 
	mWC_CES_N_ISO_8859_13
,

49 
	mWC_CES_N_ISO_8859_14
,

50 
	mWC_CES_N_ISO_8859_15
,

51 
	mWC_CES_N_ISO_8859_16
,

53 
	mWC_CES_N_ISO_2022_JP
,

54 
	mWC_CES_N_ISO_2022_JP_2
,

55 
	mWC_CES_N_ISO_2022_JP_3
,

56 
	mWC_CES_N_ISO_2022_CN
,

57 
	mWC_CES_N_ISO_2022_KR
,

59 
	mWC_CES_N_EUC_JP
,

60 
	mWC_CES_N_EUC_CN
,

61 
	mWC_CES_N_EUC_TW
,

62 
	mWC_CES_N_EUC_KR
,

64 
	mWC_CES_N_CP437
,

65 
	mWC_CES_N_CP737
,

66 
	mWC_CES_N_CP775
,

67 
	mWC_CES_N_CP850
,

68 
	mWC_CES_N_CP852
,

69 
	mWC_CES_N_CP855
,

70 
	mWC_CES_N_CP856
,

71 
	mWC_CES_N_CP857
,

72 
	mWC_CES_N_CP860
,

73 
	mWC_CES_N_CP861
,

74 
	mWC_CES_N_CP862
,

75 
	mWC_CES_N_CP863
,

76 
	mWC_CES_N_CP864
,

77 
	mWC_CES_N_CP865
,

78 
	mWC_CES_N_CP866
,

79 
	mWC_CES_N_CP869
,

80 
	mWC_CES_N_CP874
,

81 
	mWC_CES_N_CP1006
,

82 
	mWC_CES_N_CP1250
,

83 
	mWC_CES_N_CP1251
,

84 
	mWC_CES_N_CP1252
,

85 
	mWC_CES_N_CP1253
,

86 
	mWC_CES_N_CP1254
,

87 
	mWC_CES_N_CP1255
,

88 
	mWC_CES_N_CP1256
,

89 
	mWC_CES_N_CP1257
,

90 
	mWC_CES_N_KOI8_R
,

91 
	mWC_CES_N_KOI8_U
,

92 
	mWC_CES_N_NEXTSTEP
,

93 
	mWC_CES_N_RAW
,

95 
	mWC_CES_N_SHIFT_JIS
,

96 
	mWC_CES_N_SHIFT_JISX0213
,

97 
	mWC_CES_N_GBK
,

98 
	mWC_CES_N_GB18030
,

99 
	mWC_CES_N_HZ_GB_2312
,

100 
	mWC_CES_N_BIG5
,

101 
	mWC_CES_N_HKSCS
,

102 
	mWC_CES_N_UHC
,

103 
	mWC_CES_N_JOHAB
,

105 
	mWC_CES_N_CP1258
,

106 
	mWC_CES_N_TCVN_5712
,

107 
	mWC_CES_N_VISCII_11
,

108 
	mWC_CES_N_VPS
,

110 
	mWC_CES_N_UTF_8
,

111 
	mWC_CES_N_UTF_7


114 
	#WC_CES_US_ASCII
 (
WC_CES_T_ASCII
|
WC_CES_N_US_ASCII
)

	)

116 
	#WC_CES_ISO_8859_1
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_1
)

	)

117 
	#WC_CES_ISO_8859_2
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_2
)

	)

118 
	#WC_CES_ISO_8859_3
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_3
)

	)

119 
	#WC_CES_ISO_8859_4
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_4
)

	)

120 
	#WC_CES_ISO_8859_5
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_5
)

	)

121 
	#WC_CES_ISO_8859_6
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_6
)

	)

122 
	#WC_CES_ISO_8859_7
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_7
)

	)

123 
	#WC_CES_ISO_8859_8
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_8
)

	)

124 
	#WC_CES_ISO_8859_9
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_9
)

	)

125 
	#WC_CES_ISO_8859_10
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_10
)

	)

126 
	#WC_CES_ISO_8859_11
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_11
)

	)

127 
	#WC_CES_TIS_620
 
WC_CES_ISO_8859_11


	)

128 
	#WC_CES_ISO_8859_12
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_12
)

	)

130 
	#WC_CES_ISO_8859_13
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_13
)

	)

131 
	#WC_CES_ISO_8859_14
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_14
)

	)

132 
	#WC_CES_ISO_8859_15
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_15
)

	)

133 
	#WC_CES_ISO_8859_16
 (
WC_CES_E_ISO_8859
|
WC_CES_N_ISO_8859_16
)

	)

135 
	#WC_CES_ISO_2022_JP
 (
WC_CES_E_ISO_2022
|
WC_CES_N_ISO_2022_JP
)

	)

136 
	#WC_CES_ISO_2022_JP_2
 (
WC_CES_E_ISO_2022
|
WC_CES_N_ISO_2022_JP_2
)

	)

137 
	#WC_CES_ISO_2022_JP_3
 (
WC_CES_E_ISO_2022
|
WC_CES_N_ISO_2022_JP_3
)

	)

138 
	#WC_CES_ISO_2022_CN
 (
WC_CES_E_ISO_2022
|
WC_CES_N_ISO_2022_CN
)

	)

139 
	#WC_CES_ISO_2022_KR
 (
WC_CES_E_ISO_2022
|
WC_CES_N_ISO_2022_KR
)

	)

141 
	#WC_CES_EUC_JP
 (
WC_CES_E_EUC
|
WC_CES_N_EUC_JP
)

	)

142 
	#WC_CES_EUC_CN
 (
WC_CES_E_EUC
|
WC_CES_N_EUC_CN
)

	)

143 
	#WC_CES_EUC_TW
 (
WC_CES_E_EUC
|
WC_CES_N_EUC_TW
)

	)

144 
	#WC_CES_EUC_KR
 (
WC_CES_E_EUC
|
WC_CES_N_EUC_KR
)

	)

146 
	#WC_CES_CP437
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP437
)

	)

147 
	#WC_CES_CP737
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP737
)

	)

148 
	#WC_CES_CP775
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP775
)

	)

149 
	#WC_CES_CP850
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP850
)

	)

150 
	#WC_CES_CP852
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP852
)

	)

151 
	#WC_CES_CP855
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP855
)

	)

152 
	#WC_CES_CP856
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP856
)

	)

153 
	#WC_CES_CP857
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP857
)

	)

154 
	#WC_CES_CP860
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP860
)

	)

155 
	#WC_CES_CP861
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP861
)

	)

156 
	#WC_CES_CP862
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP862
)

	)

157 
	#WC_CES_CP863
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP863
)

	)

158 
	#WC_CES_CP864
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP864
)

	)

159 
	#WC_CES_CP865
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP865
)

	)

160 
	#WC_CES_CP866
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP866
)

	)

161 
	#WC_CES_CP869
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP869
)

	)

162 
	#WC_CES_CP874
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP874
)

	)

163 
	#WC_CES_CP1006
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1006
)

	)

164 
	#WC_CES_CP1250
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1250
)

	)

165 
	#WC_CES_CP1251
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1251
)

	)

166 
	#WC_CES_CP1252
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1252
)

	)

167 
	#WC_CES_CP1253
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1253
)

	)

168 
	#WC_CES_CP1254
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1254
)

	)

169 
	#WC_CES_CP1255
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1255
)

	)

170 
	#WC_CES_CP1256
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1256
)

	)

171 
	#WC_CES_CP1257
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1257
)

	)

172 
	#WC_CES_KOI8_R
 (
WC_CES_E_PRIV1
|
WC_CES_N_KOI8_R
)

	)

173 
	#WC_CES_KOI8_U
 (
WC_CES_E_PRIV1
|
WC_CES_N_KOI8_U
)

	)

174 
	#WC_CES_NEXTSTEP
 (
WC_CES_E_PRIV1
|
WC_CES_N_NEXTSTEP
)

	)

175 
	#WC_CES_RAW
 (
WC_CES_E_PRIV1
|
WC_CES_N_RAW
)

	)

177 
	#WC_CES_SHIFT_JIS
 (
WC_CES_E_PRIV2
|
WC_CES_N_SHIFT_JIS
)

	)

178 
	#WC_CES_CP932
 
WC_CES_SHIFT_JIS


	)

179 
	#WC_CES_SHIFT_JISX0213
 (
WC_CES_E_PRIV2
|
WC_CES_N_SHIFT_JISX0213
)

	)

180 
	#WC_CES_GBK
 (
WC_CES_E_PRIV2
|
WC_CES_N_GBK
)

	)

181 
	#WC_CES_CP936
 
WC_CES_GBK


	)

182 
	#WC_CES_GB18030
 (
WC_CES_E_PRIV2
|
WC_CES_N_GB18030
)

	)

183 
	#WC_CES_HZ_GB_2312
 (
WC_CES_T_PRIV2
|
WC_CES_T_MBYTE
|
WC_CES_N_HZ_GB_2312
)

	)

184 
	#WC_CES_BIG5
 (
WC_CES_E_PRIV2
|
WC_CES_N_BIG5
)

	)

185 
	#WC_CES_CP950
 
WC_CES_BIG5


	)

186 
	#WC_CES_HKSCS
 (
WC_CES_E_PRIV2
|
WC_CES_N_HKSCS
)

	)

187 
	#WC_CES_UHC
 (
WC_CES_E_PRIV2
|
WC_CES_N_UHC
)

	)

188 
	#WC_CES_CP949
 
WC_CES_UHC


	)

189 
	#WC_CES_JOHAB
 (
WC_CES_E_PRIV2
|
WC_CES_N_JOHAB
)

	)

191 
	#WC_CES_CP1258
 (
WC_CES_E_PRIV1
|
WC_CES_N_CP1258
)

	)

192 
	#WC_CES_TCVN_5712
 (
WC_CES_E_VIET
|
WC_CES_N_TCVN_5712
)

	)

193 
	#WC_CES_VISCII_11
 (
WC_CES_E_VIET
|
WC_CES_N_VISCII_11
)

	)

194 
	#WC_CES_VPS
 (
WC_CES_E_VIET
|
WC_CES_N_VPS
)

	)

196 
	#WC_CES_UTF_8
 (
WC_CES_T_UTF
|
WC_CES_T_8BIT
|
WC_CES_T_MBYTE
|
WC_CES_N_UTF_8
)

	)

197 
	#WC_CES_UTF_7
 (
WC_CES_T_UTF
|
WC_CES_T_MBYTE
|
WC_CES_N_UTF_7
)

	)

199 
	#WC_CES_END
 
WC_CES_N_UTF_7


	)

	@libwc/char_conv.c

2 
	~"wc.h
"

4 
wc_˚s
 
	gch¨_c⁄v_f_˚s
 = 0, 
	gch¨_c⁄v_t_˚s
 = 
WC_CES_WTF
;

5 
wc_°©us
 
	gch¨_c⁄v_°
;

8 
	$wc_ch¨_c⁄v_öô
(
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
)

10 
	`wc_öput_öô
(
f_˚s
, &
ch¨_c⁄v_°
);

11 
ch¨_c⁄v_°
.
°©e
 = -1;

12 
ch¨_c⁄v_f_˚s
 = 
f_˚s
;

13 
ch¨_c⁄v_t_˚s
 = 
t_˚s
;

14 
	}
}

16 
Så


17 
	$wc_ch¨_c⁄v
(
c
)

19  
	`wc_Så_c⁄v
((*
ch¨_c⁄v_°
.
˚s_öfo
->
ch¨_c⁄v
)((
wc_uch¨
)
c
, &char_conv_st),

20 
WC_CES_WTF
, 
ch¨_c⁄v_t_˚s
);

21 
	}
}

	@libwc/charset.c

2 
	~<°dlib.h
>

3 
	~<˘y≥.h
>

4 
	~<gc.h
>

5 
	#New_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC
(“)*—y≥)))

	)

7 
	~"wc.h
"

9 #ifde‡
HAVE_LANGINFO_CODESET


10 
	~<œngöfo.h
>

13 
wc_loˇÀ
 
	gWcLoˇÀ
 = 0;

16 *
	mœng
;

17 
wc_˚s
 
	m˚s
;

18 } 
	gœng_˚s_èbÀ
[] = {

19 { "cs", 
WC_CES_ISO_8859_2
 },

20 { "ñ", 
WC_CES_ISO_8859_7
 },

21 { "iw", 
WC_CES_ISO_8859_8
 },

22 { "ja", 
WC_CES_EUC_JP
 },

23 { "ko", 
WC_CES_EUC_KR
 },

24 { "hu", 
WC_CES_ISO_8859_2
 },

25 { "∂", 
WC_CES_ISO_8859_2
 },

26 { "ro", 
WC_CES_ISO_8859_2
 },

27 { "ru", 
WC_CES_ISO_8859_5
 },

28 { "sk", 
WC_CES_ISO_8859_2
 },

29 { "¶", 
WC_CES_ISO_8859_2
 },

30 { "å", 
WC_CES_ISO_8859_9
 },

31 { "zh", 
WC_CES_EUC_CN
 },

32 { 
NULL
, 0 }

35 
wc_˚s


36 
	$wc_guess_ch¨£t
(*
ch¨£t
, 
wc_˚s
 
‹ig
)

38 
wc_˚s
 
guess
;

40 i‡(
ch¨£t
 =
NULL
 || *charset == '\0')

41  
‹ig
;

42 
guess
 = 
	`wc_ch¨£t_to_˚s
(
ch¨£t
);

43  
guess
 ? gues†: 
‹ig
;

44 
	}
}

46 
wc_˚s


47 
	$wc_guess_ch¨£t_sh‹t
(*
ch¨£t
, 
wc_˚s
 
‹ig
)

49 
wc_˚s
 
guess
;

51 i‡(
ch¨£t
 =
NULL
 || *charset == '\0')

52  
‹ig
;

53 
guess
 = 
	`wc_ch¨£t_sh‹t_to_˚s
(
ch¨£t
);

54  
guess
 ? gues†: 
‹ig
;

55 
	}
}

57 
wc_˚s


58 
	$wc_guess_loˇÀ_ch¨£t
(*
loˇÀ
, 
wc_˚s
 
‹ig
)

60 
wc_˚s
 
guess
;

62 i‡(
loˇÀ
 =
NULL
 || *locale == '\0')

63  
‹ig
;

64 
guess
 = 
	`wc_loˇÀ_to_˚s
(
loˇÀ
);

65  
guess
 ? gues†: 
‹ig
;

66 
	}
}

68 
wc_˚s


69 
	$wc_ch¨£t_to_˚s
(*
ch¨£t
)

71 *
p
 = 
ch¨£t
;

72 
buf
[16];

73 
n
;

75 i‡(
	`tﬁowî
(*
p
) == 'x' && *(p+1) == '-')

76 
p
 += 2;

77 
n
 = 0; *
p
 &&Ç < 15;Ö++) {

78 i‡(()*
p
 > 0x20 && *p != '_' && *p != '-')

79 
buf
[
n
++] = 
	`tﬁowî
(*
p
);

81 
buf
[
n
] = 0;

82 
p
 = 
buf
;

83 *
p
) {

85 i‡(! 
	`°∫cmp
(
p
, "euc", 3)) {

86 
p
 += 3;

87 *
p
) {

88 'j':  
WC_CES_EUC_JP
;

89 'c':  
WC_CES_EUC_CN
;

90 't':  
WC_CES_EUC_TW
;

91 'k':  
WC_CES_EUC_KR
;

93 
WcLoˇÀ
) {

94 
WC_LOCALE_JA_JP
:  
WC_CES_EUC_JP
;

95 
WC_LOCALE_ZH_CN
:  
WC_CES_EUC_CN
;

96 
WC_LOCALE_ZH_TW
:  
WC_CES_EUC_TW
;

97 
WC_LOCALE_ZH_HK
:  
WC_CES_EUC_CN
;

98 
WC_LOCALE_KO_KR
:  
WC_CES_EUC_KR
;

100  
WC_CES_EUC_JP
;

104 i‡(! 
	`°∫cmp
(
p
, "iso2022", 7)) {

105 
p
 += 7;

106 *
p
) {

108 i‡(! 
	`°∫cmp
(
p
, "jp2", 3))

109  
WC_CES_ISO_2022_JP_2
;

110 i‡(! 
	`°∫cmp
(
p
, "jp3", 3))

111  
WC_CES_ISO_2022_JP_3
;

112  
WC_CES_ISO_2022_JP
;

113 'c':  
WC_CES_ISO_2022_CN
;

114 'k':  
WC_CES_ISO_2022_KR
;

116  
WC_CES_ISO_2022_JP
;

117 } i‡(! 
	`°∫cmp
(
p
, "iso8859", 7)) {

118 
n
 = 
	`©oi
(
p
 + 7);

119 i‡(
n
 >= 1 &&Ç <= 16 &&Ç != 12)

120  (
WC_CES_E_ISO_8859
 | 
n
);

121  
WC_CES_ISO_8859_1
;

125 i‡(! 
	`°∫cmp
(
p
, "johab", 5))

126  
WC_CES_JOHAB
;

127 i‡(! 
	`°∫cmp
(
p
, "jis", 3))

128  
WC_CES_ISO_2022_JP
;

131 i‡(! 
	`°∫cmp
(
p
, "shiftjisx0213", 13) ||

132 ! 
	`°∫cmp
(
p
, "sjisx0213", 9))

133  
WC_CES_SHIFT_JISX0213
;

134 i‡(! 
	`°∫cmp
(
p
, "shiftjis", 8) ||

135 ! 
	`°∫cmp
(
p
, "sjis", 4))

136  
WC_CES_SHIFT_JIS
;

139 i‡(! 
	`°∫cmp
(
p
, "gb18030", 7) ||

140 ! 
	`°∫cmp
(
p
, "gbk2k", 5))

141  
WC_CES_GB18030
;

142 i‡(! 
	`°∫cmp
(
p
, "gbk", 3))

143  
WC_CES_GBK
;

144 i‡(! 
	`°∫cmp
(
p
, "gb2312", 6))

145  
WC_CES_EUC_CN
;

148 i‡(! 
	`°∫cmp
(
p
, "big5hkscs", 9))

149  
WC_CES_HKSCS
;

150 i‡(! 
	`°∫cmp
(
p
, "big5", 4))

151  
WC_CES_BIG5
;

154 i‡(! 
	`°∫cmp
(
p
, "hz", 2))

155  
WC_CES_HZ_GB_2312
;

156 i‡(! 
	`°∫cmp
(
p
, "hkscs", 5))

157  
WC_CES_HKSCS
;

160 i‡(! 
	`°∫cmp
(
p
, "koi8r", 5))

161  
WC_CES_KOI8_R
;

162 i‡(! 
	`°∫cmp
(
p
, "koi8u", 5))

163  
WC_CES_KOI8_U
;

164 i‡(! 
	`°∫cmp
(
p
, "ksx1001", 7))

165  
WC_CES_EUC_KR
;

166 i‡(! 
	`°∫cmp
(
p
, "ksc5601", 7))

167  
WC_CES_EUC_KR
;

170 i‡(! 
	`°∫cmp
(
p
, "tis620", 6))

171  
WC_CES_TIS_620
;

172 i‡(! 
	`°∫cmp
(
p
, "tcvn", 4))

173  
WC_CES_TCVN_5712
;

176 i‡(! 
	`°∫cmp
(
p
, "next", 4))

177  
WC_CES_NEXTSTEP
;

180 i‡(! 
	`°∫cmp
(
p
, "viet", 4)) {

181 
p
 += 4;

182 i‡(! 
	`°∫cmp
(
p
, "tcvn", 4))

183  
WC_CES_TCVN_5712
;

185 i‡(! 
	`°∫cmp
(
p
, "viscii", 6))

186  
WC_CES_VISCII_11
;

187 i‡(! 
	`°∫cmp
(
p
, "vps", 3))

188  
WC_CES_VPS
;

191 #ifde‡
USE_UNICODE


192 i‡(! 
	`°∫cmp
(
p
, "utf8", 4))

193  
WC_CES_UTF_8
;

194 i‡(! 
	`°∫cmp
(
p
, "utf7", 4))

195  
WC_CES_UTF_7
;

197 i‡(! 
	`°∫cmp
(
p
, "uhc", 3))

198  
WC_CES_UHC
;

199 i‡(! 
	`°∫cmp
(
p
, "ujis", 4))

200  
WC_CES_EUC_JP
;

201 i‡(! 
	`°∫cmp
(
p
, "usascii", 7))

202  
WC_CES_US_ASCII
;

205 i‡(! 
	`°∫cmp
(
p
, "ascii", 5))

206  
WC_CES_US_ASCII
;

209 i‡(! 
	`°∫cmp
(
p
, "cngb", 4))

210  
WC_CES_EUC_CN
;

211 i‡(*(
p
+1) != 'p')

213 
n
 = 
	`©oi
(
p
 + 2);

214 
n
) {

215 437:  
WC_CES_CP437
;

216 737:  
WC_CES_CP737
;

217 775:  
WC_CES_CP775
;

218 850:  
WC_CES_CP850
;

219 852:  
WC_CES_CP852
;

220 855:  
WC_CES_CP855
;

221 856:  
WC_CES_CP856
;

222 857:  
WC_CES_CP857
;

223 860:  
WC_CES_CP860
;

224 861:  
WC_CES_CP861
;

225 862:  
WC_CES_CP862
;

226 863:  
WC_CES_CP863
;

227 864:  
WC_CES_CP864
;

228 865:  
WC_CES_CP865
;

229 866:  
WC_CES_CP866
;

230 869:  
WC_CES_CP869
;

231 874:  
WC_CES_CP874
;

232 932:  
WC_CES_CP932
;

233 936:  
WC_CES_CP936
;

234 949:  
WC_CES_CP949
;

235 950:  
WC_CES_CP950
;

236 1006:  
WC_CES_CP1006
;

237 1250:  
WC_CES_CP1250
;

238 1251:  
WC_CES_CP1251
;

239 1252:  
WC_CES_CP1252
;

240 1253:  
WC_CES_CP1253
;

241 1254:  
WC_CES_CP1254
;

242 1255:  
WC_CES_CP1255
;

243 1256:  
WC_CES_CP1256
;

244 1257:  
WC_CES_CP1257
;

245 1258:  
WC_CES_CP1258
;

249 i‡(
	`°∫cmp
(
p
, "windows", 7))

251 i‡(! 
	`°∫cmp
(
p
, "31j", 3))

252  
WC_CES_CP932
;

253 
n
 = 
	`©oi
(
p
 + 7);

254 
n
) {

255 1250:  
WC_CES_CP1250
;

256 1251:  
WC_CES_CP1251
;

257 1252:  
WC_CES_CP1252
;

258 1253:  
WC_CES_CP1253
;

259 1254:  
WC_CES_CP1254
;

260 1255:  
WC_CES_CP1255
;

261 1256:  
WC_CES_CP1256
;

262 1257:  
WC_CES_CP1257
;

263 1258:  
WC_CES_CP1258
;

268 
	}
}

270 
wc_˚s


271 
	$wc_ch¨£t_sh‹t_to_˚s
(*
ch¨£t
)

273 *
p
 = 
ch¨£t
;

274 
buf
[16];

275 
wc_˚s
 
˚s
;

276 
n
;

278 
˚s
 = 
	`wc_ch¨£t_to_˚s
(
ch¨£t
);

279 i‡(
˚s
)

280  
˚s
;

282 
n
 = 0; *
p
 &&Ç < 15;Ö++) {

283 i‡(()*
p
 > 0x20 && *p != '_' && *p != '-')

284 
buf
[
n
++] = 
	`tﬁowî
(*
p
);

286 
buf
[
n
] = 0;

287 
p
 = 
buf
;

288 *
p
) {

290 *(
p
+1)) {

291 'j':  
WC_CES_EUC_JP
;

292 'c':  
WC_CES_EUC_CN
;

293 't':  
WC_CES_EUC_TW
;

294 'k':  
WC_CES_EUC_KR
;

296  
WC_CES_EUC_JP
;

298 
p
++;

299 i‡(*
p
 == 'o')

300  
WC_CES_JOHAB
;

301 i‡(*
p
 == 'p')

302 
p
++;

303 i‡(*
p
 == '2')

304  
WC_CES_ISO_2022_JP_2
;

305 i‡(*
p
 == '3')

306  
WC_CES_ISO_2022_JP_3
;

307  
WC_CES_ISO_2022_JP
;

309  
WC_CES_SHIFT_JIS
;

311  
WC_CES_EUC_CN
;

313  
WC_CES_BIG5
;

315 i‡(*(
p
+1) == 'k')

316  
WC_CES_HKSCS
;

317  
WC_CES_HZ_GB_2312
;

319 i‡(*(
p
+1) == 'o')

320  
WC_CES_KOI8_R
;

321  
WC_CES_ISO_2022_KR
;

323 
n
 = 
	`©oi
(
p
 + 1);

324 i‡(
n
 >= 1 &&Ç <= 16 &&Ç != 12)

325  (
WC_CES_E_ISO_8859
 | 
n
);

326  
WC_CES_ISO_8859_1
;

328 i‡(*(
p
+1) == 'c')

329  
WC_CES_TCVN_5712
;

330  
WC_CES_TIS_620
;

332  
WC_CES_NEXTSTEP
;

334 i‡(*(
p
+1) == 'p')

335  
WC_CES_VPS
;

336  
WC_CES_VISCII_11
;

337 #ifde‡
USE_UNICODE


339 i‡(*(
p
+1) == '7')

340  
WC_CES_UTF_7
;

341  
WC_CES_UTF_8
;

344  
WC_CES_US_ASCII
;

346  
WC_CES_ISO_2022_CN
;

348 
n
 = 
	`©oi
(
p
 + 1);

349 
n
) {

350 1250:  
WC_CES_CP1250
;

351 1251:  
WC_CES_CP1251
;

352 1252:  
WC_CES_CP1252
;

353 1253:  
WC_CES_CP1253
;

354 1254:  
WC_CES_CP1254
;

355 1255:  
WC_CES_CP1255
;

356 1256:  
WC_CES_CP1256
;

357 1257:  
WC_CES_CP1257
;

358 1258:  
WC_CES_CP1258
;

362  
WC_CES_RAW
;

365 
	}
}

367 
wc_˚s


368 
	$wc_loˇÀ_to_˚s
(*
loˇÀ
)

370 *
p
 = 
loˇÀ
;

371 
buf
[6];

372 
n
;

374 i‡(*
p
 == 'C' && *(p+1) == '\0')

375  
WC_CES_US_ASCII
;

376 #ifde‡
HAVE_LANGINFO_CODESET


378 *
cs
 = 
	`∆_œngöfo
(
CODESET
);

379 i‡(
cs
 && 
	`°rcmp
(cs, "US-ASCII"))

380  
	`wc_ch¨£t_to_˚s
(
cs
);

383 
n
 = 0; *
p
 && *p != '.' &&Ç < 5;Ö++) {

384 i‡(()*
p
 > 0x20)

385 
buf
[
n
++] = 
	`tﬁowî
(*
p
);

387 
buf
[
n
] = 0;

388 i‡(*
p
 == '.') {

389 
p
++;

390 i‡(! 
	`°rˇ£cmp
(
p
, "euc")) {

391 
buf
[0]) {

393 
WcLoˇÀ
 = 
WC_LOCALE_JA_JP
;

396 
WcLoˇÀ
 = 
WC_LOCALE_KO_KR
;

399 i‡(!
	`°rcmp
(
buf
, "zh_tw"))

400 
WcLoˇÀ
 = 
WC_LOCALE_ZH_TW
;

401 i‡(!
	`°rcmp
(
buf
, "zh_hk"))

402 
WcLoˇÀ
 = 
WC_LOCALE_ZH_HK
;

404 
WcLoˇÀ
 = 
WC_LOCALE_ZH_CN
;

407 
WcLoˇÀ
 = 0;

411  
	`wc_ch¨£t_to_˚s
(
p
);

414 i‡(!
	`°rcmp
(
buf
, "japanese"))

415  
WC_CES_SHIFT_JIS
;

416 i‡(!
	`°rcmp
(
buf
, "zh_tw") ||

417 !
	`°rcmp
(
buf
, "zh_hk"))

418  
WC_CES_BIG5
;

419 
n
 = 0; 
œng_˚s_èbÀ
[n].
œng
;Ç++) {

420 i‡(!
	`°∫cmp
(
buf
, 
œng_˚s_èbÀ
[
n
].
œng
, 2))

421  
œng_˚s_èbÀ
[
n
].
˚s
;

423  
WC_CES_ISO_8859_1
;

424 
	}
}

427 
	$wc_˚s_to_ch¨£t
(
wc_˚s
 
˚s
)

429 i‡(
˚s
 =
WC_CES_WTF
)

431  
WcCesInfo
[
	`WC_CES_INDEX
(
˚s
)].
«me
;

432 
	}
}

435 
	$wc_˚s_to_ch¨£t_desc
(
wc_˚s
 
˚s
)

437 i‡(
˚s
 =
WC_CES_WTF
)

439  
WcCesInfo
[
	`WC_CES_INDEX
(
˚s
)].
desc
;

440 
	}
}

442 
wc_˚s


443 
	$wc_guess_8bô_ch¨£t
(
wc_˚s
 
‹ig
)

445 
‹ig
) {

446 
WC_CES_ISO_2022_JP
:

447 
WC_CES_ISO_2022_JP_2
:

448 
WC_CES_ISO_2022_JP_3
:

449  
WC_CES_EUC_JP
;

450 
WC_CES_ISO_2022_KR
:

451  
WC_CES_EUC_KR
;

452 
WC_CES_ISO_2022_CN
:

453 
WC_CES_HZ_GB_2312
:

454  
WC_CES_EUC_CN
;

455 
WC_CES_US_ASCII
:

456  
WC_CES_ISO_8859_1
;

458  
‹ig
;

459 
	}
}

461 
wc_boﬁ


462 
	$wc_check_˚s
(
wc_˚s
 
˚s
)

464 
size_t
 
i
 = 
	`WC_CES_INDEX
(
˚s
);

466  (
i
 <
WC_CES_END
 && 
WcCesInfo
[i].
id
 =
˚s
);

467 
	}
}

470 
	$wc_˚s_li°_cmp
(c⁄° *
a
, c⁄° *
b
)

472  
	`°rˇ£cmp
(((
wc_˚s_li°
 *)
a
)->
desc
, ((wc_˚s_li° *)
b
)->desc);

473 
	}
}

475 
wc_˚s_li°
 *
	gli°
 = 
NULL
;

477 
wc_˚s_li°
 *

478 
	$wc_gë_˚s_li°
()

480 
wc_˚s_öfo
 *
öfo
;

481 
size_t
 
n
;

483 i‡(
li°
)

484  
li°
;

485 
öfo
 = 
WcCesInfo
, 
n
 = 0; info->
id
; info++) {

486 i‡(
öfo
->
«me
 !
NULL
)

487 
n
++;

489 
li°
 = 
	`New_N
(
wc_˚s_li°
, 
n
 + 1);

490 
öfo
 = 
WcCesInfo
, 
n
 = 0; info->
id
; info++) {

491 i‡(
öfo
->
«me
 !
NULL
) {

492 
li°
[
n
].
id
 = 
öfo
->id;

493 
li°
[
n
].
«me
 = 
öfo
->name;

494 
li°
[
n
].
desc
 = 
öfo
->desc;

495 
n
++;

498 
li°
[
n
].
id
 = 0;

499 
li°
[
n
].
«me
 = 
NULL
;

500 
li°
[
n
].
desc
 = 
NULL
;

501 
	`qs‹t
(
li°
, 
n
, (
wc_˚s_li°
), 
wc_˚s_li°_cmp
);

502  
li°
;

503 
	}
}

	@libwc/combining.c

2 
	~"wc.h
"

3 #ifde‡
USE_UNICODE


4 
	~"ucs.h
"

6 
	~"m≠/iso88596_comböög.m≠
"

7 
	~"m≠/iso885911_comböög.m≠
"

8 
	~"m≠/˝864_comböög.m≠
"

9 
	~"m≠/˝874_comböög.m≠
"

10 
	~"m≠/˝1255_comböög.m≠
"

11 
	~"m≠/˝1256_comböög.m≠
"

12 
	~"m≠/˝1258_comböög.m≠
"

13 
	~"m≠/tcvn5712_comböög.m≠
"

15 
wc_boﬁ


16 
	$wc_is_comböög
(
wc_wch¨_t
 
cc
)

18 
	`WC_CCS_SET
(
cc
.
ccs
)) {

19 
WC_CCS_ISO_8859_6
:

20  
iso88596_comböög_m≠
[
cc
.
code
 & 0x7f];

21 
WC_CCS_ISO_8859_11
:

22  
iso885911_comböög_m≠
[
cc
.
code
 & 0x7f];

23 
WC_CCS_CP864
:

24  
˝864_comböög_m≠
[
cc
.
code
 & 0x7f];

25 
WC_CCS_CP874
:

26  
˝874_comböög_m≠
[
cc
.
code
 & 0x7f];

27 
WC_CCS_CP1255
:

28  
˝1255_comböög_m≠
[
cc
.
code
 & 0x7f];

29 
WC_CCS_CP1256
:

30  
˝1256_comböög_m≠
[
cc
.
code
 & 0x7f];

31 
WC_CCS_CP1258_1
:

32  
˝1258_comböög_m≠
[
cc
.
code
 & 0x7f];

33 
WC_CCS_TCVN_5712_1
:

34  
tcvn5712_comböög_m≠
[
cc
.
code
 & 0x7f];

35 #ifde‡
USE_UNICODE


36 
WC_CCS_UCS2
:

37 
WC_CCS_UCS4
:

38 
WC_CCS_UCS_TAG
:

39  
	`wc_is_ucs_comböög
(
cc
.
code
);

42  
WC_FALSE
;

43 
	}
}

	@libwc/conv.c

2 
	~"wc.h
"

3 
	~"wtf.h
"

4 
	~"iso2022.h
"

5 
	~"hz.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

8 
	~"utf8.h
"

9 
	~"utf7.h
"

12 *
	gWcRïœ˚
 = "?";

13 *
	gWcRïœ˚W
 = "??";

15 
Så
 
wc_c⁄v_to_˚s
(Så 
is
, 
wc_˚s
 
˚s
);

17 
Så


18 
	$wc_Så_c⁄v
(
Så
 
is
, 
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
)

20 i‡(
f_˚s
 !
WC_CES_WTF
)

21 
is
 = (*
WcCesInfo
[
	`WC_CES_INDEX
(
f_˚s
)].
c⁄v_‰om
)(is, f_ces);

22 i‡(
t_˚s
 !
WC_CES_WTF
)

23  
	`wc_c⁄v_to_˚s
(
is
, 
t_˚s
);

25  
is
;

26 
	}
}

28 
Så


29 
	$wc_Så_c⁄v_°ri˘
(
Så
 
is
, 
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
)

31 
Så
 
os
;

32 
wc_›ti⁄
 
›t
 = 
WcO±i⁄
;

34 
WcO±i⁄
.
°ri˘_iso2022
 = 
WC_TRUE
;

35 
WcO±i⁄
.
no_ª∂a˚
 = 
WC_TRUE
;

36 
WcO±i⁄
.
fix_width_c⁄v
 = 
WC_FALSE
;

37 
os
 = 
	`wc_Så_c⁄v
(
is
, 
f_˚s
, 
t_˚s
);

38 
WcO±i⁄
 = 
›t
;

39  
os
;

40 
	}
}

42 
Så


43 
	$wc_c⁄v_to_˚s
(
Så
 
is
, 
wc_˚s
 
˚s
)

45 
Så
 
os
;

46 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

47 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

48 
wc_uch¨
 *
p
;

49 
wc_°©us
 
°
;

51 
˚s
) {

52 
WC_CES_HZ_GB_2312
:

53 
p
 = 
•
;Ö < 
ï
 && *p != '~' && *p < 0x80;Ö++)

56 
WC_CES_TCVN_5712
:

57 
WC_CES_VISCII_11
:

58 
WC_CES_VPS
:

59 
p
 = 
•
;Ö < 
ï
 && 0x20 <= *p && *p < 0x80;Ö++)

63 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

67 i‡(
p
 =
ï
)

68  
is
;

70 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

71 i‡(
p
 > 
•
)

72 
p
--;

73 i‡(
p
 > 
•
)

74 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

76 
	`wc_ouçut_öô
(
˚s
, &
°
);

78 
˚s
) {

79 
WC_CES_ISO_2022_JP
:

80 
WC_CES_ISO_2022_JP_2
:

81 
WC_CES_ISO_2022_JP_3
:

82 
WC_CES_ISO_2022_CN
:

83 
WC_CES_ISO_2022_KR
:

84 
WC_CES_HZ_GB_2312
:

85 
WC_CES_TCVN_5712
:

86 
WC_CES_VISCII_11
:

87 
WC_CES_VPS
:

88 #ifde‡
USE_UNICODE


89 
WC_CES_UTF_8
:

90 
WC_CES_UTF_7
:

92 
p
 < 
ï
)

93 (*
°
.
˚s_öfo
->
push_to
)(
os
, 
	`wtf_∑r£
(&
p
), &st);

96 
p
 < 
ï
) {

97 i‡(*
p
 < 0x80 && 
	`wtf_width
(p + 1)) {

98 
	`Såˇt_ch¨
(
os
, ()*
p
);

99 
p
++;

101 (*
°
.
˚s_öfo
->
push_to
)(
os
, 
	`wtf_∑r£
(&
p
), &st);

106 
	`wc_push_íd
(
os
, &
°
);

108  
os
;

109 
	}
}

111 
Så


112 
	$wc_Så_c⁄v_wôh_dëe˘
(
Så
 
is
, 
wc_˚s
 *
f_˚s
, wc_˚†
höt
, wc_˚†
t_˚s
)

114 
wc_˚s
 
dëe˘
;

116 i‡(*
f_˚s
 =
WC_CES_WTF
 || 
höt
 == WC_CES_WTF) {

117 *
f_˚s
 = 
WC_CES_WTF
;

118 
dëe˘
 = 
WC_CES_WTF
;

119 } i‡(
WcO±i⁄
.
auto_dëe˘
 =
WC_OPT_DETECT_OFF
) {

120 *
f_˚s
 = 
höt
;

121 
dëe˘
 = 
höt
;

123 i‡(*
f_˚s
 & 
WC_CES_T_8BIT
)

124 
höt
 = *
f_˚s
;

125 
dëe˘
 = 
	`wc_auto_dëe˘
(
is
->
±r
, is->
Àngth
, 
höt
);

126 i‡(
WcO±i⁄
.
auto_dëe˘
 =
WC_OPT_DETECT_ON
) {

127 i‡((
dëe˘
 & 
WC_CES_T_8BIT
) ||

128 ((
dëe˘
 & 
WC_CES_T_NASCII
Ë&& ! (*
f_˚s
 & 
WC_CES_T_8BIT
)))

129 *
f_˚s
 = 
dëe˘
;

131 i‡((
dëe˘
 & 
WC_CES_T_ISO_2022
Ë&& ! (*
f_˚s
 & 
WC_CES_T_8BIT
))

132 *
f_˚s
 = 
dëe˘
;

135  
	`wc_Så_c⁄v
(
is
, 
dëe˘
, 
t_˚s
);

136 
	}
}

139 
	$wc_push_íd
(
Så
 
os
, 
wc_°©us
 *
°
)

141 i‡(
°
->
˚s_öfo
->
id
 & 
WC_CES_T_ISO_2022
)

142 
	`wc_push_to_iso2022_íd
(
os
, 
°
);

143 i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_HZ_GB_2312
)

144 
	`wc_push_to_hz_íd
(
os
, 
°
);

145 #ifde‡
USE_UNICODE


146 i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_UTF_8
)

147 
	`wc_push_to_utf8_íd
(
os
, 
°
);

148 i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_UTF_7
)

149 
	`wc_push_to_utf7_íd
(
os
, 
°
);

151 
	}
}

	@libwc/detect.c

2 
	~"wc.h
"

3 
	~"iso2022.h
"

4 
	~"sjis.h
"

5 
	~"big5.h
"

6 
	~"hz.h
"

7 
	~"võt.h
"

8 #ifde‡
USE_UNICODE


9 
	~"utf8.h
"

10 
	~"utf7.h
"

13 
wc_uöt8
 
	gWC_DETECT_MAP
[ 0x100 ] = {

32 
	#DETECT_NORMAL
 0

	)

33 
	#DETECT_POSSIBLE
 1

	)

34 
	#DETECT_OK
 2

	)

35 
	#DETECT_BROKEN
 4

	)

36 
	#DETECT_ERROR
 8

	)

37 
	#SET_DETECT
(
x
,
y
Ë((xË|(y))

	)

38 
	#SET_BROKEN_ERROR
(
x
Ë((xË((xË& 
DETECT_BROKEN
Ë? 
DETECT_ERROR
 : ((xË| DETECT_BROKEN))

	)

41 
	$wc_¸óã_dëe˘_m≠
(
wc_˚s
 
˚s
, 
wc_boﬁ
 
esc
)

43 
wc_˚s
 
dëe˘_˚s
 = 
WC_CES_US_ASCII
;

44 
i
;

46 i‡(
˚s
 !
dëe˘_˚s
) {

47 i‡(
˚s
 & 
WC_CES_T_VIET
) {

48 
wc_uöt8
 *
m≠
 = 
NULL
;

49 
˚s
) {

50 
WC_CES_TCVN_5712
:

51 
m≠
 = 
wc_c0_tcvn57122_m≠
;

53 
WC_CES_VISCII_11
:

54 
m≠
 = 
wc_c0_viscii112_m≠
;

56 
WC_CES_VPS
:

57 
m≠
 = 
wc_c0_vps2_m≠
;

60 
i
 = 0; i < 0x20; i++)

61 
WC_DETECT_MAP
[
i
] = 
m≠
[i] ? 1 : 0;

63 
i
 = 0; i < 0x20; i++)

64 
WC_DETECT_MAP
[
i
] = 0;

65 
WC_DETECT_MAP
[
WC_C_HZ_TILDA
] = (
˚s
 =
WC_CES_HZ_GB_2312
) ? 1 : 0;

66 #ifde‡
USE_UNICODE


67 
WC_DETECT_MAP
[
WC_C_UTF7_PLUS
] = (
˚s
 =
WC_CES_UTF_7
) ? 1 : 0;

70 
dëe˘_˚s
 = 
˚s
;

72 
WC_DETECT_MAP
[
WC_C_ESC
] = (
esc
 || (
˚s
 & 
WC_CES_T_ISO_2022
)) ? 1 : 0;

74 
	}
}

76 
wc_˚s


77 
	$wc_auto_dëe˘
(*
is
, 
size_t
 
Àn
, 
wc_˚s
 
höt
)

79 
wc_uch¨
 *
p
 = (wc_uch¨ *)
is
;

80 
wc_uch¨
 *
ï
 = 
p
 + 
Àn
;

81 
wc_uch¨
 *
q
;

82 
wc_˚s
 
euc
 = 0, 
¥iv
 = 0;

83 
wc_°©us
 
°
;

84 
euc_°©e
 = 0, 
sjis_°©e
 = 0, 
big5_°©e
 = 0, 
hz_°©e
 = 0;

85 
iso_dëe˘
 = 
DETECT_ERROR
, 
euc_dëe˘
 = DETECT_ERROR,

86 
sjis_dëe˘
 = 
DETECT_ERROR
, 
big5_dëe˘
 = DETECT_ERROR,

87 
hz_dëe˘
 = 
DETECT_ERROR
, 
œtö_dëe˘
 = DETECT_ERROR,

88 
¥iv_dëe˘
 = 
DETECT_ERROR
;

89 
possibÀ
 = 0;

90 
wc_boﬁ
 
iso2022jp2
 = 
WC_FALSE
, 
iso2022jp3
 = WC_FALSE,

91 
iso2022˙
 = 
WC_FALSE
, 
iso2022kr
 = WC_FALSE, 
ok
 = WC_FALSE;

92 #ifde‡
USE_UNICODE


93 
utf8_°©e
 = 0;

94 
utf8_dëe˘
 = 
DETECT_ERROR
;

95 
utf8_√xt
 = 0;

98 
	`wc_¸óã_dëe˘_m≠
(
höt
, 
WC_TRUE
);

99 ; 
p
 < 
ï
 && ! 
WC_DETECT_MAP
[*p];Ö++)

101 i‡(
p
 =
ï
)

102  
höt
;

104 
höt
) {

105 
WC_CES_ISO_2022_JP
:

106 
WC_CES_ISO_2022_JP_2
:

107 
WC_CES_ISO_2022_JP_3
:

108 
WC_CES_EUC_JP
:

109 
WC_CES_SHIFT_JIS
:

110 
WC_CES_SHIFT_JISX0213
:

111 
euc
 = 
WC_CES_EUC_JP
;

112 
euc_°©e
 = 
WC_EUC_NOSTATE
;

113 
sjis_°©e
 = 
WC_SJIS_NOSTATE
;

114 
iso_dëe˘
 = 
euc_dëe˘
 = 
sjis_dëe˘
 = 
DETECT_NORMAL
;

115 
possibÀ
 = 3;

117 
WC_CES_ISO_2022_CN
:

118 
WC_CES_EUC_CN
:

119 
euc
 = 
WC_CES_EUC_CN
;

120 
euc_°©e
 = 
WC_EUC_NOSTATE
;

121 
big5_°©e
 = 
WC_BIG5_NOSTATE
;

122 
iso_dëe˘
 = 
euc_dëe˘
 = 
big5_dëe˘
 = 
DETECT_NORMAL
;

123 
possibÀ
 = 3;

125 
WC_CES_EUC_TW
:

126 
WC_CES_BIG5
:

127 
euc
 = 
WC_CES_EUC_TW
;

128 
euc_°©e
 = 
WC_EUC_NOSTATE
;

129 
big5_°©e
 = 
WC_BIG5_NOSTATE
;

130 
iso_dëe˘
 = 
euc_dëe˘
 = 
big5_dëe˘
 = 
DETECT_NORMAL
;

131 
possibÀ
 = 3;

133 
WC_CES_HZ_GB_2312
:

134 
euc
 = 
WC_CES_EUC_CN
;

135 
euc_°©e
 = 
WC_EUC_NOSTATE
;

136 
hz_°©e
 = 
WC_HZ_NOSTATE
;

137 
iso_dëe˘
 = 
euc_dëe˘
 = 
big5_dëe˘
 = 
hz_dëe˘
 = 
DETECT_NORMAL
;

138 
possibÀ
 = 4;

140 
WC_CES_ISO_2022_KR
:

141 
WC_CES_EUC_KR
:

142 
euc
 = 
WC_CES_EUC_KR
;

143 
euc_°©e
 = 
WC_EUC_NOSTATE
;

144 
iso_dëe˘
 = 
euc_dëe˘
 = 
DETECT_NORMAL
;

145 
possibÀ
 = 3;

147 #ifde‡
USE_UNICODE


148 
WC_CES_UTF_8
:

149 
iso_dëe˘
 = 
DETECT_NORMAL
;

150 
possibÀ
 = 1;

153 
WC_CES_US_ASCII
:

154 
iso_dëe˘
 = 
œtö_dëe˘
 = 
DETECT_NORMAL
;

155 
possibÀ
 = 2;

158 i‡(
höt
 & 
WC_CES_T_ISO_8859
) {

159 
iso_dëe˘
 = 
œtö_dëe˘
 = 
DETECT_NORMAL
;

160 
possibÀ
 = 2;

162 
iso_dëe˘
 = 
¥iv_dëe˘
 = 
DETECT_NORMAL
;

163 
¥iv
 = 
höt
;

164 
possibÀ
 = 2;

168 #ifde‡
USE_UNICODE


169 i‡(
¥iv_dëe˘
 =
DETECT_ERROR
) {

170 
utf8_dëe˘
 = 
DETECT_NORMAL
;

171 
possibÀ
++;

175 
	`wc_öput_öô
(
WC_CES_US_ASCII
, &
°
);

177 ; 
p
 < 
ï
;Ö++) {

178 i‡(
possibÀ
 =0 || (possibÀ =1 && 
ok
))

180 i‡(
iso_dëe˘
 !
DETECT_ERROR
) {

181 *
p
) {

182 
WC_C_ESC
:

183 i‡(*(
p
+1Ë=
WC_C_MBCS
) {

184 
q
 = 
p
;

185 i‡(! 
	`wc_∑r£_iso2022_esc
(&
q
, &
°
))

187 i‡(
°
.
design
[0] =
WC_CCS_JIS_C_6226
 ||

188 
°
.
design
[0] =
WC_CCS_JIS_X_0208
)

190 i‡(
°
.
design
[0] =
WC_CCS_JIS_X_0213_1
 ||

191 
°
.
design
[0] =
WC_CCS_JIS_X_0213_2
)

192 
iso2022jp3
 = 
WC_TRUE
;

193 i‡(
	`WC_CCS_TYPE
(
°
.
design
[0]Ë=
WC_CCS_A_CS94W
)

194 
iso2022jp2
 = 
WC_TRUE
;

195 i‡(
°
.
design
[1] =
WC_CCS_KS_X_1001
)

196 
iso2022kr
 = 
WC_TRUE
;

197 i‡(
°
.
design
[1] =
WC_CCS_GB_2312
 ||

198 
°
.
design
[1] =
WC_CCS_ISO_IR_165
 ||

199 
°
.
design
[1] =
WC_CCS_CNS_11643_1
)

200 
iso2022˙
 = 
WC_TRUE
;

201 i‡(
	`WC_CCS_TYPE
(
°
.
design
[2]Ë=
WC_CCS_A_CS94W
 ||

202 
	`WC_CCS_TYPE
(
°
.
design
[3]Ë=
WC_CCS_A_CS94W
)

203 
iso2022˙
 = 
WC_TRUE
;

204 } i‡(*(
p
+1Ë=
WC_C_G2_CS96
) {

205 
q
 = 
p
;

206 i‡(! 
	`wc_∑r£_iso2022_esc
(&
q
, &
°
))

208 i‡(
	`WC_CCS_TYPE
(
°
.
design
[2]Ë=
WC_CCS_A_CS96
)

209 
iso2022jp2
 = 
WC_TRUE
;

210 } i‡(*(
p
+1Ë=
WC_C_CSWSR
) {

211 
q
 = 
p
;

212 i‡(! 
	`wc_∑r£_iso2022_esc
(&
q
, &
°
))

214 
possibÀ
 = 0;

215 
iso_dëe˘
 = 
DETECT_BROKEN
;

218 
iso_dëe˘
 = 
DETECT_OK
;

219 
ok
 = 
WC_TRUE
;

221 
WC_C_SI
:

222 
WC_C_SO
:

223 
iso_dëe˘
 = 
DETECT_OK
;

224 
ok
 = 
WC_TRUE
;

225 
iso2022˙
 = 
WC_TRUE
;

226 
iso2022kr
 = 
WC_TRUE
;

229 i‡(*
p
 & 0x80) {

230 
iso_dëe˘
 = 
DETECT_ERROR
;

231 
possibÀ
--;

236 i‡(
euc_dëe˘
 !
DETECT_ERROR
) {

237 
euc_°©e
) {

238 
WC_EUC_NOSTATE
:

239 
WC_ISO_MAP
[*
p
]) {

240 
WC_ISO_MAP_GR
:

241 
euc_°©e
 = 
WC_EUC_MBYTE1
;

243 
WC_ISO_MAP_SS2
:

244 i‡(
euc
 =
WC_CES_EUC_JP
)

245 
euc_°©e
 = 
WC_EUC_MBYTE1
;

246 i‡(
euc
 =
WC_CES_EUC_TW
)

247 
euc_°©e
 = 
WC_EUC_TW_SS2
;

249 
euc_dëe˘
 = 
DETECT_ERROR
;

251 
WC_ISO_MAP_SS3
:

252 i‡(
euc
 =
WC_CES_EUC_JP
 &&

253 
WC_ISO_MAP
[*(
p
+1)] =
WC_ISO_MAP_GR
)

256 
euc_dëe˘
 = 
DETECT_ERROR
;

258 
WC_ISO_MAP_C1
:

259 
WC_ISO_MAP_GR96
:

260 
euc_dëe˘
 = 
DETECT_ERROR
;

264 
WC_EUC_MBYTE1
:

265 i‡(
WC_ISO_MAP
[*
p
] =
WC_ISO_MAP_GR
) {

266 
	`SET_DETECT
(
euc_dëe˘
, 
DETECT_OK
);

267 
ok
 = 
WC_TRUE
;

269 
	`SET_BROKEN_ERROR
(
euc_dëe˘
);

270 
euc_°©e
 = 
WC_EUC_NOSTATE
;

272 
WC_EUC_TW_SS2
:

273 i‡(!–0xa0 <*
p
 && *p <= 0xb0) ||

274 
WC_ISO_MAP
[*(
p
+1)] !
WC_ISO_MAP_GR
)

275 
euc_dëe˘
 = 
DETECT_ERROR
;

276 
euc_°©e
 = 
WC_EUC_NOSTATE
;

279 i‡(
euc_dëe˘
 =
DETECT_ERROR
)

280 
possibÀ
--;

282 i‡(
sjis_dëe˘
 !
DETECT_ERROR
) {

283 
sjis_°©e
) {

284 
WC_SJIS_NOSTATE
:

285 
WC_SJIS_MAP
[*
p
]) {

286 
WC_SJIS_MAP_SL
:

287 
WC_SJIS_MAP_SH
:

288 
sjis_°©e
 = 
WC_SJIS_SHIFT_L
;

290 
WC_SJIS_MAP_SK
:

291 
	`SET_DETECT
(
sjis_dëe˘
, 
DETECT_POSSIBLE
);

293 
WC_SJIS_MAP_SX
:

294 i‡(
WcO±i⁄
.
u£_jisx0213
) {

295 
sjis_°©e
 = 
WC_SJIS_SHIFT_X
;

298 
WC_SJIS_MAP_80
:

299 
WC_SJIS_MAP_A0
:

300 
WC_SJIS_MAP_C1
:

301 
sjis_dëe˘
 = 
DETECT_ERROR
;

305 
WC_SJIS_SHIFT_L
:

306 i‡(
WC_SJIS_MAP
[*
p
] & 
WC_SJIS_MAP_LB
) {

307 
	`SET_DETECT
(
sjis_dëe˘
, 
DETECT_OK
);

308 
ok
 = 
WC_TRUE
;

310 
	`SET_BROKEN_ERROR
(
sjis_dëe˘
);

311 
sjis_°©e
 = 
WC_SJIS_NOSTATE
;

313 
WC_SJIS_SHIFT_X
:

314 i‡(
WC_SJIS_MAP
[*
p
] & 
WC_SJIS_MAP_LB
)

315 
	`SET_DETECT
(
sjis_dëe˘
, 
DETECT_POSSIBLE
);

317 
sjis_dëe˘
 = 
DETECT_ERROR
;

318 
sjis_°©e
 = 
WC_SJIS_NOSTATE
;

321 i‡(
sjis_dëe˘
 =
DETECT_ERROR
)

322 
possibÀ
--;

324 i‡(
big5_dëe˘
 !
DETECT_ERROR
) {

325 
big5_°©e
) {

326 
WC_BIG5_NOSTATE
:

327 
WC_BIG5_MAP
[*
p
]) {

328 
WC_BIG5_MAP_UB
:

329 
big5_°©e
 = 
WC_BIG5_MBYTE1
;

331 
WC_BIG5_MAP_C1
:

332 
big5_dëe˘
 = 
DETECT_ERROR
;

336 
WC_BIG5_MBYTE1
:

337 i‡(
WC_BIG5_MAP
[*
p
] & 
WC_BIG5_MAP_LB
) {

338 
	`SET_DETECT
(
big5_dëe˘
, 
DETECT_OK
);

339 
ok
 = 
WC_TRUE
;

341 
	`SET_BROKEN_ERROR
(
big5_dëe˘
);

342 
big5_°©e
 = 
WC_BIG5_NOSTATE
;

345 i‡(
big5_dëe˘
 =
DETECT_ERROR
)

346 
possibÀ
--;

348 i‡(
hz_dëe˘
 !
DETECT_ERROR
) {

349 i‡(*
p
 & 0x80) {

350 
hz_dëe˘
 = 
DETECT_ERROR
;

351 
possibÀ
--;

353 
hz_°©e
) {

354 
WC_HZ_NOSTATE
:

355 i‡(*
p
 =
WC_C_HZ_TILDA
)

356 
hz_°©e
 = 
WC_HZ_TILDA
;

358 
WC_HZ_TILDA
:

359 i‡(*
p
 =
WC_C_HZ_SI
)

360 
hz_°©e
 = 
WC_HZ_MBYTE
;

362 
hz_°©e
 = 
WC_HZ_NOSTATE
;

364 
WC_HZ_TILDA_MB
:

365 i‡(*
p
 =
WC_C_HZ_SO
)

366 
hz_°©e
 = 
WC_HZ_NOSTATE
;

368 
hz_°©e
 = 
WC_HZ_MBYTE
;

370 
WC_HZ_MBYTE
:

371 i‡(*
p
 =
WC_C_HZ_TILDA
)

372 
hz_°©e
 = 
WC_HZ_TILDA_MB
;

374 
hz_°©e
 = 
WC_HZ_MBYTE1
;

376 
WC_HZ_MBYTE1
:

377 
hz_dëe˘
 = 
DETECT_OK
;

378 
ok
 = 
WC_TRUE
;

379 
hz_°©e
 = 
WC_HZ_NOSTATE
;

384 i‡(
œtö_dëe˘
 !
DETECT_ERROR
) {

385 
WC_ISO_MAP
[*
p
] & 
WC_ISO_MAP_CG
) {

386 
WC_ISO_MAP_GR
:

387 
WC_ISO_MAP_GR96
:

388 
	`SET_DETECT
(
œtö_dëe˘
, 
DETECT_OK
);

389 
ok
 = 
WC_TRUE
;

391 
WC_ISO_MAP_C1
:

392 
œtö_dëe˘
 = 
DETECT_ERROR
;

395 i‡(
œtö_dëe˘
 =
DETECT_ERROR
)

396 
possibÀ
--;

398 i‡(
¥iv_dëe˘
 !
DETECT_ERROR
) {

399 i‡(*
p
 !
WC_C_ESC
 && 
WC_DETECT_MAP
[*p]) {

400 
	`SET_DETECT
(
¥iv_dëe˘
, 
DETECT_OK
);

401 
ok
 = 
WC_TRUE
;

408 #ifde‡
USE_UNICODE


409 i‡(
utf8_dëe˘
 !
DETECT_ERROR
) {

410 
utf8_°©e
) {

411 
WC_UTF8_NOSTATE
:

412 
utf8_√xt
 = 
WC_UTF8_MAP
[*
p
]) {

418 
utf8_dëe˘
 = 
DETECT_ERROR
;

421 
utf8_√xt
--;

422 
utf8_°©e
 = 
WC_UTF8_NEXT
;

426 
WC_UTF8_NEXT
:

427 i‡(
WC_UTF8_MAP
[*
p
]) {

428 
utf8_dëe˘
 = 
DETECT_ERROR
;

429 
utf8_°©e
 = 
WC_UTF8_NOSTATE
;

432 
utf8_√xt
--;

433 i‡(! 
utf8_√xt
) {

434 
	`SET_DETECT
(
utf8_dëe˘
, 
DETECT_OK
);

435 
ok
 = 
WC_TRUE
;

436 
utf8_°©e
 = 
WC_UTF8_NOSTATE
;

440 i‡(
utf8_dëe˘
 =
DETECT_ERROR
)

441 
possibÀ
--;

446 i‡(
iso_dëe˘
 !
DETECT_ERROR
) {

447 i‡(
iso_dëe˘
 =
DETECT_NORMAL
) {

448 i‡(
hz_dëe˘
 =
DETECT_OK
)

449  
WC_CES_HZ_GB_2312
;

450 i‡(
¥iv_dëe˘
 =
DETECT_OK
)

451  
¥iv
;

452  
WC_CES_US_ASCII
;

454 
euc
) {

455 
WC_CES_EUC_CN
:

456 
WC_CES_EUC_TW
:

457 i‡(
iso2022˙
)

458  
WC_CES_ISO_2022_CN
;

460 
WC_CES_EUC_KR
:

461 i‡(
iso2022kr
)

462  
WC_CES_ISO_2022_KR
;

465 i‡(
iso2022jp3
)

466  
WC_CES_ISO_2022_JP_3
;

467 i‡(
iso2022jp2
)

468  
WC_CES_ISO_2022_JP_2
;

469 i‡(
iso2022˙
)

470  
WC_CES_ISO_2022_CN
;

471 i‡(
iso2022kr
)

472  
WC_CES_ISO_2022_KR
;

473  
WC_CES_ISO_2022_JP
;

475 
höt
) {

476 
WC_CES_ISO_2022_JP
:

477 
WC_CES_ISO_2022_JP_2
:

478 
WC_CES_ISO_2022_JP_3
:

479 
WC_CES_ISO_2022_KR
:

480 
WC_CES_ISO_2022_CN
:

482 
WC_CES_EUC_JP
:

483 
WC_CES_EUC_CN
:

484 
WC_CES_EUC_TW
:

485 
WC_CES_EUC_KR
:

486 i‡(
euc_dëe˘
 !
DETECT_ERROR
)

487  
höt
;

489 
WC_CES_SHIFT_JIS
:

490 
WC_CES_SHIFT_JISX0213
:

491 i‡(
sjis_dëe˘
 !
DETECT_ERROR
)

492  
höt
;

494 
WC_CES_BIG5
:

495 i‡(
big5_dëe˘
 !
DETECT_ERROR
)

496  
höt
;

498 #ifde‡
USE_UNICODE


499 
WC_CES_UTF_8
:

500  
höt
;

502 
WC_CES_US_ASCII
:

503 #ifde‡
USE_UNICODE


504 i‡(
utf8_dëe˘
 !
DETECT_ERROR
)

505  
höt
;

507 i‡(
œtö_dëe˘
 !
DETECT_ERROR
)

508  
WC_CES_ISO_8859_1
;

509  
höt
;

511 i‡(
œtö_dëe˘
 !
DETECT_ERROR
)

512  
höt
;

513 i‡(
¥iv_dëe˘
 !
DETECT_ERROR
)

514  
höt
;

515 #ifde‡
USE_UNICODE


516 i‡(
utf8_dëe˘
 !
DETECT_ERROR
)

517  
WC_CES_UTF_8
;

519  
höt
;

521 i‡(
euc_dëe˘
 =
DETECT_OK
)

522  
euc
;

523 i‡(
sjis_dëe˘
 =
DETECT_OK
)

524  
WC_CES_SHIFT_JIS
;

525 i‡(
big5_dëe˘
 =
DETECT_OK
)

526  
WC_CES_BIG5
;

527 #ifde‡
USE_UNICODE


528 i‡(
utf8_dëe˘
 =
DETECT_OK
)

529  
WC_CES_UTF_8
;

530 i‡(
sjis_dëe˘
 & 
DETECT_POSSIBLE
)

531  
WC_CES_SHIFT_JIS
;

533 i‡(
euc_dëe˘
 !
DETECT_ERROR
)

534  
euc
;

535 i‡(
sjis_dëe˘
 !
DETECT_ERROR
)

536  
WC_CES_SHIFT_JIS
;

537 i‡(
big5_dëe˘
 !
DETECT_ERROR
)

538  
WC_CES_BIG5
;

539 #ifde‡
USE_UNICODE


540 i‡(
utf8_dëe˘
 !
DETECT_ERROR
)

541  
WC_CES_UTF_8
;

543  
höt
;

544 
	}
}

	@libwc/gb18030.c

2 
	~"wc.h
"

3 
	~"gb18030.h
"

4 
	~"£¨ch.h
"

5 
	~"wtf.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

9 
	~"m≠/gb18030_ucs.m≠
"

11 
	#C0
 
WC_GB18030_MAP_C0


	)

12 
	#GL
 
WC_GB18030_MAP_GL


	)

13 
	#C1
 
WC_GB18030_MAP_C1


	)

14 
	#LB
 
WC_GB18030_MAP_LB


	)

15 
	#UB
 
WC_GB18030_MAP_UB


	)

16 
	#L4
 
WC_GB18030_MAP_L4


	)

18 
wc_uöt8
 
	gWC_GB18030_MAP
[ 0x100 ] = {

19 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

20 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

21 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

22 
L4
, L4, L4, L4, L4, L4, L4, L4, L4, L4, 
GL
, GL, GL, GL, GL, GL,

23 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

24 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

25 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

26 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
C0
,

28 
LB
, 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

29 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

30 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

31 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

32 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

33 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

34 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

35 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, 
C1
,

38 
wc_wch¨_t


39 
	$wc_gbk_ext_to_cs128w
(
wc_wch¨_t
 
cc
)

41 
cc
.
code
 = 
	`WC_GBK_N
(cc.code);

42 i‡(
cc
.
code
 < 0x4000)

43 
cc
.
ccs
 = 
WC_CCS_GBK_EXT_1
;

45 
cc
.
ccs
 = 
WC_CCS_GBK_EXT_2
;

46 
cc
.
code
 -= 0x4000;

48 
cc
.
code
 = 
	`WC_N_CS128W
(cc.code);

49  
cc
;

50 
	}
}

52 
wc_wch¨_t


53 
	$wc_cs128w_to_gbk_ext
(
wc_wch¨_t
 
cc
)

55 
cc
.
code
 = 
	`WC_CS128W_N
(cc.code);

56 i‡(
cc
.
ccs
 =
WC_CCS_GBK_EXT_2
)

57 
cc
.
code
 += 0x4000;

58 
cc
.
ccs
 = 
WC_CCS_GBK_EXT
;

59 
cc
.
code
 = 
	`WC_N_GBK
(cc.code);

60  
cc
;

61 
	}
}

63 
wc_ccs


64 
	$wc_gbk_‹_gbk_ext
(
wc_uöt16
 
code
) {

65  
	`wc_m≠3_ønge_£¨ch
(
code
,

66 
gbk_ext_ucs_m≠
, 
N_gbk_ext_ucs_m≠
)

67 ? 
WC_CCS_GBK_EXT
 : 
WC_CCS_GBK
;

68 
	}
}

70 #ifde‡
USE_UNICODE


71 
wc_uöt32


72 
	$wc_gb18030_to_ucs
(
wc_wch¨_t
 
cc
)

74 
wc_m≠3
 *
m≠
;

76 
	`WC_CCS_SET
(
cc
.
ccs
)) {

77 
WC_CCS_GBK_EXT_1
:

78 
WC_CCS_GBK_EXT_2
:

79 
cc
 = 
	`wc_cs128w_to_gbk_ext
(cc);

80 
WC_CCS_GBK_EXT
:

81 
m≠
 = 
	`wc_m≠3_ønge_£¨ch
((
wc_uöt16
)
cc
.
code
,

82 
gbk_ext_ucs_m≠
, 
N_gbk_ext_ucs_m≠
);

83 i‡(
m≠
)

84  
m≠
->
code3
 + 
	`WC_GBK_N
(
cc
.
code
Ë- WC_GBK_N(m≠->
code2
);

85  
WC_C_UCS4_ERROR
;

86 
WC_CCS_GB18030
:

89  
	`wc_™y_to_ucs
(
cc
);

91 i‡(
cc
.
code
 >
WC_C_GB18030_UCS2
 && cc.codê<
WC_C_GB18030_UCS2_END
) {

92 
i
, 
mö
 = 0, 
max
 = 
N_ucs_gb18030_m≠
 - 1;

94 
cc
.
code
 = 
	`WC_GB18030_N
(cc.codeË- WC_GB18030_N(
WC_C_GB18030_UCS2
);

95 i‡(
cc
.
code
 >
ucs_gb18030_m≠
[
max
].
code3
)

96 
i
 = 
max
;

99 
i
 = (
mö
 + 
max
) / 2;

100 i‡(
mö
 =
max
)

102 i‡(
cc
.
code
 < 
ucs_gb18030_m≠
[
i
].
code3
)

103 
max
 = 
i
 - 1;

104 i‡(
cc
.
code
 >
ucs_gb18030_m≠
[
i
+1].
code3
)

105 
mö
 = 
i
 + 1;

110  
ucs_gb18030_m≠
[
i
].
code
 + 
cc
.codê- ucs_gb18030_m≠[i].
code3
;

112 i‡(
cc
.
code
 >
WC_C_GB18030_UCS4
 && cc.codê<
WC_C_GB18030_UCS4_END
)

113  
	`WC_GB18030_N
(
cc
.
code
Ë- WC_GB18030_N(
WC_C_GB18030_UCS4
)

115  
WC_C_UCS4_ERROR
;

116 
	}
}

118 
wc_wch¨_t


119 
	$wc_ucs_to_gb18030
(
wc_uöt32
 
ucs
)

121 
wc_wch¨_t
 
cc
;

122 
wc_m≠3
 *
m≠
;

124 i‡(
ucs
 <
WC_C_UCS2_END
) {

125 
m≠
 = 
	`wc_m≠3_ønge_£¨ch
((
wc_uöt16
)
ucs
,

126 
ucs_gbk_ext_m≠
, 
N_ucs_gbk_ext_m≠
);

127 i‡(
m≠
) {

128 
cc
.
code
 = 
	`WC_GBK_N
(
m≠
->
code3
Ë+ 
ucs
 - map->code;

129 
cc
.
code
 = 
	`WC_N_GBK
(cc.code);

130 
cc
.
ccs
 = 
WC_CCS_GBK_EXT
;

131  
cc
;

133 
m≠
 = 
	`wc_m≠3_ønge_£¨ch
((
wc_uöt16
)
ucs
,

134 
ucs_gb18030_m≠
, 
N_ucs_gb18030_m≠
);

135 i‡(
m≠
) {

136 
cc
.
code
 = 
m≠
->
code3
 + 
ucs
 - m≠->codê+ 
	`WC_GB18030_N
(
WC_C_GB18030_UCS2
);

137 
cc
.
code
 = 
	`WC_N_GB18030
(cc.code);

138 i‡(
WcO±i⁄
.
gb18030_as_ucs
)

139 
cc
.
ccs
 = 
WC_CCS_GB18030
 | (
	`wc_ucs_to_ccs
(
ucs
Ë& ~
WC_CCS_A_SET
);

141 
cc
.
ccs
 = 
WC_CCS_GB18030_W
;

142  
cc
;

144 } i‡(
ucs
 <
WC_C_UNICODE_END
) {

145 
cc
.
code
 = 
ucs
 - 0x10000 + 
	`WC_GB18030_N
(
WC_C_GB18030_UCS4
);

146 
cc
.
code
 = 
	`WC_N_GB18030
(cc.code);

147 i‡(
WcO±i⁄
.
gb18030_as_ucs
)

148 
cc
.
ccs
 = 
WC_CCS_GB18030
 | (
	`wc_ucs_to_ccs
(
ucs
Ë& ~
WC_CCS_A_SET
);

150 
cc
.
ccs
 = 
WC_CCS_GB18030_W
;

151  
cc
;

153 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

154  
cc
;

155 
	}
}

158 
Så


159 
	$wc_c⁄v_‰om_gb18030
(
Så
 
is
, 
wc_˚s
 
˚s
)

161 
Så
 
os
;

162 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

163 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

164 
wc_uch¨
 *
p
;

165 
°©e
 = 
WC_GB18030_NOSTATE
;

166 
wc_uöt32
 
gbk
;

167 
wc_wch¨_t
 
cc
;

168 #ifde‡
USE_UNICODE


169 
wc_uöt32
 
ucs
;

172 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

174 i‡(
p
 =
ï
)

175  
is
;

176 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

177 i‡(
p
 > 
•
)

178 
	`Såˇt_ch¨p_n
(
os
, (*)
is
->
±r
, ()(
p
 - 
•
));

180 ; 
p
 < 
ï
;Ö++) {

181 
°©e
) {

182 
WC_GB18030_NOSTATE
:

183 
WC_GB18030_MAP
[*
p
]) {

184 
UB
:

185 
°©e
 = 
WC_GB18030_MBYTE1
;

187 
C1
:

188 
	`wtf_push_unknown
(
os
, 
p
, 1);

191 
	`Såˇt_ch¨
(
os
, ()*
p
);

195 
WC_GB18030_MBYTE1
:

196 i‡(
WC_GB18030_MAP
[*
p
] & 
LB
) {

197 
gbk
 = ((
wc_uöt32
)*(
p
-1) << 8) | *p;

198 i‡(
	`wc_gbk_‹_gbk_ext
(
gbk
Ë=
WC_CCS_GBK_EXT
)

199 
	`wtf_push
(
os
, 
WC_CCS_GBK_EXT
, 
gbk
);

200 i‡(*(
p
-1) >= 0xA1 && *p >= 0xA1)

201 
	`wtf_push
(
os
, 
	`wc_gb2312_‹_gbk
(
gbk
), gbk);

203 
	`wtf_push
(
os
, 
WC_CCS_GBK
, 
gbk
);

204 } i‡(
WC_GB18030_MAP
[*
p
] =
L4
) {

205 
°©e
 = 
WC_GB18030_MBYTE2
;

208 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

209 
°©e
 = 
WC_GB18030_NOSTATE
;

211 
WC_GB18030_MBYTE2
:

212 i‡(
WC_GB18030_MAP
[*
p
] =
UB
) {

213 
°©e
 = 
WC_GB18030_MBYTE3
;

216 
	`wtf_push_unknown
(
os
, 
p
-2, 3);

217 
°©e
 = 
WC_GB18030_NOSTATE
;

219 
WC_GB18030_MBYTE3
:

220 i‡(
WC_GB18030_MAP
[*
p
] =
L4
) {

221 
cc
.
ccs
 = 
WC_CCS_GB18030_W
;

222 
cc
.
code
 = ((
wc_uöt32
)*(
p
-3) << 24)

223 | ((
wc_uöt32
)*(
p
-2) << 16)

224 | ((
wc_uöt32
)*(
p
-1) << 8)

225 | *
p
;

226 #ifde‡
USE_UNICODE


227 i‡(
WcO±i⁄
.
gb18030_as_ucs
 &&

228 (
ucs
 = 
	`wc_gb18030_to_ucs
(
cc
)Ë!
WC_C_UCS4_ERROR
)

229 
	`wtf_push
(
os
, 
WC_CCS_GB18030
 | (
	`wc_ucs_to_ccs
(
ucs
Ë& ~
WC_CCS_A_SET
), 
cc
.
code
);

232 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

234 
	`wtf_push_unknown
(
os
, 
p
-3, 4);

235 
°©e
 = 
WC_GB18030_NOSTATE
;

239 
°©e
) {

240 
WC_GB18030_MBYTE1
:

241 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

243 
WC_GB18030_MBYTE2
:

244 
	`wtf_push_unknown
(
os
, 
p
-2, 2);

246 
WC_GB18030_MBYTE3
:

247 
	`wtf_push_unknown
(
os
, 
p
-3, 3);

250  
os
;

251 
	}
}

254 
	$wc_push_to_gb18030
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

257 
	`WC_CCS_SET
(
cc
.
ccs
)) {

258 
WC_CCS_US_ASCII
:

259 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

261 
WC_CCS_GB_2312
:

262 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

263 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

265 
WC_CCS_GBK_1
:

266 
WC_CCS_GBK_2
:

267 
cc
 = 
	`wc_cs128w_to_gbk
(cc);

268 
WC_CCS_GBK
:

269 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

270 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

272 
WC_CCS_GBK_EXT_1
:

273 
WC_CCS_GBK_EXT_2
:

274 
cc
 = 
	`wc_cs128w_to_gbk
(cc);

275 
WC_CCS_GBK_EXT
:

276 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

277 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

279 
WC_CCS_GB18030
:

280 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 24) & 0xff));

281 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 16) & 0xff));

282 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) & 0xff));

283 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

285 
WC_CCS_UNKNOWN_W
:

286 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

287 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

289 
WC_CCS_UNKNOWN
:

290 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

291 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

294 #ifde‡
USE_UNICODE


295 i‡(
WcO±i⁄
.
ucs_c⁄v
)

296 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

299 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

303 
	}
}

305 
Så


306 
	$wc_ch¨_c⁄v_‰om_gb18030
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

308 
Så
 
os
;

309 
wc_uch¨
 
gb
[4];

310 
wc_uöt32
 
gbk
;

311 
wc_wch¨_t
 
cc
;

312 #ifde‡
USE_UNICODE


313 
wc_uöt32
 
ucs
;

316 i‡(
°
->
°©e
 == -1) {

317 
°
->
°©e
 = 
WC_GB18030_NOSTATE
;

318 
os
 = 
	`Så√w_size
(8);

321 
°
->
°©e
) {

322 
WC_GB18030_NOSTATE
:

323 
WC_GB18030_MAP
[
c
]) {

324 
UB
:

325 
gb
[0] = 
c
;

326 
°
->
°©e
 = 
WC_GB18030_MBYTE1
;

327  
NULL
;

328 
C1
:

331 
	`Såˇt_ch¨
(
os
, ()
c
);

335 
WC_GB18030_MBYTE1
:

336 i‡(
WC_GB18030_MAP
[
c
] & 
LB
) {

337 
gbk
 = ((
wc_uöt32
)
gb
[0] << 8Ë| 
c
;

338 i‡(
	`wc_gbk_‹_gbk_ext
(
gbk
Ë=
WC_CCS_GBK_EXT
)

339 
	`wtf_push
(
os
, 
WC_CCS_GBK_EXT
, 
gbk
);

340 i‡(
gb
[0] >0xA1 && 
c
 >= 0xA1)

341 
	`wtf_push
(
os
, 
	`wc_gb2312_‹_gbk
(
gbk
), gbk);

343 
	`wtf_push
(
os
, 
WC_CCS_GBK
, 
gbk
);

344 } i‡(
WC_GB18030_MAP
[
c
] =
L4
) {

345 
gb
[1] = 
c
;

346 
°
->
°©e
 = 
WC_GB18030_MBYTE2
;

347  
NULL
;

350 
WC_GB18030_MBYTE2
:

351 i‡(
WC_GB18030_MAP
[
c
] =
UB
) {

352 
gb
[2] = 
c
;

353 
°
->
°©e
 = 
WC_GB18030_MBYTE3
;

354  
NULL
;

357 
WC_GB18030_MBYTE3
:

358 i‡(
WC_GB18030_MAP
[
c
] =
L4
) {

359 
cc
.
ccs
 = 
WC_CCS_GB18030_W
;

360 
cc
.
code
 = ((
wc_uöt32
)
gb
[0] << 24)

361 | ((
wc_uöt32
)
gb
[1] << 16)

362 | ((
wc_uöt32
)
gb
[2] << 8)

363 | 
c
;

364 #ifde‡
USE_UNICODE


365 i‡(
WcO±i⁄
.
gb18030_as_ucs
 &&

366 (
ucs
 = 
	`wc_gb18030_to_ucs
(
cc
)Ë!
WC_C_UCS4_ERROR
)

367 
	`wtf_push
(
os
, 
WC_CCS_GB18030
 | (
	`wc_ucs_to_ccs
(
ucs
Ë& ~
WC_CCS_A_SET
), 
cc
.
code
);

370 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

374 
°
->
°©e
 = -1;

375  
os
;

376 
	}
}

	@libwc/gb18030.h

2 #i‚de‡
_WC_GB18030_H


3 
	#_WC_GB18030_H


	)

5 
	~"gbk.h
"

7 
	#WC_C_GB18030_UCS2
 0x81308130U

	)

8 
	#WC_C_GB18030_UCS2_END
 0x8431A439U

	)

9 
	#WC_C_GB18030_UCS4
 0x90308130U

	)

10 
	#WC_C_GB18030_UCS4_END
 0xE3329A35U

	)

12 
	#WC_GB18030_NOSTATE
 0

	)

13 
	#WC_GB18030_MBYTE1
 1

	)

14 
	#WC_GB18030_MBYTE2
 2

	)

15 
	#WC_GB18030_MBYTE3
 3

	)

17 
	#WC_GB18030_MAP_C0
 0x0

	)

18 
	#WC_GB18030_MAP_GL
 0x1

	)

19 
	#WC_GB18030_MAP_C1
 0x2

	)

20 
	#WC_GB18030_MAP_LB
 0x4

	)

21 
	#WC_GB18030_MAP_UB
 (0x8 | 
WC_GB18030_MAP_LB
)

	)

22 
	#WC_GB18030_MAP_L4
 0x10

	)

24 
	#WC_GB18030_N
(
c
) \

25 (((((((
c
) >> 24) & 0xff) - 0x81) * 0x0A \

26 + (((
c
) >> 16) & 0xff) - 0x30) * 0x7E \

27 + (((
c
) >> 8) & 0xff) - 0x81) * 0x0A \

28 + ( (
c
Ë& 0xffË- 0x30)

	)

29 
	#WC_N_GB18030
(
c
) \

30 ((((
c
) / 0x0A / 0x7E / 0xA + 0x81) << 24) \

31 + (((
c
) / 0x0A / 0x7E % 0xA + 0x30) << 16) \

32 + (((
c
) / 0x0A % 0x7E + 0x81) << 8) \

33 + (
c
Ë% 0xA + 0x30 )

	)

35 
wc_uch¨
 
WC_GB18030_MAP
[];

37 
wc_wch¨_t
 
wc_gbk_ext_to_cs128w
(wc_wch¨_à
cc
);

38 
wc_wch¨_t
 
wc_cs128w_to_gbk_ext
(wc_wch¨_à
cc
);

39 #ifde‡
USE_UNICODE


40 
wc_uöt32
 
wc_gb18030_to_ucs
(
wc_wch¨_t
 
cc
);

41 
wc_wch¨_t
 
wc_ucs_to_gb18030
(
wc_uöt32
 
ucs
);

43 
Så
 
wc_c⁄v_‰om_gb18030
(Så 
is
, 
wc_˚s
 
˚s
);

44 
wc_push_to_gb18030
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

45 
Så
 
wc_ch¨_c⁄v_‰om_gb18030
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/gbk.c

2 
	~"wc.h
"

3 
	~"gbk.h
"

4 
	~"£¨ch.h
"

5 
	~"wtf.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

10 
	~"m≠/gb2312_gbk.m≠
"

12 
	#C0
 
WC_GBK_MAP_C0


	)

13 
	#GL
 
WC_GBK_MAP_GL


	)

14 
	#C1
 
WC_GBK_MAP_C1


	)

15 
	#LB
 
WC_GBK_MAP_LB


	)

16 
	#UB
 
WC_GBK_MAP_UB


	)

17 
	#C80
 
WC_GBK_MAP_80


	)

19 
wc_uöt8
 
	gWC_GBK_MAP
[ 0x100 ] = {

20 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

21 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

22 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

23 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

24 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

25 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

26 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

27 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
C0
,

29 
C80
,
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

30 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

31 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

32 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

33 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

34 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

35 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

36 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, 
C1
,

39 
wc_ccs


40 
	$wc_gb2312_‹_gbk
(
wc_uöt16
 
code
) {

41  
	`wc_m≠_ønge_£¨ch
(
code
,

42 
gb2312_gbk_m≠
, 
N_gb2312_gbk_m≠
)

43 ? 
WC_CCS_GBK
 : 
WC_CCS_GB_2312
;

44 
	}
}

46 
wc_wch¨_t


47 
	$wc_gbk_to_cs128w
(
wc_wch¨_t
 
cc
)

49 
cc
.
code
 = 
	`WC_GBK_N
(cc.code);

50 i‡(
cc
.
code
 < 0x4000)

51 
cc
.
ccs
 = 
WC_CCS_GBK_1
;

53 
cc
.
ccs
 = 
WC_CCS_GBK_2
;

54 
cc
.
code
 -= 0x4000;

56 
cc
.
code
 = 
	`WC_N_CS128W
(cc.code);

57  
cc
;

58 
	}
}

60 
wc_wch¨_t


61 
	$wc_cs128w_to_gbk
(
wc_wch¨_t
 
cc
)

63 
cc
.
code
 = 
	`WC_CS128W_N
(cc.code);

64 i‡(
cc
.
ccs
 =
WC_CCS_GBK_2
)

65 
cc
.
code
 += 0x4000;

66 
cc
.
ccs
 = 
WC_CCS_GBK
;

67 
cc
.
code
 = 
	`WC_N_GBK
(cc.code);

68  
cc
;

69 
	}
}

71 
wc_uöt32


72 
	$wc_gbk_to_N
(
wc_uöt32
 
c
)

74 i‡(
c
 <= 0xA1A0)

75  
	`WC_GBK_N
(
c
);

76 i‡(
c
 <= 0xA2AA)

77  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E;

78 i‡(
c
 <= 0xA6A0)

79  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 0x0A;

80 i‡(
c
 <= 0xA6F5)

81  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 0x0A - 0x3F;

82 i‡(
c
 <= 0xA8A0)

83  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 0x0A + 0x16;

84 i‡(
c
 <= 0xA8C0)

85  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 0x0A + 0x16 - 0x1A;

87  
	`WC_GBK_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 0x0A + 0x16 + 0x06;

88 
	}
}

90 
Så


91 
	$wc_c⁄v_‰om_gbk
(
Så
 
is
, 
wc_˚s
 
˚s
)

93 
Så
 
os
;

94 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

95 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

96 
wc_uch¨
 *
p
;

97 
°©e
 = 
WC_GBK_NOSTATE
;

98 
wc_uöt32
 
gbk
;

100 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

102 i‡(
p
 =
ï
)

103  
is
;

104 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

105 i‡(
p
 > 
•
)

106 
	`Såˇt_ch¨p_n
(
os
, (*)
is
->
±r
, ()(
p
 - 
•
));

108 ; 
p
 < 
ï
;Ö++) {

109 
°©e
) {

110 
WC_GBK_NOSTATE
:

111 
WC_GBK_MAP
[*
p
]) {

112 
UB
:

113 
°©e
 = 
WC_GBK_MBYTE1
;

115 
C80
:

116 
	`wtf_push
(
os
, 
WC_CCS_GBK_80
, *
p
);

118 
C1
:

119 
	`wtf_push_unknown
(
os
, 
p
, 1);

122 
	`Såˇt_ch¨
(
os
, ()*
p
);

126 
WC_GBK_MBYTE1
:

127 i‡(
WC_GBK_MAP
[*
p
] & 
LB
) {

128 
gbk
 = ((
wc_uöt32
)*(
p
-1) << 8) | *p;

129 i‡(*(
p
-1) >= 0xA1 && *p >= 0xA1)

130 
	`wtf_push
(
os
, 
	`wc_gb2312_‹_gbk
(
gbk
), gbk);

132 
	`wtf_push
(
os
, 
WC_CCS_GBK
, 
gbk
);

134 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

135 
°©e
 = 
WC_GBK_NOSTATE
;

139 
°©e
) {

140 
WC_GBK_MBYTE1
:

141 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

144  
os
;

145 
	}
}

148 
	$wc_push_to_gbk
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

151 
cc
.
ccs
) {

152 
WC_CCS_US_ASCII
:

153 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

155 
WC_CCS_GB_2312
:

156 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

157 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

159 
WC_CCS_GBK_80
:

160 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

162 
WC_CCS_GBK_1
:

163 
WC_CCS_GBK_2
:

164 
cc
 = 
	`wc_cs128w_to_gbk
(cc);

165 
WC_CCS_GBK
:

166 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

167 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

169 
WC_CCS_UNKNOWN_W
:

170 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

171 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

173 
WC_CCS_UNKNOWN
:

174 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

175 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

178 #ifde‡
USE_UNICODE


179 i‡(
WcO±i⁄
.
ucs_c⁄v
)

180 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

183 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

187 
	}
}

189 
Så


190 
	$wc_ch¨_c⁄v_‰om_gbk
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

192 
Så
 
os
;

193 
wc_uch¨
 
gbku
;

194 
wc_uöt32
 
gbk
;

196 i‡(
°
->
°©e
 == -1) {

197 
°
->
°©e
 = 
WC_GBK_NOSTATE
;

198 
os
 = 
	`Så√w_size
(8);

201 
°
->
°©e
) {

202 
WC_GBK_NOSTATE
:

203 
WC_GBK_MAP
[
c
]) {

204 
UB
:

205 
gbku
 = 
c
;

206 
°
->
°©e
 = 
WC_GBK_MBYTE1
;

207  
NULL
;

208 
C80
:

209 
	`wtf_push
(
os
, 
WC_CCS_GBK_80
, 
c
);

211 
C1
:

214 
	`Såˇt_ch¨
(
os
, ()
c
);

218 
WC_GBK_MBYTE1
:

219 i‡(
WC_GBK_MAP
[
c
] & 
LB
) {

220 
gbk
 = ((
wc_uöt32
)
gbku
 << 8Ë| 
c
;

221 i‡(
gbku
 >0xA1 && 
c
 >= 0xA1)

222 
	`wtf_push
(
os
, 
	`wc_gb2312_‹_gbk
(
gbk
), gbk);

224 
	`wtf_push
(
os
, 
WC_CCS_GBK
, 
gbk
);

228 
°
->
°©e
 = -1;

229  
os
;

230 
	}
}

	@libwc/gbk.h

2 #i‚de‡
_WC_GBK_H


3 
	#_WC_GBK_H


	)

5 
	#WC_GBK_NOSTATE
 0

	)

6 
	#WC_GBK_MBYTE1
 1

	)

8 
	#WC_GBK_MAP_C0
 0x0

	)

9 
	#WC_GBK_MAP_GL
 0x1

	)

10 
	#WC_GBK_MAP_C1
 0x2

	)

11 
	#WC_GBK_MAP_LB
 0x4

	)

12 
	#WC_GBK_MAP_UB
 (0x8 | 
WC_GBK_MAP_LB
)

	)

13 
	#WC_GBK_MAP_80
 (0x10 | 
WC_GBK_MAP_LB
)

	)

15 
	#WC_GBKUL_N
(
U
,
L
Ë(((UË- 0x81Ë* 0xBE + (LË- (((LË< 0x80Ë? 0x40 : 0x41))

	)

16 
	#WC_GBK_N
(
c
Ë
	`WC_GBKUL_N
(((cË>> 8Ë& 0xFF, (cË& 0xFF)

	)

17 
	#WC_N_GBKU
(
c
Ë((cË/ 0xBE + 0x81)

	)

18 
	#WC_N_GBKL
(
c
Ë((cË% 0xBE + (((cË% 0xBE < 0x3FË? 0x40 : 0x41))

	)

19 
	#WC_N_GBK
(
c
Ë((
	`WC_N_GBKU
(cË<< 8Ë+ 
	`WC_N_GBKL
(c))

	)

20 #i‚de‡
WC_CS128W_N


21 
	#WC_CS128WUL_N
(
U
,
L
Ë((UË* 0x80 + (L))

	)

22 
	#WC_CS128W_N
(
c
Ë
	`WC_CS128WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

23 
	#WC_N_CS128WU
(
c
Ë((cË/ 0x80)

	)

24 
	#WC_N_CS128WL
(
c
Ë((cË% 0x80)

	)

25 
	#WC_N_CS128W
(
c
Ë((
	`WC_N_CS128WU
(cË<< 8Ë+ 
	`WC_N_CS128WL
(c))

	)

28 
wc_uch¨
 
WC_GBK_MAP
[];

30 
wc_ccs
 
wc_gb2312_‹_gbk
(
wc_uöt16
 
code
);

31 
wc_wch¨_t
 
wc_gbk_to_cs128w
(wc_wch¨_à
cc
);

32 
wc_wch¨_t
 
wc_cs128w_to_gbk
(wc_wch¨_à
cc
);

33 
wc_uöt32
 
wc_gbk_to_N
(wc_uöt32 
c
);

34 
Så
 
wc_c⁄v_‰om_gbk
(Så 
is
, 
wc_˚s
 
˚s
);

35 
wc_push_to_gbk
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

36 
Så
 
wc_ch¨_c⁄v_‰om_gbk
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/hkscs.c

2 
	~"wc.h
"

3 
	~"big5.h
"

4 
	~"hkscs.h
"

5 
	~"£¨ch.h
"

6 
	~"wtf.h
"

7 #ifde‡
USE_UNICODE


8 
	~"ucs.h
"

11 
	#C0
 
WC_HKSCS_MAP_C0


	)

12 
	#GL
 
WC_HKSCS_MAP_GL


	)

13 
	#C1
 
WC_HKSCS_MAP_C1


	)

14 
	#LB
 
WC_HKSCS_MAP_LB


	)

15 
	#UB
 
WC_HKSCS_MAP_UB


	)

16 
	#UH
 
WC_HKSCS_MAP_UH


	)

18 
wc_uöt8
 
	gWC_HKSCS_MAP
[ 0x100 ] = {

19 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

20 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

21 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

22 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

23 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

24 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

25 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

26 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
C0
,

28 
C1
, C1, C1, C1, C1, C1, C1, C1, 
UH
, UH, UH, UH, UH, UH, UH, UH,

29 
UH
, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH, UH,

30 
UH
, 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

31 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

32 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

33 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

34 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

35 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, 
C1
,

38 
wc_wch¨_t


39 
	$wc_hkscs_to_cs128w
(
wc_wch¨_t
 
cc
)

41 
cc
.
code
 = 
	`WC_HKSCS_N
(cc.code);

42 i‡(
cc
.
code
 < 0x4000)

43 
cc
.
ccs
 = 
WC_CCS_HKSCS_1
;

45 
cc
.
ccs
 = 
WC_CCS_HKSCS_2
;

46 
cc
.
code
 -= 0x4000;

48 
cc
.
code
 = 
	`WC_N_CS128W
(cc.code);

49  
cc
;

50 
	}
}

52 
wc_wch¨_t


53 
	$wc_cs128w_to_hkscs
(
wc_wch¨_t
 
cc
)

55 
cc
.
code
 = 
	`WC_CS128W_N
(cc.code);

56 i‡(
cc
.
ccs
 =
WC_CCS_HKSCS_2
)

57 
cc
.
code
 += 0x4000;

58 
cc
.
ccs
 = 
WC_CCS_HKSCS
;

59 
cc
.
code
 = 
	`WC_N_HKSCS
(cc.code);

60  
cc
;

61 
	}
}

63 
wc_uöt32


64 
	$wc_hkscs_to_N
(
wc_uöt32
 
c
)

66 i‡(
c
 < 0xA140)

67  
	`WC_HKSCS_N
(
c
);

69  
	`WC_HKSCS_N
(
c
) - 0x59 * 0x9D;

70 
	}
}

72 
Så


73 
	$wc_c⁄v_‰om_hkscs
(
Så
 
is
, 
wc_˚s
 
˚s
)

75 
Så
 
os
;

76 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

77 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

78 
wc_uch¨
 *
p
;

79 
°©e
 = 
WC_HKSCS_NOSTATE
;

80 
wc_uöt32
 
hkscs
;

82 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

84 i‡(
p
 =
ï
)

85  
is
;

86 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

87 i‡(
p
 > 
•
)

88 
	`Såˇt_ch¨p_n
(
os
, (*)
is
->
±r
, ()(
p
 - 
•
));

90 ; 
p
 < 
ï
;Ö++) {

91 
°©e
) {

92 
WC_HKSCS_NOSTATE
:

93 
WC_HKSCS_MAP
[*
p
]) {

94 
UB
:

95 
UH
:

96 
°©e
 = 
WC_HKSCS_MBYTE1
;

98 
C1
:

99 
	`wtf_push_unknown
(
os
, 
p
, 1);

102 
	`Såˇt_ch¨
(
os
, ()*
p
);

106 
WC_HKSCS_MBYTE1
:

107 i‡(
WC_HKSCS_MAP
[*
p
] & 
LB
) {

108 
hkscs
 = ((
wc_uöt32
)*(
p
-1) << 8) | *p;

109 i‡(*(
p
-1) >= 0xA1 && *(p-1) <= 0xF9)

110 
	`wtf_push
(
os
, 
WC_CCS_BIG5
, 
hkscs
);

112 
	`wtf_push
(
os
, 
WC_CCS_HKSCS
, 
hkscs
);

114 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

115 
°©e
 = 
WC_HKSCS_NOSTATE
;

119 
°©e
) {

120 
WC_HKSCS_MBYTE1
:

121 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

124  
os
;

125 
	}
}

128 
	$wc_push_to_hkscs
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

131 
cc
.
ccs
) {

132 
WC_CCS_US_ASCII
:

133 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

135 
WC_CCS_BIG5_1
:

136 
WC_CCS_BIG5_2
:

137 
cc
 = 
	`wc_cs94w_to_big5
(cc);

138 
WC_CCS_BIG5
:

139 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

140 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

142 
WC_CCS_HKSCS_1
:

143 
WC_CCS_HKSCS_2
:

144 
cc
 = 
	`wc_cs128w_to_hkscs
(cc);

145 
WC_CCS_HKSCS
:

146 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

147 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

149 
WC_CCS_UNKNOWN_W
:

150 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

151 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

153 
WC_CCS_UNKNOWN
:

154 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

155 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

158 #ifde‡
USE_UNICODE


159 i‡(
WcO±i⁄
.
ucs_c⁄v
)

160 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

163 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

167 
	}
}

169 
Så


170 
	$wc_ch¨_c⁄v_‰om_hkscs
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

172 
Så
 
os
;

173 
wc_uch¨
 
hkscsu
;

174 
wc_uöt32
 
hkscs
;

176 i‡(
°
->
°©e
 == -1) {

177 
°
->
°©e
 = 
WC_HKSCS_NOSTATE
;

178 
os
 = 
	`Så√w_size
(8);

181 
°
->
°©e
) {

182 
WC_HKSCS_NOSTATE
:

183 
WC_HKSCS_MAP
[
c
]) {

184 
UB
:

185 
UH
:

186 
hkscsu
 = 
c
;

187 
°
->
°©e
 = 
WC_HKSCS_MBYTE1
;

188  
NULL
;

189 
C1
:

192 
	`Såˇt_ch¨
(
os
, ()
c
);

196 
WC_HKSCS_MBYTE1
:

197 i‡(
WC_HKSCS_MAP
[
c
] & 
LB
) {

198 
hkscs
 = ((
wc_uöt32
)
hkscsu
 << 8Ë| 
c
;

199 i‡(
hkscsu
 >0xA1 && hkscsu <0xF9 && 
c
 >= 0xA1)

200 
	`wtf_push
(
os
, 
WC_CCS_BIG5
, 
hkscs
);

202 
	`wtf_push
(
os
, 
WC_CCS_HKSCS
, 
hkscs
);

206 
°
->
°©e
 = -1;

207  
os
;

208 
	}
}

	@libwc/hkscs.h

2 #i‚de‡
_WC_HKSCS_H


3 
	#_WC_HKSCS_H


	)

5 
	#WC_HKSCS_NOSTATE
 0

	)

6 
	#WC_HKSCS_MBYTE1
 1

	)

8 
	#WC_HKSCS_MAP_C0
 0x0

	)

9 
	#WC_HKSCS_MAP_GL
 0x1

	)

10 
	#WC_HKSCS_MAP_C1
 0x2

	)

11 
	#WC_HKSCS_MAP_LB
 0x4

	)

12 
	#WC_HKSCS_MAP_UB
 (0x8 | 
WC_HKSCS_MAP_LB
)

	)

13 
	#WC_HKSCS_MAP_UH
 0x10

	)

15 
	#WC_HKSCSUL_N
(
U
,
L
) (((U) - 0x88) * 0x9D \

16 + (
L
Ë- (((LË< 0xA1Ë? 0x40 : 0x62))

	)

17 
	#WC_HKSCS_N
(
c
Ë
	`WC_HKSCSUL_N
(((cË>> 8Ë& 0xFF, (cË& 0xFF)

	)

18 
	#WC_N_HKSCSU
(
c
Ë((cË/ 0x9D + 0x88)

	)

19 
	#WC_N_HKSCSL
(
c
Ë((cË% 0x9D + (((cË% 0x9D < 0x3FË? 0x40 : 0x62))

	)

20 
	#WC_N_HKSCS
(
c
Ë((
	`WC_N_HKSCSU
(cË<< 8Ë+ 
	`WC_N_HKSCSL
(c))

	)

21 #i‚de‡
WC_CS128W_N


22 
	#WC_CS128WUL_N
(
U
,
L
Ë((UË* 0x80 + (L))

	)

23 
	#WC_CS128W_N
(
c
Ë
	`WC_CS128WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

24 
	#WC_N_CS128WU
(
c
Ë((cË/ 0x80)

	)

25 
	#WC_N_CS128WL
(
c
Ë((cË% 0x80)

	)

26 
	#WC_N_CS128W
(
c
Ë((
	`WC_N_CS128WU
(cË<< 8Ë+ 
	`WC_N_CS128WL
(c))

	)

29 
wc_uch¨
 
WC_HKSCS_MAP
[];

31 
wc_wch¨_t
 
wc_hkscs_to_cs128w
(wc_wch¨_à
cc
);

32 
wc_wch¨_t
 
wc_cs128w_to_hkscs
(wc_wch¨_à
cc
);

33 
wc_uöt32
 
wc_hkscs_to_N
(wc_uöt32 
c
);

34 
Så
 
wc_c⁄v_‰om_hkscs
(Så 
is
, 
wc_˚s
 
˚s
);

35 
wc_push_to_hkscs
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

36 
Så
 
wc_ch¨_c⁄v_‰om_hkscs
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/hz.c

2 
	~"wc.h
"

3 
	~"iso2022.h
"

4 
	~"hz.h
"

5 
	~"wtf.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

10 
Så


11 
	$wc_c⁄v_‰om_hz
(
Så
 
is
, 
wc_˚s
 
˚s
)

13 
Så
 
os
;

14 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

15 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

16 
wc_uch¨
 *
p
;

17 
°©e
 = 
WC_HZ_NOSTATE
;

19 
p
 = 
•
;Ö < 
ï
 && *∞< 0x80 && *∞!
WC_C_HZ_TILDA
;Ö++)

21 i‡(
p
 =
ï
)

22  
is
;

23 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

24 i‡(
p
 > 
•
)

25 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

27 ; 
p
 < 
ï
;Ö++) {

28 
°©e
) {

29 
WC_HZ_NOSTATE
:

30 i‡(*
p
 =
WC_C_HZ_TILDA
)

31 
°©e
 = 
WC_HZ_TILDA
;

32 i‡(
WC_ISO_MAP
[*
p
] =
WC_ISO_MAP_GR
)

33 
°©e
 = 
WC_HZ_MBYTE1_GR
;

34 i‡(*
p
 & 0x80)

35 
	`wtf_push_unknown
(
os
, 
p
, 1);

37 
	`Såˇt_ch¨
(
os
, ()*
p
);

39 
WC_HZ_TILDA
:

40 i‡(*
p
 =
WC_C_HZ_SI
) {

41 
°©e
 = 
WC_HZ_MBYTE
;

43 } i‡(*
p
 =
WC_C_HZ_TILDA
)

44 
	`Såˇt_ch¨
(
os
, ()*
p
);

45 i‡(*
p
 == '\n')

48 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

49 
°©e
 = 
WC_HZ_NOSTATE
;

51 
WC_HZ_TILDA_MB
:

52 i‡(*
p
 =
WC_C_HZ_SO
 || *p == '\n') {

53 
°©e
 = 
WC_HZ_NOSTATE
;

56 i‡(
WC_ISO_MAP
[*
p
 & 0x7f] =
WC_ISO_MAP_GL
)

57 
	`wtf_push
(
os
, 
WC_CCS_GB_2312
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

59 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

60 
°©e
 = 
WC_HZ_MBYTE
;

62 
WC_HZ_MBYTE
:

63 i‡(*
p
 =
WC_C_HZ_TILDA
)

64 
°©e
 = 
WC_HZ_TILDA_MB
;

65 i‡(
WC_ISO_MAP
[*
p
 & 0x7f] =
WC_ISO_MAP_GL
)

66 
°©e
 = 
WC_HZ_MBYTE1
;

68 
	`wtf_push_unknown
(
os
, 
p
, 1);

70 
WC_HZ_MBYTE1
:

71 i‡(
WC_ISO_MAP
[*
p
 & 0x7f] =
WC_ISO_MAP_GL
)

72 
	`wtf_push
(
os
, 
WC_CCS_GB_2312
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

74 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

75 
°©e
 = 
WC_HZ_MBYTE
;

77 
WC_HZ_MBYTE1_GR
:

78 i‡(
WC_ISO_MAP
[*
p
] =
WC_ISO_MAP_GR
)

79 
	`wtf_push
(
os
, 
WC_CCS_GB_2312
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

81 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

82 
°©e
 = 
WC_HZ_NOSTATE
;

86 
°©e
) {

87 
WC_HZ_TILDA
:

88 
WC_HZ_TILDA_MB
:

89 
WC_HZ_MBYTE1
:

90 
WC_HZ_MBYTE1_GR
:

91 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

94  
os
;

95 
	}
}

98 
	$wc_push_to_hz
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

101 
cc
.
ccs
) {

102 
WC_CCS_US_ASCII
:

103 i‡(
°
->
gl
) {

104 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

105 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_SO
);

106 
°
->
gl
 = 0;

108 i‡(()
cc
.
code
 =
WC_C_HZ_TILDA
)

109 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

110 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

112 
WC_CCS_GB_2312
:

113 i‡(! 
°
->
gl
) {

114 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

115 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_SI
);

116 
°
->
gl
 = 1;

118 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) & 0x7f));

119 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0x7f));

121 
WC_CCS_UNKNOWN_W
:

122 i‡(
WcO±i⁄
.
no_ª∂a˚
)

124 i‡(
°
->
gl
) {

125 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

126 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_SO
);

127 
°
->
gl
 = 0;

129 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

131 
WC_CCS_UNKNOWN
:

132 i‡(
WcO±i⁄
.
no_ª∂a˚
)

134 i‡(
°
->
gl
) {

135 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

136 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_SO
);

137 
°
->
gl
 = 0;

139 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

142 #ifde‡
USE_UNICODE


143 i‡(
WcO±i⁄
.
ucs_c⁄v
)

144 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

147 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

151 
	}
}

154 
	$wc_push_to_hz_íd
(
Så
 
os
, 
wc_°©us
 *
°
)

156 i‡(
°
->
gl
) {

157 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_TILDA
);

158 
	`Såˇt_ch¨
(
os
, 
WC_C_HZ_SO
);

159 
°
->
gl
 = 0;

161 
	}
}

	@libwc/hz.h

2 #i‚de‡
_WC_HZ_H


3 
	#_WC_HZ_H


	)

5 
	#WC_C_HZ_TILDA
 '~'

	)

6 
	#WC_C_HZ_SI
 '{'

	)

7 
	#WC_C_HZ_SO
 '}'

	)

9 
	#WC_HZ_NOSTATE
 0

	)

10 
	#WC_HZ_TILDA
 1

	)

11 
	#WC_HZ_TILDA_MB
 2

	)

12 
	#WC_HZ_MBYTE
 3

	)

13 
	#WC_HZ_MBYTE1
 4

	)

14 
	#WC_HZ_MBYTE1_GR
 5

	)

16 
Så
 
wc_c⁄v_‰om_hz
(Så 
is
, 
wc_˚s
 
˚s
);

17 
wc_push_to_hz
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

18 
wc_push_to_hz_íd
(
Så
 
os
, 
wc_°©us
 *
°
);

	@libwc/iso2022.c

2 
	~"wc.h
"

3 
	~"iso2022.h
"

4 
	~"jis.h
"

5 
	~"big5.h
"

6 
	~"johab.h
"

7 
	~"wtf.h
"

8 #ifde‡
USE_UNICODE


9 
	~"ucs.h
"

12 
	#C0
 
WC_ISO_MAP_C0


	)

13 
	#C1
 
WC_ISO_MAP_C1


	)

14 
	#GL
 
WC_ISO_MAP_GL


	)

15 
	#GR
 
WC_ISO_MAP_GR


	)

16 
	#GL2
 
WC_ISO_MAP_GL96


	)

17 
	#GR2
 
WC_ISO_MAP_GR96


	)

18 
	#SO
 
WC_ISO_MAP_SO


	)

19 
	#SI
 
WC_ISO_MAP_SI


	)

20 
	#ESC
 
WC_ISO_MAP_ESC


	)

21 
	#SS2
 
WC_ISO_MAP_SS2


	)

22 
	#SS3
 
WC_ISO_MAP_SS3


	)

24 
wc_uöt8
 
	gWC_ISO_MAP
[ 0x100 ] = {

25 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, 
SO
, 
SI
,

26 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, 
ESC
,C0, C0, C0, C0,

27 
GL2
,
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

28 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

29 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

30 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

31 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

32 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, 
GL2
,

34 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, 
SS2
,
SS3
,

35 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

36 
GR2
,
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR,

37 
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR,

38 
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR,

39 
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR,

40 
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR,

41 
GR
, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, GR, 
GR2
,

44 
wc_uch¨
 
	gcs94_gm≠
[ 0x80 - 
WC_F_ISO_BASE
 ];

45 
wc_uch¨
 
	gcs94w_gm≠
[ 0x80 - 
WC_F_ISO_BASE
 ];

46 
wc_uch¨
 
	gcs96_gm≠
[ 0x80 - 
WC_F_ISO_BASE
 ];

47 
wc_uch¨
 
	gcs96w_gm≠
[ 0x80 - 
WC_F_ISO_BASE
 ];

48 
wc_uch¨
 
	gcs942_gm≠
[ 0x80 - 
WC_F_ISO_BASE
 ];

51 
	$wtf_push_iso2022
(
Så
 
os
, 
wc_ccs
 
ccs
, 
wc_uöt32
 
code
)

53 
ccs
) {

54 
WC_CCS_JIS_C_6226
:

55 
WC_CCS_JIS_X_0208
:

56 
WC_CCS_JIS_X_0213_1
:

57 
ccs
 = 
	`wc_jisx0208_‹_jisx02131
(
code
);

59 
WC_CCS_JIS_X_0212
:

60 
WC_CCS_JIS_X_0213_2
:

61 
ccs
 = 
	`wc_jisx0212_‹_jisx02132
(
code
);

63 
WC_CCS_JIS_X_0201
:

64 
WC_CCS_GB_1988
:

65 
ccs
 = 
WC_CCS_US_ASCII
;

68 
	`wtf_push
(
os
, 
ccs
, 
code
);

69 
	}
}

71 
Så


72 
	$wc_c⁄v_‰om_iso2022
(
Så
 
is
, 
wc_˚s
 
˚s
)

74 
Så
 
os
;

75 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

76 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

77 
wc_uch¨
 *
p
, *
q
 = 
NULL
;

78 
°©e
 = 
WC_ISO_NOSTATE
;

79 
wc_°©us
 
°
;

80 
wc_ccs
 
gl_ccs
, 
gr_ccs
;

82 
p
 = 
•
;Ö < 
ï
 && !(
WC_ISO_MAP
[*p] & 
WC_ISO_MAP_DETECT
);Ö++)

84 i‡(
p
 =
ï
)

85  
is
;

86 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

87 i‡(
p
 > 
•
)

88 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

90 
	`wc_öput_öô
(
˚s
, &
°
);

91 
gl_ccs
 = 
°
.
design
[°.
gl
];

92 
gr_ccs
 = 
°
.
design
[°.
gr
];

94 ; 
p
 < 
ï
;Ö++) {

95 
°©e
) {

96 
WC_ISO_NOSTATE
:

97 
WC_ISO_MAP
[*
p
]) {

98 
GL2
:

99 
gl_ccs
 = 
°
.
ss
 ? st.
design
[st.ss]

100 : 
°
.
design
[°.
gl
];

101 i‡(!(
	`WC_CCS_TYPE
(
gl_ccs
Ë& 
WC_CCS_A_CS96
)) {

102 
	`Såˇt_ch¨
(
os
, ()*
p
);

105 
GL
:

106 
gl_ccs
 = 
°
.
ss
 ? st.
design
[st.ss]

107 : 
°
.
design
[°.
gl
];

108 i‡(
	`WC_CCS_IS_WIDE
(
gl_ccs
)) {

109 
q
 = 
p
;

110 
°©e
 = 
WC_ISO_MBYTE1
;

112 } i‡(
gl_ccs
 =
WC_CES_US_ASCII
)

113 
	`Såˇt_ch¨
(
os
, ()*
p
);

115 
	`wtf_push_iso2022
(
os
, 
gl_ccs
, (
wc_uöt32
)*
p
);

117 
GR2
:

118 
gr_ccs
 = 
°
.
ss
 ? st.
design
[st.ss]

119 : 
°
.
design
[°.
gr
];

120 i‡(!(
	`WC_CCS_TYPE
(
gr_ccs
Ë& 
WC_CCS_A_CS96
)) {

121 
	`wtf_push_unknown
(
os
, 
p
, 1);

124 
GR
:

125 
gr_ccs
 = 
°
.
ss
 ? st.
design
[st.ss]

126 : 
°
.
design
[°.
gr
];

127 i‡(
	`WC_CCS_IS_WIDE
(
gr_ccs
)) {

128 
q
 = 
p
;

129 
°©e
 = 
WC_EUC_MBYTE1
;

131 } i‡(
gr_ccs
)

132 
	`wtf_push_iso2022
(
os
, 
gr_ccs
, (
wc_uöt32
)*
p
);

134 
	`wtf_push_unknown
(
os
, 
p
, 1);

136 
C0
:

137 
	`Såˇt_ch¨
(
os
, ()*
p
);

139 
C1
:

140 
	`wtf_push
(
os
, 
WC_CCS_C1
, (
wc_uöt32
)*
p
);

142 
ESC
:

143 
°
.
ss
 = 0;

144 i‡(
	`wc_∑r£_iso2022_esc
(&
p
, &
°
))

145 
°©e
 = 
°
.state;

147 
	`Såˇt_ch¨
(
os
, ()*
p
);

149 
SI
:

150 
°
.
gl
 = 0;

152 
SO
:

153 
°
.
gl
 = 1;

155 
SS2
:

156 i‡(! 
°
.
design
[2]) {

157 
	`wtf_push_unknown
(
os
, 
p
, 1);

160 
°
.
ss
 = 2;

162 
SS3
:

163 i‡(! 
°
.
design
[3]) {

164 
	`wtf_push_unknown
(
os
, 
p
, 1);

167 
°
.
ss
 = 3;

171 
WC_ISO_MBYTE1
:

172 
WC_ISO_MAP
[*
p
]) {

173 
GL2
:

174 i‡(!(
	`WC_CCS_TYPE
(
gl_ccs
Ë& 
WC_CCS_A_CS96
)) {

175 
	`Såˇt_ch¨
(
os
, ()*
q
);

176 
	`Såˇt_ch¨
(
os
, ()*
p
);

179 
GL
:

180 
	`wtf_push_iso2022
(
os
, 
gl_ccs
, ((
wc_uöt32
)*
q
 << 8Ë| *
p
);

183 
	`wtf_push_unknown
(
os
, 
q
, 2);

187 
WC_EUC_MBYTE1
:

188 
WC_ISO_MAP
[*
p
]) {

189 
GR2
:

190 i‡(!(
	`WC_CCS_TYPE
(
gr_ccs
Ë& 
WC_CCS_A_CS96
)) {

191 
	`wtf_push_unknown
(
os
, 
q
, 2);

194 
GR
:

195 i‡(
gr_ccs
 =
WC_CCS_CNS_11643_X
) {

196 
°©e
 = 
WC_EUC_TW_MBYTE2
;

199 
	`wtf_push_iso2022
(
os
, 
gr_ccs
, ((
wc_uöt32
)*
q
 << 8Ë| *
p
);

202 
	`wtf_push_unknown
(
os
, 
q
, 2);

206 
WC_EUC_TW_MBYTE2
:

207 i‡(
WC_ISO_MAP
[*
p
] =
GR
) {

208 i‡(0xa1 <*
q
 && *q <= 0xa7) {

209 
	`wtf_push_iso2022
(
os
, 
WC_CCS_CNS_11643_1
 + (*
q
 - 0xa1),

210 ((
wc_uöt32
)*(
q
+1Ë<< 8Ë| *
p
);

213 i‡(0xa8 <*
q
 && *q <= 0xb0) {

214 
	`wtf_push_iso2022
(
os
, 
WC_CCS_CNS_11643_8
 + (*
q
 - 0xa8),

215 ((
wc_uöt32
)*(
q
+1Ë<< 8Ë| *
p
);

219 
	`wtf_push_unknown
(
os
, 
q
, 3);

221 
WC_ISO_CSWSR
:

222 i‡(*
p
 =
WC_C_ESC
 && *’+1Ë=
WC_C_CSWSR
) {

223 i‡(*(
p
+2Ë=
WC_F_ISO_BASE
) {

224 
°©e
 = 
°
.°©ê
WC_ISO_NOSTATE
;

225 
p
 += 2;

227 } i‡(*(
p
+2Ë> 
WC_F_ISO_BASE
 && *(p+2) <= 0x7e) {

228 
p
 += 2;

232 
	`wtf_push_unknown
(
os
, 
p
, 1);

234 
WC_ISO_CSWOSR
:

235 
	`wtf_push_unknown
(
os
, 
p
, 
ï
 -Ö);

236  
os
;

239 
°
.
ss
 = 0;

240 
°©e
 = 
WC_ISO_NOSTATE
;

242 
°©e
) {

243 
WC_ISO_MBYTE1
:

244 
WC_EUC_MBYTE1
:

245 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

247 
WC_EUC_TW_MBYTE1
:

248 
	`wtf_push_unknown
(
os
, 
p
-2, 2);

251  
os
;

252 
	}
}

255 
	$wc_∑r£_iso2022_esc
(
wc_uch¨
 **
±r
, 
wc_°©us
 *
°
)

257 
wc_uch¨
 *
p
 = *
±r
, 
°©e
, 
f
 = 0, 
g
 = 0, 
cs
 = 0;

259 i‡(*
p
 !
WC_C_ESC
)

261 
°©e
 = *
p
;

262 
p
++; *∞&& 
°©e
;Ö++) {

263 
°©e
) {

264 
WC_C_ESC
:

265 *
p
) {

266 
WC_C_MBCS
:

267 
°©e
 = *
p
;

269 
WC_C_G0_CS94
:

270 
WC_C_G1_CS94
:

271 
WC_C_G2_CS94
:

272 
WC_C_G3_CS94
:

273 
°©e
 = 
cs
 = 
WC_C_G0_CS94
;

274 
g
 = *
p
 & 0x03;

276 
WC_C_G0_CS96
:

277 
WC_C_G1_CS96
:

278 
WC_C_G2_CS96
:

279 
WC_C_G3_CS96
:

280 
°©e
 = 
cs
 = 
WC_C_G0_CS96
;

281 
g
 = *
p
 & 0x03;

283 
WC_C_C0
:

284 
WC_C_C1
:

285 
WC_C_REP
:

286 
°©e
 = 
cs
 = 
WC_C_C0
;

288 
WC_C_CSWSR
:

289 
°©e
 = 
cs
 = 
WC_C_CSWSR
;

291 
WC_C_SS2
:

292 
°
->
ss
 = 2; *
±r
 = 
p
;  1;

293 
WC_C_SS3
:

294 
°
->
ss
 = 3; *
±r
 = 
p
;  1;

295 
WC_C_LS2
:

296 
°
->
gl
 = 2; *
±r
 = 
p
;  1;

297 
WC_C_LS3
:

298 
°
->
gl
 = 3; *
±r
 = 
p
;  1;

299 
WC_C_LS1R
:

300 
°
->
gr
 = 1; *
±r
 = 
p
;  1;

301 
WC_C_LS2R
:

302 
°
->
gr
 = 2; *
±r
 = 
p
;  1;

303 
WC_C_LS3R
:

304 
°
->
gr
 = 3; *
±r
 = 
p
;  1;

309 
WC_C_MBCS
:

310 *
p
) {

311 
WC_F_JIS_C_6226
:

312 
WC_F_JIS_X_0208
:

313 
WC_F_GB_2312
:

314 
°©e
 = 0;

315 
cs
 = 
WC_C_G0_CS94
 | 0x80;

316 
g
 = 0;

317 
f
 = *
p
;

319 
WC_C_G0_CS94
:

320 
WC_C_G1_CS94
:

321 
WC_C_G2_CS94
:

322 
WC_C_G3_CS94
:

323 
°©e
 = 
cs
 = 
WC_C_G0_CS94
 | 0x80;

324 
g
 = *
p
 & 0x03;

326 
WC_C_G0_CS96
:

327 
WC_C_G1_CS96
:

328 
WC_C_G2_CS96
:

329 
WC_C_G3_CS96
:

330 
°©e
 = 
cs
 = 
WC_C_G0_CS96
 | 0x80;

331 
g
 = *
p
 & 0x03;

337 
WC_C_G0_CS94
:

338 i‡(*
p
 =
WC_C_CS942
) {

339 
°©e
 = 
cs
 = 
WC_C_CS942
 | 0x80;

340 
g
 = *
p
 & 0x03;

343 
WC_C_G0_CS96
:

344 
WC_C_G0_CS94
 | 0x80:

345 
WC_C_G0_CS96
 | 0x80:

346 
WC_C_CS942
 | 0x80:

347 
WC_C_C0
:

348 
WC_C_CSWSR
 | 0x80:

349 
°©e
 = 0;

350 
f
 = *
p
;

352 
WC_C_CSWSR
:

353 i‡(*
p
 =
WC_C_CSWOSR
) {

354 
°©e
 = 
cs
 = 
WC_C_CSWSR
 | 0x80;

357 
°©e
 = 0;

358 
f
 = *
p
;

364 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 0x7e)

366 
cs
) {

367 
WC_C_G0_CS94
:

368 
°
->
design
[
g
] = 
	`WC_CCS_SET_CS94
(
f
);

370 
WC_C_G0_CS94
 | 0x80:

371 
°
->
design
[
g
] = 
	`WC_CCS_SET_CS94W
(
f
);

373 
WC_C_G0_CS96
:

374 
°
->
design
[
g
] = 
	`WC_CCS_SET_CS96
(
f
);

376 
WC_C_G0_CS96
 | 0x80:

377 
°
->
design
[
g
] = 
	`WC_CCS_SET_CS96W
(
f
);

379 
WC_C_CS942
 | 0x80:

380 
°
->
design
[
g
] = 
	`WC_CCS_SET_CS942
(
f
);

382 
WC_C_CSWSR
:

383 i‡(
f
 =
WC_F_ISO_BASE
)

384 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

386 
°
->
°©e
 = 
WC_ISO_CSWSR
;

388 
WC_C_CSWOSR
:

389 
°
->
°©e
 = 
WC_ISO_CSWOSR
;

392 *
±r
 = 
p
 - 1;

394 
	}
}

397 
	$wc_push_to_iso2022
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

399 
wc_uch¨
 
g
 = 0;

400 
wc_boﬁ
 
is_wide
 = 
WC_FALSE
, 
ªåy
 = WC_FALSE;

401 
wc_wch¨_t
 
cc2
;

404 
	`WC_CCS_TYPE
(
cc
.
ccs
)) {

405 
WC_CCS_A_CS94
:

406 i‡(
cc
.
ccs
 =
WC_CCS_US_ASCII
)

407 
cc
.
ccs
 = 
°
->
g0_ccs
;

408 
g
 = 
cs94_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

410 
WC_CCS_A_CS94W
:

411 
is_wide
 = 1;

412 
cc
.
ccs
) {

413 #ifde‡
USE_UNICODE


414 
WC_CCS_JIS_X_0212
:

415 i‡(!
WcO±i⁄
.
u£_jisx0212
 && WcO±i⁄.
u£_jisx0213
 &&

416 
WcO±i⁄
.
ucs_c⁄v
) {

417 
cc2
 = 
	`wc_jisx0212_to_jisx0213
(
cc
);

418 i‡(
cc2
.
ccs
 =
WC_CCS_JIS_X_0213_1
 ||

419 
cc2
.
ccs
 =
WC_CCS_JIS_X_0213_2
) {

420 
cc
 = 
cc2
;

425 
WC_CCS_JIS_X_0213_1
:

426 
WC_CCS_JIS_X_0213_2
:

427 i‡(!
WcO±i⁄
.
u£_jisx0213
 && WcO±i⁄.
u£_jisx0212
 &&

428 
WcO±i⁄
.
ucs_c⁄v
) {

429 
cc2
 = 
	`wc_jisx0213_to_jisx0212
(
cc
);

430 i‡(
cc2
.
ccs
 =
WC_CCS_JIS_X_0212
) {

431 
cc
 = 
cc2
;

438 
g
 = 
cs94w_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

440 
WC_CCS_A_CS96
:

441 
g
 = 
cs96_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

443 
WC_CCS_A_CS96W
:

444 
is_wide
 = 1;

445 
g
 = 
cs96w_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

447 
WC_CCS_A_CS942
:

448 
g
 = 
cs942_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

450 
WC_CCS_A_UNKNOWN_W
:

451 i‡(
WcO±i⁄
.
no_ª∂a˚
)

453 
is_wide
 = 1;

454 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

455 
g
 = 
cs94_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

456 
cc
.
code
 = ((
wc_uöt32
)
WC_REPLACE_W
[0] << 8) | WC_REPLACE_W[1];

458 
WC_CCS_A_UNKNOWN
:

459 i‡(
WcO±i⁄
.
no_ª∂a˚
)

461 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

462 
g
 = 
cs94_gm≠
[
	`WC_CCS_INDEX
(
cc
.
ccs
Ë- 
WC_F_ISO_BASE
];

463 
cc
.
code
 = (
wc_uöt32
)
WC_REPLACE
[0];

466 i‡((
cc
.
ccs
 =
WC_CCS_JOHAB
 || 
WC_CCS_JOHAB_1
 ||

467 
cc
.
ccs
 =
WC_CCS_JOHAB_2
 || cc.cc†=
WC_CCS_JOHAB_3
) &&

468 
cs94w_gm≠
[
WC_F_KS_X_1001
 - 
WC_F_ISO_BASE
]) {

469 
wc_wch¨_t
 
cc2
 = 
	`wc_johab_to_ksx1001
(
cc
);

470 i‡(
cc2
.
ccs
 =
WC_CCS_KS_X_1001
) {

471 
cc
 = 
cc2
;

475 #ifde‡
USE_UNICODE


476 i‡(
WcO±i⁄
.
ucs_c⁄v
)

477 
cc
 = 
	`wc_™y_to_iso2022
(cc, 
°
);

480 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

483 i‡(! 
g
) {

484 #ifde‡
USE_UNICODE


485 i‡(
WcO±i⁄
.
ucs_c⁄v
 && ! 
ªåy
)

486 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

489 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

490 
ªåy
 = 
WC_TRUE
;

494 
	`wc_push_iso2022_esc
(
os
, 
cc
.
ccs
, 
g
, 1, 
°
);

495 i‡(
is_wide
)

496 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) & 0x7f));

497 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0x7f));

500 
	}
}

503 
	$wc_push_to_iso2022_íd
(
Så
 
os
, 
wc_°©us
 *
°
)

505 i‡(
°
->
design
[1] !0 && st->design[1] !°->
g1_ccs
)

506 
	`wc_push_iso2022_esc
(
os
, 
°
->
g1_ccs
, 
WC_C_G1_CS94
, 0, st);

507 
	`wc_push_iso2022_esc
(
os
, 
°
->
g0_ccs
, 
WC_C_G0_CS94
, 1, st);

508 
	}
}

511 
	$wc_push_iso2022_esc
(
Så
 
os
, 
wc_ccs
 
ccs
, 
wc_uch¨
 
g
, 
wc_uöt8
 
övoke
, 
wc_°©us
 *
°
)

513 
wc_uöt8
 
g_övoke
 = 
g
 & 0x03;

515 i‡(
°
->
design
[
g_övoke
] !
ccs
) {

516 
	`Såˇt_ch¨
(
os
, 
WC_C_ESC
);

517 i‡(
	`WC_CCS_IS_WIDE
(
ccs
)) {

518 
	`Såˇt_ch¨
(
os
, 
WC_C_MBCS
);

519 i‡(
g_övoke
 != 0 ||

520 (
ccs
 !
WC_CCS_JIS_C_6226
 &&

521 
ccs
 !
WC_CCS_JIS_X_0208
 &&

522 
ccs
 !
WC_CCS_GB_2312
))

523 
	`Såˇt_ch¨
(
os
, ()
g
);

525 
	`Såˇt_ch¨
(
os
, ()
g
);

526 i‡((
ccs
 & 
WC_CCS_A_ISO_2022
Ë=
WC_CCS_A_CS942
)

527 
	`Såˇt_ch¨
(
os
, 
WC_C_CS942
);

529 
	`Såˇt_ch¨
(
os
, ()
	`WC_CCS_GET_F
(
ccs
));

530 
°
->
design
[
g_övoke
] = 
ccs
;

532 i‡(! 
övoke
)

535 
g_övoke
) {

537 i‡(
°
->
gl
 != 0) {

538 
	`Såˇt_ch¨
(
os
, 
WC_C_SI
);

539 
°
->
gl
 = 0;

543 i‡(
°
->
gl
 != 1) {

544 
	`Såˇt_ch¨
(
os
, 
WC_C_SO
);

545 
°
->
gl
 = 1;

549 
	`Såˇt_ch¨
(
os
, 
WC_C_ESC
);

550 
	`Såˇt_ch¨
(
os
, 
WC_C_SS2
);

553 
	`Såˇt_ch¨
(
os
, 
WC_C_ESC
);

554 
	`Såˇt_ch¨
(
os
, 
WC_C_SS3
);

557 
	}
}

560 
	$wc_push_to_euc
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

562 
wc_ccs
 
g1_ccs
 = 
°
->
˚s_öfo
->
g£t
[1].
ccs
;

565 i‡(
cc
.
ccs
 =
g1_ccs
) {

566 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

567 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

570 
cc
.
ccs
) {

571 
WC_CCS_US_ASCII
:

572 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

574 
WC_CCS_C1
:

575 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

577 
WC_CCS_UNKNOWN_W
:

578 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

579 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

581 
WC_CCS_UNKNOWN
:

582 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

583 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

585 
WC_CCS_JOHAB
:

586 
WC_CCS_JOHAB_1
:

587 
WC_CCS_JOHAB_2
:

588 
WC_CCS_JOHAB_3
:

589 i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_EUC_KR
) {

590 
cc
 = 
	`wc_johab_to_ksx1001
(cc);

594 #ifde‡
USE_UNICODE


595 i‡(
WcO±i⁄
.
ucs_c⁄v
)

596 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

599 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

603 
	}
}

606 
	$wc_push_to_eucjp
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

609 
cc
.
ccs
) {

610 
WC_CCS_US_ASCII
:

611 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

613 
WC_CCS_JIS_X_0201K
:

614 i‡(
WcO±i⁄
.
u£_jisx0201k
) {

615 
	`Såˇt_ch¨
(
os
, 
WC_C_SS2R
);

616 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

618 } i‡(
WcO±i⁄
.
fix_width_c⁄v
)

619 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

621 
cc
 = 
	`wc_jisx0201k_to_jisx0208
(cc);

623 
WC_CCS_JIS_X_0208
:

625 
WC_CCS_JIS_X_0213_1
:

626 i‡(
WcO±i⁄
.
u£_jisx0213
)

628 #ifde‡
USE_UNICODE


629 i‡(
WcO±i⁄
.
ucs_c⁄v
 && WcO±i⁄.
u£_jisx0212
)

630 
cc
 = 
	`wc_jisx0213_to_jisx0212
(cc);

633 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

635 
WC_CCS_JIS_X_0212
:

636 i‡(
WcO±i⁄
.
u£_jisx0212
) {

637 
	`Såˇt_ch¨
(
os
, 
WC_C_SS3R
);

640 #ifde‡
USE_UNICODE


641 i‡(
WcO±i⁄
.
ucs_c⁄v
 && WcO±i⁄.
u£_jisx0213
)

642 
cc
 = 
	`wc_jisx0212_to_jisx0213
(cc);

645 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

647 
WC_CCS_JIS_X_0213_2
:

648 i‡(
WcO±i⁄
.
u£_jisx0213
) {

649 
	`Såˇt_ch¨
(
os
, 
WC_C_SS3R
);

652 #ifde‡
USE_UNICODE


653 i‡(
WcO±i⁄
.
ucs_c⁄v
 && WcO±i⁄.
u£_jisx0212
)

654 
cc
 = 
	`wc_jisx0213_to_jisx0212
(cc);

657 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

659 
WC_CCS_C1
:

660 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

662 
WC_CCS_UNKNOWN_W
:

663 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

664 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

666 
WC_CCS_UNKNOWN
:

667 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

668 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

671 #ifde‡
USE_UNICODE


672 i‡(
WcO±i⁄
.
ucs_c⁄v
)

673 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

676 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

679 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

680 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

683 
	}
}

686 
	$wc_push_to_eu˘w
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

689 
cc
.
ccs
) {

690 
WC_CCS_US_ASCII
:

691 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

693 
WC_CCS_CNS_11643_1
:

695 
WC_CCS_CNS_11643_2
:

696 
WC_CCS_CNS_11643_3
:

697 
WC_CCS_CNS_11643_4
:

698 
WC_CCS_CNS_11643_5
:

699 
WC_CCS_CNS_11643_6
:

700 
WC_CCS_CNS_11643_7
:

701 
	`Såˇt_ch¨
(
os
, 
WC_C_SS2R
);

702 
	`Såˇt_ch¨
(
os
, ()(0xA1 + (
cc
.
ccs
 - 
WC_CCS_CNS_11643_1
)));

704 
WC_CCS_CNS_11643_8
:

705 
WC_CCS_CNS_11643_9
:

706 
WC_CCS_CNS_11643_10
:

707 
WC_CCS_CNS_11643_11
:

708 
WC_CCS_CNS_11643_12
:

709 
WC_CCS_CNS_11643_13
:

710 
WC_CCS_CNS_11643_14
:

711 
WC_CCS_CNS_11643_15
:

712 
WC_CCS_CNS_11643_16
:

713 
	`Såˇt_ch¨
(
os
, 
WC_C_SS2R
);

714 
	`Såˇt_ch¨
(
os
, ()(0xA8 + (
cc
.
ccs
 - 
WC_CCS_CNS_11643_8
)));

716 
WC_CCS_C1
:

717 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

719 
WC_CCS_UNKNOWN_W
:

720 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

721 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

723 
WC_CCS_UNKNOWN
:

724 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

725 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

728 #ifde‡
USE_UNICODE


729 i‡(
WcO±i⁄
.
ucs_c⁄v
)

730 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

733 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

736 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

737 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

740 
	}
}

743 
	$wc_push_to_iso8859
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

745 
wc_ccs
 
g1_ccs
 = 
°
->
˚s_öfo
->
g£t
[1].
ccs
;

748 i‡(
cc
.
ccs
 =
g1_ccs
) {

749 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

752 
cc
.
ccs
) {

753 
WC_CCS_US_ASCII
:

754 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

756 
WC_CCS_C1
:

757 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

759 
WC_CCS_UNKNOWN_W
:

760 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

761 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

763 
WC_CCS_UNKNOWN
:

764 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

765 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

768 #ifde‡
USE_UNICODE


769 i‡(
WcO±i⁄
.
ucs_c⁄v
)

770 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

773 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

777 
	}
}

780 
	$wc_¸óã_gm≠
(
wc_°©us
 *
°
)

782 
wc_g£t
 *
g£t
 = 
°
->
˚s_öfo
->gset;

783 
wc_uch¨
 *
g£t_ext
 = 
°
->
˚s_öfo
->gset_ext;

784 
i
, 
f
;

786 i‡(
WcO±i⁄
.
°ri˘_iso2022
) {

787 
i
 = 0; i < 
WC_F_ISO_BASE
; i++) {

788 
cs94_gm≠
[
i
] = 0;

789 
cs96_gm≠
[
i
] = 0;

790 
cs94w_gm≠
[
i
] = 0;

791 
cs96w_gm≠
[
i
] = 0;

792 
cs942_gm≠
[
i
] = 0;

795 
i
 = 0; i < 
WC_F_ISO_BASE
; i++) {

796 
cs94_gm≠
[
i
] = 
g£t_ext
[0];

797 
cs96_gm≠
[
i
] = 
g£t_ext
[1];

798 
cs94w_gm≠
[
i
] = 
g£t_ext
[2];

799 
cs96w_gm≠
[
i
] = 
g£t_ext
[3];

800 
cs942_gm≠
[
i
] = 
g£t_ext
[0];

803 
i
 = 0; 
g£t
[i].
ccs
; i++) {

804 
f
 = 
	`WC_CCS_GET_F
(
g£t
[
i
].
ccs
Ë- 
WC_F_ISO_BASE
;

805 
	`WC_CCS_TYPE
(
g£t
[
i
].
ccs
)) {

806 
WC_CCS_A_CS94
:

807 
g£t
[
i
].
ccs
) {

808 
WC_CCS_JIS_X_0201K
:

809 i‡(!
WcO±i⁄
.
u£_jisx0201k
)

813 
cs94_gm≠
[
f
] = 
g£t
[
i
].
g
;

815 
WC_CCS_A_CS94W
:

816 
g£t
[
i
].
ccs
) {

817 
WC_CCS_JIS_X_0212
:

818 i‡(!
WcO±i⁄
.
u£_jisx0212
)

821 
WC_CCS_JIS_X_0213_1
:

822 
WC_CCS_JIS_X_0213_2
:

823 i‡(!
WcO±i⁄
.
u£_jisx0213
)

827 
cs94w_gm≠
[
f
] = 
g£t
[
i
].
g
;

829 
WC_CCS_A_CS96
:

830 
cs96_gm≠
[
f
] = 
g£t
[
i
].
g
;

832 
WC_CCS_A_CS96W
:

833 
cs96w_gm≠
[
f
] = 
g£t
[
i
].
g
;

835 
WC_CCS_A_CS942
:

836 
cs942_gm≠
[
f
] = 
g£t
[
i
].
g
;

840 
	}
}

842 
Så


843 
	$wc_ch¨_c⁄v_‰om_iso2022
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

845 
Så
 
os
;

846 
wc_uch¨
 
buf
[4];

847 
size_t
 
nbuf
;

848 
wc_uch¨
 *
p
;

849 
wc_ccs
 
gl_ccs
, 
gr_ccs
;

851 i‡(
°
->
°©e
 == -1) {

852 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

853 
os
 = 
	`Så√w_size
(8);

854 
nbuf
 = 0;

857 
gl_ccs
 = 
°
->
ss
 ? st->
design
[°->ss] : st->design[°->
gl
];

858 
gr_ccs
 = 
°
->
ss
 ? st->
design
[°->ss] : st->design[°->
gr
];

860 
°
->
°©e
) {

861 
WC_ISO_NOSTATE
:

862 
WC_ISO_MAP
[
c
]) {

863 
GL2
:

864 i‡(!(
	`WC_CCS_TYPE
(
gl_ccs
Ë& 
WC_CCS_A_CS96
)) {

865 
	`Såˇt_ch¨
(
os
, ()
c
);

868 
GL
:

869 i‡(
	`WC_CCS_IS_WIDE
(
gl_ccs
)) {

870 
buf
[
nbuf
++] = 
c
;

871 
°
->
°©e
 = 
WC_ISO_MBYTE1
;

872  
NULL
;

873 } i‡(
gl_ccs
 =
WC_CES_US_ASCII
)

874 
	`Såˇt_ch¨
(
os
, ()
c
);

876 
	`wtf_push_iso2022
(
os
, 
gl_ccs
, (
wc_uöt32
)
c
);

878 
GR2
:

879 i‡(!(
	`WC_CCS_TYPE
(
gr_ccs
Ë& 
WC_CCS_A_CS96
))

881 
GR
:

882 i‡(
	`WC_CCS_IS_WIDE
(
gr_ccs
)) {

883 
buf
[
nbuf
++] = 
c
;

884 
°
->
°©e
 = 
WC_EUC_MBYTE1
;

885  
NULL
;

886 } i‡(
gr_ccs
)

887 
	`wtf_push_iso2022
(
os
, 
gr_ccs
, (
wc_uöt32
)
c
);

889 
C0
:

890 
	`Såˇt_ch¨
(
os
, ()
c
);

892 
C1
:

894 
ESC
:

895 
buf
[
nbuf
++] = 
c
;

896 
°
->
°©e
 = 
WC_C_ESC
;

897  
NULL
;

898 
SI
:

899 
°
->
gl
 = 0;

901 
SO
:

902 
°
->
gl
 = 1;

904 
SS2
:

905 i‡(! 
°
->
design
[2])

906  
os
;

907 
°
->
ss
 = 2;

908  
NULL
;

909 
SS3
:

910 i‡(! 
°
->
design
[3])

911  
os
;

912 
°
->
ss
 = 3;

913  
NULL
;

916 
WC_ISO_MBYTE1
:

917 
WC_ISO_MAP
[
c
]) {

918 
GL2
:

919 i‡(!(
	`WC_CCS_TYPE
(
gl_ccs
Ë& 
WC_CCS_A_CS96
))

921 
GL
:

922 
buf
[
nbuf
++] = 
c
;

923 
	`wtf_push_iso2022
(
os
, 
gl_ccs
, ((
wc_uöt32
)
buf
[0] << 8) | buf[1]);

926 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

928 
WC_EUC_MBYTE1
:

929 
WC_ISO_MAP
[
c
]) {

930 
GR2
:

931 i‡(!(
	`WC_CCS_TYPE
(
gr_ccs
Ë& 
WC_CCS_A_CS96
))

933 
GR
:

934 i‡(
gr_ccs
 =
WC_CCS_CNS_11643_X
) {

935 
buf
[
nbuf
++] = 
c
;

936 
°
->
°©e
 = 
WC_EUC_TW_MBYTE2
;

937  
NULL
;

939 
buf
[
nbuf
++] = 
c
;

940 
	`wtf_push_iso2022
(
os
, 
gr_ccs
, ((
wc_uöt32
)
buf
[0] << 8) | buf[1]);

943 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

945 
WC_EUC_TW_MBYTE2
:

946 i‡(
WC_ISO_MAP
[
c
] =
GR
) {

947 
buf
[
nbuf
++] = 
c
;

948 
c
 = 
buf
[0];

949 i‡(0xa1 <
c
 && c <= 0xa7) {

950 
	`wtf_push_iso2022
(
os
, 
WC_CCS_CNS_11643_1
 + (
c
 - 0xa1),

951 ((
wc_uöt32
)
buf
[1] << 8) | buf[2]);

954 i‡(0xa8 <
c
 && c <= 0xb0) {

955 
	`wtf_push_iso2022
(
os
, 
WC_CCS_CNS_11643_8
 + (
c
 - 0xa8),

956 ((
wc_uöt32
)
buf
[1] << 8) | buf[2]);

960 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

962 
WC_C_ESC
:

963 
c
) {

964 
WC_C_G0_CS94
:

965 
WC_C_G1_CS94
:

966 
WC_C_G2_CS94
:

967 
WC_C_G3_CS94
:

968 
buf
[
nbuf
++] = 
c
;

969 
°
->
°©e
 = 
WC_C_G0_CS94
;

970  
NULL
;

971 
WC_C_G0_CS96
:

972 
WC_C_G1_CS96
:

973 
WC_C_G2_CS96
:

974 
WC_C_G3_CS96
:

975 
WC_C_C0
:

976 
WC_C_C1
:

977 
WC_C_REP
:

978 
buf
[
nbuf
++] = 
c
;

979 
°
->
°©e
 = 
WC_C_G0_CS96
;

980  
NULL
;

981 
WC_C_MBCS
:

982 
WC_C_CSWSR
:

983 
buf
[
nbuf
++] = 
c
;

984 
°
->
°©e
 = 
c
;

985  
NULL
;

986 
WC_C_SS2
:

987 
°
->
ss
 = 2;

988 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

989  
NULL
;

990 
WC_C_SS3
:

991 
°
->
ss
 = 3;

992 
°
->
°©e
 = 
WC_ISO_NOSTATE
;

993  
NULL
;

994 
WC_C_LS2
:

995 
°
->
gl
 = 2;

997 
WC_C_LS3
:

998 
°
->
gl
 = 3;

1000 
WC_C_LS2R
:

1001 
°
->
gr
 = 2;

1003 
WC_C_LS3R
:

1004 
°
->
gr
 = 3;

1010 
WC_C_MBCS
:

1011 
c
) {

1012 
WC_F_JIS_C_6226
:

1013 
WC_F_JIS_X_0208
:

1014 
WC_F_GB_2312
:

1015 
buf
[
nbuf
++] = 
c
;

1016 
p
 = 
buf
;

1017 
	`wc_∑r£_iso2022_esc
(&
p
, 
°
);

1019 
WC_C_G0_CS94
:

1020 
WC_C_G1_CS94
:

1021 
WC_C_G2_CS94
:

1022 
WC_C_G3_CS94
:

1023 
WC_C_G0_CS96
:

1024 
WC_C_G1_CS96
:

1025 
WC_C_G2_CS96
:

1026 
WC_C_G3_CS96
:

1027 
buf
[
nbuf
++] = 
c
;

1028 
°
->
°©e
 = 
WC_C_G0_CS96
;

1029  
NULL
;

1032 
WC_C_CSWSR
:

1033 
c
) {

1034 
WC_C_CSWOSR
:

1035 
buf
[
nbuf
++] = 
c
;

1036 
°
->
°©e
 = 
WC_C_G1_CS94
;

1037  
NULL
;

1039 
buf
[
nbuf
++] = 
c
;

1040 
p
 = 
buf
;

1041 
	`wc_∑r£_iso2022_esc
(&
p
, 
°
);

1043 
WC_C_G0_CS94
:

1044 
c
) {

1045 
WC_C_CS942
:

1046 
buf
[
nbuf
++] = 
c
;

1047 
°
->
°©e
 = 
WC_C_G0_CS96
;

1048  
NULL
;

1050 
WC_C_G0_CS96
:

1051 
buf
[
nbuf
++] = 
c
;

1052 
p
 = 
buf
;

1053 
	`wc_∑r£_iso2022_esc
(&
p
, 
°
);

1056 
°
->
ss
 = 0;

1057 
°
->
°©e
 = -1;

1058  
os
;

1059 
	}
}

	@libwc/iso2022.h

2 #i‚de‡
_WC_ISO2022_H


3 
	#_WC_ISO2022_H


	)

5 
	#WC_C_ESC
 0x1B

	)

6 
	#WC_C_SS2
 0x4E

	)

7 
	#WC_C_SS3
 0x4F

	)

8 
	#WC_C_LS2
 0x6E

	)

9 
	#WC_C_LS3
 0x6F

	)

10 
	#WC_C_LS1R
 0x7E

	)

11 
	#WC_C_LS2R
 0x7D

	)

12 
	#WC_C_LS3R
 0x7C

	)

13 
	#WC_C_G0_CS94
 0x28

	)

14 
	#WC_C_G1_CS94
 0x29

	)

15 
	#WC_C_G2_CS94
 0x2A

	)

16 
	#WC_C_G3_CS94
 0x2B

	)

17 
	#WC_C_G0_CS96
 0x2C

	)

18 
	#WC_C_G1_CS96
 0x2D

	)

19 
	#WC_C_G2_CS96
 0x2E

	)

20 
	#WC_C_G3_CS96
 0x2F

	)

21 
	#WC_C_MBCS
 0x24

	)

22 
	#WC_C_CS942
 0x21

	)

23 
	#WC_C_C0
 0x21

	)

24 
	#WC_C_C1
 0x22

	)

25 
	#WC_C_REP
 0x26

	)

26 
	#WC_C_CSWSR
 0x25

	)

27 
	#WC_C_CSWOSR
 0x2F

	)

29 
	#WC_C_SO
 0x0E

	)

30 
	#WC_C_SI
 0x0F

	)

31 
	#WC_C_SS2R
 0x8E

	)

32 
	#WC_C_SS3R
 0x8F

	)

34 
	#WC_F_ISO_646_US
 0x42

	)

35 
	#WC_F_ISO_646_IRV
 
WC_F_ISO_646_US


	)

36 
	#WC_F_US_ASCII
 
WC_F_ISO_646_US


	)

37 
	#WC_F_JIS_X_0201K
 0x49

	)

38 
	#WC_F_JIS_X_0201
 0x4A

	)

39 
	#WC_F_GB_1988
 0x54

	)

41 
	#WC_F_ISO_8859_1
 0x41

	)

42 
	#WC_F_ISO_8859_2
 0x42

	)

43 
	#WC_F_ISO_8859_3
 0x43

	)

44 
	#WC_F_ISO_8859_4
 0x44

	)

45 
	#WC_F_ISO_8859_5
 0x4C

	)

46 
	#WC_F_ISO_8859_6
 0x47

	)

47 
	#WC_F_ISO_8859_7
 0x46

	)

48 
	#WC_F_ISO_8859_8
 0x48

	)

49 
	#WC_F_ISO_8859_9
 0x4D

	)

50 
	#WC_F_ISO_8859_10
 0x56

	)

51 
	#WC_F_ISO_8859_11
 0x54

	)

52 
	#WC_F_TIS_620
 
WC_F_ISO_8859_11


	)

53 
	#WC_F_ISO_8859_13
 0x59

	)

54 
	#WC_F_ISO_8859_14
 0x5F

	)

55 
	#WC_F_ISO_8859_15
 0x62

	)

56 
	#WC_F_ISO_8859_16
 0x66

	)

58 
	#WC_F_JIS_C_6226
 0x40

	)

59 
	#WC_F_GB_2312
 0x41

	)

60 
	#WC_F_JIS_X_0208
 0x42

	)

61 
	#WC_F_KS_X_1001
 0x43

	)

62 
	#WC_F_KS_C_5601
 
WC_F_KS_X_1001


	)

63 
	#WC_F_JIS_X_0212
 0x44

	)

64 
	#WC_F_ISO_IR_165
 0x45

	)

65 
	#WC_F_CCITT_GB
 
WC_F_ISO_IR_165


	)

66 
	#WC_F_CNS_11643_1
 0x47

	)

67 
	#WC_F_CNS_11643_2
 0x48

	)

68 
	#WC_F_CNS_11643_3
 0x49

	)

69 
	#WC_F_CNS_11643_4
 0x4A

	)

70 
	#WC_F_CNS_11643_5
 0x4B

	)

71 
	#WC_F_CNS_11643_6
 0x4C

	)

72 
	#WC_F_CNS_11643_7
 0x4D

	)

73 
	#WC_F_KPS_9566
 0x4E

	)

74 
	#WC_F_JIS_X_0213_1
 0x4F

	)

75 
	#WC_F_JIS_X_0213_2
 0x50

	)

77 
	#WC_ISO_NOSTATE
 0

	)

78 
	#WC_ISO_MBYTE1
 1

	)

79 
	#WC_EUC_NOSTATE
 0

	)

80 
	#WC_EUC_MBYTE1
 2

	)

81 
	#WC_EUC_TW_SS2
 3

	)

82 
	#WC_EUC_TW_MBYTE1
 4

	)

83 
	#WC_EUC_TW_MBYTE2
 5

	)

84 
	#WC_ISO_ESC
 6

	)

85 
	#WC_ISO_CSWSR
 0x10

	)

86 
	#WC_ISO_CSWOSR
 0x20

	)

88 
	#WC_ISO_MAP_CG
 0xF0

	)

89 
	#WC_ISO_MAP_C0
 0x10

	)

90 
	#WC_ISO_MAP_GL
 0x00

	)

91 
	#WC_ISO_MAP_GL96
 0x20

	)

92 
	#WC_ISO_MAP_C1
 0x50

	)

93 
	#WC_ISO_MAP_GR
 0x40

	)

94 
	#WC_ISO_MAP_GR96
 0x60

	)

95 
	#WC_ISO_MAP_SO
 (0x1 | 
WC_ISO_MAP_C0
Ë

	)

96 
	#WC_ISO_MAP_SI
 (0x2 | 
WC_ISO_MAP_C0
Ë

	)

97 
	#WC_ISO_MAP_ESC
 (0x3 | 
WC_ISO_MAP_C0
Ë

	)

98 
	#WC_ISO_MAP_SS2
 (0x4 | 
WC_ISO_MAP_C1
Ë

	)

99 
	#WC_ISO_MAP_SS3
 (0x5 | 
WC_ISO_MAP_C1
Ë

	)

100 
	#WC_ISO_MAP_DETECT
 0x4F

	)

102 
	#WC_CS94WUL_N
(
U
,
L
Ë(((UË- 0x21Ë* 0x5E + (LË- 0x21)

	)

103 
	#WC_CS94W_N
(
c
Ë
	`WC_CS94WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

104 
	#WC_CS96WUL_N
(
U
,
L
Ë(((UË- 0x20Ë* 0x60 + (LË- 0x20)

	)

105 
	#WC_CS96W_N
(
c
Ë
	`WC_CS96WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

106 
	#WC_N_CS94WU
(
c
Ë((cË/ 0x5E + 0x21)

	)

107 
	#WC_N_CS94WL
(
c
Ë((cË% 0x5E + 0x21)

	)

108 
	#WC_N_CS94W
(
c
Ë((
	`WC_N_CS94WU
(cË<< 8Ë+ 
	`WC_N_CS94WL
(c))

	)

109 
	#WC_N_CS96WU
(
c
Ë((cË/ 0x60 + 0x20)

	)

110 
	#WC_N_CS96WL
(
c
Ë((cË% 0x60 + 0x20)

	)

111 
	#WC_N_CS96W
(
c
Ë((
	`WC_N_CS96WU
(cË<< 8Ë+ 
	`WC_N_CS96WL
(c))

	)

113 
wc_uöt8
 
WC_ISO_MAP
[];

115 
Så
 
wc_c⁄v_‰om_iso2022
(Så 
is
, 
wc_˚s
 
˚s
);

116 
wc_push_to_iso2022
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

117 
wc_push_to_euc
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

118 
wc_push_to_eucjp
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

119 
wc_push_to_eu˘w
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

120 
wc_push_to_iso8859
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

121 
wc_push_to_iso2022_íd
(
Så
 
os
, 
wc_°©us
 *
°
);

122 
wc_∑r£_iso2022_esc
(
wc_uch¨
 **
±r
, 
wc_°©us
 *
°
);

123 
wc_push_iso2022_esc
(
Så
 
os
, 
wc_ccs
 
ccs
, 
wc_uch¨
 
g
, 
wc_uöt8
 
övoke
, 
wc_°©us
 *
°
);

124 
wc_¸óã_gm≠
(
wc_°©us
 *
°
);

125 
Så
 
wc_ch¨_c⁄v_‰om_iso2022
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/jis.c

2 
	~"wc.h
"

3 
	~"jis.h
"

4 
	~"£¨ch.h
"

5 #ifde‡
USE_UNICODE


6 
	~"ucs.h
"

9 
	~"m≠/jisx0201k_jisx0208.m≠
"

10 
	~"m≠/jisx0208_jisx02131.m≠
"

12 
wc_wch¨_t


13 
	$wc_jisx0201k_to_jisx0208
(
wc_wch¨_t
 
cc
)

15 
cc
.
code
 = 
jisx0201k_jisx0208_m≠
[cc.code & 0x7f];

16 
cc
.
ccs
 = cc.
code
 ? 
WC_CCS_JIS_X_0208
 : 
WC_CCS_UNKNOWN_W
;

17  
cc
;

18 
	}
}

20 
wc_wch¨_t


21 
	$wc_jisx0212_to_jisx0213
(
wc_wch¨_t
 
cc
)

23 #ifde‡
USE_UNICODE


24 
wc_wch¨_t
 
cc2
;

25 
wc_èbÀ
 *
t1
 = 
NULL
;

26 
wc_èbÀ
 *
t2
 = 
NULL
;

28 i‡(
t1
 =
NULL
) {

29 
t1
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_JIS_X_0213_1
);

30 
t2
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_JIS_X_0213_2
);

32 
cc2
 = 
	`wc_™y_to_™y
(
cc
, 
t2
);

33 i‡(
cc2
.
ccs
 =
WC_CCS_JIS_X_0212
)

34  
cc2
;

35  
	`wc_™y_to_™y
(
cc
, 
t1
);

37 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

38  
cc
;

40 
	}
}

42 
wc_wch¨_t


43 
	$wc_jisx0213_to_jisx0212
(
wc_wch¨_t
 
cc
)

45 #ifde‡
USE_UNICODE


46 
wc_èbÀ
 *
t
 = 
NULL
;

48 i‡(
t
 =
NULL
)

49 
t
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_JIS_X_0212
);

50  
	`wc_™y_to_™y
(
cc
, 
t
);

52 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

53  
cc
;

55 
	}
}

57 
wc_ccs


58 
	$wc_jisx0208_‹_jisx02131
(
wc_uöt16
 
code
)

60  
	`wc_m≠_ønge_£¨ch
(
code
 & 0x7f7f,

61 
jisx0208_jisx02131_m≠
, 
N_jisx0208_jisx02131_m≠
)

62 ? 
WC_CCS_JIS_X_0213_1
 : 
WC_CCS_JIS_X_0208
;

63 
	}
}

65 
wc_ccs


66 
	$wc_jisx0212_‹_jisx02132
(
wc_uöt16
 
code
)

68  
wc_jisx0212_jisx02132_m≠
[(
code
 >> 8) & 0x7f]

69 ? 
WC_CCS_JIS_X_0213_2
 : 
WC_CCS_JIS_X_0212
;

70 
	}
}

	@libwc/jis.h

2 #i‚de‡
_WC_JIS_H


3 
	#_WC_JIS_H


	)

5 
wc_uch¨
 *
wc_jisx0212_jisx02132_m≠
;

7 
wc_wch¨_t
 
wc_jisx0201k_to_jisx0208
(wc_wch¨_à
cc
);

8 
wc_wch¨_t
 
wc_jisx0212_to_jisx0213
(wc_wch¨_à
cc
);

9 
wc_wch¨_t
 
wc_jisx0213_to_jisx0212
(wc_wch¨_à
cc
);

10 
wc_ccs
 
wc_jisx0208_‹_jisx02131
(
wc_uöt16
 
code
);

11 
wc_ccs
 
wc_jisx0212_‹_jisx02132
(
wc_uöt16
 
code
);

	@libwc/johab.c

2 
	~"wc.h
"

3 
	~"johab.h
"

4 
	~"wtf.h
"

5 #ifde‡
USE_UNICODE


6 
	~"ucs.h
"

9 
	#C0
 
WC_JOHAB_MAP_C0


	)

10 
	#GL
 
WC_JOHAB_MAP_GL


	)

11 
	#C1
 
WC_JOHAB_MAP_C1


	)

12 
	#GH
 
WC_JOHAB_MAP_GH


	)

13 
	#GB
 
WC_JOHAB_MAP_GB


	)

14 
	#JJ
 
WC_JOHAB_MAP_JJ


	)

15 
	#JB
 
WC_JOHAB_MAP_JB


	)

16 
	#HB
 
WC_JOHAB_MAP_HB


	)

17 
	#CJ
 
WC_JOHAB_MAP_CJ


	)

18 
	#CB
 
WC_JOHAB_MAP_CB


	)

28 
wc_uöt8
 
	gWC_JOHAB_MAP
[ 0x100 ] = {

29 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

30 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

32 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

34 
GL
, 
GH
, GH, GH, GH, GH, GH, GH, GH, GH, GH, GH, GH, GH, GH, GH,

36 
GH
, 
GB
, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB,

37 
GB
, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB,

38 
GB
, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB,

39 
GB
, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, GB, 
C0
,

42 
C1
, 
CJ
, CJ, CJ, 
JJ
, JJ, JJ, JJ, JJ, JJ, JJ, JJ, JJ, JJ, JJ, JJ,

44 
JJ
, 
JB
, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB,

45 
JB
, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB,

46 
JB
, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB,

47 
JB
, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB, JB,

49 
JB
, JB, JB, JB, 
CB
, CB, CB, CB, 
HB
, HB, HB, HB, HB, HB, HB, CB,

50 
HB
, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB, HB,

52 
HB
, HB, HB, HB, HB, HB, HB, HB, HB, HB, 
CB
, CB, CB, CB, CB, 
C1
,

55 
wc_uöt8
 
	gjohab1_N_m≠
[ 3 ][ 32 ] = {

64 
wc_uöt8
 
	gN_johab1_m≠
[ 3 ][ 32 ] = {

73 
wc_wch¨_t


74 
	$wc_johab_to_ksx1001
(
wc_wch¨_t
 
cc
)

76 #ifde‡
USE_UNICODE


77 
wc_èbÀ
 *
t
 = 
NULL
;

80 
cc
.
ccs
) {

81 
WC_CCS_JOHAB
:

82  
	`wc_johab_to_ksx1001
(
	`wc_johab_to_cs128w
(
cc
));

83 
WC_CCS_JOHAB_1
:

84 
WC_CCS_JOHAB_2
:

85 #ifde‡
USE_UNICODE


86 i‡(
WcO±i⁄
.
ucs_c⁄v
) {

87 i‡(
t
 =
NULL
)

88 
t
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_KS_X_1001
);

89 
cc
 = 
	`wc_™y_to_™y
(cc, 
t
);

92 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

94 
WC_CCS_JOHAB_3
:

95 i‡(
cc
.
code
 >= 0x2121)

96 
cc
.
ccs
 = 
WC_CCS_KS_X_1001
;

98 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

101  
cc
;

102 
	}
}

104 
wc_wch¨_t


105 
	$wc_ksx1001_to_johab
(
wc_wch¨_t
 
cc
)

107 
cc
.
code
 &= 0x7f7f;

108 i‡((
cc
.
code
 >= 0x2121 && cc.code < 0x2421) ||

109 (
cc
.
code
 > 0x2453 && cc.code <= 0x2C7E) ||

110 (
cc
.
code
 >= 0x4A21 && cc.code <= 0x7D7E)) {

111 
cc
.
ccs
 = 
WC_CCS_JOHAB_3
;

112  
cc
;

114 #ifde‡
USE_UNICODE


115 i‡(
WcO±i⁄
.
ucs_c⁄v
)

116 
cc
 = 
	`wc_ucs_to_johab
(
	`wc_™y_to_ucs
(cc));

119 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

120  
cc
;

121 
	}
}

123 #ifde‡
USE_UNICODE


124 
wc_wch¨_t


125 
	$wc_ucs_to_johab
(
wc_uöt32
 
ucs
)

127 
wc_èbÀ
 *
t
;

128 
wc_wch¨_t
 
cc
;

130 i‡(
ucs
 >
WC_C_UCS2_HANGUL
 && uc†<
WC_C_UCS2_HANGUL_END
) {

131 
ucs
 -
WC_C_UCS2_HANGUL
;

132 
cc
.
code
 = 
	`WC_N_JOHAB1
(
ucs
);

133 
cc
.
ccs
 = 
WC_CCS_JOHAB
;

134 } i‡(
ucs
 >= 0x3131 && ucs <= 0x3163) {

135 
t
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_JOHAB_2
);

136 
cc
 = 
	`wc_ucs_to_™y
(
ucs
, 
t
);

138 
t
 = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_JOHAB_3
);

139 
cc
 = 
	`wc_ucs_to_™y
(
ucs
, 
t
);

141  
cc
;

142 
	}
}

145 
wc_uöt32


146 
	$wc_johab1_to_N
(
wc_uöt32
 
code
)

148 
wc_uöt32
 
a
, 
b
, 
c
;

150 
a
 = 
johab1_N_m≠
[0][(
code
 >> 10) & 0x1F];

151 
b
 = 
johab1_N_m≠
[1][(
code
 >> 5) & 0x1F];

152 
c
 = 
johab1_N_m≠
[2][ 
code
 & 0x1F];

153 i‡(
a
 && 
b
 && 
c
)

154  ((
a
 - 1Ë* 21 + (
b
 - 1)Ë* 28 + (
c
 - 1);

155  
WC_C_JOHAB_ERROR
;

156 
	}
}

158 
wc_uöt32


159 
	$wc_N_to_johab1
(
wc_uöt32
 
code
)

161 
wc_uöt32
 
a
, 
b
, 
c
;

163 
a
 = 
N_johab1_m≠
[0][(
code
 / 28) / 21];

164 
b
 = 
N_johab1_m≠
[1][(
code
 / 28) % 21];

165 
c
 = 
N_johab1_m≠
[2][ 
code
 % 28 ];

166  0x8000 | (
a
 << 10Ë| (
b
 << 5Ë| 
c
;

167 
	}
}

171 
	#johab3_to_ksx1001
(
ub
, 
lb
) \

173 i‡(
ub
 < 0xe0) { \

174 
ub
 = ((ub - 0xd8) << 1) + 0x1f; \

176 
ub
 = ((ub - 0xe0) << 1) + 0x4a; \

178 i‡(
lb
 < 0xa1) { \

179 
lb
 -= (lb < 0x91) ? 0x10 : 0x22; \

181 
ub
++; \

182 
lb
 -= 0x80; \

184 }

	)

186 
	#ksx1001_to_johab3
(
ub
, 
lb
) \

188 i‡(
ub
 < 0x4a) { \

189 
ub
 -= 0x1f; \

190 
lb
 +(
ub
 & 0x1) ? 0x80 : ((lb < 0x6f) ? 0x10 : 0x22); \

191 
ub
 = (ub >> 1) + 0xd8; \

193 
ub
 -= 0x4a; \

194 
lb
 +(
ub
 & 0x1) ? 0x80 : ((lb < 0x6f) ? 0x10 : 0x22); \

195 
ub
 = (ub >> 1) + 0xe0; \

197 }

	)

199 
wc_wch¨_t


200 
	$wc_johab_to_cs128w
(
wc_wch¨_t
 
cc
)

202 
wc_uöt32
 
n
;

203 
wc_uch¨
 
ub
, 
lb
;

205 i‡(
cc
.
code
 < 0xD800) {

206 
n
 = 
	`WC_JOHAB1_N
(
cc
.
code
);

207 i‡(
n
 !
WC_C_JOHAB_ERROR
) {

208 
cc
.
code
 = 
	`WC_N_CS94x128
(
n
);

209 
cc
.
ccs
 = 
WC_CCS_JOHAB_1
;

211 
n
 = 
	`WC_JOHAB2_N
(
cc
.
code
);

212 
cc
.
code
 = 
	`WC_N_CS128W
(
n
);

213 
cc
.
ccs
 = 
WC_CCS_JOHAB_2
;

216 
ub
 = 
cc
.
code
 >> 8;

217 
lb
 = 
cc
.
code
 & 0xff;

218 
	`johab3_to_ksx1001
(
ub
, 
lb
);

219 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

220 
cc
.
ccs
 = 
WC_CCS_JOHAB_3
;

222  
cc
;

223 
	}
}

225 
wc_wch¨_t


226 
	$wc_cs128w_to_johab
(
wc_wch¨_t
 
cc
)

228 
wc_uöt32
 
n
;

229 
wc_uch¨
 
ub
, 
lb
;

231 
cc
.
ccs
) {

232 
WC_CCS_JOHAB_1
:

233 
n
 = 
	`WC_CS94x128_N
(
cc
.
code
);

234 
cc
.
code
 = 
	`WC_N_JOHAB1
(
n
);

236 
WC_CCS_JOHAB_2
:

237 
n
 = 
	`WC_CS128W_N
(
cc
.
code
);

238 
cc
.
code
 = 
	`WC_N_JOHAB2
(
n
);

240 
WC_CCS_JOHAB_3
:

241 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

242 
lb
 = 
cc
.
code
 & 0x7f;

243 
	`ksx1001_to_johab3
(
ub
, 
lb
);

244 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

246 
cc
.
ccs
 = 
WC_CCS_JOHAB
;

247  
cc
;

248 
	}
}

250 
Så


251 
	$wc_c⁄v_‰om_johab
(
Så
 
is
, 
wc_˚s
 
˚s
)

253 
Så
 
os
;

254 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

255 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

256 
wc_uch¨
 *
p
;

257 
°©e
 = 
WC_JOHAB_NOSTATE
;

259 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

261 i‡(
p
 =
ï
)

262  
is
;

263 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

264 i‡(
p
 > 
•
)

265 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

267 ; 
p
 < 
ï
;Ö++) {

268 
°©e
) {

269 
WC_JOHAB_NOSTATE
:

270 
WC_JOHAB_MAP
[*
p
] & 
WC_JOHAB_MAP_1
) {

271 
WC_JOHAB_MAP_UJ
:

272 
°©e
 = 
WC_JOHAB_HANGUL1
;

274 
WC_JOHAB_MAP_UH
:

275 
°©e
 = 
WC_JOHAB_HANJA1
;

277 
WC_JOHAB_MAP_C1
:

278 
	`wtf_push_unknown
(
os
, 
p
, 1);

281 
	`Såˇt_ch¨
(
os
, ()*
p
);

285 
WC_JOHAB_HANGUL1
:

286 i‡(
WC_JOHAB_MAP
[*
p
] & 
WC_JOHAB_MAP_LJ
)

287 
	`wtf_push
(
os
, 
WC_CCS_JOHAB
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

289 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

290 
°©e
 = 
WC_JOHAB_NOSTATE
;

292 
WC_JOHAB_HANJA1
:

293 i‡(
WC_JOHAB_MAP
[*
p
] & 
WC_JOHAB_MAP_LH
)

294 
	`wtf_push
(
os
, 
WC_CCS_JOHAB
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

296 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

297 
°©e
 = 
WC_JOHAB_NOSTATE
;

301 
°©e
) {

302 
WC_JOHAB_HANGUL1
:

303 
WC_JOHAB_HANJA1
:

304 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

307  
os
;

308 
	}
}

311 
	$wc_push_to_johab
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

314 
cc
.
ccs
) {

315 
WC_CCS_US_ASCII
:

316 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

318 
WC_CCS_JOHAB_1
:

319 
WC_CCS_JOHAB_2
:

320 
WC_CCS_JOHAB_3
:

321 
cc
 = 
	`wc_cs128w_to_johab
(cc);

322 
WC_CCS_JOHAB
:

323 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

324 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

326 
WC_CCS_KS_X_1001
:

327 
cc
 = 
	`wc_ksx1001_to_johab
(cc);

329 
WC_CCS_UNKNOWN_W
:

330 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

331 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

333 
WC_CCS_UNKNOWN
:

334 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

335 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

338 #ifde‡
USE_UNICODE


339 i‡(
WcO±i⁄
.
ucs_c⁄v
)

340 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

343 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

347 
	}
}

349 
Så


350 
	$wc_ch¨_c⁄v_‰om_johab
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

352 
Så
 
os
;

353 
wc_uch¨
 
johabu
;

355 i‡(
°
->
°©e
 == -1) {

356 
°
->
°©e
 = 
WC_JOHAB_NOSTATE
;

357 
os
 = 
	`Så√w_size
(8);

360 
°
->
°©e
) {

361 
WC_JOHAB_NOSTATE
:

362 
WC_JOHAB_MAP
[
c
] & 
WC_JOHAB_MAP_1
) {

363 
WC_JOHAB_MAP_UJ
:

364 
johabu
 = 
c
;

365 
°
->
°©e
 = 
WC_JOHAB_HANGUL1
;

366  
NULL
;

367 
WC_JOHAB_MAP_UH
:

368 
johabu
 = 
c
;

369 
°
->
°©e
 = 
WC_JOHAB_HANJA1
;

370  
NULL
;

371 
WC_JOHAB_MAP_C1
:

374 
	`Såˇt_ch¨
(
os
, ()
c
);

378 
WC_JOHAB_HANGUL1
:

379 i‡(
WC_JOHAB_MAP
[
c
] & 
WC_JOHAB_MAP_LJ
)

380 
	`wtf_push
(
os
, 
WC_CCS_JOHAB
, ((
wc_uöt32
)
johabu
 << 8Ë| 
c
);

382 
WC_JOHAB_HANJA1
:

383 i‡(
WC_JOHAB_MAP
[
c
] & 
WC_JOHAB_MAP_LH
)

384 
	`wtf_push
(
os
, 
WC_CCS_JOHAB
, ((
wc_uöt32
)
johabu
 << 8Ë| 
c
);

387 
°
->
°©e
 = -1;

388  
os
;

389 
	}
}

	@libwc/johab.h

2 #i‚de‡
_WC_JOHAB_H


3 
	#_WC_JOHAB_H


	)

5 
	#WC_C_JOHAB_ERROR
 0xFFFFFFFFU

	)

7 
	#WC_JOHAB_NOSTATE
 0

	)

8 
	#WC_JOHAB_HANGUL1
 1

	)

9 
	#WC_JOHAB_HANJA1
 2

	)

11 
	#WC_JOHAB_MAP_C0
 0x0

	)

12 
	#WC_JOHAB_MAP_GL
 0x1

	)

13 
	#WC_JOHAB_MAP_UJ
 0x2

	)

14 
	#WC_JOHAB_MAP_UH
 0x4

	)

15 
	#WC_JOHAB_MAP_C1
 0x8

	)

16 
	#WC_JOHAB_MAP_LJ
 0x10

	)

17 
	#WC_JOHAB_MAP_LH
 0x20

	)

19 
	#WC_JOHAB_MAP_GH
 (
WC_JOHAB_MAP_GL
|
WC_JOHAB_MAP_LH
)

	)

20 
	#WC_JOHAB_MAP_GB
 (
WC_JOHAB_MAP_GL
|
WC_JOHAB_MAP_LJ
|
WC_JOHAB_MAP_LH
)

	)

21 
	#WC_JOHAB_MAP_JJ
 (
WC_JOHAB_MAP_UJ
|
WC_JOHAB_MAP_LJ
)

	)

22 
	#WC_JOHAB_MAP_JB
 (
WC_JOHAB_MAP_UJ
|
WC_JOHAB_MAP_LJ
|
WC_JOHAB_MAP_LH
)

	)

23 
	#WC_JOHAB_MAP_HB
 (
WC_JOHAB_MAP_UH
|
WC_JOHAB_MAP_LJ
|
WC_JOHAB_MAP_LH
)

	)

24 
	#WC_JOHAB_MAP_CJ
 (
WC_JOHAB_MAP_C1
|
WC_JOHAB_MAP_LJ
)

	)

25 
	#WC_JOHAB_MAP_CB
 (
WC_JOHAB_MAP_C1
|
WC_JOHAB_MAP_LJ
|
WC_JOHAB_MAP_LH
)

	)

27 
	#WC_JOHAB_MAP_1
 0xF

	)

28 
	#WC_JOHAB_MAP_2
 0x30

	)

30 
	#WC_JOHAB1_N
(
c
Ë
	`wc_johab1_to_N
(c)

	)

31 
	#WC_N_JOHAB1
(
c
Ë
	`wc_N_to_johab1
(c)

	)

32 
	#WC_CS94x128UL_N
(
U
,
L
Ë(((UË- 0x21Ë* 0x80 + (L))

	)

33 
	#WC_CS94x128_N
(
c
Ë
	`WC_CS94x128UL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

34 
	#WC_N_CS94x128U
(
c
Ë((cË/ 0x80 + 0x21)

	)

35 
	#WC_N_CS94x128L
(
c
Ë((cË% 0x80)

	)

36 
	#WC_N_CS94x128
(
c
Ë((
	`WC_N_CS94x128U
(cË<< 8Ë+ 
	`WC_N_CS94x128L
(c))

	)

37 
	#WC_JOHAB2UL_N
(
U
,
L
Ë(((UË- 0x84Ë* 0xBC + (LË- (((LË< 0x81Ë? 0x41 : 0x43))

	)

38 
	#WC_JOHAB2_N
(
c
Ë
	`WC_JOHAB2UL_N
(((cË>> 8Ë& 0xFF, (cË& 0xFF)

	)

39 
	#WC_N_JOHAB2U
(
c
Ë((cË/ 0xBC + 0x84)

	)

40 
	#WC_N_JOHAB2L
(
c
Ë((cË% 0xBC + (((cË% 0xBC < 0x3EË? 0x41 : 0x43))

	)

41 
	#WC_N_JOHAB2
(
c
Ë((
	`WC_N_JOHAB2U
(cË<< 8Ë+ 
	`WC_N_JOHAB2L
(c))

	)

42 #i‚de‡
WC_CS128W_N


43 
	#WC_CS128WUL_N
(
U
,
L
Ë((UË* 0x80 + (L))

	)

44 
	#WC_CS128W_N
(
c
Ë
	`WC_CS128WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

45 
	#WC_N_CS128WU
(
c
Ë((cË/ 0x80)

	)

46 
	#WC_N_CS128WL
(
c
Ë((cË% 0x80)

	)

47 
	#WC_N_CS128W
(
c
Ë((
	`WC_N_CS128WU
(cË<< 8Ë+ 
	`WC_N_CS128WL
(c))

	)

50 
wc_uch¨
 
WC_JOHAB_MAP
[];

52 
wc_wch¨_t
 
wc_johab_to_ksx1001
(wc_wch¨_à
cc
);

53 
wc_wch¨_t
 
wc_ksx1001_to_johab
(wc_wch¨_à
cc
);

54 
wc_wch¨_t
 
wc_ucs_to_johab
(
wc_uöt32
 
ucs
);

55 
wc_uöt32
 
wc_johab1_to_N
(wc_uöt32 
cc
);

56 
wc_uöt32
 
wc_N_to_johab1
(wc_uöt32 
ucs
);

57 
wc_wch¨_t
 
wc_johab_to_cs128w
(wc_wch¨_à
cc
);

58 
wc_wch¨_t
 
wc_cs128w_to_johab
(wc_wch¨_à
cc
);

59 
Så
 
wc_c⁄v_‰om_johab
(Så 
is
, 
wc_˚s
 
˚s
);

60 
wc_push_to_johab
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

61 
Så
 
wc_ch¨_c⁄v_‰om_johab
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/priv.c

2 
	~"wc.h
"

3 
	~"wtf.h
"

5 
Så


6 
	$wc_c⁄v_‰om_¥iv1
(
Så
 
is
, 
wc_˚s
 
˚s
)

8 
Så
 
os
;

9 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

10 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

11 
wc_uch¨
 *
p
;

12 
wc_ccs
 
ccs
 = 
WcCesInfo
[
	`WC_CCS_INDEX
(
˚s
)].
g£t
[1].ccs;

14 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

16 i‡(
p
 =
ï
)

17  
is
;

18 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

19 i‡(
p
 > 
•
)

20 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

22 ; 
p
 < 
ï
;Ö++) {

23 i‡(*
p
 & 0x80)

24 
	`wtf_push
(
os
, 
ccs
, (
wc_uöt32
)*
p
);

26 
	`Såˇt_ch¨
(
os
, ()*
p
);

28  
os
;

29 
	}
}

31 
Så


32 
	$wc_ch¨_c⁄v_‰om_¥iv1
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

34 
Så
 
os
 = 
	`Så√w_size
(1);

36 i‡(
c
 & 0x80)

37 
	`wtf_push
(
os
, 
°
->
˚s_öfo
->
g£t
[1].
ccs
, (
wc_uöt32
)
c
);

39 
	`Såˇt_ch¨
(
os
, ()
c
);

40  
os
;

41 
	}
}

43 
Så


44 
	$wc_c⁄v_‰om_ascii
(
Så
 
is
, 
wc_˚s
 
˚s
)

46 
Så
 
os
;

47 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

48 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

49 
wc_uch¨
 *
p
;

51 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

53 i‡(
p
 =
ï
)

54  
is
;

55 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

56 i‡(
p
 > 
•
)

57 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

59 ; 
p
 < 
ï
;Ö++) {

60 i‡(*
p
 & 0x80)

61 
	`wtf_push_unknown
(
os
, 
p
, 1);

63 
	`Såˇt_ch¨
(
os
, ()*
p
);

65  
os
;

66 
	}
}

69 
	$wc_push_to_øw
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

72 
cc
.
ccs
) {

73 
WC_CCS_US_ASCII
:

74 
WC_CCS_RAW
:

75 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

78 
	}
}

	@libwc/priv.h

2 #i‚de‡
_WC_PRIV_H


3 
	#_WC_PRIV_H


	)

5 
	#WC_F_SPECIAL
 0x00

	)

6 
	#WC_F_CP437
 0x01

	)

7 
	#WC_F_CP737
 0x02

	)

8 
	#WC_F_CP775
 0x03

	)

9 
	#WC_F_CP850
 0x04

	)

10 
	#WC_F_CP852
 0x05

	)

11 
	#WC_F_CP855
 0x06

	)

12 
	#WC_F_CP856
 0x07

	)

13 
	#WC_F_CP857
 0x08

	)

14 
	#WC_F_CP860
 0x09

	)

15 
	#WC_F_CP861
 0x0A

	)

16 
	#WC_F_CP862
 0x0B

	)

17 
	#WC_F_CP863
 0x0C

	)

18 
	#WC_F_CP864
 0x0D

	)

19 
	#WC_F_CP865
 0x0E

	)

20 
	#WC_F_CP866
 0x0F

	)

21 
	#WC_F_CP869
 0x10

	)

22 
	#WC_F_CP874
 0x11

	)

23 
	#WC_F_CP1006
 0x12

	)

24 
	#WC_F_CP1250
 0x13

	)

25 
	#WC_F_CP1251
 0x14

	)

26 
	#WC_F_CP1252
 0x15

	)

27 
	#WC_F_CP1253
 0x16

	)

28 
	#WC_F_CP1254
 0x17

	)

29 
	#WC_F_CP1255
 0x18

	)

30 
	#WC_F_CP1256
 0x19

	)

31 
	#WC_F_CP1257
 0x1A

	)

32 
	#WC_F_CP1258_1
 0x1B

	)

33 
	#WC_F_CP1258_2
 0x1C

	)

34 
	#WC_F_TCVN_5712_1
 0x1D

	)

35 
	#WC_F_TCVN_5712_2
 0x1E

	)

36 
	#WC_F_TCVN_5712_3
 0x1F

	)

37 
	#WC_F_VISCII_11_1
 0x20

	)

38 
	#WC_F_VISCII_11_2
 0x21

	)

39 
	#WC_F_VPS_1
 0x22

	)

40 
	#WC_F_VPS_2
 0x23

	)

41 
	#WC_F_KOI8_R
 0x24

	)

42 
	#WC_F_KOI8_U
 0x25

	)

43 
	#WC_F_NEXTSTEP
 0x26

	)

44 
	#WC_F_GBK_80
 0x27

	)

45 
	#WC_F_RAW
 0x28

	)

47 
	#WC_F_SPECIAL_W
 0x00

	)

48 
	#WC_F_BIG5
 0x01

	)

49 
	#WC_F_BIG5_1
 0x02

	)

50 
	#WC_F_BIG5_2
 0x03

	)

51 
	#WC_F_CNS_11643_8
 0x04

	)

52 
	#WC_F_CNS_11643_9
 0x05

	)

53 
	#WC_F_CNS_11643_10
 0x06

	)

54 
	#WC_F_CNS_11643_11
 0x07

	)

55 
	#WC_F_CNS_11643_12
 0x08

	)

56 
	#WC_F_CNS_11643_13
 0x09

	)

57 
	#WC_F_CNS_11643_14
 0x0A

	)

58 
	#WC_F_CNS_11643_15
 0x0B

	)

59 
	#WC_F_CNS_11643_16
 0x0C

	)

60 
	#WC_F_CNS_11643_X
 0x0D

	)

61 
	#WC_F_GB_12345
 0x0E

	)

62 
	#WC_F_JOHAB
 0x0F

	)

63 
	#WC_F_JOHAB_1
 0x10

	)

64 
	#WC_F_JOHAB_2
 0x11

	)

65 
	#WC_F_JOHAB_3
 0x12

	)

66 
	#WC_F_SJIS_EXT
 0x13

	)

67 
	#WC_F_SJIS_EXT_1
 0x14

	)

68 
	#WC_F_SJIS_EXT_2
 0x15

	)

69 
	#WC_F_GBK
 0x16

	)

70 
	#WC_F_GBK_1
 0x17

	)

71 
	#WC_F_GBK_2
 0x18

	)

72 
	#WC_F_GBK_EXT
 0x19

	)

73 
	#WC_F_GBK_EXT_1
 0x1A

	)

74 
	#WC_F_GBK_EXT_2
 0x1B

	)

75 
	#WC_F_UHC
 0x1C

	)

76 
	#WC_F_UHC_1
 0x1D

	)

77 
	#WC_F_UHC_2
 0x1E

	)

78 
	#WC_F_HKSCS
 0x1F

	)

79 
	#WC_F_HKSCS_1
 0x20

	)

80 
	#WC_F_HKSCS_2
 0x21

	)

82 
	#WC_F_UCS2
 0x00

	)

83 
	#WC_F_UCS4
 0x00

	)

84 
	#WC_F_UCS_TAG
 0x01

	)

85 
	#WC_F_GB18030
 0x02

	)

87 
	#WC_F_C1
 0x01

	)

89 
Så
 
wc_c⁄v_‰om_¥iv1
(Så 
is
, 
wc_˚s
 
˚s
);

90 
Så
 
wc_ch¨_c⁄v_‰om_¥iv1
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

91 
Så
 
wc_c⁄v_‰om_ascii
(Så 
is
, 
wc_˚s
 
˚s
);

92 
wc_push_to_øw
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

	@libwc/putc.c

2 
	~"wc.h
"

3 
	~"wtf.h
"

5 
wc_°©us
 
	gputc_°
;

6 
wc_˚s
 
	gputc_f_˚s
, 
	gputc_t_˚s
;

7 
Så
 
	gputc_°r
;

10 
	$wc_putc_öô
(
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
)

12 
	`wc_ouçut_öô
(
t_˚s
, &
putc_°
);

13 
putc_°r
 = 
	`Så√w_size
(8);

14 
putc_f_˚s
 = 
f_˚s
;

15 
putc_t_˚s
 = 
t_˚s
;

16 
	}
}

19 
	$wc_putc
(*
c
, 
FILE
 *
f
)

21 
wc_uch¨
 *
p
;

23 i‡(
putc_f_˚s
 !
WC_CES_WTF
)

24 
p
 = (
wc_uch¨
 *)
	`wc_c⁄v
(
c
, 
putc_f_˚s
, 
WC_CES_WTF
)->
±r
;

26 
p
 = (
wc_uch¨
 *)
c
;

28 
	`Så˛ór
(
putc_°r
);

29 *
p
)

30 (*
putc_°
.
˚s_öfo
->
push_to
)(
putc_°r
, 
	`wtf_∑r£
(&
p
), &putc_st);

31 
	`fwrôe
(
putc_°r
->
±r
, 1,Öutc_°r->
Àngth
, 
f
);

32 
	}
}

35 
	$wc_putc_íd
(
FILE
 *
f
)

37 
	`Så˛ór
(
putc_°r
);

38 
	`wc_push_íd
(
putc_°r
, &
putc_°
);

39 i‡(
putc_°r
->
Àngth
)

40 
	`fwrôe
(
putc_°r
->
±r
, 1,Öutc_°r->
Àngth
, 
f
);

41 
	}
}

44 
	$wc_putc_˛ór_°©us
()

46 i‡(
putc_°
.
˚s_öfo
->
id
 & 
WC_CES_T_ISO_2022
) {

47 
putc_°
.
gl
 = 0;

48 
putc_°
.
gr
 = 0;

49 
putc_°
.
ss
 = 0;

50 
putc_°
.
design
[0] = 0;

51 
putc_°
.
design
[1] = 0;

52 
putc_°
.
design
[2] = 0;

53 
putc_°
.
design
[3] = 0;

55 
	}
}

	@libwc/search.c

2 
	~<°dlib.h
>

3 
	~"wc.h
"

6 
	$m≠_cmp
(c⁄° *
a
, c⁄° *
b
)

8  *(
wc_uöt16
 *)
a
 - ((
wc_m≠
 *)
b
)->
code
;

9 
	}
}

12 
	$m≠3_cmp
(c⁄° *
a
, c⁄° *
b
)

14  *(
wc_uöt32
 *)
a
 - (((wc_uöt32)((
wc_m≠3
 *)
b
)->
code
 << 16Ë| ((wc_m≠3 *)b)->
code2
);

15 
	}
}

18 
	$m≠_ønge_cmp
(c⁄° *
a
, c⁄° *
b
)

20  (*(
wc_uöt16
 *)
a
 < ((
wc_m≠
 *)
b
)->
code
) ? -1

21 : ((*(
wc_uöt16
 *)
a
 > ((
wc_m≠
 *)
b
)->
code2
) ? 1 : 0);

22 
	}
}

25 
	$m≠2_ønge_cmp
(c⁄° *
a
, c⁄° *
b
)

27  (*(
wc_uöt16
 *)
a
 < ((
wc_m≠
 *)
b
)->
code
) ? -1

28 : ((*(
wc_uöt16
 *)
a
 >((
wc_m≠
 *)
b
 + 1)->
code
) ? 1 : 0);

29 
	}
}

32 
	$m≠3_ønge_cmp
(c⁄° *
a
, c⁄° *
b
)

34  (*(
wc_uöt16
 *)
a
 < ((
wc_m≠3
 *)
b
)->
code
) ? -1

35 : ((*(
wc_uöt16
 *)
a
 > ((
wc_m≠3
 *)
b
)->
code2
) ? 1 : 0);

36 
	}
}

38 
wc_m≠
 *

39 
	$wc_m≠_£¨ch
(
wc_uöt16
 
code
, 
wc_m≠
 *
m≠
, 
size_t
 
n
)

41  (
wc_m≠
 *)
	`b£¨ch
((*)&
code
, (*)
m≠
, 
n
, (wc_map),

42 
m≠_cmp
);

43 
	}
}

45 
wc_m≠3
 *

46 
	$wc_m≠3_£¨ch
(
wc_uöt16
 
c1
, wc_uöt16 
c2
, 
wc_m≠3
 *
m≠
, 
size_t
 
n
)

48 
wc_uöt32
 
code
 = ((wc_uöt32)
c1
 << 16Ë| 
c2
;

49  (
wc_m≠3
 *)
	`b£¨ch
((*)&
code
, (*)
m≠
, 
n
, (wc_map3),

50 
m≠3_cmp
);

51 
	}
}

53 
wc_m≠
 *

54 
	$wc_m≠_ønge_£¨ch
(
wc_uöt16
 
code
, 
wc_m≠
 *
m≠
, 
n
)

56  (
wc_m≠
 *)
	`b£¨ch
((*)&
code
, (*)
m≠
, 
n
, (wc_map),

57 
m≠_ønge_cmp
);

58 
	}
}

60 
wc_m≠
 *

61 
	$wc_m≠2_ønge_£¨ch
(
wc_uöt16
 
code
, 
wc_m≠
 *
m≠
, 
size_t
 
n
)

63  (
wc_m≠
 *)
	`b£¨ch
((*)&
code
, (*)
m≠
, 
n
, (wc_map),

64 
m≠2_ønge_cmp
);

65 
	}
}

67 
wc_m≠3
 *

68 
	$wc_m≠3_ønge_£¨ch
(
wc_uöt16
 
code
, 
wc_m≠3
 *
m≠
, 
size_t
 
n
)

70  (
wc_m≠3
 *)
	`b£¨ch
((*)&
code
, (*)
m≠
, 
n
, (wc_map3),

71 
m≠3_ønge_cmp
);

72 
	}
}

	@libwc/search.h

2 #i‚de‡
_WC_SEARCH_H


3 
	#_WC_SEARCH_H


	)

5 
wc_m≠
 *
wc_m≠_£¨ch
(
wc_uöt16
 
code
, wc_m≠ *
m≠
, 
size_t
 
n
);

6 
wc_m≠3
 *
wc_m≠3_£¨ch
(
wc_uöt16
 
c1
, wc_uöt16 
c2
, wc_m≠3 *
m≠
, 
size_t
 
n
);

7 
wc_m≠
 *
wc_m≠_ønge_£¨ch
(
wc_uöt16
 
code
, wc_m≠ *
m≠
, 
size_t
 
n
);

8 
wc_m≠
 *
wc_m≠2_ønge_£¨ch
(
wc_uöt16
 
code
, wc_m≠ *
m≠
, 
size_t
 
n
);

9 
wc_m≠3
 *
wc_m≠3_ønge_£¨ch
(
wc_uöt16
 
code
, wc_m≠3 *
m≠
, 
size_t
 
n
);

	@libwc/sjis.c

2 
	~"wc.h
"

3 
	~"sjis.h
"

4 
	~"jis.h
"

5 
	~"wtf.h
"

6 
	~"ucs.h
"

8 
	~"m≠/jisx02132_sjis.m≠
"

9 
wc_uch¨
 *
	gwc_jisx0212_jisx02132_m≠
 = 
jisx02132_sjis_m≠
;

11 
	#C0
 
WC_SJIS_MAP_C0


	)

12 
	#GL
 
WC_SJIS_MAP_GL


	)

13 
	#LB
 
WC_SJIS_MAP_LB


	)

14 
	#S80
 
WC_SJIS_MAP_80


	)

15 
	#SK
 
WC_SJIS_MAP_SK


	)

16 
	#SL
 
WC_SJIS_MAP_SL


	)

17 
	#SH
 
WC_SJIS_MAP_SH


	)

18 
	#SX
 
WC_SJIS_MAP_SX


	)

19 
	#C1
 
WC_SJIS_MAP_C1


	)

20 
	#SA0
 
WC_SJIS_MAP_A0


	)

22 
wc_uöt8
 
	gWC_SJIS_MAP
[ 0x100 ] = {

23 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

24 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

25 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

26 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

27 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

28 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

29 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

30 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
C0
,

32 
S80
,
SL
, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL,

33 
SL
, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL, SL,

34 
SA0
,
SK
, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK,

35 
SK
, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK,

36 
SK
, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK,

37 
SK
, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK, SK,

38 
SH
, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH, SH,

39 
SX
, SX, SX, SX, SX, SX, SX, SX, SX, SX, SX, SX, SX, 
C1
, C1, C1,

42 
	#sjis_to_jisx0208
(
ub
, 
lb
) \

44 
ub
 -= (ub < 0xa0) ? 0x81 : 0xc1; \

45 
ub
 = (ub << 1) + 0x21; \

46 i‡(
lb
 < 0x9f) { \

47 
lb
 -= (lb > 0x7e) ? 0x20 : 0x1f; \

49 
ub
++; \

50 
lb
 -= 0x7e; \

52 }

	)

53 
	#sjis_to_jisx02132
(
ub
, 
lb
) \

55 i‡(
lb
 < 0x9f) { \

56 
ub
 = 
sjis1_jisx02132_m≠
[ub - 0xf0]; \

57 
lb
 -= (lb > 0x7e) ? 0x20 : 0x1f; \

59 
ub
 = 
sjis2_jisx02132_m≠
[ub - 0xf0]; \

60 
lb
 -= 0x7e; \

62 }

	)

63 
	#jisx0208_to_sjis
(
ub
, 
lb
) \

65 
lb
 +(
ub
 & 1) ? 0x1f : 0x7d; \

66 i‡(
lb
 > 0x7e) \

67 
lb
++; \

68 
ub
 = (ub - 0x21) >> 1; \

69 
ub
 += (ub < 0x1f) ? 0x81 : 0xc1; \

70 }

	)

71 
	#jisx02132_to_sjis
(
ub
, 
lb
) \

73 
lb
 +(
ub
 & 1) ? 0x1f : 0x7d; \

74 i‡(
lb
 > 0x7e) \

75 
lb
++; \

76 
ub
 = 
jisx02132_sjis_m≠
[ ub ]; \

77 }

	)

79 
wc_wch¨_t


80 
	$wc_sjis_to_jis
(
wc_wch¨_t
 
cc
)

82 
wc_uch¨
 
ub
, 
lb
;

84 
ub
 = 
cc
.
code
 >> 8;

85 
lb
 = 
cc
.
code
 & 0xff;

86 i‡(
ub
 < 0xf0) {

87 
	`sjis_to_jisx0208
(
ub
, 
lb
);

88 
cc
.
ccs
 = 
WC_CCS_JIS_X_0208
;

90 
	`sjis_to_jisx02132
(
ub
, 
lb
);

91 
cc
.
ccs
 = 
WC_CCS_JIS_X_0213_2
;

93 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

94  
cc
;

95 
	}
}

97 
wc_wch¨_t


98 
	$wc_jis_to_sjis
(
wc_wch¨_t
 
cc
)

100 
wc_uch¨
 
ub
, 
lb
;

102 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

103 
lb
 = 
cc
.
code
 & 0x7f;

104 i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0213_2
) {

105 
	`jisx02132_to_sjis
(
ub
, 
lb
);

106 i‡(! 
ub
) {

107 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

108  
cc
;

111 
	`jisx0208_to_sjis
(
ub
, 
lb
);

113 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

114  
cc
;

115 
	}
}

117 
wc_wch¨_t


118 
	$wc_sjis_ext_to_cs94w
(
wc_wch¨_t
 
cc
)

120 
wc_uch¨
 
ub
, 
lb
;

122 
ub
 = 
cc
.
code
 >> 8;

123 
lb
 = 
cc
.
code
 & 0xff;

124 
	`sjis_to_jisx0208
(
ub
, 
lb
);

125 i‡(
ub
 <= 0x7e) {

126 
cc
.
ccs
 = 
WC_CCS_SJIS_EXT_1
;

128 
ub
 -= 0x5e;

129 
cc
.
ccs
 = 
WC_CCS_SJIS_EXT_2
;

131 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

132  
cc
;

133 
	}
}

135 
wc_wch¨_t


136 
	$wc_cs94w_to_sjis_ext
(
wc_wch¨_t
 
cc
)

138 
wc_uch¨
 
ub
, 
lb
;

140 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

141 
lb
 = 
cc
.
code
 & 0x7f;

142 i‡(
cc
.
ccs
 =
WC_CCS_SJIS_EXT_2
)

143 
ub
 += 0x5e;

144 
	`jisx0208_to_sjis
(
ub
, 
lb
);

145 
cc
.
ccs
 = 
WC_CCS_SJIS_EXT
;

146 
cc
.
code
 = ((
wc_uöt32
)
ub
 << 8Ë| 
lb
;

147  
cc
;

148 
	}
}

150 
wc_uöt32


151 
	$wc_sjis_ext1_to_N
(
wc_uöt32
 
c
)

153 
wc_uch¨
 
ub
;

155 
ub
 = (
c
 >> 8) & 0x7f;

156 
ub
) {

158 
ub
 = 0;

164 
ub
 -= 0x78;

167  
WC_C_SJIS_ERROR
;

169  
ub
 * 0x5ê+ (
c
 & 0x7f) - 0x21;

170 
	}
}

172 
wc_uöt32


173 
	$wc_sjis_ext2_to_N
(
wc_uöt32
 
c
)

175 
wc_uch¨
 
ub
;

177 
ub
 = (
c
 >> 8) & 0x7f;

178 
ub
) {

184 
ub
 -= 0x30;

187  
WC_C_SJIS_ERROR
;

189  
ub
 * 0x5ê+ (
c
 & 0x7f) - 0x21;

190 
	}
}

192 
Så


193 
	$wc_c⁄v_‰om_sjis
(
Så
 
is
, 
wc_˚s
 
˚s
)

195 
Så
 
os
;

196 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

197 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

198 
wc_uch¨
 *
p
;

199 
wc_uch¨
 
jis
[2];

200 
°©e
 = 
WC_SJIS_NOSTATE
;

201 
wc_wch¨_t
 
cc
;

203 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

205 i‡(
p
 =
ï
)

206  
is
;

207 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

208 i‡(
p
 > 
•
)

209 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

211 ; 
p
 < 
ï
;Ö++) {

212 
°©e
) {

213 
WC_SJIS_NOSTATE
:

214 
WC_SJIS_MAP
[*
p
]) {

215 
SL
:

216 
°©e
 = 
WC_SJIS_SHIFT_L
;

218 
SH
:

219 
°©e
 = 
WC_SJIS_SHIFT_H
;

221 
SX
:

222 
°©e
 = 
WC_SJIS_SHIFT_X
;

224 
SK
:

225 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0201K
, (
wc_uöt32
)*
p
);

227 
S80
:

228 
SA0
:

229 
C1
:

230 
	`wtf_push_unknown
(
os
, 
p
, 1);

233 
	`Såˇt_ch¨
(
os
, ()*
p
);

237 
WC_SJIS_SHIFT_L
:

238 
WC_SJIS_SHIFT_H
:

239 i‡(
WC_SJIS_MAP
[*
p
] & 
LB
) {

240 
jis
[0] = *(
p
-1);

241 
jis
[1] = *
p
;

242 
	`sjis_to_jisx0208
(
jis
[0], jis[1]);

243 
cc
.
code
 = ((
wc_uöt32
)
jis
[0] << 8) | jis[1];

244 
cc
.
ccs
 = 
	`wc_jisx0208_‹_jisx02131
(cc.
code
);

245 i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0208
)

246 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

248 
	`wtf_push
(
os
, 
WC_CCS_SJIS_EXT
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

250 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

251 
°©e
 = 
WC_SJIS_NOSTATE
;

253 
WC_SJIS_SHIFT_X
:

254 i‡(
WC_SJIS_MAP
[*
p
] & 
LB
)

255 
	`wtf_push
(
os
, 
WC_CCS_SJIS_EXT
, ((
wc_uöt32
)*(
p
-1) << 8) | *p);

257 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

258 
°©e
 = 
WC_SJIS_NOSTATE
;

262 
°©e
) {

263 
WC_SJIS_SHIFT_L
:

264 
WC_SJIS_SHIFT_H
:

265 
WC_SJIS_SHIFT_X
:

266 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

269  
os
;

270 
	}
}

272 
Så


273 
	$wc_c⁄v_‰om_sjisx0213
(
Så
 
is
, 
wc_˚s
 
˚s
)

275 
Så
 
os
;

276 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

277 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

278 
wc_uch¨
 *
p
;

279 
wc_uch¨
 
jis
[2];

280 
°©e
 = 
WC_SJIS_NOSTATE
;

281 
wc_wch¨_t
 
cc
;

283 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

285 i‡(
p
 =
ï
)

286  
is
;

287 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

288 i‡(
p
 > 
•
)

289 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

291 ; 
p
 < 
ï
;Ö++) {

292 
°©e
) {

293 
WC_SJIS_NOSTATE
:

294 
WC_SJIS_MAP
[*
p
]) {

295 
SL
:

296 
°©e
 = 
WC_SJIS_SHIFT_L
;

298 
SH
:

299 
°©e
 = 
WC_SJIS_SHIFT_H
;

301 
SX
:

302 
°©e
 = 
WC_SJIS_SHIFT_X
;

304 
SK
:

305 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0201K
, (
wc_uöt32
)*
p
);

307 
S80
:

308 
SA0
:

309 
C1
:

310 
	`wtf_push_unknown
(
os
, 
p
, 1);

313 
	`Såˇt_ch¨
(
os
, ()*
p
);

317 
WC_SJIS_SHIFT_L
:

318 
WC_SJIS_SHIFT_H
:

319 i‡(
WC_SJIS_MAP
[*
p
] & 
LB
) {

320 
jis
[0] = *(
p
-1);

321 
jis
[1] = *
p
;

322 
	`sjis_to_jisx0208
(
jis
[0], jis[1]);

323 
cc
.
code
 = ((
wc_uöt32
)
jis
[0] << 8) | jis[1];

324 
cc
.
ccs
 = 
	`wc_jisx0208_‹_jisx02131
(cc.
code
);

325 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

327 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

328 
°©e
 = 
WC_SJIS_NOSTATE
;

330 
WC_SJIS_SHIFT_X
:

331 i‡(
WC_SJIS_MAP
[*
p
] & 
LB
) {

332 
jis
[0] = *(
p
-1);

333 
jis
[1] = *
p
;

334 
	`sjis_to_jisx02132
(
jis
[0], jis[1]);

335 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0213_2
, ((
wc_uöt32
)
jis
[0] << 8) | jis[1]);

337 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

338 
°©e
 = 
WC_SJIS_NOSTATE
;

342 
°©e
) {

343 
WC_SJIS_SHIFT_L
:

344 
WC_SJIS_SHIFT_H
:

345 
WC_SJIS_SHIFT_X
:

346 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

349  
os
;

350 
	}
}

353 
	$wc_push_to_sjis
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

355 
wc_uch¨
 
ub
, 
lb
;

358 
cc
.
ccs
) {

359 
WC_CCS_US_ASCII
:

360 
	`Såˇt_ch¨
(
os
, 
cc
.
code
);

362 
WC_CCS_JIS_X_0201K
:

363 i‡(
WcO±i⁄
.
u£_jisx0201k
) {

364 
	`Såˇt_ch¨
(
os
, 
cc
.
code
 | 0x80);

366 } i‡(
WcO±i⁄
.
fix_width_c⁄v
)

367 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

369 
cc
 = 
	`wc_jisx0201k_to_jisx0208
(cc);

371 
WC_CCS_JIS_X_0208
:

372 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

373 
lb
 = 
cc
.
code
 & 0x7f;

374 
	`jisx0208_to_sjis
(
ub
, 
lb
);

375 
	`Såˇt_ch¨
(
os
, 
ub
);

376 
	`Såˇt_ch¨
(
os
, 
lb
);

378 
WC_CCS_SJIS_EXT_1
:

379 
WC_CCS_SJIS_EXT_2
:

380 
cc
 = 
	`wc_cs94w_to_sjis_ext
(cc);

381 
WC_CCS_SJIS_EXT
:

382 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

383 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

385 
WC_CCS_UNKNOWN_W
:

386 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

387 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

389 
WC_CCS_UNKNOWN
:

390 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

391 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

394 #ifde‡
USE_UNICODE


395 i‡(
WcO±i⁄
.
ucs_c⁄v
)

396 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

399 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

403 
	}
}

406 
	$wc_push_to_sjisx0213
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

408 
wc_uch¨
 
ub
, 
lb
;

411 
cc
.
ccs
) {

412 
WC_CCS_US_ASCII
:

413 
	`Såˇt_ch¨
(
os
, 
cc
.
code
);

415 
WC_CCS_JIS_X_0201K
:

416 i‡(
WcO±i⁄
.
u£_jisx0201k
) {

417 
	`Såˇt_ch¨
(
os
, 
cc
.
code
 | 0x80);

419 } i‡(
WcO±i⁄
.
fix_width_c⁄v
)

420 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

422 
cc
 = 
	`wc_jisx0201k_to_jisx0208
(cc);

424 
WC_CCS_JIS_X_0213_1
:

425 i‡(! 
WcO±i⁄
.
u£_jisx0213
) {

426 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

429 
WC_CCS_JIS_X_0208
:

430 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

431 
lb
 = 
cc
.
code
 & 0x7f;

432 
	`jisx0208_to_sjis
(
ub
, 
lb
);

433 
	`Såˇt_ch¨
(
os
, 
ub
);

434 
	`Såˇt_ch¨
(
os
, 
lb
);

436 
WC_CCS_JIS_X_0213_2
:

437 i‡(! 
WcO±i⁄
.
u£_jisx0213
) {

438 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

441 
ub
 = (
cc
.
code
 >> 8) & 0x7f;

442 
lb
 = 
cc
.
code
 & 0x7f;

443 
	`jisx02132_to_sjis
(
ub
, 
lb
);

444 i‡(
ub
) {

445 
	`Såˇt_ch¨
(
os
, 
ub
);

446 
	`Såˇt_ch¨
(
os
, 
lb
);

449 
WC_CCS_UNKNOWN_W
:

450 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

451 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

453 
WC_CCS_UNKNOWN
:

454 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

455 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

458 #ifde‡
USE_UNICODE


459 i‡(
WcO±i⁄
.
ucs_c⁄v
)

460 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

463 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

467 
	}
}

469 
Så


470 
	$wc_ch¨_c⁄v_‰om_sjis
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

472 
Så
 
os
;

473 
wc_uch¨
 
jis
[2];

474 
wc_wch¨_t
 
cc
;

476 i‡(
°
->
°©e
 == -1) {

477 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

478 
os
 = 
	`Så√w_size
(8);

481 
°
->
°©e
) {

482 
WC_SJIS_NOSTATE
:

483 
WC_SJIS_MAP
[
c
]) {

484 
SL
:

485 
jis
[0] = 
c
;

486 
°
->
°©e
 = 
WC_SJIS_SHIFT_L
;

487  
NULL
;

488 
SH
:

489 
jis
[0] = 
c
;

490 
°
->
°©e
 = 
WC_SJIS_SHIFT_H
;

491  
NULL
;

492 
SX
:

493 
jis
[0] = 
c
;

494 
°
->
°©e
 = 
WC_SJIS_SHIFT_X
;

495  
NULL
;

496 
SK
:

497 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0201K
, (
wc_uöt32
)
c
);

499 
S80
:

500 
SA0
:

501 
C1
:

504 
	`Såˇt_ch¨
(
os
, ()
c
);

508 
WC_SJIS_SHIFT_L
:

509 
WC_SJIS_SHIFT_H
:

510 i‡(
WC_SJIS_MAP
[
c
] & 
LB
) {

511 
jis
[1] = 
c
;

512 
	`sjis_to_jisx0208
(
jis
[0], jis[1]);

513 
cc
.
code
 = ((
wc_uöt32
)
jis
[0] << 8) | jis[1];

514 
cc
.
ccs
 = 
	`wc_jisx0208_‹_jisx02131
(cc.
code
);

515 i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0208
)

516 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

518 
	`wtf_push
(
os
, 
WC_CCS_SJIS_EXT
, ((
wc_uöt32
)
jis
[0] << 8) | jis[1]);

520 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

522 
WC_SJIS_SHIFT_X
:

523 i‡(
WC_SJIS_MAP
[
c
] & 
LB
) {

524 
jis
[1] = 
c
;

525 
	`wtf_push
(
os
, 
WC_CCS_SJIS_EXT
, ((
wc_uöt32
)
jis
[0] << 8) | jis[1]);

527 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

530 
°
->
°©e
 = -1;

531  
os
;

532 
	}
}

534 
Så


535 
	$wc_ch¨_c⁄v_‰om_sjisx0213
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

537 
Så
 
os
;

538 
wc_uch¨
 
jis
[2];

539 
wc_wch¨_t
 
cc
;

541 i‡(
°
->
°©e
 == -1) {

542 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

543 
os
 = 
	`Så√w_size
(8);

546 
°
->
°©e
) {

547 
WC_SJIS_NOSTATE
:

548 
WC_SJIS_MAP
[
c
]) {

549 
SL
:

550 
jis
[0] = 
c
;

551 
°
->
°©e
 = 
WC_SJIS_SHIFT_L
;

552  
NULL
;

553 
SH
:

554 
jis
[0] = 
c
;

555 
°
->
°©e
 = 
WC_SJIS_SHIFT_H
;

556  
NULL
;

557 
SX
:

558 
jis
[0] = 
c
;

559 
°
->
°©e
 = 
WC_SJIS_SHIFT_X
;

560  
NULL
;

561 
SK
:

562 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0201K
, (
wc_uöt32
)
c
);

564 
S80
:

565 
SA0
:

566 
C1
:

569 
	`Såˇt_ch¨
(
os
, ()
c
);

573 
WC_SJIS_SHIFT_L
:

574 
WC_SJIS_SHIFT_H
:

575 i‡(
WC_SJIS_MAP
[
c
] & 
LB
) {

576 
jis
[1] = 
c
;

577 
	`sjis_to_jisx0208
(
jis
[0], jis[1]);

578 
cc
.
code
 = ((
wc_uöt32
)
jis
[0] << 8) | jis[1];

579 
cc
.
ccs
 = 
	`wc_jisx0208_‹_jisx02131
(cc.
code
);

580 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

582 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

584 
WC_SJIS_SHIFT_X
:

585 i‡(
WC_SJIS_MAP
[
c
] & 
LB
) {

586 
jis
[1] = 
c
;

587 
	`sjis_to_jisx02132
(
jis
[0], jis[1]);

588 
	`wtf_push
(
os
, 
WC_CCS_JIS_X_0213_2
, ((
wc_uöt32
)
jis
[0] << 8) | jis[1]);

590 
°
->
°©e
 = 
WC_SJIS_NOSTATE
;

593 
°
->
°©e
 = -1;

594  
os
;

595 
	}
}

	@libwc/sjis.h

2 #i‚de‡
_WC_SJIS_H


3 
	#_WC_SJIS_H


	)

5 
	#WC_C_SJIS_ERROR
 0xFFFFFFFFU

	)

7 
	#WC_SJIS_NOSTATE
 0

	)

8 
	#WC_SJIS_SHIFT_L
 1

	)

9 
	#WC_SJIS_SHIFT_H
 2

	)

10 
	#WC_SJIS_SHIFT_X
 3

	)

12 
	#WC_SJIS_MAP_C0
 0x0

	)

13 
	#WC_SJIS_MAP_GL
 0x1

	)

14 
	#WC_SJIS_MAP_LB
 0x10

	)

15 
	#WC_SJIS_MAP_UB
 0x20

	)

16 
	#WC_SJIS_MAP_80
 (0x2 | 
WC_SJIS_MAP_LB
)

	)

17 
	#WC_SJIS_MAP_SK
 (0x3 | 
WC_SJIS_MAP_LB
)

	)

18 
	#WC_SJIS_MAP_SL
 (0x4 | 
WC_SJIS_MAP_UB
 | 
WC_SJIS_MAP_LB
)

	)

19 
	#WC_SJIS_MAP_SH
 (0x5 | 
WC_SJIS_MAP_UB
 | 
WC_SJIS_MAP_LB
)

	)

20 
	#WC_SJIS_MAP_SX
 (0x6 | 
WC_SJIS_MAP_UB
 | 
WC_SJIS_MAP_LB
)

	)

21 
	#WC_SJIS_MAP_A0
 (0x7 | 
WC_SJIS_MAP_LB
)

	)

22 
	#WC_SJIS_MAP_C1
 0x40

	)

24 
wc_uöt8
 
WC_SJIS_MAP
[];

26 
wc_wch¨_t
 
wc_sjis_to_jis
(wc_wch¨_à
cc
);

27 
wc_wch¨_t
 
wc_jis_to_sjis
(wc_wch¨_à
cc
);

28 
wc_wch¨_t
 
wc_sjis_ext_to_cs94w
(wc_wch¨_à
cc
);

29 
wc_wch¨_t
 
wc_cs94w_to_sjis_ext
(wc_wch¨_à
cc
);

30 
wc_uöt32
 
wc_sjis_ext1_to_N
(wc_uöt32 
cc
);

31 
wc_uöt32
 
wc_sjis_ext2_to_N
(wc_uöt32 
cc
);

32 
Så
 
wc_c⁄v_‰om_sjis
(Så 
is
, 
wc_˚s
 
˚s
);

33 
Så
 
wc_c⁄v_‰om_sjisx0213
(Så 
is
, 
wc_˚s
 
˚s
);

34 
wc_push_to_sjis
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

35 
wc_push_to_sjisx0213
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

36 
Så
 
wc_ch¨_c⁄v_‰om_sjis
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

37 
Så
 
wc_ch¨_c⁄v_‰om_sjisx0213
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/status.c

2 
	~<°rög.h
>

3 
	~<gc.h
>

4 
	#New_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC
(“)*—y≥)))

	)

6 
	~"wc.h
"

7 #ifde‡
USE_UNICODE


8 
	~"ucs.h
"

11 
wc_›ti⁄
 
	gWcO±i⁄
 = {

12 
WC_OPT_DETECT_ON
,

13 
WC_TRUE
,

14 
WC_TRUE
,

15 
WC_TRUE
,

16 
WC_FALSE
,

17 
WC_TRUE
,

18 
WC_FALSE
,

19 
WC_FALSE
,

20 
WC_FALSE
,

21 
WC_FALSE
,

22 
WC_FALSE
,

23 
WC_FALSE
,

24 
WC_TRUE
,

25 
WC_FALSE
,

26 
WC_FALSE
,

27 
WC_TRUE
,

30 
wc_°©us
 
	gouçut_°
;

31 
wc_›ti⁄
 
	gouçut_›ti⁄
;

32 
wc_boﬁ
 
	gouçut_£t
 = 
WC_FALSE
;

34 
	#wc_›ti⁄_cmp
(
›t1
, 
›t2
) \

35 
	`memcmp
((*)(
›t1
), (*)(
›t2
), (
wc_›ti⁄
))

	)

38 
	$wc_öput_öô
(
wc_˚s
 
˚s
, 
wc_°©us
 *
°
)

40 
wc_g£t
 *
g£t
;

41 
i
, 
g
;

43 
°
->
˚s_öfo
 = &
WcCesInfo
[
	`WC_CES_INDEX
(
˚s
)];

44 
g£t
 = 
°
->
˚s_öfo
->gset;

46 
°
->
°©e
 = 0;

47 
°
->
g0_ccs
 = 0;

48 
°
->
g1_ccs
 = 0;

49 
°
->
design
[0] = 
g£t
[0].
ccs
;

50 
°
->
design
[1] = 
g£t
[1].
ccs
;

51 
°
->
design
[2] = 0;

52 
°
->
design
[3] = 0;

53 
°
->
gl
 = 0;

54 
°
->
gr
 = 1;

55 
°
->
ss
 = 0;

57 
i
 = 0; 
g£t
[i].
ccs
; i++) {

58 i‡(
g£t
[
i
].
öô
) {

59 
g
 = 
g£t
[
i
].g & 0x03;

60 i‡(! 
°
->
design
[
g
])

61 
°
->
design
[
g
] = 
g£t
[
i
].
ccs
;

65 #ifde‡
USE_UNICODE


66 
°
->
èg
 = 
NULL
;

67 
°
->
¡ag
 = 0;

69 
	}
}

72 
	$wc_ouçut_öô
(
wc_˚s
 
˚s
, 
wc_°©us
 *
°
)

74 
wc_g£t
 *
g£t
;

75 #ifde‡
USE_UNICODE


76 
size_t
 
i
, 
n
, 
nw
;

79 i‡(
ouçut_£t
 && 
˚s
 =
ouçut_°
.
˚s_öfo
->
id
 &&

80 ! 
	`wc_›ti⁄_cmp
(&
WcO±i⁄
, &
ouçut_›ti⁄
)) {

81 *
°
 = 
ouçut_°
;

85 
°
->
°©e
 = 0;

86 
°
->
˚s_öfo
 = &
WcCesInfo
[
	`WC_CES_INDEX
(
˚s
)];

87 
g£t
 = 
°
->
˚s_öfo
->gset;

89 
°
->
g0_ccs
 = ((
˚s
 =
WC_CES_ISO_2022_JP
 || ce†=
WC_CES_ISO_2022_JP_2
 ||

90 
˚s
 =
WC_CES_ISO_2022_JP_3
Ë&& 
WcO±i⁄
.
u£_jisx0201
)

91 ? 
WC_CCS_JIS_X_0201
 : 
g£t
[0].
ccs
;

92 
°
->
g1_ccs
 = ((
˚s
 =
WC_CES_ISO_2022_JP
 || ce†=
WC_CES_ISO_2022_JP_2
 ||

93 
˚s
 =
WC_CES_ISO_2022_JP_3
Ë&& 
WcO±i⁄
.
u£_jisc6226
)

94 ? 
WC_CCS_JIS_C_6226
 : 
g£t
[1].
ccs
;

95 
°
->
design
[0] = st->
g0_ccs
;

96 
°
->
design
[1] = 0;

97 
°
->
design
[2] = 0;

98 
°
->
design
[3] = 0;

99 
°
->
gl
 = 0;

100 
°
->
gr
 = 0;

101 
°
->
ss
 = 0;

103 i‡(
˚s
 & 
WC_CES_T_ISO_2022
)

104 
	`wc_¸óã_gm≠
(
°
);

106 #ifde‡
USE_UNICODE


107 
°
->
èg
 = 
NULL
;

108 
°
->
¡ag
 = 0;

110 i‡(! 
WcO±i⁄
.
ucs_c⁄v
) {

111 
°
->
éi°
 = 
NULL
;

112 
°
->
éi°w
 = 
NULL
;

115 
i
 = 
n
 = 
nw
 = 0; 
g£t
[i].
ccs
; i++) {

116 i‡(
	`WC_CCS_IS_WIDE
(
g£t
[
i
].
ccs
))

117 
nw
++;

119 
n
++;

121 
°
->
éi°
 = 
	`New_N
(
wc_èbÀ
 *, 
n
 + 1);

122 
°
->
éi°w
 = 
	`New_N
(
wc_èbÀ
 *, 
nw
 + 1);

123 
i
 = 
n
 = 
nw
 = 0; 
g£t
[i].
ccs
; i++) {

124 i‡(
	`WC_CCS_IS_WIDE
(
g£t
[
i
].
ccs
)) {

125 
g£t
[
i
].
ccs
) {

126 
WC_CCS_JIS_X_0212
:

127 i‡(! 
WcO±i⁄
.
u£_jisx0212
)

130 
WC_CCS_JIS_X_0213_1
:

131 
WC_CCS_JIS_X_0213_2
:

132 i‡(! 
WcO±i⁄
.
u£_jisx0213
)

135 
WC_CCS_GB_2312
:

136 i‡(
WcO±i⁄
.
u£_gb12345_m≠
 &&

137 
˚s
 !
WC_CES_GBK
 && ce†!
WC_CES_GB18030
) {

138 
°
->
éi°w
[
nw
++] = 
	`wc_gë_ucs_èbÀ
(
WC_CCS_GB_12345
);

143 
°
->
éi°w
[
nw
++] = 
	`wc_gë_ucs_èbÀ
(
g£t
[
i
].
ccs
);

145 
g£t
[
i
].
ccs
) {

146 
WC_CCS_JIS_X_0201K
:

147 i‡(! 
WcO±i⁄
.
u£_jisx0201k
)

151 
°
->
éi°
[
n
++] = 
	`wc_gë_ucs_èbÀ
(
g£t
[
i
].
ccs
);

154 
°
->
éi°
[
n
] = 
NULL
;

155 
°
->
éi°w
[
nw
] = 
NULL
;

159 
ouçut_°
 = *
°
;

160 
ouçut_£t
 = 
WC_TRUE
;

161 
ouçut_›ti⁄
 = 
WcO±i⁄
;

162 
	}
}

164 
wc_boﬁ


165 
	$wc_˚s_has_ccs
(
wc_ccs
 
ccs
, 
wc_°©us
 *
°
)

167 
wc_g£t
 *
g£t
 = 
°
->
˚s_öfo
->gset;

168 
i
;

170 
i
 = 0; 
g£t
[i].
ccs
; i++) {

171 i‡(
ccs
 =
g£t
[
i
].ccs)

172  
WC_TRUE
;

174  
WC_FALSE
;

175 
	}
}

	@libwc/test.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"wc.h
"

7 
	$maö
(
¨gc
, **
¨gv
)

9 
Så
 
s
 = 
	`Så√w
();

10 
wc_˚s
 
ﬁd
, 
‰om
, 
to
;

11 
FILE
 *
f
;

13 i‡(
¨gc
 < 3) {

14 
	`Ârötf
(
°dîr
, "wctest <form> <to> [<file>]\n");

15 
	`exô
(1);

18 
‰om
 = 
	`wc_guess_ch¨£t_sh‹t
(
¨gv
[1], 0);

19 
to
 = 
	`wc_guess_ch¨£t_sh‹t
(
¨gv
[2], 0);

20 i‡(
¨gc
 > 3)

21 
f
 = 
	`f›í
(
¨gv
[3], "r");

23 
f
 = 
°dö
;

24 i‡(
f
 =
NULL
Ë
	`exô
(2);

26 
	`Ârötf
(
°dîr
, "%†-> %s\n", 
	`wc_˚s_to_ch¨£t
(
‰om
), wc_˚s_to_ch¨£t(
to
));

28 
s
 = 
	`Såfgës
(
f
);

29 i‡(!
s
->
Àngth
)

31 
ﬁd
 = 
‰om
;

32 
s
 = 
	`wc_Så_c⁄v_wôh_dëe˘
(s, &
‰om
, from, 
to
);

33 i‡(
‰om
 !
ﬁd
)

34 
	`Ârötf
(
°dîr
, "%†->\n", 
	`wc_˚s_to_ch¨£t
(
‰om
));

35 
	`¥ötf
("%s", 
s
->
±r
);

38 
	}
}

	@libwc/ucs.c

2 #ifde‡
USE_UNICODE


4 
	~<°dlib.h
>

5 
	~"wc.h
"

6 
	~"ucs.h
"

7 
	~"£¨ch.h
"

8 
	~"big5.h
"

9 
	~"hkscs.h
"

10 
	~"sjis.h
"

11 
	~"johab.h
"

12 
	~"gbk.h
"

13 
	~"gb18030.h
"

14 
	~"uhc.h
"

15 
	~"võt.h
"

16 
	~"wtf.h
"

18 
	~"ucs.m≠
"

20 
	~"m≠/ucs_wide.m≠
"

21 
	~"m≠/ucs_comböög.m≠
"

22 
	~"m≠/ucs_¥ecompo£.m≠
"

23 
	~"m≠/ucs_h™gul.m≠
"

24 
	~"m≠/ucs_fuŒwidth.m≠
"

26 
	#MAX_TAG_MAP
 0x100

	)

27 
	gn_èg_m≠
 = 0;

28 *
	gèg_m≠
[ 
MAX_TAG_MAP
 ];

30 
wc_èbÀ
 *

31 
	$wc_gë_ucs_èbÀ
(
wc_ccs
 
ccs
)

33 
f
 = 
	`WC_CCS_INDEX
(
ccs
);

35 
	`WC_CCS_TYPE
(
ccs
)) {

36 
WC_CCS_A_CS94
:

37 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS94_END
)

38  
NULL
;

39  &
ucs_cs94_èbÀ
[
f
 - 
WC_F_ISO_BASE
];

40 
WC_CCS_A_CS94W
:

41 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS94W_END
)

42  
NULL
;

43  &
ucs_cs94w_èbÀ
[
f
 - 
WC_F_ISO_BASE
];

44 
WC_CCS_A_CS96
:

45 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS96_END
)

46  
NULL
;

47  &
ucs_cs96_èbÀ
[
f
 - 
WC_F_ISO_BASE
];

48 
WC_CCS_A_CS96W
:

49 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS96W_END
)

50  
NULL
;

51  &
ucs_cs96w_èbÀ
[
f
 - 
WC_F_ISO_BASE
];

52 
WC_CCS_A_CS942
:

53 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS942_END
)

54  
NULL
;

55  &
ucs_cs942_èbÀ
[
f
 - 
WC_F_ISO_BASE
];

56 
WC_CCS_A_PCS
:

57 i‡(
f
 < 
WC_F_PCS_BASE
 || f > 
WC_F_PCS_END
)

58  
NULL
;

59  &
ucs_pcs_èbÀ
[
f
 - 
WC_F_PCS_BASE
];

60 
WC_CCS_A_PCSW
:

61 i‡(
f
 < 
WC_F_PCS_BASE
 || f > 
WC_F_PCSW_END
)

62  
NULL
;

63  &
ucs_pcsw_èbÀ
[
f
 - 
WC_F_PCS_BASE
];

65  
NULL
;

67 
	}
}

69 
wc_wch¨_t


70 
	$wc_ucs_to_™y
(
wc_uöt32
 
ucs
, 
wc_èbÀ
 *
t
)

72 
wc_wch¨_t
 
cc
;

73 
wc_m≠
 *
m≠
;

75 i‡(
t
 &&Å->
m≠
 && 
ucs
 && uc†<
WC_C_UCS2_END
) {

76 
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)
ucs
, 
t
->m≠,Å->
n
);

77 i‡(
m≠
)

78  
t
->
	`c⁄v
—->
ccs
, 
m≠
->
code2
);

80 i‡(
t
 && (
ucs
 & ~0xFFFFË=
WC_C_UCS4_PLANE2
) {

81 i‡(
t
->
ccs
 =
WC_CCS_JIS_X_0213_1
)

82 
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
ucs
 & 0xffff),

83 
ucs_p2_jisx02131_m≠
, 
N_ucs_p2_jisx02131_m≠
);

84 i‡(
t
->
ccs
 =
WC_CCS_JIS_X_0213_2
)

85 
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
ucs
 & 0xffff),

86 
ucs_p2_jisx02132_m≠
, 
N_ucs_p2_jisx02132_m≠
);

87 i‡(
t
->
ccs
 =
WC_CCS_HKSCS
 ||

88 
t
->
ccs
 =
WC_CCS_HKSCS_1
 ||Å->cc†=
WC_CCS_HKSCS_2
)

89 
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
ucs
 & 0xffff),

90 
ucs_p2_hkscs_m≠
, 
N_ucs_p2_hkscs_m≠
);

92 
m≠
 = 
NULL
;

93 i‡(
m≠
)

94  
t
->
	`c⁄v
—->
ccs
, 
m≠
->
code2
);

96 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

97  
cc
;

98 
	}
}

100 
wc_uöt32


101 
	$wc_™y_to_ucs
(
wc_wch¨_t
 
cc
)

103 
f
;

104 
wc_uöt16
 *
m≠
 = 
NULL
;

105 
wc_m≠
 *
m≠2
;

107 
f
 = 
	`WC_CCS_INDEX
(
cc
.
ccs
);

108 
	`WC_CCS_TYPE
(
cc
.
ccs
)) {

109 
WC_CCS_A_CS94
:

110 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS94_END
)

111  
WC_C_UCS4_ERROR
;

112 
m≠
 = 
cs94_ucs_m≠
[
f
 - 
WC_F_ISO_BASE
];

113 
cc
.
code
 &= 0x7f;

115 
WC_CCS_A_CS94W
:

116 i‡(
cc
.
ccs
 =
WC_CCS_GB_2312
 && 
WcO±i⁄
.
u£_gb12345_m≠
) {

117 
cc
.
ccs
 = 
WC_CCS_GB_12345
;

118  
	`wc_™y_to_ucs
(
cc
);

119 } i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0213_1
) {

120 
m≠2
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
cc
.
code
 & 0x7f7f),

121 
jisx02131_ucs_p2_m≠
, 
N_jisx02131_ucs_p2_m≠
);

122 i‡(
m≠2
)

123  
m≠2
->
code2
 | 
WC_C_UCS4_PLANE2
;

124 } i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0213_2
) {

125 
m≠2
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
cc
.
code
 & 0x7f7f),

126 
jisx02132_ucs_p2_m≠
, 
N_jisx02132_ucs_p2_m≠
);

127 i‡(
m≠2
)

128  
m≠2
->
code2
 | 
WC_C_UCS4_PLANE2
;

130 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS94W_END
)

132 
m≠
 = 
cs94w_ucs_m≠
[
f
 - 
WC_F_ISO_BASE
];

133 
cc
.
code
 = 
	`WC_CS94W_N
(cc.code);

135 
WC_CCS_A_CS96
:

136 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS96_END
)

137  
WC_C_UCS4_ERROR
;

138 
m≠
 = 
cs96_ucs_m≠
[
f
 - 
WC_F_ISO_BASE
];

139 
cc
.
code
 &= 0x7f;

141 
WC_CCS_A_CS96W
:

142 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS96W_END
)

143  
WC_C_UCS4_ERROR
;

144 
m≠
 = 
cs96w_ucs_m≠
[
f
 - 
WC_F_ISO_BASE
];

145 
cc
.
code
 = 
	`WC_CS96W_N
(cc.code);

147 
WC_CCS_A_CS942
:

148 i‡(
f
 < 
WC_F_ISO_BASE
 || f > 
WC_F_CS942_END
)

149  
WC_C_UCS4_ERROR
;

150 
m≠
 = 
cs942_ucs_m≠
[
f
 - 
WC_F_ISO_BASE
];

151 
cc
.
code
 &= 0x7f;

153 
WC_CCS_A_PCS
:

154 i‡(
f
 < 
WC_F_PCS_BASE
 || f > 
WC_F_PCS_END
)

155  
WC_C_UCS4_ERROR
;

156 
cc
.
ccs
) {

157 
WC_CCS_CP1258_2
:

158 
m≠2
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)
cc
.
code
,

159 
˝12582_ucs_m≠
, 
N_˝12582_ucs_m≠
);

160 i‡(
m≠2
)

161  
m≠2
->
code2
;

162  
WC_C_UCS4_ERROR
;

163 
WC_CCS_TCVN_5712_3
:

164  
	`wc_™y_to_ucs
(
	`wc_tcvn57123_to_tcvn5712
(
cc
));

165 
WC_CCS_GBK_80
:

166  
WC_C_UCS2_EURO
;

168 
m≠
 = 
pcs_ucs_m≠
[
f
 - 
WC_F_PCS_BASE
];

169 
cc
.
code
 &= 0x7f;

171 
WC_CCS_A_PCSW
:

172 i‡(
f
 < 
WC_F_PCS_BASE
 || f > 
WC_F_PCSW_END
)

173  
WC_C_UCS4_ERROR
;

174 
m≠
 = 
pcsw_ucs_m≠
[
f
 - 
WC_F_PCS_BASE
];

175 
cc
.
ccs
) {

176 
WC_CCS_BIG5
:

177 
cc
.
code
 = 
	`WC_BIG5_N
(cc.code);

179 
WC_CCS_BIG5_2
:

180 
cc
.
code
 = 
	`WC_CS94W_N
(cc.codeË+ 
WC_C_BIG5_2_BASE
;

182 
WC_CCS_HKSCS_1
:

183 
WC_CCS_HKSCS_2
:

184 
cc
 = 
	`wc_cs128w_to_hkscs
(cc);

185 
WC_CCS_HKSCS
:

186 
m≠2
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)
cc
.
code
,

187 
hkscs_ucs_p2_m≠
, 
N_hkscs_ucs_p2_m≠
);

188 i‡(
m≠2
)

189  
m≠2
->
code2
 | 
WC_C_UCS4_PLANE2
;

190 
cc
.
code
 = 
	`wc_hkscs_to_N
(cc.code);

192 
WC_CCS_JOHAB
:

193  
	`wc_™y_to_ucs
(
	`wc_johab_to_cs128w
(
cc
));

194 
WC_CCS_JOHAB_1
:

195  
	`WC_CS94x128_N
(
cc
.
code
Ë+ 
WC_C_UCS2_HANGUL
;

196 
WC_CCS_JOHAB_2
:

197 
cc
.
code
 = 
	`WC_CS128W_N
(cc.code);

198 
cc
.
code
 = 
	`WC_N_JOHAB2
(cc.code);

199 
m≠2
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)
cc
.
code
,

200 
johab2_ucs_m≠
, 
N_johab2_ucs_m≠
);

201 i‡(
m≠2
)

202  
m≠2
->
code2
;

203  
WC_C_UCS4_ERROR
;

204 
WC_CCS_JOHAB_3
:

205 i‡((
cc
.
code
 & 0x7f7f) < 0x2121)

206  
WC_C_UCS4_ERROR
;

207 
WC_CCS_SJIS_EXT
:

208  
	`wc_™y_to_ucs
(
	`wc_sjis_ext_to_cs94w
(
cc
));

209 
WC_CCS_SJIS_EXT_1
:

210 
cc
.
code
 = 
	`wc_sjis_ext1_to_N
(cc.code);

211 i‡(
cc
.
code
 =
WC_C_SJIS_ERROR
)

212  
WC_C_UCS4_ERROR
;

214 
WC_CCS_SJIS_EXT_2
:

215 
cc
.
code
 = 
	`wc_sjis_ext2_to_N
(cc.code);

216 i‡(
cc
.
code
 =
WC_C_SJIS_ERROR
)

217  
WC_C_UCS4_ERROR
;

219 
WC_CCS_GBK_1
:

220 
WC_CCS_GBK_2
:

221 
cc
 = 
	`wc_cs128w_to_gbk
(cc);

222 
WC_CCS_GBK
:

223 
cc
.
code
 = 
	`wc_gbk_to_N
(cc.code);

225 
WC_CCS_GBK_EXT
:

226 
WC_CCS_GBK_EXT_1
:

227 
WC_CCS_GBK_EXT_2
:

228  
	`wc_gb18030_to_ucs
(
cc
);

229 
WC_CCS_UHC_1
:

230 
WC_CCS_UHC_2
:

231 
cc
 = 
	`wc_cs128w_to_uhc
(cc);

232 
WC_CCS_UHC
:

233 i‡(
cc
.
code
 > 
WC_C_UHC_END
)

234  
WC_C_UCS4_ERROR
;

235 
cc
.
code
 = 
	`wc_uhc_to_N
(cc.code);

238 
cc
.
code
 = 
	`WC_CS94W_N
(cc.code);

242 
WC_CCS_A_WCS16
:

243 
	`WC_CCS_SET
(
cc
.
ccs
)) {

244 
WC_CCS_UCS2
:

245  
cc
.
code
;

247  
WC_C_UCS4_ERROR
;

248 
WC_CCS_A_WCS32
:

249 
	`WC_CCS_SET
(
cc
.
ccs
)) {

250 
WC_CCS_UCS4
:

251  
cc
.
code
;

252 
WC_CCS_UCS_TAG
:

253  
	`wc_ucs_èg_to_ucs
(
cc
.
code
);

254 
WC_CCS_GB18030
:

255  
	`wc_gb18030_to_ucs
(
cc
);

257  
WC_C_UCS4_ERROR
;

258 
WC_CCS_A_UNKNOWN
:

259 i‡(
cc
.
ccs
 =
WC_CCS_C1
)

260  (
cc
.
code
 | 0x80);

262  
WC_C_UCS4_ERROR
;

264 i‡(
m≠
 =
NULL
)

265  
WC_C_UCS4_ERROR
;

266 
cc
.
code
 = 
m≠
[cc.code];

267  
cc
.
code
 ? cc.codê: 
WC_C_UCS4_ERROR
;

268 
	}
}

270 
wc_wch¨_t


271 
	$wc_™y_to_™y
(
wc_wch¨_t
 
cc
, 
wc_èbÀ
 *
t
)

273 
wc_ccs
 
is_wide
 = 
	`WC_CCS_IS_WIDE
(
cc
.
ccs
);

274 
wc_uöt32
 
ucs
 = 
	`wc_™y_to_ucs
(
cc
);

276 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

277 
cc
 = 
	`wc_ucs_to_™y
(
ucs
, 
t
);

278 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

279  
cc
;

281 
ucs
 = 
	`wc_ucs_to_fuŒwidth
(ucs);

282 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

283 
cc
 = 
	`wc_ucs_to_™y
(
ucs
, 
t
);

284 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

285  
cc
;

288 
cc
.
ccs
 = 
is_wide
 ? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

289  
cc
;

290 
	}
}

292 
wc_wch¨_t


293 
	$wc_ucs_to_™y_li°
(
wc_uöt32
 
ucs
, 
wc_èbÀ
 **
éi°
)

295 
wc_wch¨_t
 
cc
;

296 
wc_èbÀ
 **
t
;

298 i‡(
éi°
 !
NULL
) {

299 
t
 = 
éi°
; *à!
NULL
;Å++) {

300 i‡((*
t
)->
m≠
 =
NULL
)

302 
cc
 = 
	`wc_ucs_to_™y
(
ucs
, *
t
);

303 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

304  
cc
;

307 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

308  
cc
;

309 
	}
}

311 
wc_wch¨_t


312 
	$wc_™y_to_™y_˚s
(
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

314 
wc_uöt32
 
ucs
 = 
	`wc_™y_to_ucs
(
cc
);

315 
wc_ccs
 
is_wide
 = 
	`WC_CCS_IS_WIDE
(
cc
.
ccs
);

317 i‡(
ucs
 < 0x80) {

318 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

319 
cc
.
code
 = 
ucs
;

320  
cc
;

322 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

323 i‡(
°
->
˚s_öfo
->
id
 & 
WC_CES_T_UTF
) {

324 
cc
.
ccs
 = 
	`wc_ucs_to_ccs
(
ucs
);

325 
cc
.
code
 = 
ucs
;

326  
cc
;

327 } i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_JOHAB
) {

328 
cc
 = 
	`wc_ucs_to_johab
(
ucs
);

329 i‡(
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

330 
cc
.
ccs
 = 
is_wide
 ? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

331  
cc
;

333 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°w
 : st->
éi°
);

334 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

335  
cc
;

336 i‡(! 
WcO±i⁄
.
fix_width_c⁄v
) {

337 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°
 : st->
éi°w
);

338 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

339  
cc
;

341 i‡(
°
->
˚s_öfo
->
id
 =
WC_CES_GB18030
) {

342 
cc
 = 
	`wc_ucs_to_gb18030
(
ucs
);

343 i‡(
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

344 
cc
.
ccs
 = 
is_wide
 ? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

345  
cc
;

347 i‡(
ucs
 =
WC_C_UCS2_NBSP
) {

348 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

349 
cc
.
code
 = 0x20;

350  
cc
;

352 i‡(
°
->
˚s_öfo
->
id
 & (
WC_CES_T_ISO_8859
|
WC_CES_T_EUC
) &&

353 0x80 <
ucs
 && ucs <= 0x9F) {

354 
cc
.
ccs
 = 
WC_CCS_C1
;

355 
cc
.
code
 = 
ucs
;

356  
cc
;

359 
ucs
 = 
	`wc_ucs_to_fuŒwidth
(ucs);

360 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

361 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°w
 : st->
éi°
);

362 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

363  
cc
;

364 i‡(! 
WcO±i⁄
.
fix_width_c⁄v
) {

365 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°
 : st->
éi°w
);

366 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

367  
cc
;

371 
cc
.
ccs
 = 
is_wide
 ? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

372  
cc
;

373 
	}
}

375 
wc_wch¨_t


376 
	$wc_™y_to_iso2022
(
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

378 
wc_uöt32
 
ucs
 = 
	`wc_™y_to_ucs
(
cc
);

379 
wc_ccs
 
is_wide
 = 
	`WC_CCS_IS_WIDE
(
cc
.
ccs
);

381 i‡(
ucs
 < 0x80) {

382 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

383 
cc
.
code
 = 
ucs
;

384  
cc
;

386 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

387 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°w
 : st->
éi°
);

388 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

389  
cc
;

390 i‡(! 
WcO±i⁄
.
°ri˘_iso2022
) {

391 
cc
 = (
is_wide
Ë? 
	`wc_ucs_to_iso2022w
(
ucs
Ë: 
	`wc_ucs_to_iso2022
(ucs);

392 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

393  
cc
;

395 i‡(! 
WcO±i⁄
.
fix_width_c⁄v
) {

396 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°
 : st->
éi°w
);

397 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

398  
cc
;

399 i‡(! 
WcO±i⁄
.
°ri˘_iso2022
) {

400 
cc
 = (
is_wide
Ë? 
	`wc_ucs_to_iso2022
(
ucs
Ë: 
	`wc_ucs_to_iso2022w
(ucs);

401 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

402  
cc
;

405 i‡(
ucs
 =
WC_C_UCS2_NBSP
) {

406 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

407 
cc
.
code
 = 0x20;

408  
cc
;

411 
ucs
 = 
	`wc_ucs_to_fuŒwidth
(ucs);

412 i‡(
ucs
 !
WC_C_UCS4_ERROR
) {

413 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°w
 : st->
éi°
);

414 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

415  
cc
;

416 i‡(! 
WcO±i⁄
.
°ri˘_iso2022
) {

417 
cc
 = (
is_wide
Ë? 
	`wc_ucs_to_iso2022w
(
ucs
Ë: 
	`wc_ucs_to_iso2022
(ucs);

418 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

419  
cc
;

421 i‡(! 
WcO±i⁄
.
fix_width_c⁄v
) {

422 
cc
 = 
	`wc_ucs_to_™y_li°
(
ucs
, 
is_wide
 ? 
°
->
éi°
 : st->
éi°w
);

423 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

424  
cc
;

425 i‡(! 
WcO±i⁄
.
°ri˘_iso2022
) {

426 
cc
 = (
is_wide
Ë? 
	`wc_ucs_to_iso2022
(
ucs
Ë: 
	`wc_ucs_to_iso2022w
(ucs);

427 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

428  
cc
;

432 i‡(
ucs
 =
WC_C_UCS2_NBSP
) {

433 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

434 
cc
.
code
 = 0x20;

435  
cc
;

438 
cc
.
ccs
 = 
is_wide
 ? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

439  
cc
;

440 
	}
}

442 
wc_wch¨_t


443 
	$wc_ucs_to_iso2022
(
wc_uöt32
 
ucs
)

445 
wc_èbÀ
 *
t
;

446 
wc_wch¨_t
 
cc
;

447 
f
;

449 i‡(
ucs
 <
WC_C_UCS2_END
) {

450 
f
 = 0; f <
WC_F_CS96_END
 - 
WC_F_ISO_BASE
; f++) {

451 
t
 = &
ucs_cs96_èbÀ
[
f
];

452 i‡(
t
->
m≠
 =
NULL
)

454 
cc
 = 
	`wc_ucs_to_™y
((
wc_uöt16
)
ucs
, 
t
);

455 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

456  
cc
;

458 
f
 = 0; f <
WC_F_CS94_END
 - 
WC_F_ISO_BASE
; f++) {

459 
t
 = &
ucs_cs94_èbÀ
[
f
];

460 i‡(
t
->
m≠
 =
NULL
)

462 
cc
 = 
	`wc_ucs_to_™y
((
wc_uöt16
)
ucs
, 
t
);

463 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

464  
cc
;

466 
f
 = 0; f <
WC_F_CS942_END
 - 
WC_F_ISO_BASE
; f++) {

467 
t
 = &
ucs_cs942_èbÀ
[
f
];

468 i‡(
t
->
m≠
 =
NULL
)

470 
cc
 = 
	`wc_ucs_to_™y
((
wc_uöt16
)
ucs
, 
t
);

471 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

472  
cc
;

475 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

476  
cc
;

477 
	}
}

479 
wc_wch¨_t


480 
	$wc_ucs_to_iso2022w
(
wc_uöt32
 
ucs
)

482 
wc_èbÀ
 *
t
;

483 
wc_wch¨_t
 
cc
;

484 
f
;

486 i‡(
ucs
 <
WC_C_UCS2_END
) {

487 
f
 = 0; f <
WC_F_CS94W_END
 - 
WC_F_ISO_BASE
; f++) {

488 
t
 = &
ucs_cs94w_èbÀ
[
f
];

489 i‡(
t
->
m≠
 =
NULL
)

491 
cc
 = 
	`wc_ucs_to_™y
((
wc_uöt16
)
ucs
, 
t
);

492 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

493  
cc
;

495 
f
 = 0; f <
WC_F_CS96W_END
 - 
WC_F_ISO_BASE
; f++) {

496 
t
 = &
ucs_cs96w_èbÀ
[
f
];

497 i‡(
t
->
m≠
 =
NULL
)

499 
cc
 = 
	`wc_ucs_to_™y
((
wc_uöt16
)
ucs
, 
t
);

500 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc
.
ccs
))

501  
cc
;

504 
cc
.
ccs
 = 
WC_CCS_UNKNOWN_W
;

505  
cc
;

506 
	}
}

508 
wc_ccs


509 
	$wc_ucs_to_ccs
(
wc_uöt32
 
ucs
)

511 i‡(0x80 <
ucs
 && ucs <= 0x9F)

512  
WC_CCS_C1
;

513  ((
ucs
 <
WC_C_UCS2_END
Ë? 
WC_CCS_UCS2
 : 
WC_CCS_UCS4
)

514 | (
	`wc_is_ucs_wide
(
ucs
Ë? 
WC_CCS_A_WIDE
 : 0)

515 | (
	`wc_is_ucs_comböög
(
ucs
Ë? 
WC_CCS_A_COMB
 : 0);

516 
	}
}

518 
wc_boﬁ


519 
	$wc_is_ucs_wide
(
wc_uöt32
 
ucs
)

521 i‡(
ucs
 <
WC_C_UCS2_END
)

522  (
	`wc_m≠_ønge_£¨ch
((
wc_uöt16
)
ucs
,

523 
ucs_wide_m≠
, 
N_ucs_wide_m≠
Ë!
NULL
);

525  ((
ucs
 & ~0xFFFFË=
WC_C_UCS4_PLANE2
 ||

526 (
ucs
 & ~0xFFFFË=
WC_C_UCS4_PLANE3
);

527 
	}
}

529 
wc_boﬁ


530 
	$wc_is_ucs_comböög
(
wc_uöt32
 
ucs
)

532  (
WcO±i⁄
.
u£_comböög
 && 
ucs
 <
WC_C_UCS2_END
 &&

533 
	`wc_m≠_ønge_£¨ch
((
wc_uöt16
)
ucs
,

534 
ucs_comböög_m≠
, 
N_ucs_comböög_m≠
Ë!
NULL
);

535 
	}
}

537 
wc_boﬁ


538 
	$wc_is_ucs_h™gul
(
wc_uöt32
 
ucs
)

540  (
ucs
 <
WC_C_UCS2_END
 &&

541 
	`wc_m≠_ønge_£¨ch
((
wc_uöt16
)
ucs
,

542 
ucs_h™gul_m≠
, 
N_ucs_h™gul_m≠
Ë!
NULL
);

543 
	}
}

545 
wc_uöt32


546 
	$wc_ucs_¥ecompo£
(
wc_uöt32
 
ucs1
, wc_uöt32 
ucs2
)

548 
wc_m≠3
 *
m≠
;

550 i‡(
WcO±i⁄
.
u£_comböög
 &&

551 
ucs1
 <
WC_C_UCS2_END
 && 
ucs2
 <= WC_C_UCS2_END &&

552 (
m≠
 = 
	`wc_m≠3_£¨ch
((
wc_uöt16
)
ucs1
, (wc_uöt16)
ucs2
,

553 
ucs_¥ecompo£_m≠
, 
N_ucs_¥ecompo£_m≠
)Ë!
NULL
)

554  
m≠
->
code3
;

555  
WC_C_UCS4_ERROR
;

556 
	}
}

558 
wc_uöt32


559 
	$wc_ucs_to_fuŒwidth
(
wc_uöt32
 
ucs
)

561 
wc_m≠
 *
m≠
;

563 i‡(
ucs
 <
WC_C_UCS2_END
 &&

564 (
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)
ucs
,

565 
ucs_fuŒwidth_m≠
, 
N_ucs_fuŒwidth_m≠
)Ë!
NULL
)

566  
m≠
->
code2
;

567  
WC_C_UCS4_ERROR
;

568 
	}
}

571 
	$wc_ucs_put_èg
(*
p
)

573 
i
;

575 i‡(
p
 =
NULL
 || *p == '\0')

577 
i
 = 1; i <
n_èg_m≠
; i++) {

578 i‡(!
	`°rˇ£cmp
(
p
, 
èg_m≠
[
i
]))

579  
i
;

581 
n_èg_m≠
++;

582 i‡(
n_èg_m≠
 =
MAX_TAG_MAP
)

584 
èg_m≠
[
n_èg_m≠
] = 
p
;

585  
n_èg_m≠
;

586 
	}
}

589 
	$wc_ucs_gë_èg
(
¡ag
)

591 i‡(
¡ag
 =0 ||Çèg > 
n_èg_m≠
)

592  
NULL
;

593  
èg_m≠
[
¡ag
];

594 
	}
}

597 
	$wtf_push_ucs
(
Så
 
os
, 
wc_uöt32
 
ucs
, 
wc_°©us
 *
°
)

599 
wc_ccs
 
ccs
;

601 i‡(
ucs
 >
WC_C_LANGUAGE_TAG0
 && uc†<
WC_C_CANCEL_TAG
) {

602 i‡(! 
WcO±i⁄
.
u£_œnguage_èg
)

604 i‡(
ucs
 =
WC_C_LANGUAGE_TAG
)

605 
°
->
èg
 = 
	`Så√w_size
(4);

606 i‡(
ucs
 =
WC_C_CANCEL_TAG
) {

607 
°
->
èg
 = 
NULL
;

608 
°
->
¡ag
 = 0;

609 } i‡(
°
->
èg
 && 
ucs
 >
WC_C_TAG_SPACE
)

610 
	`Såˇt_ch¨
(
°
->
èg
, ()(
ucs
 & 0x7f));

613 i‡(
°
->
èg
) {

614 
°
->
¡ag
 = 
	`wc_ucs_put_èg
(°->
èg
->
±r
);

615 
°
->
èg
 = 
NULL
;

617 i‡(
ucs
 < 0x80) {

618 i‡(
°
->
¡ag
)

619 
	`wtf_push
(
os
, 
WC_CCS_UCS_TAG
, 
	`wc_ucs_to_ucs_èg
(
ucs
, 
°
->
¡ag
));

621 
	`Såˇt_ch¨
(
os
, ()
ucs
);

623 
ccs
 = 
	`wc_ucs_to_ccs
(
ucs
);

624 i‡(
°
->
¡ag
 && 
ucs
 <
WC_C_UNICODE_END
) {

625 
ccs
 = 
	`wc_ccs_ucs_to_ccs_ucs_èg
(ccs);

626 
ucs
 = 
	`wc_ucs_to_ucs_èg
(ucs, 
°
->
¡ag
);

628 
	`wtf_push
(
os
, 
ccs
, 
ucs
);

630 
	}
}

	@libwc/ucs.h

2 #i‚de‡
_WC_UCS_H


3 
	#_WC_UCS_H


	)

5 
	#WC_C_UCS2_NBSP
 0xA0

	)

6 
	#WC_C_UCS2_BOM
 0xFEFF

	)

7 
	#WC_C_UCS2_REPLACE
 0xFFFD

	)

8 
	#WC_C_UCS2_END
 0xFFFF

	)

9 
	#WC_C_UCS2_SURROGATE
 0xD800

	)

10 
	#WC_C_UCS2_SURROGATE_LOW
 0xDC00

	)

11 
	#WC_C_UCS2_SURROGATE_END
 0xDFFF

	)

12 
	#WC_C_UCS2_HANGUL
 0xAC00

	)

13 
	#WC_C_UCS2_HANGUL_END
 0xD7A3

	)

14 
	#WC_C_UCS2_EURO
 0x20AC

	)

15 
	#WC_C_UCS4_END
 0x7FFFFFFF

	)

16 
	#WC_C_UCS4_ERROR
 0xFFFFFFFFU

	)

17 
	#WC_C_UNICODE_END
 0x10FFFF

	)

18 
	#WC_C_UNICODE_MASK
 0x1FFFFF

	)

19 
	#WC_C_LANGUAGE_TAG0
 0xE0000

	)

20 
	#WC_C_LANGUAGE_TAG
 0xE0001

	)

21 
	#WC_C_TAG_SPACE
 0xE0020

	)

22 
	#WC_C_CANCEL_TAG
 0xE007F

	)

23 
	#WC_C_UCS4_PLANE1
 0x10000

	)

24 
	#WC_C_UCS4_PLANE2
 0x20000

	)

25 
	#WC_C_UCS4_PLANE3
 0x30000

	)

27 
	#wc_ucs_èg_to_ucs
(
c
Ë((cË& 
WC_C_UNICODE_MASK
)

	)

28 
	#wc_ucs_èg_to_èg
(
c
Ë((cË>> 24)

	)

29 
	#wc_ucs_to_ucs_èg
(
c
,
èg
Ë((cË| (—agË<< 24))

	)

30 
	#wc_ccs_ucs_to_ccs_ucs_èg
(
ccs
Ë(
WC_CCS_UCS_TAG
 | ((ccsË& ~
WC_CCS_A_SET
))

	)

31 
	#wc_ucs_to_utf16
(
ucs
) \

32 ((((((
ucs
Ë- 
WC_C_UCS4_PLANE1
Ë>> 10Ë| 
WC_C_UCS2_SURROGATE
) << 16) \

33 | ((((
ucs
Ë- 
WC_C_UCS4_PLANE1
Ë& 0x3ffË| 
WC_C_UCS2_SURROGATE_LOW
))

	)

34 
	#wc_utf16_to_ucs
(
high
, 
low
) \

35 (((((
high
Ë& 0x3ffË<< 10Ë| ((
low
Ë& 0x3ff)Ë+ 
WC_C_UCS4_PLANE1
)

	)

37 
wc_èbÀ
 *
wc_gë_ucs_èbÀ
(
wc_ccs
 
ccs
);

38 
wc_wch¨_t
 
wc_ucs_to_™y
(
wc_uöt32
 
ucs
, 
wc_èbÀ
 *
t
);

39 
wc_uöt32
 
wc_™y_to_ucs
(
wc_wch¨_t
 
cc
);

40 
wc_wch¨_t
 
wc_™y_to_™y
(wc_wch¨_à
cc
, 
wc_èbÀ
 *
t
);

41 
wc_wch¨_t
 
wc_ucs_to_™y_li°
(
wc_uöt32
 
ucs
, 
wc_èbÀ
 **
éi°
);

42 
wc_wch¨_t
 
wc_™y_to_™y_˚s
(wc_wch¨_à
cc
, 
wc_°©us
 *
°
);

43 
wc_wch¨_t
 
wc_™y_to_iso2022
(wc_wch¨_à
cc
, 
wc_°©us
 *
°
);

44 
wc_wch¨_t
 
wc_ucs_to_iso2022
(
wc_uöt32
 
ucs
);

45 
wc_wch¨_t
 
wc_ucs_to_iso2022w
(
wc_uöt32
 
ucs
);

46 
wc_ccs
 
wc_ucs_to_ccs
(
wc_uöt32
 
ucs
);

47 
wc_boﬁ
 
wc_is_ucs_wide
(
wc_uöt32
 
ucs
);

48 
wc_boﬁ
 
wc_is_ucs_comböög
(
wc_uöt32
 
ucs
);

49 
wc_boﬁ
 
wc_is_ucs_h™gul
(
wc_uöt32
 
ucs
);

50 
wc_uöt32
 
wc_ucs_¥ecompo£
(wc_uöt32 
ucs1
, wc_uöt32 
ucs2
);

51 
wc_uöt32
 
wc_ucs_to_fuŒwidth
(wc_uöt32 
ucs
);

52 
wc_ucs_put_èg
(*
èg
);

53 *
wc_ucs_gë_èg
(
¡ag
);

54 
wtf_push_ucs
(
Så
 
os
, 
wc_uöt32
 
ucs
, 
wc_°©us
 *
°
);

	@libwc/uhc.c

2 
	~"wc.h
"

3 
	~"uhc.h
"

4 
	~"wtf.h
"

5 #ifde‡
USE_UNICODE


6 
	~"ucs.h
"

9 
	#C0
 
WC_UHC_MAP_C0


	)

10 
	#GL
 
WC_UHC_MAP_GL


	)

11 
	#C1
 
WC_UHC_MAP_C1


	)

12 
	#LB
 
WC_UHC_MAP_LB


	)

13 
	#UB
 
WC_UHC_MAP_UB


	)

15 
wc_uöt8
 
	gWC_UHC_MAP
[ 0x100 ] = {

16 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

17 
C0
, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0, C0,

18 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

19 
GL
, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL, GL,

20 
GL
, 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

21 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
GL
, GL, GL, GL, GL,

22 
GL
, 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB,

23 
LB
, LB, LB, LB, LB, LB, LB, LB, LB, LB, LB, 
GL
, GL, GL, GL, 
C0
,

25 
C1
, 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

26 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

27 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

28 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

29 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

30 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

31 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB,

32 
UB
, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, UB, 
C1
,

35 
wc_wch¨_t


36 
	$wc_uhc_to_cs128w
(
wc_wch¨_t
 
cc
)

38 
cc
.
code
 = 
	`WC_UHC_N
(cc.code);

39 i‡(
cc
.
code
 < 0x4000)

40 
cc
.
ccs
 = 
WC_CCS_UHC_1
;

42 
cc
.
ccs
 = 
WC_CCS_UHC_2
;

43 
cc
.
code
 -= 0x4000;

45 
cc
.
code
 = 
	`WC_N_CS128W
(cc.code);

46  
cc
;

47 
	}
}

49 
wc_wch¨_t


50 
	$wc_cs128w_to_uhc
(
wc_wch¨_t
 
cc
)

52 
cc
.
code
 = 
	`WC_CS128W_N
(cc.code);

53 i‡(
cc
.
ccs
 =
WC_CCS_UHC_2
)

54 
cc
.
code
 += 0x4000;

55 
cc
.
ccs
 = 
WC_CCS_UHC
;

56 
cc
.
code
 = 
	`WC_N_UHC
(cc.code);

57  
cc
;

58 
	}
}

60 
wc_uöt32


61 
	$wc_uhc_to_N
(
wc_uöt32
 
c
)

63 i‡(
c
 <= 0xA1A0)

64  
	`WC_UHC_N
(
c
);

65 i‡(
c
 <= 0xA2A0)

66  
	`WC_UHC_N
(
c
) - 0x5E;

67 i‡(
c
 <= 0xA2E7)

68  
	`WC_UHC_N
(0xA2A0Ë- 0x5E + 
c
 - 0xA2E5;

70  
	`WC_UHC_N
(
c
) - ((c >> 8) - 0xA1) * 0x5E + 2;

71 
	}
}

73 
Så


74 
	$wc_c⁄v_‰om_uhc
(
Så
 
is
, 
wc_˚s
 
˚s
)

76 
Så
 
os
;

77 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

78 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

79 
wc_uch¨
 *
p
;

80 
°©e
 = 
WC_UHC_NOSTATE
;

81 
wc_uöt32
 
uhc
;

83 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

85 i‡(
p
 =
ï
)

86  
is
;

87 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

88 i‡(
p
 > 
•
)

89 
	`Såˇt_ch¨p_n
(
os
, (*)
is
->
±r
, ()(
p
 - 
•
));

91 ; 
p
 < 
ï
;Ö++) {

92 
°©e
) {

93 
WC_UHC_NOSTATE
:

94 
WC_UHC_MAP
[*
p
]) {

95 
UB
:

96 
°©e
 = 
WC_UHC_MBYTE1
;

98 
C1
:

99 
	`wtf_push_unknown
(
os
, 
p
, 1);

102 
	`Såˇt_ch¨
(
os
, ()*
p
);

106 
WC_UHC_MBYTE1
:

107 i‡(
WC_UHC_MAP
[*
p
] & 
LB
) {

108 
uhc
 = ((
wc_uöt32
)*(
p
-1) << 8) | *p;

109 i‡(*(
p
-1) >= 0xA1 && *p >= 0xA1 &&

110 
uhc
 != 0xA2E6 && uhc != 0xA2E7)

111 
	`wtf_push
(
os
, 
WC_CCS_KS_X_1001
, 
uhc
);

113 
	`wtf_push
(
os
, 
WC_CCS_UHC
, 
uhc
);

115 
	`wtf_push_unknown
(
os
, 
p
-1, 2);

116 
°©e
 = 
WC_UHC_NOSTATE
;

120 
°©e
) {

121 
WC_UHC_MBYTE1
:

122 
	`wtf_push_unknown
(
os
, 
p
-1, 1);

125  
os
;

126 
	}
}

129 
	$wc_push_to_uhc
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

132 
cc
.
ccs
) {

133 
WC_CCS_US_ASCII
:

134 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

136 
WC_CCS_KS_X_1001
:

137 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) | 0x80));

138 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 & 0xff) | 0x80));

140 
WC_CCS_UHC_1
:

141 
WC_CCS_UHC_2
:

142 
cc
 = 
	`wc_cs128w_to_uhc
(cc);

143 
WC_CCS_UHC
:

144 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 >> 8));

145 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

147 
WC_CCS_UNKNOWN_W
:

148 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

149 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

151 
WC_CCS_UNKNOWN
:

152 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

153 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

156 #ifde‡
USE_UNICODE


157 i‡(
WcO±i⁄
.
ucs_c⁄v
)

158 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

161 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

165 
	}
}

167 
Så


168 
	$wc_ch¨_c⁄v_‰om_uhc
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

170 
Så
 
os
;

171 
wc_uch¨
 
uhcu
;

172 
wc_uöt32
 
uhc
;

174 i‡(
°
->
°©e
 == -1) {

175 
°
->
°©e
 = 
WC_UHC_NOSTATE
;

176 
os
 = 
	`Så√w_size
(8);

179 
°
->
°©e
) {

180 
WC_UHC_NOSTATE
:

181 
WC_UHC_MAP
[
c
]) {

182 
UB
:

183 
uhcu
 = 
c
;

184 
°
->
°©e
 = 
WC_UHC_MBYTE1
;

185  
NULL
;

186 
C1
:

189 
	`Såˇt_ch¨
(
os
, ()
c
);

193 
WC_UHC_MBYTE1
:

194 i‡(
WC_UHC_MAP
[
c
] & 
LB
) {

195 
uhc
 = ((
wc_uöt32
)
uhcu
 << 8Ë| 
c
;

196 i‡(
uhcu
 >0xA1 && 
c
 >= 0xA1 &&

197 
uhc
 != 0xA2E6 && uhc != 0xA2E7)

198 
	`wtf_push
(
os
, 
WC_CCS_KS_X_1001
, 
uhc
);

200 
	`wtf_push
(
os
, 
WC_CCS_UHC
, 
uhc
);

204 
°
->
°©e
 = -1;

205  
os
;

206 
	}
}

	@libwc/uhc.h

2 #i‚de‡
_WC_UHC_H


3 
	#_WC_UHC_H


	)

5 
	#WC_C_UHC_END
 0xC6FE

	)

7 
	#WC_UHC_NOSTATE
 0

	)

8 
	#WC_UHC_MBYTE1
 1

	)

10 
	#WC_UHC_MAP_C0
 0x0

	)

11 
	#WC_UHC_MAP_GL
 0x1

	)

12 
	#WC_UHC_MAP_C1
 0x2

	)

13 
	#WC_UHC_MAP_LB
 0x4

	)

14 
	#WC_UHC_MAP_UB
 (0x8 | 
WC_UHC_MAP_LB
)

	)

16 
	#WC_UHCUL_N
(
U
,
L
Ë(((UË- 0x81Ë* 0xB2 + (LË- (((LË< 0x61Ë? 0x41 : (((LË< 0x81Ë? 0x47 : 0x4D)))

	)

17 
	#WC_UHC_N
(
c
Ë
	`WC_UHCUL_N
(((cË>> 8Ë& 0xFF, (cË& 0xFF)

	)

18 
	#WC_N_UHCU
(
c
Ë((cË/ 0xB2 + 0x81)

	)

19 
	#WC_N_UHCL
(
c
Ë((cË% 0xB2 + (((cË% 0xB2 < 0x1AË? 0x41 : (((cË% 0xB2 < 0x34Ë? 0x47 : 0x4D)))

	)

20 
	#WC_N_UHC
(
c
Ë((
	`WC_N_UHCU
(cË<< 8Ë+ 
	`WC_N_UHCL
(c))

	)

21 #i‚de‡
WC_CS128W_N


22 
	#WC_CS128WUL_N
(
U
,
L
Ë((UË* 0x80 + (L))

	)

23 
	#WC_CS128W_N
(
c
Ë
	`WC_CS128WUL_N
(((cË>> 8Ë& 0x7F, (cË& 0x7F)

	)

24 
	#WC_N_CS128WU
(
c
Ë((cË/ 0x80)

	)

25 
	#WC_N_CS128WL
(
c
Ë((cË% 0x80)

	)

26 
	#WC_N_CS128W
(
c
Ë((
	`WC_N_CS128WU
(cË<< 8Ë+ 
	`WC_N_CS128WL
(c))

	)

29 
wc_uch¨
 
WC_UHC_MAP
[];

31 
wc_wch¨_t
 
wc_uhc_to_cs128w
(wc_wch¨_à
cc
);

32 
wc_wch¨_t
 
wc_cs128w_to_uhc
(wc_wch¨_à
cc
);

33 
wc_uöt32
 
wc_uhc_to_N
(wc_uöt32 
c
);

34 
Så
 
wc_c⁄v_‰om_uhc
(Så 
is
, 
wc_˚s
 
˚s
);

35 
wc_push_to_uhc
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

36 
Så
 
wc_ch¨_c⁄v_‰om_uhc
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/utf7.c

1 #ifde‡
USE_UNICODE


3 
	~"wc.h
"

4 
	~"ucs.h
"

5 
	~"utf7.h
"

6 
	~"wtf.h
"

8 
	#SD
 
WC_UTF7_MAP_SET_D


	)

9 
	#SO
 
WC_UTF7_MAP_SET_O


	)

10 
	#SB
 
WC_UTF7_MAP_SET_B


	)

11 
	#BB
 
WC_UTF7_MAP_BASE64


	)

12 
	#BP
 
WC_UTF7_MAP_PLUS


	)

13 
	#BM
 
WC_UTF7_MAP_MINUS


	)

14 
	#CD
 (
WC_UTF7_MAP_SET_D
 | 
WC_UTF7_MAP_C0
)

	)

15 
	#CB
 (
WC_UTF7_MAP_SET_B
 | 
WC_UTF7_MAP_C0
)

	)

16 
	#C1
 
WC_UTF7_MAP_C1


	)

18 
wc_uöt8
 
	gWC_UTF7_MAP
[ 0x100 ] = {

20 
CB
, CB, CB, CB, CB, CB, CB, CB, CB, 
CD
, CD, CB, CB, CD, CB, CB,

22 
CB
, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB, CB,

24 
SD
, 
SO
, SO, SO, SO, SO, SO, SD, SD, SD, SO, 
BP
, SD, 
BM
, SD, 
BB
,

26 
BB
, BB, BB, BB, BB, BB, BB, BB, BB, BB, 
SD
, 
SO
, SO, SO, SO, SD,

28 
BB
, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB,

30 
BB
, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, 
SO
, 
SB
, SO, SO, SO,

32 
SO
, 
BB
, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB,

34 
BB
, BB, BB, BB, BB, BB, BB, BB, BB, BB, BB, 
SO
, SO, SO, 
SB
, 
CB
,

36 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

37 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

38 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

39 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

40 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

41 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

42 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

43 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

46 
	gc_ba£64_m≠
[ 0x60 ] = {

55 
	gba£64_c_m≠
[] =

58 
	#BASE64_C
(
x
Ë
ba£64_c_m≠
[(x)]

	)

59 
	#C_BASE64
(
x
Ë
c_ba£64_m≠
[(xË- 0x20]

	)

61 
Så


62 
	$wc_c⁄v_‰om_utf7
(
Så
 
is
, 
wc_˚s
 
˚s
)

64 
Så
 
os
;

65 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

66 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

67 
wc_uch¨
 *
p
;

68 
°©e
 = 
WC_UTF7_NOSTATE
;

69 
wc_uöt32
 
b
, 
high
 = 0;

70 
wc_°©us
 
°
;

72 
p
 = 
•
;Ö < 
ï
 && *∞< 0x80 && *∞!
WC_C_UTF7_PLUS
;Ö++)

74 i‡(
p
 =
ï
)

75  
is
;

76 
os
 = 
	`Så√w_size
(
is
->
Àngth
 * 4 / 3);

77 i‡(
p
 > 
•
)

78 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

80 
°
.
èg
 = 
NULL
;

81 
°
.
¡ag
 = 0;

82 ; 
p
 < 
ï
;Ö++) {

83 
°©e
) {

84 
WC_UTF7_NOSTATE
:

85 i‡(*
p
 =
WC_C_UTF7_PLUS
) {

86 
°©e
 = 
WC_UTF7_PLUS
;

87 
°
.
shi·
 = 16;

88 
°
.
ba£
 = 0;

89 
high
 = 0;

93 
WC_UTF7_PLUS
:

94 i‡(*
p
 =
WC_C_UTF7_MINUS
)

95 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)
WC_C_UTF7_PLUS
, &
°
);

96 
WC_UTF7_BASE64
:

97 
WC_UTF7_MAP
[*
p
]) {

98 
BB
:

99 
BP
:

100 
b
 = 
	`C_BASE64
(*
p
);

101 
°
.
shi·
 -= 6;

102 i‡(
°
.
shi·
 <= 0) {

103 
°
.
ba£
 |
b
 >> (- st.
shi·
);

104 i‡(
°
.
ba£
 >
WC_C_UCS2_SURROGATE
 &&

105 
°
.
ba£
 < 
WC_C_UCS2_SURROGATE_LOW
) {

106 i‡(! 
high
)

107 
high
 = 
°
.
ba£
;

109 
high
 = 0;

110 } i‡(
°
.
ba£
 >
WC_C_UCS2_SURROGATE_LOW
 &&

111 
°
.
ba£
 <
WC_C_UCS2_SURROGATE_END
) {

112 i‡(
high
)

113 
	`wtf_push_ucs
(
os
, 
	`wc_utf16_to_ucs
(
high
, 
°
.
ba£
), &st);

115 
high
 = 0;

116 } i‡(
°
.
ba£
 !
WC_C_UCS2_BOM
)

117 
	`wtf_push_ucs
(
os
, 
°
.
ba£
, &st);

118 
°
.
shi·
 += 16;

119 
°
.
ba£
 = 0;

121 
°
.
ba£
 |(
b
 << st.
shi·
) & 0xffff;

122 
°©e
 = 
WC_UTF7_BASE64
;

124 
BM
:

125 
°©e
 = 
WC_UTF7_NOSTATE
;

129 
WC_UTF7_MAP
[*
p
]) {

130 
CD
:

131 
CB
:

132 
	`Såˇt_ch¨
(
os
, ()*
p
);

134 
C1
:

135 
	`wtf_push_unknown
(
os
, 
p
, 1);

138 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)*
p
, &
°
);

142  
os
;

143 
	}
}

146 
	$wc_push_ucs_to_utf7
(
Så
 
os
, 
wc_uöt32
 
ucs
, 
wc_°©us
 *
°
)

148 i‡(
ucs
 > 
WC_C_UNICODE_END
)

150 i‡(
ucs
 > 
WC_C_UCS2_END
) {

151 
ucs
 = 
	`wc_ucs_to_utf16
(ucs);

152 
	`wc_push_ucs_to_utf7
(
os
, 
ucs
 >> 16, 
°
);

153 
	`wc_push_ucs_to_utf7
(
os
, 
ucs
 & 0xffff, 
°
);

156 i‡(
ucs
 < 0x80) {

157 
WC_UTF7_MAP
[
ucs
]) {

158 
BB
:

159 
BM
:

160 
SD
:

161 
CD
:

162 i‡(
°
->
°©e
 =
WC_UTF7_BASE64
) {

163 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
(
°
->
ba£
));

164 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_MINUS
);

165 
°
->
°©e
 = 
WC_UTF7_NOSTATE
;

167 
	`Såˇt_ch¨
(
os
, ()
ucs
);

169 
BP
:

170 i‡(
°
->
°©e
 =
WC_UTF7_BASE64
) {

171 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
(
°
->
ba£
));

172 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_MINUS
);

173 
°
->
°©e
 = 
WC_UTF7_NOSTATE
;

175 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_PLUS
);

176 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_MINUS
);

180 i‡(
°
->
°©e
 =
WC_UTF7_BASE64
 && st->
shi·
) {

181 
°
->
shi·
 += 16;

182 
°
->
ba£
 |
ucs
 >> st->
shi·
;

183 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
(
°
->
ba£
));

185 i‡(
°
->
°©e
 !
WC_UTF7_BASE64
) {

186 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_PLUS
);

187 
°
->
°©e
 = 
WC_UTF7_BASE64
;

189 
°
->
shi·
 = 16;

190 
°
->
ba£
 = 0;

192 
°
->
shi·
 -= 6;

193 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
((
ucs
 >> 
°
->
shi·
) & 0x3f));

194 
°
->
shi·
 -= 6;

195 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
((
ucs
 >> 
°
->
shi·
) & 0x3f));

196 i‡(
°
->
shi·
) {

197 
°
->
shi·
 -= 6;

198 
°
->
ba£
 = (
ucs
 << (- st->
shi·
)) & 0x3f;

201 
	}
}

204 
	$wc_push_èg_to_utf7
(
Så
 
os
, 
¡ag
, 
wc_°©us
 *
°
)

206 *
p
;

208 i‡(
¡ag
) {

209 
p
 = 
	`wc_ucs_gë_èg
(
¡ag
);

210 i‡(
p
 =
NULL
)

211 
¡ag
 = 0;

213 i‡(
¡ag
) {

214 
	`wc_push_ucs_to_utf7
(
os
, 
WC_C_LANGUAGE_TAG
, 
°
);

215 ; *
p
;Ö++)

216 
	`wc_push_ucs_to_utf7
(
os
, 
WC_C_LANGUAGE_TAG0
 | *
p
, 
°
);

218 
	`wc_push_ucs_to_utf7
(
os
, 
WC_C_CANCEL_TAG
, 
°
);

219  
¡ag
;

220 
	}
}

223 
	$wc_push_to_utf7
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

225 *
p
;

228 
	`WC_CCS_SET
(
cc
.
ccs
)) {

229 
WC_CCS_UCS4
:

230 i‡(
cc
.
code
 > 
WC_C_UNICODE_END
) {

231 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

234 
WC_CCS_US_ASCII
:

235 
WC_CCS_UCS2
:

236 i‡(
°
->
¡ag
)

237 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 0, st);

238 
	`wc_push_ucs_to_utf7
(
os
, 
cc
.
code
, 
°
);

240 
WC_CCS_UCS_TAG
:

241 i‡(
WcO±i⁄
.
u£_œnguage_èg
 && 
	`wc_ucs_èg_to_èg
(
cc
.
code
Ë!
°
->
¡ag
)

242 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 
	`wc_ucs_èg_to_èg
(
cc
.
code
), st);

243 
	`wc_push_ucs_to_utf7
(
os
, 
	`wc_ucs_èg_to_ucs
(
cc
.
code
), 
°
);

245 
WC_CCS_ISO_8859_1
:

246 i‡(
°
->
¡ag
)

247 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 0, st);

248 
	`wc_push_ucs_to_utf7
(
os
, 
cc
.
code
 | 0x80, 
°
);

250 
WC_CCS_UNKNOWN_W
:

251 i‡(!
WcO±i⁄
.
no_ª∂a˚
) {

252 i‡(
°
->
¡ag
)

253 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 0, st);

254 
p
 = 
WC_REPLACE_W
; *p;Ö++)

255 
	`wc_push_ucs_to_utf7
(
os
, (
wc_uöt32
)*
p
, 
°
);

258 
WC_CCS_UNKNOWN
:

259 i‡(!
WcO±i⁄
.
no_ª∂a˚
) {

260 i‡(
°
->
¡ag
)

261 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 0, st);

262 
p
 = 
WC_REPLACE
; *p;Ö++)

263 
	`wc_push_ucs_to_utf7
(
os
, (
wc_uöt32
)*
p
, 
°
);

267 i‡(
WcO±i⁄
.
ucs_c⁄v
 &&

268 (
cc
.
code
 = 
	`wc_™y_to_ucs
(cc)Ë!
WC_C_UCS4_ERROR
)

269 
cc
.
ccs
 = 
WC_CCS_UCS2
;

271 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

275 
	}
}

278 
	$wc_push_to_utf7_íd
(
Så
 
os
, 
wc_°©us
 *
°
)

280 i‡(
°
->
¡ag
)

281 
°
->
¡ag
 = 
	`wc_push_èg_to_utf7
(
os
, 0, st);

282 i‡(
°
->
°©e
 =
WC_UTF7_BASE64
) {

283 i‡(
°
->
shi·
)

284 
	`Såˇt_ch¨
(
os
, 
	`BASE64_C
(
°
->
ba£
));

285 
	`Såˇt_ch¨
(
os
, 
WC_C_UTF7_MINUS
);

288 
	}
}

290 
Så


291 
	$wc_ch¨_c⁄v_‰om_utf7
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

293 
Så
 
os
;

294 
wc_uöt32
 
high
;

295 
wc_uöt32
 
b
;

297 i‡(
°
->
°©e
 == -1) {

298 
°
->
°©e
 = 
WC_UTF7_NOSTATE
;

299 
os
 = 
	`Så√w_size
(8);

302 
°
->
°©e
) {

303 
WC_UTF7_NOSTATE
:

304 i‡(
c
 =
WC_C_UTF7_PLUS
) {

305 
°
->
°©e
 = 
WC_UTF7_PLUS
;

306 
°
->
shi·
 = 16;

307 
°
->
ba£
 = 0;

308 
high
 = 0;

309  
NULL
;

312 
WC_UTF7_PLUS
:

313 i‡(
c
 =
WC_C_UTF7_MINUS
) {

314 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)
WC_C_UTF7_PLUS
, 
°
);

315 
°
->
°©e
 = -1;

316  
os
;

318 
WC_UTF7_BASE64
:

319 
WC_UTF7_MAP
[
c
]) {

320 
BB
:

321 
BP
:

322 
b
 = 
	`C_BASE64
(
c
);

323 
°
->
shi·
 -= 6;

324 i‡(
°
->
shi·
 <= 0) {

325 
°
->
ba£
 |
b
 >> (- st->
shi·
);

326 i‡(
°
->
ba£
 >
WC_C_UCS2_SURROGATE
 &&

327 
°
->
ba£
 < 
WC_C_UCS2_SURROGATE_LOW
) {

328 i‡(! 
high
)

329 
high
 = 
°
->
ba£
;

331 
high
 = 0;

332 } i‡(
°
->
ba£
 >
WC_C_UCS2_SURROGATE_LOW
 &&

333 
°
->
ba£
 <
WC_C_UCS2_SURROGATE_END
) {

334 i‡(
high
)

335 
	`wtf_push_ucs
(
os
, 
	`wc_utf16_to_ucs
(
high
, 
°
->
ba£
), st);

337 
high
 = 0;

338 } i‡(
°
->
ba£
 !
WC_C_UCS2_BOM
)

339 
	`wtf_push_ucs
(
os
, 
°
->
ba£
, st);

340 
°
->
shi·
 += 16;

341 
°
->
ba£
 = 0;

343 
°
->
ba£
 |(
b
 << st->
shi·
) & 0xffff;

344 
°
->
°©e
 = 
WC_UTF7_BASE64
;

345  
os
;

346 
BM
:

347 
°
->
°©e
 = -1;

348  
NULL
;

351 
WC_UTF7_MAP
[
c
]) {

352 
CD
:

353 
CB
:

354 
	`Såˇt_ch¨
(
os
, ()
c
);

356 
C1
:

359 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)
c
, 
°
);

362 
°
->
°©e
 = -1;

363  
os
;

364 
	}
}

	@libwc/utf7.h

2 #i‚de‡
_WC_UTF7_H


3 
	#_WC_UTF7_H


	)

5 
	#WC_C_UTF7_PLUS
 '+'

	)

6 
	#WC_C_UTF7_MINUS
 '-'

	)

8 
	#WC_UTF7_MAP_SET_D
 0x00

	)

9 
	#WC_UTF7_MAP_SET_O
 0x01

	)

10 
	#WC_UTF7_MAP_SET_B
 0x02

	)

11 
	#WC_UTF7_MAP_C0
 0x04

	)

12 
	#WC_UTF7_MAP_C1
 0x08

	)

13 
	#WC_UTF7_MAP_BASE64
 0x10

	)

14 
	#WC_UTF7_MAP_PLUS
 0x20

	)

15 
	#WC_UTF7_MAP_MINUS
 0x40

	)

17 
	#WC_UTF7_NOSTATE
 0

	)

18 
	#WC_UTF7_PLUS
 1

	)

19 
	#WC_UTF7_BASE64
 2

	)

21 
wc_uöt8
 
WC_UTF7_MAP
[];

23 
Så
 
wc_c⁄v_‰om_utf7
(Så 
is
, 
wc_˚s
 
˚s
);

24 
wc_push_to_utf7
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

25 
wc_push_to_utf7_íd
(
Så
 
os
, 
wc_°©us
 *
°
);

26 
Så
 
wc_ch¨_c⁄v_‰om_utf7
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/utf8.c

2 #ifde‡
USE_UNICODE


4 
	~"wc.h
"

5 
	~"ucs.h
"

6 
	~"utf8.h
"

7 
	~"wtf.h
"

9 
wc_uöt8
 
	gWC_UTF8_MAP
[ 0x100 ] = {

29 
wc_uch¨
 
	gutf8_buf
[7];

31 
size_t


32 
	$wc_ucs_to_utf8
(
wc_uöt32
 
ucs
, 
wc_uch¨
 *
utf8
)

34 i‡(
ucs
 < 
WC_C_UTF8_L2
) {

35 
utf8
[0] = 
ucs
;

36 
utf8
[1] = 0;

38 } i‡(
ucs
 < 
WC_C_UTF8_L3
) {

39 
utf8
[0] = (
ucs
 >> 6) | 0xc0;

40 
utf8
[1] = (
ucs
 & 0x3f) | 0x80;

41 
utf8
[2] = 0;

43 } i‡(
ucs
 < 
WC_C_UTF8_L4
) {

44 
utf8
[0] = (
ucs
 >> 12) | 0xe0;

45 
utf8
[1] = ((
ucs
 >> 6) & 0x3f) | 0x80;

46 
utf8
[2] = (
ucs
 & 0x3f) | 0x80;

47 
utf8
[3] = 0;

49 } i‡(
ucs
 < 
WC_C_UTF8_L5
) {

50 
utf8
[0] = (
ucs
 >> 18) | 0xf0;

51 
utf8
[1] = ((
ucs
 >> 12) & 0x3f) | 0x80;

52 
utf8
[2] = ((
ucs
 >> 6) & 0x3f) | 0x80;

53 
utf8
[3] = (
ucs
 & 0x3f) | 0x80;

54 
utf8
[4] = 0;

56 } i‡(
ucs
 < 
WC_C_UTF8_L6
) {

57 
utf8
[0] = (
ucs
 >> 24) | 0xf8;

58 
utf8
[1] = ((
ucs
 >> 18) & 0x3f) | 0x80;

59 
utf8
[2] = ((
ucs
 >> 12) & 0x3f) | 0x80;

60 
utf8
[3] = ((
ucs
 >> 6) & 0x3f) | 0x80;

61 
utf8
[4] = (
ucs
 & 0x3f) | 0x80;

62 
utf8
[5] = 0;

64 } i‡(
ucs
 <
WC_C_UCS4_END
) {

65 
utf8
[0] = (
ucs
 >> 30) | 0xfc;

66 
utf8
[1] = ((
ucs
 >> 24) & 0x3f) | 0x80;

67 
utf8
[2] = ((
ucs
 >> 18) & 0x3f) | 0x80;

68 
utf8
[3] = ((
ucs
 >> 12) & 0x3f) | 0x80;

69 
utf8
[4] = ((
ucs
 >> 6) & 0x3f) | 0x80;

70 
utf8
[5] = (
ucs
 & 0x3f) | 0x80;

71 
utf8
[6] = 0;

74 
utf8
[0] = 0;

77 
	}
}

79 
wc_uöt32


80 
	$wc_utf8_to_ucs
(
wc_uch¨
 *
utf8
)

82 
wc_uöt32
 
ucs
;

84 
WC_UTF8_MAP
[
utf8
[0]]) {

86 
ucs
 = (
wc_uöt32
Ë
utf8
[0];

87 i‡(
ucs
 >
WC_C_UTF8_L2
)

89  
ucs
;

91 
ucs
 = ((
wc_uöt32
)(
utf8
[0] & 0x1f) << 6)

92 | (
wc_uöt32
)(
utf8
[1] & 0x3f);

93 i‡(
ucs
 < 
WC_C_UTF8_L2
)

95  
ucs
;

97 
ucs
 = ((
wc_uöt32
)(
utf8
[0] & 0x0f) << 12)

98 | ((
wc_uöt32
)(
utf8
[1] & 0x3f) << 6)

99 | (
wc_uöt32
)(
utf8
[2] & 0x3f);

100 i‡(
ucs
 < 
WC_C_UTF8_L3
)

102  
ucs
;

104 
ucs
 = ((
wc_uöt32
)(
utf8
[0] & 0x07) << 18)

105 | ((
wc_uöt32
)(
utf8
[1] & 0x3f) << 12)

106 | ((
wc_uöt32
)(
utf8
[2] & 0x3f) << 6)

107 | (
wc_uöt32
)(
utf8
[3] & 0x3f);

108 i‡(
ucs
 < 
WC_C_UTF8_L4
)

110  
ucs
;

112 
ucs
 = ((
wc_uöt32
)(
utf8
[0] & 0x03) << 24)

113 | ((
wc_uöt32
)(
utf8
[1] & 0x3f) << 18)

114 | ((
wc_uöt32
)(
utf8
[2] & 0x3f) << 12)

115 | ((
wc_uöt32
)(
utf8
[3] & 0x3f) << 6)

116 | (
wc_uöt32
)(
utf8
[4] & 0x3f);

117 i‡(
ucs
 < 
WC_C_UTF8_L5
)

119  
ucs
;

121 
ucs
 = ((
wc_uöt32
)(
utf8
[0] & 0x01) << 30)

122 | ((
wc_uöt32
)(
utf8
[1] & 0x3f) << 24)

123 | ((
wc_uöt32
)(
utf8
[2] & 0x3f) << 18)

124 | ((
wc_uöt32
)(
utf8
[3] & 0x3f) << 12)

125 | ((
wc_uöt32
)(
utf8
[4] & 0x3f) << 6)

126 | (
wc_uöt32
)(
utf8
[5] & 0x3f);

127 i‡(
ucs
 < 
WC_C_UTF8_L6
)

129  
ucs
;

133  
WC_C_UCS4_ERROR
;

134 
	}
}

136 
Så


137 
	$wc_c⁄v_‰om_utf8
(
Så
 
is
, 
wc_˚s
 
˚s
)

139 
Så
 
os
;

140 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

141 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

142 
wc_uch¨
 *
p
;

143 
wc_uch¨
 *
q
 = 
NULL
;

144 
°©e
 = 
WC_UTF8_NOSTATE
;

145 
size_t
 
√xt
 = 0;

146 
wc_uöt32
 
ucs
;

147 
wc_°©us
 
°
;

149 
p
 = 
•
;Ö < 
ï
 && *p < 0x80;Ö++)

151 i‡(
p
 =
ï
)

152  
is
;

153 
os
 = 
	`Så√w_size
(
is
->
Àngth
 * 4 / 3);

154 i‡(
p
 > 
•
)

155 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

157 
°
.
èg
 = 
NULL
;

158 
°
.
¡ag
 = 0;

159 ; 
p
 < 
ï
;Ö++) {

160 
°©e
) {

161 
WC_UTF8_NOSTATE
:

162 
√xt
 = 
WC_UTF8_MAP
[*
p
];

163 
√xt
) {

165 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)*
p
, &
°
);

168 
	`Såˇt_ch¨
(
os
, ()*
p
);

172 
	`wtf_push_unknown
(
os
, 
p
, 1);

175 
q
 = 
p
;

176 
√xt
--;

177 
°©e
 = 
WC_UTF8_NEXT
;

181 
WC_UTF8_NEXT
:

182 i‡(
WC_UTF8_MAP
[*
p
]) {

183 
	`wtf_push_unknown
(
os
, 
q
, 
p
 - q + 1);

184 
°©e
 = 
WC_UTF8_NOSTATE
;

187 i‡(--
√xt
)

189 
°©e
 = 
WC_UTF8_NOSTATE
;

190 
ucs
 = 
	`wc_utf8_to_ucs
(
q
);

191 i‡(
ucs
 =
WC_C_UCS4_ERROR
 ||

192 (
ucs
 >
WC_C_UCS2_SURROGATE
 && uc†<
WC_C_UCS2_SURROGATE_END
))

193 
	`wtf_push_unknown
(
os
, 
q
, 
p
 - q + 1);

194 i‡(
ucs
 !
WC_C_UCS2_BOM
)

195 
	`wtf_push_ucs
(
os
, 
ucs
, &
°
);

199 
°©e
) {

200 
WC_UTF8_NEXT
:

201 
	`wtf_push_unknown
(
os
, 
q
, 
p
 - q);

204  
os
;

205 
	}
}

208 
	$wc_push_èg_to_utf8
(
Så
 
os
, 
¡ag
)

210 *
p
;

212 i‡(
¡ag
) {

213 
p
 = 
	`wc_ucs_gë_èg
(
¡ag
);

214 i‡(
p
 =
NULL
)

215 
¡ag
 = 0;

217 i‡(
¡ag
) {

218 
	`wc_ucs_to_utf8
(
WC_C_LANGUAGE_TAG
, 
utf8_buf
);

219 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

220 ; *
p
;Ö++) {

221 
	`wc_ucs_to_utf8
(
WC_C_LANGUAGE_TAG0
 | *
p
, 
utf8_buf
);

222 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

225 
	`wc_ucs_to_utf8
(
WC_C_CANCEL_TAG
, 
utf8_buf
);

226 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

228  
¡ag
;

229 
	}
}

232 
	$wc_push_to_utf8
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

235 
	`WC_CCS_SET
(
cc
.
ccs
)) {

236 
WC_CCS_US_ASCII
:

237 i‡(
°
->
¡ag
)

238 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

239 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0x7f));

241 
WC_CCS_UCS2
:

242 
WC_CCS_UCS4
:

243 i‡(
°
->
¡ag
)

244 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

245 
	`wc_ucs_to_utf8
(
cc
.
code
, 
utf8_buf
);

246 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

248 
WC_CCS_UCS_TAG
:

249 i‡(
WcO±i⁄
.
u£_œnguage_èg
 && 
	`wc_ucs_èg_to_èg
(
cc
.
code
Ë!
°
->
¡ag
)

250 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 
	`wc_ucs_èg_to_èg
(
cc
.
code
));

251 
	`wc_ucs_to_utf8
(
	`wc_ucs_èg_to_ucs
(
cc
.
code
), 
utf8_buf
);

252 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

254 
WC_CCS_ISO_8859_1
:

255 i‡(
°
->
¡ag
)

256 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

257 
	`wc_ucs_to_utf8
((
cc
.
code
 | 0x80), 
utf8_buf
);

258 
	`Såˇt_ch¨p
(
os
, (*)
utf8_buf
);

260 
WC_CCS_UNKNOWN_W
:

261 i‡(!
WcO±i⁄
.
no_ª∂a˚
) {

262 i‡(
°
->
¡ag
)

263 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

264 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

267 
WC_CCS_UNKNOWN
:

268 i‡(!
WcO±i⁄
.
no_ª∂a˚
) {

269 i‡(
°
->
¡ag
)

270 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

271 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

275 i‡(
WcO±i⁄
.
ucs_c⁄v
 &&

276 (
cc
.
code
 = 
	`wc_™y_to_ucs
(cc)Ë!
WC_C_UCS4_ERROR
)

277 
cc
.
ccs
 = 
WC_CCS_UCS2
;

279 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

283 
	}
}

286 
	$wc_push_to_utf8_íd
(
Så
 
os
, 
wc_°©us
 *
°
)

288 i‡(
°
->
¡ag
)

289 
°
->
¡ag
 = 
	`wc_push_èg_to_utf8
(
os
, 0);

291 
	}
}

293 
Så


294 
	$wc_ch¨_c⁄v_‰om_utf8
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

296 
Så
 
os
;

297 
wc_uch¨
 
buf
[6];

298 
size_t
 
nbuf
, 
√xt
;

299 
wc_uöt32
 
ucs
;

301 i‡(
°
->
°©e
 == -1) {

302 
°
->
°©e
 = 
WC_UTF8_NOSTATE
;

303 
os
 = 
	`Så√w_size
(8);

304 
°
->
èg
 = 
NULL
;

305 
°
->
¡ag
 = 0;

306 
nbuf
 = 0;

309 
°
->
°©e
) {

310 
WC_UTF8_NOSTATE
:

311 
√xt
 = 
WC_UTF8_MAP
[
c
]) {

313 
	`wtf_push_ucs
(
os
, (
wc_uöt32
)
c
, 
°
);

316 
	`Såˇt_ch¨
(
os
, ()
c
);

322 
buf
[
nbuf
++] = 
c
;

323 
√xt
--;

324 
°
->
°©e
 = 
WC_UTF8_NEXT
;

325  
NULL
;

328 
WC_UTF8_NEXT
:

329 i‡(
WC_UTF8_MAP
[
c
])

331 
buf
[
nbuf
++] = 
c
;

332 i‡(--
√xt
)

333  
NULL
;

334 
ucs
 = 
	`wc_utf8_to_ucs
(
buf
);

335 i‡(
ucs
 =
WC_C_UCS4_ERROR
 ||

336 (
ucs
 >
WC_C_UCS2_SURROGATE
 && uc†<
WC_C_UCS2_SURROGATE_END
))

338 i‡(
ucs
 !
WC_C_UCS2_BOM
)

339 
	`wtf_push_ucs
(
os
, 
ucs
, 
°
);

342 
°
->
°©e
 = -1;

343  
os
;

344 
	}
}

	@libwc/utf8.h

2 #i‚de‡
_WC_UTF8_H


3 
	#_WC_UTF8_H


	)

5 
	#WC_C_UTF8_L2
 0x80

	)

6 
	#WC_C_UTF8_L3
 0x800

	)

7 
	#WC_C_UTF8_L4
 0x10000

	)

8 
	#WC_C_UTF8_L5
 0x200000

	)

9 
	#WC_C_UTF8_L6
 0x4000000

	)

11 
	#WC_UTF8_NOSTATE
 0

	)

12 
	#WC_UTF8_NEXT
 1

	)

14 
wc_uöt8
 
WC_UTF8_MAP
[];

16 
size_t
 
wc_ucs_to_utf8
(
wc_uöt32
 
ucs
, 
wc_uch¨
 *
utf8
);

17 
wc_uöt32
 
wc_utf8_to_ucs
(
wc_uch¨
 *
utf8
);

18 
Så
 
wc_c⁄v_‰om_utf8
(Så 
is
, 
wc_˚s
 
˚s
);

19 
wc_push_to_utf8
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

20 
wc_push_to_utf8_íd
(
Så
 
os
, 
wc_°©us
 *
°
);

21 
Så
 
wc_ch¨_c⁄v_‰om_utf8
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/viet.c

2 
	~"wc.h
"

3 
	~"võt.h
"

4 
	~"wtf.h
"

5 
	~"£¨ch.h
"

6 #ifde‡
USE_UNICODE


7 
	~"ucs.h
"

9 
	~"m≠/tcvn57123_tcvn5712.m≠
"

11 
wc_uöt8
 
	gwc_c0_tcvn57122_m≠
[ 0x20 ] = {

15 
wc_uöt8
 
	gwc_c0_viscii112_m≠
[ 0x20 ] = {

19 
wc_uöt8
 
	gwc_c0_vps2_m≠
[ 0x20 ] = {

23 
wc_uöt8
 
	gtcvn5712_¥ecompo£_m≠
[ 0x100 ] = {

48 
wc_uöt8
 
	g˝1258_¥ecompo£_m≠
[ 0x100 ] = {

76 
wc_uöt32


77 
	$wc_tcvn5712_¥ecompo£
(
wc_uch¨
 
c1
, wc_uch¨ 
c2
)

79 i‡(
tcvn5712_¥ecompo£_m≠
[
c1
] =1 &&Åcvn5712_¥ecompo£_m≠[
c2
] == 2)

80  ((
wc_uöt32
)
c1
 << 8Ë| 
c2
;

83 
	}
}

85 
wc_wch¨_t


86 
	$wc_tcvn57123_to_tcvn5712
(
wc_wch¨_t
 
cc
)

88 
wc_m≠
 *
m≠
;

90 
m≠
 = 
	`wc_m≠_£¨ch
((
wc_uöt16
)(
cc
.
code
 & 0x7f7f),

91 
tcvn57123_tcvn5712_m≠
, 
N_tcvn57123_tcvn5712_m≠
);

92 i‡(
m≠
) {

93 
cc
.
ccs
 = (
m≠
->
code2
 < 0x20Ë? 
WC_CCS_TCVN_5712_2
 : 
WC_CCS_TCVN_5712_1
;

94 
cc
.
code
 = 
m≠
->
code2
 | 0x80;

96 
cc
.
ccs
 = 
WC_CCS_UNKNOWN
;

98  
cc
;

99 
	}
}

101 
wc_uöt32


102 
	$wc_˝1258_¥ecompo£
(
wc_uch¨
 
c1
, wc_uch¨ 
c2
)

104 i‡(
˝1258_¥ecompo£_m≠
[
c1
] =1 && cp1258_¥ecompo£_m≠[
c2
] == 2)

105  ((
wc_uöt32
)
c1
 << 8Ë| 
c2
;

108 
	}
}

110 
Så


111 
	$wc_c⁄v_‰om_võt
(
Så
 
is
, 
wc_˚s
 
˚s
)

113 
Så
 
os
;

114 
wc_uch¨
 *
•
 = (wc_uch¨ *)
is
->
±r
;

115 
wc_uch¨
 *
ï
 = 
•
 + 
is
->
Àngth
;

116 
wc_uch¨
 *
p
;

117 
wc_ccs
 
ccs1
 = 
WcCesInfo
[
	`WC_CCS_INDEX
(
˚s
)].
g£t
[1].
ccs
;

118 
wc_ccs
 
ccs2
 = 
WcCesInfo
[
	`WC_CCS_INDEX
(
˚s
)].
g£t
[2].
ccs
;

119 
wc_uöt8
 *
m≠
 = 
NULL
;

121 
˚s
) {

122 
WC_CES_TCVN_5712
:

123 
m≠
 = 
wc_c0_tcvn57122_m≠
;

125 
WC_CES_VISCII_11
:

126 
m≠
 = 
wc_c0_viscii112_m≠
;

128 
WC_CES_VPS
:

129 
m≠
 = 
wc_c0_vps2_m≠
;

133 
	`wc_¸óã_dëe˘_m≠
(
˚s
, 
WC_FALSE
);

134 
p
 = 
•
;Ö < 
ï
 && ! 
WC_DETECT_MAP
[*p];Ö++)

136 i‡(
p
 =
ï
)

137  
is
;

138 
os
 = 
	`Så√w_size
(
is
->
Àngth
);

139 i‡(
p
 > 
•
)

140 
	`Såˇt_ch¨p_n
(
os
, 
is
->
±r
, ()(
p
 - 
•
));

142 ; 
p
 < 
ï
;Ö++) {

143 i‡(*
p
 & 0x80)

144 
	`wtf_push
(
os
, 
ccs1
, (
wc_uöt32
)*
p
);

145 i‡(*
p
 < 0x20 && 
m≠
[*p])

146 
	`wtf_push
(
os
, 
ccs2
, (
wc_uöt32
)*
p
);

148 
	`Såˇt_ch¨
(
os
, ()*
p
);

150  
os
;

151 
	}
}

154 
	$wc_push_to_võt
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
)

156 
wc_ccs
 
ccs1
 = 
°
->
˚s_öfo
->
g£t
[1].
ccs
;

157 
wc_ccs
 
ccs2
 = 0, 
ccs3
 = 0;

158 
wc_uöt8
 *
m≠
 = 
NULL
;

160 
°
->
˚s_öfo
->
id
) {

161 
WC_CES_CP1258
:

162 
ccs3
 = 
°
->
˚s_öfo
->
g£t
[2].
ccs
;

164 
WC_CES_TCVN_5712
:

165 
m≠
 = 
wc_c0_tcvn57122_m≠
;

166 
ccs2
 = 
°
->
˚s_öfo
->
g£t
[2].
ccs
;

167 
ccs3
 = 
°
->
˚s_öfo
->
g£t
[3].
ccs
;

169 
WC_CES_VISCII_11
:

170 
m≠
 = 
wc_c0_viscii112_m≠
;

171 
ccs2
 = 
°
->
˚s_öfo
->
g£t
[2].
ccs
;

173 
WC_CES_VPS
:

174 
m≠
 = 
wc_c0_vps2_m≠
;

175 
ccs2
 = 
°
->
˚s_öfo
->
g£t
[2].
ccs
;

180 i‡(
cc
.
ccs
 =
ccs1
) {

181 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 | 0x80));

183 } i‡(
cc
.
ccs
 =
ccs2
) {

184 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0x7f));

186 } i‡(
cc
.
ccs
 =
ccs3
) {

187 
	`Såˇt_ch¨
(
os
, ()((
cc
.
code
 >> 8) & 0xff));

188 
	`Såˇt_ch¨
(
os
, ()(
cc
.
code
 & 0xff));

191 
cc
.
ccs
) {

192 
WC_CCS_US_ASCII
:

193 i‡(
cc
.
code
 < 0x20 && 
m≠
 && map[cc.code])

194 
	`Såˇt_ch¨
(
os
, ' ');

196 
	`Såˇt_ch¨
(
os
, ()
cc
.
code
);

198 
WC_CCS_UNKNOWN_W
:

199 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

200 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE_W
);

202 
WC_CCS_UNKNOWN
:

203 i‡(!
WcO±i⁄
.
no_ª∂a˚
)

204 
	`Såˇt_ch¨p
(
os
, 
WC_REPLACE
);

207 #ifde‡
USE_UNICODE


208 i‡(
WcO±i⁄
.
ucs_c⁄v
)

209 
cc
 = 
	`wc_™y_to_™y_˚s
(cc, 
°
);

212 
cc
.
ccs
 = 
	`WC_CCS_IS_WIDE
(cc.ccsË? 
WC_CCS_UNKNOWN_W
 : 
WC_CCS_UNKNOWN
;

216 
	}
}

218 
Så


219 
	$wc_ch¨_c⁄v_‰om_võt
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
)

221 
Så
 
os
 = 
	`Så√w_size
(1);

222 
wc_uöt8
 *
m≠
 = 
NULL
;

224 
°
->
˚s_öfo
->
id
) {

225 
WC_CES_TCVN_5712
:

226 
m≠
 = 
wc_c0_tcvn57122_m≠
;

228 
WC_CES_VISCII_11
:

229 
m≠
 = 
wc_c0_viscii112_m≠
;

231 
WC_CES_VPS
:

232 
m≠
 = 
wc_c0_vps2_m≠
;

236 i‡(
c
 & 0x80)

237 
	`wtf_push
(
os
, 
°
->
˚s_öfo
->
g£t
[1].
ccs
, (
wc_uöt32
)
c
);

238 i‡(
c
 < 0x20 && 
m≠
[c])

239 
	`wtf_push
(
os
, 
°
->
˚s_öfo
->
g£t
[2].
ccs
, (
wc_uöt32
)
c
);

241 
	`Såˇt_ch¨
(
os
, ()
c
);

242  
os
;

243 
	}
}

	@libwc/viet.h

2 #i‚de‡
_WC_VIET_H


3 
	#_WC_VIET_H


	)

5 
wc_uöt8
 
wc_c0_tcvn57122_m≠
[];

6 
wc_uöt8
 
wc_c0_viscii112_m≠
[];

7 
wc_uöt8
 
wc_c0_vps2_m≠
[];

9 
Så
 
wc_c⁄v_‰om_võt
(Så 
is
, 
wc_˚s
 
˚s
);

10 
wc_push_to_võt
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

11 
wc_push_to_˝1258
(
Så
 
os
, 
wc_wch¨_t
 
cc
, 
wc_°©us
 *
°
);

12 
wc_wch¨_t
 
wc_tcvn57123_to_tcvn5712
(wc_wch¨_à
cc
);

13 
wc_uöt32
 
wc_tcvn5712_¥ecompo£
(
wc_uch¨
 
c1
, wc_uch¨ 
c2
);

14 
wc_uöt32
 
wc_˝1258_¥ecompo£
(
wc_uch¨
 
c1
, wc_uch¨ 
c2
);

15 
Så
 
wc_ch¨_c⁄v_‰om_võt
(
wc_uch¨
 
c
, 
wc_°©us
 *
°
);

	@libwc/wc.h

2 #i‚de‡
_WC_WC_H


3 
	#_WC_WC_H


	)

5 
	~<Så.h
>

6 
	~"wc_ty≥s.h
"

7 
	~"˚s.h
"

9 
	#WC_FALSE
 0

	)

10 
	#WC_TRUE
 1

	)

12 
	#WC_OPT_DETECT_OFF
 0

	)

13 
	#WC_OPT_DETECT_ISO_2022
 1

	)

14 
	#WC_OPT_DETECT_ON
 2

	)

16 
	#WC_LOCALE_JA_JP
 1

	)

17 
	#WC_LOCALE_ZH_CN
 2

	)

18 
	#WC_LOCALE_ZH_TW
 3

	)

19 
	#WC_LOCALE_ZH_HK
 4

	)

20 
	#WC_LOCALE_KO_KR
 5

	)

22 
wc_uöt8
 
WC_DETECT_MAP
[];

24 
wc_˚s_öfo
 
WcCesInfo
[];

25 
wc_›ti⁄
 
WcO±i⁄
;

26 
wc_loˇÀ
 
WcLoˇÀ
;

27 *
WcRïœ˚
;

28 *
WcRïœ˚W
;

29 
	#WC_REPLACE
 
WcRïœ˚


	)

30 
	#WC_REPLACE_W
 
WcRïœ˚W


	)

32 
	#wc_c⁄v
(
is
, 
f_˚s
, 
t_˚s
) \

33 
	`wc_Så_c⁄v
(
	`Så√w_ch¨p
((
is
)), (
f_˚s
), (
t_˚s
))

	)

34 
	#wc_c⁄v_n
(
is
, 
n
, 
f_˚s
, 
t_˚s
) \

35 
	`wc_Så_c⁄v
(
	`Så√w_ch¨p_n
((
is
), (
n
)), (
f_˚s
), (
t_˚s
))

	)

36 
	#wc_c⁄v_°ri˘
(
is
, 
f_˚s
, 
t_˚s
) \

37 
	`wc_Så_c⁄v_°ri˘
(
	`Så√w_ch¨p
((
is
)), (
f_˚s
), (
t_˚s
))

	)

38 
	#wc_c⁄v_n_°ri˘
(
is
, 
n
, 
f_˚s
, 
t_˚s
)\

39 
	`wc_Så_c⁄v_°ri˘
(
	`Så√w_ch¨p_n
((
is
), (
n
)), (
f_˚s
), (
t_˚s
))

	)

40 
	#wc_c⁄v_wôh_dëe˘
(
is
, 
f_˚s
, 
höt
, 
t_˚s
) \

41 
	`wc_Så_c⁄v_wôh_dëe˘
(
	`Så√w_ch¨p
((
is
)), (
f_˚s
), (
höt
), (
t_˚s
))

	)

42 
	#wc_c⁄v_n_wôh_dëe˘
(
is
, 
n
, 
f_˚s
, 
höt
, 
t_˚s
)\

43 
	`wc_Så_c⁄v_wôh_dëe˘
(
	`Så√w_ch¨p_n
((
is
), (
n
)), (
f_˚s
), (
höt
), (
t_˚s
))

	)

45 
Så
 
wc_Så_c⁄v
(Så 
is
, 
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
);

46 
Så
 
wc_Så_c⁄v_°ri˘
(Så 
is
, 
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
);

47 
Så
 
wc_Så_c⁄v_wôh_dëe˘
(Så 
is
, 
wc_˚s
 *
f_˚s
, wc_˚†
höt
, wc_˚†
t_˚s
);

49 
wc_öput_öô
(
wc_˚s
 
˚s
, 
wc_°©us
 *
°
);

50 
wc_ouçut_öô
(
wc_˚s
 
˚s
, 
wc_°©us
 *
°
);

51 
wc_push_íd
(
Så
 
os
, 
wc_°©us
 *
°
);

52 
wc_boﬁ
 
wc_˚s_has_ccs
(
wc_ccs
 
ccs
, 
wc_°©us
 *
°
);

54 
wc_ch¨_c⁄v_öô
(
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
);

55 
Så
 
wc_ch¨_c⁄v
(
c
);

57 
wc_putc_öô
(
wc_˚s
 
f_˚s
, wc_˚†
t_˚s
);

58 
wc_putc
(*
c
, 
FILE
 *
f
);

59 
wc_putc_íd
(
FILE
 *
f
);

60 
wc_putc_˛ór_°©us
();

62 
wc_¸óã_dëe˘_m≠
(
wc_˚s
 
˚s
, 
wc_boﬁ
 
esc
);

63 
wc_˚s
 
wc_auto_dëe˘
(*
is
, 
size_t
 
Àn
, wc_˚†
höt
);

65 
wc_˚s
 
wc_guess_ch¨£t
(*
ch¨£t
, wc_˚†
‹ig
);

66 
wc_˚s
 
wc_guess_ch¨£t_sh‹t
(*
ch¨£t
, wc_˚†
‹ig
);

67 
wc_˚s
 
wc_guess_loˇÀ_ch¨£t
(*
loˇÀ
, wc_˚†
‹ig
);

68 
wc_˚s
 
wc_ch¨£t_to_˚s
(*
ch¨£t
);

69 
wc_˚s
 
wc_ch¨£t_sh‹t_to_˚s
(*
ch¨£t
);

70 
wc_˚s
 
wc_loˇÀ_to_˚s
(*
loˇÀ
);

71 
wc_˚s
 
wc_guess_8bô_ch¨£t
(wc_˚†
‹ig
);

72 *
wc_˚s_to_ch¨£t
(
wc_˚s
 
˚s
);

73 *
wc_˚s_to_ch¨£t_desc
(
wc_˚s
 
˚s
);

74 
wc_boﬁ
 
wc_check_˚s
(
wc_˚s
 
˚s
);

75 
wc_˚s_li°
 *
wc_gë_˚s_li°
();

	@libwc/wc_types.h

2 #i‚de‡
_WC_TYPES_H


3 
	#_WC_TYPES_H


	)

5 
	~<Så.h
>

6 
	~<c⁄fig.h
>

7 #i‡
deföed
(
HAVE_STDINT_H
)

8 
	~<°döt.h
>

9 #ñi‡
deföed
(
HAVE_INTTYPES_H
)

10 
	~<öây≥s.h
>

13 
	twc_uch¨
;

14 #i‡
deföed
(
HAVE_STDINT_H
Ë|| deföed(
HAVE_INTTYPES_H
)

15 
uöt8_t
 
	twc_uöt8
;

16 
uöt16_t
 
	twc_uöt16
;

17 
uöt32_t
 
	twc_uöt32
;

19 
	twc_uöt8
;

20 
	twc_uöt16
;

21 
	twc_uöt32
;

24 
wc_uöt32
 
	twc_ccs
;

25 
wc_uöt32
 
	twc_˚s
;

26 
wc_uöt32
 
	twc_loˇÀ
;

27 
wc_uch¨
 
	twc_boﬁ
;

30 
wc_ccs
 
	mccs
;

31 
wc_uöt32
 
	mcode
;

32 } 
	twc_wch¨_t
;

35 
wc_uöt16
 
	mcode
;

36 
wc_uöt16
 
	mcode2
;

37 } 
	twc_m≠
;

40 
wc_uöt16
 
	mcode
;

41 
wc_uöt16
 
	mcode2
;

42 
wc_uöt16
 
	mcode3
;

43 } 
	twc_m≠3
;

46 
wc_ccs
 
	mccs
;

47 
size_t
 
	mn
;

48 
wc_m≠
 *
	mm≠
;

49 
wc_wch¨_t
 (*
c⁄v
)();

50 } 
	twc_èbÀ
;

53 
wc_ccs
 
	mccs
;

54 
wc_uch¨
 
	mg
;

55 
wc_boﬁ
 
	möô
;

56 } 
	twc_g£t
;

59 
wc_˚s
 
	mid
;

60 *
	m«me
;

61 *
	mdesc
;

62 
wc_g£t
 *
	mg£t
;

63 
wc_uch¨
 *
	mg£t_ext
;

64 
Så
 (*
c⁄v_‰om
)();

65 (*
	mpush_to
)();

66 
Så
 (*
ch¨_c⁄v
)();

67 } 
	twc_˚s_öfo
;

70 
wc_˚s
 
	mid
;

71 *
	m«me
;

72 *
	mdesc
;

73 } 
	twc_˚s_li°
;

76 
wc_uöt8
 
	mauto_dëe˘
;

77 
wc_boﬁ
 
	mu£_comböög
;

78 
wc_boﬁ
 
	mu£_œnguage_èg
;

79 
wc_boﬁ
 
	mucs_c⁄v
;

80 
wc_boﬁ
 
	m¥e_c⁄v
;

81 
wc_boﬁ
 
	mfix_width_c⁄v
;

83 
wc_boﬁ
 
	mu£_gb12345_m≠
;

85 
wc_boﬁ
 
	mu£_jisx0201
;

86 
wc_boﬁ
 
	mu£_jisc6226
;

87 
wc_boﬁ
 
	mu£_jisx0201k
;

88 
wc_boﬁ
 
	mu£_jisx0212
;

89 
wc_boﬁ
 
	mu£_jisx0213
;

90 
wc_boﬁ
 
	m°ri˘_iso2022
;

91 
wc_boﬁ
 
	mgb18030_as_ucs
;

92 
wc_boﬁ
 
	mno_ª∂a˚
;

93 
wc_boﬁ
 
	mu£_wide
;

94 } 
	twc_›ti⁄
;

97 
wc_˚s_öfo
 *
	m˚s_öfo
;

98 
wc_uöt8
 
	mgr
;

99 
wc_uöt8
 
	mgl
;

100 
wc_uöt8
 
	mss
;

101 
wc_ccs
 
	mg0_ccs
;

102 
wc_ccs
 
	mg1_ccs
;

103 
wc_ccs
 
	mdesign
[4];

104 #ifde‡
USE_UNICODE


105 
wc_èbÀ
 **
	méi°
;

106 
wc_èbÀ
 **
	méi°w
;

108 
	m°©e
;

109 #ifde‡
USE_UNICODE


110 
Så
 
	mèg
;

111 
	m¡ag
;

112 
wc_uöt32
 
	mba£
;

113 
	mshi·
;

115 } 
	twc_°©us
;

	@libwc/wtf.c

2 
	~"wc.h
"

3 
	~"wtf.h
"

4 
	~"sjis.h
"

5 
	~"big5.h
"

6 
	~"hkscs.h
"

7 
	~"johab.h
"

8 
	~"jis.h
"

9 
	~"võt.h
"

10 
	~"gbk.h
"

11 
	~"gb18030.h
"

12 
	~"uhc.h
"

13 #ifde‡
USE_UNICODE


14 
	~"ucs.h
"

15 
	~"utf8.h
"

18 
wc_uöt8
 
	gWTF_WIDTH_MAP
[ 0x100 ] = {

30 
wc_uöt8
 
	gWTF_LEN_MAP
[ 0x100 ] = {

42 
wc_uöt8
 
	gWTF_TYPE_MAP
[ 0x100 ] = {

55 
wc_uöt16
 
	gCCS_MAP
[ 33 ] = {

56 
WC_CCS_A_CS94
 >> 8, 
WC_CCS_A_CS94W
 >> 8,

57 
WC_CCS_A_CS96
 >> 8, 
WC_CCS_A_CS96W
 >> 8,

58 
WC_CCS_A_CS942
 >> 8, 
WC_CCS_A_UNKNOWN
 >> 8,

59 
WC_CCS_A_PCS
 >> 8, 
WC_CCS_A_PCSW
 >> 8,

60 
WC_CCS_A_WCS16
 >> 8, 
WC_CCS_A_WCS16W
 >> 8,

61 
WC_CCS_A_WCS32
 >> 8, 
WC_CCS_A_WCS32W
 >> 8,

64 
WC_CCS_A_CS94_C
 >> 8, 
WC_CCS_A_CS94W_C
 >> 8,

65 
WC_CCS_A_CS96_C
 >> 8, 
WC_CCS_A_CS96W_C
 >> 8,

66 
WC_CCS_A_CS942_C
 >> 8, 0,

67 
WC_CCS_A_PCS_C
 >> 8, 
WC_CCS_A_PCSW_C
 >> 8,

68 
WC_CCS_A_WCS16_C
 >> 8, 
WC_CCS_A_WCS16W_C
 >> 8,

69 
WC_CCS_A_WCS32_C
 >> 8, 
WC_CCS_A_WCS32W_C
 >> 8,

75 
wc_ccs
 
	gwtf_gr_ccs
 = 0;

76 
wc_˚s
 
	gwtf_maj‹_˚s
 = 
WC_CES_US_ASCII
;

77 
wc_°©us
 
	gwtf_maj‹_°
;

80 
	$wtf_öô
(
wc_˚s
 
˚s1
, wc_˚†
˚s2
)

82 
i
;

83 
wc_g£t
 *
g£t
;

85 i‡(
	`wc_check_˚s
(
˚s2
))

86 
wtf_maj‹_˚s
 = 
˚s2
;

88 i‡(! 
	`wc_check_˚s
(
˚s1
))

90 
g£t
 = 
WcCesInfo
[
	`WC_CES_INDEX
(
˚s1
)].gset;

91 i‡(
g£t
 =
NULL
 || g£t[1].
ccs
 == 0 ||

92 
g£t
[1].
ccs
 & (
WC_CCS_A_WCS16
|
WC_CCS_A_WCS32
))

94 
wtf_gr_ccs
 = 
g£t
[1].
ccs
;

96 i‡(
	`WC_CCS_IS_WIDE
(
wtf_gr_ccs
)) {

97 
i
 = 0xa1; i <= 0xff; i++) {

98 
WTF_WIDTH_MAP
[
i
] = 2;

99 
WTF_LEN_MAP
[
i
] = 2;

100 
WTF_TYPE_MAP
[
i
] = 
WTF_TYPE_WCHAR1W
;

103 
i
 = 0xa1; i <= 0xff; i++) {

104 
WTF_WIDTH_MAP
[
i
] = 1;

105 
WTF_LEN_MAP
[
i
] = 1;

106 
WTF_TYPE_MAP
[
i
] = 
WTF_TYPE_WCHAR1
;

109 
	}
}

120 
	$wtf_°rwidth
(
wc_uch¨
 *
p
)

122 
w
 = 0;

124 *
p
) {

125 
w
 +
	`wtf_width
(
p
);

126 
p
 +
WTF_LEN_MAP
[*p];

128  
w
;

129 
	}
}

139 
size_t


140 
	$wtf_Àn
(
wc_uch¨
 *
p
)

142 
wc_uch¨
 *
q
 = 
p
;

144 
q
 +
WTF_LEN_MAP
[*q];

145 *
q
 && ! 
WTF_WIDTH_MAP
[*q])

146 
q
 +
WTF_LEN_MAP
[*q];

147  
q
 - 
p
;

148 
	}
}

158 
	#wcs16_to_wtf
(
c
, 
p
) \

159 ((
p
)[0] = (((
c
) >> 14) & 0x03) | 0x80), \

160 ((
p
)[1] = (((
c
) >> 7) & 0x7f) | 0x80), \

161 ((
p
)[2] = ( (
c
Ë& 0x7fË| 0x80)

	)

162 
	#wcs32_to_wtf
(
c
, 
p
) \

163 ((
p
)[0] = (((
c
) >> 28) & 0x0f) | 0x80), \

164 ((
p
)[1] = (((
c
) >> 21) & 0x7f) | 0x80), \

165 ((
p
)[2] = (((
c
) >> 14) & 0x7f) | 0x80), \

166 ((
p
)[3] = (((
c
) >> 7) & 0x7f) | 0x80), \

167 ((
p
)[4] = ( (
c
Ë& 0x7fË| 0x80)

	)

168 
	#wtf_to_wcs16
(
p
) \

169 ((
wc_uöt32
)((
p
)[0] & 0x03) << 14) \

170 | ((
wc_uöt32
)((
p
)[1] & 0x7f) << 7) \

171 | ((
wc_uöt32
)((
p
)[2] & 0x7fË)

	)

172 
	#wtf_to_wcs32
(
p
) \

173 ((
wc_uöt32
)((
p
)[0] & 0x0f) << 28) \

174 | ((
wc_uöt32
)((
p
)[1] & 0x7f) << 21) \

175 | ((
wc_uöt32
)((
p
)[2] & 0x7f) << 14) \

176 | ((
wc_uöt32
)((
p
)[3] & 0x7f) << 7) \

177 | ((
wc_uöt32
)((
p
)[4] & 0x7fË)

	)

180 
	$wtf_push
(
Så
 
os
, 
wc_ccs
 
ccs
, 
wc_uöt32
 
code
)

182 
wc_uch¨
 
s
[8];

183 
wc_wch¨_t
 
cc
, 
cc2
;

184 
size_t
 
n
;

186 i‡(
ccs
 =
WC_CCS_US_ASCII
) {

187 
	`Såˇt_ch¨
(
os
, ()(
code
 & 0x7f));

190 
cc
.
ccs
 = ccs;

191 
cc
.
code
 = code;

192 i‡(
WcO±i⁄
.
¥e_c⁄v
 && !(
cc
.
ccs
 & 
WC_CCS_A_UNKNOWN
)) {

193 i‡((
ccs
 =
WC_CCS_JOHAB
 || cc†=
WC_CCS_JOHAB_1
 ||

194 
ccs
 =
WC_CCS_JOHAB_2
 || cc†=
WC_CCS_JOHAB_3
) &&

195 (
wtf_maj‹_˚s
 =
WC_CES_EUC_KR
 ||

196 
wtf_maj‹_˚s
 =
WC_CES_ISO_2022_KR
)) {

197 
cc2
 = 
	`wc_johab_to_ksx1001
(
cc
);

198 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc2
.
ccs
))

199 
cc
 = 
cc2
;

200 } i‡(
ccs
 =
WC_CCS_KS_X_1001
 &&

201 
wtf_maj‹_˚s
 =
WC_CES_JOHAB
) {

202 
cc2
 = 
	`wc_ksx1001_to_johab
(
cc
);

203 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc2
.
ccs
))

204 
cc
 = 
cc2
;

206 #ifde‡
USE_UNICODE


207 i‡(
WcO±i⁄
.
ucs_c⁄v
) {

208 
wc_boﬁ
 
fix_width_c⁄v
 = 
WcO±i⁄
.fix_width_conv;

209 
WcO±i⁄
.
fix_width_c⁄v
 = 
WC_FALSE
;

210 
	`wc_ouçut_öô
(
wtf_maj‹_˚s
, &
wtf_maj‹_°
);

211 i‡(! 
	`wc_˚s_has_ccs
(
	`WC_CCS_SET
(
ccs
), &
wtf_maj‹_°
)) {

212 
cc2
 = 
	`wc_™y_to_™y_˚s
(
cc
, &
wtf_maj‹_°
);

213 i‡(
cc2
.
ccs
 =
WC_CCS_US_ASCII
) {

214 
	`Såˇt_ch¨
(
os
, ()(
cc2
.
code
 & 0x7f));

217 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc2
.
ccs
) &&

218 
cc2
.
ccs
 !
WC_CCS_CP1258_2
 &&

219 
cc2
.
ccs
 !
WC_CCS_TCVN_5712_3
)

220 
cc
 = 
cc2
;

222 
WcO±i⁄
.
fix_width_c⁄v
 = fix_width_conv;

227 
	`WC_CCS_TYPE
(
cc
.
ccs
)) {

228 
WC_CCS_A_CS94
:

229 i‡(
cc
.
ccs
 =
wtf_gr_ccs
) {

230 
s
[0] = (
cc
.
code
 & 0x7f) | 0x80;

231 
n
 = 1;

234 i‡(
cc
.
ccs
 =
WC_CCS_JIS_X_0201K
 && !
WcO±i⁄
.
u£_jisx0201k
) {

235 
cc2
 = 
	`wc_jisx0201k_to_jisx0208
(
cc
);

236 i‡(!
	`WC_CCS_IS_UNKNOWN
(
cc2
.
ccs
)) {

237 
	`wtf_push
(
os
, 
cc2
.
ccs
, cc2.
code
);

241 
s
[0] = 
WTF_C_CS94
;

242 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

243 
s
[2] = (
cc
.
code
 & 0x7f) | 0x80;

244 
n
 = 3;

246 
WC_CCS_A_CS94W
:

247 i‡(
cc
.
ccs
 =
wtf_gr_ccs
) {

248 
s
[0] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

249 
s
[1] = ( 
cc
.
code
 & 0x7f) | 0x80;

250 
n
 = 2;

253 
s
[0] = 
WTF_C_CS94W
;

254 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

255 
s
[2] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

256 
s
[3] = ( 
cc
.
code
 & 0x7f) | 0x80;

257 
n
 = 4;

259 
WC_CCS_A_CS96
:

260 i‡(
WcO±i⁄
.
u£_comböög
 && 
	`wc_is_comböög
(
cc
))

261 
s
[0] = 
WTF_C_CS96_C
;

262 i‡(
cc
.
ccs
 =
wtf_gr_ccs
 && (cc.
code
 & 0x7f) > 0x20) {

263 
s
[0] = (
cc
.
code
 & 0x7f) | 0x80;

264 
n
 = 1;

267 
s
[0] = 
WTF_C_CS96
;

268 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

269 
s
[2] = (
cc
.
code
 & 0x7f) | 0x80;

270 
n
 = 3;

272 
WC_CCS_A_CS96W
:

273 i‡(
cc
.
ccs
 =
wtf_gr_ccs
 && ((cc.
code
 >> 8) & 0x7f) > 0x20) {

274 
s
[0] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

275 
s
[1] = ( 
cc
.
code
 & 0x7f) | 0x80;

276 
n
 = 2;

279 
s
[0] = 
WTF_C_CS96W
;

280 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

281 
s
[2] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

282 
s
[3] = ( 
cc
.
code
 & 0x7f) | 0x80;

283 
n
 = 4;

285 
WC_CCS_A_CS942
:

286 i‡(
cc
.
ccs
 =
wtf_gr_ccs
) {

287 
s
[0] = (
cc
.
code
 & 0x7f) | 0x80;

288 
n
 = 1;

291 
s
[0] = 
WTF_C_CS942
;

292 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

293 
s
[2] = (
cc
.
code
 & 0x7f) | 0x80;

294 
n
 = 3;

296 
WC_CCS_A_PCS
:

297 i‡(
WcO±i⁄
.
u£_comböög
 && 
	`wc_is_comböög
(
cc
))

298 
s
[0] = 
WTF_C_PCS_C
;

299 i‡(
cc
.
ccs
 =
wtf_gr_ccs
 && (cc.
code
 & 0x7f) > 0x20) {

300 
s
[0] = (
cc
.
code
 & 0x7f) | 0x80;

301 
n
 = 1;

304 
s
[0] = 
WTF_C_PCS
;

305 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

306 
s
[2] = (
cc
.
code
 & 0x7f) | 0x80;

307 
n
 = 3;

309 
WC_CCS_A_PCSW
:

310 
cc
.
ccs
) {

311 
WC_CCS_SJIS_EXT
:

312 
cc
 = 
	`wc_sjis_ext_to_cs94w
(cc);

314 
WC_CCS_GBK
:

315 
cc
 = 
	`wc_gbk_to_cs128w
(cc);

317 
WC_CCS_GBK_EXT
:

318 
cc
 = 
	`wc_gbk_ext_to_cs128w
(cc);

320 
WC_CCS_BIG5
:

321 
cc
 = 
	`wc_big5_to_cs94w
(cc);

323 
WC_CCS_HKSCS
:

324 
cc
 = 
	`wc_hkscs_to_cs128w
(cc);

326 
WC_CCS_JOHAB
:

327 
cc
 = 
	`wc_johab_to_cs128w
(cc);

329 
WC_CCS_UHC
:

330 
cc
 = 
	`wc_uhc_to_cs128w
(cc);

333 i‡(
cc
.
ccs
 =
wtf_gr_ccs
 && ((cc.
code
 >> 8) & 0x7f) > 0x20) {

334 
s
[0] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

335 
s
[1] = ( 
cc
.
code
 & 0x7f) | 0x80;

336 
n
 = 2;

339 
s
[0] = 
WTF_C_PCSW
;

340 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

341 
s
[2] = ((
cc
.
code
 >> 8) & 0x7f) | 0x80;

342 
s
[3] = ( 
cc
.
code
 & 0x7f) | 0x80;

343 
n
 = 4;

345 
WC_CCS_A_WCS16
:

346 
s
[0] = (
	`WC_CCS_IS_WIDE
(
cc
.
ccs
Ë? 
WTF_C_WCS16W
 : 
WTF_C_WCS16
)

347 | (
	`WC_CCS_IS_COMB
(
cc
.
ccs
Ë? 
WTF_C_COMB
 : 0);

348 
	`wcs16_to_wtf
(
cc
.
code
, 
s
 + 1);

349 
s
[1] |(
	`WC_CCS_INDEX
(
cc
.
ccs
) << 2);

350 
n
 = 4;

352 
WC_CCS_A_WCS32
:

353 
s
[0] = (
	`WC_CCS_IS_WIDE
(
cc
.
ccs
Ë? 
WTF_C_WCS32W
 : 
WTF_C_WCS32
)

354 | (
	`WC_CCS_IS_COMB
(
cc
.
ccs
Ë? 
WTF_C_COMB
 : 0);

355 
	`wcs32_to_wtf
(
cc
.
code
, 
s
 + 1);

356 
s
[1] |(
	`WC_CCS_INDEX
(
cc
.
ccs
) << 4);

357 
n
 = 6;

360 
s
[0] = 
WTF_C_UNKNOWN
;

361 
s
[1] = 
	`WC_CCS_INDEX
(
cc
.
ccs
) | 0x80;

362 
s
[2] = (
cc
.
code
 & 0x7f) | 0x80;

363 
n
 = 3;

366 
	`Såˇt_ch¨p_n
(
os
, (*)
s
, 
n
);

367 
	}
}

370 
	$wtf_push_unknown
(
Så
 
os
, 
wc_uch¨
 *
p
, 
size_t
 
Àn
)

372 ; 
Àn
--; 
p
++) {

373 i‡(*
p
 & 0x80)

374 
	`wtf_push
(
os
, 
WC_CCS_UNKNOWN
, *
p
);

376 
	`Såˇt_ch¨
(
os
, ()*
p
);

378 
	}
}

380 
wc_wch¨_t


381 
	$wtf_∑r£1
(
wc_uch¨
 **
p
)

383 
wc_uch¨
 *
q
 = *
p
;

384 
wc_wch¨_t
 
cc
;

386 i‡(*
q
 < 0x80) {

387 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

388 
cc
.
code
 = *(
q
++);

389 } i‡(*
q
 > 0xa0) {

390 
cc
.
ccs
 = 
wtf_gr_ccs
;

391 i‡(
	`WC_CCS_IS_WIDE
(
cc
.
ccs
)) {

392 
cc
.
code
 = ((
wc_uöt32
)*
q
 << 8) | *(q+1);

393 
q
 += 2;

395 
cc
.
code
 = *(
q
++);

397 
cc
.
ccs
 = (
wc_uöt32
)
CCS_MAP
[*(
q
++) - 0x80] << 8;

398 
	`WC_CCS_TYPE
(
cc
.
ccs
)) {

399 
WC_CCS_A_CS94
:

400 
WC_CCS_A_CS96
:

401 
WC_CCS_A_CS942
:

402 
WC_CCS_A_PCS
:

403 
WC_CCS_A_UNKNOWN
:

404 
cc
.
ccs
 |*(
q
++) & 0x7f;

405 
cc
.
code
 = *(
q
++);

407 
WC_CCS_A_CS94W
:

408 
WC_CCS_A_CS96W
:

409 
WC_CCS_A_PCSW
:

410 
cc
.
ccs
 |*(
q
++) & 0x7f;

411 
cc
.
code
 = ((
wc_uöt32
)*
q
 << 8) | *(q+1);

412 
q
 += 2;

414 
WC_CCS_A_WCS16
:

415 
WC_CCS_A_WCS16W
:

416 
cc
.
ccs
 |(*
q
 & 0x7c) >> 2;

417 
cc
.
code
 = 
	`wtf_to_wcs16
(
q
);

418 
q
 += 3;

420 
WC_CCS_A_WCS32
:

421 
WC_CCS_A_WCS32W
:

422 
cc
.
ccs
 |(*
q
 & 0x70) >> 4;

423 
cc
.
code
 = 
	`wtf_to_wcs32
(
q
);

424 
q
 += 5;

428 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

429 
cc
.
code
 = (
wc_uöt32
)' ';

434 *
p
 = 
q
;

435 
cc
.
ccs
) {

436 
WC_CCS_SJIS_EXT_1
:

437 
WC_CCS_SJIS_EXT_2
:

438  
	`wc_cs94w_to_sjis_ext
(
cc
);

439 
WC_CCS_GBK_1
:

440 
WC_CCS_GBK_2
:

441  
	`wc_cs128w_to_gbk
(
cc
);

442 
WC_CCS_GBK_EXT_1
:

443 
WC_CCS_GBK_EXT_2
:

444  
	`wc_cs128w_to_gbk_ext
(
cc
);

445 
WC_CCS_BIG5_1
:

446 
WC_CCS_BIG5_2
:

447  
	`wc_cs94w_to_big5
(
cc
);

448 
WC_CCS_HKSCS_1
:

449 
WC_CCS_HKSCS_2
:

450  
	`wc_cs128w_to_hkscs
(
cc
);

451 
WC_CCS_JOHAB_1
:

452 
WC_CCS_JOHAB_2
:

453 
WC_CCS_JOHAB_3
:

454  
	`wc_cs128w_to_johab
(
cc
);

455 
WC_CCS_UHC_1
:

456 
WC_CCS_UHC_2
:

457  
	`wc_cs128w_to_uhc
(
cc
);

459  
cc
;

460 
	}
}

462 
wc_wch¨_t


463 
	$wtf_∑r£
(
wc_uch¨
 **
p
)

465 
wc_uch¨
 *
q
;

466 
wc_wch¨_t
 
cc
, 
cc2
;

467 
wc_uöt32
 
ucs
, 
ucs2
;

469 i‡(**
p
 < 0x80) {

470 
cc
.
ccs
 = 
WC_CCS_US_ASCII
;

471 
cc
.
code
 = *((*
p
)++);

473 
cc
 = 
	`wtf_∑r£1
(
p
);

474 i‡((! 
WcO±i⁄
.
u£_comböög
Ë|| 
WTF_WIDTH_MAP
[**
p
])

475  
cc
;

477 
q
 = *
p
;

478 
cc2
 = 
	`wtf_∑r£1
(&
q
);

479 i‡((
cc
.
ccs
 =
WC_CCS_US_ASCII
 || cc.cc†=
WC_CCS_CP1258_1
) &&

480 
	`WC_CCS_SET
(
cc2
.
ccs
Ë=
WC_CCS_CP1258_1
) {

481 
cc2
.
code
 = 
	`wc_˝1258_¥ecompo£
(
cc
.code, cc2.code);

482 i‡(
cc2
.
code
) {

483 
cc2
.
ccs
 = 
WC_CCS_CP1258_2
;

484 *
p
 = 
q
;

485  
cc2
;

487 } i‡((
cc
.
ccs
 =
WC_CCS_US_ASCII
 || cc.cc†=
WC_CCS_TCVN_5712_1
) &&

488 
	`WC_CCS_SET
(
cc2
.
ccs
Ë=
WC_CCS_TCVN_5712_1
) {

489 
cc2
.
code
 = 
	`wc_tcvn5712_¥ecompo£
(
cc
.code, cc2.code);

490 i‡(
cc2
.
code
) {

491 
cc2
.
ccs
 = 
WC_CCS_TCVN_5712_3
;

492 *
p
 = 
q
;

493  
cc2
;

496 #ifde‡
USE_UNICODE


497 i‡((
cc
.
ccs
 =
WC_CCS_US_ASCII
 || cc.cc†=
WC_CCS_ISO_8859_1
 ||

498 
	`WC_CCS_IS_UNICODE
(
cc
.
ccs
)Ë&& WC_CCS_IS_UNICODE(
cc2
.ccs)) {

500 
ucs
 = (
	`WC_CCS_SET
(
cc
.
ccs
Ë=
WC_CCS_UCS_TAG
)

501 ? 
	`wc_ucs_èg_to_ucs
(
cc
.
code
) : cc.code;

502 
ucs2
 = (
	`WC_CCS_SET
(
cc2
.
ccs
Ë=
WC_CCS_UCS_TAG
)

503 ? 
	`wc_ucs_èg_to_ucs
(
cc2
.
code
) : cc2.code;

504 
ucs
 = 
	`wc_ucs_¥ecompo£
(ucs, 
ucs2
);

505 i‡(
ucs
 =
WC_C_UCS4_ERROR
)

507 i‡(
	`WC_CCS_SET
(
cc
.
ccs
Ë=
WC_CCS_UCS_TAG
)

508 
cc
.
code
 = 
	`wc_ucs_to_ucs_èg
(
ucs
, 
	`wc_ucs_èg_to_èg
(cc.code));

510 
cc
.
ccs
 = 
	`wc_ucs_to_ccs
(
ucs
);

511 
cc
.
code
 = 
ucs
;

513 *
p
 = 
q
;

514 i‡(! 
WTF_WIDTH_MAP
[*
q
])

516 
cc2
 = 
	`wtf_∑r£1
(&
q
);

517 i‡(! 
	`WC_CCS_IS_UNICODE
(
cc2
.
ccs
))

522  
cc
;

523 
	}
}

525 
wc_ccs


526 
	$wtf_gë_ccs
(
wc_uch¨
 *
p
)

528  
	`wtf_∑r£1
(&
p
).
ccs
;

529 
	}
}

531 
wc_uöt32


532 
	$wtf_gë_code
(
wc_uch¨
 *
p
)

534  
	`wtf_∑r£1
(&
p
).
code
;

535 
	}
}

537 
wc_boﬁ


538 
	$wtf_is_h™gul
(
wc_uch¨
 *
p
)

540 i‡(*
p
 > 0xa0)

541  (
wtf_gr_ccs
 =
WC_CCS_KS_X_1001
 || wtf_gr_cc†=
WC_CCS_JOHAB_1
);

542 i‡(*
p
 =
WTF_C_CS94W
)

543  ((*(
p
 + 1Ë& 0x7fË=
WC_F_KS_X_1001
);

544 i‡(*
p
 =
WTF_C_PCSW
) {

545 
wc_uch¨
 
f
 = *(
p
 + 1) & 0x7f;

546  (
f
 =
WC_F_JOHAB_1
 || f =
WC_F_JOHAB_2
 || f =
WC_F_JOHAB_3
 ||

547 
f
 =
WC_F_UHC_1
 || f =
WC_F_UHC_2
);

549 #ifde‡
USE_UNICODE


550 i‡(*
p
 =
WTF_C_WCS16W
) {

551 
wc_uch¨
 
f
 = (*(++
p
) & 0x7f) >> 2;

552 i‡(
f
 =
WC_F_UCS2
)

553  
	`wc_is_ucs_h™gul
(
	`wtf_to_wcs16
(
p
));

554 } i‡(*
p
 =
WTF_C_WCS32W
) {

555 
wc_uch¨
 
f
 = (*(++
p
) & 0x7f) >> 4;

556 i‡(
f
 =
WC_F_UCS_TAG
)

557  
	`wc_is_ucs_h™gul
(
	`wc_ucs_èg_to_ucs
(
	`wtf_to_wcs32
(
p
)));

560  
WC_FALSE
;

561 
	}
}

564 
	$wtf_c⁄v_fô
(*
s
, 
wc_˚s
 
˚s
)

566 
wc_uch¨
 *
p
;

567 
Så
 
os
;

568 
wc_wch¨_t
 
cc
;

569 
wc_˚s
 
maj‹_˚s
;

570 
wc_boﬁ
 
¥e_c⁄v
, 
ucs_c⁄v
;

572 i‡(
˚s
 =
WC_CES_WTF
 || ce†=
WC_CES_US_ASCII
)

573  
s
;

575 
p
 = (
wc_uch¨
 *)
s
; *p && *p < 0x80;Ö++)

577 i‡(! *
p
)

578  
s
;

580 
os
 = 
	`Så√w_size
(
	`°æí
(
s
));

581 i‡(
p
 > (
wc_uch¨
 *)
s
)

582 
	`Såc›y_ch¨p_n
(
os
, 
s
, ()(
p
 - (
wc_uch¨
 *)s));

584 
maj‹_˚s
 = 
wtf_maj‹_˚s
;

585 
¥e_c⁄v
 = 
WcO±i⁄
.pre_conv;

586 
ucs_c⁄v
 = 
WcO±i⁄
.ucs_conv;

587 
wtf_maj‹_˚s
 = 
˚s
;

588 
WcO±i⁄
.
¥e_c⁄v
 = 
WC_TRUE
;

589 
WcO±i⁄
.
ucs_c⁄v
 = 
WC_TRUE
;

590 *
p
) {

591 
cc
 = 
	`wtf_∑r£1
(&
p
);

592 
	`wtf_push
(
os
, 
cc
.
ccs
, cc.
code
);

594 
wtf_maj‹_˚s
 = 
maj‹_˚s
;

595 
WcO±i⁄
.
¥e_c⁄v
 =Öre_conv;

596 
WcO±i⁄
.
ucs_c⁄v
 = ucs_conv;

597  
os
->
±r
;

598 
	}
}

	@libwc/wtf.h

2 #i‚de‡
_WC_WTF_H


3 
	#_WC_WTF_H


	)

5 
	#WTF_C_CS94
 0x80

	)

6 
	#WTF_C_CS94W
 0x81

	)

7 
	#WTF_C_CS96
 0x82

	)

8 
	#WTF_C_CS96W
 0x83

	)

9 
	#WTF_C_CS942
 0x84

	)

10 
	#WTF_C_UNKNOWN
 0x85

	)

11 
	#WTF_C_PCS
 0x86

	)

12 
	#WTF_C_PCSW
 0x87

	)

13 
	#WTF_C_WCS16
 0x88

	)

14 
	#WTF_C_WCS16W
 0x89

	)

15 
	#WTF_C_WCS32
 0x8A

	)

16 
	#WTF_C_WCS32W
 0x8B

	)

18 
	#WTF_C_COMB
 0x10

	)

19 
	#WTF_C_CS94_C
 (
WTF_C_CS94
|
WTF_C_COMB
Ë

	)

20 
	#WTF_C_CS94W_C
 (
WTF_C_CS94W
|
WTF_C_COMB
Ë

	)

21 
	#WTF_C_CS96_C
 (
WTF_C_CS96
|
WTF_C_COMB
Ë

	)

22 
	#WTF_C_CS96W_C
 (
WTF_C_CS96W
|
WTF_C_COMB
Ë

	)

23 
	#WTF_C_CS942_C
 (
WTF_C_CS942
|
WTF_C_COMB
Ë

	)

24 
	#WTF_C_PCS_C
 (
WTF_C_PCS
|
WTF_C_COMB
)

	)

25 
	#WTF_C_PCSW_C
 (
WTF_C_PCSW
|
WTF_C_COMB
Ë

	)

26 
	#WTF_C_WCS16_C
 (
WTF_C_WCS16
|
WTF_C_COMB
)

	)

27 
	#WTF_C_WCS16W_C
 (
WTF_C_WCS16W
|
WTF_C_COMB
Ë

	)

28 
	#WTF_C_WCS32_C
 (
WTF_C_WCS32
|
WTF_C_COMB
Ë

	)

29 
	#WTF_C_WCS32W_C
 (
WTF_C_WCS32W
|
WTF_C_COMB
Ë

	)

31 
	#WTF_C_UNDEF0
 0x8C

	)

32 
	#WTF_C_UNDEF1
 0x8D

	)

33 
	#WTF_C_UNDEF2
 0x8E

	)

34 
	#WTF_C_UNDEF3
 0x8F

	)

35 
	#WTF_C_UNDEF4
 0x9C

	)

36 
	#WTF_C_UNDEF5
 0x9D

	)

37 
	#WTF_C_UNDEF6
 0x9E

	)

38 
	#WTF_C_UNDEF7
 0x9F

	)

39 
	#WTF_C_NBSP
 0xA0

	)

41 
	#WTF_TYPE_ASCII
 0x0

	)

42 
	#WTF_TYPE_CTRL
 0x1

	)

43 
	#WTF_TYPE_WCHAR1
 0x2

	)

44 
	#WTF_TYPE_WCHAR2
 0x4

	)

45 
	#WTF_TYPE_WIDE
 0x8

	)

46 
	#WTF_TYPE_UNKNOWN
 0x10

	)

47 
	#WTF_TYPE_UNDEF
 0x20

	)

48 
	#WTF_TYPE_WCHAR1W
 (
WTF_TYPE_WCHAR1
|
WTF_TYPE_WIDE
)

	)

49 
	#WTF_TYPE_WCHAR2W
 (
WTF_TYPE_WCHAR2
|
WTF_TYPE_WIDE
)

	)

51 
wc_uöt8
 
WTF_WIDTH_MAP
[];

52 
wc_uöt8
 
WTF_LEN_MAP
[];

53 
wc_uöt8
 
WTF_TYPE_MAP
[];

54 
wc_ccs
 
wtf_gr_ccs
;

56 
wtf_öô
(
wc_˚s
 
˚s1
, wc_˚†
˚s2
);

59 
	#wtf_width
(
p
Ë(
WcO±i⁄
.
u£_wide
 ? ()
WTF_WIDTH_MAP
[(
wc_uch¨
)*(p)] \

60 : (()
WTF_WIDTH_MAP
[(
wc_uch¨
)*(
p
)] ? 1 : 0))

	)

61 
wtf_°rwidth
(
wc_uch¨
 *
p
);

63 
	#wtf_Àn1
(
p
Ë(()
WTF_LEN_MAP
[(
wc_uch¨
)*’)])

	)

64 
size_t
 
wtf_Àn
(
wc_uch¨
 *
p
);

66 
	#wtf_ty≥
(
p
Ë
WTF_TYPE_MAP
[(
wc_uch¨
)*’)]

	)

68 
wtf_push
(
Så
 
os
, 
wc_ccs
 
ccs
, 
wc_uöt32
 
code
);

69 
wtf_push_unknown
(
Så
 
os
, 
wc_uch¨
 *
p
, 
size_t
 
Àn
);

70 
wc_wch¨_t
 
wtf_∑r£
(
wc_uch¨
 **
p
);

71 
wc_wch¨_t
 
wtf_∑r£1
(
wc_uch¨
 **
p
);

73 
wc_ccs
 
wtf_gë_ccs
(
wc_uch¨
 *
p
);

74 
wc_uöt32
 
wtf_gë_code
(
wc_uch¨
 *
p
);

76 
wc_boﬁ
 
wtf_is_h™gul
(
wc_uch¨
 *
p
);

78 *
wtf_c⁄v_fô
(*
s
, 
wc_˚s
 
˚s
);

	@linein.c

2 
	~"fm.h
"

3 
	~"loˇl.h
"

4 
	~"my˘y≥.h
"

6 #ifde‡
USE_MOUSE


7 #ifde‡
USE_GPM


8 
	~<gpm.h
>

10 #i‡
deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

11 
do_gëch
();

12 
	#gëch
(Ë
	`do_gëch
()

	)

16 #ifde‡
__EMX__


17 
	~<sys/kbdsˇn.h
>

20 
	#STR_LEN
 1024

	)

21 
	#CLEN
 (
COLS
 - 2)

	)

23 
Så
 
	g°rBuf
;

24 
Löïr›
 
	g°rPr›
[
STR_LEN
];

26 
Så
 
	gCom∂ëeBuf
;

27 
Så
 
	gCFûeName
;

28 
Så
 
	gCBef‹eBuf
;

29 
Så
 
	gCA·îBuf
;

30 
Så
 
	gCDúBuf
;

31 **
	gCFûeBuf
 = 
NULL
;

32 
	gNCFûeBuf
;

33 
	gNCFûeOff£t
;

35 
ö£π£lf
(
c
),

36 
_mvR
(), 
_mvL
(), 
_mvRw
(), 
_mvLw
(), 
dñC
(), 
ösC
(),

37 
_mvB
(), 
_mvE
(), 
_íãr
(), 
_quo
(), 
_bs
(), 
_bsw
(),

38 
kû 
(), 
kûlb
(), 
_öbrk
(), 
_esc
(), 
_edô‹
(),

39 
_¥ev
(), 
_√xt
(), 
_com∂
(), 
_tcom∂
(),

40 
_dcom∂
(), 
_rdcom∂
(), 
_rcom∂
();

41 #ifde‡
__EMX__


42 
gë˙ål
();

45 
ãrmö©ed
(
c
);

46 
	#i£lf
 (((*)())
ö£π£lf
)

	)

48 
√xt_com∂
(
√xt
);

49 
√xt_dcom∂
(
√xt
);

50 
Så
 
doCom∂ëe
(Så 
i‚
, *
°©us
, 
√xt
);

53 (*
	gI≈utKeym≠
[32]) () = {

55 
_com∂
, 
_mvB
, 
_mvL
, 
_öbrk
, 
dñC
, 
_mvE
, 
_mvR
, _inbrk,

57 
_bs
, 
i£lf
, 
_íãr
, 
kû 
, i£lf, _íãr, 
_√xt
, 
_edô‹
,

59 
_¥ev
, 
_quo
, 
_bsw
, 
i£lf
, 
_mvLw
, 
kûlb
, _quo, _bsw,

61 
_tcom∂
,
_mvRw
, 
i£lf
, 
_esc
, iself, iself, iself, iself,

65 
£tSåTy≥
(
Så
 
°r
, 
Löïr›
 *
¥›
);

66 
addPasswd
(*
p
, 
Löïr›
 *
¥
, 
Àn
, 
pos
, 
limô
);

67 
addSå
(*
p
, 
Löïr›
 *
¥
, 
Àn
, 
pos
, 
limô
);

69 
	gCPos
, 
	gCLí
, 
	goff£t
;

70 
	gi_c⁄t
, 
	gi_brokí
, 
	gi_quŸe
;

71 
	gcm_mode
, 
	gcm_√xt
, 
	gcm_˛ór
, 
	gcm_di•_√xt
, 
	gcm_di•_˛ór
;

72 
	g√ed_ªdøw
, 
	gis_∑sswd
;

73 
	gmove_w‹d
;

75 
Hi°
 *
	gCuºítHi°
;

76 
Så
 
	g°rCuºítBuf
;

77 
	gu£_hi°
;

78 #ifde‡
USE_M17N


79 
ös_ch¨
(
Så
 
°r
);

81 
ös_ch¨
(
c
);

85 
öputLöeHi°Sórch
(*
¥om±
, *
def_°r
, 
Êag
, 
Hi°
 *
hi°
,

86 (*
ö¸func
Ë(
ch
, 
Så
 
°r
, 
Löïr›
 *
¥›
))

88 
›os
, 
x
, 
y
, 
Õos
, 
Ωos
, 
ïos
;

89 
c
;

90 *
p
;

91 #ifde‡
USE_M17N


92 
Så
 
tmp
;

95 
is_∑sswd
 = 
FALSE
;

96 
move_w‹d
 = 
TRUE
;

98 
CuºítHi°
 = 
hi°
;

99 i‡(
hi°
 !
NULL
) {

100 
u£_hi°
 = 
TRUE
;

101 
°rCuºítBuf
 = 
NULL
;

104 
u£_hi°
 = 
FALSE
;

106 i‡(
Êag
 & 
IN_URL
) {

107 
cm_mode
 = 
CPL_ALWAYS
 | 
CPL_URL
;

109 i‡(
Êag
 & 
IN_FILENAME
) {

110 
cm_mode
 = 
CPL_ALWAYS
;

112 i‡(
Êag
 & 
IN_PASSWORD
) {

113 
cm_mode
 = 
CPL_NEVER
;

114 
is_∑sswd
 = 
TRUE
;

115 
move_w‹d
 = 
FALSE
;

117 i‡(
Êag
 & 
IN_COMMAND
)

118 
cm_mode
 = 
CPL_ON
;

120 
cm_mode
 = 
CPL_OFF
;

121 
›os
 = 
	`gë_°rwidth
(
¥om±
);

122 
ïos
 = 
CLEN
 - 
›os
;

123 i‡(
ïos
 < 0)

124 
ïos
 = 0;

125 
Õos
 = 
ïos
 / 3;

126 
Ωos
 = 
ïos
 * 2 / 3;

127 
off£t
 = 0;

129 i‡(
def_°r
) {

130 
°rBuf
 = 
	`Så√w_ch¨p
(
def_°r
);

131 
CLí
 = 
CPos
 = 
	`£tSåTy≥
(
°rBuf
, 
°rPr›
);

134 
°rBuf
 = 
	`Så√w
();

135 
CLí
 = 
CPos
 = 0;

138 #ifde‡
SUPPORT_WIN9X_CONSOLE_MBCS


139 
	`íabÀ_wö9x_c⁄sﬁe_öput
();

141 
i_c⁄t
 = 
TRUE
;

142 
i_brokí
 = 
FALSE
;

143 
i_quŸe
 = 
FALSE
;

144 
cm_√xt
 = 
FALSE
;

145 
cm_di•_√xt
 = -1;

146 
√ed_ªdøw
 = 
FALSE
;

148 #ifde‡
USE_M17N


149 
	`wc_ch¨_c⁄v_öô
(
	`wc_guess_8bô_ch¨£t
(
Di•œyCh¨£t
), 
I¬îCh¨£t
);

152 
x
 = 
	`ˇlcPosôi⁄
(
°rBuf
->
±r
, 
°rPr›
, 
CLí
, 
CPos
, 0, 
CP_FORCE
);

153 i‡(
x
 - 
Ωos
 > 
off£t
) {

154 
y
 = 
	`ˇlcPosôi⁄
(
°rBuf
->
±r
, 
°rPr›
, 
CLí
, CLí, 0, 
CP_AUTO
);

155 i‡(
y
 - 
ïos
 > 
x
 - 
Ωos
)

156 
off£t
 = 
x
 - 
Ωos
;

157 i‡(
y
 - 
ïos
 > 0)

158 
off£t
 = 
y
 - 
ïos
;

160 i‡(
x
 - 
Õos
 < 
off£t
) {

161 i‡(
x
 - 
Õos
 > 0)

162 
off£t
 = 
x
 - 
Õos
;

164 
off£t
 = 0;

166 
	`move
(
LASTLINE
, 0);

167 
	`add°r
(
¥om±
);

168 i‡(
is_∑sswd
)

169 
	`addPasswd
(
°rBuf
->
±r
, 
°rPr›
, 
CLí
, 
off£t
, 
COLS
 - 
›os
);

171 
	`addSå
(
°rBuf
->
±r
, 
°rPr›
, 
CLí
, 
off£t
, 
COLS
 - 
›os
);

172 
	`˛π€ﬁx
();

173 
	`move
(
LASTLINE
, 
›os
 + 
x
 - 
off£t
);

174 
	`ª‰esh
();

176 
√xt_ch¨
:

177 
c
 = 
	`gëch
();

178 #ifde‡
__EMX__


179 i‡(
c
 == 0) {

180 i‡(!(
c
 = 
	`gë˙ål
()))

181 
√xt_ch¨
;

184 
cm_˛ór
 = 
TRUE
;

185 
cm_di•_˛ór
 = 
TRUE
;

186 i‡(!
i_quŸe
 &&

187 (((
cm_mode
 & 
CPL_ALWAYS
Ë&& (
c
 =
CTRL_I
 || c == ' ')) ||

188 ((
cm_mode
 & 
CPL_ON
Ë&& (
c
 =
CTRL_I
)))) {

189 i‡(
emacs_like_löìdô
 && 
cm_√xt
) {

190 
	`_dcom∂
();

191 
√ed_ªdøw
 = 
TRUE
;

194 
	`_com∂
();

195 
cm_di•_√xt
 = -1;

198 i‡(!
i_quŸe
 && 
CLí
 =
CPos
 &&

199 (
cm_mode
 & 
CPL_ALWAYS
 || cm_modê& 
CPL_ON
Ë&& 
c
 =
CTRL_D
) {

200 i‡(!
emacs_like_löìdô
) {

201 
	`_dcom∂
();

202 
√ed_ªdøw
 = 
TRUE
;

205 i‡(!
i_quŸe
 && 
c
 =
DEL_CODE
) {

206 
	`_bs
();

207 
cm_√xt
 = 
FALSE
;

208 
cm_di•_√xt
 = -1;

210 i‡(!
i_quŸe
 && 
c
 < 0x20) {

211 i‡(
ö¸func
 =
NULL


212 || (
c
 = 
	`ö¸func
(()c, 
°rBuf
, 
°rPr›
)) < 0x20)

213 (*
I≈utKeym≠
[()
c
]) (c);

214 i‡(
ö¸func
 && 
c
 !()-1 && c !
CTRL_J
)

215 
	`ö¸func
(-1, 
°rBuf
, 
°rPr›
);

216 i‡(
cm_˛ór
)

217 
cm_√xt
 = 
FALSE
;

218 i‡(
cm_di•_˛ór
)

219 
cm_di•_√xt
 = -1;

221 #ifde‡
USE_M17N


223 
tmp
 = 
	`wc_ch¨_c⁄v
(
c
);

224 i‡(
tmp
 =
NULL
) {

225 
i_quŸe
 = 
TRUE
;

226 
√xt_ch¨
;

228 
i_quŸe
 = 
FALSE
;

229 
cm_√xt
 = 
FALSE
;

230 
cm_di•_√xt
 = -1;

231 i‡(
CLí
 + 
tmp
->
Àngth
 > 
STR_LEN
 || !tmp->length)

232 
√xt_ch¨
;

233 
	`ös_ch¨
(
tmp
);

234 i‡(
ö¸func
)

235 
	`ö¸func
(-1, 
°rBuf
, 
°rPr›
);

239 
i_quŸe
 = 
FALSE
;

240 
cm_√xt
 = 
FALSE
;

241 
cm_di•_√xt
 = -1;

242 i‡(
CLí
 >
STR_LEN
)

243 
√xt_ch¨
;

244 
	`ösC
();

245 
°rBuf
->
±r
[
CPos
] = 
c
;

246 i‡(!
is_∑sswd
 && 
	`gë_m˘y≥
(&
c
Ë=
PC_CTRL
)

247 
°rPr›
[
CPos
] = 
PC_CTRL
;

249 
°rPr›
[
CPos
] = 
PC_ASCII
;

250 
CPos
++;

251 i‡(
ö¸func
)

252 
	`ö¸func
(-1, 
°rBuf
, 
°rPr›
);

255 i‡(
CLí
 && (
Êag
 & 
IN_CHAR
))

257 } 
i_c⁄t
);

259 i‡(
CuºítTab
) {

260 i‡(
√ed_ªdøw
)

261 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

264 #ifde‡
SUPPORT_WIN9X_CONSOLE_MBCS


265 
	`dißbÀ_wö9x_c⁄sﬁe_öput
();

268 i‡(
i_brokí
)

269  
NULL
;

271 
	`move
(
LASTLINE
, 0);

272 
	`ª‰esh
();

273 
p
 = 
°rBuf
->
±r
;

274 i‡(
Êag
 & (
IN_FILENAME
 | 
IN_COMMAND
)) {

275 
	`SKIP_BLANKS
(
p
);

277 i‡(
u£_hi°
 && !(
Êag
 & 
IN_URL
Ë&& *
p
 != '\0') {

278 *
q
 = 
	`œ°Hi°
(
hi°
);

279 i‡(!
q
 || 
	`°rcmp
(q, 
p
))

280 
	`pushHi°
(
hi°
, 
p
);

282 i‡(
Êag
 & 
IN_FILENAME
)

283  
	`ex∑ndP©h
(
p
);

285  
	`ÆlocSå
(
p
, -1);

286 
	}
}

288 #ifde‡
__EMX__


290 
	$gë˙ål
()

292 
	`gëch
()) {

293 
K_DEL
:

294  
CTRL_D
;

295 
K_LEFT
:

296  
CTRL_B
;

297 
K_RIGHT
:

298  
CTRL_F
;

299 
K_UP
:

300  
CTRL_P
;

301 
K_DOWN
:

302  
CTRL_N
;

303 
K_HOME
:

304 
K_CTRL_LEFT
:

305  
CTRL_A
;

306 
K_END
:

307 
K_CTRL_RIGHT
:

308  
CTRL_E
;

309 
K_CTRL_HOME
:

310  
CTRL_U
;

311 
K_CTRL_END
:

312  
CTRL_K
;

315 
	}
}

319 
	$addPasswd
(*
p
, 
Löïr›
 *
¥
, 
Àn
, 
off£t
, 
limô
)

321 
rcﬁ
 = 0, 
ncﬁ
;

323 
ncﬁ
 = 
	`ˇlcPosôi⁄
(
p
, 
¥
, 
Àn
,Üí, 0, 
CP_AUTO
);

324 i‡(
ncﬁ
 > 
off£t
 + 
limô
)

325 
ncﬁ
 = 
off£t
 + 
limô
;

326 i‡(
off£t
) {

327 
	`addCh¨
('{', 0);

328 
rcﬁ
 = 
off£t
 + 1;

330 ; 
rcﬁ
 < 
ncﬁ
;Ñcol++)

331 
	`addCh¨
('*', 0);

332 
	}
}

335 
	$addSå
(*
p
, 
Löïr›
 *
¥
, 
Àn
, 
off£t
, 
limô
)

337 
i
 = 0, 
rcﬁ
 = 0, 
ncﬁ
, 
dñè
 = 1;

339 i‡(
off£t
) {

340 
i
 = 0; i < 
Àn
; i++) {

341 i‡(
	`ˇlcPosôi⁄
(
p
, 
¥
, 
Àn
, 
i
, 0, 
CP_AUTO
Ë> 
off£t
)

344 i‡(
i
 >
Àn
)

346 #ifde‡
USE_M17N


347 
¥
[
i
] & 
PC_WCHAR2
)

348 
i
++;

350 
	`addCh¨
('{', 0);

351 
rcﬁ
 = 
off£t
 + 1;

352 
ncﬁ
 = 
	`ˇlcPosôi⁄
(
p
, 
¥
, 
Àn
, 
i
, 0, 
CP_AUTO
);

353 ; 
rcﬁ
 < 
ncﬁ
;Ñcol++)

354 
	`addCh¨
(' ', 0);

356 ; 
i
 < 
Àn
; i +
dñè
) {

357 #ifde‡
USE_M17N


358 
dñè
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë& 
p
[
i
]);

360 
ncﬁ
 = 
	`ˇlcPosôi⁄
(
p
, 
¥
, 
Àn
, 
i
 + 
dñè
, 0, 
CP_AUTO
);

361 i‡(
ncﬁ
 - 
off£t
 > 
limô
)

363 i‡(
p
[
i
] == '\t') {

364 ; 
rcﬁ
 < 
ncﬁ
;Ñcol++)

365 
	`addCh¨
(' ', 0);

369 #ifde‡
USE_M17N


370 
	`addMCh¨
(&
p
[
i
], 
¥
[i], 
dñè
);

372 
	`addCh¨
(
p
[
i
], 
¥
[i]);

375 
rcﬁ
 = 
ncﬁ
;

377 
	}
}

379 #ifde‡
USE_M17N


381 
	$ös_ch¨
(
Så
 
°r
)

383 *
p
 = 
°r
->
±r
, *
ï
 =Ö + så->
Àngth
;

384 
Löïr›
 
˘y≥
;

385 
Àn
;

387 i‡(
CLí
 + 
°r
->
Àngth
 >
STR_LEN
)

389 
p
 < 
ï
) {

390 
Àn
 = 
	`gë_m˛í
(
p
);

391 
˘y≥
 = 
	`gë_m˘y≥
(
p
);

392 i‡(
is_∑sswd
) {

393 i‡(
˘y≥
 & 
PC_CTRL
)

394 
˘y≥
 = 
PC_ASCII
;

395 i‡(
˘y≥
 & 
PC_UNKNOWN
)

396 
˘y≥
 = 
PC_WCHAR1
;

398 
	`ösC
();

399 
°rBuf
->
±r
[
CPos
] = *(
p
++);

400 
°rPr›
[
CPos
] = 
˘y≥
;

401 
CPos
++;

402 i‡(--
Àn
) {

403 
˘y≥
 = (˘y≥ & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

404 
Àn
--) {

405 
	`ösC
();

406 
°rBuf
->
±r
[
CPos
] = *(
p
++);

407 
°rPr›
[
CPos
] = 
˘y≥
;

408 
CPos
++;

412 
	}
}

416 
	$_esc
()

418 
c
;

420 
c
 = 
	`gëch
()) {

423 
c
 = 
	`gëch
()) {

425 
	`_¥ev
();

428 
	`_√xt
();

431 
	`_mvR
();

434 
	`_mvL
();

438 
CTRL_I
:

440 i‡(
emacs_like_löìdô
) {

441 
	`_rdcom∂
();

442 
cm_˛ór
 = 
FALSE
;

443 
√ed_ªdøw
 = 
TRUE
;

446 
	`_rcom∂
();

448 
CTRL_D
:

449 i‡(!
emacs_like_löìdô
)

450 
	`_rdcom∂
();

451 
√ed_ªdøw
 = 
TRUE
;

454 i‡(
emacs_like_löìdô
)

455 
	`_mvRw
();

458 i‡(
emacs_like_löìdô
)

459 
	`_mvLw
();

461 
CTRL_H
:

462 i‡(
emacs_like_löìdô
)

463 
	`_bsw
();

465 #ifde‡
USE_M17N


467 i‡(
	`wc_ch¨_c⁄v
(
ESC_CODE
Ë=
NULL
 && wc_ch¨_c⁄v(
c
) == NULL)

468 
i_quŸe
 = 
TRUE
;

471 
	}
}

474 
	$ösC
()

476 
i
;

478 
	`Såö£π_ch¨
(
°rBuf
, 
CPos
, ' ');

479 
CLí
 = 
°rBuf
->
Àngth
;

480 
i
 = 
CLí
; i > 
CPos
; i--) {

481 
°rPr›
[
i
] = strProp[i - 1];

483 
	}
}

486 
	$dñC
()

488 
i
 = 
CPos
;

489 
dñè
 = 1;

491 i‡(
CLí
 =
CPos
)

493 #ifde‡
USE_M17N


494 
i
 + 
dñè
 < 
CLí
 && 
°rPr›
[ò+ dñè] & 
PC_WCHAR2
)

495 
dñè
++;

497 
i
 = 
CPos
; i < 
CLí
; i++) {

498 
°rPr›
[
i
] = såPr›[ò+ 
dñè
];

500 
	`Sådñëe
(
°rBuf
, 
CPos
, 
dñè
);

501 
CLí
 -
dñè
;

502 
	}
}

505 
	$_mvL
()

507 i‡(
CPos
 > 0)

508 
CPos
--;

509 #ifde‡
USE_M17N


510 
CPos
 > 0 && 
°rPr›
[CPos] & 
PC_WCHAR2
)

511 
CPos
--;

513 
	}
}

516 
	$_mvLw
()

518 
fú°
 = 1;

519 
CPos
 > 0 && (
fú°
 || !
	`ãrmö©ed
(
°rBuf
->
±r
[CPos - 1]))) {

520 
CPos
--;

521 
fú°
 = 0;

522 #ifde‡
USE_M17N


523 i‡(
CPos
 > 0 && 
°rPr›
[CPos] & 
PC_WCHAR2
)

524 
CPos
--;

526 i‡(!
move_w‹d
)

529 
	}
}

532 
	$_mvRw
()

534 
fú°
 = 1;

535 
CPos
 < 
CLí
 && (
fú°
 || !
	`ãrmö©ed
(
°rBuf
->
±r
[CPos - 1]))) {

536 
CPos
++;

537 
fú°
 = 0;

538 #ifde‡
USE_M17N


539 i‡(
CPos
 < 
CLí
 && 
°rPr›
[CPos] & 
PC_WCHAR2
)

540 
CPos
++;

542 i‡(!
move_w‹d
)

545 
	}
}

548 
	$_mvR
()

550 i‡(
CPos
 < 
CLí
)

551 
CPos
++;

552 #ifde‡
USE_M17N


553 
CPos
 < 
CLí
 && 
°rPr›
[CPos] & 
PC_WCHAR2
)

554 
CPos
++;

556 
	}
}

559 
	$_bs
()

561 i‡(
CPos
 > 0) {

562 
	`_mvL
();

563 
	`dñC
();

565 
	}
}

568 
	$_bsw
()

570 
t
 = 0;

571 
CPos
 > 0 && !
t
) {

572 
	`_mvL
();

573 
t
 = (
move_w‹d
 && 
	`ãrmö©ed
(
°rBuf
->
±r
[
CPos
 - 1]));

574 
	`dñC
();

576 
	}
}

579 
	$_íãr
()

581 
i_c⁄t
 = 
FALSE
;

582 
	}
}

585 
	$ö£π£lf
(
c
)

587 i‡(
CLí
 >
STR_LEN
)

589 
	`ösC
();

590 
°rBuf
->
±r
[
CPos
] = 
c
;

591 
°rPr›
[
CPos
] = (
is_∑sswd
Ë? 
PC_ASCII
 : 
PC_CTRL
;

592 
CPos
++;

593 
	}
}

596 
	$_quo
()

598 
i_quŸe
 = 
TRUE
;

599 
	}
}

602 
	$_mvB
()

604 
CPos
 = 0;

605 
	}
}

608 
	$_mvE
()

610 
CPos
 = 
CLí
;

611 
	}
}

614 
	$kû 
()

616 
CLí
 = 
CPos
;

617 
	`Sååunˇã
(
°rBuf
, 
CLí
);

618 
	}
}

621 
	$kûlb
()

623 
CPos
 > 0)

624 
	`_bs
();

625 
	}
}

628 
	$_öbrk
()

630 
i_c⁄t
 = 
FALSE
;

631 
i_brokí
 = 
TRUE
;

632 
	}
}

635 
	$_com∂
()

637 
	`√xt_com∂
(1);

638 
	}
}

641 
	$_rcom∂
()

643 
	`√xt_com∂
(-1);

644 
	}
}

647 
	$_tcom∂
()

649 i‡(
cm_mode
 & 
CPL_OFF
)

650 
cm_mode
 = 
CPL_ON
;

651 i‡(
cm_mode
 & 
CPL_ON
)

652 
cm_mode
 = 
CPL_OFF
;

653 
	}
}

656 
	$√xt_com∂
(
√xt
)

658 
°©us
;

659 
b
, 
a
;

660 
Så
 
buf
;

661 
Så
 
s
;

663 i‡(
cm_mode
 =
CPL_NEVER
 || cm_modê& 
CPL_OFF
)

665 
cm_˛ór
 = 
FALSE
;

666 i‡(!
cm_√xt
) {

667 i‡(
cm_mode
 & 
CPL_ALWAYS
) {

668 
b
 = 0;

671 
b
 = 
CPos
 - 1; b >= 0; b--) {

672 i‡((
°rBuf
->
±r
[
b
] =' ' || såBuf->±r[b] =
CTRL_I
) &&

673 !((
b
 > 0Ë&& 
°rBuf
->
±r
[b - 1] == '\\'))

676 
b
++;

678 
a
 = 
CPos
;

679 
CBef‹eBuf
 = 
	`Såsub°r
(
°rBuf
, 0, 
b
);

680 
buf
 = 
	`Såsub°r
(
°rBuf
, 
b
, 
a
 - b);

681 
CA·îBuf
 = 
	`Såsub°r
(
°rBuf
, 
a
, såBuf->
Àngth
 -á);

682 
s
 = 
	`doCom∂ëe
(
buf
, &
°©us
, 
√xt
);

685 
s
 = 
	`doCom∂ëe
(
°rBuf
, &
°©us
, 
√xt
);

687 i‡(
√xt
 == 0)

690 i‡(
°©us
 !
CPL_OK
 && sètu†!
CPL_MENU
)

691 
	`bñl
();

692 i‡(
°©us
 =
CPL_FAIL
)

695 
°rBuf
 = 
	`Så√w_m_ch¨p
(
CBef‹eBuf
->
±r
, 
s
->±r, 
CA·îBuf
->±r, 
NULL
);

696 
CLí
 = 
	`£tSåTy≥
(
°rBuf
, 
°rPr›
);

697 
CPos
 = 
CBef‹eBuf
->
Àngth
 + 
s
->length;

698 i‡(
CPos
 > 
CLí
)

699 
CPos
 = 
CLí
;

700 
	}
}

703 
	$_dcom∂
()

705 
	`√xt_dcom∂
(1);

706 
	}
}

709 
	$_rdcom∂
()

711 
	`√xt_dcom∂
(-1);

712 
	}
}

715 
	$√xt_dcom∂
(
√xt
)

717 
cﬁ
, 
row
, 
Àn
;

718 
Så
 
d
;

719 
i
, 
j
, 
n
, 
y
;

720 
Så
 
f
;

721 *
p
;

722 
°©
 
°
;

723 
commít
, 
∆öe
;

725 i‡(
cm_mode
 =
CPL_NEVER
 || cm_modê& 
CPL_OFF
)

727 
cm_di•_˛ór
 = 
FALSE
;

728 i‡(
CuºítTab
)

729 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

730 i‡(
LASTLINE
 >= 3) {

731 
commít
 = 
TRUE
;

732 
∆öe
 = 
LASTLINE
 - 2;

734 i‡(
LASTLINE
) {

735 
commít
 = 
FALSE
;

736 
∆öe
 = 
LASTLINE
;

742 i‡(
cm_di•_√xt
 >= 0) {

743 i‡(
√xt
 == 1) {

744 
cm_di•_√xt
 +
cﬁ
 * 
∆öe
;

745 i‡(
cm_di•_√xt
 >
NCFûeBuf
)

746 
cm_di•_√xt
 = 0;

748 i‡(
√xt
 == -1) {

749 
cm_di•_√xt
 -
cﬁ
 * 
∆öe
;

750 i‡(
cm_di•_√xt
 < 0)

751 
cm_di•_√xt
 = 0;

753 
row
 = (
NCFûeBuf
 - 
cm_di•_√xt
 + 
cﬁ
 - 1) / col;

754 
di•_√xt
;

757 
cm_√xt
 = 
FALSE
;

758 
	`√xt_com∂
(0);

759 i‡(
NCFûeBuf
 == 0)

761 
cm_di•_√xt
 = 0;

763 
d
 = 
	`Så_c⁄v_to_sy°em
(
	`Sådup
(
CDúBuf
));

764 i‡(
d
->
Àngth
 > 0 && 
	`Såœ°ch¨
(d) != '/')

765 
	`Såˇt_ch¨
(
d
, '/');

766 i‡(
cm_mode
 & 
CPL_URL
 && 
d
->
±r
[0] == 'f') {

767 
p
 = 
d
->
±r
;

768 i‡(
	`°∫cmp
(
p
, "file://localhost/", 17) == 0)

769 
p
 = &p[16];

770 i‡(
	`°∫cmp
(
p
, "file:///", 8) == 0)

771 
p
 = &p[7];

772 i‡(
	`°∫cmp
(
p
, "file:/", 6) == 0 &&Ö[6] != '/')

773 
p
 = &p[5];

774 
d
 = 
	`Så√w_ch¨p
(
p
);

777 
Àn
 = 0;

778 
i
 = 0; i < 
NCFûeBuf
; i++) {

779 
n
 = 
	`°æí
(
CFûeBuf
[
i
]) + 3;

780 i‡(
Àn
 < 
n
)

781 
Àn
 = 
n
;

783 
cﬁ
 = 
COLS
 / 
Àn
;

784 i‡(
cﬁ
 == 0)

785 
cﬁ
 = 1;

786 
row
 = (
NCFûeBuf
 + 
cﬁ
 - 1) / col;

788 
di•_√xt
:

789 i‡(
commít
) {

790 i‡(
row
 > 
∆öe
) {

791 
row
 = 
∆öe
;

792 
y
 = 0;

795 
y
 = 
∆öe
 - 
row
 + 1;

798 i‡(
row
 >
∆öe
) {

799 
row
 = 
∆öe
;

800 
y
 = 0;

803 
y
 = 
∆öe
 - 
row
 - 1;

805 i‡(
y
) {

806 
	`move
(
y
 - 1, 0);

807 
	`˛π€ﬁx
();

809 i‡(
commít
) {

810 
	`move
(
y
, 0);

811 
	`˛π€ﬁx
();

812 
	`bﬁd
();

814 
	`add°r
("----- CompletionÜist -----");

815 
	`bﬁdíd
();

816 
y
++;

818 
i
 = 0; i < 
row
; i++) {

819 
j
 = 0; j < 
cﬁ
; j++) {

820 
n
 = 
cm_di•_√xt
 + 
j
 * 
row
 + 
i
;

821 i‡(
n
 >
NCFûeBuf
)

823 
	`move
(
y
, 
j
 * 
Àn
);

824 
	`˛π€ﬁx
();

825 
f
 = 
	`Sådup
(
d
);

826 
	`Såˇt_ch¨p
(
f
, 
CFûeBuf
[
n
]);

827 
	`add°r
(
	`c⁄v_‰om_sy°em
(
CFûeBuf
[
n
]));

828 i‡(
	`°©
(
	`ex∑ndP©h
(
f
->
±r
), &
°
Ë!-1 && 
	`S_ISDIR
(°.
°_mode
))

829 
	`add°r
("/");

831 
y
++;

833 i‡(
commít
 && 
y
 =
LASTLINE
 - 1) {

834 
	`move
(
y
, 0);

835 
	`˛π€ﬁx
();

836 
	`bﬁd
();

837 i‡(
emacs_like_löìdô
)

839 
	`add°r
("----- Press TABÅo continue -----");

842 
	`add°r
("----- Press CTRL-DÅo continue -----");

843 
	`bﬁdíd
();

845 
	}
}

848 
Så


849 
	$esˇ≥_•a˚s
(
Så
 
s
)

851 
Så
 
tmp
 = 
NULL
;

852 *
p
;

854 i‡(
s
 =
NULL
)

855  
s
;

856 
p
 = 
s
->
±r
; *p;Ö++) {

857 i‡(*
p
 =' ' || *∞=
CTRL_I
) {

858 i‡(
tmp
 =
NULL
)

859 
tmp
 = 
	`Så√w_ch¨p_n
(
s
->
±r
, ()(
p
 - s->ptr));

860 
	`Såˇt_ch¨
(
tmp
, '\\');

862 i‡(
tmp
)

863 
	`Såˇt_ch¨
(
tmp
, *
p
);

865 i‡(
tmp
)

866  
tmp
;

867  
s
;

868 
	}
}

871 
Så


872 
	$u√sˇ≥_•a˚s
(
Så
 
s
)

874 
Så
 
tmp
 = 
NULL
;

875 *
p
;

877 i‡(
s
 =
NULL
)

878  
s
;

879 
p
 = 
s
->
±r
; *p;Ö++) {

880 i‡(*
p
 ='\\' && (*’ + 1Ë=' ' || *’ + 1Ë=
CTRL_I
)) {

881 i‡(
tmp
 =
NULL
)

882 
tmp
 = 
	`Så√w_ch¨p_n
(
s
->
±r
, ()(
p
 - s->ptr));

885 i‡(
tmp
)

886 
	`Såˇt_ch¨
(
tmp
, *
p
);

889 i‡(
tmp
)

890  
tmp
;

891  
s
;

892 
	}
}

894 
Så


895 
	$doCom∂ëe
(
Så
 
i‚
, *
°©us
, 
√xt
)

897 
Ê
, 
i
;

898 *
‚
, *
p
;

899 
DIR
 *
d
;

900 
Dúe˘‹y
 *
dú
;

901 
°©
 
°
;

903 i‡(!
cm_√xt
) {

904 
NCFûeBuf
 = 0;

905 
i‚
 = 
	`Så_c⁄v_to_sy°em
(ifn);

906 i‡(
cm_mode
 & 
CPL_ON
)

907 
i‚
 = 
	`u√sˇ≥_•a˚s
(ifn);

908 
Com∂ëeBuf
 = 
	`Sådup
(
i‚
);

909 
	`Såœ°ch¨
(
Com∂ëeBuf
Ë!'/' && Com∂ëeBuf->
Àngth
 > 0)

910 
	`Såshrök
(
Com∂ëeBuf
, 1);

911 
CDúBuf
 = 
	`Sådup
(
Com∂ëeBuf
);

912 i‡(
cm_mode
 & 
CPL_URL
) {

913 i‡(
	`°∫cmp
(
Com∂ëeBuf
->
±r
, "file://localhost/", 17) == 0)

914 
	`Sådñëe
(
Com∂ëeBuf
, 0, 16);

915 i‡(
	`°∫cmp
(
Com∂ëeBuf
->
±r
, "file:///", 8) == 0)

916 
	`Sådñëe
(
Com∂ëeBuf
, 0, 7);

917 i‡(
	`°∫cmp
(
Com∂ëeBuf
->
±r
, "file:/", 6) == 0 &&

918 
Com∂ëeBuf
->
±r
[6] != '/')

919 
	`Sådñëe
(
Com∂ëeBuf
, 0, 5);

921 
Com∂ëeBuf
 = 
	`Sådup
(
i‚
);

922 *
°©us
 = 
CPL_FAIL
;

923  
	`Så_c⁄v_to_sy°em
(
Com∂ëeBuf
);

926 i‡(
Com∂ëeBuf
->
Àngth
 == 0) {

927 
	`Såˇt_ch¨
(
Com∂ëeBuf
, '.');

929 i‡(
	`Såœ°ch¨
(
Com∂ëeBuf
Ë='/' && Com∂ëeBuf->
Àngth
 > 1) {

930 
	`Såshrök
(
Com∂ëeBuf
, 1);

932 i‡((
d
 = 
	`›ídú
(
	`ex∑ndP©h
(
Com∂ëeBuf
->
±r
))Ë=
NULL
) {

933 
Com∂ëeBuf
 = 
	`Sådup
(
i‚
);

934 *
°©us
 = 
CPL_FAIL
;

935 i‡(
cm_mode
 & 
CPL_ON
)

936 
Com∂ëeBuf
 = 
	`esˇ≥_•a˚s
(CompleteBuf);

937  
Com∂ëeBuf
;

939 
‚
 = 
	`œ°FûeName
(
i‚
->
±r
);

940 
Ê
 = 
	`°æí
(
‚
);

941 
CFûeName
 = 
	`Så√w
();

943 
dú
 = 
	`ªaddú
(
d
);

944 i‡(
dú
 =
NULL
)

946 i‡(
Ê
 == 0

947 && (!
	`°rcmp
(
dú
->
d_«me
, ".") || !strcmp(dir->d_name, "..")))

949 i‡(!
	`°∫cmp
(
dú
->
d_«me
, 
‚
, 
Ê
)) {

950 
NCFûeBuf
++;

951 
CFûeBuf
 = 
	`New_Reu£
(*, CFûeBuf, 
NCFûeBuf
);

952 
CFûeBuf
[
NCFûeBuf
 - 1] =

953 
	`NewAtom_N
(, 
	`°æí
(
dú
->
d_«me
) + 1);

954 
	`°r˝y
(
CFûeBuf
[
NCFûeBuf
 - 1], 
dú
->
d_«me
);

955 i‡(
NCFûeBuf
 == 1) {

956 
CFûeName
 = 
	`Så√w_ch¨p
(
dú
->
d_«me
);

959 
i
 = 0; 
CFûeName
->
±r
[i] =
dú
->
d_«me
[i]; i++) ;

960 
	`Sååunˇã
(
CFûeName
, 
i
);

964 
	`˛o£dú
(
d
);

965 i‡(
NCFûeBuf
 == 0) {

966 
Com∂ëeBuf
 = 
	`Sådup
(
i‚
);

967 *
°©us
 = 
CPL_FAIL
;

968 i‡(
cm_mode
 & 
CPL_ON
)

969 
Com∂ëeBuf
 = 
	`esˇ≥_•a˚s
(CompleteBuf);

970  
Com∂ëeBuf
;

972 
	`qs‹t
(
CFûeBuf
, 
NCFûeBuf
, (CFûeBuf[0]), 
°rCmp
);

973 
NCFûeOff£t
 = 0;

974 i‡(
NCFûeBuf
 >= 2) {

975 
cm_√xt
 = 
TRUE
;

976 *
°©us
 = 
CPL_AMBIG
;

979 *
°©us
 = 
CPL_OK
;

983 
CFûeName
 = 
	`Så√w_ch¨p
(
CFûeBuf
[
NCFûeOff£t
]);

984 
NCFûeOff£t
 = (NCFûeOff£à+ 
√xt
 + 
NCFûeBuf
) % NCFileBuf;

985 *
°©us
 = 
CPL_MENU
;

987 
Com∂ëeBuf
 = 
	`Sådup
(
CDúBuf
);

988 i‡(
Com∂ëeBuf
->
Àngth
 && 
	`Såœ°ch¨
(CompleteBuf) != '/')

989 
	`Såˇt_ch¨
(
Com∂ëeBuf
, '/');

990 
	`Såˇt
(
Com∂ëeBuf
, 
CFûeName
);

991 i‡(*
°©us
 !
CPL_AMBIG
) {

992 
p
 = 
Com∂ëeBuf
->
±r
;

993 i‡(
cm_mode
 & 
CPL_URL
) {

994 i‡(
	`°∫cmp
(
p
, "file://localhost/", 17) == 0)

995 
p
 = &p[16];

996 i‡(
	`°∫cmp
(
p
, "file:///", 8) == 0)

997 
p
 = &p[7];

998 i‡(
	`°∫cmp
(
p
, "file:/", 6) == 0 &&Ö[6] != '/')

999 
p
 = &p[5];

1001 i‡(
	`°©
(
	`ex∑ndP©h
(
p
), &
°
Ë!-1 && 
	`S_ISDIR
(°.
°_mode
))

1002 
	`Såˇt_ch¨
(
Com∂ëeBuf
, '/');

1004 i‡(
cm_mode
 & 
CPL_ON
)

1005 
Com∂ëeBuf
 = 
	`esˇ≥_•a˚s
(CompleteBuf);

1006  
	`Så_c⁄v_‰om_sy°em
(
Com∂ëeBuf
);

1007 
	}
}

1010 
	$_¥ev
()

1012 
Hi°
 *
hi°
 = 
CuºítHi°
;

1013 *
p
;

1015 i‡(!
u£_hi°
)

1017 i‡(
°rCuºítBuf
) {

1018 
p
 = 
	`¥evHi°
(
hi°
);

1019 i‡(
p
 =
NULL
)

1023 
p
 = 
	`œ°Hi°
(
hi°
);

1024 i‡(
p
 =
NULL
)

1026 
°rCuºítBuf
 = 
°rBuf
;

1028 i‡(
DecodeURL
 && (
cm_mode
 & 
CPL_URL
) )

1029 
p
 = 
	`uæ_unquŸe_c⁄v
(p, 0);

1030 
°rBuf
 = 
	`Så√w_ch¨p
(
p
);

1031 
CLí
 = 
CPos
 = 
	`£tSåTy≥
(
°rBuf
, 
°rPr›
);

1032 
off£t
 = 0;

1033 
	}
}

1036 
	$_√xt
()

1038 
Hi°
 *
hi°
 = 
CuºítHi°
;

1039 *
p
;

1041 i‡(!
u£_hi°
)

1043 i‡(
°rCuºítBuf
 =
NULL
)

1045 
p
 = 
	`√xtHi°
(
hi°
);

1046 i‡(
p
) {

1047 i‡(
DecodeURL
 && (
cm_mode
 & 
CPL_URL
) )

1048 
p
 = 
	`uæ_unquŸe_c⁄v
(p, 0);

1049 
°rBuf
 = 
	`Så√w_ch¨p
(
p
);

1052 
°rBuf
 = 
°rCuºítBuf
;

1053 
°rCuºítBuf
 = 
NULL
;

1055 
CLí
 = 
CPos
 = 
	`£tSåTy≥
(
°rBuf
, 
°rPr›
);

1056 
off£t
 = 0;

1057 
	}
}

1060 
	$£tSåTy≥
(
Så
 
°r
, 
Löïr›
 *
¥›
)

1062 
Löïr›
 
˘y≥
;

1063 *
p
 = 
°r
->
±r
, *
ï
 =Ö + så->
Àngth
;

1064 
i
, 
Àn
 = 1;

1066 
i
 = 0; 
p
 < 
ï
;) {

1067 #ifde‡
USE_M17N


1068 
Àn
 = 
	`gë_m˛í
(
p
);

1070 i‡(
i
 + 
Àn
 > 
STR_LEN
)

1072 
˘y≥
 = 
	`gë_m˘y≥
(
p
);

1073 i‡(
is_∑sswd
) {

1074 i‡(
˘y≥
 & 
PC_CTRL
)

1075 
˘y≥
 = 
PC_ASCII
;

1076 #ifde‡
USE_M17N


1077 i‡(
˘y≥
 & 
PC_UNKNOWN
)

1078 
˘y≥
 = 
PC_WCHAR1
;

1081 
¥›
[
i
++] = 
˘y≥
;

1082 #ifde‡
USE_M17N


1083 
p
 +
Àn
;

1084 i‡(--
Àn
) {

1085 
˘y≥
 = (˘y≥ & ~
PC_WCHAR1
Ë| 
PC_WCHAR2
;

1086 
Àn
--)

1087 
¥›
[
i
++] = 
˘y≥
;

1090 
p
++;

1093  
i
;

1094 
	}
}

1097 
	$ãrmö©ed
(
c
)

1099 
ãrmch¨
[] = { '/', '&', '?', ' ', -1 };

1100 *
ç
;

1102 
ç
 = 
ãrmch¨
; *tp > 0;Åp++) {

1103 i‡(
c
 =*
ç
) {

1109 
	}
}

1112 
	$_edô‹
()

1114 
F‹mIãmLi°
 
fi
;

1115 *
p
;

1117 i‡(
is_∑sswd
)

1120 
fi
.
ªad⁄ly
 = 
FALSE
;

1121 
fi
.
vÆue
 = 
	`Sådup
(
°rBuf
);

1122 
	`Såˇt_ch¨
(
fi
.
vÆue
, '\n');

1124 
	`öput_ãxèªa
(&
fi
);

1126 
°rBuf
 = 
	`Så√w
();

1127 
p
 = 
fi
.
vÆue
->
±r
; *p;Ö++) {

1128 i‡(*
p
 == '\r' || *p == '\n')

1130 
	`Såˇt_ch¨
(
°rBuf
, *
p
);

1132 
CLí
 = 
CPos
 = 
	`£tSåTy≥
(
°rBuf
, 
°rPr›
);

1133 i‡(
CuºítTab
)

1134 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1135 
	}
}

	@local.c

2 
	~"fm.h
"

3 
	~<°rög.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/°©.h
>

8 
	~<sig«l.h
>

9 
	~<î∫o.h
>

10 #ifde‡
HAVE_READLINK


11 
	~<uni°d.h
>

13 #ifde‡
__EMX__


14 
	~<limôs.h
>

16 
	~"loˇl.h
"

17 
	~"hash.h
"

19 #ifde‡
__MINGW32_VERSION


20 
	~<wösock.h
>

23 
	#CGIFN_NORMAL
 0

	)

24 
	#CGIFN_LIBDIR
 1

	)

25 
	#CGIFN_CGIBIN
 2

	)

27 
Så
 
	gLoˇl_cookõ
 = 
NULL
;

28 *
	gLoˇl_cookõ_fûe
 = 
NULL
;

31 
	$wrôeLoˇlCookõ
()

33 
FILE
 *
f
;

35 i‡(
no_rc_dú
)

37 i‡(
Loˇl_cookõ_fûe
)

39 
Loˇl_cookõ_fûe
 = 
	`tmp‚ame
(
TMPF_COOKIE
, 
NULL
)->
±r
;

40 
	`£t_ívú⁄
("LOCAL_COOKIE_FILE", 
Loˇl_cookõ_fûe
);

41 
f
 = 
	`f›í
(
Loˇl_cookõ_fûe
, "wb");

42 i‡(!
f
)

44 
	`loˇlCookõ
();

45 
	`fwrôe
(
Loˇl_cookõ
->
±r
, (), Loˇl_cookõ->
Àngth
, 
f
);

46 
	`f˛o£
(
f
);

47 
	`chmod
(
Loˇl_cookõ_fûe
, 
S_IRUSR
 | 
S_IWUSR
);

48 
	}
}

51 
Så


52 
	$loˇlCookõ
()

54 
ho°«me
[256];

56 i‡(
Loˇl_cookõ
)

57  
Loˇl_cookõ
;

58 
	`gëho°«me
(
ho°«me
, 256);

59 
	`§™d48
(()
	`New
(Ë+ ()
	`time
(
NULL
));

60 
Loˇl_cookõ
 = 
	`S¥ötf
("%ld@%s", 
	`Ã™d48
(), 
ho°«me
);

61  
Loˇl_cookõ
;

62 
	}
}

64 
Så


65 
	$lﬂdLoˇlDú
(*
d«me
)

67 
Så
 
tmp
;

68 
DIR
 *
d
;

69 
Dúe˘‹y
 *
dú
;

70 
°©
 
°
;

71 **
Êi°
;

72 *
p
, *
qdú
;

73 
Så
 
fbuf
 = 
	`Så√w
();

74 #ifde‡
HAVE_LSTAT


75 
°©
 
l°
;

76 #ifde‡
HAVE_READLINK


77 
lbuf
[1024];

80 
i
, 
l
, 
ƒow
 = 0, 
n
 = 0, 
maxÀn
 = 0;

81 
nfûe
, 
nfûe_max
 = 100;

82 
Så
 
dú«me
;

84 
d
 = 
	`›ídú
(
d«me
);

85 i‡(
d
 =
NULL
)

86  
NULL
;

87 
dú«me
 = 
	`Så√w_ch¨p
(
d«me
);

88 i‡(
	`Såœ°ch¨
(
dú«me
) != '/')

89 
	`Såˇt_ch¨
(
dú«me
, '/');

90 
qdú
 = 
	`html_quŸe
(
	`Så_c⁄v_‰om_sy°em
(
dú«me
)->
±r
);

92 
tmp
 = 
	`Så√w_m_ch¨p
("<HTML>\n<HEAD>\n<BASE HREF=\"file://",

93 
	`html_quŸe
(
	`fûe_quŸe
(
dú«me
->
±r
)),

94 "\">\n<TITLE>Dúe˘‹yÜi° o‡", 
qdú
,

96 
qdú
, "</H1>\n", 
NULL
);

97 
Êi°
 = 
	`New_N
(*, 
nfûe_max
);

98 
nfûe
 = 0;

99 (
dú
 = 
	`ªaddú
(
d
)Ë!
NULL
) {

100 
Êi°
[
nfûe
++] = 
	`ÆlocSå
(
dú
->
d_«me
, -1);

101 i‡(
nfûe
 =
nfûe_max
) {

102 
nfûe_max
 *= 2;

103 
Êi°
 = 
	`New_Reu£
(*, fli°, 
nfûe_max
);

105 i‡(
mu…icﬁLi°
) {

106 
l
 = 
	`°æí
(
dú
->
d_«me
);

107 i‡(
l
 > 
maxÀn
)

108 
maxÀn
 = 
l
;

109 
n
++;

113 i‡(
mu…icﬁLi°
) {

114 
l
 = 
COLS
 / (
maxÀn
 + 2);

115 i‡(!
l
)

116 
l
 = 1;

117 
ƒow
 = (
n
 + 
l
 - 1) /Ü;

118 
n
 = 1;

119 
	`Såˇt_ch¨p
(
tmp
, "<TABLE CELLPADDING=0>\n<TR VALIGN=TOP>\n");

121 
	`qs‹t
((*)
Êi°
, 
nfûe
, (*), 
°rCmp
);

122 
i
 = 0; i < 
nfûe
; i++) {

123 
p
 = 
Êi°
[
i
];

124 i‡(
	`°rcmp
(
p
, ".") == 0)

126 
	`Såc›y
(
fbuf
, 
dú«me
);

127 i‡(
	`Såœ°ch¨
(
fbuf
) != '/')

128 
	`Såˇt_ch¨
(
fbuf
, '/');

129 
	`Såˇt_ch¨p
(
fbuf
, 
p
);

130 #ifde‡
HAVE_LSTAT


131 i‡(
	`l°©
(
fbuf
->
±r
, &
l°
) < 0)

134 i‡(
	`°©
(
fbuf
->
±r
, &
°
) < 0)

136 i‡(
mu…icﬁLi°
) {

137 i‡(
n
 == 1)

138 
	`Såˇt_ch¨p
(
tmp
, "<TD><NOBR>");

141 #ifde‡
HAVE_LSTAT


142 i‡(
	`S_ISLNK
(
l°
.
°_mode
))

143 
	`Såˇt_ch¨p
(
tmp
, "[LINK] ");

146 i‡(
	`S_ISDIR
(
°
.
°_mode
))

147 
	`Såˇt_ch¨p
(
tmp
, "[DIR]&nbsp; ");

149 
	`Såˇt_ch¨p
(
tmp
, "[FILE] ");

151 
	`Såˇt_m_ch¨p
(
tmp
, "<A HREF=\"", 
	`html_quŸe
(
	`fûe_quŸe
(
p
)), 
NULL
);

152 i‡(
	`S_ISDIR
(
°
.
°_mode
))

153 
	`Såˇt_ch¨
(
tmp
, '/');

154 
	`Såˇt_m_ch¨p
(
tmp
, "\">", 
	`html_quŸe
(
	`c⁄v_‰om_sy°em
(
p
)), 
NULL
);

155 i‡(
	`S_ISDIR
(
°
.
°_mode
))

156 
	`Såˇt_ch¨
(
tmp
, '/');

157 
	`Såˇt_ch¨p
(
tmp
, "</A>");

158 i‡(
mu…icﬁLi°
) {

159 i‡(
n
++ =
ƒow
) {

160 
	`Såˇt_ch¨p
(
tmp
, "</NOBR></TD>\n");

161 
n
 = 1;

164 
	`Såˇt_ch¨p
(
tmp
, "<BR>\n");

168 #i‡
	`deföed
(
HAVE_LSTAT
Ë&& deföed(
HAVE_READLINK
)

169 i‡(
	`S_ISLNK
(
l°
.
°_mode
)) {

170 i‡((
l
 = 
	`ªadlök
(
fbuf
->
±r
, 
lbuf
, (lbuf))) > 0) {

171 
lbuf
[
l
] = '\0';

172 
	`Såˇt_m_ch¨p
(
tmp
, " -> ",

173 
	`html_quŸe
(
	`c⁄v_‰om_sy°em
(
lbuf
)), 
NULL
);

174 i‡(
	`S_ISDIR
(
°
.
°_mode
))

175 
	`Såˇt_ch¨
(
tmp
, '/');

179 
	`Såˇt_ch¨p
(
tmp
, "<br>\n");

182 i‡(
mu…icﬁLi°
) {

183 
	`Såˇt_ch¨p
(
tmp
, "</TR>\n</TABLE>\n");

185 
	`Såˇt_ch¨p
(
tmp
, "</BODY>\n</HTML>\n");

187  
tmp
;

188 
	}
}

191 
	$check_loˇl_cgi
(*
fûe
, 
°©us
)

193 
°©
 
°
;

195 i‡(
°©us
 !
CGIFN_LIBDIR
 && sètu†!
CGIFN_CGIBIN
)

197 i‡(
	`°©
(
fûe
, &
°
) < 0)

199 i‡(
	`S_ISDIR
(
°
.
°_mode
))

201 #i‚de‡
__MINGW32_VERSION


202 i‡((
°
.
°_uid
 =
	`gëeuid
(Ë&& (°.
°_mode
 & 
S_IXUSR
)Ë|| (°.
°_gid
 =
	`gëegid
(Ë&& (°.°_modê& 
S_IXGRP
)Ë|| (°.°_modê& 
S_IXOTH
))

206 
	}
}

209 
	$£t_ívú⁄
(*
v¨
, *
vÆue
)

211 #ifde‡
HAVE_SETENV


212 i‡(
v¨
 !
NULL
 && 
vÆue
 != NULL)

213 
	`£ãnv
(
v¨
, 
vÆue
, 1);

215 #ifde‡
HAVE_PUTENV


216 
Hash_sv
 *
ív_hash
 = 
NULL
;

217 
Så
 
tmp
 = 
	`Så√w_m_ch¨p
(
v¨
, "=", 
vÆue
, 
NULL
);

219 i‡(
ív_hash
 =
NULL
)

220 
ív_hash
 = 
	`√wHash_sv
(20);

221 
	`putHash_sv
(
ív_hash
, 
v¨
, (*)
tmp
->
±r
);

222 
	`puãnv
(
tmp
->
±r
);

224 **
ívú⁄
;

225 **
√
;

226 *
p
;

227 
i
, 
l
, 
ñ
;

228 **
e
, **
√wív
;

232 
l
 = 
	`°æí
(
v¨
);

233 
e
 = 
ívú⁄
, 
i
 = 0; *ê!
NULL
;É++, i++) {

234 i‡(
	`°∫cmp
(
e
, 
v¨
, 
l
) == 0 && (*e)[l] == '=') {

235 
ñ
 = 
	`°æí
(*
e
Ë- 
l
 - 1;

236 i‡(
ñ
 >
	`°æí
(
vÆue
)) {

237 
	`°r˝y
(*
e
 + 
l
 + 1, 
vÆue
);

241 ; *
e
 !
NULL
;É++, 
i
++) {

242 *
e
 = *(e + 1);

244 
i
--;

249 
√wív
 = (**)
	`GC_mÆloc
((
i
 + 2) * (*));

250 i‡(
√wív
 =
NULL
)

252 
e
 = 
ívú⁄
, 
√
 = 
√wív
; *ê!
NULL
; *(ne++) = *(e++)) ;

253 *(
√
++Ë
p
;

254 *
√
 = 
NULL
;

255 
ívú⁄
 = 
√wív
;

258 
	}
}

261 
	$£t_cgi_ívú⁄
(*
«me
, *
‚
, *
ªq_uri
)

263 
	`£t_ívú⁄
("SERVER_SOFTWARE", 
w3m_vîsi⁄
);

264 
	`£t_ívú⁄
("SERVER_PROTOCOL", "HTTP/1.0");

265 
	`£t_ívú⁄
("SERVER_NAME", "localhost");

266 
	`£t_ívú⁄
("SERVER_PORT", "80");

267 
	`£t_ívú⁄
("REMOTE_HOST", "localhost");

268 
	`£t_ívú⁄
("REMOTE_ADDR", "127.0.0.1");

269 
	`£t_ívú⁄
("GATEWAY_INTERFACE", "CGI/1.1");

271 
	`£t_ívú⁄
("SCRIPT_NAME", 
«me
);

272 
	`£t_ívú⁄
("SCRIPT_FILENAME", 
‚
);

273 
	`£t_ívú⁄
("REQUEST_URI", 
ªq_uri
);

274 
	}
}

276 
Så


277 
	$checkP©h
(*
‚
, *
∑th
)

279 *
p
;

280 
Så
 
tmp
;

281 
°©
 
°
;

282 *
∑th
) {

283 
p
 = 
	`°rchr
(
∑th
, ':');

284 
tmp
 = 
	`Så√w_ch¨p
(
	`ex∑ndP©h
(
p
 ? 
	`ÆlocSå
(
∑th
,Ö -Öath) :Öath));

285 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

286 
	`Såˇt_ch¨
(
tmp
, '/');

287 
	`Såˇt_ch¨p
(
tmp
, 
‚
);

288 i‡(
	`°©
(
tmp
->
±r
, &
°
) == 0)

289  
tmp
;

290 i‡(!
p
)

292 
∑th
 = 
p
 + 1;

293 *
∑th
 == ':')

294 
∑th
++;

296  
NULL
;

297 
	}
}

300 
	$cgi_fûíame
(*
uri
, **
‚
, **
«me
, **
∑th_öfo
)

302 
Så
 
tmp
;

303 
off£t
;

305 *
‚
 = 
uri
;

306 *
«me
 = 
uri
;

307 *
∑th_öfo
 = 
NULL
;

309 i‡(
cgi_bö
 !
NULL
 && 
	`°∫cmp
(
uri
, "/cgi-bin/", 9) == 0) {

310 
off£t
 = 9;

311 i‡((*
∑th_öfo
 = 
	`°rchr
(
uri
 + 
off£t
, '/')))

312 *
«me
 = 
	`ÆlocSå
(
uri
, *
∑th_öfo
 - uri);

313 
tmp
 = 
	`checkP©h
(*
«me
 + 
off£t
, 
cgi_bö
);

314 i‡(
tmp
 =
NULL
)

315  
CGIFN_NORMAL
;

316 *
‚
 = 
tmp
->
±r
;

317  
CGIFN_CGIBIN
;

320 #ifde‡
__EMX__


322 
lib
[
_MAX_PATH
];

323 
	`_ab•©h
(
lib
, 
	`w3m_lib_dú
(), 
_MAX_PATH
);

324 
tmp
 = 
	`Så√w_ch¨p
(
lib
);

327 
tmp
 = 
	`Så√w_ch¨p
(
	`w3m_lib_dú
());

329 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

330 
	`Såˇt_ch¨
(
tmp
, '/');

331 i‡(
	`°∫cmp
(
uri
, "/$LIB/", 6) == 0)

332 
off£t
 = 6;

333 i‡(
	`°∫cmp
(
uri
, 
tmp
->
±r
,Åmp->
Àngth
) == 0)

334 
off£t
 = 
tmp
->
Àngth
;

335 i‡(*
uri
 ='/' && 
documít_roŸ
 !
NULL
) {

336 
Så
 
tmp2
 = 
	`Så√w_ch¨p
(
documít_roŸ
);

337 i‡(
	`Såœ°ch¨
(
tmp2
) != '/')

338 
	`Såˇt_ch¨
(
tmp2
, '/');

339 
	`Såˇt_ch¨p
(
tmp2
, 
uri
 + 1);

340 i‡(
	`°∫cmp
(
tmp2
->
±r
, 
tmp
->±r,Åmp->
Àngth
) != 0)

341  
CGIFN_NORMAL
;

342 
uri
 = 
tmp2
->
±r
;

343 *
«me
 = 
uri
;

344 
off£t
 = 
tmp
->
Àngth
;

347  
CGIFN_NORMAL
;

348 i‡((*
∑th_öfo
 = 
	`°rchr
(
uri
 + 
off£t
, '/')))

349 *
«me
 = 
	`ÆlocSå
(
uri
, *
∑th_öfo
 - uri);

350 
	`Såˇt_ch¨p
(
tmp
, *
«me
 + 
off£t
);

351 *
‚
 = 
tmp
->
±r
;

352  
CGIFN_LIBDIR
;

353 
	}
}

355 
FILE
 *

356 
	$loˇlcgi_po°
(*
uri
, *
q°r
, 
F‹mLi°
 *
ªque°
, *
ª„ªr
)

358 
FILE
 *
‰
 = 
NULL
, *
fw
 = NULL;

359 
°©us
;

360 
pid_t
 
pid
;

361 *
fûe
 = 
uri
, *
«me
 = uri, *
∑th_öfo
 = 
NULL
, *
tmpf
 = NULL;

363 #ifde‡
__MINGW32_VERSION


364  
NULL
;

366 
°©us
 = 
	`cgi_fûíame
(
uri
, &
fûe
, &
«me
, &
∑th_öfo
);

367 i‡(
	`check_loˇl_cgi
(
fûe
, 
°©us
) < 0)

368  
NULL
;

369 
	`wrôeLoˇlCookõ
();

370 i‡(
ªque°
 &&Ñeque°->
í˘y≥
 !
FORM_ENCTYPE_MULTIPART
) {

371 
tmpf
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
)->
±r
;

372 
fw
 = 
	`f›í
(
tmpf
, "w");

373 i‡(!
fw
)

374  
NULL
;

376 
pid
 = 
	`›í_pùe_rw
(&
‰
, 
NULL
);

377 i‡(
pid
 < 0)

378  
NULL
;

379 i‡(
pid
) {

380 i‡(
fw
)

381 
	`f˛o£
(
fw
);

382  
‰
;

384 
	`£tup_chûd
(
TRUE
, 2, 
fw
 ? 
	`fûío
(fw) : -1);

386 i‡(
q°r
)

387 
uri
 = 
	`Så√w_m_ch¨p
(uri, "?", 
q°r
, 
NULL
)->
±r
;

388 
	`£t_cgi_ívú⁄
(
«me
, 
fûe
, 
uri
);

389 i‡(
∑th_öfo
)

390 
	`£t_ívú⁄
("PATH_INFO", 
∑th_öfo
);

391 i‡(
ª„ªr
 &&Ñe„ª∏!
NO_REFERER
)

392 
	`£t_ívú⁄
("HTTP_REFERER", 
ª„ªr
);

393 i‡(
ªque°
) {

394 
	`£t_ívú⁄
("REQUEST_METHOD", "POST");

395 i‡(
q°r
)

396 
	`£t_ívú⁄
("QUERY_STRING", 
q°r
);

397 
	`£t_ívú⁄
("CONTENT_LENGTH", 
	`S¥ötf
("%d", 
ªque°
->
Àngth
)->
±r
);

398 i‡(
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

399 
	`£t_ívú⁄
("CONTENT_TYPE",

400 
	`S¥ötf
("multipart/form-data; boundary=%s",

401 
ªque°
->
bound¨y
)->
±r
);

402 
	`‰e›í
(
ªque°
->
body
, "r", 
°dö
);

405 
	`£t_ívú⁄
("CONTENT_TYPE", "application/x-www-form-urlencoded");

406 
	`fwrôe
(
ªque°
->
body
, (),Ñeque°->
Àngth
, 
fw
);

407 
	`f˛o£
(
fw
);

408 
	`‰e›í
(
tmpf
, "r", 
°dö
);

412 
	`£t_ívú⁄
("REQUEST_METHOD", "GET");

413 
	`£t_ívú⁄
("QUERY_STRING", 
q°r
 ? qstr : "");

414 
	`‰e›í
(
DEV_NULL_PATH
, "r", 
°dö
);

417 #ifde‡
HAVE_CHDIR


418 
	`chdú
(
	`mydú«me
(
fûe
));

420 
	`exe˛
(
fûe
, 
	`myba£«me
(fûe), 
NULL
);

421 
	`Ârötf
(
°dîr
, "execl(\"%s\", \"%s\", NULL): %s\n",

422 
fûe
, 
	`myba£«me
(fûe), 
	`°ªº‹
(
î∫o
));

423 
	`exô
(1);

424  
NULL
;

426 
	}
}

	@local.h

6 #i‚de‡
LOCAL_H


7 
	#LOCAL_H


	)

9 
	~<sys/ty≥s.h
>

10 #ifde‡
HAVE_DIRENT_H


11 
	~<dúít.h
>

12 
dúít
 
	tDúe˘‹y
;

14 
	~<sys/dú.h
>

15 
dúe˘
 
	tDúe˘‹y
;

17 
	~<sys/°©.h
>

19 #i‚de‡
S_IFMT


20 
	#S_IFMT
 0170000

	)

22 #i‚de‡
S_IFREG


23 
	#S_IFREG
 0100000

	)

26 
	#NOT_REGULAR
(
m
Ë(((mË& 
S_IFMT
Ë!
S_IFREG
)

	)

27 
	#IS_DIRECTORY
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

29 #i‚de‡
S_ISDIR


30 #i‚de‡
S_IFDIR


31 
	#S_IFDIR
 0040000

	)

33 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

36 #ifde‡
HAVE_READLINK


37 #i‚de‡
S_IFLNK


38 
	#S_IFLNK
 0120000

	)

40 #i‚de‡
S_ISLNK


41 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

	@mailcap.c

2 
	~"fm.h
"

3 
	~"my˘y≥.h
"

4 
	~<°dio.h
>

5 
	~<î∫o.h
>

6 
	~"∑r£èg.h
"

7 
	~"loˇl.h
"

9 
maûˇp
 
	gDeÁu…Maûˇp
[] = {

10 {"image/*", 
DEF_IMAGE_VIEWER
 " %s", 0, 
NULL
, NULL, NULL},

11 {"audio/basic", 
DEF_AUDIO_PLAYER
 " %s", 0, 
NULL
, NULL, NULL},

12 {
NULL
, NULL, 0, NULL, NULL, NULL}

15 
TextLi°
 *
	gmaûˇp_li°
;

16 
maûˇp
 **
	gU£rMaûˇp
;

19 
	$maûˇpM©ch
(
maûˇp
 *
mˇp
, *
ty≥
)

21 *
ˇp
 = 
mˇp
->
ty≥
, *
p
;

22 
Àvñ
;

23 
p
 = 
ˇp
; *p != '/';Ö++) {

24 i‡(
	`TOLOWER
(*
p
Ë!TOLOWER(*
ty≥
))

26 
ty≥
++;

28 i‡(*
ty≥
 != '/')

30 
p
++;

31 
ty≥
++;

32 i‡(
mˇp
->
Êags
 & 
MAILCAP_HTMLOUTPUT
)

33 
Àvñ
 = 1;

35 
Àvñ
 = 0;

36 i‡(*
p
 == '*')

37  10 + 
Àvñ
;

38 *
p
) {

39 i‡(
	`TOLOWER
(*
p
Ë!TOLOWER(*
ty≥
))

41 
p
++;

42 
ty≥
++;

44 i‡(*
ty≥
 != '\0')

46  20 + 
Àvñ
;

47 
	}
}

49 
maûˇp
 *

50 
	$£¨chMaûˇp
(
maûˇp
 *
èbÀ
, *
ty≥
)

52 
Àvñ
 = 0;

53 
maûˇp
 *
mˇp
 = 
NULL
;

54 
i
;

56 i‡(
èbÀ
 =
NULL
)

57  
NULL
;

58 ; 
èbÀ
->
ty≥
;Åable++) {

59 
i
 = 
	`maûˇpM©ch
(
èbÀ
, 
ty≥
);

60 i‡(
i
 > 
Àvñ
) {

61 i‡(
èbÀ
->
ã°
) {

62 
Så
 
comm™d
 =

63 
	`unquŸe_maûˇp
(
èbÀ
->
ã°
, 
ty≥
, 
NULL
, NULL, NULL);

64 i‡(
	`sy°em
(
comm™d
->
±r
) != 0)

67 
Àvñ
 = 
i
;

68 
mˇp
 = 
èbÀ
;

71  
mˇp
;

72 
	}
}

75 
	$m©chMaûˇpAâr
(*
p
, *
©å
, 
Àn
, 
Så
 *
vÆue
)

77 
quŸed
;

78 *
q
 = 
NULL
;

80 i‡(
	`°∫ˇ£cmp
(
p
, 
©å
, 
Àn
) == 0) {

81 
p
 +
Àn
;

82 
	`SKIP_BLANKS
(
p
);

83 i‡(
vÆue
) {

84 *
vÆue
 = 
	`Så√w
();

85 i‡(*
p
 == '=') {

86 
p
++;

87 
	`SKIP_BLANKS
(
p
);

88 
quŸed
 = 0;

89 *
p
 && (
quŸed
 || *p != ';')) {

90 i‡(
quŸed
 || !
	`IS_SPACE
(*
p
))

91 
q
 = 
p
;

92 i‡(
quŸed
)

93 
quŸed
 = 0;

94 i‡(*
p
 == '\\')

95 
quŸed
 = 1;

96 
	`Såˇt_ch¨
(*
vÆue
, *
p
);

97 
p
++;

99 i‡(
q
)

100 
	`Såshrök
(*
vÆue
, 
p
 - 
q
 - 1);

105 i‡(*
p
 == '\0' || *p == ';') {

111 
	}
}

114 
	$exåa˘MaûˇpE¡ry
(*
mˇp_íåy
, 
maûˇp
 *
mˇp
)

116 
j
, 
k
;

117 *
p
;

118 
quŸed
;

119 
Så
 
tmp
;

121 
	`bzîo
(
mˇp
, (
maûˇp
));

122 
p
 = 
mˇp_íåy
;

123 
	`SKIP_BLANKS
(
p
);

124 
k
 = -1;

125 
j
 = 0; 
p
[j] &&Ö[j] != ';'; j++) {

126 i‡(!
	`IS_SPACE
(
p
[
j
]))

127 
k
 = 
j
;

129 
mˇp
->
ty≥
 = 
	`ÆlocSå
(
p
, (
k
 >0Ë? k + 1 : 
j
);

130 i‡(!
p
[
j
])

132 
p
 +
j
 + 1;

134 
	`SKIP_BLANKS
(
p
);

135 
k
 = -1;

136 
quŸed
 = 0;

137 
j
 = 0; 
p
[j] && (
quŸed
 ||Ö[j] != ';'); j++) {

138 i‡(
quŸed
 || !
	`IS_SPACE
(
p
[
j
]))

139 
k
 = 
j
;

140 i‡(
quŸed
)

141 
quŸed
 = 0;

142 i‡(
p
[
j
] == '\\')

143 
quŸed
 = 1;

145 
mˇp
->
võwî
 = 
	`ÆlocSå
(
p
, (
k
 >0Ë? k + 1 : 
j
);

146 
p
 +
j
;

148 *
p
 == ';') {

149 
p
++;

150 
	`SKIP_BLANKS
(
p
);

151 i‡(
	`m©chMaûˇpAâr
(
p
, "√ed°îmöÆ", 13, 
NULL
)) {

152 
mˇp
->
Êags
 |
MAILCAP_NEEDSTERMINAL
;

154 i‡(
	`m©chMaûˇpAâr
(
p
, "c›iousouçut", 13, 
NULL
)) {

155 
mˇp
->
Êags
 |
MAILCAP_COPIOUSOUTPUT
;

157 i‡(
	`m©chMaûˇpAâr
(
p
, "x-htmlouçut", 12, 
NULL
) ||

158 
	`m©chMaûˇpAâr
(
p
, "htmlouçut", 10, 
NULL
)) {

159 
mˇp
->
Êags
 |
MAILCAP_HTMLOUTPUT
;

161 i‡(
	`m©chMaûˇpAâr
(
p
, "ã°", 4, &
tmp
)) {

162 
mˇp
->
ã°
 = 
	`ÆlocSå
(
tmp
->
±r
,Åmp->
Àngth
);

164 i‡(
	`m©chMaûˇpAâr
(
p
, "«mëem∂©e", 12, &
tmp
)) {

165 
mˇp
->
«mëem∂©e
 = 
	`ÆlocSå
(
tmp
->
±r
,Åmp->
Àngth
);

167 i‡(
	`m©chMaûˇpAâr
(
p
, "edô", 4, &
tmp
)) {

168 
mˇp
->
edô
 = 
	`ÆlocSå
(
tmp
->
±r
,Åmp->
Àngth
);

170 
quŸed
 = 0;

171 *
p
 && (
quŸed
 || *p != ';')) {

172 i‡(
quŸed
)

173 
quŸed
 = 0;

174 i‡(*
p
 == '\\')

175 
quŸed
 = 1;

176 
p
++;

180 
	}
}

182 
maûˇp
 *

183 
	$lﬂdMaûˇp
(*
fûíame
)

185 
FILE
 *
f
;

186 
i
, 
n
;

187 
Så
 
tmp
;

188 
maûˇp
 *
mˇp
;

190 
f
 = 
	`f›í
(
	`ex∑ndP©h
(
fûíame
), "r");

191 i‡(
f
 =
NULL
)

192  
NULL
;

193 
i
 = 0;

194 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

195 i‡(
tmp
->
±r
[0] != '#')

196 
i
++;

198 
	`f£ek
(
f
, 0, 0);

199 
n
 = 
i
;

200 
mˇp
 = 
	`New_N
(
maûˇp
, 
n
 + 1);

201 
i
 = 0;

202 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

203 i‡(
tmp
->
±r
[0] == '#')

205 
ªdo
:

206 
	`IS_SPACE
(
	`Såœ°ch¨
(
tmp
)))

207 
	`Såshrök
(
tmp
, 1);

208 i‡(
	`Såœ°ch¨
(
tmp
) == '\\') {

210 
	`Såshrök
(
tmp
, 1);

211 
	`Såˇt
(
tmp
, 
	`Såfgës
(
f
));

212 
ªdo
;

214 i‡(
	`exåa˘MaûˇpE¡ry
(
tmp
->
±r
, &
mˇp
[
i
]))

215 
i
++;

217 
	`bzîo
(&
mˇp
[
i
], (
maûˇp
));

218 
	`f˛o£
(
f
);

219  
mˇp
;

220 
	}
}

223 
	$öôMaûˇp
()

225 
TextLi°Iãm
 *
é
;

226 
i
;

228 i‡(
	`n⁄_nuŒ
(
maûˇp_fûes
))

229 
maûˇp_li°
 = 
	`make_domaö_li°
(
maûˇp_fûes
);

231 
maûˇp_li°
 = 
NULL
;

232 i‡(
maûˇp_li°
 =
NULL
)

234 
U£rMaûˇp
 = 
	`New_N
(
maûˇp
 *, 
maûˇp_li°
->
nôem
);

235 
i
 = 0, 
é
 = 
maûˇp_li°
->
fú°
;Ål; i++,Å»é->
√xt
)

236 
U£rMaûˇp
[
i
] = 
	`lﬂdMaûˇp
(
é
->
±r
);

238 
	}
}

241 
	$ac˚±abÀMimeTy≥s
()

243 
Så
 
ty≥s
 = 
NULL
;

244 
TextLi°
 *
l
;

245 
Hash_si
 *
mhash
;

246 *
p
;

247 
i
;

249 i‡(
ty≥s
 !
NULL
)

250  
ty≥s
->
±r
;

253 
l
 = 
	`√wTextLi°
();

254 
mhash
 = 
	`√wHash_si
(16);

256 
	`putHash_si
(
mhash
, "text", 1);

257 
	`pushText
(
l
, "image");

258 
	`putHash_si
(
mhash
, "image", 1);

259 
i
 = 0; i < 
maûˇp_li°
->
nôem
; i++) {

260 
maûˇp
 *
mp
 = 
U£rMaûˇp
[
i
];

261 *
mt
;

262 i‡(
mp
 =
NULL
)

264 ; 
mp
->
ty≥
; mp++) {

265 
p
 = 
	`°rchr
(
mp
->
ty≥
, '/');

266 i‡(
p
 =
NULL
)

268 
mt
 = 
	`ÆlocSå
(
mp
->
ty≥
, 
p
 - mp->type);

269 i‡(
	`gëHash_si
(
mhash
, 
mt
, 0) == 0) {

270 
	`pushText
(
l
, 
mt
);

271 
	`putHash_si
(
mhash
, 
mt
, 1);

275 
ty≥s
 = 
	`Så√w
();

276 
	`Såˇt_ch¨p
(
ty≥s
, "text/html,Åext/*;q=0.5");

277 (
p
 = 
	`p›Text
(
l
)Ë!
NULL
) {

278 
	`Såˇt_ch¨p
(
ty≥s
, ", ");

279 
	`Såˇt_ch¨p
(
ty≥s
, 
p
);

280 
	`Såˇt_ch¨p
(
ty≥s
, "/*");

282  
ty≥s
->
±r
;

283 
	}
}

285 
maûˇp
 *

286 
	$£¨chExtVõwî
(*
ty≥
)

288 
maûˇp
 *
p
;

289 
i
;

291 i‡(
maûˇp_li°
 =
NULL
)

292 
no_u£r_maûˇp
;

294 
i
 = 0; i < 
maûˇp_li°
->
nôem
; i++) {

295 i‡((
p
 = 
	`£¨chMaûˇp
(
U£rMaûˇp
[
i
], 
ty≥
)Ë!
NULL
)

296  
p
;

299 
no_u£r_maûˇp
:

300  
	`£¨chMaûˇp
(
DeÁu…Maûˇp
, 
ty≥
);

301 
	}
}

303 
	#MC_NORMAL
 0

	)

304 
	#MC_PREC
 1

	)

305 
	#MC_PREC2
 2

	)

306 
	#MC_QUOTED
 3

	)

308 
	#MCF_SQUOTED
 (1 << 0)

	)

309 
	#MCF_DQUOTED
 (1 << 1)

	)

311 
Så


312 
	$quŸe_maûˇp
(*
s
, 
Êag
)

314 
Så
 
d
;

316 
d
 = 
	`Så√w
();

318 ;; ++
s
)

319 *
s
) {

321 
íd
;

326 i‡(!(
Êag
 & 
MCF_SQUOTED
))

327 
	`Såˇt_ch¨
(
d
, '\\');

329 
	`Såˇt_ch¨
(
d
, *
s
);

332 i‡(
Êag
 & 
MCF_SQUOTED
) {

333 
	`Såˇt_ch¨p
(
d
, "'\\''");

337 i‡(!
Êag
 && !
	`IS_ALNUM
(*
s
))

338 
	`Såˇt_ch¨
(
d
, '\\');

343 
	`Såˇt_ch¨
(
d
, *
s
);

346 
íd
:

347  
d
;

348 
	}
}

351 
Så


352 
	$unquŸe_maûˇp_lo›
(*
q°r
, *
ty≥
, *
«me
, *
©å
,

353 *
mc_°©
, 
Êag0
)

355 
Så
 
°r
, 
tmp
, 
ã°
, 
thí
;

356 *
p
;

357 
°©us
 = 
MC_NORMAL
, 
¥ev_°©us
 = MC_NORMAL, 
•
 = 0, 
Êag
;

359 i‡(
mc_°©
)

360 *
mc_°©
 = 0;

362 i‡(
q°r
 =
NULL
)

363  
NULL
;

365 
°r
 = 
	`Så√w
();

366 
tmp
 = 
ã°
 = 
thí
 = 
NULL
;

368 
Êag
 = 
Êag0
, 
p
 = 
q°r
; *p;Ö++) {

369 i‡(
°©us
 =
MC_QUOTED
) {

370 i‡(
¥ev_°©us
 =
MC_PREC2
)

371 
	`Såˇt_ch¨
(
tmp
, *
p
);

373 
	`Såˇt_ch¨
(
°r
, *
p
);

374 
°©us
 = 
¥ev_°©us
;

377 i‡(*
p
 == '\\') {

378 
¥ev_°©us
 = 
°©us
;

379 
°©us
 = 
MC_QUOTED
;

382 
°©us
) {

383 
MC_NORMAL
:

384 i‡(*
p
 == '%') {

385 
°©us
 = 
MC_PREC
;

388 i‡(*
p
 == '\'') {

389 i‡(!
Êag0
 && 
Êag
 & 
MCF_SQUOTED
)

390 
Êag
 &~
MCF_SQUOTED
;

391 i‡(!
Êag
)

392 
Êag
 |
MCF_SQUOTED
;

394 i‡(*
p
 == '"') {

395 i‡(!
Êag0
 && 
Êag
 & 
MCF_DQUOTED
)

396 
Êag
 &~
MCF_DQUOTED
;

397 i‡(!
Êag
)

398 
Êag
 |
MCF_DQUOTED
;

400 
	`Såˇt_ch¨
(
°r
, *
p
);

403 
MC_PREC
:

404 i‡(
	`IS_ALPHA
(*
p
)) {

405 *
p
) {

407 i‡(
«me
) {

408 
	`Såˇt_ch¨p
(
°r
, 
	`quŸe_maûˇp
(
«me
, 
Êag
)->
±r
);

409 i‡(
mc_°©
)

410 *
mc_°©
 |
MCSTAT_REPNAME
;

414 i‡(
ty≥
) {

415 
	`Såˇt_ch¨p
(
°r
, 
	`quŸe_maûˇp
(
ty≥
, 
Êag
)->
±r
);

416 i‡(
mc_°©
)

417 *
mc_°©
 |
MCSTAT_REPTYPE
;

421 
°©us
 = 
MC_NORMAL
;

423 i‡(*
p
 == '{') {

424 
°©us
 = 
MC_PREC2
;

425 
ã°
 = 
thí
 = 
NULL
;

426 
tmp
 = 
	`Så√w
();

428 i‡(*
p
 == '%') {

429 
	`Såˇt_ch¨
(
°r
, *
p
);

432 
MC_PREC2
:

433 i‡(
•
 > 0 || *
p
 == '{') {

434 
	`Såˇt_ch¨
(
tmp
, *
p
);

436 *
p
) {

438 ++
•
;

441 --
•
;

447 i‡(*
p
 == '}') {

448 *
q
;

449 i‡(
©å
 && (
q
 = 
	`°rˇ£°r
◊âr, 
tmp
->
±r
)Ë!
NULL
 &&

450 (
q
 =
©å
 || 
	`IS_SPACE
(*(q - 1)) || *(q - 1) == ';') &&

451 
	`m©ch©å
(
q
, 
tmp
->
±r
,Åmp->
Àngth
, &tmp)) {

452 
	`Såˇt_ch¨p
(
°r
, 
	`quŸe_maûˇp
(
tmp
->
±r
, 
Êag
)->ptr);

453 i‡(
mc_°©
)

454 *
mc_°©
 |
MCSTAT_REPPARAM
;

456 
°©us
 = 
MC_NORMAL
;

459 
	`Såˇt_ch¨
(
tmp
, *
p
);

464  
°r
;

465 
	}
}

467 
Så


468 
	$unquŸe_maûˇp
(*
q°r
, *
ty≥
, *
«me
, *
©å
, *
mc_°©
)

470  
	`unquŸe_maûˇp_lo›
(
q°r
, 
ty≥
, 
«me
, 
©å
, 
mc_°©
, 0);

471 
	}
}

	@main.c

2 
	#MAINPROGRAM


	)

3 
	~"fm.h
"

4 
	~<sig«l.h
>

5 
	~<£tjmp.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<uni°d.h
>

9 
	~<f˙é.h
>

10 #i‡
deföed
(
HAVE_WAITPID
Ë|| deföed(
HAVE_WAIT3
)

11 
	~<sys/waô.h
>

13 
	~<time.h
>

14 
	~"ãrms.h
"

15 
	~"my˘y≥.h
"

16 
	~"ªgex.h
"

17 #ifde‡
USE_MOUSE


18 #ifde‡
USE_GPM


19 
	~<gpm.h
>

21 #i‡
deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

22 
do_gëch
();

23 
	#gëch
(Ë
	`do_gëch
()

	)

27 #ifde‡
__MINGW32_VERSION


28 
	~<wösock.h
>

30 
WSADATA
 
	gWSAD©a
;

33 
	#DSTR_LEN
 256

	)

35 
Hi°
 *
	gLﬂdHi°
;

36 
Hi°
 *
	gSaveHi°
;

37 
Hi°
 *
	gURLHi°
;

38 
Hi°
 *
	gShñlHi°
;

39 
Hi°
 *
	gTextHi°
;

40 
Hi°
 *
	gDi˘Hi°
;

41 
Hi°
 *
	gGoogÀHi°
;

42 
Hi°
 *
	gGoogÀLuckyHi°
;

44 
	s_Evít
 {

45 
	mcmd
;

46 *
	md©a
;

47 
_Evít
 *
	m√xt
;

48 } 
	tEvít
;

49 
Evít
 *
	gCuºítEvít
 = 
NULL
;

50 
Evít
 *
	gLa°Evít
 = 
NULL
;

52 #ifde‡
USE_ALARM


53 
AœrmEvít
 
	gDeÁu…Aœrm
 = {

54 0, 
AL_UNSET
, 
FUNCNAME_nulcmd
, 
NULL


56 
AœrmEvít
 *
	gCuºítAœrm
 = &
DeÁu…Aœrm
;

57 
MySig«lH™dÀr
 
SigAœrm
(
SIGNAL_ARG
);

60 #ifde‡
SIGWINCH


61 
	g√ed_ªsize_s¸ìn
 = 
FALSE
;

62 
MySig«lH™dÀr
 
ªsize_hook
(
SIGNAL_ARG
);

63 
ªsize_s¸ìn
();

66 #ifde‡
SIGPIPE


67 
MySig«lH™dÀr
 
SigPùe
(
SIGNAL_ARG
);

70 #ifde‡
USE_MARK


71 *
	gM¨kSåög
 = 
NULL
;

73 *
	gSórchSåög
 = 
NULL
;

74 (*
£¨chRoutöe
Ë(
Buf„r
 *, *);

76 #i‚de‡
__MINGW32_VERSION


77 
JMP_BUF
 
I¡Rëu∫
;

79 
_JBTYPE
 
I¡Rëu∫
[
_JBLEN
];

82 
	`dñBuf„r
(
Buf„r
 *
buf
);

83 
	`cmd_lﬂdfûe
(*
∑th
);

84 
	`cmd_lﬂdURL
(*
uæ
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
,

85 
F‹mLi°
 *
ªque°
);

86 
	`cmd_lﬂdBuf„r
(
Buf„r
 *
buf
, 
¥›
, 
lökid
);

87 
	`keyPªssEvítProc
(
c
);

88 
show_∑øms_p
 = 0;

89 
	`show_∑øms
(
FILE
 * 
Â
);

91 *
	`gëCurW‹d
(
Buf„r
 *
buf
, *
•os
, *
ïos
,

92 c⁄° *
badch¨s
);

94 
di•œy_ok
 = 
FALSE
;

95 
	`do_dump
(
Buf„r
 *);

96 
¥ec_num
 = 0;

97 
¥ev_key
 = -1;

98 
⁄_èrgë
 = 1;

99 
add_dow∆ﬂd_li°
 = 
FALSE
;

101 
	`£t_buf„r_ívú⁄
(
Buf„r
 *);

102 
	`ßve_buf„r_posôi⁄
(
Buf„r
 *
buf
);

104 
	`_fﬁlowF‹m
();

105 
	`_goLöe
(*);

106 
	`_√wT
();

107 
	`fﬁlowTab
(
TabBuf„r
 * 
èb
);

108 
	`moveTab
(
TabBuf„r
 * 
t
, TabBuf„∏* 
t2
, 
right
);

109 
	`_√xtA
();

110 
	`_¥evA
();

111 
check_èrgë
 = 
TRUE
;

112 
	#PREC_NUM
 (
¥ec_num
 ?Öªc_num : 1)

	)

113 
	#PREC_LIMIT
 10000

	)

114 
	`£¨chKeyNum
();

116 
	#hñp
(Ë
	`fußge
(
°dout
, 0)

	)

117 
	#ußge
(Ë
	`fußge
(
°dîr
, 1)

	)

120 
	$fvîsi⁄
(
FILE
 * 
f
)

122 
	`Ârötf
(
f
, "w3m vîsi⁄ %s, o±i⁄†%s\n", 
w3m_vîsi⁄
,

123 #i‡
LANG
 =
JA


128 #ifde‡
USE_M17N


131 #ifde‡
USE_IMAGE


134 #ifde‡
USE_COLOR


136 #ifde‡
USE_ANSI_COLOR


140 #ifde‡
USE_MOUSE


142 #ifde‡
USE_GPM


145 #ifde‡
USE_SYSMOUSE


149 #ifde‡
USE_MENU


152 #ifde‡
USE_COOKIE


155 #ifde‡
USE_SSL


157 #ifde‡
USE_SSL_VERIFY


161 #ifde‡
USE_EXTERNAL_URI_LOADER


164 #ifde‡
USE_W3MMAILER


167 #ifde‡
USE_NNTP


170 #ifde‡
USE_GOPHER


173 #ifde‡
INET6


176 #ifde‡
USE_ALARM


179 #ifde‡
USE_MARK


182 #ifde‡
USE_MIGEMO


186 
	}
}

189 
	$fußge
(
FILE
 * 
f
, 
îr
)

191 
	`fvîsi⁄
(
f
);

193 
	`Ârötf
(
f
, "usage: w3m [options] [URL or filename]\noptions:\n");

194 
	`Ârötf
(
f
, " -tÅab setÅab width\n");

195 
	`Ârötf
(
f
, " -r ignore backspaceÉffect\n");

196 
	`Ârötf
(
f
, " -lÜine # ofÖreservedÜine (default 10000)\n");

197 #ifde‡
USE_M17N


198 
	`Ârötf
(
f
, " -I charset document charset\n");

199 
	`Ârötf
(
f
, " -O charset display/output charset\n");

200 #i‚de‡
DEBIAN


201 
	`Ârötf
(
f
, " -e EUC-JP\n");

202 
	`Ârötf
(
f
, " -s Shift_JIS\n");

203 
	`Ârötf
(
f
, " -j JIS\n");

206 
	`Ârötf
(
f
, " -BÜoad bookmark\n");

207 
	`Ârötf
(
f
, " -bookmark file specify bookmark file\n");

208 
	`Ârötf
(
f
, " -TÅype specify content-type\n");

209 
	`Ârötf
(
f
, " -m internet message mode\n");

210 
	`Ârötf
(
f
, " -v visual startup mode\n");

211 #ifde‡
USE_COLOR


212 
	`Ârötf
(
f
, " -M monochrome display\n");

214 
	`Ârötf
(
f
,

216 
	`Ârötf
(
f
, " -FáutomaticallyÑender frame\n");

217 
	`Ârötf
(
f
,

219 
	`Ârötf
(
f
,

221 #ifde‡
USE_IMAGE


222 
	`Ârötf
(
f
,

225 
	`Ârötf
(
f
, " -dump dump formattedÖage into stdout\n");

226 
	`Ârötf
(
f
,

228 
	`Ârötf
(
f
, " -dump_source dumpÖage source into stdout\n");

229 
	`Ârötf
(
f
, " -dump_both dump HEADánd source into stdout\n");

230 
	`Ârötf
(
f
,

232 
	`Ârötf
(
f
, " -post file use POST method with file content\n");

233 
	`Ârötf
(
f
, " -header string insert stringásá header\n");

234 
	`Ârötf
(
f
, " +<num> goto <num>Üine\n");

235 
	`Ârötf
(
f
, " -num showÜineÇumber\n");

236 
	`Ârötf
(
f
, " -no-proxy don't useÖroxy\n");

237 #ifde‡
INET6


238 
	`Ârötf
(
f
, " -4 IPv4 only (-o dns_order=4)\n");

239 
	`Ârötf
(
f
, " -6 IPv6 only (-o dns_order=6)\n");

241 #ifde‡
USE_MOUSE


242 
	`Ârötf
(
f
, " -no-mouse don't use mouse\n");

244 #ifde‡
USE_COOKIE


245 
	`Ârötf
(
f
,

248 
	`Ârötf
(
f
, " -pauth user:passÖroxyáuthentication\n");

249 
	`Ârötf
(
f
, " -graph use graphic character\n");

250 
	`Ârötf
(
f
, " -no-graph don't use graphic character\n");

251 #ifde‡
DEBIAN


252 
	`Ârötf
(
f
, " -s squeeze multiple blankÜines\n");

254 
	`Ârötf
(
f
, " -S squeeze multiple blankÜines\n");

256 
	`Ârötf
(
f
, " -WÅoggle wrap search mode\n");

257 
	`Ârötf
(
f
, " -X don't useÅermcap init/deinit\n");

258 
	`Ârötf
(
f
,

260 
	`Ârötf
(
f
, " -o opt=valueássign valueÅo config option\n");

261 
	`Ârötf
(
f
, " -show-optionÖrintáll config options\n");

262 
	`Ârötf
(
f
, " -config file specify config file\n");

263 
	`Ârötf
(
f
, " -helpÖrintÅhis usage message\n");

264 
	`Ârötf
(
f
, " -versionÖrint w3m version\n");

265 
	`Ârötf
(
f
, " -reqlog writeÑequestÜogfile\n");

266 
	`Ârötf
(
f
, " -debug DO NOT USE\n");

267 i‡(
show_∑øms_p
)

268 
	`show_∑øms
(
f
);

269 
	`exô
(
îr
);

270 
	}
}

272 #ifde‡
USE_M17N


273 #ifde‡
__EMX__


274 *
gëCodePage
();

278 
GC_w¨n_¥oc
 
	g‹ig_GC_w¨n_¥oc
 = 
NULL
;

279 
	#GC_WARN_KEEP_MAX
 (20)

	)

282 
	$wøp_GC_w¨n_¥oc
(*
msg
, 
GC_w‹d
 
¨g
)

284 i‡(
fmInôülized
) {

287 *
msg
;

288 
GC_w‹d
 
¨g
;

289 } 
msg_rög
[
GC_WARN_KEEP_MAX
];

291 
i
 = 0;

292 
n
 = 0;

293 
lock
 = 0;

294 
j
;

296 
j
 = (
i
 + 
n
Ë% ((
msg_rög
) / (msg_ring[0]));

297 
msg_rög
[
j
].
msg
 = msg;

298 
msg_rög
[
j
].
¨g
 =árg;

300 i‡(
n
 < (
msg_rög
) / (msg_ring[0]))

301 ++
n
;

303 ++
i
;

305 i‡(!
lock
) {

306 
lock
 = 1;

308 ; 
n
 > 0; --n, ++
i
) {

309 
i
 %(
msg_rög
) / (msg_ring[0]);

311 
	`¥ötf
(
msg_rög
[
i
].
msg
, ()msg_rög[i].
¨g
);

312 
	`¶ìp_tûl_™ykey
(1, 1);

315 
lock
 = 0;

318 i‡(
‹ig_GC_w¨n_¥oc
)

319 
	`‹ig_GC_w¨n_¥oc
(
msg
, 
¨g
);

321 
	`Ârötf
(
°dîr
, 
msg
, ()
¨g
);

322 
	}
}

324 #ifde‡
SIGCHLD


326 
	$sig_chld
(
signo
)

328 
p_°©
;

329 #ifde‡
HAVE_WAITPID


330 
pid_t
 
pid
;

332 (
pid
 = 
	`waôpid
(-1, &
p_°©
, 
WNOHANG
)) > 0) {

335 #ñi‡
HAVE_WAIT3


336 
pid
;

338 (
pid
 = 
	`waô3
(&
p_°©
, 
WNOHANG
, 
NULL
)) > 0) {

342 
	`waô
(&
p_°©
);

344 
	`mySig«l
(
SIGCHLD
, 
sig_chld
);

346 
	}
}

349 
Så


350 
	$make_›ti⁄Æ_hódî_°rög
(*
s
)

352 *
p
;

353 
Så
 
hs
;

355 i‡(
	`°rchr
(
s
, '\n') || strchr(s, '\r'))

356  
NULL
;

357 
p
 = 
s
; *p && *p != ':';Ö++) ;

358 i‡(*
p
 !':' ||Ö =
s
)

359  
NULL
;

360 
hs
 = 
	`Så√w_size
(
	`°æí
(
s
) + 3);

361 
	`Såc›y_ch¨p_n
(
hs
, 
s
, 
p
 - s);

362 i‡(!
	`Såˇ£cmp_ch¨p
(
hs
, "content-type"))

363 
ovîride_c⁄ã¡_ty≥
 = 
TRUE
;

364 
	`Såˇt_ch¨p
(
hs
, ": ");

365 i‡(*(++
p
)) {

366 
	`SKIP_BLANKS
(
p
);

367 
	`Såˇt_ch¨p
(
hs
, 
p
);

369 
	`Såˇt_ch¨p
(
hs
, "\r\n");

370  
hs
;

371 
	}
}

374 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

376 
Buf„r
 *
√wbuf
 = 
NULL
;

377 *
p
, 
c
;

378 
i
;

379 
I≈utSåóm
 
ªdö
;

380 *
löe_°r
 = 
NULL
;

381 **
lﬂd_¨gv
;

382 
F‹mLi°
 *
ªque°
;

383 
lﬂd_¨gc
 = 0;

384 
lﬂd_bookm¨k
 = 
FALSE
;

385 
visuÆ_°¨t
 = 
FALSE
;

386 
›í_√w_èb
 = 
FALSE
;

387 
£¨ch_hódî
 = 
FALSE
;

388 *
deÁu…_ty≥
 = 
NULL
;

389 *
po°_fûe
 = 
NULL
;

390 
Så
 
îr_msg
;

391 #ifde‡
USE_M17N


392 *
LoˇÀ
 = 
NULL
;

393 
wc_uöt8
 
auto_dëe˘
;

394 #ifde‡
__EMX__


395 
wc_˚s
 
CodePage
;

398 
	`GC_INIT
();

399 #i‡
	`deföed
(
ENABLE_NLS
Ë|| (deföed(
USE_M17N
Ë&& deföed(
HAVE_LANGINFO_CODESET
))

400 
	`£éoˇÀ
(
LC_ALL
, "");

402 #ifde‡
ENABLE_NLS


403 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

404 
	`ãxtdomaö
(
PACKAGE
);

407 #i‚de‡
HAVE_SYS_ERRLIST


408 
	`¥ï¨e_sys_îæi°
();

411 
NO_¥oxy_domaös
 = 
	`√wTextLi°
();

412 
fûeToDñëe
 = 
	`√wTextLi°
();

414 
lﬂd_¨gv
 = 
	`New_N
(*, 
¨gc
 - 1);

415 
lﬂd_¨gc
 = 0;

417 
CuºítDú
 = 
	`cuºítdú
();

418 
CuºítPid
 = ()
	`gëpid
();

419 
Bookm¨kFûe
 = 
NULL
;

420 
c⁄fig_fûe
 = 
NULL
;

423 
i
 = 1; i < 
¨gc
; i++) {

424 i‡(*
¨gv
[
i
] == '-') {

425 i‡(!
	`°rcmp
("-c⁄fig", 
¨gv
[
i
])) {

426 
¨gv
[
i
] = "-dummy";

427 i‡(++
i
 >
¨gc
)

428 
	`ußge
();

429 
c⁄fig_fûe
 = 
¨gv
[
i
];

430 
¨gv
[
i
] = "-dummy";

432 i‡(!
	`°rcmp
("-h", 
¨gv
[
i
]) || !strcmp("-help",árgv[i]))

433 
	`hñp
();

434 i‡(!
	`°rcmp
("-V", 
¨gv
[
i
]) || !strcmp("-version",árgv[i])) {

435 
	`fvîsi⁄
(
°dout
);

436 
	`exô
(0);

441 #ifde‡
USE_M17N


442 i‡(
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LC_ALL")) ||

443 
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LC_CTYPE")) ||

444 
	`n⁄_nuŒ
(
LoˇÀ
 = 
	`gëív
("LANG"))) {

445 
Di•œyCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DisplayCharset);

446 
DocumítCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DocumentCharset);

447 
Sy°emCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, SystemCharset);

449 #ifde‡
__EMX__


450 
CodePage
 = 
	`wc_guess_ch¨£t
(
	`gëCodePage
(), 0);

451 i‡(
CodePage
)

452 
Di•œyCh¨£t
 = 
DocumítCh¨£t
 = 
Sy°emCh¨£t
 = 
CodePage
;

457 
	`öô_rc
();

459 
LﬂdHi°
 = 
	`√wHi°
();

460 
SaveHi°
 = 
	`√wHi°
();

461 
ShñlHi°
 = 
	`√wHi°
();

462 
TextHi°
 = 
	`√wHi°
();

463 
Di˘Hi°
 = 
	`√wHi°
();

464 
GoogÀHi°
 = 
	`√wHi°
();

465 
GoogÀLuckyHi°
 = 
	`√wHi°
();

466 
URLHi°
 = 
	`√wHi°
();

468 #ifde‡
USE_M17N


469 i‡(
FﬁlowLoˇÀ
 && 
LoˇÀ
) {

470 
Di•œyCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, DisplayCharset);

471 
Sy°emCh¨£t
 = 
	`wc_guess_loˇÀ_ch¨£t
(
LoˇÀ
, SystemCharset);

473 
auto_dëe˘
 = 
WcO±i⁄
.auto_detect;

474 
Bookm¨kCh¨£t
 = 
DocumítCh¨£t
;

477 i‡(!
	`n⁄_nuŒ
(
HTTP_¥oxy
) &&

478 ((
p
 = 
	`gëív
("HTTP_PROXY")) ||

479 (
p
 = 
	`gëív
("http_proxy")) || (p = getenv("HTTP_proxy"))))

480 
HTTP_¥oxy
 = 
p
;

481 #ifde‡
USE_SSL


482 i‡(!
	`n⁄_nuŒ
(
HTTPS_¥oxy
) &&

483 ((
p
 = 
	`gëív
("HTTPS_PROXY")) ||

484 (
p
 = 
	`gëív
("https_proxy")) || (p = getenv("HTTPS_proxy"))))

485 
HTTPS_¥oxy
 = 
p
;

486 i‡(
HTTPS_¥oxy
 =
NULL
 && 
	`n⁄_nuŒ
(
HTTP_¥oxy
))

487 
HTTPS_¥oxy
 = 
HTTP_¥oxy
;

489 #ifde‡
USE_GOPHER


490 i‡(!
	`n⁄_nuŒ
(
GOPHER_¥oxy
) &&

491 ((
p
 = 
	`gëív
("GOPHER_PROXY")) ||

492 (
p
 = 
	`gëív
("gopher_proxy")) || (p = getenv("GOPHER_proxy"))))

493 
GOPHER_¥oxy
 = 
p
;

495 i‡(!
	`n⁄_nuŒ
(
FTP_¥oxy
) &&

496 ((
p
 = 
	`gëív
("FTP_PROXY")) ||

497 (
p
 = 
	`gëív
("ftp_proxy")) || (p = getenv("FTP_proxy"))))

498 
FTP_¥oxy
 = 
p
;

499 i‡(!
	`n⁄_nuŒ
(
NO_¥oxy
) &&

500 ((
p
 = 
	`gëív
("NO_PROXY")) ||

501 (
p
 = 
	`gëív
("no_proxy")) || (p = getenv("NO_proxy"))))

502 
NO_¥oxy
 = 
p
;

503 #ifde‡
USE_NNTP


504 i‡(!
	`n⁄_nuŒ
(
NNTP_£rvî
Ë&& (
p
 = 
	`gëív
("NNTPSERVER")Ë!
NULL
)

505 
NNTP_£rvî
 = 
p
;

506 i‡(!
	`n⁄_nuŒ
(
NNTP_mode
Ë&& (
p
 = 
	`gëív
("NNTPMODE")Ë!
NULL
)

507 
NNTP_mode
 = 
p
;

510 i‡(!
	`n⁄_nuŒ
(
Edô‹
Ë&& (
p
 = 
	`gëív
("EDITOR")Ë!
NULL
)

511 
Edô‹
 = 
p
;

512 i‡(!
	`n⁄_nuŒ
(
Maûî
Ë&& (
p
 = 
	`gëív
("MAILER")Ë!
NULL
)

513 
Maûî
 = 
p
;

516 
i
 = 1;

517 
i
 < 
¨gc
) {

518 i‡(*
¨gv
[
i
] == '-') {

519 i‡(!
	`°rcmp
("-t", 
¨gv
[
i
])) {

520 i‡(++
i
 >
¨gc
)

521 
	`ußge
();

522 i‡(
	`©oi
(
¨gv
[
i
]) > 0)

523 
Tab°›
 = 
	`©oi
(
¨gv
[
i
]);

525 i‡(!
	`°rcmp
("-r", 
¨gv
[
i
]))

526 
ShowEf„˘
 = 
FALSE
;

527 i‡(!
	`°rcmp
("-l", 
¨gv
[
i
])) {

528 i‡(++
i
 >
¨gc
)

529 
	`ußge
();

530 i‡(
	`©oi
(
¨gv
[
i
]) > 0)

531 
PagîMax
 = 
	`©oi
(
¨gv
[
i
]);

533 #ifde‡
USE_M17N


534 #i‚de‡
DEBIAN


535 i‡(!
	`°rcmp
("-s", 
¨gv
[
i
]))

536 
Di•œyCh¨£t
 = 
WC_CES_SHIFT_JIS
;

537 i‡(!
	`°rcmp
("-j", 
¨gv
[
i
]))

538 
Di•œyCh¨£t
 = 
WC_CES_ISO_2022_JP
;

539 i‡(!
	`°rcmp
("-e", 
¨gv
[
i
]))

540 
Di•œyCh¨£t
 = 
WC_CES_EUC_JP
;

542 i‡(!
	`°∫cmp
("-I", 
¨gv
[
i
], 2)) {

543 i‡(
¨gv
[
i
][2] != '\0')

544 
p
 = 
¨gv
[
i
] + 2;

546 i‡(++
i
 >
¨gc
)

547 
	`ußge
();

548 
p
 = 
¨gv
[
i
];

550 
DocumítCh¨£t
 = 
	`wc_guess_ch¨£t_sh‹t
(
p
, DocumentCharset);

551 
WcO±i⁄
.
auto_dëe˘
 = 
WC_OPT_DETECT_OFF
;

552 
U£C⁄ã¡Ch¨£t
 = 
FALSE
;

554 i‡(!
	`°∫cmp
("-O", 
¨gv
[
i
], 2)) {

555 i‡(
¨gv
[
i
][2] != '\0')

556 
p
 = 
¨gv
[
i
] + 2;

558 i‡(++
i
 >
¨gc
)

559 
	`ußge
();

560 
p
 = 
¨gv
[
i
];

562 
Di•œyCh¨£t
 = 
	`wc_guess_ch¨£t_sh‹t
(
p
, DisplayCharset);

565 i‡(!
	`°rcmp
("-gøph", 
¨gv
[
i
]))

566 
U£GøphicCh¨
 = 
TRUE
;

567 i‡(!
	`°rcmp
("-no-gøph", 
¨gv
[
i
]))

568 
U£GøphicCh¨
 = 
FALSE
;

569 i‡(!
	`°rcmp
("-T", 
¨gv
[
i
])) {

570 i‡(++
i
 >
¨gc
)

571 
	`ußge
();

572 
DeÁu…Ty≥
 = 
deÁu…_ty≥
 = 
¨gv
[
i
];

574 i‡(!
	`°rcmp
("-m", 
¨gv
[
i
]))

575 
SórchHódî
 = 
£¨ch_hódî
 = 
TRUE
;

576 i‡(!
	`°rcmp
("-v", 
¨gv
[
i
]))

577 
visuÆ_°¨t
 = 
TRUE
;

578 i‡(!
	`°rcmp
("-N", 
¨gv
[
i
]))

579 
›í_√w_èb
 = 
TRUE
;

580 #ifde‡
USE_COLOR


581 i‡(!
	`°rcmp
("-M", 
¨gv
[
i
]))

582 
u£Cﬁ‹
 = 
FALSE
;

584 i‡(!
	`°rcmp
("-B", 
¨gv
[
i
]))

585 
lﬂd_bookm¨k
 = 
TRUE
;

586 i‡(!
	`°rcmp
("-bookm¨k", 
¨gv
[
i
])) {

587 i‡(++
i
 >
¨gc
)

588 
	`ußge
();

589 
Bookm¨kFûe
 = 
¨gv
[
i
];

590 i‡(
Bookm¨kFûe
[0] != '~' && BookmarkFile[0] != '/') {

591 
Så
 
tmp
 = 
	`Så√w_ch¨p
(
CuºítDú
);

592 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

593 
	`Såˇt_ch¨
(
tmp
, '/');

594 
	`Såˇt_ch¨p
(
tmp
, 
Bookm¨kFûe
);

595 
Bookm¨kFûe
 = 
	`˛ónupName
(
tmp
->
±r
);

598 i‡(!
	`°rcmp
("-F", 
¨gv
[
i
]))

599 
RídîFøme
 = 
TRUE
;

600 i‡(!
	`°rcmp
("-W", 
¨gv
[
i
])) {

601 i‡(
WøpDeÁu…
)

602 
WøpDeÁu…
 = 
FALSE
;

604 
WøpDeÁu…
 = 
TRUE
;

606 i‡(!
	`°rcmp
("-dump", 
¨gv
[
i
]))

607 
w3m_dump
 = 
DUMP_BUFFER
;

608 i‡(!
	`°rcmp
("-dump_sour˚", 
¨gv
[
i
]))

609 
w3m_dump
 = 
DUMP_SOURCE
;

610 i‡(!
	`°rcmp
("-dump_hód", 
¨gv
[
i
]))

611 
w3m_dump
 = 
DUMP_HEAD
;

612 i‡(!
	`°rcmp
("-dump_bŸh", 
¨gv
[
i
]))

613 
w3m_dump
 = (
DUMP_HEAD
 | 
DUMP_SOURCE
);

614 i‡(!
	`°rcmp
("-dump_exåa", 
¨gv
[
i
]))

615 
w3m_dump
 = (
DUMP_HEAD
 | 
DUMP_SOURCE
 | 
DUMP_EXTRA
);

616 i‡(!
	`°rcmp
("-hÆfdump", 
¨gv
[
i
]))

617 
w3m_dump
 = 
DUMP_HALFDUMP
;

618 i‡(!
	`°rcmp
("-hÆÊﬂd", 
¨gv
[
i
])) {

619 
w3m_dump
 = 0;

620 
w3m_hÆÊﬂd
 = 
TRUE
;

621 
DeÁu…Ty≥
 = 
deÁu…_ty≥
 = "text/html";

623 i‡(!
	`°rcmp
("-backíd", 
¨gv
[
i
])) {

624 
w3m_backíd
 = 
TRUE
;

626 i‡(!
	`°rcmp
("-backíd_b©ch", 
¨gv
[
i
])) {

627 
w3m_backíd
 = 
TRUE
;

628 i‡(++
i
 >
¨gc
)

629 
	`ußge
();

630 i‡(!
backíd_b©ch_comm™ds
)

631 
backíd_b©ch_comm™ds
 = 
	`√wTextLi°
();

632 
	`pushText
(
backíd_b©ch_comm™ds
, 
¨gv
[
i
]);

634 i‡(!
	`°rcmp
("-cﬁs", 
¨gv
[
i
])) {

635 i‡(++
i
 >
¨gc
)

636 
	`ußge
();

637 
COLS
 = 
	`©oi
(
¨gv
[
i
]);

639 i‡(!
	`°rcmp
("-µc", 
¨gv
[
i
])) {

640 
µc
;

641 i‡(++
i
 >
¨gc
)

642 
	`ußge
();

643 
µc
 = 
	`©of
(
¨gv
[
i
]);

644 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&

645 
µc
 <
MAXIMUM_PIXEL_PER_CHAR
) {

646 
pixñ_≥r_ch¨
 = 
µc
;

647 
£t_pixñ_≥r_ch¨
 = 
TRUE
;

650 #ifde‡
USE_IMAGE


651 i‡(!
	`°rcmp
("-µl", 
¨gv
[
i
])) {

652 
µc
;

653 i‡(++
i
 >
¨gc
)

654 
	`ußge
();

655 
µc
 = 
	`©of
(
¨gv
[
i
]);

656 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&

657 
µc
 <
MAXIMUM_PIXEL_PER_CHAR
 * 2) {

658 
pixñ_≥r_löe
 = 
µc
;

659 
£t_pixñ_≥r_löe
 = 
TRUE
;

663 i‡(!
	`°rcmp
("-num", 
¨gv
[
i
]))

664 
showLöeNum
 = 
TRUE
;

665 i‡(!
	`°rcmp
("-no-¥oxy", 
¨gv
[
i
]))

666 
u£_¥oxy
 = 
FALSE
;

667 #ifde‡
INET6


668 i‡(!
	`°rcmp
("-4", 
¨gv
[
i
]) || !strcmp("-6",árgv[i]))

669 
	`£t_∑øm_›ti⁄
(
	`S¥ötf
("dns_‹dî=%c", 
¨gv
[
i
][1])->
±r
);

671 i‡(!
	`°rcmp
("-po°", 
¨gv
[
i
])) {

672 i‡(++
i
 >
¨gc
)

673 
	`ußge
();

674 
po°_fûe
 = 
¨gv
[
i
];

676 i‡(!
	`°rcmp
("-hódî", 
¨gv
[
i
])) {

677 
Så
 
hs
;

678 i‡(++
i
 >
¨gc
)

679 
	`ußge
();

680 i‡((
hs
 = 
	`make_›ti⁄Æ_hódî_°rög
(
¨gv
[
i
])Ë!
NULL
) {

681 i‡(
hódî_°rög
 =
NULL
)

682 
hódî_°rög
 = 
hs
;

684 
	`Såˇt
(
hódî_°rög
, 
hs
);

686 
¨gv
[
i
][0]) {

687 
¨gv
[
i
][0] = '\0';

688 
¨gv
[
i
]++;

691 #ifde‡
USE_MOUSE


692 i‡(!
	`°rcmp
("-no-mou£", 
¨gv
[
i
])) {

693 
u£_mou£
 = 
FALSE
;

696 #ifde‡
USE_COOKIE


697 i‡(!
	`°rcmp
("-no-cookõ", 
¨gv
[
i
])) {

698 
u£_cookõ
 = 
FALSE
;

699 
ac˚±_cookõ
 = 
FALSE
;

701 i‡(!
	`°rcmp
("-cookõ", 
¨gv
[
i
])) {

702 
u£_cookõ
 = 
TRUE
;

703 
ac˚±_cookõ
 = 
TRUE
;

706 i‡(!
	`°rcmp
("-∑uth", 
¨gv
[
i
])) {

707 i‡(++
i
 >
¨gc
)

708 
	`ußge
();

709 
¥oxy_auth_cookõ
 = 
	`Så√w_m_ch¨p
("Basic ",

710 
	`ícodeB
(
¨gv
[
i
])->
±r
,

711 
NULL
);

712 
¨gv
[
i
][0]) {

713 
¨gv
[
i
][0] = '\0';

714 
¨gv
[
i
]++;

717 #ifde‡
DEBIAN


718 i‡(!
	`°rcmp
("-s", 
¨gv
[
i
]))

720 i‡(!
	`°rcmp
("-S", 
¨gv
[
i
]))

722 
squìzeBœnkLöe
 = 
TRUE
;

723 i‡(!
	`°rcmp
("-X", 
¨gv
[
i
]))

724 
Do_nŸ_u£_ti_ã
 = 
TRUE
;

725 i‡(!
	`°rcmp
("-tôÀ", 
¨gv
[
i
]))

726 
di•œyTôÀTîm
 = 
	`gëív
("TERM");

727 i‡(!
	`°∫cmp
("-tôÀ=", 
¨gv
[
i
], 7))

728 
di•œyTôÀTîm
 = 
¨gv
[
i
] + 7;

729 i‡(!
	`°rcmp
("-o", 
¨gv
[
i
]) ||

730 !
	`°rcmp
("-show-›ti⁄", 
¨gv
[
i
])) {

731 i‡(!
	`°rcmp
("-show-›ti⁄", 
¨gv
[
i
]Ë|| ++ò>
¨gc
 ||

732 !
	`°rcmp
(
¨gv
[
i
], "?")) {

733 
	`show_∑øms
(
°dout
);

734 
	`exô
(0);

736 i‡(!
	`£t_∑øm_›ti⁄
(
¨gv
[
i
])) {

739 
	`Ârötf
(
°dîr
, "%s: bad o±i⁄\n", 
¨gv
[
i
]);

740 
show_∑øms_p
 = 1;

741 
	`ußge
();

744 i‡(!
	`°rcmp
("-dummy", 
¨gv
[
i
])) {

747 i‡(!
	`°rcmp
("-debug", 
¨gv
[
i
])) {

748 
w3m_debug
 = 
TRUE
;

750 i‡(!
	`°rcmp
("-ªqlog",
¨gv
[
i
])) {

751 
w3m_ªqlog
=
	`rcFûe
("request.log");

754 
	`ußge
();

757 i‡(*
¨gv
[
i
] == '+') {

758 
löe_°r
 = 
¨gv
[
i
] + 1;

761 
lﬂd_¨gv
[
lﬂd_¨gc
++] = 
¨gv
[
i
];

763 
i
++;

766 #ifdef 
__WATT32__


767 i‡(
w3m_debug
)

768 
	`dbug_öô
();

769 
	`sock_öô
();

772 #ifde‡
__MINGW32_VERSION


774 
îr
;

775 
WORD
 
wVîReq
;

777 
wVîReq
 = 
	`MAKEWORD
(1, 1);

779 
îr
 = 
	`WSASèπup
(
wVîReq
, &
WSAD©a
);

780 i‡(
îr
 != 0)

782 
	`Ârötf
(
°dîr
, "Can't find winsock\n");

785 
_fmode
 = 
_O_BINARY
;

789 
Fú°Tab
 = 
NULL
;

790 
La°Tab
 = 
NULL
;

791 
nTab
 = 0;

792 
CuºítTab
 = 
NULL
;

793 
CuºítKey
 = -1;

794 i‡(
Bookm¨kFûe
 =
NULL
)

795 
Bookm¨kFûe
 = 
	`rcFûe
(
BOOKMARK
);

797 i‡(!
	`ißây
(1Ë&& !
w3m_dump
) {

799 
w3m_dump
 = 
DUMP_BUFFER
;

801 i‡(
w3m_dump
) {

802 i‡(
COLS
 == 0)

803 
COLS
 = 80;

806 #ifde‡
USE_BINMODE_STREAM


807 
	`£tmode
(
	`fûío
(
°dout
), 
O_BINARY
);

809 i‡(!
w3m_dump
 && !
w3m_backíd
) {

810 
	`fmInô
();

811 #ifde‡
SIGWINCH


812 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

814 
	`£éöescﬁs
();

815 
	`£tups¸ìn
();

818 #ifde‡
USE_IMAGE


819 i‡(
w3m_hÆfdump
 && 
di•œyImage
)

820 
a˘iveImage
 = 
TRUE
;

823 
	`sync_wôh_›ti⁄
();

824 #ifde‡
USE_COOKIE


825 
	`öôCookõ
();

827 #ifde‡
USE_HISTORY


828 i‡(
U£Hi°‹y
)

829 
	`lﬂdHi°‹y
(
URLHi°
);

832 #ifde‡
USE_M17N


833 
	`wtf_öô
(
DocumítCh¨£t
, 
Di•œyCh¨£t
);

839 i‡(
w3m_backíd
)

840 
	`backíd
();

842 i‡(
w3m_dump
)

843 
	`mySig«l
(
SIGINT
, 
SIG_IGN
);

844 #ifde‡
SIGCHLD


845 
	`mySig«l
(
SIGCHLD
, 
sig_chld
);

847 #ifde‡
SIGPIPE


848 
	`mySig«l
(
SIGPIPE
, 
SigPùe
);

851 
‹ig_GC_w¨n_¥oc
 = 
	`GC_£t_w¨n_¥oc
(
wøp_GC_w¨n_¥oc
);

852 
îr_msg
 = 
	`Så√w
();

853 i‡(
lﬂd_¨gc
 == 0) {

855 i‡(!
	`ißây
(0)) {

856 
ªdö
 = 
	`√wFûeSåóm
(
	`fd›í
(
	`dup
(0), "rb"), ((*)())
p˛o£
);

857 
√wbuf
 = 
	`›íGíîÆPagîBuf„r
(
ªdö
);

858 
	`dup2
(1, 0);

860 i‡(
lﬂd_bookm¨k
) {

861 
√wbuf
 = 
	`lﬂdGíîÆFûe
(
Bookm¨kFûe
, 
NULL
, 
NO_REFERER
, 0, NULL);

862 i‡(
√wbuf
 =
NULL
)

863 
	`Såˇt_ch¨p
(
îr_msg
, "w3m: Can'tÜoad bookmark.\n");

865 i‡(
visuÆ_°¨t
) {

867 
Så
 
s_∑ge
;

868 
s_∑ge
 =

869 
Så√w_ch¨p


871 
	`Såˇt_ch¨p
(
s_∑ge
, "<a href='http://w3m.sourceforge.net/'>");

872 
	`Såˇt_m_ch¨p
(
s_∑ge
,

874 
w3m_vîsi⁄
,

876 
NULL
);

877 #ifde‡
DEBIAN


878 
	`Såˇt_m_ch¨p
(
s_∑ge
,

881 
NULL
);

883 
√wbuf
 = 
	`lﬂdHTMLSåög
(
s_∑ge
);

884 i‡(
√wbuf
 =
NULL
)

885 
	`Såˇt_ch¨p
(
îr_msg
, "w3m: Can'tÜoad string.\n");

886 i‡(
√wbuf
 !
NO_BUFFER
)

887 
√wbuf
->
buf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

889 i‡((
p
 = 
	`gëív
("HTTP_HOME")Ë!
NULL
 ||

890 (
p
 = 
	`gëív
("WWW_HOME")Ë!
NULL
) {

891 
√wbuf
 = 
	`lﬂdGíîÆFûe
(
p
, 
NULL
, 
NO_REFERER
, 0, NULL);

892 i‡(
√wbuf
 =
NULL
)

893 
	`Såˇt
(
îr_msg
, 
	`S¥ötf
("w3m: C™'àlﬂd %s.\n", 
p
));

894 i‡(
√wbuf
 !
NO_BUFFER
)

895 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
√wbuf
->
cuºítURL
)->
±r
);

898 i‡(
fmInôülized
)

899 
	`fmTîm
();

900 
	`ußge
();

902 i‡(
√wbuf
 =
NULL
) {

903 i‡(
fmInôülized
)

904 
	`fmTîm
();

905 i‡(
îr_msg
->
Àngth
)

906 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

907 
	`w3m_exô
(2);

909 
i
 = -1;

912 
i
 = 0;

914 ; 
i
 < 
lﬂd_¨gc
; i++) {

915 i‡(
i
 >= 0) {

916 
SórchHódî
 = 
£¨ch_hódî
;

917 
DeÁu…Ty≥
 = 
deÁu…_ty≥
;

918 i‡(
w3m_dump
 =
DUMP_HEAD
) {

919 
ªque°
 = 
	`New
(
F‹mLi°
);

920 
ªque°
->
mëhod
 = 
FORM_METHOD_HEAD
;

921 
√wbuf
 =

922 
	`lﬂdGíîÆFûe
(
lﬂd_¨gv
[
i
], 
NULL
, 
NO_REFERER
, 0,

923 
ªque°
);

926 i‡(
po°_fûe
 && 
i
 == 0) {

927 
FILE
 *
Â
;

928 
Så
 
body
;

929 i‡(!
	`°rcmp
(
po°_fûe
, "-"))

930 
Â
 = 
°dö
;

932 
Â
 = 
	`f›í
(
po°_fûe
, "r");

933 i‡(
Â
 =
NULL
) {

935 
	`Såˇt
(
îr_msg
,

936 
	`S¥ötf
("w3m: C™'à›í %s.\n", 
po°_fûe
));

939 
body
 = 
	`SåfgëÆl
(
Â
);

940 i‡(
Â
 !
°dö
)

941 
	`f˛o£
(
Â
);

942 
ªque°
 =

943 
	`√wF‹mLi°
(
NULL
, "post", NULL, NULL, NULL, NULL,

944 
NULL
);

945 
ªque°
->
body
 = body->
±r
;

946 
ªque°
->
bound¨y
 = 
NULL
;

947 
ªque°
->
Àngth
 = 
body
->length;

950 
ªque°
 = 
NULL
;

952 
√wbuf
 =

953 
	`lﬂdGíîÆFûe
(
lﬂd_¨gv
[
i
], 
NULL
, 
NO_REFERER
, 0,

954 
ªque°
);

956 i‡(
√wbuf
 =
NULL
) {

958 
	`Såˇt
(
îr_msg
,

959 
	`S¥ötf
("w3m: C™'àlﬂd %s.\n", 
lﬂd_¨gv
[
i
]));

962 i‡(
√wbuf
 =
NO_BUFFER
)

964 
√wbuf
->
ªÆ_scheme
) {

965 
SCM_MAILTO
:

967 
SCM_LOCAL
:

968 
SCM_LOCAL_CGI
:

969 
	`unshi·Hi°
(
LﬂdHi°
, 
	`c⁄v_‰om_sy°em
(
lﬂd_¨gv
[
i
]));

971 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
√wbuf
->
cuºítURL
)->
±r
);

975 i‡(
√wbuf
 =
NO_BUFFER
)

977 i‡(
√wbuf
->
∑gîSour˚
 ||

978 (
√wbuf
->
ªÆ_scheme
 =
SCM_LOCAL
 &&Çewbuf->
hódî_sour˚
 &&

979 
√wbuf
->
cuºítURL
.
fûe
 && 
	`°rcmp
(newbuf->currentURL.file, "-")))

980 
√wbuf
->
£¨ch_hódî
 = search_header;

981 i‡(
CuºítTab
 =
NULL
) {

982 
Fú°Tab
 = 
La°Tab
 = 
CuºítTab
 = 
	`√wTab
();

983 
nTab
 = 1;

984 
Fú°buf
 = 
Cuºítbuf
 = 
√wbuf
;

986 i‡(
›í_√w_èb
) {

987 
	`_√wT
();

988 
Cuºítbuf
->
√xtBuf„r
 = 
√wbuf
;

989 
	`dñBuf„r
(
Cuºítbuf
);

992 
Cuºítbuf
->
√xtBuf„r
 = 
√wbuf
;

993 
Cuºítbuf
 = 
√wbuf
;

995 i‡(!
w3m_dump
 || w3m_dum∞=
DUMP_BUFFER
) {

996 i‡(
Cuºítbuf
->
‰ame£t
 !
NULL
 && 
RídîFøme
)

997 
	`rFøme
();

999 i‡(
w3m_dump
)

1000 
	`do_dump
(
Cuºítbuf
);

1002 
Cuºítbuf
 = 
√wbuf
;

1003 #ifde‡
USE_BUFINFO


1004 
	`ßveBuf„rInfo
();

1008 i‡(
w3m_dump
) {

1009 i‡(
îr_msg
->
Àngth
)

1010 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

1011 #ifde‡
USE_COOKIE


1012 
	`ßve_cookõs
();

1014 
	`w3m_exô
(0);

1017 i‡(
add_dow∆ﬂd_li°
) {

1018 
add_dow∆ﬂd_li°
 = 
FALSE
;

1019 
CuºítTab
 = 
La°Tab
;

1020 i‡(!
Fú°Tab
) {

1021 
Fú°Tab
 = 
La°Tab
 = 
CuºítTab
 = 
	`√wTab
();

1022 
nTab
 = 1;

1024 i‡(!
Fú°buf
 || Fú°bu‡=
NO_BUFFER
) {

1025 
Fú°buf
 = 
Cuºítbuf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

1026 
Cuºítbuf
->
buf„Ωr›
 = 
BP_INTERNAL
 | 
BP_NO_URL
;

1027 
Cuºítbuf
->
buf„∫ame
 = 
DOWNLOAD_LIST_TITLE
;

1030 
Cuºítbuf
 = 
Fú°buf
;

1031 
	`ldDL
();

1034 
CuºítTab
 = 
Fú°Tab
;

1035 i‡(!
Fú°Tab
 || !
Fú°buf
 || Fú°bu‡=
NO_BUFFER
) {

1036 i‡(
√wbuf
 =
NO_BUFFER
) {

1037 i‡(
fmInôülized
)

1039 
	`öputCh¨
("Hitány keyÅo quit w3m:");

1041 i‡(
fmInôülized
)

1042 
	`fmTîm
();

1043 i‡(
îr_msg
->
Àngth
)

1044 
	`Ârötf
(
°dîr
, "%s", 
îr_msg
->
±r
);

1045 i‡(
√wbuf
 =
NO_BUFFER
) {

1046 #ifde‡
USE_COOKIE


1047 
	`ßve_cookõs
();

1049 i‡(!
îr_msg
->
Àngth
)

1050 
	`w3m_exô
(0);

1052 
	`w3m_exô
(2);

1054 i‡(
îr_msg
->
Àngth
)

1055 
	`di•_mesßge_n£c
(
îr_msg
->
±r
, 
FALSE
, 1, 
TRUE
, FALSE);

1057 
SórchHódî
 = 
FALSE
;

1058 
DeÁu…Ty≥
 = 
NULL
;

1059 #ifde‡
USE_M17N


1060 
U£C⁄ã¡Ch¨£t
 = 
TRUE
;

1061 
WcO±i⁄
.
auto_dëe˘
 =áuto_detect;

1064 
Cuºítbuf
 = 
Fú°buf
;

1065 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1066 i‡(
löe_°r
) {

1067 
	`_goLöe
(
löe_°r
);

1070 i‡(
add_dow∆ﬂd_li°
) {

1071 
add_dow∆ﬂd_li°
 = 
FALSE
;

1072 
	`ldDL
();

1074 i‡(
Cuºítbuf
->
submô
) {

1075 
Anch‹
 *
a
 = 
Cuºítbuf
->
submô
;

1076 
Cuºítbuf
->
submô
 = 
NULL
;

1077 
	`gŸoLöe
(
Cuºítbuf
, 
a
->
°¨t
.
löe
);

1078 
Cuºítbuf
->
pos
 = 
a
->
°¨t
.pos;

1079 
	`_fﬁlowF‹m
(
TRUE
);

1083 i‡(
CuºítEvít
) {

1084 
CuºítKey
 = -1;

1085 
CuºítKeyD©a
 = 
NULL
;

1086 
CuºítCmdD©a
 = (*)
CuºítEvít
->
d©a
;

1087 
w3mFuncLi°
[
CuºítEvít
->
cmd
].
	`func
();

1088 
CuºítCmdD©a
 = 
NULL
;

1089 
CuºítEvít
 = CuºítEvít->
√xt
;

1093 #ifde‡
USE_ALARM


1094 i‡(
Cuºítbuf
->
evít
) {

1095 i‡(
Cuºítbuf
->
evít
->
°©us
 !
AL_UNSET
) {

1096 
CuºítAœrm
 = 
Cuºítbuf
->
evít
;

1097 i‡(
CuºítAœrm
->
£c
 == 0) {

1098 
Cuºítbuf
->
evít
 = 
NULL
;

1099 
CuºítKey
 = -1;

1100 
CuºítKeyD©a
 = 
NULL
;

1101 
CuºítCmdD©a
 = (*)
CuºítAœrm
->
d©a
;

1102 
w3mFuncLi°
[
CuºítAœrm
->
cmd
].
	`func
();

1103 
CuºítCmdD©a
 = 
NULL
;

1108 
Cuºítbuf
->
evít
 = 
NULL
;

1110 i‡(!
Cuºítbuf
->
evít
)

1111 
CuºítAœrm
 = &
DeÁu…Aœrm
;

1113 #ifde‡
USE_MOUSE


1114 
mou£_a˘i⁄
.
ö_a˘i⁄
 = 
FALSE
;

1115 i‡(
u£_mou£
)

1116 
	`mou£_a˘ive
();

1118 #ifde‡
USE_ALARM


1119 i‡(
CuºítAœrm
->
£c
 > 0) {

1120 
	`mySig«l
(
SIGALRM
, 
SigAœrm
);

1121 
	`Æ¨m
(
CuºítAœrm
->
£c
);

1124 #ifde‡
SIGWINCH


1125 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

1127 #ifde‡
USE_IMAGE


1128 i‡(
a˘iveImage
 && 
di•œyImage
 && 
Cuºítbuf
->
img
 &&

1129 !
Cuºítbuf
->
image_lﬂded
) {

1131 #ifde‡
SIGWINCH


1132 i‡(
√ed_ªsize_s¸ìn
)

1133 
	`ªsize_s¸ìn
();

1135 
	`lﬂdImage
(
Cuºítbuf
, 
IMG_FLAG_NEXT
);

1136 } 
	`¶ìp_tûl_™ykey
(1, 0) <= 0);

1138 #ifde‡
SIGWINCH


1142 #ifde‡
SIGWINCH


1145 i‡(
√ed_ªsize_s¸ìn
)

1146 
	`ªsize_s¸ìn
();

1147 } 
	`¶ìp_tûl_™ykey
(1, 0) <= 0);

1150 
c
 = 
	`gëch
();

1151 #ifde‡
USE_ALARM


1152 i‡(
CuºítAœrm
->
£c
 > 0) {

1153 
	`Æ¨m
(0);

1156 #ifde‡
USE_MOUSE


1157 i‡(
u£_mou£
)

1158 
	`mou£_öa˘ive
();

1160 i‡(
	`IS_ASCII
(
c
)) {

1161 if–
vi_¥ec_num
 ){

1162 if(((
¥ec_num
 && 
c
 == '0') || '1' <= c) && (c <= '9')) {

1163 
¥ec_num
 =Öªc_num * 10 + ()(
c
 - '0');

1164 i‡(
¥ec_num
 > 
PREC_LIMIT
)

1165 
¥ec_num
 = 
PREC_LIMIT
;

1168 
	`£t_buf„r_ívú⁄
(
Cuºítbuf
);

1169 
	`ßve_buf„r_posôi⁄
(
Cuºítbuf
);

1170 
	`keyPªssEvítProc
(()
c
);

1171 
¥ec_num
 = 0;

1175 
	`£t_buf„r_ívú⁄
(
Cuºítbuf
);

1176 
	`ßve_buf„r_posôi⁄
(
Cuºítbuf
);

1177 
	`keyPªssEvítProc
(()
c
);

1178 
¥ec_num
 = 0;

1181 
¥ev_key
 = 
CuºítKey
;

1182 
CuºítKey
 = -1;

1183 
CuºítKeyD©a
 = 
NULL
;

1185 
	}
}

1188 
	$keyPªssEvítProc
(
c
)

1190 
CuºítKey
 = 
c
;

1191 
w3mFuncLi°
[()
GlobÆKeym≠
[
c
]].
	`func
();

1192 
	}
}

1195 
	$pushEvít
(
cmd
, *
d©a
)

1197 
Evít
 *
evít
;

1199 
evít
 = 
	`New
(
Evít
);

1200 
evít
->
cmd
 = cmd;

1201 
evít
->
d©a
 = data;

1202 
evít
->
√xt
 = 
NULL
;

1203 i‡(
CuºítEvít
)

1204 
La°Evít
->
√xt
 = 
evít
;

1206 
CuºítEvít
 = 
evít
;

1207 
La°Evít
 = 
evít
;

1208 
	}
}

1211 
	$dump_sour˚
(
Buf„r
 *
buf
)

1213 
FILE
 *
f
;

1214 
c
;

1215 i‡(
buf
->
sour˚fûe
 =
NULL
)

1217 
f
 = 
	`f›í
(
buf
->
sour˚fûe
, "r");

1218 i‡(
f
 =
NULL
)

1220 
c
 = 
	`fgëc
(
f
), !
	`„of
(f)) {

1221 
	`putch¨
(
c
);

1223 
	`f˛o£
(
f
);

1224 
	}
}

1227 
	$dump_hód
(
Buf„r
 *
buf
)

1229 
TextLi°Iãm
 *
ti
;

1231 i‡(
buf
->
documít_hódî
 =
NULL
) {

1232 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

1233 
	`¥ötf
("\n");

1236 
ti
 = 
buf
->
documít_hódî
->
fú°
;Åi;Åòti->
√xt
) {

1237 #ifde‡
USE_M17N


1238 
	`¥ötf
("%s",

1239 
	`wc_c⁄v_°ri˘
(
ti
->
±r
, 
I¬îCh¨£t
,

1240 
buf
->
documít_ch¨£t
)->
±r
);

1242 
	`¥ötf
("%s", 
ti
->
±r
);

1245 
	`puts
("");

1246 
	}
}

1249 
	$dump_exåa
(
Buf„r
 *
buf
)

1251 
	`¥ötf
("W3m-cuºít-uæ: %s\n", 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

1252 i‡(
buf
->
ba£URL
)

1253 
	`¥ötf
("W3m-ba£-uæ: %s\n", 
	`∑r£dURL2Så
(
buf
->
ba£URL
)->
±r
);

1254 #ifde‡
USE_M17N


1255 
	`¥ötf
("W3m-document-charset: %s\n",

1256 
	`wc_˚s_to_ch¨£t
(
buf
->
documít_ch¨£t
));

1258 #ifde‡
USE_SSL


1259 i‡(
buf
->
s¶_˚πifiˇã
) {

1260 
Så
 
tmp
 = 
	`Så√w
();

1261 *
p
;

1262 
p
 = 
buf
->
s¶_˚πifiˇã
; *p;Ö++) {

1263 
	`Såˇt_ch¨
(
tmp
, *
p
);

1264 i‡(*
p
 == '\n') {

1265 ; *(
p
 + 1) == '\n';Ö++) ;

1266 i‡(*(
p
 + 1))

1267 
	`Såˇt_ch¨
(
tmp
, '\t');

1270 i‡(
	`Såœ°ch¨
(
tmp
) != '\n')

1271 
	`Såˇt_ch¨
(
tmp
, '\n');

1272 
	`¥ötf
("W3m-s¶-˚πifiˇã: %s", 
tmp
->
±r
);

1275 
	}
}

1278 
	$do_dump
(
Buf„r
 *
buf
)

1280 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

1282 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
ötTøp
);

1283 i‡(
	`SETJMP
(
I¡Rëu∫
) != 0) {

1284 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1287 i‡(
w3m_dump
 & 
DUMP_EXTRA
)

1288 
	`dump_exåa
(
buf
);

1289 i‡(
w3m_dump
 & 
DUMP_HEAD
)

1290 
	`dump_hód
(
buf
);

1291 i‡(
w3m_dump
 & 
DUMP_SOURCE
)

1292 
	`dump_sour˚
(
buf
);

1293 i‡(
w3m_dump
 =
DUMP_BUFFER
)

1294 
	`ßveBuf„r
(
buf
, 
°dout
, 
FALSE
);

1295 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1296 
	}
}

1298 
DEFUN
(
nulcmd
, 
NOTHING
 
NULL
 @@@, "DoÇothing")

1302 #ifde‡
__EMX__


1303 
DEFUN
(
pcm≠
, 
PCMAP
, "pcmap")

1305 
	gw3mFuncLi°
[()
PcKeym≠
[()
gëch
()]].
func
();

1309 
	$pcm≠
()

1311 
	}
}

1315 
	$escKeyProc
(
c
, 
esc
, *
m≠
)

1317 i‡(
CuºítKey
 >0 && CuºítKey & 
K_MULTI
) {

1318 **
mm≠
;

1319 
mm≠
 = (**)
	`gëKeyD©a
(
	`MULTI_KEY
(
CuºítKey
));

1320 i‡(!
mm≠
)

1322 
esc
) {

1323 
K_ESCD
:

1324 
m≠
 = 
mm≠
[3];

1326 
K_ESCB
:

1327 
m≠
 = 
mm≠
[2];

1329 
K_ESC
:

1330 
m≠
 = 
mm≠
[1];

1333 
m≠
 = 
mm≠
[0];

1336 
esc
 |(
CuºítKey
 & ~0xFFFF);

1338 
CuºítKey
 = 
esc
 | 
c
;

1339 
w3mFuncLi°
[()
m≠
[
c
]].
	`func
();

1340 
	}
}

1342 
DEFUN
(
escm≠
, 
ESCMAP
, "ESC map")

1344 
	gc
;

1345 
	gc
 = 
gëch
();

1346 i‡(
IS_ASCII
(
c
))

1347 
escKeyProc
(()
c
, 
K_ESC
, 
EscKeym≠
);

1350 
DEFUN
(
escbm≠
, 
ESCBMAP
, "ESC [ map")

1352 
	gc
;

1353 
	gc
 = 
gëch
();

1354 i‡(
IS_DIGIT
(
c
)) {

1355 
escdm≠
(
c
);

1358 i‡(
IS_ASCII
(
c
))

1359 
escKeyProc
(()
c
, 
K_ESCB
, 
EscBKeym≠
);

1363 
	$escdm≠
(
c
)

1365 
d
;

1366 
d
 = ()
c
 - ()'0';

1367 
c
 = 
	`gëch
();

1368 i‡(
	`IS_DIGIT
(
c
)) {

1369 
d
 = d * 10 + ()
c
 - ()'0';

1370 
c
 = 
	`gëch
();

1372 i‡(
c
 == '~')

1373 
	`escKeyProc
(()
d
, 
K_ESCD
, 
EscDKeym≠
);

1374 
	}
}

1376 
DEFUN
(
mu…im≠
, 
MULTIMAP
, "multimap")

1378 
	gc
;

1379 
	gc
 = 
gëch
();

1380 i‡(
IS_ASCII
(
c
)) {

1381 
	gCuºítKey
 = 
K_MULTI
 | (
CuºítKey
 << 16Ë| 
c
;

1382 
escKeyProc
(()
c
, 0, 
NULL
);

1387 
	$tmpCÀ¨Buf„r
(
Buf„r
 *
buf
)

1389 i‡(
buf
->
∑gîSour˚
 =
NULL
 && 
	`wrôeBuf„rCache
(buf) == 0) {

1390 
buf
->
fú°Löe
 = 
NULL
;

1391 
buf
->
t›Löe
 = 
NULL
;

1392 
buf
->
cuºítLöe
 = 
NULL
;

1393 
buf
->
œ°Löe
 = 
NULL
;

1395 
	}
}

1397 
Så
 
cuºítURL
();

1399 #ifde‡
USE_BUFINFO


1401 
	$ßveBuf„rInfo
()

1403 
FILE
 *
Â
;

1405 i‡(
w3m_dump
)

1407 i‡((
Â
 = 
	`f›í
(
	`rcFûe
("buföfo"), "w")Ë=
NULL
) {

1410 
	`Ârötf
(
Â
, "%s\n", 
	`cuºítURL
()->
±r
);

1411 
	`f˛o£
(
Â
);

1412 
	}
}

1416 
	$pushBuf„r
(
Buf„r
 *
buf
)

1418 
Buf„r
 *
b
;

1420 #ifde‡
USE_IMAGE


1421 
	`dñëeImage
(
Cuºítbuf
);

1423 i‡(
˛ór_buf„r
)

1424 
	`tmpCÀ¨Buf„r
(
Cuºítbuf
);

1425 i‡(
Fú°buf
 =
Cuºítbuf
) {

1426 
buf
->
√xtBuf„r
 = 
Fú°buf
;

1427 
Fú°buf
 = 
Cuºítbuf
 = 
buf
;

1429 i‡((
b
 = 
	`¥evBuf„r
(
Fú°buf
, 
Cuºítbuf
)Ë!
NULL
) {

1430 
b
->
√xtBuf„r
 = 
buf
;

1431 
buf
->
√xtBuf„r
 = 
Cuºítbuf
;

1432 
Cuºítbuf
 = 
buf
;

1434 #ifde‡
USE_BUFINFO


1435 
	`ßveBuf„rInfo
();

1438 
	}
}

1441 
	$dñBuf„r
(
Buf„r
 *
buf
)

1443 i‡(
buf
 =
NULL
)

1445 i‡(
Cuºítbuf
 =
buf
)

1446 
Cuºítbuf
 = 
buf
->
√xtBuf„r
;

1447 
Fú°buf
 = 
	`dñëeBuf„r
(Fú°buf, 
buf
);

1448 i‡(!
Cuºítbuf
)

1449 
Cuºítbuf
 = 
Fú°buf
;

1450 
	}
}

1453 
	$ªpBuf„r
(
Buf„r
 *
ﬁdbuf
, Buf„∏*
buf
)

1455 
Fú°buf
 = 
	`ª∂a˚Buf„r
(Fú°buf, 
ﬁdbuf
, 
buf
);

1456 
Cuºítbuf
 = 
buf
;

1457 
	}
}

1460 
MySig«lH™dÀr


1461 
	$ötTøp
(
SIGNAL_ARG
)

1463 
	`LONGJMP
(
I¡Rëu∫
, 0);

1464 
SIGNAL_RETURN
;

1465 
	}
}

1467 #ifde‡
SIGWINCH


1468 
MySig«lH™dÀr


1469 
	$ªsize_hook
(
SIGNAL_ARG
)

1471 
√ed_ªsize_s¸ìn
 = 
TRUE
;

1472 
	`mySig«l
(
SIGWINCH
, 
ªsize_hook
);

1473 
SIGNAL_RETURN
;

1474 
	}
}

1477 
	$ªsize_s¸ìn
()

1479 
√ed_ªsize_s¸ìn
 = 
FALSE
;

1480 
	`£éöescﬁs
();

1481 
	`£tups¸ìn
();

1482 i‡(
CuºítTab
)

1483 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1484 
	}
}

1487 #ifde‡
SIGPIPE


1488 
MySig«lH™dÀr


1489 
	$SigPùe
(
SIGNAL_ARG
)

1491 #ifde‡
USE_MIGEMO


1492 
	`öô_migemo
();

1494 
	`mySig«l
(
SIGPIPE
, 
SigPùe
);

1495 
SIGNAL_RETURN
;

1496 
	}
}

1504 
	$ns¸ﬁl
(
n
, 
mode
)

1506 
Buf„r
 *
buf
 = 
Cuºítbuf
;

1507 
Löe
 *
t›
 = 
buf
->
t›Löe
, *
cur
 = buf->
cuºítLöe
;

1508 
 um
, 
énum
, 
Œnum
, 
diff_n
;

1510 i‡(
buf
->
fú°Löe
 =
NULL
)

1512 
 um
 = 
cur
->
löíumbî
;

1513 
buf
->
t›Löe
 = 
	`löeSkù
(buf, 
t›
, 
n
, 
FALSE
);

1514 i‡(
buf
->
t›Löe
 =
t›
) {

1515 
 um
 +
n
;

1516 i‡(
 um
 < 
buf
->
t›Löe
->
löíumbî
)

1517 
 um
 = 
buf
->
t›Löe
->
löíumbî
;

1518 i‡(
 um
 > 
buf
->
œ°Löe
->
löíumbî
)

1519 
 um
 = 
buf
->
œ°Löe
->
löíumbî
;

1522 
énum
 = 
buf
->
t›Löe
->
löíumbî
;

1523 
Œnum
 = 
buf
->
t›Löe
->
löíumbî
 + buf->
LINES
 - 1;

1524 i‡(
√xçage_t›löe
)

1525 
diff_n
 = 0;

1527 
diff_n
 = 
n
 - (
énum
 - 
t›
->
löíumbî
);

1528 i‡(
 um
 < 
énum
)

1529 
 um
 = 
énum
 + 
diff_n
;

1530 i‡(
 um
 > 
Œnum
)

1531 
 um
 = 
Œnum
 + 
diff_n
;

1533 
	`gŸoLöe
(
buf
, 
 um
);

1534 
	`¨øngeLöe
(
buf
);

1535 i‡(
n
 > 0) {

1536 i‡(
buf
->
cuºítLöe
->
bpos
 &&

1537 
buf
->
cuºítLöe
->
bwidth
 >buf->
cuºítCﬁumn
 + buf->
visuÆpos
)

1538 
	`curs‹Down
(
buf
, 1);

1540 
buf
->
cuºítLöe
->
√xt
 && buf->cuºítLöe->√xt->
bpos
 &&

1541 
buf
->
cuºítLöe
->
bwidth
 + buf->cuºítLöe->
width
 <

1542 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1543 
	`curs‹Down0
(
buf
, 1);

1547 i‡(
buf
->
cuºítLöe
->
bwidth
 + buf->cuºítLöe->
width
 <

1548 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1549 
	`curs‹Up
(
buf
, 1);

1551 
buf
->
cuºítLöe
->
¥ev
 && buf->cuºítLöe->
bpos
 &&

1552 
buf
->
cuºítLöe
->
bwidth
 >=

1553 
buf
->
cuºítCﬁumn
 + buf->
visuÆpos
)

1554 
	`curs‹Up0
(
buf
, 1);

1557 
	`di•œyBuf„r
(
buf
, 
mode
);

1558 
	}
}

1561 
DEFUN
(
pgF‹e
, 
NEXT_PAGE
, "MoveÅoÇextÖage")

1563 i‡(
	gvi_¥ec_num
)

1564 
ns¸ﬁl
(
£¨chKeyNum
(Ë* (
Cuºítbuf
->
LINES
 - 1), 
B_NORMAL
);

1566 
ns¸ﬁl
(
¥ec_num
 ? 
£¨chKeyNum
() : searchKeyNum()

1567 * (
Cuºítbuf
->
LINES
 - 1), 
¥ec_num
 ? 
B_SCROLL
 : 
B_NORMAL
);

1571 
DEFUN
(
pgBack
, 
PREV_PAGE
, "MoveÅoÖreviousÖage")

1573 i‡(
	gvi_¥ec_num
)

1574 
ns¸ﬁl
(-
£¨chKeyNum
(Ë* (
Cuºítbuf
->
LINES
 - 1), 
B_NORMAL
);

1576 
ns¸ﬁl
(-(
¥ec_num
 ? 
£¨chKeyNum
() : searchKeyNum()

1577 * (
Cuºítbuf
->
LINES
 - 1)), 
¥ec_num
 ? 
B_SCROLL
 : 
B_NORMAL
);

1581 
DEFUN
(
lup1
, 
UP
, "Scroll up oneÜine")

1583 
ns¸ﬁl
(
£¨chKeyNum
(), 
B_SCROLL
);

1587 
DEFUN
(
ldown1
, 
DOWN
, "Scroll down oneÜine")

1589 
ns¸ﬁl
(-
£¨chKeyNum
(), 
B_SCROLL
);

1593 
DEFUN
(
˘rC§V
, 
CENTER_V
, "MoveÅoÅhe center column")

1595 
	goff£ty
;

1596 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1598 
	goff£ty
 = 
Cuºítbuf
->
LINES
 / 2 - Cuºítbuf->
curs‹Y
;

1599 i‡(
	goff£ty
 != 0) {

1601 
Cuºítbuf
->
cuºítLöe
 = 
löeSkù
(Currentbuf,

1602 
Cuºítbuf
->
cuºítLöe
, 
off£ty
,

1603 
FALSE
);

1605 
	gCuºítbuf
->
	gt›Löe
 =

1606 
löeSkù
(
Cuºítbuf
, Cuºítbuf->
t›Löe
, -
off£ty
, 
FALSE
);

1607 
¨øngeLöe
(
Cuºítbuf
);

1608 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1612 
DEFUN
(
˘rC§H
, 
CENTER_H
, "MoveÅoÅhe centerÜine")

1614 
	goff£tx
;

1615 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1617 
	goff£tx
 = 
Cuºítbuf
->
curs‹X
 - Cuºítbuf->
COLS
 / 2;

1618 i‡(
	goff£tx
 != 0) {

1619 
cﬁumnSkù
(
Cuºítbuf
, 
off£tx
);

1620 
¨øngeCurs‹
(
Cuºítbuf
);

1621 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1626 
DEFUN
(
rdrwSc
, 
REDRAW
, "Redraw screen")

1628 
˛ór
();

1629 
¨øngeCurs‹
(
Cuºítbuf
);

1630 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1634 
	$˛ór_m¨k
(
Löe
 *
l
)

1636 
pos
;

1637 i‡(!
l
)

1639 
pos
 = 0;Öo†< 
l
->
size
;Öos++)

1640 
l
->
¥›Buf
[
pos
] &~
PE_MARK
;

1641 
	}
}

1645 
§chc‹e
(*vﬁ©ûê
°r
, (*
func
Ë(
Buf„r
 *, *))

1647 
	`MySig«lH™dÀr
(*
¥evå≠
) ();

1648 vﬁ©ûê
i
, 
ªsu…
 = 
SR_NOTFOUND
;

1650 i‡(
°r
 !
NULL
 && så !
SórchSåög
)

1651 
SórchSåög
 = 
°r
;

1652 i‡(
SórchSåög
 =
NULL
 || *SearchString == '\0')

1653  
SR_NOTFOUND
;

1655 
°r
 = 
	`c⁄v_£¨ch_°rög
(
SórchSåög
, 
Di•œyCh¨£t
);

1656 
¥evå≠
 = 
	`mySig«l
(
SIGINT
, 
ötTøp
);

1657 
	`¸mode
();

1658 i‡(
	`SETJMP
(
I¡Rëu∫
) == 0) {

1659 
i
 = 0; i < 
PREC_NUM
; i++) {

1660 
ªsu…
 = 
	`func
(
Cuºítbuf
, 
°r
);

1661 i‡(
i
 < 
PREC_NUM
 - 1 && 
ªsu…
 & 
SR_FOUND
)

1662 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1665 
	`mySig«l
(
SIGINT
, 
¥evå≠
);

1666 
	`ãrm_øw
();

1667  
ªsu…
;

1668 
	}
}

1671 
	$di•_§chªsu…
(
ªsu…
, *
¥om±
, *
°r
)

1673 i‡(
°r
 =
NULL
)

1674 
°r
 = "";

1675 i‡(
ªsu…
 & 
SR_NOTFOUND
)

1676 
	`di•_mesßge
(
	`S¥ötf
("NŸ found: %s", 
°r
)->
±r
, 
TRUE
);

1677 i‡(
ªsu…
 & 
SR_WRAPPED
)

1678 
	`di•_mesßge
(
	`S¥ötf
("Sórch wøµed: %s", 
°r
)->
±r
, 
TRUE
);

1679 i‡(
show_§ch_°r
)

1680 
	`di•_mesßge
(
	`S¥ötf
("%s%s", 
¥om±
, 
°r
)->
±r
, 
TRUE
);

1681 
	}
}

1684 
	$di•öc§ch
(
ch
, 
Så
 
buf
, 
Löïr›
 *
¥›
)

1686 
Buf„r
 
sbuf
;

1687 
Löe
 *
cuºítLöe
;

1688 
pos
;

1689 *
°r
;

1690 
do_√xt_£¨ch
 = 
FALSE
;

1692 i‡(
ch
 =0 && 
buf
 =
NULL
) {

1693 
	`SAVE_BUFPOSITION
(&
sbuf
);

1694 
cuºítLöe
 = 
sbuf
.currentLine;

1695 
pos
 = 
sbuf
.pos;

1699 
°r
 = 
buf
->
±r
;

1700 
ch
) {

1702 
£¨chRoutöe
 = 
backw¨dSórch
;

1703 
do_√xt_£¨ch
 = 
TRUE
;

1706 
£¨chRoutöe
 = 
f‹w¨dSórch
;

1707 
do_√xt_£¨ch
 = 
TRUE
;

1710 #ifde‡
USE_MIGEMO


1712 
migemo_a˘ive
 = -migemo_active;

1713 
d⁄e
;

1717 i‡(
ch
 >= 0)

1718  
ch
;

1721 i‡(
do_√xt_£¨ch
) {

1722 i‡(*
°r
) {

1723 i‡(
£¨chRoutöe
 =
f‹w¨dSórch
)

1724 
Cuºítbuf
->
pos
 += 1;

1725 
	`SAVE_BUFPOSITION
(&
sbuf
);

1726 i‡(
	`§chc‹e
(
°r
, 
£¨chRoutöe
Ë=
SR_NOTFOUND


1727 && 
£¨chRoutöe
 =
f‹w¨dSórch
) {

1728 
Cuºítbuf
->
pos
 -= 1;

1729 
	`SAVE_BUFPOSITION
(&
sbuf
);

1731 
	`¨øngeCurs‹
(
Cuºítbuf
);

1732 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1733 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1739 i‡(*
°r
) {

1740 
	`RESTORE_BUFPOSITION
(&
sbuf
);

1741 
	`¨øngeCurs‹
(
Cuºítbuf
);

1742 
	`§chc‹e
(
°r
, 
£¨chRoutöe
);

1743 
	`¨øngeCurs‹
(
Cuºítbuf
);

1744 
cuºítLöe
 = 
Cuºítbuf
->currentLine;

1745 
pos
 = 
Cuºítbuf
->pos;

1747 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1748 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1749 #ifde‡
USE_MIGEMO


1750 
d⁄e
:

1751 *
°r
++ != '\0') {

1752 i‡(
migemo_a˘ive
 > 0)

1753 *
¥›
++ |
PE_UNDER
;

1755 *
¥›
++ &~
PE_UNDER
;

1759 
	}
}

1762 
i§ch
((*
func
Ë(
Buf„r
 *, *), *
¥om±
)

1764 *
°r
;

1765 
Buf„r
 
sbuf
;

1766 
	`SAVE_BUFPOSITION
(&
sbuf
);

1767 
	`di•öc§ch
(0, 
NULL
, NULL);

1769 
£¨chRoutöe
 = 
func
;

1770 
°r
 = 
	`öputLöeHi°Sórch
(
¥om±
, 
NULL
, 
IN_STRING
, 
TextHi°
, 
di•öc§ch
);

1771 i‡(
°r
 =
NULL
) {

1772 
	`RESTORE_BUFPOSITION
(&
sbuf
);

1774 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1775 
	}
}

1778 
§ch
((*
func
Ë(
Buf„r
 *, *), *
¥om±
)

1780 *
°r
;

1781 
ªsu…
;

1782 
di•
 = 
FALSE
;

1783 
pos
;

1785 
°r
 = 
	`£¨chKeyD©a
();

1786 i‡(
°r
 =
NULL
 || *str == '\0') {

1787 
°r
 = 
	`öputSåHi°
(
¥om±
, 
NULL
, 
TextHi°
);

1788 i‡(
°r
 !
NULL
 && *str == '\0')

1789 
°r
 = 
SórchSåög
;

1790 i‡(
°r
 =
NULL
) {

1791 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1794 
di•
 = 
TRUE
;

1796 
pos
 = 
Cuºítbuf
->pos;

1797 i‡(
func
 =
f‹w¨dSórch
)

1798 
Cuºítbuf
->
pos
 += 1;

1799 
ªsu…
 = 
	`§chc‹e
(
°r
, 
func
);

1800 i‡(
ªsu…
 & 
SR_FOUND
)

1801 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1803 
Cuºítbuf
->
pos
 =Öos;

1804 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1805 i‡(
di•
)

1806 
	`di•_§chªsu…
(
ªsu…
, 
¥om±
, 
°r
);

1807 
£¨chRoutöe
 = 
func
;

1808 
	}
}

1812 
DEFUN
(
§chf‹
, 
SEARCH
 
SEARCH_FORE
 
WHEREIS
, "Search forward")

1814 
§ch
(
f‹w¨dSórch
, "Forward: ");

1817 
DEFUN
(
i§chf‹
, 
ISEARCH
, "Incremental search forward")

1819 
i§ch
(
f‹w¨dSórch
, "I-search: ");

1824 
DEFUN
(
§chbak
, 
SEARCH_BACK
, "Search backward")

1826 
§ch
(
backw¨dSórch
, "Backward: ");

1829 
DEFUN
(
i§chbak
, 
ISEARCH_BACK
, "Incremental search backward")

1831 
i§ch
(
backw¨dSórch
, "I-search backward: ");

1835 
	$§ch_nxçrv
(
ªvî£
)

1837 
ªsu…
;

1839 (*
routöe
[2]Ë(
Buf„r
 *, *) = {

1840 
f‹w¨dSórch
, 
backw¨dSórch


1844 i‡(
£¨chRoutöe
 =
NULL
) {

1846 
	`di•_mesßge
("Nÿ¥eviou†ªguœ∏ex¥essi⁄", 
TRUE
);

1849 i‡(
ªvî£
 != 0)

1850 
ªvî£
 = 1;

1851 i‡(
£¨chRoutöe
 =
backw¨dSórch
)

1852 
ªvî£
 ^= 1;

1853 i‡(
ªvî£
 == 0)

1854 
Cuºítbuf
->
pos
 += 1;

1855 
ªsu…
 = 
	`§chc‹e
(
SórchSåög
, 
routöe
[
ªvî£
]);

1856 i‡(
ªsu…
 & 
SR_FOUND
)

1857 
	`˛ór_m¨k
(
Cuºítbuf
->
cuºítLöe
);

1858 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1859 
	`di•_§chªsu…
(
ªsu…
, (
ªvî£
 ? "Backward: " : "Forward: "),

1860 
SórchSåög
);

1861 
	}
}

1864 
DEFUN
(
§chnxt
, 
SEARCH_NEXT
, "SearchÇextÑegexp")

1866 
§ch_nxçrv
(0);

1870 
DEFUN
(
§ch¥v
, 
SEARCH_PREV
, "SearchÖreviousÑegexp")

1872 
§ch_nxçrv
(1);

1876 
	$shi·visuÆpos
(
Buf„r
 *
buf
, 
shi·
)

1878 
Löe
 *
l
 = 
buf
->
cuºítLöe
;

1879 
buf
->
visuÆpos
 -
shi·
;

1880 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 >buf->
COLS
)

1881 
buf
->
visuÆpos
 = 
l
->
bwidth
 + buf->
COLS
 - 1;

1882 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 < 0)

1883 
buf
->
visuÆpos
 = 
l
->
bwidth
;

1884 
	`¨øngeLöe
(
buf
);

1885 i‡(
buf
->
visuÆpos
 - 
l
->
bwidth
 =-
shi·
 && buf->
curs‹X
 == 0)

1886 
buf
->
visuÆpos
 = 
l
->
bwidth
;

1887 
	}
}

1890 
DEFUN
(
shi·l
, 
SHIFT_LEFT
, "Shift screenÜeft")

1892 
	gcﬁumn
;

1894 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1896 
	gcﬁumn
 = 
Cuºítbuf
->
cuºítCﬁumn
;

1897 
cﬁumnSkù
(
Cuºítbuf
, 
£¨chKeyNum
(Ë* (-Cuºítbuf->
COLS
 + 1) + 1);

1898 
shi·visuÆpos
(
Cuºítbuf
, Cuºítbuf->
cuºítCﬁumn
 - 
cﬁumn
);

1899 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1903 
DEFUN
(
shi·r
, 
SHIFT_RIGHT
, "Shift screenÑight")

1905 
	gcﬁumn
;

1907 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

1909 
	gcﬁumn
 = 
Cuºítbuf
->
cuºítCﬁumn
;

1910 
cﬁumnSkù
(
Cuºítbuf
, 
£¨chKeyNum
(Ë* (Cuºítbuf->
COLS
 - 1) - 1);

1911 
shi·visuÆpos
(
Cuºítbuf
, Cuºítbuf->
cuºítCﬁumn
 - 
cﬁumn
);

1912 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1915 
DEFUN
(
cﬁ1R
, 
RIGHT
, "Shift screen one columnÑight")

1917 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
;

1918 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

1919 
	gj
, 
	gcﬁumn
, 
	gn
 = 
£¨chKeyNum
();

1921 i‡(
	gl
 =
NULL
)

1923 
	gj
 = 0; j < 
	gn
; j++) {

1924 
	gcﬁumn
 = 
buf
->
cuºítCﬁumn
;

1925 
cﬁumnSkù
(
Cuºítbuf
, 1);

1926 i‡(
	gcﬁumn
 =
buf
->
cuºítCﬁumn
)

1928 
shi·visuÆpos
(
Cuºítbuf
, 1);

1930 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1933 
DEFUN
(
cﬁ1L
, 
LEFT
, "Shift screen one column")

1935 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
;

1936 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

1937 
	gj
, 
	gn
 = 
£¨chKeyNum
();

1939 i‡(
	gl
 =
NULL
)

1941 
	gj
 = 0; j < 
	gn
; j++) {

1942 i‡(
	gbuf
->
	gcuºítCﬁumn
 == 0)

1944 
cﬁumnSkù
(
Cuºítbuf
, -1);

1945 
shi·visuÆpos
(
Cuºítbuf
, -1);

1947 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1950 
DEFUN
(
£tEnv
, 
SETENV
, "SetÉnvironment variable")

1952 *
	gív
;

1953 *
	gv¨
, *
	gvÆue
;

1955 
	gCuºítKeyD©a
 = 
NULL
;

1956 
	gív
 = 
£¨chKeyD©a
();

1957 i‡(
	gív
 =
NULL
 || *
ív
 ='\0' || 
°rchr
(env, '=') == NULL) {

1958 i‡(
ív
 !
NULL
 && *env != '\0')

1959 
ív
 = 
S¥ötf
("%s=",Énv)->
	g±r
;

1960 
	gív
 = 
öputSåHi°
("SëÉnvú⁄: ", 
ív
, 
TextHi°
);

1961 i‡(
	gív
 =
NULL
 || *
ív
 == '\0') {

1962 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1966 i‡((
	gvÆue
 = 
°rchr
(
ív
, '=')Ë!
NULL
 && 
vÆue
 >Énv) {

1967 
v¨
 = 
ÆlocSå
(
ív
, 
vÆue
 -Énv);

1968 
	gvÆue
++;

1969 
£t_ívú⁄
(
v¨
, 
vÆue
);

1971 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1974 
DEFUN
(
pùeBuf
, 
PIPE_BUF
, "SendÑendered documentÅoÖipe")

1976 
Buf„r
 *
	gbuf
;

1977 *
	gcmd
, *
	gtmpf
;

1978 
FILE
 *
	gf
;

1980 
	gCuºítKeyD©a
 = 
NULL
;

1981 
	gcmd
 = 
£¨chKeyD©a
();

1982 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

1984 
cmd
 = 
öputLöeHi°
("Pùêbuf„∏to: ", "", 
IN_COMMAND
, 
ShñlHi°
);

1986 i‡(
	gcmd
 !
NULL
)

1987 
cmd
 = 
c⁄v_to_sy°em
(cmd);

1988 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

1989 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

1992 
	gtmpf
 = 
tmp‚ame
(
TMPF_DFL
, 
NULL
)->
	g±r
;

1993 
	gf
 = 
f›í
(
tmpf
, "w");

1994 i‡(
	gf
 =
NULL
) {

1996 
di•_mesßge
(
S¥ötf
("C™'àßvêbuf„∏tÿ%s", 
cmd
)->
±r
, 
TRUE
);

1999 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

2000 
f˛o£
(
f
);

2001 
	gbuf
 = 
gëpùe
(
myExtComm™d
(
cmd
, 
shñl_quŸe
(
tmpf
), 
TRUE
)->
±r
);

2002 i‡(
	gbuf
 =
NULL
) {

2003 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2007 
	gbuf
->
	gfûíame
 = 
cmd
;

2008 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
PIPEBUFFERNAME
,

2009 
c⁄v_‰om_sy°em
(
cmd
))->
	g±r
;

2010 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2011 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2012 
buf
->
ty≥
 = "text/plain";

2013 
	gbuf
->
	gcuºítURL
.
	gfûe
 = "-";

2014 
pushBuf„r
(
buf
);

2016 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2020 
DEFUN
(
pùesh
, 
PIPE_SHELL
, "Execute shell commandánd browse")

2022 
Buf„r
 *
	gbuf
;

2023 *
	gcmd
;

2025 
	gCuºítKeyD©a
 = 
NULL
;

2026 
	gcmd
 = 
£¨chKeyD©a
();

2027 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2028 
cmd
 = 
öputLöeHi°
("‘ód shñl[pùe])!", "", 
IN_COMMAND
, 
ShñlHi°
);

2030 i‡(
	gcmd
 !
NULL
)

2031 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2032 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2033 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2036 
	gbuf
 = 
gëpùe
(
cmd
);

2037 i‡(
	gbuf
 =
NULL
) {

2038 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2042 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2043 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2044 
buf
->
ty≥
 = "text/plain";

2045 
pushBuf„r
(
buf
);

2047 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2051 
DEFUN
(
ªadsh
, 
READ_SHELL
, "Execute shell commandándÜoad")

2053 
Buf„r
 *
	gbuf
;

2054 
MySig«lH™dÀr
(*
¥evå≠
) ();

2055 *
	gcmd
;

2057 
	gCuºítKeyD©a
 = 
NULL
;

2058 
	gcmd
 = 
£¨chKeyD©a
();

2059 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2060 
cmd
 = 
öputLöeHi°
("‘ód shñl)!", "", 
IN_COMMAND
, 
ShñlHi°
);

2062 i‡(
	gcmd
 !
NULL
)

2063 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2064 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2065 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2068 
	g¥evå≠
 = 
mySig«l
(
SIGINT
, 
ötTøp
);

2069 
¸mode
();

2070 
	gbuf
 = 
gëshñl
(
cmd
);

2071 
mySig«l
(
SIGINT
, 
¥evå≠
);

2072 
ãrm_øw
();

2073 i‡(
	gbuf
 =
NULL
) {

2075 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

2079 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

2080 i‡(
	gbuf
->
	gty≥
 =
NULL
)

2081 
buf
->
ty≥
 = "text/plain";

2082 
pushBuf„r
(
buf
);

2084 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2088 
DEFUN
(
execsh
, 
EXEC_SHELL
 
SHELL
, "Execute shell command")

2090 *
	gcmd
;

2092 
	gCuºítKeyD©a
 = 
NULL
;

2093 
	gcmd
 = 
£¨chKeyD©a
();

2094 i‡(
	gcmd
 =
NULL
 || *
cmd
 == '\0') {

2095 
cmd
 = 
öputLöeHi°
("”xe¯shñl)!", "", 
IN_COMMAND
, 
ShñlHi°
);

2097 i‡(
	gcmd
 !
NULL
)

2098 
cmd
 = 
c⁄v_to_sy°em
(cmd);

2099 i‡(
	gcmd
 !
NULL
 && *
cmd
 != '\0') {

2100 
fmTîm
();

2101 
¥ötf
("\n");

2102 
sy°em
(
cmd
);

2104 
¥ötf
("\n[Hitány key]");

2105 
fÊush
(
°dout
);

2106 
fmInô
();

2107 
gëch
();

2109 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2113 
DEFUN
(
ldfûe
, 
LOAD
, "LoadÜocal file")

2115 *
	g‚
;

2117 
	g‚
 = 
£¨chKeyD©a
();

2118 i‡(
	g‚
 =
NULL
 || *
‚
 == '\0') {

2120 
‚
 = 
öputFûíameHi°
("(Lﬂd)Fûíame? ", 
NULL
, 
LﬂdHi°
);

2122 i‡(
	g‚
 !
NULL
)

2123 
‚
 = 
c⁄v_to_sy°em
(fn);

2124 i‡(
	g‚
 =
NULL
 || *
‚
 == '\0') {

2125 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2128 
cmd_lﬂdfûe
(
‚
);

2132 
DEFUN
(
ldhñp
, 
HELP
, "View help")

2134 #ifde‡
USE_HELP_CGI


2135 *
	gœng
;

2136 
	gn
;

2137 
Så
 
	gtmp
;

2139 
	gœng
 = 
Ac˚±L™g
;

2140 
	gn
 = 
°rc•n
(
œng
, ";, \t");

2141 
	gtmp
 = 
S¥ötf
("fûe:///$LIB/" 
HELP_CGI
 
CGI_EXTENSION
 "?version=%s&lang=%s",

2142 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w3m_vîsi⁄
))->
±r
,

2143 
Så_f‹m_quŸe
(
Så√w_ch¨p_n
(
œng
, 
n
))->
±r
);

2144 
cmd_lﬂdURL
(
tmp
->
±r
, 
NULL
, 
NO_REFERER
, NULL);

2146 
cmd_lﬂdURL
(
hñpFûe
(
HELP_FILE
), 
NULL
, 
NO_REFERER
, NULL);

2151 
	$cmd_lﬂdfûe
(*
‚
)

2153 
Buf„r
 *
buf
;

2155 
buf
 = 
	`lﬂdGíîÆFûe
(
	`fûe_to_uæ
(
‚
), 
NULL
, 
NO_REFERER
, 0, NULL);

2156 i‡(
buf
 =
NULL
) {

2158 *
emsg
 = 
	`S¥ötf
("%†nŸ found", 
	`c⁄v_‰om_sy°em
(
‚
))->
±r
;

2159 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

2161 i‡(
buf
 !
NO_BUFFER
) {

2162 
	`pushBuf„r
(
buf
);

2163 i‡(
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

2164 
	`rFøme
();

2166 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2167 
	}
}

2171 
	$_movL
(
n
)

2173 
i
, 
m
 = 
	`£¨chKeyNum
();

2174 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2176 
i
 = 0; i < 
m
; i++)

2177 
	`curs‹Le·
(
Cuºítbuf
, 
n
);

2178 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2179 
	}
}

2181 
DEFUN
(
movL
, 
MOVE_LEFT
,

2184 
_movL
(
Cuºítbuf
->
COLS
 / 2);

2187 
DEFUN
(
movL1
, 
MOVE_LEFT1
, "Move cursorÜeft (1 columns shiftátÅheÜeftÉdge)")

2189 
_movL
(1);

2194 
	$_movD
(
n
)

2196 
i
, 
m
 = 
	`£¨chKeyNum
();

2197 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2199 
i
 = 0; i < 
m
; i++)

2200 
	`curs‹Down
(
Cuºítbuf
, 
n
);

2201 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2202 
	}
}

2204 
DEFUN
(
movD
, 
MOVE_DOWN
,

2207 
_movD
((
Cuºítbuf
->
LINES
 + 1) / 2);

2210 
DEFUN
(
movD1
, 
MOVE_DOWN1
,

2213 
_movD
(1);

2218 
	$_movU
(
n
)

2220 
i
, 
m
 = 
	`£¨chKeyNum
();

2221 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2223 
i
 = 0; i < 
m
; i++)

2224 
	`curs‹Up
(
Cuºítbuf
, 
n
);

2225 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2226 
	}
}

2228 
DEFUN
(
movU
, 
MOVE_UP
,

2231 
_movU
((
Cuºítbuf
->
LINES
 + 1) / 2);

2234 
DEFUN
(
movU1
, 
MOVE_UP1
, "Move cursor up (1Üine scrolátÅheÅop of screen)")

2236 
_movU
(1);

2241 
	$_movR
(
n
)

2243 
i
, 
m
 = 
	`£¨chKeyNum
();

2244 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

2246 
i
 = 0; i < 
m
; i++)

2247 
	`curs‹Right
(
Cuºítbuf
, 
n
);

2248 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2249 
	}
}

2251 
DEFUN
(
movR
, 
MOVE_RIGHT
,

2254 
_movR
(
Cuºítbuf
->
COLS
 / 2);

2257 
DEFUN
(
movR1
, 
MOVE_RIGHT1
,

2260 
_movR
(1);

2268 
	#IS_WORD_CHAR
(
c
,
p
Ë(
	`IS_ALNUM
(cË&& 
	`Ch¨Ty≥
’Ë=
PC_ASCII
)

	)

2271 
	$¥ev_n⁄nuŒ_löe
(
Löe
 *
löe
)

2273 
Löe
 *
l
;

2275 
l
 = 
löe
;Ü !
NULL
 &&Ü->
Àn
 =0;Ü =Ü->
¥ev
) ;

2276 i‡(
l
 =
NULL
 ||Ü->
Àn
 == 0)

2279 
Cuºítbuf
->
cuºítLöe
 = 
l
;

2280 i‡(
l
 !
löe
)

2281 
Cuºítbuf
->
pos
 = Cuºítbuf->
cuºítLöe
->
Àn
;

2283 
	}
}

2285 
DEFUN
(
movLW
, 
PREV_WORD
, "MoveÅoÖrevious word")

2287 *
	glb
;

2288 
Löïr›
 *
	gpb
;

2289 
Löe
 *
	g∂öe
;

2290 
	gµos
;

2291 
	gi
, 
	gn
 = 
£¨chKeyNum
();

2293 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2296 
	gi
 = 0; i < 
	gn
; i++) {

2297 
	g∂öe
 = 
Cuºítbuf
->
cuºítLöe
;

2298 
	gµos
 = 
Cuºítbuf
->
pos
;

2300 i‡(
¥ev_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
) < 0)

2301 
	gíd
;

2304 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2305 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2306 
	gCuºítbuf
->
	gpos
 > 0 &&

2307 !
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
 - 1],

2308 
pb
[
Cuºítbuf
->
pos
 - 1])) {

2309 
	gCuºítbuf
->
	gpos
--;

2311 i‡(
	gCuºítbuf
->
	gpos
 > 0)

2313 i‡(
¥ev_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
->
¥ev
) < 0) {

2314 
	gCuºítbuf
->
	gcuºítLöe
 = 
∂öe
;

2315 
	gCuºítbuf
->
	gpos
 = 
µos
;

2316 
	gíd
;

2318 
	gCuºítbuf
->
	gpos
 = 
Cuºítbuf
->
cuºítLöe
->
Àn
;

2321 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2322 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2323 
	gCuºítbuf
->
	gpos
 > 0 &&

2324 
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
 - 1],

2325 
pb
[
Cuºítbuf
->
pos
 - 1])) {

2326 
	gCuºítbuf
->
	gpos
--;

2329 
	gíd
:

2330 
¨øngeCurs‹
(
Cuºítbuf
);

2331 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2335 
	$√xt_n⁄nuŒ_löe
(
Löe
 *
löe
)

2337 
Löe
 *
l
;

2339 
l
 = 
löe
;Ü !
NULL
 &&Ü->
Àn
 =0;Ü =Ü->
√xt
) ;

2341 i‡(
l
 =
NULL
 ||Ü->
Àn
 == 0)

2344 
Cuºítbuf
->
cuºítLöe
 = 
l
;

2345 i‡(
l
 !
löe
)

2346 
Cuºítbuf
->
pos
 = 0;

2348 
	}
}

2350 
DEFUN
(
movRW
, 
NEXT_WORD
, "MoveÅoÇext word")

2352 *
	glb
;

2353 
Löïr›
 *
	gpb
;

2354 
Löe
 *
	g∂öe
;

2355 
	gµos
;

2356 
	gi
, 
	gn
 = 
£¨chKeyNum
();

2358 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2361 
	gi
 = 0; i < 
	gn
; i++) {

2362 
	g∂öe
 = 
Cuºítbuf
->
cuºítLöe
;

2363 
	gµos
 = 
Cuºítbuf
->
pos
;

2365 i‡(
√xt_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
) < 0)

2366 
	gíd
;

2368 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2369 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2371 
	glb
[
Cuºítbuf
->
pos
] &&

2372 
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
], 
pb
[Currentbuf->pos]))

2373 
	gCuºítbuf
->
	gpos
++;

2376 
	glb
[
Cuºítbuf
->
pos
] &&

2377 !
IS_WORD_CHAR
(
lb
[
Cuºítbuf
->
pos
], 
pb
[Currentbuf->pos]))

2378 
	gCuºítbuf
->
	gpos
++;

2379 i‡(
	glb
[
Cuºítbuf
->
pos
])

2381 i‡(
√xt_n⁄nuŒ_löe
(
Cuºítbuf
->
cuºítLöe
->
√xt
) < 0) {

2382 
	gCuºítbuf
->
	gcuºítLöe
 = 
∂öe
;

2383 
	gCuºítbuf
->
	gpos
 = 
µos
;

2384 
	gíd
;

2386 
	gCuºítbuf
->
	gpos
 = 0;

2387 
	glb
 = 
Cuºítbuf
->
cuºítLöe
->
löeBuf
;

2388 
	gpb
 = 
Cuºítbuf
->
cuºítLöe
->
¥›Buf
;

2391 
	gíd
:

2392 
¨øngeCurs‹
(
Cuºítbuf
);

2393 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2397 
	$_quôfm
(
c⁄fúm
)

2399 *
™s
 = "y";

2401 i‡(
	`checkDow∆ﬂdLi°
())

2403 
™s
 = 
	`öputCh¨
("DownloadÖrocessÑetains. "

2405 i‡(
c⁄fúm
)

2407 
™s
 = 
	`öputCh¨
("Do you wantÅoÉxit w3m? (y/n)");

2408 i‡(!(
™s
 && 
	`TOLOWER
(*ans) == 'y')) {

2409 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2413 
	`ãrm_tôÀ
("");

2414 #ifde‡
USE_IMAGE


2415 i‡(
a˘iveImage
)

2416 
	`ãrmImage
();

2418 
	`fmTîm
();

2419 #ifde‡
USE_COOKIE


2420 
	`ßve_cookõs
();

2422 #ifde‡
USE_HISTORY


2423 i‡(
U£Hi°‹y
 && 
SaveURLHi°
)

2424 
	`ßveHi°‹y
(
URLHi°
, 
URLHi°Size
);

2426 
	`w3m_exô
(0);

2427 
	}
}

2430 
DEFUN
(
quôfm
, 
ABORT
 
EXIT
, "Quit w3m without confirmation")

2432 
_quôfm
(
FALSE
);

2436 
DEFUN
(
qquôfm
, 
QUIT
, "Quit w3m")

2438 
_quôfm
(
c⁄fúm_⁄_quô
);

2442 
DEFUN
(
£lBuf
, 
SELECT
, "GoÅo buffer selectionÖanel")

2444 
Buf„r
 *
	gbuf
;

2445 
	gok
;

2446 
	gcmd
;

2448 
	gok
 = 
FALSE
;

2450 
	gbuf
 = 
£À˘Buf„r
(
Fú°buf
, 
Cuºítbuf
, &
cmd
);

2451 
	gcmd
) {

2453 
ok
 = 
TRUE
;

2457 
Cuºítbuf
 = 
buf
;

2458 
	gok
 = 
TRUE
;

2461 
dñBuf„r
(
buf
);

2462 i‡(
	gFú°buf
 =
NULL
) {

2464 
Fú°buf
 = 
nuŒBuf„r
();

2465 
	gCuºítbuf
 = 
Fú°buf
;

2469 
qquôfm
();

2472 
quôfm
();

2475 } !
	gok
);

2477 
	gbuf
 = 
Fú°buf
; bu‡!
NULL
; bu‡
buf
->
√xtBuf„r
) {

2478 i‡(
buf
 =
Cuºítbuf
)

2480 #ifde‡
USE_IMAGE


2481 
dñëeImage
(
buf
);

2483 i‡(
	g˛ór_buf„r
)

2484 
tmpCÀ¨Buf„r
(
buf
);

2486 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2490 
DEFUN
(
su•
, 
INTERRUPT
 
SUSPEND
, "StopÜoading document")

2492 #i‚de‡
SIGSTOP


2493 *
	gshñl
;

2495 
move
(
LASTLINE
, 0);

2496 
˛π€ﬁx
();

2497 
ª‰esh
();

2498 
fmTîm
();

2499 #i‚de‡
SIGSTOP


2500 
	gshñl
 = 
gëív
("SHELL");

2501 i‡(
	gshñl
 =
NULL
)

2502 
shñl
 = "/bin/sh";

2503 
sy°em
(
shñl
);

2505 
kûl
((
pid_t
Ë0, 
SIGSTOP
);

2507 
fmInô
();

2508 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2513 
	$_goLöe
(*
l
)

2515 i‡(
l
 =
NULL
 || *»='\0' || 
Cuºítbuf
->
cuºítLöe
 == NULL) {

2516 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2519 
Cuºítbuf
->
pos
 = 0;

2520 i‡(((*
l
 ='^'Ë|| (*»='$')Ë&& 
¥ec_num
) {

2521 
	`gŸoRólLöe
(
Cuºítbuf
, 
¥ec_num
);

2523 i‡(*
l
 == '^') {

2524 
Cuºítbuf
->
t›Löe
 = Cuºítbuf->
cuºítLöe
 = Cuºítbuf->
fú°Löe
;

2526 i‡(*
l
 == '$') {

2527 
Cuºítbuf
->
t›Löe
 =

2528 
	`löeSkù
(
Cuºítbuf
, Cuºítbuf->
œ°Löe
,

2529 -(
Cuºítbuf
->
LINES
 + 1Ë/ 2, 
TRUE
);

2530 
Cuºítbuf
->
cuºítLöe
 = Cuºítbuf->
œ°Löe
;

2533 
	`gŸoRólLöe
(
Cuºítbuf
, 
	`©oi
(
l
));

2534 
	`¨øngeCurs‹
(
Cuºítbuf
);

2535 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2536 
	}
}

2538 
DEFUN
(
goLöe
, 
GOTO_LINE
, "GoÅo specifiedÜine")

2541 *
	g°r
 = 
£¨chKeyD©a
();

2542 i‡(
	g¥ec_num
)

2543 
_goLöe
("^");

2544 i‡(
	g°r
)

2545 
_goLöe
(
°r
);

2548 
_goLöe
(
öputSå
("GotoÜine: ", ""));

2552 
DEFUN
(
goLöeF
, 
BEGIN
, "GoÅoÅhe firstÜine")

2554 
_goLöe
("^");

2557 
DEFUN
(
goLöeL
, 
END
, "GoÅoÅheÜastÜine")

2559 
_goLöe
("$");

2563 
DEFUN
(
löbeg
, 
LINE_BEGIN
, "GoÅoÅhe beginning ofÜine")

2565 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2567 
	gCuºítbuf
->
	gcuºítLöe
->
	g¥ev
 && Cuºítbuf->cuºítLöe->
	gbpos
)

2568 
curs‹Up0
(
Cuºítbuf
, 1);

2569 
	gCuºítbuf
->
	gpos
 = 0;

2570 
¨øngeCurs‹
(
Cuºítbuf
);

2571 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2575 
DEFUN
(
löíd
, 
LINE_END
, "GoÅoÅheÉnd ofÜine")

2577 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2579 
	gCuºítbuf
->
	gcuºítLöe
->
	g√xt


2580 && 
	gCuºítbuf
->
	gcuºítLöe
->
	g√xt
->
	gbpos
)

2581 
curs‹Down0
(
Cuºítbuf
, 1);

2582 
	gCuºítbuf
->
	gpos
 = 
Cuºítbuf
->
cuºítLöe
->
Àn
 - 1;

2583 
¨øngeCurs‹
(
Cuºítbuf
);

2584 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2588 
	$cur_ªÆ_löíumbî
(
Buf„r
 *
buf
)

2590 
Löe
 *
l
, *
cur
 = 
buf
->
cuºítLöe
;

2591 
n
;

2593 i‡(!
cur
)

2595 
n
 = 
cur
->
ªÆ_löíumbî
 ? cur->real_linenumber : 1;

2596 
l
 = 
buf
->
fú°Löe
;Ü &&Ü !
cur
 &&Ü->
ªÆ_löíumbî
 =0;Ü =Ü->
√xt
) {

2597 i‡(
l
->
bpos
 == 0)

2598 
n
++;

2600  
n
;

2601 
	}
}

2604 
DEFUN
(
edôBf
, 
EDIT
, "Edit current document")

2606 *
	g‚
 = 
Cuºítbuf
->
fûíame
;

2607 
Så
 
	gcmd
;

2609 i‡(
	g‚
 =
NULL
 || 
Cuºítbuf
->
∑gîSour˚
 != NULL ||

2610 (
Cuºítbuf
->
ty≥
 =
NULL
 && Cuºítbuf->
edô
 == NULL) ||

2611 
Cuºítbuf
->
ªÆ_scheme
 !
SCM_LOCAL
 || !
°rcmp
(Cuºítbuf->
cuºítURL
.
fûe
, "-") ||

2612 
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_FRAME
) {

2613 
di•_îr_mesßge
("C™'àedô othîÅh™Üoˇ»fûe", 
TRUE
);

2616 i‡(
	gCuºítbuf
->
	gedô
)

2617 
	gcmd
 = 
unquŸe_maûˇp
(
Cuºítbuf
->
edô
, Cuºítbuf->
ªÆ_ty≥
, 
‚
,

2618 
checkHódî
(
Cuºítbuf
, "C⁄ã¡-Ty≥:"), 
NULL
);

2620 
	gcmd
 = 
myEdô‹
(
Edô‹
, 
shñl_quŸe
(
‚
),

2621 
cur_ªÆ_löíumbî
(
Cuºítbuf
));

2622 
fmTîm
();

2623 
sy°em
(
cmd
->
±r
);

2624 
fmInô
();

2626 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2627 
ªlﬂd
();

2631 
DEFUN
(
edôS¸
, 
EDIT_SCREEN
, "Edit currentlyÑendered document")

2633 *
	gtmpf
;

2634 
FILE
 *
	gf
;

2636 
	gtmpf
 = 
tmp‚ame
(
TMPF_DFL
, 
NULL
)->
	g±r
;

2637 
	gf
 = 
f›í
(
tmpf
, "w");

2638 i‡(
	gf
 =
NULL
) {

2640 
di•_îr_mesßge
(
S¥ötf
("C™'à›í %s", 
tmpf
)->
±r
, 
TRUE
);

2643 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

2644 
f˛o£
(
f
);

2645 
fmTîm
();

2646 
sy°em
(
myEdô‹
(
Edô‹
, 
shñl_quŸe
(
tmpf
),

2647 
cur_ªÆ_löíumbî
(
Cuºítbuf
))->
±r
);

2648 
fmInô
();

2649 
u∆ök
(
tmpf
);

2650 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2653 #ifde‡
USE_MARK


2656 
DEFUN
(
_m¨k
, 
MARK
, "Set/unset mark")

2658 
Löe
 *
	gl
;

2659 i‡(!
	gu£_m¨k
)

2661 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2663 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2664 
	gl
->
	g¥›Buf
[
Cuºítbuf
->
pos
] ^
PE_MARK
;

2665 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2669 
DEFUN
(
√xtMk
, 
NEXT_MARK
, "MoveÅoÇext word")

2671 
Löe
 *
	gl
;

2672 
	gi
;

2674 i‡(!
	gu£_m¨k
)

2676 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2678 
	gi
 = 
Cuºítbuf
->
pos
 + 1;

2679 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2680 i‡(
	gi
 >
l
->
Àn
) {

2681 
i
 = 0;

2682 
	gl
 = 
l
->
√xt
;

2684 
	gl
 !
NULL
) {

2685 ; 
	gi
 < 
	gl
->
	gÀn
; i++) {

2686 i‡(
	gl
->
	g¥›Buf
[
i
] & 
	gPE_MARK
) {

2687 
	gCuºítbuf
->
	gcuºítLöe
 = 
l
;

2688 
	gCuºítbuf
->
	gpos
 = 
i
;

2689 
¨øngeCurs‹
(
Cuºítbuf
);

2690 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2694 
	gl
 = 
l
->
√xt
;

2695 
	gi
 = 0;

2698 
di•_mesßge
("Nÿm¨kÉxi°á·î hîe", 
TRUE
);

2702 
DEFUN
(
¥evMk
, 
PREV_MARK
, "MoveÅoÖrevious mark")

2704 
Löe
 *
	gl
;

2705 
	gi
;

2707 i‡(!
	gu£_m¨k
)

2709 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2711 
	gi
 = 
Cuºítbuf
->
pos
 - 1;

2712 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2713 i‡(
	gi
 < 0) {

2714 
	gl
 = 
l
->
¥ev
;

2715 i‡(
	gl
 !
NULL
)

2716 
i
 = 
l
->
Àn
 - 1;

2718 
	gl
 !
NULL
) {

2719 ; 
	gi
 >= 0; i--) {

2720 i‡(
	gl
->
	g¥›Buf
[
i
] & 
	gPE_MARK
) {

2721 
	gCuºítbuf
->
	gcuºítLöe
 = 
l
;

2722 
	gCuºítbuf
->
	gpos
 = 
i
;

2723 
¨øngeCurs‹
(
Cuºítbuf
);

2724 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2728 
	gl
 = 
l
->
¥ev
;

2729 i‡(
	gl
 !
NULL
)

2730 
i
 = 
l
->
Àn
 - 1;

2733 
di•_mesßge
("Nÿm¨kÉxi° bef‹êhîe", 
TRUE
);

2737 
DEFUN
(
ªM¨k
, 
REG_MARK
, "Set mark usingÑegexp")

2739 
Löe
 *
	gl
;

2740 *
	g°r
;

2741 *
	gp
, *
	gp1
, *
	gp2
;

2743 i‡(!
	gu£_m¨k
)

2745 
	g°r
 = 
£¨chKeyD©a
();

2746 i‡(
	g°r
 =
NULL
 || *
°r
 == '\0') {

2747 
°r
 = 
öputSåHi°
("(M¨k)Regexp: ", 
M¨kSåög
, 
TextHi°
);

2748 i‡(
	g°r
 =
NULL
 || *
°r
 == '\0') {

2749 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2753 
	g°r
 = 
c⁄v_£¨ch_°rög
(
°r
, 
Di•œyCh¨£t
);

2754 i‡((
	g°r
 = 
ªgexCompûe
(
°r
, 1)Ë!
NULL
) {

2755 
di•_mesßge
(
°r
, 
TRUE
);

2758 
	gM¨kSåög
 = 
°r
;

2759 
	gl
 = 
Cuºítbuf
->
fú°Löe
;Ü !
NULL
;Ü = 
l
->
√xt
) {

2760 
p
 = 
l
->
löeBuf
;

2762 i‡(
ªgexM©ch
(
p
, &
l
->
löeBuf
[l->
Àn
] -Ö,Ö ==Ü->lineBuf) == 1) {

2763 
m©chedPosôi⁄
(&
p1
, &
p2
);

2764 
	gl
->
	g¥›Buf
[
p1
 - 
l
->
löeBuf
] |
PE_MARK
;

2765 
	gp
 = 
p2
;

2772 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2776 
Buf„r
 *

2777 
	$lﬂdN‹mÆBuf
(
Buf„r
 *
buf
, 
ªndî‰ame
)

2779 
	`pushBuf„r
(
buf
);

2780 i‡(
ªndî‰ame
 && 
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

2781 
	`rFøme
();

2782  
buf
;

2783 
	}
}

2785 
Buf„r
 *

2786 
	$lﬂdLök
(*
uæ
, *
èrgë
, *
ª„ªr
, 
F‹mLi°
 *
ªque°
)

2788 
Buf„r
 *
buf
, *
nfbuf
;

2789 
‰ame£t_ñemít
 *
f_ñemít
 = 
NULL
;

2790 
Êag
 = 0;

2791 
P¨£dURL
 *
ba£
, 
pu
;

2793 
	`mesßge
(
	`S¥ötf
("lﬂdög %s", 
uæ
)->
±r
, 0, 0);

2794 
	`ª‰esh
();

2796 
ba£
 = 
	`ba£URL
(
Cuºítbuf
);

2797 i‡(
ba£
 =
NULL
 ||

2798 
ba£
->
scheme
 =
SCM_LOCAL
 || ba£->schemê=
SCM_LOCAL_CGI
)

2799 
ª„ªr
 = 
NO_REFERER
;

2800 i‡(
ª„ªr
 =
NULL
)

2801 
ª„ªr
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
;

2802 
buf
 = 
	`lﬂdGíîÆFûe
(
uæ
, 
	`ba£URL
(
Cuºítbuf
), 
ª„ªr
, 
Êag
, 
ªque°
);

2803 i‡(
buf
 =
NULL
) {

2804 *
emsg
 = 
	`S¥ötf
("C™'àlﬂd %s", 
uæ
)->
±r
;

2805 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

2806  
NULL
;

2809 
	`∑r£URL2
(
uæ
, &
pu
, 
ba£
);

2810 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
pu
)->
±r
);

2812 i‡(
buf
 =
NO_BUFFER
) {

2813  
NULL
;

2815 i‡(!
⁄_èrgë
)

2816  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2818 i‡(
do_dow∆ﬂd
)

2819  
	`lﬂdN‹mÆBuf
(
buf
, 
FALSE
);

2821 i‡(
èrgë
 =
NULL
 ||

2822 !
	`°rcmp
(
èrgë
, "_top") ||

2823 !(
Cuºítbuf
->
buf„Ωr›
 & 
BP_FRAME
)

2825  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2827 
nfbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
];

2828 i‡(
nfbuf
 =
NULL
) {

2830  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2833 
f_ñemít
 = 
	`£¨ch_‰ame
(
nfbuf
->
‰ame£t
, 
èrgë
);

2834 i‡(
f_ñemít
 =
NULL
) {

2836  
	`lﬂdN‹mÆBuf
(
buf
, 
TRUE
);

2842 
	`pushFømeTªe
(&(
nfbuf
->
‰ameQ
), 
	`c›yFømeSë
“fbuf->
‰ame£t
), 
Cuºítbuf
);

2844 
	`dñBuf„r
(
Cuºítbuf
);

2845 
Cuºítbuf
 = 
nfbuf
;

2847 
	`ª£tFømeEÀmít
(
f_ñemít
, 
buf
, 
ª„ªr
, 
ªque°
);

2848 
	`disˇrdBuf„r
(
buf
);

2849 
	`rFøme
();

2851 
Anch‹
 *
Æ
 = 
NULL
;

2852 *
œbñ
 = 
pu
.label;

2854 i‡(
œbñ
 && 
f_ñemít
->
ñemít
->
©å
 =
F_BODY
) {

2855 
Æ
 = 
	`£¨chAnch‹
(
f_ñemít
->
body
->
«meLi°
, 
œbñ
);

2857 i‡(!
Æ
) {

2858 
œbñ
 = 
	`Så√w_m_ch¨p
("_", 
èrgë
, 
NULL
)->
±r
;

2859 
Æ
 = 
	`£¨chURLLabñ
(
Cuºítbuf
, 
œbñ
);

2861 i‡(
Æ
) {

2862 
	`gŸoLöe
(
Cuºítbuf
, 
Æ
->
°¨t
.
löe
);

2863 i‡(
œbñ_t›löe
)

2864 
Cuºítbuf
->
t›Löe
 = 
	`löeSkù
(Currentbuf, Currentbuf->topLine,

2865 
Cuºítbuf
->
cuºítLöe
->

2866 
löíumbî
 -

2867 
Cuºítbuf
->
t›Löe
->
löíumbî
,

2868 
FALSE
);

2869 
Cuºítbuf
->
pos
 = 
Æ
->
°¨t
.pos;

2870 
	`¨øngeCurs‹
(
Cuºítbuf
);

2873 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

2874  
buf
;

2875 
	}
}

2878 
	$gŸoLabñ
(*
œbñ
)

2880 
Buf„r
 *
buf
;

2881 
Anch‹
 *
Æ
;

2882 
i
;

2884 
Æ
 = 
	`£¨chURLLabñ
(
Cuºítbuf
, 
œbñ
);

2885 i‡(
Æ
 =
NULL
) {

2887 
	`di•_mesßge
(
	`S¥ötf
("%†i†nŸ found", 
œbñ
)->
±r
, 
TRUE
);

2890 
buf
 = 
	`√wBuf„r
(
Cuºítbuf
->
width
);

2891 
	`c›yBuf„r
(
buf
, 
Cuºítbuf
);

2892 
i
 = 0; i < 
MAX_LB
; i++)

2893 
buf
->
lökBuf„r
[
i
] = 
NULL
;

2894 
buf
->
cuºítURL
.
œbñ
 = 
	`ÆlocSå
(label, -1);

2895 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

2896 (*
buf
->
˛⁄e
)++;

2897 
	`pushBuf„r
(
buf
);

2898 
	`gŸoLöe
(
Cuºítbuf
, 
Æ
->
°¨t
.
löe
);

2899 i‡(
œbñ_t›löe
)

2900 
Cuºítbuf
->
t›Löe
 = 
	`löeSkù
(Currentbuf, Currentbuf->topLine,

2901 
Cuºítbuf
->
cuºítLöe
->
löíumbî


2902 - 
Cuºítbuf
->
t›Löe
->
löíumbî
,

2903 
FALSE
);

2904 
Cuºítbuf
->
pos
 = 
Æ
->
°¨t
.pos;

2905 
	`¨øngeCurs‹
(
Cuºítbuf
);

2906 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2908 
	}
}

2911 
DEFUN
(
fﬁlowA
, 
GOTO_LINK
, "GoÅo currentÜink")

2913 
Löe
 *
	gl
;

2914 
Anch‹
 *
	ga
;

2915 
P¨£dURL
 
	gu
;

2916 #ifde‡
USE_IMAGE


2917 
	gx
 = 0, 
	gy
 = 0, 
	gm≠
 = 0;

2919 *
	guæ
;

2921 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

2923 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

2925 #ifde‡
USE_IMAGE


2926 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

2927 i‡(
	ga
 &&á->
	gimage
 &&á->image->
	gm≠
) {

2928 
_fﬁlowF‹m
(
FALSE
);

2931 i‡(
	ga
 &&á->
	gimage
 &&á->image->
	gism≠
) {

2932 
gëM≠XY
(
Cuºítbuf
, 
a
, &
x
, &
y
);

2933 
	gm≠
 = 1;

2936 
	ga
 = 
ªåõveCuºítM≠
(
Cuºítbuf
);

2937 i‡(
	ga
) {

2938 
_fﬁlowF‹m
(
FALSE
);

2942 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

2943 i‡(
	ga
 =
NULL
) {

2944 
_fﬁlowF‹m
(
FALSE
);

2947 i‡(*
	ga
->
	guæ
 == '#') {

2948 
gŸoLabñ
(
a
->
uæ
 + 1);

2951 
∑r£URL2
(
a
->
uæ
, &
u
, 
ba£URL
(
Cuºítbuf
));

2952 i‡(
Såcmp
(
∑r£dURL2Så
(&
u
),Ö¨£dURL2Så(&
Cuºítbuf
->
cuºítURL
)) == 0) {

2954 i‡(
u
.
œbñ
) {

2955 
gŸoLabñ
(
u
.
œbñ
);

2959 i‡(!
°∫ˇ£cmp
(
a
->
uæ
, "mailto:", 7)

2960 #ifde‡
USE_W3MMAILER


2961 && 
n⁄_nuŒ
(
Maûî
Ë&& 
°rchr
(
a
->
uæ
, '?'Ë=
NULL


2965 
Så
 
to
 = 
Så√w_ch¨p
(
a
->
uæ
 + 7);

2966 #i‚de‡
USE_W3MMAILER


2967 *
	gpos
;

2968 i‡(!
n⁄_nuŒ
(
Maûî
)) {

2970 
di•_îr_mesßge
("nÿmaûî i†•ecifõd", 
TRUE
);

2973 i‡((
	gpos
 = 
°rchr
(
to
->
±r
, '?')Ë!
NULL
)

2974 
Sååunˇã
(
to
, 
pos
 -Åo->
±r
);

2976 
fmTîm
();

2977 
sy°em
(
myExtComm™d
(
Maûî
, 
shñl_quŸe
(
fûe_unquŸe
(
to
->
±r
)),

2978 
FALSE
)->
±r
);

2979 
fmInô
();

2980 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

2981 
pushHashHi°
(
URLHi°
, 
a
->
uæ
);

2985 i‡(!
°∫ˇ£cmp
(
a
->
uæ
, "√ws:", 5Ë&& 
°rchr
◊->uæ, '@'Ë=
NULL
) {

2988 
di•_îr_mesßge
("√ws:√wsgroup_«mêi†nŸ suµ‹ãd", 
TRUE
);

2992 
	guæ
 = 
a
->
uæ
;

2993 #ifde‡
USE_IMAGE


2994 i‡(
	gm≠
)

2995 
	guæ
 = 
S¥ötf
("%s?%d,%d", 
a
->
uæ
, 
x
, 
y
)->
	g±r
;

2998 i‡(
	gcheck_èrgë
 && 
	g›í_èb_bœnk
 && 
	ga
->
	gèrgë
 &&

2999 (!
°rˇ£cmp
(
a
->
èrgë
, "_new") || !strcasecmp(a->target, "_blank"))) {

3000 
Buf„r
 *
	gbuf
;

3002 
_√wT
();

3003 
	gbuf
 = 
Cuºítbuf
;

3004 
lﬂdLök
(
uæ
, 
a
->
èrgë
,á->
ª„ªr
, 
NULL
);

3005 i‡(
	gbuf
 !
Cuºítbuf
)

3006 
dñBuf„r
(
buf
);

3008 
dñëeTab
(
CuºítTab
);

3009 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3012 
lﬂdLök
(
uæ
, 
a
->
èrgë
,á->
ª„ªr
, 
NULL
);

3013 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3018 
	$buf„rA
()

3020 
⁄_èrgë
 = 
FALSE
;

3021 
	`fﬁlowA
();

3022 
⁄_èrgë
 = 
TRUE
;

3023 
	}
}

3026 
DEFUN
(
fﬁlowI
, 
VIEW_IMAGE
, "View image")

3028 
Löe
 *
	gl
;

3029 
Anch‹
 *
	ga
;

3030 
Buf„r
 *
	gbuf
;

3032 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3034 
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

3036 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

3037 i‡(
	ga
 =
NULL
)

3040 
mesßge
(
S¥ötf
("lﬂdög %s", 
a
->
uæ
)->
±r
, 0, 0);

3041 
ª‰esh
();

3042 
	gbuf
 = 
lﬂdGíîÆFûe
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
), 
NULL
, 0, NULL);

3043 i‡(
	gbuf
 =
NULL
) {

3045 *
emsg
 = 
S¥ötf
("C™'àlﬂd %s", 
a
->
uæ
)->
	g±r
;

3046 
di•_îr_mesßge
(
emsg
, 
FALSE
);

3048 i‡(
	gbuf
 !
NO_BUFFER
) {

3049 
pushBuf„r
(
buf
);

3051 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3054 
F‹mIãmLi°
 *

3055 
	$ßve_submô_f‹mli°
(
F‹mIãmLi°
 *
§c
)

3057 
F‹mLi°
 *
li°
;

3058 
F‹mLi°
 *
§˛i°
;

3059 
F‹mIãmLi°
 *
§côem
;

3060 
F‹mIãmLi°
 *
ôem
;

3061 
F‹mIãmLi°
 *
ªt
 = 
NULL
;

3062 #ifde‡
MENU_SELECT


3063 
F‹mSñe˘O±i⁄Iãm
 *
›t
;

3064 
F‹mSñe˘O±i⁄Iãm
 *
cur›t
;

3065 
F‹mSñe˘O±i⁄Iãm
 *
§c›t
;

3068 i‡(
§c
 =
NULL
)

3069  
NULL
;

3070 
§˛i°
 = 
§c
->
∑ª¡
;

3071 
li°
 = 
	`New
(
F‹mLi°
);

3072 
li°
->
mëhod
 = 
§˛i°
->method;

3073 
li°
->
a˘i⁄
 = 
	`Sådup
(
§˛i°
->action);

3074 #ifde‡
USE_M17N


3075 
li°
->
ch¨£t
 = 
§˛i°
->charset;

3077 
li°
->
í˘y≥
 = 
§˛i°
->enctype;

3078 
li°
->
nôems
 = 
§˛i°
->nitems;

3079 
li°
->
body
 = 
§˛i°
->body;

3080 
li°
->
bound¨y
 = 
§˛i°
->boundary;

3081 
li°
->
Àngth
 = 
§˛i°
->length;

3083 
§côem
 = 
§˛i°
->
ôem
; srcôem; srcôem = srcôem->
√xt
) {

3084 
ôem
 = 
	`New
(
F‹mIãmLi°
);

3085 
ôem
->
ty≥
 = 
§côem
->type;

3086 
ôem
->
«me
 = 
	`Sådup
(
§côem
->name);

3087 
ôem
->
vÆue
 = 
	`Sådup
(
§côem
->value);

3088 
ôem
->
checked
 = 
§côem
->checked;

3089 
ôem
->
ac˚±
 = 
§côem
->accept;

3090 
ôem
->
size
 = 
§côem
->size;

3091 
ôem
->
rows
 = 
§côem
->rows;

3092 
ôem
->
maxÀngth
 = 
§côem
->maxlength;

3093 
ôem
->
ªad⁄ly
 = 
§côem
->readonly;

3094 #ifde‡
MENU_SELECT


3095 
›t
 = 
cur›t
 = 
NULL
;

3096 
§c›t
 = 
§côem
->
£À˘_›ti⁄
; src›t; src›à§c›t->
√xt
) {

3097 i‡(!
§c›t
->
checked
)

3099 
›t
 = 
	`New
(
F‹mSñe˘O±i⁄Iãm
);

3100 
›t
->
vÆue
 = 
	`Sådup
(
§c›t
->value);

3101 
›t
->
œbñ
 = 
	`Sådup
(
§c›t
->label);

3102 
›t
->
checked
 = 
§c›t
->checked;

3103 i‡(
ôem
->
£À˘_›ti⁄
 =
NULL
) {

3104 
ôem
->
£À˘_›ti⁄
 = 
cur›t
 = 
›t
;

3107 
cur›t
->
√xt
 = 
›t
;

3108 
cur›t
 = cur›t->
√xt
;

3111 
ôem
->
£À˘_›ti⁄
 = 
›t
;

3112 i‡(
§côem
->
œbñ
)

3113 
ôem
->
œbñ
 = 
	`Sådup
(
§côem
->label);

3115 
ôem
->
∑ª¡
 = 
li°
;

3116 
ôem
->
√xt
 = 
NULL
;

3118 i‡(
li°
->
œ°ôem
 =
NULL
) {

3119 
li°
->
ôem
 =Üi°->
œ°ôem
 = item;

3122 
li°
->
œ°ôem
->
√xt
 = 
ôem
;

3123 
li°
->
œ°ôem
 = 
ôem
;

3126 i‡(
§côem
 =
§c
)

3127 
ªt
 = 
ôem
;

3130  
ªt
;

3131 
	}
}

3133 #ifde‡
USE_M17N


3134 
Så


3135 
	$c⁄v_f‹m_ícodög
(
Så
 
vÆ
, 
F‹mIãmLi°
 *
fi
, 
Buf„r
 *
buf
)

3137 
wc_˚s
 
ch¨£t
 = 
Sy°emCh¨£t
;

3139 i‡(
fi
->
∑ª¡
->
ch¨£t
)

3140 
ch¨£t
 = 
fi
->
∑ª¡
->charset;

3141 i‡(
buf
->
documít_ch¨£t
 && buf->documít_ch¨£à!
WC_CES_US_ASCII
)

3142 
ch¨£t
 = 
buf
->
documít_ch¨£t
;

3143  
	`wc_Så_c⁄v_°ri˘
(
vÆ
, 
I¬îCh¨£t
, 
ch¨£t
);

3144 
	}
}

3146 
	#c⁄v_f‹m_ícodög
(
vÆ
, 
fi
, 
buf
Ë(vÆ)

	)

3150 
	$quîy_‰om_fﬁlowf‹m
(
Så
 *
quîy
, 
F‹mIãmLi°
 *
fi
, 
mu…ù¨t
)

3152 
F‹mIãmLi°
 *
f2
;

3153 
FILE
 *
body
 = 
NULL
;

3155 i‡(
mu…ù¨t
) {

3156 *
quîy
 = 
	`tmp‚ame
(
TMPF_DFL
, 
NULL
);

3157 
body
 = 
	`f›í
((*
quîy
)->
±r
, "w");

3158 i‡(
body
 =
NULL
) {

3161 
fi
->
∑ª¡
->
body
 = (*
quîy
)->
±r
;

3162 
fi
->
∑ª¡
->
bound¨y
 =

3163 
	`S¥ötf
("------------------------------%d%ld%ld%ld", 
CuºítPid
,

3164 
fi
->
∑ª¡
, fi->∑ª¡->
body
, fi->∑ª¡->
bound¨y
)->
±r
;

3166 *
quîy
 = 
	`Så√w
();

3167 
f2
 = 
fi
->
∑ª¡
->
ôem
; f2; f2 = f2->
√xt
) {

3168 i‡(
f2
->
«me
 =
NULL
)

3171 i‡(
f2
->
«me
->
Àngth
 == 0 &&

3172 (
mu…ù¨t
 || 
f2
->
ty≥
 !
FORM_INPUT_TEXT
))

3174 
f2
->
ty≥
) {

3175 
FORM_INPUT_RESET
:

3178 
FORM_INPUT_SUBMIT
:

3179 
FORM_INPUT_IMAGE
:

3180 i‡(
f2
 !
fi
 || f2->
vÆue
 =
NULL
)

3183 
FORM_INPUT_RADIO
:

3184 
FORM_INPUT_CHECKBOX
:

3185 i‡(!
f2
->
checked
)

3188 i‡(
mu…ù¨t
) {

3189 i‡(
f2
->
ty≥
 =
FORM_INPUT_IMAGE
) {

3190 
x
 = 0, 
y
 = 0;

3191 #ifde‡
USE_IMAGE


3192 
	`gëM≠XY
(
Cuºítbuf
, 
	`ªåõveCuºítImg
(Cuºítbuf), &
x
, &
y
);

3194 *
quîy
 = 
	`Sådup
(
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
, 
Cuºítbuf
));

3195 
	`Såˇt_ch¨p
(*
quîy
, ".x");

3196 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
, (*
quîy
)->
±r
,

3197 
	`S¥ötf
("%d", 
x
)->
±r
);

3198 *
quîy
 = 
	`Sådup
(
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
, 
Cuºítbuf
));

3199 
	`Såˇt_ch¨p
(*
quîy
, ".y");

3200 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
, (*
quîy
)->
±r
,

3201 
	`S¥ötf
("%d", 
y
)->
±r
);

3203 i‡(
f2
->
«me
 && f2->«me->
Àngth
 > 0 && f2->
vÆue
 !
NULL
) {

3205 *
quîy
 = 
	`c⁄v_f‹m_ícodög
(
f2
->
vÆue
, 
fi
, 
Cuºítbuf
);

3206 i‡(
f2
->
ty≥
 =
FORM_INPUT_FILE
)

3207 
	`f‹m_wrôe_‰om_fûe
(
body
, 
fi
->
∑ª¡
->
bound¨y
,

3208 
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
,

3209 
Cuºítbuf
)->
±r
,

3210 (*
quîy
)->
±r
,

3211 
	`Så_c⁄v_to_sy°em
(
f2
->
vÆue
)->
±r
);

3213 
	`f‹m_wrôe_d©a
(
body
, 
fi
->
∑ª¡
->
bound¨y
,

3214 
	`c⁄v_f‹m_ícodög
(
f2
->
«me
, 
fi
,

3215 
Cuºítbuf
)->
±r
,

3216 (*
quîy
)->
±r
);

3221 i‡(
f2
->
ty≥
 =
FORM_INPUT_IMAGE
) {

3222 
x
 = 0, 
y
 = 0;

3223 #ifde‡
USE_IMAGE


3224 
	`gëM≠XY
(
Cuºítbuf
, 
	`ªåõveCuºítImg
(Cuºítbuf), &
x
, &
y
);

3226 
	`Såˇt
(*
quîy
,

3227 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3228 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3229 
	`Såˇt
(*
quîy
, 
	`S¥ötf
(".x=%d&", 
x
));

3230 
	`Såˇt
(*
quîy
,

3231 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3232 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3233 
	`Såˇt
(*
quîy
, 
	`S¥ötf
(".y=%d", 
y
));

3237 i‡(
f2
->
«me
 && f2->«me->
Àngth
 > 0) {

3238 
	`Såˇt
(*
quîy
,

3239 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3240 (
f2
->
«me
, 
fi
, 
Cuºítbuf
)));

3241 
	`Såˇt_ch¨
(*
quîy
, '=');

3243 i‡(
f2
->
vÆue
 !
NULL
) {

3244 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
)

3245 
	`Såˇt
(*
quîy
, 
	`Så_f‹m_quŸe
(
f2
->
vÆue
));

3247 
	`Såˇt
(*
quîy
,

3248 
	`Så_f‹m_quŸe
(
c⁄v_f‹m_ícodög


3249 (
f2
->
vÆue
, 
fi
, 
Cuºítbuf
)));

3253 i‡(
f2
->
√xt
)

3254 
	`Såˇt_ch¨
(*
quîy
, '&');

3257 i‡(
mu…ù¨t
) {

3258 
	`Ârötf
(
body
, "--%s--\r\n", 
fi
->
∑ª¡
->
bound¨y
);

3259 
	`f˛o£
(
body
);

3263 
	`Såœ°ch¨
(*
quîy
) == '&')

3264 
	`Såshrök
(*
quîy
, 1);

3266 
	}
}

3269 
DEFUN
(
submôF‹m
, 
SUBMIT
, "Submit form")

3271 
_fﬁlowF‹m
(
TRUE
);

3276 
	$fﬁlowF‹m
()

3278 
	`_fﬁlowF‹m
(
FALSE
);

3279 
	}
}

3282 
	$_fﬁlowF‹m
(
submô
)

3284 
Löe
 *
l
;

3285 
Anch‹
 *
a
, *
a2
;

3286 *
p
;

3287 
F‹mIãmLi°
 *
fi
, *
f2
;

3288 
Så
 
tmp
, 
tmp2
;

3289 
mu…ù¨t
 = 0, 
i
;

3291 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3293 
l
 = 
Cuºítbuf
->
cuºítLöe
;

3295 
a
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3296 i‡(
a
 =
NULL
)

3298 
fi
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

3299 
fi
->
ty≥
) {

3300 
FORM_INPUT_TEXT
:

3301 i‡(
submô
)

3302 
do_submô
;

3303 i‡(
fi
->
ªad⁄ly
)

3305 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3307 
p
 = 
	`öputSåHi°
("TEXT:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
, 
TextHi°
);

3308 i‡(
p
 =
NULL
 || 
fi
->
ªad⁄ly
)

3310 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3311 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3312 i‡(
fi
->
ac˚±
 || fi->
∑ª¡
->
nôems
 == 1)

3313 
do_submô
;

3315 
FORM_INPUT_FILE
:

3316 i‡(
submô
)

3317 
do_submô
;

3318 i‡(
fi
->
ªad⁄ly
)

3320 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3322 
p
 = 
	`öputFûíameHi°
("Fûíame:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
,

3323 
NULL
);

3324 i‡(
p
 =
NULL
 || 
fi
->
ªad⁄ly
)

3326 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3327 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3328 i‡(
fi
->
ac˚±
 || fi->
∑ª¡
->
nôems
 == 1)

3329 
do_submô
;

3331 
FORM_INPUT_PASSWORD
:

3332 i‡(
submô
)

3333 
do_submô
;

3334 i‡(
fi
->
ªad⁄ly
) {

3336 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3340 
p
 = 
	`öputLöe
("Passw‹d:", 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
,

3341 
IN_PASSWORD
);

3342 i‡(
p
 =
NULL
)

3344 
fi
->
vÆue
 = 
	`Så√w_ch¨p
(
p
);

3345 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3346 i‡(
fi
->
ac˚±
)

3347 
do_submô
;

3349 
FORM_TEXTAREA
:

3350 i‡(
submô
)

3351 
do_submô
;

3352 i‡(
fi
->
ªad⁄ly
)

3354 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3355 
	`öput_ãxèªa
(
fi
);

3356 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3358 
FORM_INPUT_RADIO
:

3359 i‡(
submô
)

3360 
do_submô
;

3361 i‡(
fi
->
ªad⁄ly
) {

3363 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3366 
	`f‹mRecheckRadio
(
a
, 
Cuºítbuf
, 
fi
);

3368 
FORM_INPUT_CHECKBOX
:

3369 i‡(
submô
)

3370 
do_submô
;

3371 i‡(
fi
->
ªad⁄ly
) {

3373 
	`di•_mesßge_n£c
("Ród o∆y fõld!", 
FALSE
, 1, 
TRUE
, FALSE);

3376 
fi
->
checked
 = !fi->checked;

3377 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3379 #ifde‡
MENU_SELECT


3380 
FORM_SELECT
:

3381 i‡(
submô
)

3382 
do_submô
;

3383 i‡(!
	`f‹mChoo£O±i⁄ByMíu
(
fi
,

3384 
Cuºítbuf
->
curs‹X
 - Cuºítbuf->
pos
 +

3385 
a
->
°¨t
.
pos
 + 
Cuºítbuf
->
roŸX
,

3386 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
))

3388 
	`f‹mUpd©eBuf„r
(
a
, 
Cuºítbuf
, 
fi
);

3389 i‡(
fi
->
∑ª¡
->
nôems
 == 1)

3390 
do_submô
;

3393 
FORM_INPUT_IMAGE
:

3394 
FORM_INPUT_SUBMIT
:

3395 
FORM_INPUT_BUTTON
:

3396 
do_submô
:

3397 
tmp
 = 
	`Så√w
();

3398 
tmp2
 = 
	`Så√w
();

3399 
mu…ù¨t
 = (
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_POST
 &&

3400 
fi
->
∑ª¡
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
);

3401 
	`quîy_‰om_fﬁlowf‹m
(&
tmp
, 
fi
, 
mu…ù¨t
);

3403 
tmp2
 = 
	`Sådup
(
fi
->
∑ª¡
->
a˘i⁄
);

3404 i‡(!
	`Såcmp_ch¨p
(
tmp2
, "!CURRENT_URL!")) {

3406 
tmp2
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

3407 i‡((
p
 = 
	`°rchr
(
tmp2
->
±r
, '?')Ë!
NULL
)

3408 
	`Såshrök
(
tmp2
, (tmp2->
±r
 +Åmp2->
Àngth
Ë- 
p
);

3411 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_GET
) {

3412 i‡((
p
 = 
	`°rchr
(
tmp2
->
±r
, '?')Ë!
NULL
)

3413 
	`Såshrök
(
tmp2
, (tmp2->
±r
 +Åmp2->
Àngth
Ë- 
p
);

3414 
	`Såˇt_ch¨p
(
tmp2
, "?");

3415 
	`Såˇt
(
tmp2
, 
tmp
);

3416 
	`lﬂdLök
(
tmp2
->
±r
, 
a
->
èrgë
, 
NULL
, NULL);

3418 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_POST
) {

3419 
Buf„r
 *
buf
;

3420 i‡(
mu…ù¨t
) {

3421 
°©
 
°
;

3422 
	`°©
(
fi
->
∑ª¡
->
body
, &
°
);

3423 
fi
->
∑ª¡
->
Àngth
 = 
°
.
°_size
;

3426 
fi
->
∑ª¡
->
body
 = 
tmp
->
±r
;

3427 
fi
->
∑ª¡
->
Àngth
 = 
tmp
->length;

3429 
buf
 = 
	`lﬂdLök
(
tmp2
->
±r
, 
a
->
èrgë
, 
NULL
, 
fi
->
∑ª¡
);

3430 i‡(
mu…ù¨t
) {

3431 
	`u∆ök
(
fi
->
∑ª¡
->
body
);

3433 i‡(
buf
 && !(buf->
buf„Ωr›
 & 
BP_REDIRECTED
)) {

3438 
buf
->
f‹m_submô
 = 
	`ßve_submô_f‹mli°
(
fi
);

3441 i‡((
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
 && (!
	`Såcmp_ch¨p
(fi->∑ª¡->
a˘i⁄
, "m≠"Ë|| !Såcmp_ch¨p(fi->∑ª¡->a˘i⁄, "n⁄e"))Ë|| 
Cuºítbuf
->
buf„Ωr›
 & 
BP_INTERNAL
) {

3442 
	`do_öã∫Æ
(
tmp2
->
±r
, 
tmp
->ptr);

3445 
	`di•_îr_mesßge
("Can't send form because of illegal method.",

3446 
FALSE
);

3449 
FORM_INPUT_RESET
:

3450 
i
 = 0; i < 
Cuºítbuf
->
f‹môem
->
«nch‹
; i++) {

3451 
a2
 = &
Cuºítbuf
->
f‹môem
->
™ch‹s
[
i
];

3452 
f2
 = (
F‹mIãmLi°
 *)
a2
->
uæ
;

3453 i‡(
f2
->
∑ª¡
 =
fi
->parent &&

3454 
f2
->
«me
 && f2->
vÆue
 &&

3455 
f2
->
ty≥
 !
FORM_INPUT_SUBMIT
 &&

3456 
f2
->
ty≥
 !
FORM_INPUT_HIDDEN
 &&

3457 
f2
->
ty≥
 !
FORM_INPUT_RESET
) {

3458 
f2
->
vÆue
 = f2->
öô_vÆue
;

3459 
f2
->
checked
 = f2->
öô_checked
;

3460 #ifde‡
MENU_SELECT


3461 
f2
->
œbñ
 = f2->
öô_œbñ
;

3462 
f2
->
£À˘ed
 = f2->
öô_£À˘ed
;

3464 
	`f‹mUpd©eBuf„r
(
a2
, 
Cuºítbuf
, 
f2
);

3468 
FORM_INPUT_HIDDEN
:

3472 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3473 
	}
}

3476 
DEFUN
(
t›A
, 
LINK_BEGIN
, "GoÅoÅhe firstÜink")

3478 
Hm¨kîLi°
 *
	ghl
 = 
Cuºítbuf
->
hm¨kli°
;

3479 
Buf„rPoöt
 *
	gpo
;

3480 
Anch‹
 *
	g™
;

3481 
	gh£q
 = 0;

3483 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3485 i‡(!
	ghl
 || hl->
	gnm¨k
 == 0)

3488 i‡(
	g¥ec_num
 > 
	ghl
->
	gnm¨k
)

3489 
	gh£q
 = 
hl
->
nm¨k
 - 1;

3490 i‡(
	g¥ec_num
 > 0)

3491 
	gh£q
 = 
¥ec_num
 - 1;

3493 i‡(
	gh£q
 >
hl
->
nm¨k
)

3495 
	gpo
 = 
hl
->
m¨ks
 + 
h£q
;

3496 
	g™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3497 i‡(
	g™
 =
NULL
)

3498 
™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,Öo->
pos
);

3499 
	gh£q
++;

3500 } 
	g™
 =
NULL
);

3502 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3503 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

3504 
¨øngeCurs‹
(
Cuºítbuf
);

3505 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3509 
DEFUN
(
œ°A
, 
LINK_END
, "GoÅoÅheÜastÜink")

3511 
Hm¨kîLi°
 *
	ghl
 = 
Cuºítbuf
->
hm¨kli°
;

3512 
Buf„rPoöt
 *
	gpo
;

3513 
Anch‹
 *
	g™
;

3514 
	gh£q
;

3516 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

3518 i‡(!
	ghl
 || hl->
	gnm¨k
 == 0)

3521 i‡(
	g¥ec_num
 >
hl
->
nm¨k
)

3522 
h£q
 = 0;

3523 i‡(
	g¥ec_num
 > 0)

3524 
	gh£q
 = 
hl
->
nm¨k
 - 
¥ec_num
;

3526 
	gh£q
 = 
hl
->
nm¨k
 - 1;

3528 i‡(
	gh£q
 < 0)

3530 
	gpo
 = 
hl
->
m¨ks
 + 
h£q
;

3531 
	g™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3532 i‡(
	g™
 =
NULL
)

3533 
™
 = 
ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,Öo->
pos
);

3534 
	gh£q
--;

3535 } 
	g™
 =
NULL
);

3537 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3538 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

3539 
¨øngeCurs‹
(
Cuºítbuf
);

3540 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3544 
DEFUN
(
√xtA
, 
NEXT_LINK
, "MoveÅoÇextÜink")

3546 
_√xtA
(
FALSE
);

3550 
DEFUN
(
¥evA
, 
PREV_LINK
, "MoveÅoÖreviousÜink")

3552 
_¥evA
(
FALSE
);

3556 
DEFUN
(
√xtVA
, 
NEXT_VISITED
, "MoveÅoÇext visitedÜink")

3558 
_√xtA
(
TRUE
);

3562 
DEFUN
(
¥evVA
, 
PREV_VISITED
, "MoveÅoÖrevious visitedÜink")

3564 
_¥evA
(
TRUE
);

3569 
	$_√xtA
(
visôed
)

3571 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3572 
Buf„rPoöt
 *
po
;

3573 
Anch‹
 *
™
, *
∑n
;

3574 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3575 
P¨£dURL
 
uæ
;

3577 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3579 i‡(!
hl
 || hl->
nm¨k
 == 0)

3582 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3583 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3584 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3586 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
;

3587 
x
 = 
Cuºítbuf
->
pos
;

3589 i‡(
visôed
 =
TRUE
) {

3590 
n
 = 
hl
->
nm¨k
;

3593 
i
 = 0; i < 
n
; i++) {

3594 
∑n
 = 
™
;

3595 i‡(
™
 &&án->
h£q
 >= 0) {

3596 
h£q
 = 
™
->hseq + 1;

3598 i‡(
h£q
 >
hl
->
nm¨k
) {

3599 i‡(
visôed
 =
TRUE
)

3601 
™
 = 
∑n
;

3602 
_íd
;

3604 
po
 = &
hl
->
m¨ks
[
h£q
];

3605 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3606 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3607 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,

3608 
po
->
pos
);

3609 
h£q
++;

3610 i‡(
visôed
 =
TRUE
 && 
™
) {

3611 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3612 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3613 
_íd
;

3616 } 
™
 =
NULL
 ||á¿=
∑n
);

3619 
™
 = 
	`˛o£°_√xt_™ch‹
(
Cuºítbuf
->
hªf
, 
NULL
, 
x
, 
y
);

3620 i‡(
visôed
 !
TRUE
)

3621 
™
 = 
	`˛o£°_√xt_™ch‹
(
Cuºítbuf
->
f‹môem
,án, 
x
, 
y
);

3622 i‡(
™
 =
NULL
) {

3623 i‡(
visôed
 =
TRUE
)

3625 
™
 = 
∑n
;

3628 
x
 = 
™
->
°¨t
.
pos
;

3629 
y
 = 
™
->
°¨t
.
löe
;

3630 i‡(
visôed
 =
TRUE
) {

3631 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3632 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3633 
_íd
;

3638 i‡(
visôed
 =
TRUE
)

3641 
_íd
:

3642 i‡(
™
 =
NULL
 ||án->
h£q
 < 0)

3644 
po
 = &
hl
->
m¨ks
[
™
->
h£q
];

3645 
	`gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3646 
Cuºítbuf
->
pos
 = 
po
->pos;

3647 
	`¨øngeCurs‹
(
Cuºítbuf
);

3648 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3649 
	}
}

3653 
	$_¥evA
(
visôed
)

3655 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3656 
Buf„rPoöt
 *
po
;

3657 
Anch‹
 *
™
, *
∑n
;

3658 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3659 
P¨£dURL
 
uæ
;

3661 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3663 i‡(!
hl
 || hl->
nm¨k
 == 0)

3666 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3667 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3668 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3670 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
;

3671 
x
 = 
Cuºítbuf
->
pos
;

3673 i‡(
visôed
 =
TRUE
) {

3674 
n
 = 
hl
->
nm¨k
;

3677 
i
 = 0; i < 
n
; i++) {

3678 
∑n
 = 
™
;

3679 i‡(
™
 &&án->
h£q
 >= 0) {

3680 
h£q
 = 
™
->hseq - 1;

3682 i‡(
h£q
 < 0) {

3683 i‡(
visôed
 =
TRUE
)

3685 
™
 = 
∑n
;

3686 
_íd
;

3688 
po
 = 
hl
->
m¨ks
 + 
h£q
;

3689 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
po
->
löe
,Öo->
pos
);

3690 i‡(
visôed
 !
TRUE
 && 
™
 =
NULL
)

3691 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
po
->
löe
,

3692 
po
->
pos
);

3693 
h£q
--;

3694 i‡(
visôed
 =
TRUE
 && 
™
) {

3695 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3696 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3697 
_íd
;

3700 } 
™
 =
NULL
 ||á¿=
∑n
);

3703 
™
 = 
	`˛o£°_¥ev_™ch‹
(
Cuºítbuf
->
hªf
, 
NULL
, 
x
, 
y
);

3704 i‡(
visôed
 !
TRUE
)

3705 
™
 = 
	`˛o£°_¥ev_™ch‹
(
Cuºítbuf
->
f‹môem
,án, 
x
, 
y
);

3706 i‡(
™
 =
NULL
) {

3707 i‡(
visôed
 =
TRUE
)

3709 
™
 = 
∑n
;

3712 
x
 = 
™
->
°¨t
.
pos
;

3713 
y
 = 
™
->
°¨t
.
löe
;

3714 i‡(
visôed
 =
TRUE
 && 
™
) {

3715 
	`∑r£URL2
(
™
->
uæ
, &uæ, 
	`ba£URL
(
Cuºítbuf
));

3716 i‡(
	`gëHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
uæ
)->
±r
)) {

3717 
_íd
;

3722 i‡(
visôed
 =
TRUE
)

3725 
_íd
:

3726 i‡(
™
 =
NULL
 ||án->
h£q
 < 0)

3728 
po
 = 
hl
->
m¨ks
 + 
™
->
h£q
;

3729 
	`gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

3730 
Cuºítbuf
->
pos
 = 
po
->pos;

3731 
	`¨øngeCurs‹
(
Cuºítbuf
);

3732 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3733 
	}
}

3737 
	$√xtX
(
d
, 
dy
)

3739 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3740 
Anch‹
 *
™
, *
∑n
;

3741 
Löe
 *
l
;

3742 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3744 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3746 i‡(!
hl
 || hl->
nm¨k
 == 0)

3749 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3750 i‡(
™
 =
NULL
)

3751 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3753 
l
 = 
Cuºítbuf
->
cuºítLöe
;

3754 
x
 = 
Cuºítbuf
->
pos
;

3755 
y
 = 
l
->
löíumbî
;

3756 
∑n
 = 
NULL
;

3757 
i
 = 0; i < 
n
; i++) {

3758 i‡(
™
)

3759 
x
 = (
d
 > 0Ë? 
™
->
íd
.
pos
 :án->
°¨t
.pos - 1;

3760 
™
 = 
NULL
;

3762 ; 
x
 >0 && x < 
l
->
Àn
; x +
d
) {

3763 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
y
, 
x
);

3764 i‡(!
™
)

3765 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
y
, 
x
);

3766 i‡(
™
) {

3767 
∑n
 = 
™
;

3771 i‡(!
dy
 || 
™
)

3773 
l
 = (
dy
 > 0Ë?Ü->
√xt
 :Ü->
¥ev
;

3774 i‡(!
l
)

3776 
x
 = (
d
 > 0Ë? 0 : 
l
->
Àn
 - 1;

3777 
y
 = 
l
->
löíumbî
;

3779 i‡(!
™
)

3783 i‡(
∑n
 =
NULL
)

3785 
	`gŸoLöe
(
Cuºítbuf
, 
y
);

3786 
Cuºítbuf
->
pos
 = 
∑n
->
°¨t
.pos;

3787 
	`¨øngeCurs‹
(
Cuºítbuf
);

3788 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3789 
	}
}

3793 
	$√xtY
(
d
)

3795 
Hm¨kîLi°
 *
hl
 = 
Cuºítbuf
->
hm¨kli°
;

3796 
Anch‹
 *
™
, *
∑n
;

3797 
i
, 
x
, 
y
, 
n
 = 
	`£¨chKeyNum
();

3798 
h£q
;

3800 i‡(
Cuºítbuf
->
fú°Löe
 =
NULL
)

3802 i‡(!
hl
 || hl->
nm¨k
 == 0)

3805 
™
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

3806 i‡(
™
 =
NULL
)

3807 
™
 = 
	`ªåõveCuºítF‹m
(
Cuºítbuf
);

3809 
x
 = 
Cuºítbuf
->
pos
;

3810 
y
 = 
Cuºítbuf
->
cuºítLöe
->
löíumbî
 + 
d
;

3811 
∑n
 = 
NULL
;

3812 
h£q
 = -1;

3813 
i
 = 0; i < 
n
; i++) {

3814 i‡(
™
)

3815 
h£q
 = 
	`abs
(
™
->hseq);

3816 
™
 = 
NULL
;

3817 ; 
y
 >0 && y <
Cuºítbuf
->
œ°Löe
->
löíumbî
; y +
d
) {

3818 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
hªf
, 
y
, 
x
);

3819 i‡(!
™
)

3820 
™
 = 
	`ªåõveAnch‹
(
Cuºítbuf
->
f‹môem
, 
y
, 
x
);

3821 i‡(
™
 && 
h£q
 !
	`abs
(an->hseq)) {

3822 
∑n
 = 
™
;

3826 i‡(!
™
)

3830 i‡(
∑n
 =
NULL
)

3832 
	`gŸoLöe
(
Cuºítbuf
, 
∑n
->
°¨t
.
löe
);

3833 
	`¨øngeLöe
(
Cuºítbuf
);

3834 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

3835 
	}
}

3838 
DEFUN
(
√xtL
, 
NEXT_LEFT
, "MoveÅoÇextÜeftÜink")

3840 
√xtX
(-1, 0);

3844 
DEFUN
(
√xtLU
, 
NEXT_LEFT_UP
, "MoveÅoÇextÜeft (or upward)Üink")

3846 
√xtX
(-1, -1);

3850 
DEFUN
(
√xtR
, 
NEXT_RIGHT
, "MoveÅoÇextÑightÜink")

3852 
√xtX
(1, 0);

3856 
DEFUN
(
√xtRD
, 
NEXT_RIGHT_DOWN
, "MoveÅoÇextÑight (or downward)Üink")

3858 
√xtX
(1, 1);

3862 
DEFUN
(
√xtD
, 
NEXT_DOWN
, "MoveÅoÇext downwardÜink")

3864 
√xtY
(1);

3868 
DEFUN
(
√xtU
, 
NEXT_UP
, "MoveÅoÇext upwardÜink")

3870 
√xtY
(-1);

3874 
DEFUN
(
√xtBf
, 
NEXT
, "MoveÅoÇext buffer")

3876 
Buf„r
 *
	gbuf
;

3877 
	gi
;

3879 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

3880 
	gbuf
 = 
¥evBuf„r
(
Fú°buf
, 
Cuºítbuf
);

3881 i‡(!
	gbuf
) {

3882 i‡(
	gi
 == 0)

3886 
	gCuºítbuf
 = 
buf
;

3888 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3892 
DEFUN
(
¥evBf
, 
PREV
, "MoveÅoÖrevious buffer")

3894 
Buf„r
 *
	gbuf
;

3895 
	gi
;

3897 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

3898 
	gbuf
 = 
Cuºítbuf
->
√xtBuf„r
;

3899 i‡(!
	gbuf
) {

3900 i‡(
	gi
 == 0)

3904 
	gCuºítbuf
 = 
buf
;

3906 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3910 
	$checkBackBuf„r
(
Buf„r
 *
buf
)

3912 
Buf„r
 *
fbuf
 = 
buf
->
lökBuf„r
[
LB_N_FRAME
];

3914 i‡(
fbuf
) {

3915 i‡(
fbuf
->
‰ameQ
)

3916  
TRUE
;

3919 i‡(
RídîFøme
 && 
fbuf
 =
buf
->
√xtBuf„r
) {

3920 i‡(
fbuf
->
√xtBuf„r
 !
NULL
)

3921  
TRUE
;

3923  
FALSE
;

3927 i‡(
buf
->
√xtBuf„r
)

3928  
TRUE
;

3930  
FALSE
;

3931 
	}
}

3934 
DEFUN
(
backBf
, 
BACK
, "BackÅoÖrevious buffer")

3936 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
];

3938 i‡(!
checkBackBuf„r
(
Cuºítbuf
)) {

3939 i‡(
	g˛o£_èb_back
 && 
	gnTab
 >= 1) {

3940 
dñëeTab
(
CuºítTab
);

3941 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3945 
di•_mesßge
("C™'àback...", 
TRUE
);

3949 
dñBuf„r
(
Cuºítbuf
);

3951 i‡(
	gbuf
) {

3952 i‡(
	gbuf
->
	g‰ameQ
) {

3953 
‰ame£t
 *
	gfs
;

3954 
	glöíumbî
 = 
buf
->
‰ameQ
->
löíumbî
;

3955 
	gt›
 = 
buf
->
‰ameQ
->
t›_löíumbî
;

3956 
	gpos
 = 
buf
->
‰ameQ
->
pos
;

3957 
	gcuºítCﬁumn
 = 
buf
->
‰ameQ
->
cuºítCﬁumn
;

3958 
Anch‹Li°
 *
	gf‹môem
 = 
buf
->
‰ameQ
->
f‹môem
;

3960 
	gfs
 = 
p›FømeTªe
(&(
buf
->
‰ameQ
));

3961 
dñëeFømeSë
(
buf
->
‰ame£t
);

3962 
	gbuf
->
	g‰ame£t
 = 
fs
;

3964 i‡(
	gbuf
 =
Cuºítbuf
) {

3965 
rFøme
();

3966 
	gCuºítbuf
->
	gt›Löe
 = 
löeSkù
(
Cuºítbuf
,

3967 
Cuºítbuf
->
fú°Löe
, 
t›
 - 1,

3968 
FALSE
);

3969 
gŸoLöe
(
Cuºítbuf
, 
löíumbî
);

3970 
	gCuºítbuf
->
	gpos
 = 
pos
;

3971 
	gCuºítbuf
->
	gcuºítCﬁumn
 = 
cuºítCﬁumn
;

3972 
¨øngeCurs‹
(
Cuºítbuf
);

3973 
f‹mRe£tBuf„r
(
Cuºítbuf
, 
f‹môem
);

3976 i‡(
	gRídîFøme
 && 
	gbuf
 =
Cuºítbuf
) {

3977 
dñBuf„r
(
Cuºítbuf
);

3980 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

3983 
DEFUN
(
dñëePªvBuf
, 
DELETE_PREVBUF
,

3986 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
√xtBuf„r
;

3987 i‡(
	gbuf
)

3988 
dñBuf„r
(
buf
);

3992 
	$cmd_lﬂdURL
(*
uæ
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
, 
F‹mLi°
 *
ªque°
)

3994 
Buf„r
 *
buf
;

3996 i‡(!
	`°∫ˇ£cmp
(
uæ
, "mailto:", 7)

3997 #ifde‡
USE_W3MMAILER


3998 && 
	`n⁄_nuŒ
(
Maûî
Ë&& 
	`°rchr
(
uæ
, '?'Ë=
NULL


4002 
Så
 
to
 = 
	`Så√w_ch¨p
(
uæ
 + 7);

4003 #i‚de‡
USE_W3MMAILER


4004 *
pos
;

4005 i‡(!
	`n⁄_nuŒ
(
Maûî
)) {

4007 
	`di•_îr_mesßge
("nÿmaûî i†•ecifõd", 
TRUE
);

4010 i‡((
pos
 = 
	`°rchr
(
to
->
±r
, '?')Ë!
NULL
)

4011 
	`Sååunˇã
(
to
, 
pos
 -Åo->
±r
);

4013 
	`fmTîm
();

4014 
	`sy°em
(
	`myExtComm™d
(
Maûî
, 
	`shñl_quŸe
(
	`fûe_unquŸe
(
to
->
±r
)),

4015 
FALSE
)->
±r
);

4016 
	`fmInô
();

4017 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4018 
	`pushHashHi°
(
URLHi°
, 
uæ
);

4022 i‡(!
	`°∫ˇ£cmp
(
uæ
, "√ws:", 5Ë&& 
	`°rchr
(uæ, '@'Ë=
NULL
) {

4025 
	`di•_îr_mesßge
("√ws:√wsgroup_«mêi†nŸ suµ‹ãd", 
TRUE
);

4030 
	`ª‰esh
();

4031 
buf
 = 
	`lﬂdGíîÆFûe
(
uæ
, 
cuºít
, 
ª„ªr
, 0, 
ªque°
);

4032 i‡(
buf
 =
NULL
) {

4034 *
emsg
 = 
	`S¥ötf
("C™'àlﬂd %s", 
	`c⁄v_‰om_sy°em
(
uæ
))->
±r
;

4035 
	`di•_îr_mesßge
(
emsg
, 
FALSE
);

4037 i‡(
buf
 !
NO_BUFFER
) {

4038 
	`pushBuf„r
(
buf
);

4039 i‡(
RídîFøme
 && 
Cuºítbuf
->
‰ame£t
 !
NULL
)

4040 
	`rFøme
();

4042 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4043 
	}
}

4048 
	$goURL0
(*
¥om±
, 
ªœtive
)

4050 *
uæ
, *
ª„ªr
;

4051 
P¨£dURL
 
p_uæ
, *
cuºít
;

4052 
Buf„r
 *
cur_buf
 = 
Cuºítbuf
;

4054 
uæ
 = 
	`£¨chKeyD©a
();

4055 i‡(
uæ
 =
NULL
) {

4056 
Hi°
 *
hi°
 = 
	`c›yHi°
(
URLHi°
);

4057 
Anch‹
 *
a
;

4059 
cuºít
 = 
	`ba£URL
(
Cuºítbuf
);

4060 i‡(
cuºít
) {

4061 *
c_uæ
 = 
	`∑r£dURL2Så
(
cuºít
)->
±r
;

4062 i‡(
DeÁu…URLSåög
 =
DEFAULT_URL_CURRENT
) {

4063 
uæ
 = 
c_uæ
;

4064 i‡(
DecodeURL
)

4065 
uæ
 = 
	`uæ_unquŸe_c⁄v
(url, 0);

4068 
	`pushHi°
(
hi°
, 
c_uæ
);

4070 
a
 = 
	`ªåõveCuºítAnch‹
(
Cuºítbuf
);

4071 i‡(
a
) {

4072 *
a_uæ
;

4073 
	`∑r£URL2
(
a
->
uæ
, &
p_uæ
, 
cuºít
);

4074 
a_uæ
 = 
	`∑r£dURL2Så
(&
p_uæ
)->
±r
;

4075 i‡(
DeÁu…URLSåög
 =
DEFAULT_URL_LINK
) {

4076 
uæ
 = 
a_uæ
;

4077 i‡(
DecodeURL
)

4078 
uæ
 = 
	`uæ_unquŸe_c⁄v
(uæ, 
Cuºítbuf
->
documít_ch¨£t
);

4081 
	`pushHi°
(
hi°
, 
a_uæ
);

4083 
uæ
 = 
	`öputLöeHi°
(
¥om±
, uæ, 
IN_URL
, 
hi°
);

4084 i‡(
uæ
 !
NULL
)

4085 
	`SKIP_BLANKS
(
uæ
);

4087 #ifde‡
USE_M17N


4088 i‡(
uæ
 !
NULL
) {

4089 i‡((
ªœtive
 || *
uæ
 ='#'Ë&& 
Cuºítbuf
->
documít_ch¨£t
)

4090 
uæ
 = 
	`wc_c⁄v_°ri˘
(uæ, 
I¬îCh¨£t
,

4091 
Cuºítbuf
->
documít_ch¨£t
)->
±r
;

4093 
uæ
 = 
	`c⁄v_to_sy°em
(url);

4096 i‡(
uæ
 =
NULL
 || *url == '\0') {

4097 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4100 i‡(*
uæ
 == '#') {

4101 
	`gŸoLabñ
(
uæ
 + 1);

4104 i‡(
ªœtive
) {

4105 
cuºít
 = 
	`ba£URL
(
Cuºítbuf
);

4106 
ª„ªr
 = 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
;

4109 
cuºít
 = 
NULL
;

4110 
ª„ªr
 = 
NULL
;

4112 
	`∑r£URL2
(
uæ
, &
p_uæ
, 
cuºít
);

4113 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
p_uæ
)->
±r
);

4114 
	`cmd_lﬂdURL
(
uæ
, 
cuºít
, 
ª„ªr
, 
NULL
);

4115 i‡(
Cuºítbuf
 !
cur_buf
)

4116 
	`pushHashHi°
(
URLHi°
, 
	`∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
);

4117 
	}
}

4119 
DEFUN
(
goURL
, 
GOTO
, "GoÅo URL")

4121 
goURL0
("GŸÿURL: ", 
FALSE
);

4124 
DEFUN
(
g‹URL
, 
GOTO_RELATIVE
, "GoÅoÑelative URL")

4126 
goURL0
("GŸÿªœtivêURL: ", 
TRUE
);

4130 
	$cmd_lﬂdBuf„r
(
Buf„r
 *
buf
, 
¥›
, 
lökid
)

4132 i‡(
buf
 =
NULL
) {

4133 
	`di•_îr_mesßge
("C™'àlﬂd såög", 
FALSE
);

4135 i‡(
buf
 !
NO_BUFFER
) {

4136 
buf
->
buf„Ωr›
 |(
BP_INTERNAL
 | 
¥›
);

4137 i‡(!(
buf
->
buf„Ωr›
 & 
BP_NO_URL
))

4138 
	`c›yP¨£dURL
(&
buf
->
cuºítURL
, &
Cuºítbuf
->currentURL);

4139 i‡(
lökid
 !
LB_NOLINK
) {

4140 
buf
->
lökBuf„r
[
REV_LB
[
lökid
]] = 
Cuºítbuf
;

4141 
Cuºítbuf
->
lökBuf„r
[
lökid
] = 
buf
;

4143 
	`pushBuf„r
(
buf
);

4145 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4146 
	}
}

4149 
DEFUN
(
ldBm¨k
, 
BOOKMARK
 
VIEW_BOOKMARK
, "Read bookmark")

4151 
cmd_lﬂdURL
(
Bookm¨kFûe
, 
NULL
, 
NO_REFERER
, NULL);

4156 
DEFUN
(
adBm¨k
, 
ADD_BOOKMARK
, "Add currentÖageÅo bookmark")

4158 
Så
 
	gtmp
;

4159 
F‹mLi°
 *
	gªque°
;

4161 
	gtmp
 = 
S¥ötf
("mode=panel&cookie=%s&bmark=%s&url=%s&title=%s"

4162 #ifde‡
USE_M17N


4166 (
Så_f‹m_quŸe
(
loˇlCookõ
()))->
±r
,

4167 (
Så_f‹m_quŸe
(
Så√w_ch¨p
(
Bookm¨kFûe
)))->
±r
,

4168 (
Så_f‹m_quŸe
(
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)))->

4169 
±r
,

4170 #ifde‡
USE_M17N


4171 (
Så_f‹m_quŸe
(
wc_c⁄v_°ri˘
(
Cuºítbuf
->
buf„∫ame
,

4172 
I¬îCh¨£t
,

4173 
Bookm¨kCh¨£t
)))->
±r
,

4174 
wc_˚s_to_ch¨£t
(
Bookm¨kCh¨£t
));

4176 (
Så_f‹m_quŸe
(
Så√w_ch¨p
(
Cuºítbuf
->
buf„∫ame
)))->
	g±r
);

4178 
	gªque°
 = 
√wF‹mLi°
(
NULL
, "post", NULL, NULL, NULL, NULL, NULL);

4179 
	gªque°
->
	gbody
 = 
tmp
->
±r
;

4180 
	gªque°
->
	gÀngth
 = 
tmp
->
Àngth
;

4181 
cmd_lﬂdURL
("fûe:///$LIB/" 
W3MBOOKMARK_CMDNAME
, 
NULL
, 
NO_REFERER
,

4182 
ªque°
);

4186 
DEFUN
(
ldO±
, 
OPTIONS
, "Option settingÖanel")

4188 
cmd_lﬂdBuf„r
(
lﬂd_›ti⁄_∑√l
(), 
BP_NO_URL
, 
LB_NOLINK
);

4192 
DEFUN
(
£tO±
, 
SET_OPTION
, "Set option")

4194 *
	g›t
;

4196 
	gCuºítKeyD©a
 = 
NULL
;

4197 
	g›t
 = 
£¨chKeyD©a
();

4198 i‡(
	g›t
 =
NULL
 || *
›t
 ='\0' || 
°rchr
(opt, '=') == NULL) {

4199 i‡(
›t
 !
NULL
 && *opt != '\0') {

4200 *
v
 = 
gë_∑øm_›ti⁄
(
›t
);

4201 
	g›t
 = 
S¥ötf
("%s=%s", 
›t
, 
v
 ? v : "")->
±r
;

4203 
	g›t
 = 
öputSåHi°
("Së o±i⁄: ", 
›t
, 
TextHi°
);

4204 i‡(
	g›t
 =
NULL
 || *
›t
 == '\0') {

4205 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4209 i‡(
£t_∑øm_›ti⁄
(
›t
))

4210 
sync_wôh_›ti⁄
();

4211 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

4215 
DEFUN
(
msgs
, 
MSGS
, "DisplayÉrror messages")

4217 
cmd_lﬂdBuf„r
(
mesßge_li°_∑√l
(), 
BP_NO_URL
, 
LB_NOLINK
);

4221 
DEFUN
(
pgöfo
, 
INFO
, "View info of current document")

4223 
Buf„r
 *
	gbuf
;

4225 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_INFO
]Ë!
NULL
) {

4226 
Cuºítbuf
 = 
buf
;

4227 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4230 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_INFO
]Ë!
NULL
)

4231 
dñBuf„r
(
buf
);

4232 
	gbuf
 = 
∑ge_öfo_∑√l
(
Cuºítbuf
);

4233 
cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_INFO
);

4237 
	$fﬁlow_m≠
(
∑r£d_èg¨g
 *
¨g
)

4239 *
«me
 = 
	`èg_gë_vÆue
(
¨g
, "link");

4240 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

4241 
Anch‹
 *
™
;

4242 
M≠Aªa
 *
a
;

4243 
x
, 
y
;

4244 
P¨£dURL
 
p_uæ
;

4246 
™
 = 
	`ªåõveCuºítImg
(
Cuºítbuf
);

4247 
x
 = 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
;

4248 
y
 = 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
;

4249 
a
 = 
	`fﬁlow_m≠_míu
(
Cuºítbuf
, 
«me
, 
™
, 
x
, 
y
);

4250 i‡(
a
 =
NULL
 ||á->
uæ
 == NULL || *(a->url) == '\0') {

4252 #i‚de‡
MENU_MAP


4253 
Buf„r
 *
buf
 = 
	`fﬁlow_m≠_∑√l
(
Cuºítbuf
, 
«me
);

4255 i‡(
buf
 !
NULL
)

4256 
	`cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_NOLINK
);

4258 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

4260 
	}
}

4261 i‡(*(
	ga
->
	guæ
) == '#') {

4262 
gŸoLabñ
(
a
->
uæ
 + 1);

4265 
∑r£URL2
(
a
->
uæ
, &
p_uæ
, 
ba£URL
(
Cuºítbuf
));

4266 
pushHashHi°
(
URLHi°
, 
∑r£dURL2Så
(&
p_uæ
)->
±r
);

4267 i‡(
	gcheck_èrgë
 && 
	g›í_èb_bœnk
 && 
	ga
->
	gèrgë
 &&

4268 (!
°rˇ£cmp
(
a
->
èrgë
, "_new") || !strcasecmp(a->target, "_blank"))) {

4269 
Buf„r
 *
	gbuf
;

4271 
_√wT
();

4272 
	gbuf
 = 
Cuºítbuf
;

4273 
cmd_lﬂdURL
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4274 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4275 i‡(
	gbuf
 !
Cuºítbuf
)

4276 
dñBuf„r
(
buf
);

4278 
dñëeTab
(
CuºítTab
);

4279 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4282 
cmd_lﬂdURL
(
a
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4283 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4287 #ifde‡
USE_MENU


4289 
DEFUN
(
lökMn
, 
LINK_MENU
, "PopupÜinkÉlement menu")

4291 
LökLi°
 *
	gl
 = 
lök_míu
(
Cuºítbuf
);

4292 
P¨£dURL
 
	gp_uæ
;

4294 i‡(!
	gl
 || !l->
	guæ
)

4296 i‡(*(
	gl
->
	guæ
) == '#') {

4297 
gŸoLabñ
(
l
->
uæ
 + 1);

4300 
∑r£URL2
(
l
->
uæ
, &
p_uæ
, 
ba£URL
(
Cuºítbuf
));

4301 
pushHashHi°
(
URLHi°
, 
∑r£dURL2Så
(&
p_uæ
)->
±r
);

4302 
cmd_lﬂdURL
(
l
->
uæ
, 
ba£URL
(
Cuºítbuf
),

4303 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
, 
NULL
);

4307 
™ch‹Mn
(
Anch‹
 *(*
míu_func
Ë(
Buf„r
 *), 
go
)

4309 
Anch‹
 *
	ga
;

4310 
Buf„rPoöt
 *
	gpo
;

4312 i‡(!
	gCuºítbuf
->
	ghªf
 || !Cuºítbuf->
	ghm¨kli°
)

4314 
	ga
 = 
míu_func
(
Cuºítbuf
);

4315 i‡(!
	ga
 ||á->
	gh£q
 < 0)

4317 
	gpo
 = &
Cuºítbuf
->
hm¨kli°
->
m¨ks
[
a
->
h£q
];

4318 
gŸoLöe
(
Cuºítbuf
, 
po
->
löe
);

4319 
	gCuºítbuf
->
	gpos
 = 
po
->
pos
;

4320 
¨øngeCurs‹
(
Cuºítbuf
);

4321 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4322 i‡(
	ggo
)

4323 
fﬁlowA
();

4327 
DEFUN
(
ac˚ssKey
, 
ACCESSKEY
, "Popupácceskey menu")

4329 
™ch‹Mn
(
ac˚sskey_míu
, 
TRUE
);

4333 
DEFUN
(
li°Mn
, 
LIST_MENU
, "PopupÜinkÜist menuánd goÅo selectedÜink")

4335 
™ch‹Mn
(
li°_míu
, 
TRUE
);

4338 
DEFUN
(
movli°Mn
, 
MOVE_LIST_MENU
,

4341 
™ch‹Mn
(
li°_míu
, 
FALSE
);

4346 
DEFUN
(
lökL°
, 
LIST
, "ShowállÜinksánd images")

4348 
Buf„r
 *
	gbuf
;

4350 
	gbuf
 = 
lök_li°_∑√l
(
Cuºítbuf
);

4351 i‡(
	gbuf
 !
NULL
) {

4352 #ifde‡
USE_M17N


4353 
buf
->
documít_ch¨£t
 = 
Cuºítbuf
->document_charset;

4355 
cmd_lﬂdBuf„r
(
buf
, 
BP_NORMAL
, 
LB_NOLINK
);

4359 #ifde‡
USE_COOKIE


4361 
DEFUN
(
cooL°
, 
COOKIE
, "View cookieÜist")

4363 
Buf„r
 *
	gbuf
;

4365 
	gbuf
 = 
cookõ_li°_∑√l
();

4366 i‡(
	gbuf
 !
NULL
)

4367 
cmd_lﬂdBuf„r
(
buf
, 
BP_NO_URL
, 
LB_NOLINK
);

4371 #ifde‡
USE_HISTORY


4373 
DEFUN
(
ldHi°
, 
HISTORY
, "View history of URL")

4375 
cmd_lﬂdBuf„r
(
hi°‹yBuf„r
(
URLHi°
), 
BP_NO_URL
, 
LB_NOLINK
);

4380 
DEFUN
(
svA
, 
SAVE_LINK
, "SaveÜinkÅo file")

4382 
	gCuºítKeyD©a
 = 
NULL
;

4383 
	gdo_dow∆ﬂd
 = 
TRUE
;

4384 
fﬁlowA
();

4385 
	gdo_dow∆ﬂd
 = 
FALSE
;

4389 
DEFUN
(
svI
, 
SAVE_IMAGE
, "Save imageÅo file")

4391 
	gCuºítKeyD©a
 = 
NULL
;

4392 
	gdo_dow∆ﬂd
 = 
TRUE
;

4393 
fﬁlowI
();

4394 
	gdo_dow∆ﬂd
 = 
FALSE
;

4398 
DEFUN
(
svBuf
, 
PRINT
 
SAVE_SCREEN
, "SaveÑendered documentÅo file")

4400 *
	gqfûe
 = 
NULL
, *
	gfûe
;

4401 
FILE
 *
	gf
;

4402 
	gis_pùe
;

4404 
	gCuºítKeyD©a
 = 
NULL
;

4405 
	gfûe
 = 
£¨chKeyD©a
();

4406 i‡(
	gfûe
 =
NULL
 || *
fûe
 == '\0') {

4408 
qfûe
 = 
öputLöeHi°
("Savêbuf„∏to: ", 
NULL
, 
IN_COMMAND
, 
SaveHi°
);

4409 i‡(
	gqfûe
 =
NULL
 || *
qfûe
 == '\0') {

4410 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4414 
	gfûe
 = 
c⁄v_to_sy°em
(
qfûe
 ? qfûê: 
fûe
);

4415 i‡(*
	gfûe
 == '|') {

4416 
is_pùe
 = 
TRUE
;

4417 
	gf
 = 
p›í
(
fûe
 + 1, "w");

4420 i‡(
	gqfûe
) {

4421 
	gfûe
 = 
u√sˇ≥_•a˚s
(
Så√w_ch¨p
(
qfûe
))->
±r
;

4422 
	gfûe
 = 
c⁄v_to_sy°em
(
fûe
);

4424 
	gfûe
 = 
ex∑ndP©h
(
fûe
);

4425 i‡(
checkOvîWrôe
(
fûe
) < 0) {

4426 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4429 
	gf
 = 
f›í
(
fûe
, "w");

4430 
	gis_pùe
 = 
FALSE
;

4432 i‡(
	gf
 =
NULL
) {

4434 *
emsg
 = 
S¥ötf
("C™'à›í %s", 
c⁄v_‰om_sy°em
(
fûe
))->
	g±r
;

4435 
di•_îr_mesßge
(
emsg
, 
TRUE
);

4438 
ßveBuf„r
(
Cuºítbuf
, 
f
, 
TRUE
);

4439 i‡(
	gis_pùe
)

4440 
p˛o£
(
f
);

4442 
f˛o£
(
f
);

4443 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4447 
DEFUN
(
svSrc
, 
DOWNLOAD
 
SAVE
, "Save document sourceÅo file")

4449 *
	gfûe
;

4451 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
)

4453 
	gCuºítKeyD©a
 = 
NULL
;

4454 
	gPîmôSaveToPùe
 = 
TRUE
;

4455 i‡(
	gCuºítbuf
->
	gªÆ_scheme
 =
SCM_LOCAL
)

4456 
fûe
 = 
c⁄v_‰om_sy°em
(
guess_ßve_«me
(
NULL
,

4457 
Cuºítbuf
->
cuºítURL
.

4458 
ªÆ_fûe
));

4460 
	gfûe
 = 
guess_ßve_«me
(
Cuºítbuf
, Cuºítbuf->
cuºítURL
.
fûe
);

4461 
doFûeC›y
(
Cuºítbuf
->
sour˚fûe
, 
fûe
);

4462 
	gPîmôSaveToPùe
 = 
FALSE
;

4463 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4467 
_≥ekURL
(
⁄ly_img
)

4470 
Anch‹
 *
	ga
;

4471 
P¨£dURL
 
	gpu
;

4472 
Så
 
	gs
 = 
NULL
;

4473 #ifde‡
USE_M17N


4474 
Löïr›
 *
	gp
 = 
NULL
;

4475 
Löïr›
 *
	gµ
;

4477 
	goff£t
 = 0, 
	gn
;

4479 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

4481 i‡(
	gCuºítKey
 =
¥ev_key
 && 
s
 !
NULL
) {

4482 i‡(
s
->
Àngth
 - 
off£t
 >
COLS
)

4483 
off£t
++;

4484 i‡(
	gs
->
	gÀngth
 <
off£t
)

4485 
off£t
 = 0;

4486 
	gdi•
;

4489 
	goff£t
 = 0;

4491 
	gs
 = 
NULL
;

4492 
	ga
 = (
⁄ly_img
 ? 
NULL
 : 
ªåõveCuºítAnch‹
(
Cuºítbuf
));

4493 i‡(
	ga
 =
NULL
) {

4494 
a
 = (
⁄ly_img
 ? 
NULL
 : 
ªåõveCuºítF‹m
(
Cuºítbuf
));

4495 i‡(
	ga
 =
NULL
) {

4496 
a
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

4497 i‡(
	ga
 =
NULL
)

4501 
	gs
 = 
Så√w_ch¨p
(
f‹m2°r
((
F‹mIãmLi°
 *)
a
->
uæ
));

4503 i‡(
	gs
 =
NULL
) {

4504 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
Cuºítbuf
));

4505 
	gs
 = 
∑r£dURL2Så
(&
pu
);

4507 i‡(
	gDecodeURL
)

4508 
	gs
 = 
Så√w_ch¨p
(
uæ_unquŸe_c⁄v


4509 (
s
->
±r
, 
Cuºítbuf
->
documít_ch¨£t
));

4510 #ifde‡
USE_M17N


4511 
	gs
 = 
checkTy≥
(
s
, &
µ
, 
NULL
);

4512 
	gp
 = 
NewAtom_N
(
Löïr›
, 
s
->
Àngth
);

4513 
bc›y
((*)
µ
, (*)
p
, 
s
->
Àngth
 * (
Löïr›
));

4515 
	gdi•
:

4516 
n
 = 
£¨chKeyNum
();

4517 i‡(
	gn
 > 1 && 
	gs
->
	gÀngth
 > (¿- 1Ë* (
	gCOLS
 - 1))

4518 
	goff£t
 = (
n
 - 1Ë* (
COLS
 - 1);

4519 #ifde‡
USE_M17N


4520 
	goff£t
 < 
	gs
->
	gÀngth
 && 
	gp
[
off£t
] & 
	gPC_WCHAR2
)

4521 
	goff£t
++;

4523 
di•_mesßge_nomou£
(&
s
->
±r
[
off£t
], 
TRUE
);

4527 
DEFUN
(
≥ekURL
, 
PEEK_LINK
, "PeekÜink URL")

4529 
_≥ekURL
(0);

4533 
DEFUN
(
≥ekIMG
, 
PEEK_IMG
, "Peek image URL")

4535 
_≥ekURL
(1);

4539 
Så


4540 
cuºítURL
()

4542 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4543  
Så√w_size
(0);

4544  
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

4547 
DEFUN
(
curURL
, 
PEEK
, "Peek current URL")

4549 
Så
 
	gs
 = 
NULL
;

4550 #ifde‡
USE_M17N


4551 
Löïr›
 *
	gp
 = 
NULL
;

4552 
Löïr›
 *
	gµ
;

4554 
	goff£t
 = 0, 
	gn
;

4556 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4558 i‡(
	gCuºítKey
 =
¥ev_key
 && 
s
 !
NULL
) {

4559 i‡(
s
->
Àngth
 - 
off£t
 >
COLS
)

4560 
off£t
++;

4561 i‡(
	gs
->
	gÀngth
 <
off£t
)

4562 
off£t
 = 0;

4565 
	goff£t
 = 0;

4566 
	gs
 = 
cuºítURL
();

4567 i‡(
	gDecodeURL
)

4568 
	gs
 = 
Så√w_ch¨p
(
uæ_unquŸe_c⁄v
(
s
->
±r
, 0));

4569 #ifde‡
USE_M17N


4570 
	gs
 = 
checkTy≥
(
s
, &
µ
, 
NULL
);

4571 
	gp
 = 
NewAtom_N
(
Löïr›
, 
s
->
Àngth
);

4572 
bc›y
((*)
µ
, (*)
p
, 
s
->
Àngth
 * (
Löïr›
));

4575 
	gn
 = 
£¨chKeyNum
();

4576 i‡(
	gn
 > 1 && 
	gs
->
	gÀngth
 > (¿- 1Ë* (
	gCOLS
 - 1))

4577 
	goff£t
 = (
n
 - 1Ë* (
COLS
 - 1);

4578 #ifde‡
USE_M17N


4579 
	goff£t
 < 
	gs
->
	gÀngth
 && 
	gp
[
off£t
] & 
	gPC_WCHAR2
)

4580 
	goff£t
++;

4582 
di•_mesßge_nomou£
(&
s
->
±r
[
off£t
], 
TRUE
);

4586 
DEFUN
(
vwSrc
, 
SOURCE
 
VIEW
, "View HTML source")

4588 
Buf„r
 *
	gbuf
;

4590 i‡(
	gCuºítbuf
->
	gty≥
 =
NULL
 || 
Cuºítbuf
->
buf„Ωr›
 & 
BP_FRAME
)

4592 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_SOURCE
]Ë!
NULL
 ||

4593 (
buf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_SOURCE
]Ë!
NULL
) {

4594 
Cuºítbuf
 = 
buf
;

4595 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4598 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
) {

4599 i‡(
Cuºítbuf
->
∑gîSour˚
 &&

4600 !
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/plain")) {

4601 #ifde‡
USE_M17N


4602 
wc_˚s
 
ﬁd_ch¨£t
;

4603 
wc_boﬁ
 
	gﬁd_fix_width_c⁄v
;

4605 
FILE
 *
	gf
;

4606 
Så
 
	gtmpf
 = 
tmp‚ame
(
TMPF_SRC
, 
NULL
);

4607 
	gf
 = 
f›í
(
tmpf
->
±r
, "w");

4608 i‡(
	gf
 =
NULL
)

4610 #ifde‡
USE_M17N


4611 
	gﬁd_ch¨£t
 = 
Di•œyCh¨£t
;

4612 
	gﬁd_fix_width_c⁄v
 = 
WcO±i⁄
.
fix_width_c⁄v
;

4613 
	gDi•œyCh¨£t
 = (
Cuºítbuf
->
documít_ch¨£t
 !
WC_CES_US_ASCII
)

4614 ? 
Cuºítbuf
->
documít_ch¨£t
 : 0;

4615 
	gWcO±i⁄
.
	gfix_width_c⁄v
 = 
WC_FALSE
;

4617 
ßveBuf„rBody
(
Cuºítbuf
, 
f
, 
TRUE
);

4618 #ifde‡
USE_M17N


4619 
	gDi•œyCh¨£t
 = 
ﬁd_ch¨£t
;

4620 
	gWcO±i⁄
.
	gfix_width_c⁄v
 = 
ﬁd_fix_width_c⁄v
;

4622 
f˛o£
(
f
);

4623 
	gCuºítbuf
->
	gsour˚fûe
 = 
tmpf
->
±r
;

4630 
	gbuf
 = 
√wBuf„r
(
INIT_BUFFER_WIDTH
);

4632 i‡(!
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/html")) {

4633 
	gbuf
->
	gty≥
 = "text/plain";

4634 i‡(
	gCuºítbuf
->
	gªÆ_ty≥
 &&

4635 !
°rˇ£cmp
(
Cuºítbuf
->
ªÆ_ty≥
, "text/html"))

4636 
	gbuf
->
	gªÆ_ty≥
 = "text/plain";

4638 
	gbuf
->
	gªÆ_ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4639 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("sour˚ o‡%s", 
Cuºítbuf
->
buf„∫ame
)->
	g±r
;

4640 
	gbuf
->
	glökBuf„r
[
LB_N_SOURCE
] = 
Cuºítbuf
;

4641 
	gCuºítbuf
->
	glökBuf„r
[
LB_SOURCE
] = 
buf
;

4643 i‡(!
°rˇ£cmp
(
Cuºítbuf
->
ty≥
, "text/plain")) {

4644 
	gbuf
->
	gty≥
 = "text/html";

4645 i‡(
	gCuºítbuf
->
	gªÆ_ty≥
 &&

4646 !
°rˇ£cmp
(
Cuºítbuf
->
ªÆ_ty≥
, "text/plain"))

4647 
	gbuf
->
	gªÆ_ty≥
 = "text/html";

4649 
	gbuf
->
	gªÆ_ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4650 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("HTML view of %s",

4651 
Cuºítbuf
->
buf„∫ame
)->
	g±r
;

4652 
	gbuf
->
	glökBuf„r
[
LB_SOURCE
] = 
Cuºítbuf
;

4653 
	gCuºítbuf
->
	glökBuf„r
[
LB_N_SOURCE
] = 
buf
;

4658 
	gbuf
->
	gcuºítURL
 = 
Cuºítbuf
->
cuºítURL
;

4659 
	gbuf
->
	gªÆ_scheme
 = 
Cuºítbuf
->
ªÆ_scheme
;

4660 
	gbuf
->
	gfûíame
 = 
Cuºítbuf
->
fûíame
;

4661 
	gbuf
->
	gsour˚fûe
 = 
Cuºítbuf
->
sour˚fûe
;

4662 
	gbuf
->
	ghódî_sour˚
 = 
Cuºítbuf
->
hódî_sour˚
;

4663 
	gbuf
->
	g£¨ch_hódî
 = 
Cuºítbuf
->
£¨ch_hódî
;

4664 #ifde‡
USE_M17N


4665 
	gbuf
->
	gdocumít_ch¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4667 
	gbuf
->
	g˛⁄e
 = 
Cuºítbuf
->
˛⁄e
;

4668 (*
	gbuf
->
	g˛⁄e
)++;

4670 
	gbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4671 
ªsh≠eBuf„r
(
buf
);

4672 
pushBuf„r
(
buf
);

4673 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4677 
DEFUN
(
ªlﬂd
, 
RELOAD
, "Reload buffer")

4679 
Buf„r
 *
	gbuf
, *
	gfbuf
 = 
NULL
, 
	gsbuf
;

4680 #ifde‡
USE_M17N


4681 
wc_˚s
 
	gﬁd_ch¨£t
;

4683 
Så
 
	guæ
;

4684 
F‹mLi°
 *
	gªque°
;

4685 
	gmu…ù¨t
;

4687 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
) {

4688 i‡(!
°rcmp
(
Cuºítbuf
->
buf„∫ame
, 
DOWNLOAD_LIST_TITLE
)) {

4689 
ldDL
();

4693 
di•_îr_mesßge
("C™'àªlﬂd...", 
TRUE
);

4696 i‡(
	gCuºítbuf
->
	gcuºítURL
.
	gscheme
 =
SCM_LOCAL
 &&

4697 !
°rcmp
(
Cuºítbuf
->
cuºítURL
.
fûe
, "-")) {

4700 
di•_îr_mesßge
("C™'àªlﬂd stdö", 
TRUE
);

4703 
c›yBuf„r
(&
sbuf
, 
Cuºítbuf
);

4704 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_FRAME
 &&

4705 (
	gfbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
])) {

4706 i‡(
fmInôülized
) {

4707 
mesßge
("Rendering frame", 0, 0);

4708 
ª‰esh
();

4710 i‡(!(
	gbuf
 = 
ªndîFøme
(
fbuf
, 1))) {

4711 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4714 i‡(
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]) {

4715 i‡(
	gbuf
->
	gsour˚fûe
 &&

4716 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]->
	gsour˚fûe
 &&

4717 !
°rcmp
(
buf
->
sour˚fûe
,

4718 
fbuf
->
lökBuf„r
[
LB_FRAME
]->
sour˚fûe
))

4719 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
]->
	gsour˚fûe
 = 
NULL
;

4720 
dñBuf„r
(
fbuf
->
lökBuf„r
[
LB_FRAME
]);

4722 
	gfbuf
->
	glökBuf„r
[
LB_FRAME
] = 
buf
;

4723 
	gbuf
->
	glökBuf„r
[
LB_N_FRAME
] = 
fbuf
;

4724 
pushBuf„r
(
buf
);

4725 
	gCuºítbuf
 = 
buf
;

4726 i‡(
	gCuºítbuf
->
	gfú°Löe
) {

4727 
COPY_BUFROOT
(
Cuºítbuf
, &
sbuf
);

4728 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
sbuf
);

4730 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4733 i‡(
	gCuºítbuf
->
	g‰ame£t
 !
NULL
)

4734 
fbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_FRAME
];

4735 
	gmu…ù¨t
 = 0;

4736 i‡(
	gCuºítbuf
->
	gf‹m_submô
) {

4737 
	gªque°
 = 
Cuºítbuf
->
f‹m_submô
->
∑ª¡
;

4738 i‡(
	gªque°
->
	gmëhod
 =
FORM_METHOD_POST


4739 && 
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

4740 
Så
 
quîy
;

4741 
°©
 
	g°
;

4742 
	gmu…ù¨t
 = 1;

4743 
quîy_‰om_fﬁlowf‹m
(&
quîy
, 
Cuºítbuf
->
f‹m_submô
, 
mu…ù¨t
);

4744 
°©
(
ªque°
->
body
, &
°
);

4745 
	gªque°
->
	gÀngth
 = 
°
.
°_size
;

4749 
	gªque°
 = 
NULL
;

4751 
	guæ
 = 
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
);

4753 
mesßge
("Reloading...", 0, 0);

4754 
ª‰esh
();

4755 #ifde‡
USE_M17N


4756 
	gﬁd_ch¨£t
 = 
DocumítCh¨£t
;

4757 i‡(
	gCuºítbuf
->
	gdocumít_ch¨£t
 !
WC_CES_US_ASCII
)

4758 
DocumítCh¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4760 
	gSórchHódî
 = 
Cuºítbuf
->
£¨ch_hódî
;

4761 
	gDeÁu…Ty≥
 = 
Cuºítbuf
->
ªÆ_ty≥
;

4762 
	gbuf
 = 
lﬂdGíîÆFûe
(
uæ
->
±r
, 
NULL
, 
NO_REFERER
, 
RG_NOCACHE
, 
ªque°
);

4763 #ifde‡
USE_M17N


4764 
	gDocumítCh¨£t
 = 
ﬁd_ch¨£t
;

4766 
	gSórchHódî
 = 
FALSE
;

4767 
	gDeÁu…Ty≥
 = 
NULL
;

4769 i‡(
	gmu…ù¨t
)

4770 
u∆ök
(
ªque°
->
body
);

4771 i‡(
	gbuf
 =
NULL
) {

4773 
di•_îr_mesßge
("C™'àªlﬂd...", 
TRUE
);

4776 i‡(
	gbuf
 =
NO_BUFFER
) {

4777 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4780 i‡(
	gfbuf
 !
NULL
)

4781 
Fú°buf
 = 
dñëeBuf„r
(Fú°buf, 
fbuf
);

4782 
ªpBuf„r
(
Cuºítbuf
, 
buf
);

4783 i‡((
	gbuf
->
	gty≥
 !
NULL
Ë&& (
sbuf
.
ty≥
 != NULL) &&

4784 ((!
°rˇ£cmp
(
buf
->
ty≥
, "text/plain") &&

4785 !
°rˇ£cmp
(
sbuf
.
ty≥
, "text/html")) ||

4786 (!
°rˇ£cmp
(
buf
->
ty≥
, "text/html") &&

4787 !
°rˇ£cmp
(
sbuf
.
ty≥
, "text/plain")))) {

4788 
vwSrc
();

4789 i‡(
	gCuºítbuf
 !
buf
)

4790 
Fú°buf
 = 
dñëeBuf„r
(Fú°buf, 
buf
);

4792 
	gCuºítbuf
->
	g£¨ch_hódî
 = 
sbuf
.
£¨ch_hódî
;

4793 
	gCuºítbuf
->
	gf‹m_submô
 = 
sbuf
.
f‹m_submô
;

4794 i‡(
	gCuºítbuf
->
	gfú°Löe
) {

4795 
COPY_BUFROOT
(
Cuºítbuf
, &
sbuf
);

4796 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
sbuf
);

4798 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4802 
DEFUN
(
ªsh≠e
, 
RESHAPE
, "Re-render buffer")

4804 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4805 
ªsh≠eBuf„r
(
Cuºítbuf
);

4806 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4809 #ifde‡
USE_M17N


4811 
_docCSë
(
wc_˚s
 
ch¨£t
)

4813 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4815 i‡(
	gCuºítbuf
->
	gsour˚fûe
 =
NULL
) {

4816 
di•_mesßge
("C™'àªlﬂd...", 
FALSE
);

4819 
	gCuºítbuf
->
	gdocumít_ch¨£t
 = 
ch¨£t
;

4820 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

4821 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4825 
ch™ge_ch¨£t
(
∑r£d_èg¨g
 *
¨g
)

4827 
Buf„r
 *
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_INFO
];

4828 
wc_˚s
 
	gch¨£t
;

4830 i‡(
	gbuf
 =
NULL
)

4832 
dñBuf„r
(
Cuºítbuf
);

4833 
	gCuºítbuf
 = 
buf
;

4834 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
)

4836 
	gch¨£t
 = 
Cuºítbuf
->
documít_ch¨£t
;

4837 ; 
	g¨g
;árg = 
¨g
->
√xt
) {

4838 i‡(!
°rcmp
(
¨g
->arg, "charset"))

4839 
ch¨£t
 = 
©oi
(
¨g
->
vÆue
);

4841 
_docCSë
(
ch¨£t
);

4844 
DEFUN
(
docCSë
, 
CHARSET
, "ChangeÅhe current document charset")

4846 *
	gcs
;

4847 
wc_˚s
 
	gch¨£t
;

4849 
	gcs
 = 
£¨chKeyD©a
();

4850 i‡(
	gcs
 =
NULL
 || *
cs
 == '\0')

4852 
cs
 = 
öputSå
("Document charset: ",

4853 
wc_˚s_to_ch¨£t
(
Cuºítbuf
->
documít_ch¨£t
));

4854 
	gch¨£t
 = 
wc_guess_ch¨£t_sh‹t
(
cs
, 0);

4855 i‡(
	gch¨£t
 == 0) {

4856 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4859 
_docCSë
(
ch¨£t
);

4862 
DEFUN
(
defCSë
, 
DEFAULT_CHARSET
, "ChangeÅhe default document charset")

4864 *
	gcs
;

4865 
wc_˚s
 
	gch¨£t
;

4867 
	gcs
 = 
£¨chKeyD©a
();

4868 i‡(
	gcs
 =
NULL
 || *
cs
 == '\0')

4870 
cs
 = 
öputSå
("Default document charset: ",

4871 
wc_˚s_to_ch¨£t
(
DocumítCh¨£t
));

4872 
	gch¨£t
 = 
wc_guess_ch¨£t_sh‹t
(
cs
, 0);

4873 i‡(
	gch¨£t
 != 0)

4874 
DocumítCh¨£t
 = 
ch¨£t
;

4875 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4881 
chkURLBuf„r
(
Buf„r
 *
buf
)

4883 *
	guæ_like_∑t
[] = {

4886 #ifde‡
USE_GOPHER


4890 #ifde‡
USE_NNTP


4894 #i‚de‡
USE_W3MMAILER


4897 #ifde‡
INET6


4901 
NULL


4903 
	gi
;

4904 
	gi
 = 0; 
	guæ_like_∑t
[
i
]; i++) {

4905 
ªAnch‹
(
buf
, 
uæ_like_∑t
[
i
]);

4907 #ifde‡
USE_EXTERNAL_URI_LOADER


4908 
chkExã∫ÆURIBuf„r
(
buf
);

4910 
	gbuf
->
	gcheck_uæ
 |
CHK_URL
;

4913 
DEFUN
(
chkURL
, 
MARK_URL
, "Mark URL-like stringsásánchors")

4915 
chkURLBuf„r
(
Cuºítbuf
);

4916 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4919 
DEFUN
(
chkWORD
, 
MARK_WORD
, "Mark current wordásánchor")

4921 *
	gp
;

4922 
	g•os
, 
	gïos
;

4923 
	gp
 = 
gëCurW‹d
(
Cuºítbuf
, &
•os
, &
ïos
, ":\"\'`<>()[]{}&|;*?$");

4924 i‡(
	gp
 =
NULL
)

4926 
ªAnch‹W‹d
(
Cuºítbuf
, Cuºítbuf->
cuºítLöe
, 
•os
, 
ïos
);

4927 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4930 #ifde‡
USE_NNTP


4933 
chkNMIDBuf„r
(
Buf„r
 *
buf
)

4935 *
	guæ_like_∑t
[] = {

4937 
NULL
,

4939 
	gi
;

4940 
	gi
 = 0; 
	guæ_like_∑t
[
i
]; i++) {

4941 
ªAnch‹News
(
buf
, 
uæ_like_∑t
[
i
]);

4943 
	gbuf
->
	gcheck_uæ
 |
CHK_NMID
;

4946 
DEFUN
(
chkNMID
, 
MARK_MID
, "Mark Message-ID-like stringsásánchors")

4948 
chkNMIDBuf„r
(
Cuºítbuf
);

4949 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4954 
DEFUN
(
rFøme
, 
FRAME
, "Render frame")

4956 
Buf„r
 *
	gbuf
;

4958 i‡((
	gbuf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_FRAME
]Ë!
NULL
) {

4959 
Cuºítbuf
 = 
buf
;

4960 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4963 i‡(
	gCuºítbuf
->
	g‰ame£t
 =
NULL
) {

4964 i‡((
buf
 = 
Cuºítbuf
->
lökBuf„r
[
LB_N_FRAME
]Ë!
NULL
) {

4965 
Cuºítbuf
 = 
buf
;

4966 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4970 i‡(
	gfmInôülized
) {

4971 
mesßge
("Rendering frame", 0, 0);

4972 
ª‰esh
();

4974 
	gbuf
 = 
ªndîFøme
(
Cuºítbuf
, 0);

4975 i‡(
	gbuf
 =
NULL
) {

4976 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

4979 
	gbuf
->
	glökBuf„r
[
LB_N_FRAME
] = 
Cuºítbuf
;

4980 
	gCuºítbuf
->
	glökBuf„r
[
LB_FRAME
] = 
buf
;

4981 
pushBuf„r
(
buf
);

4982 i‡(
	gfmInôülized
 && 
	gdi•œy_ok
)

4983 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

4988 
övoke_brow£r
(*
uæ
)

4990 
Så
 
	gcmd
;

4991 *
	gbrow£r
 = 
NULL
;

4992 
	gbg
 = 0, 
	gÀn
;

4994 
	gCuºítKeyD©a
 = 
NULL
;

4995 
	gbrow£r
 = 
£¨chKeyD©a
();

4996 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

4997 
¥ec_num
) {

5000 
brow£r
 = 
ExtBrow£r
;

5003 
brow£r
 = 
ExtBrow£r2
;

5006 
brow£r
 = 
ExtBrow£r3
;

5009 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

5010 
brow£r
 = 
öputSå
("Brow£ comm™d: ", 
NULL
);

5011 i‡(
	gbrow£r
 !
NULL
)

5012 
brow£r
 = 
c⁄v_to_sy°em
(browser);

5016 
	gbrow£r
 = 
c⁄v_to_sy°em
(
brow£r
);

5018 i‡(
	gbrow£r
 =
NULL
 || *
brow£r
 == '\0') {

5019 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5023 i‡((
	gÀn
 = 
°æí
(
brow£r
)Ë>2 && brow£r[
Àn
 - 1] == '&' &&

5024 
brow£r
[
Àn
 - 2] != '\\') {

5025 
brow£r
 = 
ÆlocSå
(brow£r, 
Àn
 - 2);

5026 
	gbg
 = 1;

5028 
	gcmd
 = 
myExtComm™d
(
brow£r
, 
shñl_quŸe
(
uæ
), 
FALSE
);

5029 
Såªmovëøûög•a˚s
(
cmd
);

5030 
fmTîm
();

5031 
mySy°em
(
cmd
->
±r
, 
bg
);

5032 
fmInô
();

5033 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5036 
DEFUN
(
extbrz
, 
EXTERN
, "ExecuteÉxternal browser")

5038 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
) {

5040 
di•_îr_mesßge
("C™'àbrow£...", 
TRUE
);

5043 i‡(
	gCuºítbuf
->
	gcuºítURL
.
	gscheme
 =
SCM_LOCAL
 &&

5044 !
°rcmp
(
Cuºítbuf
->
cuºítURL
.
fûe
, "-")) {

5047 
di•_îr_mesßge
("C™'àbrow£ stdö", 
TRUE
);

5050 
övoke_brow£r
(
∑r£dURL2Så
(&
Cuºítbuf
->
cuºítURL
)->
±r
);

5053 
DEFUN
(
lökbrz
, 
EXTERN_LINK
, "View currentÜink usingÉxternal browser")

5055 
Anch‹
 *
	ga
;

5056 
P¨£dURL
 
	gpu
;

5058 i‡(
	gCuºítbuf
->
	gfú°Löe
 =
NULL
)

5060 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

5061 i‡(
	ga
 =
NULL
)

5063 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
Cuºítbuf
));

5064 
övoke_brow£r
(
∑r£dURL2Så
(&
pu
)->
±r
);

5068 
DEFUN
(
cuæno
, 
LINE_INFO
, "Show currentÜineÇumber")

5070 
Löe
 *
	gl
 = 
Cuºítbuf
->
cuºítLöe
;

5071 
Så
 
	gtmp
;

5072 
	gcur
 = 0, 
	gÆl
 = 0, 
	gcﬁ
 = 0, 
	gÀn
 = 0;

5074 i‡(
	gl
 !
NULL
) {

5075 
cur
 = 
l
->
ªÆ_löíumbî
;

5076 
	gcﬁ
 = 
l
->
bwidth
 + 
Cuºítbuf
->
cuºítCﬁumn
 + Cuºítbuf->
curs‹X
 + 1;

5077 
	gl
->
	g√xt
 &&Ü->√xt->
	gbpos
)

5078 
	gl
 = 
l
->
√xt
;

5079 i‡(
	gl
->
	gwidth
 < 0)

5080 
	gl
->
	gwidth
 = 
COLPOS
(
l
,Ü->
Àn
);

5081 
	gÀn
 = 
l
->
bwidth
 +Ü->
width
;

5083 i‡(
	gCuºítbuf
->
	gœ°Löe
)

5084 
	gÆl
 = 
Cuºítbuf
->
œ°Löe
->
ªÆ_löíumbî
;

5085 i‡(
	gCuºítbuf
->
	g∑gîSour˚
 && !(Cuºítbuf->
	gbuf„Ωr›
 & 
	gBP_CLOSE
))

5086 
	gtmp
 = 
S¥ötf
("löê%d cﬁ %d/%d", 
cur
, 
cﬁ
, 
Àn
);

5088 
	gtmp
 = 
S¥ötf
("löê%d/%d (%d%%Ëcﬁ %d/%d", 
cur
, 
Æl
,

5089 ()(()
cur
 * 100.0 / ()(
Æl
 ?áll : 1)

5090 + 0.5), 
cﬁ
, 
Àn
);

5091 #ifde‡
USE_M17N


5092 
Såˇt_ch¨p
(
tmp
, " ");

5093 
Såˇt_ch¨p
(
tmp
, 
wc_˚s_to_ch¨£t_desc
(
Cuºítbuf
->
documít_ch¨£t
));

5096 
di•_mesßge
(
tmp
->
±r
, 
FALSE
);

5099 #ifde‡
USE_IMAGE


5100 
DEFUN
(
di•I
, 
DISPLAY_IMAGE
, "RestartÜoadingánd drawing of images")

5102 i‡(!
	gdi•œyImage
)

5103 
öôImage
();

5104 i‡(!
	ga˘iveImage
)

5106 
	gdi•œyImage
 = 
TRUE
;

5111 
	gCuºítbuf
->
	gimage_Êag
 = 
IMG_FLAG_AUTO
;

5112 
	gCuºítbuf
->
	g√ed_ªsh≠e
 = 
TRUE
;

5113 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5116 
DEFUN
(
°›I
, 
STOP_IMAGE
, "StopÜoadingánd drawing of images")

5118 i‡(!
	ga˘iveImage
)

5124 
	gCuºítbuf
->
	gimage_Êag
 = 
IMG_FLAG_SKIP
;

5125 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

5129 #ifde‡
USE_MOUSE


5132 
mou£_s¸ﬁl_löe
()

5134 i‡(
	gªœtive_whìl_s¸ﬁl
)

5135  (
ªœtive_whìl_s¸ﬁl_øtio
 * 
	gLASTLINE
 + 99) / 100;

5137  
	gfixed_whìl_s¸ﬁl_cou¡
;

5140 
TabBuf„r
 *

5141 
posTab
(
x
, 
y
)

5143 
TabBuf„r
 *
	gèb
;

5145 i‡(
	gmou£_a˘i⁄
.
	gmíu_°r
 && 
	gx
 < mou£_a˘i⁄.
	gmíu_width
 && 
	gy
 == 0)

5146  
NO_TABBUFFER
;

5147 i‡(
	gy
 > 
	gLa°Tab
->y)

5148  
	gNULL
;

5149 
	gèb
 = 
Fú°Tab
;Åab;Åab = 
èb
->
√xtTab
) {

5150 i‡(
èb
->
x1
 <
x
 && x <èb->
x2
 &&Åab->
y
 == y)

5151  
èb
;

5153  
	gNULL
;

5157 
do_mou£_a˘i⁄
(
bä
, 
x
, 
y
)

5159 
Mou£A˘i⁄M≠
 *
	gm≠
 = 
NULL
;

5160 
	gny
 = -1;

5162 i‡(
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
)

5163 
	gny
 = 
La°Tab
->
y
 + 1;

5165 
	gbä
) {

5166 
	gMOUSE_BTN1_DOWN
:

5167 
bä
 = 0;

5169 
	gMOUSE_BTN2_DOWN
:

5170 
bä
 = 1;

5172 
	gMOUSE_BTN3_DOWN
:

5173 
bä
 = 2;

5178 i‡(
	gy
 < 
	gny
) {

5179 i‡(
	gmou£_a˘i⁄
.
	gmíu_°r
 && 
	gx
 >0 && 
x
 < 
mou£_a˘i⁄
.
míu_width
) {

5180 i‡(
mou£_a˘i⁄
.
míu_m≠
[
bä
])

5181 
m≠
 = &
mou£_a˘i⁄
.
míu_m≠
[
bä
][
x
];

5184 
	gm≠
 = &
mou£_a˘i⁄
.
èb_m≠
[
bä
];

5186 i‡(
	gy
 =
LASTLINE
) {

5187 i‡(
mou£_a˘i⁄
.
œ°löe_°r
 && 
x
 >= 0 &&

5188 
x
 < 
mou£_a˘i⁄
.
œ°löe_width
) {

5189 i‡(
mou£_a˘i⁄
.
œ°löe_m≠
[
bä
])

5190 
m≠
 = &
mou£_a˘i⁄
.
œ°löe_m≠
[
bä
][
x
];

5193 i‡(
	gy
 > 
	gny
) {

5194 i‡(
	gy
 =
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
 &&

5195 (
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX


5196 #ifde‡
USE_M17N


5197 || (
WcO±i⁄
.
u£_wide
 && 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5198 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->
¥›Buf
[Cuºítbuf->
pos
])

5199 =
PC_KANJI1
)

5200 && 
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
 + 1)

5203 i‡(
ªåõveCuºítAnch‹
(
Cuºítbuf
) ||

5204 
ªåõveCuºítF‹m
(
Cuºítbuf
)) {

5205 
m≠
 = &
mou£_a˘i⁄
.
a˘ive_m≠
[
bä
];

5206 i‡(!(
	gm≠
 && m≠->
	gfunc
))

5207 
	gm≠
 = &
mou£_a˘i⁄
.
™ch‹_m≠
[
bä
];

5211 
	gcx
 = 
Cuºítbuf
->
curs‹X
, 
	gcy
 = Cuºítbuf->
curs‹Y
;

5212 
curs‹XY
(
Cuºítbuf
, 
x
 - Cuºítbuf->
roŸX
, 
y
 - Cuºítbuf->
roŸY
);

5213 i‡(
	gy
 =
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
 &&

5214 (
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX


5215 #ifde‡
USE_M17N


5216 || (
WcO±i⁄
.
u£_wide
 && 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5217 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->

5218 
¥›Buf
[
Cuºítbuf
->
pos
]Ë=
PC_KANJI1
)

5219 && 
x
 =
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
 + 1)

5222 (
ªåõveCuºítAnch‹
(
Cuºítbuf
) ||

5223 
ªåõveCuºítF‹m
(
Cuºítbuf
)))

5224 
m≠
 = &
mou£_a˘i⁄
.
™ch‹_m≠
[
bä
];

5225 
curs‹XY
(
Cuºítbuf
, 
cx
, 
cy
);

5231 i‡(!(
	gm≠
 && m≠->
	gfunc
))

5232 
	gm≠
 = &
mou£_a˘i⁄
.
deÁu…_m≠
[
bä
];

5233 i‡(
	gm≠
 && m≠->
	gfunc
) {

5234 
	gmou£_a˘i⁄
.
	gö_a˘i⁄
 = 
TRUE
;

5235 
	gmou£_a˘i⁄
.
	gcurs‹X
 = 
x
;

5236 
	gmou£_a˘i⁄
.
	gcurs‹Y
 = 
y
;

5237 
	gCuºítKey
 = -1;

5238 
	gCuºítKeyD©a
 = 
NULL
;

5239 
	gCuºítCmdD©a
 = 
m≠
->
d©a
;

5240 (*
	gm≠
->
	gfunc
) ();

5241 
	gCuºítCmdD©a
 = 
NULL
;

5246 
¥o˚ss_mou£
(
bä
, 
x
, 
y
)

5248 
	gdñè_x
, 
	gdñè_y
, 
	gi
;

5249 
	g¥ess_bä
 = 
MOUSE_BTN_RESET
, 
	g¥ess_x
, 
	g¥ess_y
;

5250 
TabBuf„r
 *
	gt
;

5251 
	gny
 = -1;

5253 i‡(
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
)

5254 
	gny
 = 
La°Tab
->
y
 + 1;

5255 i‡(
	gbä
 =
MOUSE_BTN_UP
) {

5256 
¥ess_bä
) {

5257 
MOUSE_BTN1_DOWN
:

5258 i‡(
¥ess_y
 =
y
 && 
¥ess_x
 =
x
)

5259 
do_mou£_a˘i⁄
(
¥ess_bä
, 
x
, 
y
);

5260 i‡(
	gny
 > 0 && 
	gy
 <Çy) {

5261 i‡(
	g¥ess_y
 < 
	gny
) {

5262 
moveTab
(
posTab
(
¥ess_x
, 
¥ess_y
),ÖosTab(
x
, 
y
),

5263 (
¥ess_y
 =
y
Ë? (
¥ess_x
 < 
x
) : (press_y < y));

5266 i‡(
	g¥ess_x
 >
Cuºítbuf
->
roŸX
) {

5267 
Buf„r
 *
buf
 = 
Cuºítbuf
;

5268 
	gcx
 = 
Cuºítbuf
->
curs‹X
, 
	gcy
 = Cuºítbuf->
curs‹Y
;

5270 
	gt
 = 
posTab
(
x
, 
y
);

5271 i‡(
	gt
 =
NULL
)

5273 i‡(
	gt
 =
NO_TABBUFFER
)

5274 
t
 = 
NULL
;

5275 
curs‹XY
(
Cuºítbuf
, 
¥ess_x
 - Cuºítbuf->
roŸX
,

5276 
¥ess_y
 - 
Cuºítbuf
->
roŸY
);

5277 i‡(
	gCuºítbuf
->
	gcurs‹Y
 =
¥ess_y
 - 
Cuºítbuf
->
roŸY
 &&

5278 (
Cuºítbuf
->
curs‹X
 =
¥ess_x
 - Cuºítbuf->
roŸX


5279 #ifde‡
USE_M17N


5280 || (
WcO±i⁄
.
u£_wide
 &&

5281 
Cuºítbuf
->
cuºítLöe
 !
NULL
 &&

5282 (
Ch¨Ty≥
(
Cuºítbuf
->
cuºítLöe
->

5283 
¥›Buf
[
Cuºítbuf
->
pos
]Ë=
PC_KANJI1
)

5284 && 
Cuºítbuf
->
curs‹X
 =
¥ess_x


5285 - 
Cuºítbuf
->
roŸX
 - 1)

5288 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5289 
fﬁlowTab
(
t
);

5291 i‡(
	gbuf
 =
Cuºítbuf
)

5292 
curs‹XY
(
Cuºítbuf
, 
cx
, 
cy
);

5297 
	gdñè_x
 = 
x
 - 
¥ess_x
;

5298 
	gdñè_y
 = 
y
 - 
¥ess_y
;

5300 i‡(
abs
(
dñè_x
Ë<ábs(
dñè_y
) / 3)

5301 
	gdñè_x
 = 0;

5302 i‡(
abs
(
dñè_y
Ë<ábs(
dñè_x
) / 3)

5303 
	gdñè_y
 = 0;

5304 i‡(
	gªvî£_mou£
) {

5305 
	gdñè_y
 = -
dñè_y
;

5306 
	gdñè_x
 = -
dñè_x
;

5308 i‡(
	gdñè_y
 > 0) {

5309 
	g¥ec_num
 = 
dñè_y
;

5310 
ldown1
();

5312 i‡(
	gdñè_y
 < 0) {

5313 
	g¥ec_num
 = -
dñè_y
;

5314 
lup1
();

5316 i‡(
	gdñè_x
 > 0) {

5317 
	g¥ec_num
 = 
dñè_x
;

5318 
cﬁ1L
();

5320 i‡(
	gdñè_x
 < 0) {

5321 
	g¥ec_num
 = -
dñè_x
;

5322 
cﬁ1R
();

5326 
	gMOUSE_BTN2_DOWN
:

5327 
MOUSE_BTN3_DOWN
:

5328 i‡(
¥ess_y
 =
y
 && 
¥ess_x
 =
x
)

5329 
do_mou£_a˘i⁄
(
¥ess_bä
, 
x
, 
y
);

5331 
	gMOUSE_BTN4_DOWN_RXVT
:

5332 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5333 
ldown1
();

5335 
	gMOUSE_BTN5_DOWN_RXVT
:

5336 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5337 
lup1
();

5341 i‡(
	gbä
 =
MOUSE_BTN4_DOWN_XTERM
) {

5342 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5343 
ldown1
();

5345 i‡(
	gbä
 =
MOUSE_BTN5_DOWN_XTERM
) {

5346 
i
 = 0; 
	gi
 < 
mou£_s¸ﬁl_löe
(); i++)

5347 
lup1
();

5350 i‡(
	gbä
 !
MOUSE_BTN4_DOWN_RXVT
 || 
¥ess_bä
 =
MOUSE_BTN_RESET
) {

5351 
¥ess_bä
 = 
bä
;

5352 
	g¥ess_x
 = 
x
;

5353 
	g¥ess_y
 = 
y
;

5356 
	g¥ess_bä
 = 
MOUSE_BTN_RESET
;

5360 
DEFUN
(
msToggÀ
, 
MOUSE_TOGGLE
, "Toggleáctivity of mouse")

5362 i‡(
	gu£_mou£
) {

5363 
	gu£_mou£
 = 
FALSE
;

5366 
	gu£_mou£
 = 
TRUE
;

5368 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5371 
DEFUN
(
mou£
, 
MOUSE
, "mouse operation")

5373 
	gbä
, 
	gx
, 
	gy
;

5375 
	gbä
 = ()
gëch
() - 32;

5376 #i‡
deföed
(
__CYGWIN__
Ë&& 
CYGWIN_VERSION_DLL_MAJOR
 < 1005

5377 i‡(
	gcygwö_mou£_bä_sw≠≥d
) {

5378 i‡(
	gbä
 =
MOUSE_BTN2_DOWN
)

5379 
bä
 = 
MOUSE_BTN3_DOWN
;

5380 i‡(
	gbä
 =
MOUSE_BTN3_DOWN
)

5381 
bä
 = 
MOUSE_BTN2_DOWN
;

5384 
	gx
 = ()
gëch
() - 33;

5385 i‡(
	gx
 < 0)

5386 
	gx
 += 0x100;

5387 
	gy
 = ()
gëch
() - 33;

5388 i‡(
	gy
 < 0)

5389 
	gy
 += 0x100;

5391 i‡(
	gx
 < 0 || x >
COLS
 || 
y
 < 0 || y > 
LASTLINE
)

5393 
¥o˚ss_mou£
(
bä
, 
x
, 
y
);

5396 #ifde‡
USE_GPM


5398 
gpm_¥o˚ss_mou£
(
Gpm_Evít
 * 
evít
, *
d©a
)

5400 
	gbä
 = 
MOUSE_BTN_RESET
, 
	gx
, 
	gy
;

5401 i‡(
	gevít
->
	gty≥
 & 
	gGPM_UP
)

5402 
	gbä
 = 
MOUSE_BTN_UP
;

5403 i‡(
	gevít
->
	gty≥
 & 
	gGPM_DOWN
) {

5404 
	gevít
->
	gbuâ⁄s
) {

5405 
	gGPM_B_LEFT
:

5406 
bä
 = 
MOUSE_BTN1_DOWN
;

5408 
	gGPM_B_MIDDLE
:

5409 
bä
 = 
MOUSE_BTN2_DOWN
;

5411 
	gGPM_B_RIGHT
:

5412 
bä
 = 
MOUSE_BTN3_DOWN
;

5417 
GPM_DRAWPOINTER
(
evít
);

5420 
	gx
 = 
evít
->
x
;

5421 
	gy
 = 
evít
->
y
;

5422 
¥o˚ss_mou£
(
bä
, 
x
 - 1, 
y
 - 1);

5427 #ifde‡
USE_SYSMOUSE


5429 
sysm_¥o˚ss_mou£
(
x
, 
y
, 
nbs
, 
obs
)

5431 
	gbä
;

5432 
	gbôs
;

5434 i‡(
	gobs
 & ~
	gnbs
)

5435 
	gbä
 = 
MOUSE_BTN_UP
;

5436 i‡(
	gnbs
 & ~
	gobs
) {

5437 
	gbôs
 = 
nbs
 & ~
obs
;

5438 
	gbä
 = 
bôs
 & 0x1 ? 
MOUSE_BTN1_DOWN
 :

5439 (
bôs
 & 0x2 ? 
MOUSE_BTN2_DOWN
 :

5440 (
bôs
 & 0x4 ? 
MOUSE_BTN3_DOWN
 : 0));

5444 
¥o˚ss_mou£
(
bä
, 
x
, 
y
);

5449 
DEFUN
(
movMs
, 
MOVE_MOUSE
, "Move cursorÅo mouse cursor (for mouseáction)")

5451 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5453 i‡((
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
) &&

5454 
	gmou£_a˘i⁄
.
	gcurs‹Y
 < 
	gLa°Tab
->
	gy
 + 1)

5456 i‡(
	gmou£_a˘i⁄
.
	gcurs‹X
 >
Cuºítbuf
->
roŸX
 &&

5457 
mou£_a˘i⁄
.
curs‹Y
 < 
LASTLINE
) {

5458 
curs‹XY
(
Cuºítbuf
, 
mou£_a˘i⁄
.
curs‹X
 - Cuºítbuf->
roŸX
,

5459 
mou£_a˘i⁄
.
curs‹Y
 - 
Cuºítbuf
->
roŸY
);

5461 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5464 #ifde‡
USE_MENU


5465 #ifde‡
KANJI_SYMBOLS


5466 
	#FRAME_WIDTH
 2

	)

5468 
	#FRAME_WIDTH
 1

	)

5471 
DEFUN
(
míuMs
, 
MENU_MOUSE
, "Popup menuát mouse cursor (for mouseáction)")

5473 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5475 i‡((
	gnTab
 > 1 || 
	gmou£_a˘i⁄
.
	gmíu_°r
) &&

5476 
	gmou£_a˘i⁄
.
	gcurs‹Y
 < 
	gLa°Tab
->
	gy
 + 1)

5477 
	gmou£_a˘i⁄
.
	gcurs‹X
 -
FRAME_WIDTH
 + 1;

5478 i‡(
	gmou£_a˘i⁄
.
	gcurs‹X
 >
Cuºítbuf
->
roŸX
 &&

5479 
mou£_a˘i⁄
.
curs‹Y
 < 
LASTLINE
) {

5480 
curs‹XY
(
Cuºítbuf
, 
mou£_a˘i⁄
.
curs‹X
 - Cuºítbuf->
roŸX
,

5481 
mou£_a˘i⁄
.
curs‹Y
 - 
Cuºítbuf
->
roŸY
);

5482 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5484 
maöMn
();

5488 
DEFUN
(
èbMs
, 
TAB_MOUSE
, "MoveÅoÅab on mouse cursor (for mouseáction)")

5490 
TabBuf„r
 *
	gèb
;

5492 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5494 
	gèb
 = 
posTab
(
mou£_a˘i⁄
.
curs‹X
, mou£_a˘i⁄.
curs‹Y
);

5495 i‡(!
	gèb
 ||Åab =
NO_TABBUFFER
)

5497 
	gCuºítTab
 = 
èb
;

5498 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5501 
DEFUN
(
˛o£TMs
, 
CLOSE_TAB_MOUSE
,

5504 
TabBuf„r
 *
	gèb
;

5506 i‡(!
	gmou£_a˘i⁄
.
	gö_a˘i⁄
)

5508 
	gèb
 = 
posTab
(
mou£_a˘i⁄
.
curs‹X
, mou£_a˘i⁄.
curs‹Y
);

5509 i‡(!
	gèb
 ||Åab =
NO_TABBUFFER
)

5511 
dñëeTab
(
èb
);

5512 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5516 
DEFUN
(
di•Vî
, 
VERSION
, "Display version of w3m")

5518 
di•_mesßge
(
S¥ötf
("w3m vîsi⁄ %s", 
w3m_vîsi⁄
)->
±r
, 
TRUE
);

5521 
DEFUN
(
wøpToggÀ
, 
WRAP_TOGGLE
, "Toggle wrap search mode")

5523 i‡(
	gWøpSórch
) {

5524 
	gWøpSórch
 = 
FALSE
;

5526 
di•_mesßge
("Wø∞£¨ch off", 
TRUE
);

5529 
	gWøpSórch
 = 
TRUE
;

5531 
di•_mesßge
("Wø∞£¨ch on", 
TRUE
);

5536 
is_w‹dch¨
(
c
, c⁄° *
badch¨s
)

5538 i‡(
	gbadch¨s
)

5539  !(
IS_SPACE
(
c
Ë|| 
°rchr
(
badch¨s
, c));

5541  
IS_ALPHA
(
c
);

5545 
gëCurW‹d
(
Buf„r
 *
buf
, *
•os
, *
ïos
, c⁄° *
badch¨s
)

5547 *
	gp
;

5548 
Löe
 *
	gl
 = 
buf
->
cuºítLöe
;

5549 
	gb
, 
	ge
;

5551 *
	g•os
 = 0;

5552 *
	gïos
 = 0;

5553 i‡(
	gl
 =
NULL
)

5554  
NULL
;

5555 
	gp
 = 
l
->
löeBuf
;

5556 
	ge
 = 
buf
->
pos
;

5557 
	ge
 > 0 && !
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5558 
	ge
--;

5559 i‡(!
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5560  
	gNULL
;

5561 
	gb
 = 
e
;

5562 
	gb
 > 0 && 
is_w‹dch¨
(
p
[
b
 - 1], 
badch¨s
))

5563 
	gb
--;

5564 
	ge
 < 
	gl
->
	gÀn
 && 
is_w‹dch¨
(
p
[
e
], 
badch¨s
))

5565 
	ge
++;

5566 *
	g•os
 = 
b
;

5567 *
	gïos
 = 
e
;

5568  &
	gp
[
b
];

5572 
GëW‹d
(
Buf„r
 *
buf
)

5574 
	gb
, 
	ge
;

5575 *
	gp
;

5577 i‡((
	gp
 = 
gëCurW‹d
(
buf
, &
b
, &
e
, 0)Ë!
NULL
) {

5578  
Så√w_ch¨p_n
(
p
, 
e
 - 
b
)->
±r
;

5580  
	gNULL
;

5583 #ifde‡
USE_DICT


5585 
execdi˘
(*
w‹d
)

5587 *
	gw
, *
	gdi˘cmd
;

5588 
Buf„r
 *
	gbuf
;

5590 i‡(!
	gU£Di˘Comm™d
 || 
	gw‹d
 =
NULL
 || *
w‹d
 == '\0') {

5591 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5594 
	gw
 = 
c⁄v_to_sy°em
(
w‹d
);

5595 i‡(*
	gw
 == '\0') {

5596 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5599 
	gdi˘cmd
 = 
S¥ötf
("%s?%s", 
Di˘Comm™d
,

5600 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w
))->
±r
)->
	g±r
;

5601 
	gbuf
 = 
lﬂdGíîÆFûe
(
di˘cmd
, 
NULL
, 
NO_REFERER
, 0, NULL);

5602 i‡(
	gbuf
 =
NULL
) {

5603 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

5607 
	gbuf
->
	gfûíame
 = 
w
;

5608 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
DICTBUFFERNAME
, 
w‹d
)->
	g±r
;

5609 i‡(
	gbuf
->
	gty≥
 =
NULL
)

5610 
buf
->
ty≥
 = "text/plain";

5611 
pushBuf„r
(
buf
);

5613 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5616 
DEFUN
(
di˘w‹d
, 
DICT_WORD
, "Execute dictionary command (see README.dict)")

5618 
execdi˘
(
öputSåHi°
("(di˘i⁄¨y)!", "", 
Di˘Hi°
));

5621 
DEFUN
(
di˘w‹d©
, 
DICT_WORD_AT
,

5624 
execdi˘
(
GëW‹d
(
Cuºítbuf
));

5628 #ifde‡
USE_GOOGLE


5630 
execgoogÀ
(*
w‹d
)

5632 *
	gw
, *
	gdi˘cmd
;

5633 
Buf„r
 *
	gbuf
;

5635 i‡(!
	gU£GoogÀComm™d
 || 
	gw‹d
 =
NULL
 || *
w‹d
 == '\0') {

5636 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5639 
	gw
 = 
c⁄v_to_sy°em
(
w‹d
);

5640 i‡(*
	gw
 == '\0') {

5641 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5644 
	gdi˘cmd
 = 
S¥ötf
("%s?%s", 
GoogÀComm™d
,

5645 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w
))->
±r
)->
	g±r
;

5646 
	gbuf
 = 
lﬂdGíîÆFûe
(
di˘cmd
, 
NULL
, 
NO_REFERER
, 0, NULL);

5647 i‡(
	gbuf
 =
NULL
) {

5648 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

5652 
	gbuf
->
	gfûíame
 = 
w
;

5653 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
GOOGLEBUFFERNAME
, 
w‹d
)->
	g±r
;

5654 i‡(
	gbuf
->
	gty≥
 =
NULL
)

5655 
buf
->
ty≥
 = "text/plain";

5656 
pushBuf„r
(
buf
);

5658 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5661 
DEFUN
(
googÀw‹d
, 
GOOGLE_WORD
, "Execute google search (see README.google)")

5663 
execgoogÀ
(
öputSåHi°
("(googÀ)!", "", 
GoogÀHi°
));

5666 
DEFUN
(
googÀw‹d©
, 
GOOGLE_WORD_AT
,

5669 
execgoogÀ
(
GëW‹d
(
Cuºítbuf
));

5672 #ifde‡
USE_GOOGLE_LUCKY


5674 
execgoogÀlucky
(*
w‹d
)

5676 *
	gw
, *
	gdi˘cmd
;

5677 
Buf„r
 *
	gbuf
;

5679 i‡(!
	gU£GoogÀLuckyComm™d
 || 
	gw‹d
 =
NULL
 || *
w‹d
 == '\0') {

5680 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5683 
	gw
 = 
c⁄v_to_sy°em
(
w‹d
);

5684 i‡(*
	gw
 == '\0') {

5685 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5688 
	gdi˘cmd
 = 
S¥ötf
("%s?%s", 
GoogÀLuckyComm™d
,

5689 
Så_f‹m_quŸe
(
Så√w_ch¨p
(
w
))->
±r
)->
	g±r
;

5690 
	gbuf
 = 
lﬂdGíîÆFûe
(
di˘cmd
, 
NULL
, 
NO_REFERER
, 0, NULL);

5691 i‡(
	gbuf
 =
NULL
) {

5692 
di•_mesßge
("Executi⁄ faûed", 
TRUE
);

5696 
	gbuf
->
	gfûíame
 = 
w
;

5697 
	gbuf
->
	gbuf„∫ame
 = 
S¥ötf
("%†%s", 
GOOGLELUCKYBUFFERNAME
, 
w‹d
)->
	g±r
;

5698 i‡(
	gbuf
->
	gty≥
 =
NULL
)

5699 
buf
->
ty≥
 = "text/plain";

5700 
pushBuf„r
(
buf
);

5702 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

5705 
DEFUN
(
googÀluckyw‹d
, 
GOOGLE_LUCKY_WORD
, "Execute googleÜucky search (see README.google.lucky)")

5707 
execgoogÀlucky
(
öputSåHi°
("(googÀÜucky)!", "", 
GoogÀLuckyHi°
));

5710 
DEFUN
(
googÀluckyw‹d©
, 
GOOGLE_LUCKY_WORD_AT
,

5713 
execgoogÀlucky
(
GëW‹d
(
Cuºítbuf
));

5718 
£t_buf„r_ívú⁄
(
Buf„r
 *
buf
)

5720 
Buf„r
 *
	g¥ev_buf
 = 
NULL
;

5721 
Löe
 *
	g¥ev_löe
 = 
NULL
;

5722 
	g¥ev_pos
 = -1;

5723 
Löe
 *
	gl
;

5725 i‡(
	gbuf
 =
NULL
)

5727 i‡(
	gbuf
 !
¥ev_buf
) {

5728 
£t_ívú⁄
("W3M_SOURCEFILE", 
buf
->
sour˚fûe
);

5729 
£t_ívú⁄
("W3M_FILENAME", 
buf
->
fûíame
);

5730 
£t_ívú⁄
("W3M_TITLE", 
buf
->
buf„∫ame
);

5731 
£t_ívú⁄
("W3M_URL", 
∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
);

5732 
£t_ívú⁄
("W3M_TYPE", 
buf
->
ªÆ_ty≥
 ? buf->real_type : "unknown");

5733 #ifde‡
USE_M17N


5734 
£t_ívú⁄
("W3M_CHARSET", 
wc_˚s_to_ch¨£t
(
buf
->
documít_ch¨£t
));

5737 
	gl
 = 
buf
->
cuºítLöe
;

5738 i‡(
	gl
 && (
	gbuf
 !
¥ev_buf
 || 
l
 !
¥ev_löe
 || 
buf
->
pos
 !
¥ev_pos
)) {

5739 
Anch‹
 *
a
;

5740 
P¨£dURL
 
	gpu
;

5741 *
	gs
 = 
GëW‹d
(
buf
);

5742 
£t_ívú⁄
("W3M_CURRENT_WORD", 
s
 ? s : "");

5743 
	ga
 = 
ªåõveCuºítAnch‹
(
buf
);

5744 i‡(
	ga
) {

5745 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
buf
));

5746 
£t_ívú⁄
("W3M_CURRENT_LINK", 
∑r£dURL2Så
(&
pu
)->
±r
);

5749 
£t_ívú⁄
("W3M_CURRENT_LINK", "");

5750 
	ga
 = 
ªåõveCuºítImg
(
buf
);

5751 i‡(
	ga
) {

5752 
∑r£URL2
(
a
->
uæ
, &
pu
, 
ba£URL
(
buf
));

5753 
£t_ívú⁄
("W3M_CURRENT_IMG", 
∑r£dURL2Så
(&
pu
)->
±r
);

5756 
£t_ívú⁄
("W3M_CURRENT_IMG", "");

5757 
	ga
 = 
ªåõveCuºítF‹m
(
buf
);

5758 i‡(
	ga
)

5759 
£t_ívú⁄
("W3M_CURRENT_FORM", 
f‹m2°r
((
F‹mIãmLi°
 *)
a
->
uæ
));

5761 
£t_ívú⁄
("W3M_CURRENT_FORM", "");

5762 
£t_ívú⁄
("W3M_CURRENT_LINE", 
S¥ötf
("%d",

5763 
l
->
ªÆ_löíumbî
)->
±r
);

5764 
£t_ívú⁄
("W3M_CURRENT_COLUMN", 
S¥ötf
("%d",

5765 
buf
->
cuºítCﬁumn
 +

5766 
buf
->
curs‹X
 + 1)->
±r
);

5768 i‡(!
	gl
) {

5769 
£t_ívú⁄
("W3M_CURRENT_WORD", "");

5770 
£t_ívú⁄
("W3M_CURRENT_LINK", "");

5771 
£t_ívú⁄
("W3M_CURRENT_IMG", "");

5772 
£t_ívú⁄
("W3M_CURRENT_FORM", "");

5773 
£t_ívú⁄
("W3M_CURRENT_LINE", "0");

5774 
£t_ívú⁄
("W3M_CURRENT_COLUMN", "0");

5776 
	g¥ev_buf
 = 
buf
;

5777 
	g¥ev_löe
 = 
l
;

5778 
	g¥ev_pos
 = 
buf
->
pos
;

5782 
£¨chKeyD©a
()

5784 *
	gd©a
 = 
NULL
;

5786 i‡(
	gCuºítKeyD©a
 !
NULL
 && *
CuºítKeyD©a
 != '\0')

5787 
d©a
 = 
CuºítKeyD©a
;

5788 i‡(
	gCuºítCmdD©a
 !
NULL
 && *
CuºítCmdD©a
 != '\0')

5789 
d©a
 = 
CuºítCmdD©a
;

5790 i‡(
	gCuºítKey
 >= 0)

5791 
d©a
 = 
gëKeyD©a
(
CuºítKey
);

5792 
	gCuºítKeyD©a
 = 
NULL
;

5793 
	gCuºítCmdD©a
 = 
NULL
;

5794 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0')

5795  
NULL
;

5796  
ÆlocSå
(
d©a
, -1);

5800 
£¨chKeyNum
()

5802 *
	gd
;

5803 
	gn
 = 1;

5805 
	gd
 = 
£¨chKeyD©a
();

5806 i‡(
	gd
 !
NULL
)

5807 
n
 = 
©oi
(
d
);

5808  
n
 * 
	gPREC_NUM
;

5811 #ifde‡
__EMX__


5812 #ifde‡
USE_M17N


5814 
gëCodePage
()

5816 
	gCpLi°
[8], 
	gCpSize
;

5818 i‡(!
gëív
("WINDOWID"Ë&& !
DosQuîyCp
((
CpLi°
), CpLi°, &
CpSize
))

5819  
S¥ötf
("CP%d", *
CpLi°
)->
	g±r
;

5820  
	gNULL
;

5826 
dñëeFûes
()

5828 
Buf„r
 *
	gbuf
;

5829 *
	gf
;

5831 
	gCuºítTab
 = 
Fú°Tab
; CuºítTab; CuºítTab = 
CuºítTab
->
√xtTab
) {

5832 
Fú°buf
 && Fú°bu‡!
NO_BUFFER
) {

5833 
buf
 = 
Fú°buf
->
√xtBuf„r
;

5834 
disˇrdBuf„r
(
Fú°buf
);

5835 
	gFú°buf
 = 
buf
;

5838 (
	gf
 = 
p›Text
(
fûeToDñëe
)Ë!
NULL
)

5839 
u∆ök
(
f
);

5843 
w3m_exô
(
i
)

5845 #ifde‡
USE_MIGEMO


5846 
öô_migemo
();

5848 
°›Dow∆ﬂd
();

5849 
dñëeFûes
();

5850 #ifde‡
USE_SSL


5851 
‰ì_s¶_˘x
();

5853 
disc⁄√˘FTP
();

5854 #ifde‡
USE_NNTP


5855 
disc⁄√˘News
();

5857 #ifde‡
__MINGW32_VERSION


5858 
WSACÀ™up
();

5860 
exô
(
i
);

5863 
DEFUN
(
execCmd
, 
COMMAND
, "Execute w3m command(s)")

5865 *
	gd©a
, *
	gp
;

5866 
	gcmd
;

5868 
	gCuºítKeyD©a
 = 
NULL
;

5869 
	gd©a
 = 
£¨chKeyD©a
();

5870 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5871 
d©a
 = 
öputSåHi°
("comm™d [; ...]: ", "", 
TextHi°
);

5872 i‡(
	gd©a
 =
NULL
) {

5873 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5878 *
	gd©a
) {

5879 
SKIP_BLANKS
(
d©a
);

5880 i‡(*
	gd©a
 == ';') {

5881 
d©a
++;

5884 
	gp
 = 
gëW‹d
(&
d©a
);

5885 
	gcmd
 = 
gëFuncLi°
(
p
);

5886 i‡(
	gcmd
 < 0)

5888 
	gp
 = 
gëQW‹d
(&
d©a
);

5889 
	gCuºítKey
 = -1;

5890 
	gCuºítKeyD©a
 = 
NULL
;

5891 
	gCuºítCmdD©a
 = *
p
 ?Ö : 
NULL
;

5892 #ifde‡
USE_MOUSE


5893 i‡(
	gu£_mou£
)

5894 
mou£_öa˘ive
();

5896 
	gw3mFuncLi°
[
cmd
].
func
();

5897 #ifde‡
USE_MOUSE


5898 i‡(
	gu£_mou£
)

5899 
mou£_a˘ive
();

5901 
	gCuºítCmdD©a
 = 
NULL
;

5903 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5906 #ifde‡
USE_ALARM


5907 
MySig«lH™dÀr


5908 
SigAœrm
(
SIGNAL_ARG
)

5910 *
	gd©a
;

5912 i‡(
	gCuºítAœrm
->
	g£c
 > 0) {

5913 
	gCuºítKey
 = -1;

5914 
	gCuºítKeyD©a
 = 
NULL
;

5915 
	gCuºítCmdD©a
 = 
d©a
 = (*)
CuºítAœrm
->data;

5916 #ifde‡
USE_MOUSE


5917 i‡(
	gu£_mou£
)

5918 
mou£_öa˘ive
();

5920 
	gw3mFuncLi°
[
CuºítAœrm
->
cmd
].
func
();

5921 #ifde‡
USE_MOUSE


5922 i‡(
	gu£_mou£
)

5923 
mou£_a˘ive
();

5925 
	gCuºítCmdD©a
 = 
NULL
;

5926 i‡(
	gCuºítAœrm
->
	g°©us
 =
AL_IMPLICIT_ONCE
) {

5927 
CuºítAœrm
->
£c
 = 0;

5928 
	gCuºítAœrm
->
	g°©us
 = 
AL_UNSET
;

5930 i‡(
	gCuºítbuf
->
	gevít
) {

5931 i‡(
	gCuºítbuf
->
	gevít
->
	g°©us
 !
AL_UNSET
)

5932 
CuºítAœrm
 = 
Cuºítbuf
->
evít
;

5934 
	gCuºítbuf
->
	gevít
 = 
NULL
;

5936 i‡(!
	gCuºítbuf
->
	gevít
)

5937 
	gCuºítAœrm
 = &
DeÁu…Aœrm
;

5938 i‡(
	gCuºítAœrm
->
	g£c
 > 0) {

5939 
mySig«l
(
SIGALRM
, 
SigAœrm
);

5940 
Æ¨m
(
CuºítAœrm
->
£c
);

5943 
	gSIGNAL_RETURN
;

5947 
DEFUN
(
£tAœrm
, 
ALARM
, "Setálarm")

5949 *
	gd©a
;

5950 
	g£c
 = 0, 
	gcmd
 = -1;

5952 
	gCuºítKeyD©a
 = 
NULL
;

5953 
	gd©a
 = 
£¨chKeyD©a
();

5954 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

5955 
d©a
 = 
öputSåHi°
("(Aœrm)£¯comm™d: ", "", 
TextHi°
);

5956 i‡(
	gd©a
 =
NULL
) {

5957 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5961 i‡(*
	gd©a
 != '\0') {

5962 
£c
 = 
©oi
(
gëW‹d
(&
d©a
));

5963 i‡(
	g£c
 > 0)

5964 
	gcmd
 = 
gëFuncLi°
(
gëW‹d
(&
d©a
));

5966 i‡(
	gcmd
 >= 0) {

5967 
d©a
 = 
gëQW‹d
(&data);

5968 
£tAœrmEvít
(&
DeÁu…Aœrm
, 
£c
, 
AL_EXPLICIT
, 
cmd
, 
d©a
);

5969 
di•_mesßge_n£c
(
S¥ötf
("%d£¯%†%s", 
£c
, 
w3mFuncLi°
[
cmd
].
id
,

5970 
d©a
)->
±r
, 
FALSE
, 1, FALSE, 
TRUE
);

5973 
£tAœrmEvít
(&
DeÁu…Aœrm
, 0, 
AL_UNSET
, 
FUNCNAME_nulcmd
, 
NULL
);

5975 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

5978 
AœrmEvít
 *

5979 
£tAœrmEvít
(
AœrmEvít
 * 
evít
, 
£c
, 
°©us
, 
cmd
, *
d©a
)

5981 i‡(
	gevít
 =
NULL
)

5982 
evít
 = 
New
(
AœrmEvít
);

5983 
	gevít
->
	g£c
 = 
£c
;

5984 
	gevít
->
	g°©us
 = 
°©us
;

5985 
	gevít
->
	gcmd
 = 
cmd
;

5986 
	gevít
->
	gd©a
 = 
d©a
;

5987  
	gevít
;

5991 
DEFUN
(
ªöô
, 
REINIT
, "Reload configuration files")

5993 *
	gªsour˚
 = 
£¨chKeyD©a
();

5995 i‡(
	gªsour˚
 =
NULL
) {

5996 
öô_rc
();

5997 
sync_wôh_›ti⁄
();

5998 #ifde‡
USE_COOKIE


5999 
öôCookõ
();

6001 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6005 i‡(!
°rˇ£cmp
(
ªsour˚
, "CONFIG") || !strcasecmp(resource, "RC")) {

6006 
öô_rc
();

6007 
sync_wôh_›ti⁄
();

6008 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6012 #ifde‡
USE_COOKIE


6013 i‡(!
°rˇ£cmp
(
ªsour˚
, "COOKIE")) {

6014 
öôCookõ
();

6019 i‡(!
°rˇ£cmp
(
ªsour˚
, "KEYMAP")) {

6020 
öôKeym≠
(
TRUE
);

6024 i‡(!
°rˇ£cmp
(
ªsour˚
, "MAILCAP")) {

6025 
öôMaûˇp
();

6029 #ifde‡
USE_MOUSE


6030 i‡(!
°rˇ£cmp
(
ªsour˚
, "MOUSE")) {

6031 
öôMou£A˘i⁄
();

6032 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6037 #ifde‡
USE_MENU


6038 i‡(!
°rˇ£cmp
(
ªsour˚
, "MENU")) {

6039 
öôMíu
();

6044 i‡(!
°rˇ£cmp
(
ªsour˚
, "MIMETYPES")) {

6045 
öôMimeTy≥s
();

6049 #ifde‡
USE_EXTERNAL_URI_LOADER


6050 i‡(!
°rˇ£cmp
(
ªsour˚
, "URIMETHODS")) {

6051 
öôURIMëhods
();

6056 
di•_îr_mesßge
(
S¥ötf
("D⁄'àknow howÅÿªöôülizê'%s'", 
ªsour˚
)->

6057 
±r
, 
FALSE
);

6060 
DEFUN
(
defKey
, 
DEFINE_KEY
,

6063 *
	gd©a
;

6065 
	gCuºítKeyD©a
 = 
NULL
;

6066 
	gd©a
 = 
£¨chKeyD©a
();

6067 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

6068 
d©a
 = 
öputSåHi°
("Key deföôi⁄: ", "", 
TextHi°
);

6069 i‡(
	gd©a
 =
NULL
 || *
d©a
 == '\0') {

6070 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

6074 
£tKeym≠
(
ÆlocSå
(
d©a
, -1), -1, 
TRUE
);

6075 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

6078 
TabBuf„r
 *

6079 
√wTab
()

6081 
TabBuf„r
 *
	gn
;

6083 
	gn
 = 
New
(
TabBuf„r
);

6084 i‡(
	gn
 =
NULL
)

6085  
NULL
;

6086 
	gn
->
	g√xtTab
 = 
NULL
;

6087 
	gn
->
	gcuºítBuf„r
 = 
NULL
;

6088 
	gn
->
	gfú°Buf„r
 = 
NULL
;

6089  
	gn
;

6093 
_√wT
()

6095 
TabBuf„r
 *
	gèg
;

6096 
Buf„r
 *
	gbuf
;

6097 
	gi
;

6099 
	gèg
 = 
√wTab
();

6100 i‡(!
	gèg
)

6103 
	gbuf
 = 
√wBuf„r
(
Cuºítbuf
->
width
);

6104 
c›yBuf„r
(
buf
, 
Cuºítbuf
);

6105 
	gbuf
->
	g√xtBuf„r
 = 
NULL
;

6106 
	gi
 = 0; i < 
	gMAX_LB
; i++)

6107 
	gbuf
->
	glökBuf„r
[
i
] = 
NULL
;

6108 (*
	gbuf
->
	g˛⁄e
)++;

6109 
	gèg
->
	gfú°Buf„r
 = 
èg
->
cuºítBuf„r
 = 
buf
;

6111 
	gèg
->
	g√xtTab
 = 
CuºítTab
->
√xtTab
;

6112 
	gèg
->
	g¥evTab
 = 
CuºítTab
;

6113 i‡(
	gCuºítTab
->
	g√xtTab
)

6114 
	gCuºítTab
->
	g√xtTab
->
	g¥evTab
 = 
èg
;

6116 
	gLa°Tab
 = 
èg
;

6117 
	gCuºítTab
->
	g√xtTab
 = 
èg
;

6118 
	gCuºítTab
 = 
èg
;

6119 
	gnTab
++;

6122 
DEFUN
(
√wT
, 
NEW_TAB
, "OpenÇewÅab")

6124 
_√wT
();

6125 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6128 
TabBuf„r
 *

6129 
numTab
(
n
)

6131 
TabBuf„r
 *
	gèb
;

6132 
	gi
;

6134 i‡(
	gn
 == 0)

6135  
CuºítTab
;

6136 i‡(
	gn
 == 1)

6137  
Fú°Tab
;

6138 i‡(
	gnTab
 <= 1)

6139  
NULL
;

6140 
	gèb
 = 
Fú°Tab
, 
	gi
 = 1;Åab && i < 
	gn
;Åab = 
èb
->
√xtTab
, i++) ;

6141  
	gèb
;

6145 
ˇlcTabPos
()

6147 
TabBuf„r
 *
	gèb
;

6149 
	glcﬁ
 = 0, 
	grcﬁ
 = 2, 
	gcﬁ
;

6151 
	glcﬁ
 = 0, 
	grcﬁ
 = 0, 
	gcﬁ
;

6153 
	gn1
, 
	gn2
, 
	g«
, 
	gnx
, 
	gny
, 
	gix
, 
	giy
;

6155 #ifde‡
USE_MOUSE


6156 
	glcﬁ
 = 
mou£_a˘i⁄
.
míu_°r
 ? mou£_a˘i⁄.
míu_width
 : 0;

6159 i‡(
	gnTab
 <= 0)

6161 
	gn1
 = (
COLS
 - 
rcﬁ
 - 
lcﬁ
Ë/ 
TabCﬁs
;

6162 i‡(
	gn1
 >
nTab
) {

6163 
n2
 = 1;

6164 
	gny
 = 1;

6167 i‡(
	gn1
 < 0)

6168 
	gn1
 = 0;

6169 
	gn2
 = 
COLS
 / 
TabCﬁs
;

6170 i‡(
	gn2
 == 0)

6171 
n2
 = 1;

6172 
	gny
 = (
nTab
 - 
n1
 - 1Ë/ 
n2
 + 2;

6174 
	g«
 = 
n1
 + 
n2
 * (
ny
 - 1);

6175 
	gn1
 -(
«
 - 
nTab
Ë/ 
ny
;

6176 i‡(
	gn1
 < 0)

6177 
	gn1
 = 0;

6178 
	g«
 = 
n1
 + 
n2
 * (
ny
 - 1);

6179 
	gèb
 = 
Fú°Tab
;

6180 
	giy
 = 0; iy < 
	gny
 && 
	gèb
; iy++) {

6181 i‡(
	giy
 == 0) {

6182 
nx
 = 
n1
;

6183 
	gcﬁ
 = 
COLS
 - 
rcﬁ
 - 
lcﬁ
;

6186 
	gnx
 = 
n2
 - (
«
 - 
nTab
 + (
iy
 - 1)Ë/ (
ny
 - 1);

6187 
	gcﬁ
 = 
COLS
;

6189 
	gix
 = 0; ix < 
	gnx
 && 
	gèb
; ix++,Åab = 
èb
->
√xtTab
) {

6190 
èb
->
x1
 = 
cﬁ
 * 
ix
 / 
nx
;

6191 
	gèb
->
	gx2
 = 
cﬁ
 * (
ix
 + 1Ë/ 
nx
 - 1;

6192 
	gèb
->
	gy
 = 
iy
;

6193 i‡(
	giy
 == 0) {

6194 
èb
->
x1
 +
lcﬁ
;

6195 
	gèb
->
	gx2
 +
lcﬁ
;

6201 
TabBuf„r
 *

6202 
dñëeTab
(
TabBuf„r
 * 
èb
)

6204 
Buf„r
 *
	gbuf
, *
	g√xt
;

6206 i‡(
	gnTab
 <= 1)

6207  
Fú°Tab
;

6208 i‡(
	gèb
->
	g¥evTab
) {

6209 i‡(
	gèb
->
	g√xtTab
)

6210 
	gèb
->
	g√xtTab
->
	g¥evTab
 = 
èb
->
¥evTab
;

6212 
	gLa°Tab
 = 
èb
->
¥evTab
;

6213 
	gèb
->
	g¥evTab
->
	g√xtTab
 = 
èb
->
√xtTab
;

6214 i‡(
	gèb
 =
CuºítTab
)

6215 
CuºítTab
 = 
èb
->
¥evTab
;

6218 
	gèb
->
	g√xtTab
->
	g¥evTab
 = 
NULL
;

6219 
	gFú°Tab
 = 
èb
->
√xtTab
;

6220 i‡(
	gèb
 =
CuºítTab
)

6221 
CuºítTab
 = 
èb
->
√xtTab
;

6223 
	gnTab
--;

6224 
	gbuf
 = 
èb
->
fú°Buf„r
;

6225 
	gbuf
 && bu‡!
NO_BUFFER
) {

6226 
√xt
 = 
buf
->
√xtBuf„r
;

6227 
disˇrdBuf„r
(
buf
);

6228 
	gbuf
 = 
√xt
;

6230  
	gFú°Tab
;

6233 
DEFUN
(
˛o£T
, 
CLOSE_TAB
, "Close currentÅab")

6235 
TabBuf„r
 *
	gèb
;

6237 i‡(
	gnTab
 <= 1)

6239 i‡(
	g¥ec_num
)

6240 
	gèb
 = 
numTab
(
PREC_NUM
);

6242 
	gèb
 = 
CuºítTab
;

6243 i‡(
	gèb
)

6244 
dñëeTab
(
èb
);

6245 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6248 
DEFUN
(
√xtT
, 
NEXT_TAB
, "MoveÅoÇextÅab")

6250 
	gi
;

6252 i‡(
	gnTab
 <= 1)

6254 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

6255 i‡(
	gCuºítTab
->
	g√xtTab
)

6256 
	gCuºítTab
 = 
CuºítTab
->
√xtTab
;

6258 
	gCuºítTab
 = 
Fú°Tab
;

6260 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6263 
DEFUN
(
¥evT
, 
PREV_TAB
, "MoveÅoÖreviousÅab")

6265 
	gi
;

6267 i‡(
	gnTab
 <= 1)

6269 
	gi
 = 0; i < 
	gPREC_NUM
; i++) {

6270 i‡(
	gCuºítTab
->
	g¥evTab
)

6271 
	gCuºítTab
 = 
CuºítTab
->
¥evTab
;

6273 
	gCuºítTab
 = 
La°Tab
;

6275 
di•œyBuf„r
(
Cuºítbuf
, 
B_REDRAW_IMAGE
);

6279 
fﬁlowTab
(
TabBuf„r
 * 
èb
)

6281 
Buf„r
 *
	gbuf
;

6282 
Anch‹
 *
	ga
;

6284 #ifde‡
USE_IMAGE


6285 
	ga
 = 
ªåõveCuºítImg
(
Cuºítbuf
);

6286 i‡(!(
	ga
 &&á->
	gimage
 &&á->image->
	gm≠
))

6288 
	ga
 = 
ªåõveCuºítAnch‹
(
Cuºítbuf
);

6289 i‡(
	ga
 =
NULL
)

6292 i‡(
	gèb
 =
CuºítTab
) {

6293 
check_èrgë
 = 
FALSE
;

6294 
fﬁlowA
();

6295 
	gcheck_èrgë
 = 
TRUE
;

6298 
_√wT
();

6299 
	gbuf
 = 
Cuºítbuf
;

6300 
	gcheck_èrgë
 = 
FALSE
;

6301 
fﬁlowA
();

6302 
	gcheck_èrgë
 = 
TRUE
;

6303 i‡(
	gèb
 =
NULL
) {

6304 i‡(
buf
 !
Cuºítbuf
)

6305 
dñBuf„r
(
buf
);

6307 
dñëeTab
(
CuºítTab
);

6309 i‡(
	gbuf
 !
Cuºítbuf
) {

6311 
Buf„r
 *
c
, *
p
;

6313 
	gc
 = 
Cuºítbuf
;

6314 
	gp
 = 
¥evBuf„r
(
c
, 
buf
);

6315 
	gp
->
	g√xtBuf„r
 = 
NULL
;

6316 
	gFú°buf
 = 
buf
;

6317 
dñëeTab
(
CuºítTab
);

6318 
	gCuºítTab
 = 
èb
;

6319 
	gbuf
 = 
p
; buf; buf =Ö) {

6320 
p
 = 
¥evBuf„r
(
c
, 
buf
);

6321 
pushBuf„r
(
buf
);

6324 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6327 
DEFUN
(
èbA
, 
TAB_LINK
, "Open currentÜink onÇewÅab")

6329 
fﬁlowTab
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
);

6333 
èbURL0
(
TabBuf„r
 * 
èb
, *
¥om±
, 
ªœtive
)

6335 
Buf„r
 *
	gbuf
;

6337 i‡(
	gèb
 =
CuºítTab
) {

6338 
goURL0
(
¥om±
, 
ªœtive
);

6341 
_√wT
();

6342 
	gbuf
 = 
Cuºítbuf
;

6343 
goURL0
(
¥om±
, 
ªœtive
);

6344 i‡(
	gèb
 =
NULL
) {

6345 i‡(
buf
 !
Cuºítbuf
)

6346 
dñBuf„r
(
buf
);

6348 
dñëeTab
(
CuºítTab
);

6350 i‡(
	gbuf
 !
Cuºítbuf
) {

6352 
Buf„r
 *
c
, *
p
;

6354 
	gc
 = 
Cuºítbuf
;

6355 
	gp
 = 
¥evBuf„r
(
c
, 
buf
);

6356 
	gp
->
	g√xtBuf„r
 = 
NULL
;

6357 
	gFú°buf
 = 
buf
;

6358 
dñëeTab
(
CuºítTab
);

6359 
	gCuºítTab
 = 
èb
;

6360 
	gbuf
 = 
p
; buf; buf =Ö) {

6361 
p
 = 
¥evBuf„r
(
c
, 
buf
);

6362 
pushBuf„r
(
buf
);

6365 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6368 
DEFUN
(
èbURL
, 
TAB_GOTO
, "Open URL onÇewÅab")

6370 
èbURL0
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
,

6371 "GŸÿURL o¿√wÅab: ", 
FALSE
);

6374 
DEFUN
(
èbrURL
, 
TAB_GOTO_RELATIVE
, "OpenÑelative URL onÇewÅab")

6376 
èbURL0
(
¥ec_num
 ? 
numTab
(
PREC_NUM
Ë: 
NULL
,

6377 "GŸÿªœtivêURL o¿√wÅab: ", 
TRUE
);

6381 
moveTab
(
TabBuf„r
 * 
t
, TabBuf„∏* 
t2
, 
right
)

6383 i‡(
	gt2
 =
NO_TABBUFFER
)

6384 
t2
 = 
Fú°Tab
;

6385 i‡(!
	gt
 || !
	gt2
 ||Å =
t2
 || 
t
 =
NO_TABBUFFER
)

6387 i‡(
	gt
->
	g¥evTab
) {

6388 i‡(
	gt
->
	g√xtTab
)

6389 
	gt
->
	g√xtTab
->
	g¥evTab
 = 
t
->
¥evTab
;

6391 
	gLa°Tab
 = 
t
->
¥evTab
;

6392 
	gt
->
	g¥evTab
->
	g√xtTab
 = 
t
->
√xtTab
;

6395 
	gt
->
	g√xtTab
->
	g¥evTab
 = 
NULL
;

6396 
	gFú°Tab
 = 
t
->
√xtTab
;

6398 i‡(
	gright
) {

6399 
	gt
->
	g√xtTab
 = 
t2
->
√xtTab
;

6400 
	gt
->
	g¥evTab
 = 
t2
;

6401 i‡(
	gt2
->
	g√xtTab
)

6402 
	gt2
->
	g√xtTab
->
	g¥evTab
 = 
t
;

6404 
	gLa°Tab
 = 
t
;

6405 
	gt2
->
	g√xtTab
 = 
t
;

6408 
	gt
->
	g¥evTab
 = 
t2
->
¥evTab
;

6409 
	gt
->
	g√xtTab
 = 
t2
;

6410 i‡(
	gt2
->
	g¥evTab
)

6411 
	gt2
->
	g¥evTab
->
	g√xtTab
 = 
t
;

6413 
	gFú°Tab
 = 
t
;

6414 
	gt2
->
	g¥evTab
 = 
t
;

6416 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6419 
DEFUN
(
èbR
, 
TAB_RIGHT
, "Move currentÅabÑight")

6421 
TabBuf„r
 *
	gèb
;

6422 
	gi
;

6424 
	gèb
 = 
CuºítTab
, 
	gi
 = 0;Åab && i < 
	gPREC_NUM
;

6425 
	gèb
 = 
èb
->
√xtTab
, 
	gi
++) ;

6426 
moveTab
(
CuºítTab
, 
èb
 ?Åab : 
La°Tab
, 
TRUE
);

6429 
DEFUN
(
èbL
, 
TAB_LEFT
, "Move currentÅabÜeft")

6431 
TabBuf„r
 *
	gèb
;

6432 
	gi
;

6434 
	gèb
 = 
CuºítTab
, 
	gi
 = 0;Åab && i < 
	gPREC_NUM
;

6435 
	gèb
 = 
èb
->
¥evTab
, 
	gi
++) ;

6436 
moveTab
(
CuºítTab
, 
èb
 ?Åab : 
Fú°Tab
, 
FALSE
);

6440 
addDow∆ﬂdLi°
(
pid_t
 
pid
, *
uæ
, *
ßve
, *
lock
, 
˛í_t
 
size
)

6442 
Dow∆ﬂdLi°
 *
	gd
;

6444 
	gd
 = 
New
(
Dow∆ﬂdLi°
);

6445 
	gd
->
	gpid
 = 
pid
;

6446 
	gd
->
	guæ
 = 
uæ
;

6447 i‡(
	gßve
[0] !'/' && 
ßve
[0] != '~')

6448 
ßve
 = 
Så√w_m_ch¨p
(
CuºítDú
, "/", save, 
NULL
)->
	g±r
;

6449 
	gd
->
	gßve
 = 
ex∑ndP©h
(
ßve
);

6450 
	gd
->
	glock
 = 
lock
;

6451 
	gd
->
	gsize
 = 
size
;

6452 
	gd
->
	gtime
 = 
time
(0);

6453 
	gd
->
	gok
 = 
FALSE
;

6454 
	gd
->
	g√xt
 = 
NULL
;

6455 
	gd
->
	g¥ev
 = 
La°DL
;

6456 i‡(
	gLa°DL
)

6457 
	gLa°DL
->
	g√xt
 = 
d
;

6459 
	gFú°DL
 = 
d
;

6460 
	gLa°DL
 = 
d
;

6461 
	gadd_dow∆ﬂd_li°
 = 
TRUE
;

6465 
checkDow∆ﬂdLi°
()

6467 
Dow∆ﬂdLi°
 *
	gd
;

6468 
°©
 
	g°
;

6470 i‡(!
	gFú°DL
)

6471  
	gFALSE
;

6472 
	gd
 = 
Fú°DL
; d !
NULL
; d = 
d
->
√xt
) {

6473 i‡(!
d
->
ok
 && !
l°©
(d->
lock
, &
°
))

6474  
TRUE
;

6476  
	gFALSE
;

6480 
c⁄vît_size3
(
˛í_t
 
size
)

6482 
Så
 
	gtmp
 = 
Så√w
();

6483 
	gn
;

6486 
	gn
 = 
size
 % 1000;

6487 
	gsize
 /= 1000;

6488 
	gtmp
 = 
S¥ötf
(
size
 ? ",%.3d%s" : "%d%s", 
n
, 
tmp
->
±r
);

6489 } 
	gsize
);

6490  
	gtmp
->
	g±r
;

6493 
Buf„r
 *

6494 
Dow∆ﬂdLi°Buf„r
()

6496 
Dow∆ﬂdLi°
 *
	gd
;

6497 
Så
 
	g§c
 = 
NULL
;

6498 
°©
 
	g°
;

6499 
time_t
 
	gcur_time
;

6500 
	gduøti⁄
, 
	gøã
, 
	gëa
;

6501 
size_t
 
	gsize
;

6503 i‡(!
	gFú°DL
)

6504  
	gNULL
;

6505 
	gcur_time
 = 
time
(0);

6507 
	g§c
 = 
Så√w_ch¨p
("<html><hód><tôÀ>" 
DOWNLOAD_LIST_TITLE


6509 
DOWNLOAD_LIST_TITLE
 "</h1>\n"

6511 
	gd
 = 
La°DL
; d !
NULL
; d = 
d
->
¥ev
) {

6512 i‡(
l°©
(
d
->
lock
, &
°
))

6513 
d
->
ok
 = 
TRUE
;

6514 
Såˇt_ch¨p
(
§c
, "<pre>\n");

6515 
Såˇt
(
§c
, 
S¥ötf
("%s\¿ --&gt; %s\¿ ", 
html_quŸe
(
d
->
uæ
),

6516 
html_quŸe
(
c⁄v_‰om_sy°em
(
d
->
ßve
))));

6517 
	gduøti⁄
 = 
cur_time
 - 
d
->
time
;

6518 i‡(!
°©
(
d
->
ßve
, &
°
)) {

6519 
	gsize
 = 
°
.
°_size
;

6520 i‡(
	gd
->
	gok
) {

6521 
	gd
->
	gsize
 = 
size
;

6522 
	gduøti⁄
 = 
°
.
°_mtime
 - 
d
->
time
;

6526 
	gsize
 = 0;

6527 i‡(
	gd
->
	gsize
) {

6528 
	gi
, 
	gl
 = 
COLS
 - 6;

6529 i‡(
	gsize
 < 
	gd
->size)

6530 
	gi
 = 1.0 * 
l
 * 
size
 / 
d
->size;

6532 
	gi
 = 
l
;

6533 
	gl
 -
i
;

6534 
	gi
-- > 0)

6535 
Såˇt_ch¨
(
§c
, '#');

6536 
	gl
-- > 0)

6537 
Såˇt_ch¨
(
§c
, '_');

6538 
Såˇt_ch¨
(
§c
, '\n');

6540 i‡(!
	gd
->
	gok
 && 
	gsize
 < d->size)

6541 
Såˇt
(
§c
, 
S¥ötf
(" %s / %s bytes (%d%%)",

6542 
c⁄vît_size3
(
size
), c⁄vît_size3(
d
->size),

6543 ()(100.0 * 
size
 / 
d
->size)));

6545 
Såˇt
(
§c
, 
S¥ötf
(" %†byã†lﬂded", 
c⁄vît_size3
(
size
)));

6546 i‡(
	gduøti⁄
 > 0) {

6547 
	gøã
 = 
size
 / 
duøti⁄
;

6548 
Såˇt
(
§c
, 
S¥ötf
(" %02d:%02d:%02dÑate %s/sec",

6549 
duøti⁄
 / (60 * 60), (duration / 60) % 60,

6550 
duøti⁄
 % 60, 
c⁄vît_size
(
øã
, 1)));

6551 i‡(!
	gd
->
	gok
 && 
	gsize
 < d->sizê&& 
	gøã
) {

6552 
	gëa
 = (
d
->
size
 - sizeË/ 
øã
;

6553 
Såˇt
(
§c
, 
S¥ötf
("Éè %02d:%02d:%02d", 
ëa
 / (60 * 60),

6554 (
ëa
 / 60) % 60,Éta % 60));

6557 
Såˇt_ch¨
(
§c
, '\n');

6558 i‡(
	gd
->
	gok
) {

6559 
Såˇt
(
§c
, 
S¥ötf
("<inputÅype=submitÇame=ok%d value=OK>",

6560 
d
->
pid
));

6561 i‡(
	gsize
 < 
	gd
->size)

6562 
Såˇt_ch¨p
(
§c
, " Download incompleted");

6564 
Såˇt_ch¨p
(
§c
, " Download completed");

6567 
Såˇt
(
§c
, 
S¥ötf
("<inputÅype=submitÇame=stop%d value=STOP>",

6568 
d
->
pid
));

6569 
Såˇt_ch¨p
(
§c
, "\n</pre><hr>\n");

6571 
Såˇt_ch¨p
(
§c
, "</form></body></html>");

6572  
lﬂdHTMLSåög
(
§c
);

6576 
dow∆ﬂd_a˘i⁄
(
∑r£d_èg¨g
 *
¨g
)

6578 
Dow∆ﬂdLi°
 *
	gd
;

6579 
pid_t
 
	gpid
;

6581 ; 
	g¨g
;árg = 
¨g
->
√xt
) {

6582 i‡(!
°∫cmp
(
¨g
->arg, "stop", 4)) {

6583 
pid
 = (
pid_t
Ë
©oi
(&
¨g
->arg[4]);

6584 #i‚de‡
__MINGW32_VERSION


6585 
kûl
(
pid
, 
SIGKILL
);

6588 i‡(!
°∫cmp
(
¨g
->arg, "ok", 2))

6589 
	gpid
 = (
pid_t
Ë
©oi
(&
¨g
->arg[2]);

6592 
	gd
 = 
Fú°DL
; d; d = 
d
->
√xt
) {

6593 i‡(
d
->
pid
 ==Öid) {

6594 
u∆ök
(
d
->
lock
);

6595 i‡(
	gd
->
	g¥ev
)

6596 
	gd
->
	g¥ev
->
	g√xt
 = 
d
->
√xt
;

6598 
	gFú°DL
 = 
d
->
√xt
;

6599 i‡(
	gd
->
	g√xt
)

6600 
	gd
->
	g√xt
->
	g¥ev
 = 
d
->
¥ev
;

6602 
	gLa°DL
 = 
d
->
¥ev
;

6607 
ldDL
();

6611 
°›Dow∆ﬂd
()

6613 
Dow∆ﬂdLi°
 *
	gd
;

6615 i‡(!
	gFú°DL
)

6617 
	gd
 = 
Fú°DL
; d !
NULL
; d = 
d
->
√xt
) {

6618 i‡(
d
->
ok
)

6620 #i‚de‡
__MINGW32_VERSION


6621 
kûl
(
d
->
pid
, 
SIGKILL
);

6623 
u∆ök
(
d
->
lock
);

6628 
DEFUN
(
ldDL
, 
DOWNLOAD_LIST
, "Display downloadÜistÖanel")

6630 
Buf„r
 *
	gbuf
;

6631 
	gª∂a˚
 = 
FALSE
, 
	g√w_èb
 = FALSE;

6632 #ifde‡
USE_ALARM


6633 
	gªlﬂd
;

6636 i‡(
	gCuºítbuf
->
	gbuf„Ωr›
 & 
	gBP_INTERNAL
 &&

6637 !
°rcmp
(
Cuºítbuf
->
buf„∫ame
, 
DOWNLOAD_LIST_TITLE
))

6638 
	gª∂a˚
 = 
TRUE
;

6639 i‡(!
	gFú°DL
) {

6640 i‡(
	gª∂a˚
) {

6641 i‡(
	gCuºítbuf
 =
Fú°buf
 && 
Cuºítbuf
->
√xtBuf„r
 =
NULL
) {

6642 i‡(
nTab
 > 1)

6643 
dñëeTab
(
CuºítTab
);

6646 
dñBuf„r
(
Cuºítbuf
);

6647 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6651 #ifde‡
USE_ALARM


6652 
	gªlﬂd
 = 
checkDow∆ﬂdLi°
();

6654 
	gbuf
 = 
Dow∆ﬂdLi°Buf„r
();

6655 i‡(!
	gbuf
) {

6656 
di•œyBuf„r
(
Cuºítbuf
, 
B_NORMAL
);

6659 
	gbuf
->
	gbuf„Ωr›
 |(
BP_INTERNAL
 | 
BP_NO_URL
);

6660 i‡(
	gª∂a˚
) {

6661 
COPY_BUFROOT
(
buf
, 
Cuºítbuf
);

6662 
ª°‹ePosôi⁄
(
buf
, 
Cuºítbuf
);

6664 i‡(!
	gª∂a˚
 && 
	g›í_èb_dl_li°
) {

6665 
_√wT
();

6666 
	g√w_èb
 = 
TRUE
;

6668 
pushBuf„r
(
buf
);

6669 i‡(
	gª∂a˚
 || 
	g√w_èb
)

6670 
dñëePªvBuf
();

6671 #ifde‡
USE_ALARM


6672 i‡(
	gªlﬂd
)

6673 
	gCuºítbuf
->
	gevít
 = 
£tAœrmEvít
(
Cuºítbuf
->
evít
, 1, 
AL_IMPLICIT
,

6674 
FUNCNAME_ªlﬂd
, 
NULL
);

6676 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6680 
ßve_buf„r_posôi⁄
(
Buf„r
 *
buf
)

6682 
Buf„rPos
 *
	gb
 = 
buf
->
undo
;

6684 i‡(!
	gbuf
->
	gfú°Löe
)

6686 i‡(
	gb
 && b->
	gt›_löíumbî
 =
TOP_LINENUMBER
(
buf
) &&

6687 
b
->
cur_löíumbî
 =
CUR_LINENUMBER
(
buf
) &&

6688 
b
->
cuºítCﬁumn
 =
buf
->cuºítCﬁum¿&& b->
pos
 == buf->pos)

6690 
	gb
 = 
New
(
Buf„rPos
);

6691 
	gb
->
	gt›_löíumbî
 = 
TOP_LINENUMBER
(
buf
);

6692 
	gb
->
	gcur_löíumbî
 = 
CUR_LINENUMBER
(
buf
);

6693 
	gb
->
	gcuºítCﬁumn
 = 
buf
->
cuºítCﬁumn
;

6694 
	gb
->
	gpos
 = 
buf
->
pos
;

6695 
	gb
->
	gbpos
 = 
buf
->
cuºítLöe
 ? buf->cuºítLöe->
bpos
 : 0;

6696 
	gb
->
	g√xt
 = 
NULL
;

6697 
	gb
->
	g¥ev
 = 
buf
->
undo
;

6698 i‡(
	gbuf
->
	gundo
)

6699 
	gbuf
->
	gundo
->
	g√xt
 = 
b
;

6700 
	gbuf
->
	gundo
 = 
b
;

6704 
ª£tPos
(
Buf„rPos
 * 
b
)

6706 
Buf„r
 
	gbuf
;

6707 
Löe
 
	gt›
, 
	gcur
;

6709 
	gt›
.
	glöíumbî
 = 
b
->
t›_löíumbî
;

6710 
	gcur
.
	glöíumbî
 = 
b
->
cur_löíumbî
;

6711 
	gcur
.
	gbpos
 = 
b
->
bpos
;

6712 
	gbuf
.
	gt›Löe
 = &
t›
;

6713 
	gbuf
.
	gcuºítLöe
 = &
cur
;

6714 
	gbuf
.
	gpos
 = 
b
->
pos
;

6715 
	gbuf
.
	gcuºítCﬁumn
 = 
b
->
cuºítCﬁumn
;

6716 
ª°‹ePosôi⁄
(
Cuºítbuf
, &
buf
);

6717 
	gCuºítbuf
->
	gundo
 = 
b
;

6718 
di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

6721 
DEFUN
(
undoPos
, 
UNDO
, "CancelÅheÜast cursor movement")

6723 
Buf„rPos
 *
	gb
 = 
Cuºítbuf
->
undo
;

6724 
	gi
;

6726 i‡(!
	gCuºítbuf
->
	gfú°Löe
)

6728 i‡(!
	gb
 || !b->
	g¥ev
)

6730 
	gi
 = 0; i < 
	gPREC_NUM
 && 
	gb
->
	g¥ev
; i++, b = 
b
->
¥ev
) ;

6731 
ª£tPos
(
b
);

6734 
DEFUN
(
ªdoPos
, 
REDO
, "CancelÅheÜast undo")

6736 
Buf„rPos
 *
	gb
 = 
Cuºítbuf
->
undo
;

6737 
	gi
;

6739 i‡(!
	gCuºítbuf
->
	gfú°Löe
)

6741 i‡(!
	gb
 || !b->
	g√xt
)

6743 
	gi
 = 0; i < 
	gPREC_NUM
 && 
	gb
->
	g√xt
; i++, b = 
b
->
√xt
) ;

6744 
ª£tPos
(
b
);

	@map.c

5 
	~"fm.h
"

6 
	~<m©h.h
>

8 
M≠Li°
 *

9 
	$£¨chM≠Li°
(
Buf„r
 *
buf
, *
«me
)

11 
M≠Li°
 *
ml
;

13 i‡(
«me
 =
NULL
)

14  
NULL
;

15 
ml
 = 
buf
->
m≠li°
; m»!
NULL
; m»ml->
√xt
) {

16 i‡(!
	`Såcmp_ch¨p
(
ml
->
«me
,Çame))

19  
ml
;

20 
	}
}

22 #ifde‡
USE_IMAGE


24 
	$öM≠Aªa
(
M≠Aªa
 * 
a
, 
x
, 
y
)

26 
i
;

27 
r1
, 
r2
, 
s
, 
c
, 
t
;

29 i‡(!
a
)

30  
FALSE
;

31 
a
->
sh≠e
) {

32 
SHAPE_RECT
:

33 i‡(
x
 >
a
->
co‹ds
[0] && 
y
 >=á->coords[1] &&

34 
x
 <
a
->
co‹ds
[2] && 
y
 <=á->coords[3])

35  
TRUE
;

37 
SHAPE_CIRCLE
:

38 i‡((
x
 - 
a
->
co‹ds
[0]) * (x -á->coords[0])

39 + (
y
 - 
a
->
co‹ds
[1]) * (y -á->coords[1])

40 <
a
->
co‹ds
[2] *á->coords[2])

41  
TRUE
;

43 
SHAPE_POLY
:

44 
t
 = 0, 
i
 = 0; i < 
a
->
nco‹ds
; i += 2) {

45 
r1
 = 
	`sqπ
(()(
x
 - 
a
->
co‹ds
[
i
]) * (x -á->coords[i])

46 + ()(
y
 - 
a
->
co‹ds
[
i
 + 1]) * (y -

47 
a
->
co‹ds
[
i
 + 1]));

48 
r2
 = 
	`sqπ
(()(
x
 - 
a
->
co‹ds
[
i
 + 2]) * (x -á->coords[i + 2])

49 + ()(
y
 - 
a
->
co‹ds
[
i
 + 3]) * (y -

50 
a
->
co‹ds
[
i
 + 3]));

51 i‡(
r1
 =0 || 
r2
 == 0)

52  
TRUE
;

53 
s
 = (()(
x
 - 
a
->
co‹ds
[
i
]Ë* (
y
 -á->coords[i + 3])

54 - ()(
x
 - 
a
->
co‹ds
[
i
 + 2]Ë* (
y
 -

55 
a
->
co‹ds
[
i
 +

56 1])Ë/ 
r1
 / 
r2
;

57 
c
 = (()(
x
 - 
a
->
co‹ds
[
i
]) * (x -á->coords[i + 2])

58 + ()(
y
 - 
a
->
co‹ds
[
i
 + 1]) * (y -

59 
a
->
co‹ds
[
i
 +

60 3])Ë/ 
r1
 / 
r2
;

61 
t
 +
	`©™2
(
s
, 
c
);

63 i‡(
	`Ábs
(
t
) > 2 * 3.14)

64  
TRUE
;

66 
SHAPE_DEFAULT
:

67  
TRUE
;

71  
FALSE
;

72 
	}
}

75 
	$√¨e°M≠Aªa
(
M≠Li°
 *
ml
, 
x
, 
y
)

77 
Li°Iãm
 *
Æ
;

78 
M≠Aªa
 *
a
;

79 
i
, 
l
, 
n
 = -1, 
mö
 = -1, 
limô
 = 
pixñ_≥r_ch¨
 *Öixel_per_char

80 + 
pixñ_≥r_löe
 *Öixel_per_line;

82 i‡(!
ml
 || !ml->
¨ó
)

83  
n
;

84 
i
 = 0, 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
; i++,á»Æ->
√xt
) {

85 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

86 i‡(
a
) {

87 
l
 = (
a
->
˚¡î_x
 - 
x
) * (a->center_x - x)

88 + (
a
->
˚¡î_y
 - 
y
) * (a->center_y - y);

89 i‡((
mö
 < 0 || 
l
 < möË&&Ü < 
limô
) {

90 
n
 = 
i
;

91 
mö
 = 
l
;

95  
n
;

96 
	}
}

99 
	$£¨chM≠Aªa
(
Buf„r
 *
buf
, 
M≠Li°
 *
ml
, 
Anch‹
 *
a_img
)

101 
Li°Iãm
 *
Æ
;

102 
M≠Aªa
 *
a
;

103 
i
, 
n
;

104 
px
, 
py
;

106 i‡(!(
ml
 && ml->
¨ó
 && ml->¨ó->
nôem
))

108 i‡(!
	`gëM≠XY
(
buf
, 
a_img
, &
px
, &
py
))

110 
n
 = -
ml
->
¨ó
->
nôem
;

111 
i
 = 0, 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
; i++,á»Æ->
√xt
) {

112 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

113 i‡(!
a
)

115 i‡(
n
 < 0 && 
	`öM≠Aªa
(
a
, 
px
, 
py
)) {

116 i‡(
a
->
sh≠e
 =
SHAPE_DEFAULT
) {

117 i‡(
n
 =-
ml
->
¨ó
->
nôem
)

118 
n
 = -
i
;

121 
n
 = 
i
;

124 i‡(
n
 =-
ml
->
¨ó
->
nôem
)

125  
	`√¨e°M≠Aªa
(
ml
, 
px
, 
py
);

126 i‡(
n
 < 0)

127  -
n
;

128  
n
;

129 
	}
}

131 
M≠Aªa
 *

132 
	$ªåõveCuºítM≠Aªa
(
Buf„r
 *
buf
)

134 
Anch‹
 *
a_img
, *
a_f‹m
;

135 
F‹mIãmLi°
 *
fi
;

136 
M≠Li°
 *
ml
;

137 
Li°Iãm
 *
Æ
;

138 
M≠Aªa
 *
a
;

139 
i
, 
n
;

141 
a_img
 = 
	`ªåõveCuºítImg
(
buf
);

142 i‡(!(
a_img
 &&á_img->
image
 &&á_img->image->
m≠
))

143  
NULL
;

144 
a_f‹m
 = 
	`ªåõveCuºítF‹m
(
buf
);

145 i‡(!(
a_f‹m
 &&á_f‹m->
uæ
))

146  
NULL
;

147 
fi
 = (
F‹mIãmLi°
 *)
a_f‹m
->
uæ
;

148 i‡(!(
fi
 && fi->
∑ª¡
 && fi->∑ª¡->
ôem
))

149  
NULL
;

150 
fi
 = fi->
∑ª¡
->
ôem
;

151 
ml
 = 
	`£¨chM≠Li°
(
buf
, 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
);

152 i‡(!
ml
)

153  
NULL
;

154 
n
 = 
	`£¨chM≠Aªa
(
buf
, 
ml
, 
a_img
);

155 i‡(
n
 < 0)

156  
NULL
;

157 
i
 = 0, 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
; i++,á»Æ->
√xt
) {

158 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

159 i‡(
a
 && 
i
 =
n
)

160  
a
;

162  
NULL
;

163 
	}
}

166 
	$gëM≠XY
(
Buf„r
 *
buf
, 
Anch‹
 *
a
, *
x
, *
y
)

168 i‡(!
buf
 || !
a
 || !a->
image
 || !
x
 || !
y
)

170 *
x
 = ()((
buf
->
cuºítCﬁumn
 + buf->
curs‹X


171 - 
	`COLPOS
(
buf
->
cuºítLöe
, 
a
->
°¨t
.
pos
) + 0.5)

172 * 
pixñ_≥r_ch¨
Ë- 
a
->
image
->
xoff£t
;

173 *
y
 = ()((
buf
->
cuºítLöe
->
löíumbî
 - 
a
->
image
->y + 0.5)

174 * 
pixñ_≥r_löe
Ë- 
a
->
image
->
yoff£t
;

175 i‡(*
x
 <= 0)

176 *
x
 = 1;

177 i‡(*
y
 <= 0)

178 *
y
 = 1;

180 
	}
}

183 
Anch‹
 *

184 
	$ªåõveCuºítM≠
(
Buf„r
 *
buf
)

186 
Anch‹
 *
a
;

187 
F‹mIãmLi°
 *
fi
;

189 
a
 = 
	`ªåõveCuºítF‹m
(
buf
);

190 i‡(!
a
 || !a->
uæ
)

191  
NULL
;

192 
fi
 = (
F‹mIãmLi°
 *)
a
->
uæ
;

193 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL
 &&

194 !
	`Såcmp_ch¨p
(
fi
->
∑ª¡
->
a˘i⁄
, "map"))

195  
a
;

196  
NULL
;

197 
	}
}

199 #i‡
deföed
(
USE_IMAGE
Ë|| deföed(
MENU_MAP
)

200 
M≠Aªa
 *

201 
	$fﬁlow_m≠_míu
(
Buf„r
 *
buf
, *
«me
, 
Anch‹
 *
a_img
, 
x
, 
y
)

203 
M≠Li°
 *
ml
;

204 
Li°Iãm
 *
Æ
;

205 
i
, 
£À˘ed
 = -1;

206 
öôül
 = 0;

207 #ifde‡
MENU_MAP


208 
M≠Aªa
 *
a
;

209 **
œbñ
;

212 
ml
 = 
	`£¨chM≠Li°
(
buf
, 
«me
);

213 i‡(
ml
 =
NULL
 || ml->
¨ó
 =NULL || ml->¨ó->
nôem
 == 0)

214  
NULL
;

216 #ifde‡
USE_IMAGE


217 
öôül
 = 
	`£¨chM≠Aªa
(
buf
, 
ml
, 
a_img
);

218 i‡(
öôül
 < 0)

219 
öôül
 = 0;

220 i‡(!
image_m≠_li°
) {

221 
£À˘ed
 = 
öôül
;

222 
m≠_íd
;

226 #ifde‡
MENU_MAP


227 
œbñ
 = 
	`New_N
(*, 
ml
->
¨ó
->
nôem
 + 1);

228 
i
 = 0, 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
; i++,á»Æ->
√xt
) {

229 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

230 i‡(
a
)

231 
œbñ
[
i
] = *
a
->
Æt
 ?á->Æà:á->
uæ
;

233 
œbñ
[
i
] = "";

235 
œbñ
[
ml
->
¨ó
->
nôem
] = 
NULL
;

237 
	`›ti⁄Míu
(
x
, 
y
, 
œbñ
, &
£À˘ed
, 
öôül
, 
NULL
);

240 #ifde‡
USE_IMAGE


241 
m≠_íd
:

243 i‡(
£À˘ed
 >= 0) {

244 
i
 = 0, 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
; i++,á»Æ->
√xt
) {

245 i‡(
Æ
->
±r
 && 
i
 =
£À˘ed
)

246  (
M≠Aªa
 *Ë
Æ
->
±r
;

249  
NULL
;

250 
	}
}

253 #i‚de‡
MENU_MAP


254 *
	gm≠1
 = "<HTML><HEAD><TITLE>Image mapÜinks</TITLE></HEAD>\
<BODY><H1>Image mapÜinks</H1>\
<table>";

258 
Buf„r
 *

259 
	$fﬁlow_m≠_∑√l
(
Buf„r
 *
buf
, *
«me
)

261 
Så
 
m≠∑ge
;

262 
M≠Li°
 *
ml
;

263 
Li°Iãm
 *
Æ
;

264 
M≠Aªa
 *
a
;

265 
P¨£dURL
 
pu
;

266 *
p
, *
q
;

267 
Buf„r
 *
√wbuf
;

269 
ml
 = 
	`£¨chM≠Li°
(
buf
, 
«me
);

270 i‡(
ml
 =
NULL
)

271  
NULL
;

273 
m≠∑ge
 = 
	`Så√w_ch¨p
(
m≠1
);

274 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
;á»Æ->
√xt
) {

275 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

276 i‡(!
a
)

278 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

279 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

280 
q
 = 
	`html_quŸe
(
p
);

281 i‡(
DecodeURL
)

282 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

284 
p
 = 
q
;

285 
	`Såˇt_m_ch¨p
(
m≠∑ge
, "<å vÆignÒ›><td><®hªf=\"", 
q
, "\">",

286 
	`html_quŸe
(*
a
->
Æt
 ?á->Æà: 
	`myba£«me
◊->
uæ
)),

287 "</a><td>", 
p
, 
NULL
);

289 
	`Såˇt_ch¨p
(
m≠∑ge
, "</table></body></html>");

291 
√wbuf
 = 
	`lﬂdHTMLSåög
(
m≠∑ge
);

292 #ifde‡
USE_M17N


293 i‡(
√wbuf
)

294 
√wbuf
->
documít_ch¨£t
 = 
buf
->document_charset;

296  
√wbuf
;

297 
	}
}

300 
M≠Aªa
 *

301 
	$√wM≠Aªa
(*
uæ
, *
èrgë
, *
Æt
, *
sh≠e
, *
co‹ds
)

303 
M≠Aªa
 *
a
 = 
	`New
(MapArea);

304 #ifde‡
USE_IMAGE


305 *
p
;

306 
i
, 
max
;

309 
a
->
uæ
 = url;

310 
a
->
èrgë
 =Åarget;

311 
a
->
Æt
 =ált ?ált : "";

312 #ifde‡
USE_IMAGE


313 
a
->
sh≠e
 = 
SHAPE_RECT
;

314 i‡(
sh≠e
) {

315 i‡(!
	`°rˇ£cmp
(
sh≠e
, "default"))

316 
a
->
sh≠e
 = 
SHAPE_DEFAULT
;

317 i‡(!
	`°∫ˇ£cmp
(
sh≠e
, "rect", 4))

318 
a
->
sh≠e
 = 
SHAPE_RECT
;

319 i‡(!
	`°∫ˇ£cmp
(
sh≠e
, "circ", 4))

320 
a
->
sh≠e
 = 
SHAPE_CIRCLE
;

321 i‡(!
	`°∫ˇ£cmp
(
sh≠e
, "poly", 4))

322 
a
->
sh≠e
 = 
SHAPE_POLY
;

324 
a
->
sh≠e
 = 
SHAPE_UNKNOWN
;

326 
a
->
co‹ds
 = 
NULL
;

327 
a
->
nco‹ds
 = 0;

328 
a
->
˚¡î_x
 = 0;

329 
a
->
˚¡î_y
 = 0;

330 i‡(
a
->
sh≠e
 =
SHAPE_UNKNOWN
 ||á->sh≠ê=
SHAPE_DEFAULT
)

331  
a
;

332 i‡(!
co‹ds
) {

333 
a
->
sh≠e
 = 
SHAPE_UNKNOWN
;

334  
a
;

336 i‡(
a
->
sh≠e
 =
SHAPE_RECT
) {

337 
a
->
co‹ds
 = 
	`New_N
(, 4);

338 
a
->
nco‹ds
 = 4;

340 i‡(
a
->
sh≠e
 =
SHAPE_CIRCLE
) {

341 
a
->
co‹ds
 = 
	`New_N
(, 3);

342 
a
->
nco‹ds
 = 3;

344 
max
 = 
a
->
nco‹ds
;

345 
i
 = 0, 
p
 = 
co‹ds
; (
a
->
sh≠e
 =
SHAPE_POLY
 || i <á->
nco‹ds
) && *p;) {

346 
	`IS_SPACE
(*
p
))

347 
p
++;

348 i‡(!
	`IS_DIGIT
(*
p
) && *p != '-' && *p != '+')

350 i‡(
a
->
sh≠e
 =
SHAPE_POLY
) {

351 i‡(
max
 <
i
) {

352 
max
 = 
i
 ? i * 2 : 6;

353 
a
->
co‹ds
 = 
	`New_Reu£
(,á->co‹ds, 
max
 + 2);

355 
a
->
nco‹ds
++;

357 
a
->
co‹ds
[
i
] = ()
	`©oi
(
p
);

358 
i
++;

359 i‡(*
p
 == '-' || *p == '+')

360 
p
++;

361 
	`IS_DIGIT
(*
p
))

362 
p
++;

363 i‡(*
p
 !',' && !
	`IS_SPACE
(*p))

365 
	`IS_SPACE
(*
p
))

366 
p
++;

367 i‡(*
p
 == ',')

368 
p
++;

370 i‡(
i
 !
a
->
nco‹ds
 || (a->
sh≠e
 =
SHAPE_POLY
 &&á->ncoords < 6)) {

371 
a
->
sh≠e
 = 
SHAPE_UNKNOWN
;

372 
a
->
co‹ds
 = 
NULL
;

373 
a
->
nco‹ds
 = 0;

374  
a
;

376 i‡(
a
->
sh≠e
 =
SHAPE_POLY
) {

377 
a
->
nco‹ds
 =á->ncoords / 2 * 2;

378 
a
->
co‹ds
[a->
nco‹ds
] =á->coords[0];

379 
a
->
co‹ds
[a->
nco‹ds
 + 1] =á->coords[1];

381 i‡(
a
->
sh≠e
 =
SHAPE_CIRCLE
) {

382 
a
->
˚¡î_x
 =á->
co‹ds
[0];

383 
a
->
˚¡î_y
 =á->
co‹ds
[1];

386 
i
 = 0; i < 
a
->
nco‹ds
 / 2; i++) {

387 
a
->
˚¡î_x
 +a->
co‹ds
[2 * 
i
];

388 
a
->
˚¡î_y
 +a->
co‹ds
[2 * 
i
 + 1];

390 
a
->
˚¡î_x
 /a->
nco‹ds
 / 2;

391 
a
->
˚¡î_y
 /a->
nco‹ds
 / 2;

394  
a
;

395 
	}
}

399 
	$≠≥nd_m≠_öfo
(
Buf„r
 *
buf
, 
Så
 
tmp
, 
F‹mIãmLi°
 *
fi
)

401 
M≠Li°
 *
ml
;

402 
Li°Iãm
 *
Æ
;

403 
M≠Aªa
 *
a
;

404 
P¨£dURL
 
pu
;

405 *
p
, *
q
;

407 
ml
 = 
	`£¨chM≠Li°
(
buf
, 
fi
->
vÆue
 ? fi->vÆue->
±r
 : 
NULL
);

408 i‡(
ml
 =
NULL
)

411 
	`Såˇt_m_ch¨p
(
tmp
,

413 "<å vÆignÒ›><td cﬁ•™=2><èbÀ>", 
NULL
);

414 
Æ
 = 
ml
->
¨ó
->
fú°
;á»!
NULL
;á»Æ->
√xt
) {

415 
a
 = (
M≠Aªa
 *Ë
Æ
->
±r
;

416 i‡(!
a
)

418 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

419 
q
 = 
	`html_quŸe
(
	`∑r£dURL2Så
(&
pu
)->
±r
);

420 i‡(
DecodeURL
)

421 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(
a
->
uæ
, 
buf
->
documít_ch¨£t
));

423 
p
 = 
	`html_quŸe
(
a
->
uæ
);

424 
	`Såˇt_m_ch¨p
(
tmp
, "<tr valign=top><td>&nbsp;&nbsp;<td><a href=\"",

425 
q
, "\">",

426 
	`html_quŸe
(*
a
->
Æt
 ?á->Æà: 
	`myba£«me
◊->
uæ
)),

427 "</a><td>", 
p
, "\n", 
NULL
);

429 
	`Såˇt_ch¨p
(
tmp
, "</table>");

430 
	}
}

434 
	$≠≥nd_lök_öfo
(
Buf„r
 *
buf
, 
Så
 
html
, 
LökLi°
 * 
lök
)

436 
LökLi°
 *
l
;

437 
P¨£dURL
 
pu
;

438 *
uæ
;

440 i‡(!
lök
)

443 
	`Såˇt_ch¨p
(
html
, "<hr width=50%><h1>Link information</h1><table>\n");

444 
l
 = 
lök
;Ü;Ü =Ü->
√xt
) {

445 i‡(
l
->
uæ
) {

446 
	`∑r£URL2
(
l
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

447 
uæ
 = 
	`html_quŸe
(
	`∑r£dURL2Så
(&
pu
)->
±r
);

450 
uæ
 = "(empty)";

451 
	`Såˇt_m_ch¨p
(
html
, "<å vÆignÒ›><td><®hªf=\"", 
uæ
, "\">",

452 
l
->
tôÀ
 ? 
	`html_quŸe
(l->title) : "(empty)", "</a><td>",

453 
NULL
);

454 i‡(
l
->
ty≥
 =
LINK_TYPE_REL
)

455 
	`Såˇt_ch¨p
(
html
, "[Rel]");

456 i‡(
l
->
ty≥
 =
LINK_TYPE_REV
)

457 
	`Såˇt_ch¨p
(
html
, "[Rev]");

458 i‡(!
l
->
uæ
)

459 
uæ
 = "(empty)";

460 i‡(
DecodeURL
)

461 
uæ
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(
l
->uæ, 
buf
->
documít_ch¨£t
));

463 
uæ
 = 
	`html_quŸe
(
l
->url);

464 
	`Såˇt_m_ch¨p
(
html
, "<td>", 
uæ
, 
NULL
);

465 i‡(
l
->
˘y≥
)

466 
	`Såˇt_m_ch¨p
(
html
, " (", 
	`html_quŸe
(
l
->
˘y≥
), ")", 
NULL
);

467 
	`Såˇt_ch¨p
(
html
, "\n");

469 
	`Såˇt_ch¨p
(
html
, "</table>\n");

470 
	}
}

474 
	$≠≥nd_‰ame_öfo
(
Buf„r
 *
buf
, 
Så
 
html
, 
‰ame£t
 *
£t
, 
Àvñ
)

476 *
p
, *
q
;

477 
i
, 
j
;

479 i‡(!
£t
)

482 
i
 = 0; i < 
£t
->
cﬁ
 * së->
row
; i++) {

483 
‰ame£t_ñemít
 
‰ame
 = 
£t
->‰ame[
i
];

484 i‡(
‰ame
.
ñemít
 !
NULL
) {

485 
‰ame
.
ñemít
->
©å
) {

486 
F_UNLOADED
:

487 
F_BODY
:

488 i‡(
‰ame
.
body
->
uæ
 =
NULL
)

490 
	`Såˇt_ch¨p
(
html
, "<pre_int>");

491 
j
 = 0; j < 
Àvñ
; j++)

492 
	`Såˇt_ch¨p
(
html
, " ");

493 
q
 = 
	`html_quŸe
(
‰ame
.
body
->
uæ
);

494 
	`Såˇt_m_ch¨p
(
html
, "<®hªf=\"", 
q
, "\">", 
NULL
);

495 i‡(
‰ame
.
body
->
«me
) {

496 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(
‰ame
.
body
->
«me
,

497 
buf
->
documít_ch¨£t
));

498 
	`Såˇt_ch¨p
(
html
, 
p
);

500 i‡(
DecodeURL
)

501 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
(
‰ame
.
body
->
uæ
,

502 
buf
->
documít_ch¨£t
));

504 
p
 = 
q
;

505 
	`Såˇt_m_ch¨p
(
html
, " ", 
p
, "</a></¥e_öt><br>\n", 
NULL
);

506 #ifde‡
USE_SSL


507 i‡(
‰ame
.
body
->
s¶_˚πifiˇã
)

508 
	`Såˇt_m_ch¨p
(
html
,

510 
	`html_quŸe
(
‰ame
.
body
->
s¶_˚πifiˇã
),

511 "</¥e></blockquŸe>\n", 
NULL
);

514 
F_FRAMESET
:

515 
	`≠≥nd_‰ame_öfo
(
buf
, 
html
, 
‰ame
.
£t
, 
Àvñ
 + 1);

520 
	}
}

525 
Buf„r
 *

526 
	$∑ge_öfo_∑√l
(
Buf„r
 *
buf
)

528 
Så
 
tmp
 = 
	`Så√w_size
(1024);

529 
Anch‹
 *
a
;

530 
P¨£dURL
 
pu
;

531 
TextLi°Iãm
 *
ti
;

532 
‰ame£t
 *
f_£t
 = 
NULL
;

533 
Æl
;

534 *
p
, *
q
;

535 #ifde‡
USE_M17N


536 
wc_˚s_li°
 *
li°
;

537 
ch¨£t
[16];

539 
Buf„r
 *
√wbuf
;

541 
	`Såˇt_ch¨p
(
tmp
, "<html><head>\
<title>Informationábout currentÖage</title>\
</head><body>\
<h1>Informationábout currentÖage</h1>\n");

545 i‡(
buf
 =
NULL
)

546 
íd
;

547 
Æl
 = 
buf
->
ÆlLöe
;

548 i‡(
Æl
 =0 && 
buf
->
œ°Löe
)

549 
Æl
 = 
buf
->
œ°Löe
->
löíumbî
;

550 #ifde‡
USE_M17N


551 
	`Såˇt_ch¨p
(
tmp
, "<form method=internaláction=charset>");

553 
p
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
;

554 i‡(
DecodeURL
)

555 
p
 = 
	`uæ_unquŸe_c⁄v
(p, 0);

556 
	`Såˇt_m_ch¨p
(
tmp
, "<table cellpadding=0>",

558 
	`html_quŸe
(
buf
->
buf„∫ame
),

560 
	`html_quŸe
(
p
),

562 
buf
->
ªÆ_ty≥
 ? 
	`html_quŸe
(buf->real_type) : "unknown",

564 
	`html_quŸe
(
	`œ°_modifõd
(
buf
)), 
NULL
);

565 #ifde‡
USE_M17N


566 i‡(
buf
->
documít_ch¨£t
 !
I¬îCh¨£t
) {

567 
li°
 = 
	`wc_gë_˚s_li°
();

568 
	`Såˇt_ch¨p
(
tmp
,

570 ; 
li°
->
«me
 !
NULL
;Üist++) {

571 
	`•rötf
(
ch¨£t
, "%d", ()
li°
->
id
);

572 
	`Såˇt_m_ch¨p
(
tmp
, "<›ti⁄ vÆue=", 
ch¨£t
,

573 (
buf
->
documít_ch¨£t
 =
li°
->
id
) ? " selected>"

574 : ">", 
li°
->
desc
, 
NULL
);

576 
	`Såˇt_ch¨p
(
tmp
, "</select>");

577 
	`Såˇt_ch¨p
(
tmp
, "<tr><td><td><inputÅype=submit value=Change>");

580 
	`Såˇt_m_ch¨p
(
tmp
,

582 
	`S¥ötf
("%d", 
Æl
)->
±r
,

584 
	`S¥ötf
("%d", 
buf
->
åbyã
)->
±r
, 
NULL
);

586 
a
 = 
	`ªåõveCuºítAnch‹
(
buf
);

587 i‡(
a
 !
NULL
) {

588 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

589 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

590 
q
 = 
	`html_quŸe
(
p
);

591 i‡(
DecodeURL
)

592 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

594 
p
 = 
q
;

595 
	`Såˇt_m_ch¨p
(
tmp
,

597 
q
, "\">", 
p
, "</a>", 
NULL
);

599 
a
 = 
	`ªåõveCuºítImg
(
buf
);

600 i‡(
a
 !
NULL
) {

601 
	`∑r£URL2
(
a
->
uæ
, &
pu
, 
	`ba£URL
(
buf
));

602 
p
 = 
	`∑r£dURL2Så
(&
pu
)->
±r
;

603 
q
 = 
	`html_quŸe
(
p
);

604 i‡(
DecodeURL
)

605 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

607 
p
 = 
q
;

608 
	`Såˇt_m_ch¨p
(
tmp
,

610 
q
, "\">", 
p
, "</a>", 
NULL
);

612 
a
 = 
	`ªåõveCuºítF‹m
(
buf
);

613 i‡(
a
 !
NULL
) {

614 
F‹mIãmLi°
 *
fi
 = (F‹mIãmLi° *)
a
->
uæ
;

615 
p
 = 
	`f‹m2°r
(
fi
);

616 i‡(
DecodeURL
)

617 
p
 = 
	`html_quŸe
(
	`uæ_unquŸe_c⁄v
’, 
buf
->
documít_ch¨£t
));

619 
p
 = 
	`html_quŸe
(p);

620 
	`Såˇt_m_ch¨p
(
tmp
,

622 
p
, 
NULL
);

623 i‡(
fi
->
∑ª¡
->
mëhod
 =
FORM_METHOD_INTERNAL


624 && !
	`Såcmp_ch¨p
(
fi
->
∑ª¡
->
a˘i⁄
, "map"))

625 
	`≠≥nd_m≠_öfo
(
buf
, 
tmp
, 
fi
->
∑ª¡
->
ôem
);

627 
	`Såˇt_ch¨p
(
tmp
, "</table>\n");

628 #ifde‡
USE_M17N


629 
	`Såˇt_ch¨p
(
tmp
, "</form>");

632 
	`≠≥nd_lök_öfo
(
buf
, 
tmp
, buf->
lökli°
);

634 i‡(
buf
->
documít_hódî
 !
NULL
) {

635 
	`Såˇt_ch¨p
(
tmp
, "<hr width=50%><h1>Header information</h1><pre>\n");

636 
ti
 = 
buf
->
documít_hódî
->
fú°
;Åò!
NULL
;Åòti->
√xt
)

637 
	`Såˇt_m_ch¨p
(
tmp
, "<¥e_öt>", 
	`html_quŸe
(
ti
->
±r
),

638 "</¥e_öt>\n", 
NULL
);

639 
	`Såˇt_ch¨p
(
tmp
, "</pre>\n");

642 i‡(
buf
->
‰ame£t
 !
NULL
)

643 
f_£t
 = 
buf
->
‰ame£t
;

644 i‡(
buf
->
buf„Ωr›
 & 
BP_FRAME
 &&

645 
buf
->
√xtBuf„r
 !
NULL
 && buf->√xtBuf„r->
‰ame£t
 != NULL)

646 
f_£t
 = 
buf
->
√xtBuf„r
->
‰ame£t
;

648 i‡(
f_£t
) {

649 
	`Såˇt_ch¨p
(
tmp
, "<hr width=50%><h1>Frame information</h1>\n");

650 
	`≠≥nd_‰ame_öfo
(
buf
, 
tmp
, 
f_£t
, 0);

652 #ifde‡
USE_SSL


653 i‡(
buf
->
s¶_˚πifiˇã
)

654 
	`Såˇt_m_ch¨p
(
tmp
, "<h1>SSL certificate</h1><pre>\n",

655 
	`html_quŸe
(
buf
->
s¶_˚πifiˇã
), "</¥e>\n", 
NULL
);

657 
íd
:

658 
	`Såˇt_ch¨p
(
tmp
, "</body></html>");

659 
√wbuf
 = 
	`lﬂdHTMLSåög
(
tmp
);

660 #ifde‡
USE_M17N


661 i‡(
√wbuf
)

662 
√wbuf
->
documít_ch¨£t
 = 
buf
->document_charset;

664  
√wbuf
;

665 
	}
}

	@matrix.c

35 
	~"c⁄fig.h
"

36 
	~"m©rix.h
"

37 
	~<gc.h
>

43 
	#New
(
ty≥
Ë(—y≥*)
	`GC_MALLOC
(—y≥)))

	)

44 
	#NewAtom
(
ty≥
Ë(—y≥*)
	`GC_MALLOC_ATOMIC
(—y≥)))

	)

45 
	#New_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC
(“)*—y≥)))

	)

46 
	#NewAtom_N
(
ty≥
,
n
Ë(—y≥*)
	`GC_MALLOC_ATOMIC
(“)*—y≥)))

	)

47 
	#Ríew_N
(
ty≥
,
±r
,
n
Ë(—y≥*)
	`GC_REALLOC
(’å),“)*—y≥)))

	)

49 
	#SWAPD
(
a
,
b
Ë{ 
tmp
 =á;á = b; b =Åmp; }

	)

50 
	#SWAPI
(
a
,
b
Ë{ 
tmp
 =á;á = b; b =Åmp; }

	)

52 #ifde‡
HAVE_FLOAT_H


53 
	~<Êﬂt.h
>

55 #i‡
deföed
(
DBL_MAX
)

56 
	gTöy
 = 10.0 / 
DBL_MAX
;

57 #ñi‡
deföed
(
FLT_MAX
)

58 
	gTöy
 = 10.0 / 
FLT_MAX
;

60 
	gTöy
 = 1.0e-30;

69 
	$LUÁ˘‹
(
M©rix
 
A
, *
ödex¨øy
)

71 
dim
 = 
A
->dim, 
i
, 
j
, 
k
, 
i_max
, 
k_max
;

72 
Ve˘‹
 
sˇÀ
;

73 
mx
, 
tmp
;

75 
sˇÀ
 = 
	`√w_ve˘‹
(
dim
);

77 
i
 = 0; i < 
dim
; i++)

78 
ödex¨øy
[
i
] = i;

80 
i
 = 0; i < 
dim
; i++) {

81 
mx
 = 0.;

82 
j
 = 0; j < 
dim
; j++) {

83 
tmp
 = 
	`Ábs
(
	`M_VAL
(
A
, 
i
, 
j
));

84 i‡(
mx
 < 
tmp
)

85 
mx
 = 
tmp
;

87 
sˇÀ
->
ve
[
i
] = 
mx
;

90 
k_max
 = 
dim
 - 1;

91 
k
 = 0; k < 
k_max
; k++) {

92 
mx
 = 0.;

93 
i_max
 = -1;

94 
i
 = 
k
; i < 
dim
; i++) {

95 i‡(
	`Ábs
(
sˇÀ
->
ve
[
i
]Ë>
Töy
 * fabs(
	`M_VAL
(
A
, i, 
k
))) {

96 
tmp
 = 
	`Ábs
(
	`M_VAL
(
A
, 
i
, 
k
)Ë/ 
sˇÀ
->
ve
[i];

97 i‡(
mx
 < 
tmp
) {

98 
mx
 = 
tmp
;

99 
i_max
 = 
i
;

103 i‡(
i_max
 == -1) {

104 
	`M_VAL
(
A
, 
k
, k) = 0.;

108 i‡(
i_max
 !
k
) {

109 
	`SWAPI
(
ödex¨øy
[
i_max
], index¨øy[
k
]);

110 
j
 = 0; j < 
dim
; j++)

111 
	`SWAPD
(
	`M_VAL
(
A
, 
i_max
, 
j
), M_VAL(A, 
k
, j));

114 
i
 = 
k
 + 1; i < 
dim
; i++) {

115 
tmp
 = 
	`M_VAL
(
A
, 
i
, 
k
) = M_VAL(A, i, k) / M_VAL(A, k, k);

116 
j
 = 
k
 + 1; j < 
dim
; j++)

117 
	`M_VAL
(
A
, 
i
, 
j
Ë-
tmp
 * M_VAL(A, 
k
, j);

121 
	}
}

128 
	$LUsﬁve
(
M©rix
 
A
, *
ödex¨øy
, 
Ve˘‹
 
b
, Ve˘‹ 
x
)

130 
i
, 
dim
 = 
A
->dim;

132 
i
 = 0; i < 
dim
; i++)

133 
x
->
ve
[
i
] = 
b
->ve[
ödex¨øy
[i]];

135 i‡(
	`Lsﬁve
(
A
, 
x
, x, 1.Ë=-1 || 
	`Usﬁve
(A, x, x, 0.) == -1)

138 
	}
}

143 
M©rix


144 
	$m_övî£
(
M©rix
 
A
, M©rix 
out
)

146 *
ödex¨øy
 = 
	`NewAtom_N
(, 
A
->
dim
);

147 
M©rix
 
A1
 = 
	`√w_m©rix
(
A
->
dim
);

148 
	`m_c›y
(
A
, 
A1
);

149 
	`LUÁ˘‹
(
A1
, 
ödex¨øy
);

150  
	`LUövî£
(
A1
, 
ödex¨øy
, 
out
);

151 
	}
}

154 
M©rix


155 
	$LUövî£
(
M©rix
 
A
, *
ödex¨øy
, M©rix 
out
)

157 
i
, 
j
, 
dim
 = 
A
->dim;

158 
Ve˘‹
 
tmp
, 
tmp2
;

160 i‡(!
out
)

161 
out
 = 
	`√w_m©rix
(
dim
);

162 
tmp
 = 
	`√w_ve˘‹
(
dim
);

163 
tmp2
 = 
	`√w_ve˘‹
(
dim
);

164 
i
 = 0; i < 
dim
; i++) {

165 
j
 = 0; j < 
dim
; j++)

166 
tmp
->
ve
[
j
] = 0.;

167 
tmp
->
ve
[
i
] = 1.;

168 i‡(
	`LUsﬁve
(
A
, 
ödex¨øy
, 
tmp
, 
tmp2
) == -1)

169  
NULL
;

170 
j
 = 0; j < 
dim
; j++)

171 
	`M_VAL
(
out
, 
j
, 
i
Ë
tmp2
->
ve
[j];

173  
out
;

174 
	}
}

182 
	$Usﬁve
(
M©rix
 
m©
, 
Ve˘‹
 
b
, Ve˘‹ 
out
, 
düg
)

184 
i
, 
j
, 
i_lim
, 
dim
 = 
m©
->dim;

185 
sum
;

187 
i
 = 
dim
 - 1; i >= 0; i--) {

188 i‡(
b
->
ve
[
i
] != 0.)

191 
out
->
ve
[
i
] = 0.;

193 
i_lim
 = 
i
;

195 ; 
i
 >= 0; i--) {

196 
sum
 = 
b
->
ve
[
i
];

197 
j
 = 
i
 + 1; j <
i_lim
; j++)

198 
sum
 -
	`M_VAL
(
m©
, 
i
, 
j
Ë* 
out
->
ve
[j];

199 i‡(
düg
 == 0.) {

200 i‡(
	`Ábs
(
	`M_VAL
(
m©
, 
i
, i)Ë<
Töy
 * fabs(
sum
))

203 
out
->
ve
[
i
] = 
sum
 / 
	`M_VAL
(
m©
, i, i);

206 
out
->
ve
[
i
] = 
sum
 / 
düg
;

210 
	}
}

217 
	$Lsﬁve
(
M©rix
 
m©
, 
Ve˘‹
 
b
, Ve˘‹ 
out
, 
düg
)

219 
i
, 
j
, 
i_lim
, 
dim
 = 
m©
->dim;

220 
sum
;

222 
i
 = 0; i < 
dim
; i++) {

223 i‡(
b
->
ve
[
i
] != 0.)

226 
out
->
ve
[
i
] = 0.;

228 
i_lim
 = 
i
;

230 ; 
i
 < 
dim
; i++) {

231 
sum
 = 
b
->
ve
[
i
];

232 
j
 = 
i_lim
; j < 
i
; j++)

233 
sum
 -
	`M_VAL
(
m©
, 
i
, 
j
Ë* 
out
->
ve
[j];

234 i‡(
düg
 == 0.) {

235 i‡(
	`Ábs
(
	`M_VAL
(
m©
, 
i
, i)Ë<
Töy
 * fabs(
sum
))

238 
out
->
ve
[
i
] = 
sum
 / 
	`M_VAL
(
m©
, i, i);

241 
out
->
ve
[
i
] = 
sum
 / 
düg
;

245 
	}
}

251 
M©rix


252 
	$√w_m©rix
(
n
)

254 
M©rix
 
m©
;

256 
m©
 = 
	`New
(
m©rix
);

257 
m©
->
dim
 = 
n
;

258 
m©
->
me
 = 
	`NewAtom_N
(, 
n
 *Ç);

259  
m©
;

260 
	}
}

266 
Ve˘‹


267 
	$√w_ve˘‹
(
n
)

269 
Ve˘‹
 
vec
;

271 
vec
 = 
	`New
(
ve˘‹
);

272 
vec
->
dim
 = 
n
;

273 
vec
->
ve
 = 
	`NewAtom_N
(, 
n
);

274  
vec
;

275 
	}
}

	@matrix.h

10 #i‚de‡
_MATRIX_H


11 
	~<m©h.h
>

12 
	~<°rög.h
>

18 
	sm©rix
 {

19 *
	mme
;

20 
	mdim
;

23 
	sve˘‹
 {

24 *
	mve
;

25 
	mdim
;

28 
m©rix
 *
	tM©rix
;

29 
ve˘‹
 *
	tVe˘‹
;

35 
	#M_VAL
(
m
,
i
,
j
Ë((m)->
me
[(i)*(m)->
dim
 +(j)])

	)

36 
	#V_VAL
(
v
,
i
Ë((v)->
ve
[i])

	)

42 
	#m_íåy
(
m
,
i
,
j
Ë(
	`M_VAL
(m,i,j))

	)

43 
	#v_íåy
(
v
,
i
Ë(
	`V_VAL
(v,i))

	)

44 
	#m_c›y
(
m1
,
m2
Ë(
	`bc›y
((m1)->
me
,(m2)->me,(m1)->
dim
*(m1)->dim*()))

	)

45 
	#v_‰ì
(
v
Ë((v)=
NULL
)

	)

46 
	#m_‰ì
(
m
Ë((m)=
NULL
)

	)

47 
	#px_‰ì
(
px
Ë(’x)=
NULL
)

	)

48 
	#m_£t_vÆ
(
m
,
i
,
j
,
x
Ë(
	`M_VAL
(m,i,jË(x))

	)

49 
	#m_add_vÆ
(
m
,
i
,
j
,
x
Ë(
	`M_VAL
(m,i,jË+(x))

	)

50 
	#v_£t_vÆ
(
v
,
i
,
x
Ë(
	`V_VAL
(v,iË(x))

	)

51 
	#v_add_vÆ
(
v
,
i
,
x
Ë(
	`V_VAL
(v,iË+(x))

	)

52 
	#m_gë
(
r
,
c
Ë(
	`√w_m©rix
‘))

	)

53 
	#v_gë
(
n
Ë(
	`√w_ve˘‹
“))

	)

54 
	#px_gë
(
n
Ë(
	`New_N
(,n))

	)

55 
m©rix
 
	tMAT
;

56 
ve˘‹
 
	tVEC
;

57 
	tPERM
;

59 
LUÁ˘‹
(
M©rix
, *);

60 
M©rix
 
m_övî£
(Matrix, Matrix);

61 
M©rix
 
LUövî£
(Matrix, *, Matrix);

62 
LUsﬁve
(
M©rix
, *, 
Ve˘‹
, Vector);

63 
Lsﬁve
(
M©rix
, 
Ve˘‹
, Vector, );

64 
Usﬁve
(
M©rix
, 
Ve˘‹
, Vector, );

65 
M©rix
 
√w_m©rix
();

66 
Ve˘‹
 
√w_ve˘‹
();

68 
	#_MATRIX_H


	)

	@menu.c

5 
	~<°dio.h
>

7 
	~"fm.h
"

8 
	~"míu.h
"

9 
	~"func.h
"

10 
	~"my˘y≥.h
"

11 
	~"ªgex.h
"

13 #ifde‡
USE_MOUSE


14 #ifde‡
USE_GPM


15 
	~<gpm.h
>

16 
gpm_¥o˚ss_míu_mou£
(
Gpm_Evít
 * 
evít
, *
d©a
);

17 
gpm_¥o˚ss_mou£
(
Gpm_Evít
 *, *);

19 #ifde‡
USE_SYSMOUSE


20 (*
sysm_h™dÀr
Ë(
x
, 
y
, 
nbs
, 
obs
);

21 
	`sysm_¥o˚ss_míu_mou£
(, , , );

22 
	`sysm_¥o˚ss_mou£
(, , , );

24 #i‡
	`deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

25 
	#X_MOUSE_SELECTED
 ()0xff

	)

26 
X_Mou£_Sñe˘i⁄
;

27 
	`do_gëch
();

28 
	#gëch
(Ë
	`do_gëch
()

	)

32 #ifde‡
USE_MENU


34 **
FRAME
;

35 
FRAME_WIDTH
;

36 
gøph_mode
 = 
FALSE
;

37 
	#G_°¨t
 {i‡(
gøph_mode
Ë
	`gøph°¨t
();
	}

	)
}

38 
	#G_íd
 {i‡(
gøph_mode
Ë
	`gøphíd
();}

	)

40 
mEsc
(
c
);

41 
mEscB
(
c
);

42 
mEscD
(
c
);

43 
mNuŒ
(
c
);

44 
mSñe˘
(
c
);

45 
mDown
(
c
);

46 
mUp
(
c
);

47 
mLa°
(
c
);

48 
mT›
(
c
);

49 
mNext
(
c
);

50 
mPªv
(
c
);

51 
mF‹e
(
c
);

52 
mBack
(
c
);

53 
mLöeU
(
c
);

54 
mLöeD
(
c
);

55 
mOk
(
c
);

56 
mC™˚l
(
c
);

57 
mClo£
(
c
);

58 
mSu•
(
c
);

59 
mMou£
(
c
);

60 
mSrchF
(
c
);

61 
mSrchB
(
c
);

62 
mSrchN
(
c
);

63 
mSrchP
(
c
);

64 #ifde‡
__EMX__


65 
mPc
(
c
);

69 (*
	gMíuKeym≠
[128]Ë(
	gc
) = {

71 #ifde‡
__EMX__


72 
mPc
, 
mT›
, 
mPªv
, 
mClo£
, 
mNuŒ
, 
mLa°
, 
mNext
, mNull,

74 
mNuŒ
, 
mT›
, 
mPªv
, 
mClo£
, mNuŒ, 
mLa°
, 
mNext
, mNull,

77 
mC™˚l
,
mNuŒ
, 
mOk
, mNuŒ, mNuŒ, mOk, 
mDown
, mNull,

79 
mUp
, 
mNuŒ
, 
mSrchB
, 
mSrchF
, mNuŒ, mNuŒ, 
mNext
, mNull,

81 
mNuŒ
, mNuŒ, 
mSu•
, 
mEsc
, mNull, mNull, mNull, mNull,

83 
mOk
, 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull,

85 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mSrchF
,

87 
mNuŒ
, mNull, mNull, mNull, mNull, mNull , mNull, mNull,

89 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mSrchB
,

91 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

93 
mNuŒ
, mNuŒ, 
mLöeU
, 
mLöeD
, mNuŒ, mNuŒ, 
mSrchP
, mNull,

95 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

97 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

99 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

101 
mC™˚l
,
mNuŒ
, 
mDown
, 
mUp
, 
mOk
, mNuŒ, 
mSrchN
, mNull,

103 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

105 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mC™˚l
,

107 (*
	gMíuEscKeym≠
[128]Ë(
	gc
) = {

108 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

109 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

110 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

111 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

113 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

114 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

115 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

116 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

118 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

120 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mEscB
,

121 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

123 
mNuŒ
, mNuŒ, mNuŒ, 
mEscB
, mNull, mNull, mNull, mNull,

125 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

126 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

128 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mPªv
, mNull,

129 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

131 (*
	gMíuEscBKeym≠
[128]Ë(
	gc
) = {

132 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

133 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

134 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

135 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

137 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

138 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

139 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

140 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

142 
mNuŒ
, 
mUp
, 
mDown
, 
mOk
, 
mC™˚l
,
mClo£
, mNull, mNull,

144 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, 
mClo£
, 
mMou£
, mNull, mNull,

145 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

146 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

148 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

149 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

150 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

151 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

153 (*
	gMíuEscDKeym≠
[128]Ë(
	gc
) = {

155 
mNuŒ
, mNuŒ, 
mClo£
, mNuŒ, mNuŒ, 
mBack
, 
mF‹e
, mNull,

157 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

159 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

161 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, 
mClo£
, mNull, mNull, mNull,

163 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

164 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

165 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

166 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

168 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

169 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

170 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

171 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

173 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

174 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

175 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

176 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

179 #ifde‡
__EMX__


180 (*
	gMíuPcKeym≠
[256])(
	gc
)={

182 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

184 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

186 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

188 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

190 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

192 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mPªv
,

194 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

196 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

198 
mNuŒ
, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, mNuŒ, 
mT›
,

200 
mUp
, mUp, 
mNuŒ
, 
mC™˚l
,mNuŒ, 
mOk
, mNuŒ, 
mLa°
,

202 
mDown
, mDown, 
mClo£
, 
mC™˚l
,
mNuŒ
, mNull, mNull, mNull,

204 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

206 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

208 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

210 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

212 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

214 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

216 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

218 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

219 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

221 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

222 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

223 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

224 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

225 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

226 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

227 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

228 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

229 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

230 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

231 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull,

232 
mNuŒ
, mNull, mNull, mNull, mNull, mNull, mNull, mNull

238 
Míu
 
	gSñe˘Míu
;

239 
	gSñe˘V
 = 0;

240 
öôSñe˘Míu
();

241 
smChBuf
();

242 
smDñBuf
(
c
);

248 
Míu
 
	gSñTabMíu
;

249 
	gSñTabV
 = 0;

250 
öôSñTabMíu
();

251 
smChTab
();

252 
smDñTab
(
c
);

258 
Míu
 
	gMaöMíu
;

259 #ifde‡
USE_M17N


261 
wc_˚s
 
	gMaöMíuCh¨£t
 = 
WC_CES_US_ASCII
;

262 
	gMaöMíuEncode
 = 
FALSE
;

265 
MíuIãm
 
	gMaöMíuIãm
[] = {

267 {
MENU_FUNC
, 
N_
(" Back (bË"), 
NULL
, 0, 
backBf
, NULL, "b", NULL},

268 {
MENU_POPUP
, 
N_
(" Sñe˘ Buf„r(sË"), 
NULL
, 0, NULL, &
Sñe˘Míu
, "s",

269 
NULL
},

270 {
MENU_POPUP
, 
N_
(" Sñe˘ Tab (tË"), 
NULL
, 0, NULL, &
SñTabMíu
, "tT",

271 
NULL
},

272 {
MENU_FUNC
, 
N_
(" Võw Sour˚ (vË"), 
NULL
, 0, 
vwSrc
, NULL, "vV", NULL},

273 {
MENU_FUNC
, 
N_
(" Edô Sour˚ (eË"), 
NULL
, 0, 
edôBf
, NULL, "eE", NULL},

274 {
MENU_FUNC
, 
N_
(" SavêSour˚ (SË"), 
NULL
, 0, 
svSrc
, NULL, "S", NULL},

275 {
MENU_FUNC
, 
N_
(" Rñﬂd (rË"), 
NULL
, 0, 
ªlﬂd
, NULL, "rR", NULL},

276 {
MENU_NOP
, 
N_
(" ---------------- "), 
NULL
, 0, 
nulcmd
, NULL, "", NULL},

277 {
MENU_FUNC
, 
N_
(" GÿLök (aË"), 
NULL
, 0, 
fﬁlowA
, NULL, "a", NULL},

278 {
MENU_FUNC
, 
N_
(" o¿New Tab (nË"), 
NULL
, 0, 
èbA
, NULL, "nN", NULL},

279 {
MENU_FUNC
, 
N_
(" SavêLök (AË"), 
NULL
, 0, 
svA
, NULL, "A", NULL},

280 {
MENU_FUNC
, 
N_
(" Võw Imagê (iË"), 
NULL
, 0, 
fﬁlowI
, NULL, "i", NULL},

281 {
MENU_FUNC
, 
N_
(" SavêImagê (IË"), 
NULL
, 0, 
svI
, NULL, "I", NULL},

282 {
MENU_FUNC
, 
N_
(" Võw Fømê (fË"), 
NULL
, 0, 
rFøme
, NULL, "fF", NULL},

283 {
MENU_NOP
, 
N_
(" ---------------- "), 
NULL
, 0, 
nulcmd
, NULL, "", NULL},

284 {
MENU_FUNC
, 
N_
(" Bookm¨k (BË"), 
NULL
, 0, 
ldBm¨k
, NULL, "B", NULL},

285 {
MENU_FUNC
, 
N_
(" Hñ∞ (hË"), 
NULL
, 0, 
ldhñp
, NULL, "hH", NULL},

286 {
MENU_FUNC
, 
N_
(" O±i⁄ (oË"), 
NULL
, 0, 
ldO±
, NULL, "oO", NULL},

287 {
MENU_NOP
, 
N_
(" ---------------- "), 
NULL
, 0, 
nulcmd
, NULL, "", NULL},

288 {
MENU_FUNC
, 
N_
(" Quô (qË"), 
NULL
, 0, 
qquôfm
, NULL, "qQ", NULL},

289 {
MENU_END
, "", 
NULL
, 0, 
nulcmd
, NULL, "", NULL},

294 
MíuLi°
 *
	gw3mMíuLi°
;

296 
Míu
 *
	gCuºítMíu
 = 
NULL
;

298 
	#mvaddch
(
y
, 
x
, 
c
Ë(
	`move
(y, x), 
	`addch
(c))

	)

299 
	#mvadd°r
(
y
, 
x
, 
°r
Ë(
	`move
(y, x), 
	`add°r
(°r))

	)

300 
	#mvaddn°r
(
y
, 
x
, 
°r
, 
n
Ë(
	`move
(y, x), 
	`addn°r_sup
(°r,Ç))

	)

303 
	$√w_míu
(
Míu
 *
míu
, 
MíuIãm
 *
ôem
)

305 
i
, 
l
;

306 *
p
;

308 
míu
->
curs‹X
 = 0;

309 
míu
->
curs‹Y
 = 0;

310 
míu
->
x
 = 0;

311 
míu
->
y
 = 0;

312 
míu
->
nôem
 = 0;

313 
míu
->
ôem
 = item;

314 
míu
->
öôül
 = 0;

315 
míu
->
£À˘
 = 0;

316 
míu
->
off£t
 = 0;

317 
míu
->
a˘ive
 = 0;

319 i‡(
ôem
 =
NULL
)

322 
i
 = 0; 
ôem
[i].
ty≥
 !
MENU_END
; i++) ;

323 
míu
->
nôem
 = 
i
;

324 
míu
->
height
 = míu->
nôem
;

325 
i
 = 0; i < 128; i++)

326 
míu
->
keym≠
[
i
] = 
MíuKeym≠
[i];

327 
míu
->
width
 = 0;

328 
i
 = 0; i < 
míu
->
nôem
; i++) {

329 i‡((
p
 = 
ôem
[
i
].
keys
Ë!
NULL
) {

330 *
p
) {

331 i‡(
	`IS_ASCII
(*
p
)) {

332 
míu
->
keym≠
[()*
p
] = 
mSñe˘
;

333 
míu
->
key£À˘
[()*
p
] = 
i
;

335 
p
++;

338 
l
 = 
	`gë_°rwidth
(
ôem
[
i
].
œbñ
);

339 i‡(
l
 > 
míu
->
width
)

340 
míu
->
width
 = 
l
;

342 
	}
}

345 
	$geom_míu
(
Míu
 *
míu
, 
x
, 
y
, 
m£À˘
)

347 
wö_x
, 
wö_y
, 
wö_w
, 
wö_h
;

349 
míu
->
£À˘
 = 
m£À˘
;

351 i‡(
míu
->
width
 % 
FRAME_WIDTH
)

352 
míu
->
width
 = (míu->width / 
FRAME_WIDTH
 + 1) * FRAME_WIDTH;

353 
wö_x
 = 
míu
->
x
 - 
FRAME_WIDTH
;

354 
wö_w
 = 
míu
->
width
 + 2 * 
FRAME_WIDTH
;

355 i‡(
wö_x
 + 
wö_w
 > 
COLS
)

356 
wö_x
 = 
COLS
 - 
wö_w
;

357 i‡(
wö_x
 < 0) {

358 
wö_x
 = 0;

359 i‡(
wö_w
 > 
COLS
) {

360 
míu
->
width
 = 
COLS
 - 2 * 
FRAME_WIDTH
;

361 
míu
->
width
 -míu->width % 
FRAME_WIDTH
;

362 
wö_w
 = 
míu
->
width
 + 2 * 
FRAME_WIDTH
;

365 
míu
->
x
 = 
wö_x
 + 
FRAME_WIDTH
;

367 
wö_y
 = 
míu
->
y
 - 
m£À˘
 - 1;

368 
wö_h
 = 
míu
->
height
 + 2;

369 i‡(
wö_y
 + 
wö_h
 > 
LASTLINE
)

370 
wö_y
 = 
LASTLINE
 - 
wö_h
;

371 i‡(
wö_y
 < 0) {

372 
wö_y
 = 0;

373 i‡(
wö_y
 + 
wö_h
 > 
LASTLINE
) {

374 
wö_h
 = 
LASTLINE
 - 
wö_y
;

375 
míu
->
height
 = 
wö_h
 - 2;

376 i‡(
míu
->
height
 <
m£À˘
)

377 
míu
->
off£t
 = 
m£À˘
 - míu->
height
 + 1;

380 
míu
->
y
 = 
wö_y
 + 1;

381 
	}
}

384 
	$døw_Æl_míu
(
Míu
 *
míu
)

386 i‡(
míu
->
∑ª¡
 !
NULL
)

387 
	`døw_Æl_míu
(
míu
->
∑ª¡
);

388 
	`døw_míu
(
míu
);

389 
	}
}

392 
	$døw_míu
(
Míu
 *
míu
)

394 
x
, 
y
, 
w
;

395 
i
, 
j
;

397 
x
 = 
míu
->x - 
FRAME_WIDTH
;

398 
w
 = 
míu
->
width
 + 2 * 
FRAME_WIDTH
;

399 
y
 = 
míu
->y - 1;

401 i‡(
míu
->
off£t
 == 0) {

402 
G_°¨t
;

403 
	`mvadd°r
(
y
, 
x
, 
FRAME
[3]);

404 
i
 = 
FRAME_WIDTH
; i < 
w
 - FRAME_WIDTH; i += FRAME_WIDTH)

405 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[10]);

406 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[6]);

407 
G_íd
;

410 
G_°¨t
;

411 
	`mvadd°r
(
y
, 
x
, 
FRAME
[5]);

412 
G_íd
;

413 
i
 = 
FRAME_WIDTH
; i < 
w
 - FRAME_WIDTH; i++)

414 
	`mvadd°r
(
y
, 
x
 + 
i
, " ");

415 
G_°¨t
;

416 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[5]);

417 
G_íd
;

418 
i
 = (
w
 / 2 - 1Ë/ 
FRAME_WIDTH
 * FRAME_WIDTH;

419 
	`mvadd°r
(
y
, 
x
 + 
i
, ":");

422 
j
 = 0; j < 
míu
->
height
; j++) {

423 
y
++;

424 
G_°¨t
;

425 
	`mvadd°r
(
y
, 
x
, 
FRAME
[5]);

426 
G_íd
;

427 
	`døw_míu_ôem
(
míu
, míu->
off£t
 + 
j
);

428 
G_°¨t
;

429 
	`mvadd°r
(
y
, 
x
 + 
w
 - 
FRAME_WIDTH
, 
FRAME
[5]);

430 
G_íd
;

432 
y
++;

433 i‡(
míu
->
off£t
 + míu->
height
 =míu->
nôem
) {

434 
G_°¨t
;

435 
	`mvadd°r
(
y
, 
x
, 
FRAME
[9]);

436 
i
 = 
FRAME_WIDTH
; i < 
w
 - FRAME_WIDTH; i += FRAME_WIDTH)

437 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[10]);

438 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[12]);

439 
G_íd
;

442 
G_°¨t
;

443 
	`mvadd°r
(
y
, 
x
, 
FRAME
[5]);

444 
G_íd
;

445 
i
 = 
FRAME_WIDTH
; i < 
w
 - FRAME_WIDTH; i++)

446 
	`mvadd°r
(
y
, 
x
 + 
i
, " ");

447 
G_°¨t
;

448 
	`mvadd°r
(
y
, 
x
 + 
i
, 
FRAME
[5]);

449 
G_íd
;

450 
i
 = (
w
 / 2 - 1Ë/ 
FRAME_WIDTH
 * FRAME_WIDTH;

451 
	`mvadd°r
(
y
, 
x
 + 
i
, ":");

453 
	}
}

456 
	$døw_míu_ôem
(
Míu
 *
míu
, 
m£À˘
)

458 
	`mvaddn°r
(
míu
->
y
 + 
m£À˘
 - míu->
off£t
, míu->
x
,

459 
míu
->
ôem
[
m£À˘
].
œbñ
, míu->
width
);

460 
	}
}

463 
	$£À˘_míu
(
Míu
 *
míu
, 
m£À˘
)

465 i‡(
m£À˘
 < 0 || m£À˘ >
míu
->
nôem
)

466  (
MENU_NOTHING
);

467 i‡(
m£À˘
 < 
míu
->
off£t
)

468 
	`up_míu
(
míu
, míu->
off£t
 - 
m£À˘
);

469 i‡(
m£À˘
 >
míu
->
off£t
 + míu->
height
)

470 
	`down_míu
(
míu
, 
m£À˘
 - míu->
off£t
 - míu->
height
 + 1);

472 i‡(
míu
->
£À˘
 >míu->
off£t
 &&

473 
míu
->
£À˘
 < míu->
off£t
 + míu->
height
)

474 
	`døw_míu_ôem
(
míu
, míu->
£À˘
);

475 
míu
->
£À˘
 = 
m£À˘
;

476 
	`°™dout
();

477 
	`døw_míu_ôem
(
míu
, míu->
£À˘
);

478 
	`°™díd
();

481 
	`move
(
míu
->
y
 + 
m£À˘
 - míu->
off£t
, míu->
x
);

482 
	`toggÀ_°™d
();

483 
	`ª‰esh
();

485  (
míu
->
£À˘
);

486 
	}
}

489 
	$gŸo_míu
(
Míu
 *
míu
, 
m£À˘
, 
down
)

491 
£À˘_ö
;

492 i‡(
m£À˘
 >
míu
->
nôem
)

493 
m£À˘
 = 
míu
->
nôem
 - 1;

494 i‡(
m£À˘
 < 0)

495 
m£À˘
 = 0;

496 
£À˘_ö
 = 
m£À˘
;

497 
míu
->
ôem
[
m£À˘
].
ty≥
 =
MENU_NOP
) {

498 i‡(
down
 > 0) {

499 i‡(++
m£À˘
 >
míu
->
nôem
) {

500 
	`down_míu
(
míu
, 
£À˘_ö
 - míu->
£À˘
);

501 
m£À˘
 = 
míu
->
£À˘
;

505 i‡(
down
 < 0) {

506 i‡(--
m£À˘
 < 0) {

507 
	`up_míu
(
míu
, míu->
£À˘
 - 
£À˘_ö
);

508 
m£À˘
 = 
míu
->
£À˘
;

516 
	`£À˘_míu
(
míu
, 
m£À˘
);

517 
	}
}

520 
	$up_míu
(
Míu
 *
míu
, 
n
)

522 i‡(
n
 < 0 || 
míu
->
off£t
 == 0)

524 
míu
->
off£t
 -
n
;

525 i‡(
míu
->
off£t
 < 0)

526 
míu
->
off£t
 = 0;

528 
	`døw_míu
(
míu
);

529 
	}
}

532 
	$down_míu
(
Míu
 *
míu
, 
n
)

534 i‡(
n
 < 0 || 
míu
->
off£t
 + míu->
height
 =míu->
nôem
)

536 
míu
->
off£t
 +
n
;

537 i‡(
míu
->
off£t
 + míu->
height
 > míu->
nôem
)

538 
míu
->
off£t
 = míu->
nôem
 - míu->
height
;

540 
	`døw_míu
(
míu
);

541 
	}
}

544 
	$a˘i⁄_míu
(
Míu
 *
míu
)

546 
c
;

547 
m£À˘
;

548 
MíuIãm
 
ôem
;

550 i‡(
míu
->
a˘ive
 == 0) {

551 i‡(
míu
->
∑ª¡
 !
NULL
)

552 
míu
->
∑ª¡
->
a˘ive
 = 0;

555 
	`døw_Æl_míu
(
míu
);

556 
	`£À˘_míu
(
míu
, míu->
£À˘
);

559 #ifde‡
USE_MOUSE


560 i‡(
u£_mou£
)

561 
	`mou£_a˘ive
();

563 
c
 = 
	`gëch
();

564 #ifde‡
USE_MOUSE


565 i‡(
u£_mou£
)

566 
	`mou£_öa˘ive
();

567 #i‡
	`deföed
(
USE_GPM
Ë|| deföed(
USE_SYSMOUSE
)

568 i‡(
c
 =
X_MOUSE_SELECTED
) {

569 
m£À˘
 = 
X_Mou£_Sñe˘i⁄
;

570 i‡(
m£À˘
 !
MENU_NOTHING
)

575 i‡(
	`IS_ASCII
(
c
)) {

576 
m£À˘
 = (*
míu
->
keym≠
[()
c
]) (c);

577 i‡(
m£À˘
 !
MENU_NOTHING
)

581 i‡(
m£À˘
 >0 && m£À˘ < 
míu
->
nôem
) {

582 
ôem
 = 
míu
->ôem[
m£À˘
];

583 i‡(
ôem
.
ty≥
 & 
MENU_POPUP
) {

584 
	`p›up_míu
(
míu
, 
ôem
.
p›up
);

587 i‡(
míu
->
∑ª¡
 !
NULL
)

588 
míu
->
∑ª¡
->
a˘ive
 = 0;

589 i‡(
ôem
.
ty≥
 & 
MENU_VALUE
)

590 *
ôem
.
v¨übÀ
 = iãm.
vÆue
;

591 i‡(
ôem
.
ty≥
 & 
MENU_FUNC
) {

592 
CuºítKey
 = -1;

593 
CuºítKeyD©a
 = 
NULL
;

594 
CuºítCmdD©a
 = 
ôem
.
d©a
;

595 (*
ôem
.
func
) ();

596 
CuºítCmdD©a
 = 
NULL
;

599 i‡(
m£À˘
 =
MENU_CLOSE
) {

600 i‡(
míu
->
∑ª¡
 !
NULL
)

601 
míu
->
∑ª¡
->
a˘ive
 = 0;

604 
	}
}

607 
	$p›up_míu
(
Míu
 *
∑ª¡
, Míu *
míu
)

609 
a˘ive
 = 1;

611 i‡(
míu
->
ôem
 =
NULL
 || míu->
nôem
 == 0)

613 i‡(
míu
->
a˘ive
)

616 #ifde‡
USE_MOUSE


617 #ifde‡
USE_GPM


618 
gpm_h™dÀr
 = 
gpm_¥o˚ss_míu_mou£
;

620 #ifde‡
USE_SYSMOUSE


621 
sysm_h™dÀr
 = 
sysm_¥o˚ss_míu_mou£
;

624 
míu
->
∑ª¡
 =Öarent;

625 
míu
->
£À˘
 = míu->
öôül
;

626 
míu
->
off£t
 = 0;

627 
míu
->
a˘ive
 = 1;

628 i‡(
∑ª¡
 !
NULL
) {

629 
míu
->
curs‹X
 = 
∑ª¡
->cursorX;

630 
míu
->
curs‹Y
 = 
∑ª¡
->cursorY;

631 
	`guess_míu_xy
(
∑ª¡
, 
míu
->
width
, &míu->
x
, &míu->
y
);

633 
	`geom_míu
(
míu
, míu->
x
, míu->
y
, míu->
£À˘
);

635 
CuºítMíu
 = 
míu
;

636 
a˘ive
) {

637 
a˘ive
 = 
	`a˘i⁄_míu
(
CuºítMíu
);

638 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

640 
míu
->
a˘ive
 = 0;

641 
CuºítMíu
 = 
∑ª¡
;

642 #ifde‡
USE_MOUSE


643 #ifde‡
USE_GPM


644 i‡(
CuºítMíu
 =
NULL
)

645 
gpm_h™dÀr
 = 
gpm_¥o˚ss_mou£
;

647 #ifde‡
USE_SYSMOUSE


648 i‡(
CuºítMíu
 =
NULL
)

649 
sysm_h™dÀr
 = 
sysm_¥o˚ss_mou£
;

652 
	}
}

655 
	$guess_míu_xy
(
Míu
 *
∑ª¡
, 
width
, *
x
, *
y
)

657 *
x
 = 
∑ª¡
->x +Ö¨ít->
width
 + 
FRAME_WIDTH
 - 1;

658 i‡(*
x
 + 
width
 + 
FRAME_WIDTH
 > 
COLS
) {

659 *
x
 = 
COLS
 - 
width
 - 
FRAME_WIDTH
;

660 i‡((
∑ª¡
->
x
 +Ö¨ít->
width
 / 2 > *x) &&

661 (
∑ª¡
->
x
 +Ö¨ít->
width
 / 2 > 
COLS
 / 2))

662 *
x
 = 
∑ª¡
->x - 
width
 - 
FRAME_WIDTH
 + 1;

664 *
y
 = 
∑ª¡
->y +Ö¨ít->
£À˘
 -Ö¨ít->
off£t
;

665 
	}
}

668 
√w_›ti⁄_míu
(
Míu
 *
míu
, **
œbñ
, *
v¨übÀ
, (*
func
) ())

670 
i
, 
nôem
;

671 **
p
;

672 
MíuIãm
 *
ôem
;

674 i‡(
œbñ
 =
NULL
 || *label == NULL)

677 
i
 = 0, 
p
 = 
œbñ
; *∞!
NULL
; i++,Ö++) ;

678 
nôem
 = 
i
;

680 
ôem
 = 
	`New_N
(
MíuIãm
, 
nôem
 + 1);

682 
i
 = 0, 
p
 = 
œbñ
; i < 
nôem
; i++,Ö++) {

683 i‡(
func
 !
NULL
)

684 
ôem
[
i
].
ty≥
 = 
MENU_VALUE
 | 
MENU_FUNC
;

686 
ôem
[
i
].
ty≥
 = 
MENU_VALUE
;

687 
ôem
[
i
].
œbñ
 = *
p
;

688 
ôem
[
i
].
v¨übÀ
 = variable;

689 
ôem
[
i
].
vÆue
 = i;

690 
ôem
[
i
].
func
 = func;

691 
ôem
[
i
].
p›up
 = 
NULL
;

692 
ôem
[
i
].
keys
 = "";

694 
ôem
[
nôem
].
ty≥
 = 
MENU_END
;

696 
	`√w_míu
(
míu
, 
ôem
);

697 
	}
}

700 
	$£t_míu_‰ame
()

702 i‡(
	`gøph_ok
()) {

703 
gøph_mode
 = 
TRUE
;

704 
FRAME_WIDTH
 = 1;

705 
FRAME
 = 
gøph_symbﬁ
;

708 
gøph_mode
 = 
FALSE
;

709 #ifde‡
USE_M17N


710 
FRAME_WIDTH
 = 0;

711 
FRAME
 = 
	`gë_symbﬁ
(
Di•œyCh¨£t
, &
FRAME_WIDTH
);

712 i‡(!
WcO±i⁄
.
u£_wide
)

713 
FRAME_WIDTH
 = 1;

715 
FRAME_WIDTH
 = 1;

716 
FRAME
 = 
	`gë_symbﬁ
();

719 
	}
}

723 #ifde‡
__EMX__


725 
	$mPc
(
c
)

727 
c
 = 
	`gëch
();

728  (
MíuPcKeym≠
[()
c
] (c));

729 
	}
}

733 
	$mEsc
(
c
)

735 
c
 = 
	`gëch
();

736  (
MíuEscKeym≠
[()
c
] (c));

737 
	}
}

740 
	$mEscB
(
c
)

742 
c
 = 
	`gëch
();

743 i‡(
	`IS_DIGIT
(
c
))

744  (
	`mEscD
(
c
));

746  (
MíuEscBKeym≠
[()
c
] (c));

747 
	}
}

750 
	$mEscD
(
c
)

752 
d
;

754 
d
 = ()
c
 - ()'0';

755 
c
 = 
	`gëch
();

756 i‡(
	`IS_DIGIT
(
c
)) {

757 
d
 = d * 10 + ()
c
 - ()'0';

758 
c
 = 
	`gëch
();

760 i‡(
c
 == '~')

761  (
MíuEscDKeym≠
[
d
] (
c
));

763  (
MENU_NOTHING
);

764 
	}
}

767 
	$mNuŒ
(
c
)

769  (
MENU_NOTHING
);

770 
	}
}

773 
	$mSñe˘
(
c
)

775 i‡(
	`IS_ASCII
(
c
))

776  (
	`£À˘_míu
(
CuºítMíu
, CuºítMíu->
key£À˘
[()
c
]));

778  (
MENU_NOTHING
);

779 
	}
}

782 
	$mDown
(
c
)

784 i‡(
CuºítMíu
->
£À˘
 >CuºítMíu->
nôem
 - 1)

785  (
MENU_NOTHING
);

786 
	`gŸo_míu
(
CuºítMíu
, CuºítMíu->
£À˘
 + 1, 1);

787  (
MENU_NOTHING
);

788 
	}
}

791 
	$mUp
(
c
)

793 i‡(
CuºítMíu
->
£À˘
 <= 0)

794  (
MENU_NOTHING
);

795 
	`gŸo_míu
(
CuºítMíu
, CuºítMíu->
£À˘
 - 1, -1);

796  (
MENU_NOTHING
);

797 
	}
}

800 
	$mLa°
(
c
)

802 
	`gŸo_míu
(
CuºítMíu
, CuºítMíu->
nôem
 - 1, -1);

803  (
MENU_NOTHING
);

804 
	}
}

807 
	$mT›
(
c
)

809 
	`gŸo_míu
(
CuºítMíu
, 0, 1);

810  (
MENU_NOTHING
);

811 
	}
}

814 
	$mNext
(
c
)

816 
m£À˘
 = 
CuºítMíu
->
£À˘
 + CuºítMíu->
height
;

818 i‡(
m£À˘
 >
CuºítMíu
->
nôem
)

819  
	`mLa°
(
c
);

820 
	`down_míu
(
CuºítMíu
, CuºítMíu->
height
);

821 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, -1);

822  (
MENU_NOTHING
);

823 
	}
}

826 
	$mPªv
(
c
)

828 
m£À˘
 = 
CuºítMíu
->
£À˘
 - CuºítMíu->
height
;

830 i‡(
m£À˘
 < 0)

831  
	`mT›
(
c
);

832 
	`up_míu
(
CuºítMíu
, CuºítMíu->
height
);

833 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, 1);

834  (
MENU_NOTHING
);

835 
	}
}

838 
	$mF‹e
(
c
)

840 i‡(
CuºítMíu
->
£À˘
 >CuºítMíu->
nôem
 - 1)

841  (
MENU_NOTHING
);

842 
	`gŸo_míu
(
CuºítMíu
, (CuºítMíu->
£À˘
 + CuºítMíu->
height
 - 1),

843 (
CuºítMíu
->
height
 + 1));

844  (
MENU_NOTHING
);

845 
	}
}

848 
	$mBack
(
c
)

850 i‡(
CuºítMíu
->
£À˘
 <= 0)

851  (
MENU_NOTHING
);

852 
	`gŸo_míu
(
CuºítMíu
, (CuºítMíu->
£À˘
 - CuºítMíu->
height
 + 1),

853 (-1 - 
CuºítMíu
->
height
));

854  (
MENU_NOTHING
);

855 
	}
}

858 
	$mLöeU
(
c
)

860 
m£À˘
 = 
CuºítMíu
->
£À˘
;

862 i‡(
m£À˘
 >
CuºítMíu
->
nôem
)

863  
	`mLa°
(
c
);

864 i‡(
CuºítMíu
->
off£t
 + CuºítMíu->
height
 >CuºítMíu->
nôem
)

865 
m£À˘
++;

867 
	`down_míu
(
CuºítMíu
, 1);

868 i‡(
m£À˘
 < 
CuºítMíu
->
off£t
)

869 
m£À˘
++;

871 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, 1);

872  (
MENU_NOTHING
);

873 
	}
}

876 
	$mLöeD
(
c
)

878 
m£À˘
 = 
CuºítMíu
->
£À˘
;

880 i‡(
m£À˘
 <= 0)

881  
	`mT›
(
c
);

882 i‡(
CuºítMíu
->
off£t
 <= 0)

883 
m£À˘
--;

885 
	`up_míu
(
CuºítMíu
, 1);

886 i‡(
m£À˘
 >
CuºítMíu
->
off£t
 + CuºítMíu->
height
)

887 
m£À˘
--;

889 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, -1);

890  (
MENU_NOTHING
);

891 
	}
}

894 
	$mOk
(
c
)

896 
m£À˘
 = 
CuºítMíu
->
£À˘
;

898 i‡(
CuºítMíu
->
ôem
[
m£À˘
].
ty≥
 =
MENU_NOP
)

899  (
MENU_NOTHING
);

900  (
m£À˘
);

901 
	}
}

904 
	$mC™˚l
(
c
)

906  (
MENU_CANCEL
);

907 
	}
}

910 
	$mClo£
(
c
)

912  (
MENU_CLOSE
);

913 
	}
}

916 
	$mSu•
(
c
)

918 
	`su•
();

919 
	`døw_Æl_míu
(
CuºítMíu
);

920 
	`£À˘_míu
(
CuºítMíu
, CuºítMíu->
£À˘
);

921  (
MENU_NOTHING
);

922 
	}
}

924 *
	gSórchSåög
 = 
NULL
;

926 (*
míuSórchRoutöe
Ë(
Míu
 *, *, );

929 
	$míuF‹w¨dSórch
(
Míu
 *
míu
, *
°r
, 
‰om
)

931 
i
;

932 *
p
;

933 i‡((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
) {

934 
	`mesßge
(
p
, 0, 0);

937 i‡(
‰om
 < 0)

938 
‰om
 = 0;

939 
i
 = 
‰om
; i < 
míu
->
nôem
; i++)

940 i‡(
míu
->
ôem
[
i
].
ty≥
 !
MENU_NOP
 &&

941 
	`ªgexM©ch
(
míu
->
ôem
[
i
].
œbñ
, -1, 1) == 1)

942  
i
;

944 
	}
}

947 
	$míu_£¨ch_f‹w¨d
(
Míu
 *
míu
, 
‰om
)

949 *
°r
;

950 
found
;

951 
°r
 = 
	`öputSåHi°
("F‹w¨d: ", 
NULL
, 
TextHi°
);

952 i‡(
°r
 !
NULL
 && *str == '\0')

953 
°r
 = 
SórchSåög
;

954 i‡(
°r
 =
NULL
 || *str == '\0')

956 
SórchSåög
 = 
°r
;

957 
°r
 = 
	`c⁄v_£¨ch_°rög
(°r, 
Di•œyCh¨£t
);

958 
míuSórchRoutöe
 = 
míuF‹w¨dSórch
;

959 
found
 = 
	`míuF‹w¨dSórch
(
míu
, 
°r
, 
‰om
 + 1);

960 i‡(
WøpSórch
 && 
found
 == -1)

961 
found
 = 
	`míuF‹w¨dSórch
(
míu
, 
°r
, 0);

962 i‡(
found
 >= 0)

963  
found
;

964 
	`di•_mesßge
("NŸ found", 
TRUE
);

966 
	}
}

969 
	$mSrchF
(
c
)

971 
m£À˘
;

972 
m£À˘
 = 
	`míu_£¨ch_f‹w¨d
(
CuºítMíu
, CuºítMíu->
£À˘
);

973 i‡(
m£À˘
 >= 0)

974 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, 1);

975  (
MENU_NOTHING
);

976 
	}
}

979 
	$míuBackw¨dSórch
(
Míu
 *
míu
, *
°r
, 
‰om
)

981 
i
;

982 *
p
;

983 i‡((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
) {

984 
	`mesßge
(
p
, 0, 0);

987 i‡(
‰om
 >
míu
->
nôem
)

988 
‰om
 = 
míu
->
nôem
 - 1;

989 
i
 = 
‰om
; i >= 0; i--)

990 i‡(
míu
->
ôem
[
i
].
ty≥
 !
MENU_NOP
 &&

991 
	`ªgexM©ch
(
míu
->
ôem
[
i
].
œbñ
, -1, 1) == 1)

992  
i
;

994 
	}
}

997 
	$míu_£¨ch_backw¨d
(
Míu
 *
míu
, 
‰om
)

999 *
°r
;

1000 
found
;

1001 
°r
 = 
	`öputSåHi°
("Backw¨d: ", 
NULL
, 
TextHi°
);

1002 i‡(
°r
 !
NULL
 && *str == '\0')

1003 
°r
 = 
SórchSåög
;

1004 i‡(
°r
 =
NULL
 || *str == '\0')

1006 
SórchSåög
 = 
°r
;

1007 
°r
 = 
	`c⁄v_£¨ch_°rög
(°r, 
Di•œyCh¨£t
);

1008 
míuSórchRoutöe
 = 
míuBackw¨dSórch
;

1009 
found
 = 
	`míuBackw¨dSórch
(
míu
, 
°r
, 
‰om
 - 1);

1010 i‡(
WøpSórch
 && 
found
 == -1)

1011 
found
 = 
	`míuBackw¨dSórch
(
míu
, 
°r
, míu->
nôem
);

1012 i‡(
found
 >= 0)

1013  
found
;

1014 
	`di•_mesßge
("NŸ found", 
TRUE
);

1016 
	}
}

1019 
	$mSrchB
(
c
)

1021 
m£À˘
;

1022 
m£À˘
 = 
	`míu_£¨ch_backw¨d
(
CuºítMíu
, CuºítMíu->
£À˘
);

1023 i‡(
m£À˘
 >= 0)

1024 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, -1);

1025  (
MENU_NOTHING
);

1026 
	}
}

1029 
	$míu_£¨ch_√xt_¥evious
(
Míu
 *
míu
, 
‰om
, 
ªvî£
)

1031 
found
;

1032 (*
routöe
[2]Ë(
Míu
 *, *, ) = {

1033 
míuF‹w¨dSórch
, 
míuBackw¨dSórch
};

1034 *
°r
;

1036 i‡(
míuSórchRoutöe
 =
NULL
) {

1037 
	`di•_mesßge
("Nÿ¥eviou†ªguœ∏ex¥essi⁄", 
TRUE
);

1040 
°r
 = 
	`c⁄v_£¨ch_°rög
(
SórchSåög
, 
Di•œyCh¨£t
);

1041 i‡(
ªvî£
 != 0)

1042 
ªvî£
 = 1;

1043 i‡(
míuSórchRoutöe
 =
míuBackw¨dSórch
)

1044 
ªvî£
 ^= 1;

1045 
‰om
 +
ªvî£
 ? -1 : 1;

1046 
found
 = (*
routöe
[
ªvî£
]Ë(
míu
, 
°r
, 
‰om
);

1047 i‡(
WøpSórch
 && 
found
 == -1)

1048 
found
 = (*
routöe
[
ªvî£
]Ë(
míu
, 
°r
,Ñevî£ * míu->
nôem
);

1049 i‡(
found
 >= 0)

1050  
found
;

1051 
	`di•_mesßge
("NŸ found", 
TRUE
);

1053 
	}
}

1056 
	$mSrchN
(
c
)

1058 
m£À˘
;

1059 
m£À˘
 = 
	`míu_£¨ch_√xt_¥evious
(
CuºítMíu
, CuºítMíu->
£À˘
, 0);

1060 i‡(
m£À˘
 >= 0)

1061 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, 1);

1062  (
MENU_NOTHING
);

1063 
	}
}

1066 
	$mSrchP
(
c
)

1068 
m£À˘
;

1069 
m£À˘
 = 
	`míu_£¨ch_√xt_¥evious
(
CuºítMíu
, CuºítMíu->
£À˘
, 1);

1070 i‡(
m£À˘
 >= 0)

1071 
	`gŸo_míu
(
CuºítMíu
, 
m£À˘
, -1);

1072  (
MENU_NOTHING
);

1073 
	}
}

1075 #ifde‡
USE_MOUSE


1076 
	#MOUSE_BTN1_DOWN
 0

	)

1077 
	#MOUSE_BTN2_DOWN
 1

	)

1078 
	#MOUSE_BTN3_DOWN
 2

	)

1079 
	#MOUSE_BTN4_DOWN_RXVT
 3

	)

1080 
	#MOUSE_BTN5_DOWN_RXVT
 4

	)

1081 
	#MOUSE_BTN4_DOWN_XTERM
 64

	)

1082 
	#MOUSE_BTN5_DOWN_XTERM
 65

	)

1083 
	#MOUSE_BTN_UP
 3

	)

1084 
	#MOUSE_BTN_RESET
 -1

	)

1087 
	$mMou£_s¸ﬁl_löe
()

1089 
i
 = 0;

1090 i‡(
ªœtive_whìl_s¸ﬁl
)

1091 
i
 = (
ªœtive_whìl_s¸ﬁl_øtio
 * 
CuºítMíu
->
height
 + 99) / 100;

1093 
i
 = 
fixed_whìl_s¸ﬁl_cou¡
;

1094  
i
 ? i : 1;

1095 
	}
}

1098 
	$¥o˚ss_mMou£
(
bä
, 
x
, 
y
)

1100 
Míu
 *
míu
;

1101 
m£À˘
, 
i
;

1102 
¥ess_bä
 = 
MOUSE_BTN_RESET
, 
¥ess_x
, 
¥ess_y
;

1103 
c
 = ' ';

1105 
míu
 = 
CuºítMíu
;

1107 i‡(
x
 < 0 || x >
COLS
 || 
y
 < 0 || y > 
LASTLINE
)

1108  (
MENU_NOTHING
);

1110 i‡(
bä
 =
MOUSE_BTN_UP
) {

1111 
¥ess_bä
) {

1112 
MOUSE_BTN1_DOWN
:

1113 
MOUSE_BTN3_DOWN
:

1114 i‡(
x
 < 
míu
->x - 
FRAME_WIDTH
 ||

1115 
x
 >
míu
->x + míu->
width
 + 
FRAME_WIDTH
 ||

1116 
y
 < 
míu
->y - 1 || y >míu->y + míu->
height
 + 1) {

1117  (
MENU_CANCEL
);

1119 i‡((
x
 >
míu
->x - 
FRAME_WIDTH
 &&

1120 
x
 < 
míu
->x) ||

1121 (
x
 >
míu
->x + míu->
width
 &&

1122 
x
 < 
míu
->x + míu->
width
 + 
FRAME_WIDTH
)) {

1123  (
MENU_NOTHING
);

1125 i‡(
¥ess_y
 > 
y
) {

1126 
i
 = 0; i < 
¥ess_y
 - 
y
; i++)

1127 
	`mLöeU
(
c
);

1128  (
MENU_NOTHING
);

1130 i‡(
¥ess_y
 < 
y
) {

1131 
i
 = 0; i < 
y
 - 
¥ess_y
; i++)

1132 
	`mLöeD
(
c
);

1133  (
MENU_NOTHING
);

1135 i‡(
y
 =
míu
->y - 1) {

1136 
	`mPªv
(
c
);

1137  (
MENU_NOTHING
);

1139 i‡(
y
 =
míu
->y + míu->
height
) {

1140 
	`mNext
(
c
);

1141  (
MENU_NOTHING
);

1144 
m£À˘
 = 
y
 - 
míu
->y + míu->
off£t
;

1145 i‡(
míu
->
ôem
[
m£À˘
].
ty≥
 =
MENU_NOP
)

1146  (
MENU_NOTHING
);

1147  (
	`£À˘_míu
(
míu
, 
m£À˘
));

1150 
MOUSE_BTN4_DOWN_RXVT
:

1151 
i
 = 0; i < 
	`mMou£_s¸ﬁl_löe
(); i++)

1152 
	`mLöeD
(
c
);

1154 
MOUSE_BTN5_DOWN_RXVT
:

1155 
i
 = 0; i < 
	`mMou£_s¸ﬁl_löe
(); i++)

1156 
	`mLöeU
(
c
);

1160 i‡(
bä
 =
MOUSE_BTN4_DOWN_XTERM
) {

1161 
i
 = 0; i < 
	`mMou£_s¸ﬁl_löe
(); i++)

1162 
	`mLöeD
(
c
);

1164 i‡(
bä
 =
MOUSE_BTN5_DOWN_XTERM
) {

1165 
i
 = 0; i < 
	`mMou£_s¸ﬁl_löe
(); i++)

1166 
	`mLöeU
(
c
);

1169 i‡(
bä
 !
MOUSE_BTN4_DOWN_RXVT
 || 
¥ess_bä
 =
MOUSE_BTN_RESET
) {

1170 
¥ess_bä
 = 
bä
;

1171 
¥ess_x
 = 
x
;

1172 
¥ess_y
 = 
y
;

1175 
¥ess_bä
 = 
MOUSE_BTN_RESET
;

1177  (
MENU_NOTHING
);

1178 
	}
}

1181 
	$mMou£
(
c
)

1183 
bä
, 
x
, 
y
;

1185 
bä
 = ()
	`gëch
() - 32;

1186 #i‡
	`deföed
(
__CYGWIN__
Ë&& 
CYGWIN_VERSION_DLL_MAJOR
 < 1005

1187 i‡(
cygwö_mou£_bä_sw≠≥d
) {

1188 i‡(
bä
 =
MOUSE_BTN2_DOWN
)

1189 
bä
 = 
MOUSE_BTN3_DOWN
;

1190 i‡(
bä
 =
MOUSE_BTN3_DOWN
)

1191 
bä
 = 
MOUSE_BTN2_DOWN
;

1194 
x
 = ()
	`gëch
() - 33;

1195 i‡(
x
 < 0)

1196 
x
 += 0x100;

1197 
y
 = ()
	`gëch
() - 33;

1198 i‡(
y
 < 0)

1199 
y
 += 0x100;

1203  
	`¥o˚ss_mMou£
(
bä
, 
x
, 
y
);

1204 
	}
}

1206 #ifde‡
USE_GPM


1208 
	$gpm_¥o˚ss_míu_mou£
(
Gpm_Evít
 * 
evít
, *
d©a
)

1210 
bä
 = 
MOUSE_BTN_RESET
, 
x
, 
y
;

1211 i‡(
evít
->
ty≥
 & 
GPM_UP
)

1212 
bä
 = 
MOUSE_BTN_UP
;

1213 i‡(
evít
->
ty≥
 & 
GPM_DOWN
) {

1214 
evít
->
buâ⁄s
) {

1215 
GPM_B_LEFT
:

1216 
bä
 = 
MOUSE_BTN1_DOWN
;

1218 
GPM_B_MIDDLE
:

1219 
bä
 = 
MOUSE_BTN2_DOWN
;

1221 
GPM_B_RIGHT
:

1222 
bä
 = 
MOUSE_BTN3_DOWN
;

1227 
	`GPM_DRAWPOINTER
(
evít
);

1230 
x
 = 
evít
->x;

1231 
y
 = 
evít
->y;

1232 
X_Mou£_Sñe˘i⁄
 = 
	`¥o˚ss_mMou£
(
bä
, 
x
 - 1, 
y
 - 1);

1233  
X_MOUSE_SELECTED
;

1234 
	}
}

1237 #ifde‡
USE_SYSMOUSE


1239 
	$sysm_¥o˚ss_míu_mou£
(
x
, 
y
, 
nbs
, 
obs
)

1241 
bä
;

1242 
bôs
;

1244 i‡(
obs
 & ~
nbs
)

1245 
bä
 = 
MOUSE_BTN_UP
;

1246 i‡(
nbs
 & ~
obs
) {

1247 
bôs
 = 
nbs
 & ~
obs
;

1248 
bä
 = 
bôs
 & 0x1 ? 
MOUSE_BTN1_DOWN
 :

1249 (
bôs
 & 0x2 ? 
MOUSE_BTN2_DOWN
 :

1250 (
bôs
 & 0x4 ? 
MOUSE_BTN3_DOWN
 : 0));

1254 
X_Mou£_Sñe˘i⁄
 = 
	`¥o˚ss_mMou£
(
bä
, 
x
, 
y
);

1255  
X_MOUSE_SELECTED
;

1256 
	}
}

1260 
	$mMou£
(
c
)

1262  (
MENU_NOTHING
);

1263 
	}
}

1271 
	$p›upMíu
(
x
, 
y
, 
Míu
 *
míu
)

1273 
	`£t_míu_‰ame
();

1275 
	`öôSñe˘Míu
();

1276 
	`öôSñTabMíu
();

1278 
míu
->
curs‹X
 = 
Cuºítbuf
->curs‹X + Cuºítbuf->
roŸX
;

1279 
míu
->
curs‹Y
 = 
Cuºítbuf
->curs‹Y + Cuºítbuf->
roŸY
;

1280 
míu
->
x
 = x + 
FRAME_WIDTH
 + 1;

1281 
míu
->
y
 = y + 2;

1283 
	`p›up_míu
(
NULL
, 
míu
);

1284 
	}
}

1287 
	$maöMíu
(
x
, 
y
)

1289 
	`p›upMíu
(
x
, 
y
, &
MaöMíu
);

1290 
	}
}

1292 
DEFUN
(
maöMn
, 
MAIN_MENU
 
MENU
, "Popup menu")

1294 
Míu
 *
	gmíu
 = &
MaöMíu
;

1295 *
	gd©a
;

1296 
	gn
;

1297 
	gx
 = 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
,

1298 
	gy
 = 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
;

1300 
	gd©a
 = 
£¨chKeyD©a
();

1301 i‡(
	gd©a
 !
NULL
) {

1302 
n
 = 
gëMíuN
(
w3mMíuLi°
, 
d©a
);

1303 i‡(
	gn
 < 0)

1305 
	gmíu
 = 
w3mMíuLi°
[
n
].
míu
;

1307 #ifde‡
USE_MOUSE


1308 i‡(
	gmou£_a˘i⁄
.
	gö_a˘i⁄
) {

1309 
	gx
 = 
mou£_a˘i⁄
.
curs‹X
;

1310 
	gy
 = 
mou£_a˘i⁄
.
curs‹Y
;

1313 
p›upMíu
(
x
, 
y
, 
míu
);

1320 
DEFUN
(
£lMn
, 
SELECT_MENU
, "Popup buffer selection menu")

1322 
	gx
 = 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
,

1323 
	gy
 = 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
;

1325 #ifde‡
USE_MOUSE


1326 i‡(
	gmou£_a˘i⁄
.
	gö_a˘i⁄
) {

1327 
	gx
 = 
mou£_a˘i⁄
.
curs‹X
;

1328 
	gy
 = 
mou£_a˘i⁄
.
curs‹Y
;

1331 
p›upMíu
(
x
, 
y
, &
Sñe˘Míu
);

1335 
	$öôSñe˘Míu
()

1337 
i
, 
nôem
, 
Àn
 = 0, 
l
;

1338 
Buf„r
 *
buf
;

1339 
Så
 
°r
;

1340 **
œbñ
;

1341 *
p
;

1342 *
commít
 = " SPC for select / D for delete buffer ";

1344 
Sñe˘V
 = -1;

1345 
i
 = 0, 
buf
 = 
Fú°buf
; bu‡!
NULL
; i++, bu‡buf->
√xtBuf„r
) {

1346 i‡(
buf
 =
Cuºítbuf
)

1347 
Sñe˘V
 = 
i
;

1349 
nôem
 = 
i
;

1351 
œbñ
 = 
	`New_N
(*, 
nôem
 + 2);

1352 
i
 = 0, 
buf
 = 
Fú°buf
; i < 
nôem
; i++, bu‡buf->
√xtBuf„r
) {

1353 
°r
 = 
	`S¥ötf
("<%s>", 
buf
->
buf„∫ame
);

1354 i‡(
buf
->
fûíame
 !
NULL
) {

1355 
buf
->
cuºítURL
.
scheme
) {

1356 
SCM_LOCAL
:

1357 i‡(
	`°rcmp
(
buf
->
cuºítURL
.
fûe
, "-")) {

1358 
	`Såˇt_ch¨
(
°r
, ' ');

1359 
	`Såˇt_ch¨p
(
°r
,

1360 
	`c⁄v_‰om_sy°em
(
buf
->
cuºítURL
.
ªÆ_fûe
));

1364 
SCM_MISSING
:

1367 
	`Såˇt_ch¨
(
°r
, ' ');

1368 
p
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
;

1369 i‡(
DecodeURL
)

1370 
p
 = 
	`uæ_unquŸe_c⁄v
(p, 0);

1371 
	`Såˇt_ch¨p
(
°r
, 
p
);

1375 
œbñ
[
i
] = 
°r
->
±r
;

1376 i‡(
Àn
 < 
°r
->
Àngth
)

1377 
Àn
 = 
°r
->
Àngth
;

1379 
l
 = 
	`gë_°rwidth
(
commít
);

1380 i‡(
Àn
 < 
l
 + 4)

1381 
Àn
 = 
l
 + 4;

1382 i‡(
Àn
 > 
COLS
 - 2 * 
FRAME_WIDTH
)

1383 
Àn
 = 
COLS
 - 2 * 
FRAME_WIDTH
;

1384 
Àn
 = (À¿> 1Ë? (÷í - 
l
 + 1) / 2) : 0;

1385 
°r
 = 
	`Så√w
();

1386 
i
 = 0; i < 
Àn
; i++)

1387 
	`Såˇt_ch¨
(
°r
, '-');

1388 
	`Såˇt_ch¨p
(
°r
, 
commít
);

1389 
i
 = 0; i < 
Àn
; i++)

1390 
	`Såˇt_ch¨
(
°r
, '-');

1391 
œbñ
[
nôem
] = 
°r
->
±r
;

1392 
œbñ
[
nôem
 + 1] = 
NULL
;

1394 
	`√w_›ti⁄_míu
(&
Sñe˘Míu
, 
œbñ
, &
Sñe˘V
, 
smChBuf
);

1395 
Sñe˘Míu
.
öôül
 = 
Sñe˘V
;

1396 
Sñe˘Míu
.
curs‹X
 = 
Cuºítbuf
->curs‹X + Cuºítbuf->
roŸX
;

1397 
Sñe˘Míu
.
curs‹Y
 = 
Cuºítbuf
->curs‹Y + Cuºítbuf->
roŸY
;

1398 
Sñe˘Míu
.
keym≠
['D'] = 
smDñBuf
;

1399 
Sñe˘Míu
.
ôem
[
nôem
].
ty≥
 = 
MENU_NOP
;

1400 
	}
}

1403 
	$smChBuf
()

1405 
i
;

1406 
Buf„r
 *
buf
;

1408 i‡(
Sñe˘V
 < 0 || Sñe˘V >
Sñe˘Míu
.
nôem
)

1410 
i
 = 0, 
buf
 = 
Fú°buf
; i < 
Sñe˘V
; i++, bu‡buf->
√xtBuf„r
) ;

1411 
Cuºítbuf
 = 
buf
;

1412 
buf
 = 
Fú°buf
; bu‡!
NULL
; bu‡buf->
√xtBuf„r
) {

1413 i‡(
buf
 =
Cuºítbuf
)

1415 #ifde‡
USE_IMAGE


1416 
	`dñëeImage
(
buf
);

1418 i‡(
˛ór_buf„r
)

1419 
	`tmpCÀ¨Buf„r
(
buf
);

1421 
	}
}

1424 
	$smDñBuf
(
c
)

1426 
i
, 
x
, 
y
, 
m£À˘
;

1427 
Buf„r
 *
buf
;

1429 i‡(
CuºítMíu
->
£À˘
 < 0 || CuºítMíu->£À˘ >
Sñe˘Míu
.
nôem
)

1430  (
MENU_NOTHING
);

1431 
i
 = 0, 
buf
 = 
Fú°buf
; i < 
CuºítMíu
->
£À˘
;

1432 
i
++, 
buf
 = buf->
√xtBuf„r
) ;

1433 i‡(
Cuºítbuf
 =
buf
)

1434 
Cuºítbuf
 = 
buf
->
√xtBuf„r
;

1435 
Fú°buf
 = 
	`dñëeBuf„r
(Fú°buf, 
buf
);

1436 i‡(!
Cuºítbuf
)

1437 
Cuºítbuf
 = 
	`¡hBuf„r
(
Fú°buf
, 
i
 - 1);;

1438 i‡(
Fú°buf
 =
NULL
) {

1439 
Fú°buf
 = 
	`nuŒBuf„r
();

1440 
Cuºítbuf
 = 
Fú°buf
;

1443 
x
 = 
CuºítMíu
->x;

1444 
y
 = 
CuºítMíu
->y;

1445 
m£À˘
 = 
CuºítMíu
->
£À˘
;

1447 
	`öôSñe˘Míu
();

1449 
CuºítMíu
->
x
 = x;

1450 
CuºítMíu
->
y
 = y;

1452 
	`geom_míu
(
CuºítMíu
, 
x
, 
y
, 0);

1454 
CuºítMíu
->
£À˘
 = (
m£À˘
 <CuºítMíu->
nôem
 - 2) ? mselect

1455 : (
CuºítMíu
->
nôem
 - 2);

1457 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1458 
	`døw_Æl_míu
(
CuºítMíu
);

1459 
	`£À˘_míu
(
CuºítMíu
, CuºítMíu->
£À˘
);

1460  (
MENU_NOTHING
);

1461 
	}
}

1467 
DEFUN
(
èbMn
, 
TAB_MENU
, "PopupÅab selection menu")

1469 
	gx
 = 
Cuºítbuf
->
curs‹X
 + Cuºítbuf->
roŸX
,

1470 
	gy
 = 
Cuºítbuf
->
curs‹Y
 + Cuºítbuf->
roŸY
;

1472 #ifde‡
USE_MOUSE


1473 i‡(
	gmou£_a˘i⁄
.
	gö_a˘i⁄
) {

1474 
	gx
 = 
mou£_a˘i⁄
.
curs‹X
;

1475 
	gy
 = 
mou£_a˘i⁄
.
curs‹Y
;

1478 
p›upMíu
(
x
, 
y
, &
SñTabMíu
);

1482 
	$öôSñTabMíu
()

1484 
i
, 
nôem
, 
Àn
 = 0, 
l
;

1485 
TabBuf„r
 *
èb
;

1486 
Buf„r
 *
buf
;

1487 
Så
 
°r
;

1488 **
œbñ
;

1489 *
p
;

1490 *
commít
 = " SPC for select / D for deleteÅab ";

1492 
SñTabV
 = -1;

1493 
i
 = 0, 
èb
 = 
La°Tab
;Åab !
NULL
; i++,Åab =Åab->
¥evTab
) {

1494 i‡(
èb
 =
CuºítTab
)

1495 
SñTabV
 = 
i
;

1497 
nôem
 = 
i
;

1499 
œbñ
 = 
	`New_N
(*, 
nôem
 + 2);

1500 
i
 = 0, 
èb
 = 
La°Tab
; i < 
nôem
; i++,Åab =Åab->
¥evTab
) {

1501 
buf
 = 
èb
->
cuºítBuf„r
;

1502 
°r
 = 
	`S¥ötf
("<%s>", 
buf
->
buf„∫ame
);

1503 i‡(
buf
->
fûíame
 !
NULL
) {

1504 
buf
->
cuºítURL
.
scheme
) {

1505 
SCM_LOCAL
:

1506 i‡(
	`°rcmp
(
buf
->
cuºítURL
.
fûe
, "-")) {

1507 
	`Såˇt_ch¨
(
°r
, ' ');

1508 
	`Såˇt_ch¨p
(
°r
,

1509 
	`c⁄v_‰om_sy°em
(
buf
->
cuºítURL
.
ªÆ_fûe
));

1513 
SCM_MISSING
:

1516 
p
 = 
	`∑r£dURL2Så
(&
buf
->
cuºítURL
)->
±r
;

1517 i‡(
DecodeURL
)

1518 
p
 = 
	`uæ_unquŸe_c⁄v
(p, 0);

1519 
	`Såˇt_ch¨p
(
°r
, 
p
);

1523 
œbñ
[
i
] = 
°r
->
±r
;

1524 i‡(
Àn
 < 
°r
->
Àngth
)

1525 
Àn
 = 
°r
->
Àngth
;

1527 
l
 = 
	`°æí
(
commít
);

1528 i‡(
Àn
 < 
l
 + 4)

1529 
Àn
 = 
l
 + 4;

1530 i‡(
Àn
 > 
COLS
 - 2 * 
FRAME_WIDTH
)

1531 
Àn
 = 
COLS
 - 2 * 
FRAME_WIDTH
;

1532 
Àn
 = (À¿> 1Ë? (÷í - 
l
 + 1) / 2) : 0;

1533 
°r
 = 
	`Så√w
();

1534 
i
 = 0; i < 
Àn
; i++)

1535 
	`Såˇt_ch¨
(
°r
, '-');

1536 
	`Såˇt_ch¨p
(
°r
, 
commít
);

1537 
i
 = 0; i < 
Àn
; i++)

1538 
	`Såˇt_ch¨
(
°r
, '-');

1539 
œbñ
[
nôem
] = 
°r
->
±r
;

1540 
œbñ
[
nôem
 + 1] = 
NULL
;

1542 
	`√w_›ti⁄_míu
(&
SñTabMíu
, 
œbñ
, &
SñTabV
, 
smChTab
);

1543 
SñTabMíu
.
öôül
 = 
SñTabV
;

1544 
SñTabMíu
.
curs‹X
 = 
Cuºítbuf
->curs‹X + Cuºítbuf->
roŸX
;

1545 
SñTabMíu
.
curs‹Y
 = 
Cuºítbuf
->curs‹Y + Cuºítbuf->
roŸY
;

1546 
SñTabMíu
.
keym≠
['D'] = 
smDñTab
;

1547 
SñTabMíu
.
ôem
[
nôem
].
ty≥
 = 
MENU_NOP
;

1548 
	}
}

1551 
	$smChTab
()

1553 
i
;

1554 
TabBuf„r
 *
èb
;

1555 
Buf„r
 *
buf
;

1557 i‡(
SñTabV
 < 0 || SñTabV >
SñTabMíu
.
nôem
)

1559 
i
 = 0, 
èb
 = 
La°Tab
; i < 
SñTabV
 &&Åab !
NULL
;

1560 
i
++, 
èb
 =Åab->
¥evTab
) ;

1561 
CuºítTab
 = 
èb
;

1562 
èb
 = 
La°Tab
;Åab !
NULL
;Åab =Åab->
¥evTab
) {

1563 i‡(
èb
 =
CuºítTab
)

1565 
buf
 = 
èb
->
cuºítBuf„r
;

1566 #ifde‡
USE_IMAGE


1567 
	`dñëeImage
(
buf
);

1569 i‡(
˛ór_buf„r
)

1570 
	`tmpCÀ¨Buf„r
(
buf
);

1572 
	}
}

1575 
	$smDñTab
(
c
)

1577 
i
, 
x
, 
y
, 
m£À˘
;

1578 
TabBuf„r
 *
èb
;

1580 i‡(
CuºítMíu
->
£À˘
 < 0 || CuºítMíu->£À˘ >
SñTabMíu
.
nôem
)

1581  (
MENU_NOTHING
);

1582 
i
 = 0, 
èb
 = 
La°Tab
; i < 
CuºítMíu
->
£À˘
 &&Åab !
NULL
;

1583 
i
++, 
èb
 =Åab->
¥evTab
) ;

1584 
	`dñëeTab
(
èb
);

1586 
x
 = 
CuºítMíu
->x;

1587 
y
 = 
CuºítMíu
->y;

1588 
m£À˘
 = 
CuºítMíu
->
£À˘
;

1590 
	`öôSñTabMíu
();

1592 
CuºítMíu
->
x
 = x;

1593 
CuºítMíu
->
y
 = y;

1595 
	`geom_míu
(
CuºítMíu
, 
x
, 
y
, 0);

1597 
CuºítMíu
->
£À˘
 = (
m£À˘
 <CuºítMíu->
nôem
 - 2) ? mselect

1598 : (
CuºítMíu
->
nôem
 - 2);

1600 
	`di•œyBuf„r
(
Cuºítbuf
, 
B_FORCE_REDRAW
);

1601 
	`døw_Æl_míu
(
CuºítMíu
);

1602 
	`£À˘_míu
(
CuºítMíu
, CuºítMíu->
£À˘
);

1603  (
MENU_NOTHING
);

1604 
	}
}

1611 
›ti⁄Míu
(
x
, 
y
, **
œbñ
, *
v¨übÀ
, 
öôül
,

1612 (*
func
) ())

1614 
Míu
 
míu
;

1616 
	`£t_míu_‰ame
();

1618 
	`√w_›ti⁄_míu
(&
míu
, 
œbñ
, 
v¨übÀ
, 
func
);

1619 
míu
.
curs‹X
 = 
COLS
 - 1;

1620 
míu
.
curs‹Y
 = 
LASTLINE
;

1621 
míu
.
x
 = x;

1622 
míu
.
y
 = y;

1623 
míu
.
öôül
 = initial;

1625 
	`p›up_míu
(
NULL
, &
míu
);

1626 
	}
}

1633 
	$öãΩªt_míu
(
FILE
 * 
mf
)

1635 
Så
 
löe
;

1636 *
p
, *
s
;

1637 
ö_míu
 = 0, 
nmíu
 = 0, 
nôem
 = 0, 
ty≥
;

1638 
MíuIãm
 *
ôem
 = 
NULL
;

1639 #ifde‡
USE_M17N


1640 
wc_˚s
 
ch¨£t
 = 
Sy°emCh¨£t
;

1643 !
	`„of
(
mf
)) {

1644 
löe
 = 
	`Såfgës
(
mf
);

1645 
	`Såch›
(
löe
);

1646 
	`Såªmovefú°•a˚s
(
löe
);

1647 i‡(
löe
->
Àngth
 == 0)

1649 #ifde‡
USE_M17N


1650 
löe
 = 
	`wc_Så_c⁄v
÷öe, 
ch¨£t
, 
I¬îCh¨£t
);

1652 
p
 = 
löe
->
±r
;

1653 
s
 = 
	`gëW‹d
(&
p
);

1654 i‡(*
s
 == '#')

1656 i‡(
ö_míu
) {

1657 
ty≥
 = 
	`£tMíuIãm
(&
ôem
[
nôem
], 
s
, 
p
);

1658 i‡(
ty≥
 == -1)

1660 i‡(
ty≥
 =
MENU_END
)

1661 
ö_míu
 = 0;

1663 
nôem
++;

1664 
ôem
 = 
	`New_Reu£
(
MíuIãm
, iãm, (
nôem
 + 1));

1665 
w3mMíuLi°
[
nmíu
].
ôem
 = item;

1666 
ôem
[
nôem
].
ty≥
 = 
MENU_END
;

1669 i‡(!
	`°rcmp
(
s
, "menu")) {

1670 
s
 = 
	`gëQW‹d
(&
p
);

1671 i‡(*
s
 == '\0')

1673 
ö_míu
 = 1;

1674 i‡((
nmíu
 = 
	`gëMíuN
(
w3mMíuLi°
, 
s
)) != -1)

1675 
w3mMíuLi°
[
nmíu
].
ôem
 = 
	`New
(
MíuIãm
);

1677 
nmíu
 = 
	`addMíuLi°
(&
w3mMíuLi°
, 
s
);

1678 
ôem
 = 
w3mMíuLi°
[
nmíu
].item;

1679 
nôem
 = 0;

1680 
ôem
[
nôem
].
ty≥
 = 
MENU_END
;

1682 #ifde‡
USE_M17N


1683 i‡(!
	`°rcmp
(
s
, "charset") || !strcmp(s, "encoding")) {

1684 
s
 = 
	`gëQW‹d
(&
p
);

1685 i‡(*
s
 == '\0')

1687 
ch¨£t
 = 
	`wc_guess_ch¨£t
(
s
, charset);

1691 
	}
}

1694 
	$öôMíu
()

1696 
FILE
 *
mf
;

1697 
MíuLi°
 *
li°
;

1699 
w3mMíuLi°
 = 
	`New_N
(
MíuLi°
, 3);

1700 
w3mMíuLi°
[0].
id
 = "Main";

1701 
w3mMíuLi°
[0].
míu
 = &
MaöMíu
;

1702 
w3mMíuLi°
[0].
ôem
 = 
MaöMíuIãm
;

1703 
w3mMíuLi°
[1].
id
 = "Select";

1704 
w3mMíuLi°
[1].
míu
 = &
Sñe˘Míu
;

1705 
w3mMíuLi°
[1].
ôem
 = 
NULL
;

1706 
w3mMíuLi°
[2].
id
 = "SelectTab";

1707 
w3mMíuLi°
[2].
míu
 = &
SñTabMíu
;

1708 
w3mMíuLi°
[2].
ôem
 = 
NULL
;

1709 
w3mMíuLi°
[3].
id
 = 
NULL
;

1711 #ifde‡
USE_M17N


1712 i‡(!
MaöMíuEncode
) {

1713 
MíuIãm
 *
ôem
;

1714 #ifde‡
ENABLE_NLS


1716 
MaöMíuCh¨£t
 = 
Sy°emCh¨£t
;

1718 
ôem
 = 
MaöMíuIãm
; iãm->
ty≥
 !
MENU_END
; item++)

1719 
ôem
->
œbñ
 =

1720 
	`wc_c⁄v
(
	`_
(
ôem
->
œbñ
), 
MaöMíuCh¨£t
,

1721 
I¬îCh¨£t
)->
±r
;

1722 
MaöMíuEncode
 = 
TRUE
;

1725 i‡((
mf
 = 
	`f›í
(
	`c⁄fFûe
(
MENU_FILE
), "π")Ë!
NULL
) {

1726 
	`öãΩªt_míu
(
mf
);

1727 
	`f˛o£
(
mf
);

1729 i‡((
mf
 = 
	`f›í
(
	`rcFûe
(
MENU_FILE
), "π")Ë!
NULL
) {

1730 
	`öãΩªt_míu
(
mf
);

1731 
	`f˛o£
(
mf
);

1734 
li°
 = 
w3mMíuLi°
;Üi°->
id
 !
NULL
;Üist++) {

1735 i‡(
li°
->
ôem
 =
NULL
)

1737 
	`√w_míu
(
li°
->
míu
,Üi°->
ôem
);

1739 
	}
}

1742 
	$£tMíuIãm
(
MíuIãm
 *
ôem
, *
ty≥
, *
löe
)

1744 *
œbñ
, *
func
, *
p›up
, *
keys
, *
d©a
;

1745 
f
;

1746 
n
;

1748 i‡(
ty≥
 =
NULL
 || *type == '\0')

1750 i‡(
	`°rcmp
(
ty≥
, "end") == 0) {

1751 
ôem
->
ty≥
 = 
MENU_END
;

1752  
MENU_END
;

1754 i‡(
	`°rcmp
(
ty≥
, "nop") == 0) {

1755 
ôem
->
ty≥
 = 
MENU_NOP
;

1756 
ôem
->
œbñ
 = 
	`gëQW‹d
(&
löe
);

1757  
MENU_NOP
;

1759 i‡(
	`°rcmp
(
ty≥
, "func") == 0) {

1760 
œbñ
 = 
	`gëQW‹d
(&
löe
);

1761 
func
 = 
	`gëW‹d
(&
löe
);

1762 
keys
 = 
	`gëQW‹d
(&
löe
);

1763 
d©a
 = 
	`gëQW‹d
(&
löe
);

1764 i‡(*
func
 == '\0')

1766 
ôem
->
ty≥
 = 
MENU_FUNC
;

1767 
ôem
->
œbñ
 =Üabel;

1768 
f
 = 
	`gëFuncLi°
(
func
);

1769 
ôem
->
func
 = 
w3mFuncLi°
[(
f
 >0Ë? f : 
FUNCNAME_nulcmd
].func;

1770 
ôem
->
keys
 = keys;

1771 
ôem
->
d©a
 = data;

1772  
MENU_FUNC
;

1774 i‡(
	`°rcmp
(
ty≥
, "popup") == 0) {

1775 
œbñ
 = 
	`gëQW‹d
(&
löe
);

1776 
p›up
 = 
	`gëQW‹d
(&
löe
);

1777 
keys
 = 
	`gëQW‹d
(&
löe
);

1778 i‡(*
p›up
 == '\0')

1780 
ôem
->
ty≥
 = 
MENU_POPUP
;

1781 
ôem
->
œbñ
 =Üabel;

1782 i‡((
n
 = 
	`gëMíuN
(
w3mMíuLi°
, 
p›up
)) == -1)

1783 
n
 = 
	`addMíuLi°
(&
w3mMíuLi°
, 
p›up
);

1784 
ôem
->
p›up
 = 
w3mMíuLi°
[
n
].
míu
;

1785 
ôem
->
keys
 = keys;

1786  
MENU_POPUP
;

1789 
	}
}

1792 
	$addMíuLi°
(
MíuLi°
 **
mli°
, *
id
)

1794 
n
;

1795 
MíuLi°
 *
li°
 = *
mli°
;

1797 
n
 = 0; 
li°
->
id
 !
NULL
;Üist++,Ç++) ;

1798 *
mli°
 = 
	`New_Reu£
(
MíuLi°
, *mli°, (
n
 + 2));

1799 
li°
 = *
mli°
 + 
n
;

1800 
li°
->
id
 = id;

1801 
li°
->
míu
 = 
	`New
(
Míu
);

1802 
li°
->
ôem
 = 
	`New
(
MíuIãm
);

1803 (
li°
 + 1)->
id
 = 
NULL
;

1804  
n
;

1805 
	}
}

1808 
	$gëMíuN
(
MíuLi°
 *
li°
, *
id
)

1810 
n
;

1812 
n
 = 0; 
li°
->
id
 !
NULL
;Üist++,Ç++) {

1813 i‡(
	`°rcmp
(
id
, 
li°
->id) == 0)

1814  
n
;

1817 
	}
}

1821 
LökLi°
 *

1822 
	$lök_míu
(
Buf„r
 *
buf
)

1824 
Míu
 
míu
;

1825 
LökLi°
 *
l
;

1826 
i
, 
nôem
, 
Àn
 = 0, 
lökV
 = -1;

1827 **
œbñ
;

1828 
Så
 
°r
;

1829 *
p
;

1831 i‡(!
buf
->
lökli°
)

1832  
NULL
;

1834 
i
 = 0, 
l
 = 
buf
->
lökli°
;Ü; i++,Ü =Ü->
√xt
) ;

1835 
nôem
 = 
i
;

1837 
œbñ
 = 
	`New_N
(*, 
nôem
 + 1);

1838 
i
 = 0, 
l
 = 
buf
->
lökli°
;Ü; i++,Ü =Ü->
√xt
) {

1839 
°r
 = 
	`Så√w_ch¨p
(
l
->
tôÀ
 ?Ü->title : "(empty)");

1840 i‡(
l
->
ty≥
 =
LINK_TYPE_REL
)

1841 
	`Såˇt_ch¨p
(
°r
, " [Rel] ");

1842 i‡(
l
->
ty≥
 =
LINK_TYPE_REV
)

1843 
	`Såˇt_ch¨p
(
°r
, " [Rev] ");

1845 
	`Såˇt_ch¨p
(
°r
, " ");

1846 i‡(!
l
->
uæ
)

1847 
p
 = "";

1848 i‡(
DecodeURL
)

1849 
p
 = 
	`uæ_unquŸe_c⁄v
(
l
->
uæ
, 
buf
->
documít_ch¨£t
);

1851 
p
 = 
l
->
uæ
;

1852 
	`Såˇt_ch¨p
(
°r
, 
p
);

1853 
œbñ
[
i
] = 
°r
->
±r
;

1854 i‡(
Àn
 < 
°r
->
Àngth
)

1855 
Àn
 = 
°r
->
Àngth
;

1857 
œbñ
[
nôem
] = 
NULL
;

1859 
	`£t_míu_‰ame
();

1860 
	`√w_›ti⁄_míu
(&
míu
, 
œbñ
, &
lökV
, 
NULL
);

1862 
míu
.
öôül
 = 0;

1863 
míu
.
curs‹X
 = 
buf
->curs‹X + buf->
roŸX
;

1864 
míu
.
curs‹Y
 = 
buf
->curs‹Y + buf->
roŸY
;

1865 
míu
.
x
 = míu.
curs‹X
 + 
FRAME_WIDTH
 + 1;

1866 
míu
.
y
 = míu.
curs‹Y
 + 2;

1868 
	`p›up_míu
(
NULL
, &
míu
);

1870 i‡(
lökV
 < 0)

1871  
NULL
;

1872 
i
 = 0, 
l
 = 
buf
->
lökli°
;Ü; i++,Ü =Ü->
√xt
) {

1873 i‡(
i
 =
lökV
)

1874  
l
;

1876  
NULL
;

1877 
	}
}

1881 
Anch‹
 *

1882 
	$ac˚sskey_míu
(
Buf„r
 *
buf
)

1884 
Míu
 
míu
;

1885 
Anch‹Li°
 *
Æ
 = 
buf
->
hªf
;

1886 
Anch‹
 *
a
;

1887 
Anch‹
 **
≠
;

1888 
i
, 
n
, 
nôem
 = 0, 
key
 = -1;

1889 **
œbñ
;

1890 *
t
;

1891 
c
;

1893 i‡(!
Æ
)

1894  
NULL
;

1895 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

1896 
a
 = &
Æ
->
™ch‹s
[
i
];

1897 i‡(!
a
->
¶ave
 &&á->
ac˚sskey
 && 
	`IS_ASCII
(a->accesskey))

1898 
nôem
++;

1900 i‡(!
nôem
)

1901  
NULL
;

1903 
œbñ
 = 
	`New_N
(*, 
nôem
 + 1);

1904 
≠
 = 
	`New_N
(
Anch‹
 *, 
nôem
);

1905 
i
 = 0, 
n
 = 0; i < 
Æ
->
«nch‹
; i++) {

1906 
a
 = &
Æ
->
™ch‹s
[
i
];

1907 i‡(!
a
->
¶ave
 &&á->
ac˚sskey
 && 
	`IS_ASCII
(a->accesskey)) {

1908 
t
 = 
	`gëAnch‹Text
(
buf
, 
Æ
, 
a
);

1909 
œbñ
[
n
] = 
	`S¥ötf
("%c: %s", 
a
->
ac˚sskey
, 
t
 ?Å : "")->
±r
;

1910 
≠
[
n
] = 
a
;

1911 
n
++;

1914 
œbñ
[
nôem
] = 
NULL
;

1916 
	`√w_›ti⁄_míu
(&
míu
, 
œbñ
, &
key
, 
NULL
);

1918 
míu
.
öôül
 = 0;

1919 
míu
.
curs‹X
 = 
buf
->curs‹X + buf->
roŸX
;

1920 
míu
.
curs‹Y
 = 
buf
->curs‹Y + buf->
roŸY
;

1921 
míu
.
x
 = míu.
curs‹X
 + 
FRAME_WIDTH
 + 1;

1922 
míu
.
y
 = míu.
curs‹Y
 + 2;

1923 
i
 = 0; i < 128; i++)

1924 
míu
.
key£À˘
[
i
] = -1;

1925 
i
 = 0; i < 
nôem
; i++) {

1926 
c
 = 
≠
[
i
]->
ac˚sskey
;

1927 
míu
.
keym≠
[()
c
] = 
mSñe˘
;

1928 
míu
.
key£À˘
[()
c
] = 
i
;

1930 
i
 = 0; i < 
nôem
; i++) {

1931 
c
 = 
≠
[
i
]->
ac˚sskey
;

1932 i‡(!
	`IS_ALPHA
(
c
Ë|| 
míu
.
key£À˘
[
n
] >= 0)

1934 
c
 = 
	`TOLOWER
(c);

1935 
míu
.
keym≠
[()
c
] = 
mSñe˘
;

1936 
míu
.
key£À˘
[()
c
] = 
i
;

1937 
c
 = 
	`TOUPPER
(c);

1938 
míu
.
keym≠
[()
c
] = 
mSñe˘
;

1939 
míu
.
key£À˘
[()
c
] = 
i
;

1942 
a
 = 
	`ªåõveCuºítAnch‹
(
buf
);

1943 i‡(
a
 &&á->
ac˚sskey
 && 
	`IS_ASCII
(a->accesskey)) {

1944 
i
 = 0; i < 
nôem
; i++) {

1945 i‡(
a
->
h£q
 =
≠
[
i
]->hseq) {

1946 
míu
.
öôül
 = 
i
;

1952 
	`p›up_míu
(
NULL
, &
míu
);

1954  (
key
 >0Ë? 
≠
[key] : 
NULL
;

1955 
	}
}

1957 
	glmKeys
[] = "abcdefgimopqrstuvwxyz";

1958 
	glmKeys2
[] = "1234567890ABCDEFGHILMOPQRSTUVWXYZ";

1959 
	#∆mKeys
 ((
lmKeys
Ë- 1)

	)

1960 
	#∆mKeys2
 ((
lmKeys2
Ë- 1)

	)

1963 
	$lmGŸo
(
c
)

1965 i‡(
	`IS_ASCII
(
c
Ë&& 
CuºítMíu
->
key£À˘
[()c] >= 0) {

1966 
	`gŸo_míu
(
CuºítMíu
, CuºítMíu->
nôem
 - 1, -1);

1967 
	`gŸo_míu
(
CuºítMíu
, CuºítMíu->
key£À˘
[()
c
] * 
∆mKeys
, 1);

1969  (
MENU_NOTHING
);

1970 
	}
}

1973 
	$lmSñe˘
(
c
)

1975 i‡(
	`IS_ASCII
(
c
))

1976  
	`£À˘_míu
(
CuºítMíu
, (CuºítMíu->
£À˘
 / 
∆mKeys
) *

1977 
∆mKeys
 + 
CuºítMíu
->
key£À˘
[()
c
]);

1979  (
MENU_NOTHING
);

1980 
	}
}

1982 
Anch‹
 *

1983 
	$li°_míu
(
Buf„r
 *
buf
)

1985 
Míu
 
míu
;

1986 
Anch‹Li°
 *
Æ
 = 
buf
->
hªf
;

1987 
Anch‹
 *
a
;

1988 
Anch‹
 **
≠
;

1989 
i
, 
n
, 
nôem
 = 0, 
key
 = -1, 
two
 = 
FALSE
;

1990 **
œbñ
;

1991 *
t
;

1992 
c
;

1994 i‡(!
Æ
)

1995  
NULL
;

1996 
i
 = 0; i < 
Æ
->
«nch‹
; i++) {

1997 
a
 = &
Æ
->
™ch‹s
[
i
];

1998 i‡(!
a
->
¶ave
)

1999 
nôem
++;

2001 i‡(!
nôem
)

2002  
NULL
;

2004 i‡(
nôem
 >
∆mKeys
)

2005 
two
 = 
TRUE
;

2006 
œbñ
 = 
	`New_N
(*, 
nôem
 + 1);

2007 
≠
 = 
	`New_N
(
Anch‹
 *, 
nôem
);

2008 
i
 = 0, 
n
 = 0; i < 
Æ
->
«nch‹
; i++) {

2009 
a
 = &
Æ
->
™ch‹s
[
i
];

2010 i‡(!
a
->
¶ave
) {

2011 
t
 = 
	`gëAnch‹Text
(
buf
, 
Æ
, 
a
);

2012 i‡(!
t
)

2013 
t
 = "";

2014 i‡(
two
 && 
n
 >
∆mKeys2
 * 
∆mKeys
)

2015 
œbñ
[
n
] = 
	`S¥ötf
(" : %s", 
t
)->
±r
;

2016 i‡(
two
)

2017 
œbñ
[
n
] = 
	`S¥ötf
("%c%c: %s", 
lmKeys2
[¿/ 
∆mKeys
],

2018 
lmKeys
[
n
 % 
∆mKeys
], 
t
)->
±r
;

2020 
œbñ
[
n
] = 
	`S¥ötf
("%c: %s", 
lmKeys
[n], 
t
)->
±r
;

2021 
≠
[
n
] = 
a
;

2022 
n
++;

2025 
œbñ
[
nôem
] = 
NULL
;

2027 
	`£t_míu_‰ame
();

2028 
	`£t_míu_‰ame
();

2029 
	`√w_›ti⁄_míu
(&
míu
, 
œbñ
, &
key
, 
NULL
);

2031 
míu
.
öôül
 = 0;

2032 
míu
.
curs‹X
 = 
buf
->curs‹X + buf->
roŸX
;

2033 
míu
.
curs‹Y
 = 
buf
->curs‹Y + buf->
roŸY
;

2034 
míu
.
x
 = míu.
curs‹X
 + 
FRAME_WIDTH
 + 1;

2035 
míu
.
y
 = míu.
curs‹Y
 + 2;

2036 
i
 = 0; i < 128; i++)

2037 
míu
.
key£À˘
[
i
] = -1;

2038 i‡(
two
) {

2039 
i
 = 0; i < 
∆mKeys2
; i++) {

2040 
c
 = 
lmKeys2
[
i
];

2041 
míu
.
keym≠
[()
c
] = 
lmGŸo
;

2042 
míu
.
key£À˘
[()
c
] = 
i
;

2044 
i
 = 0; i < 
∆mKeys
; i++) {

2045 
c
 = 
lmKeys
[
i
];

2046 
míu
.
keym≠
[()
c
] = 
lmSñe˘
;

2047 
míu
.
key£À˘
[()
c
] = 
i
;

2051 
i
 = 0; i < 
nôem
; i++) {

2052 
c
 = 
lmKeys
[
i
];

2053 
míu
.
keym≠
[()
c
] = 
mSñe˘
;

2054 
míu
.
key£À˘
[()
c
] = 
i
;

2058 
a
 = 
	`ªåõveCuºítAnch‹
(
buf
);

2059 i‡(
a
) {

2060 
i
 = 0; i < 
nôem
; i++) {

2061 i‡(
a
->
h£q
 =
≠
[
i
]->hseq) {

2062 
míu
.
öôül
 = 
i
;

2068 
	`p›up_míu
(
NULL
, &
míu
);

2070  (
key
 >0Ë? 
≠
[key] : 
NULL
;

2071 
	}
}

	@menu.h

6 #i‚de‡
MENU_H


7 
	#MENU_H


	)

9 
	#MENU_END
 0

	)

10 
	#MENU_NOP
 1

	)

11 
	#MENU_VALUE
 2

	)

12 
	#MENU_FUNC
 4

	)

13 
	#MENU_POPUP
 8

	)

15 
	#MENU_NOTHING
 -1

	)

16 
	#MENU_CANCEL
 -2

	)

17 
	#MENU_CLOSE
 -3

	)

19 
	s_MíuIãm
 {

20 
	mty≥
;

21 *
	mœbñ
;

22 *
	mv¨übÀ
;

23 
	mvÆue
;

24 (*
	mfunc
) ();

25 
_Míu
 *
	mp›up
;

26 *
	mkeys
;

27 *
	md©a
;

28 } 
	tMíuIãm
;

30 
	s_Míu
 {

31 
_Míu
 *
	m∑ª¡
;

32 
	mcurs‹X
;

33 
	mcurs‹Y
;

34 
	mx
;

35 
	my
;

36 
	mwidth
;

37 
	mheight
;

38 
	mnôem
;

39 
MíuIãm
 *
	môem
;

40 
	möôül
;

41 
	m£À˘
;

42 
	moff£t
;

43 
	ma˘ive
;

44 (*
	mkeym≠
[128]Ë(
	mc
);

45 
	mkey£À˘
[128];

46 } 
	tMíu
;

48 
	s_MíuLi°
 {

49 *
	mid
;

50 
Míu
 *
	mmíu
;

51 
MíuIãm
 *
	môem
;

52 } 
	tMíuLi°
;

	@mimehead.c

6 
	~<sys/ty≥s.h
>

7 
	~"fm.h
"

8 
	~"my˘y≥.h
"

9 
	~"Så.h
"

11 
	#MIME_ENCODED_LINE_LIMIT
 80

	)

12 
	#MIME_ENCODED_WORD_LENGTH_OFFSET
 18

	)

13 
	#MIME_ENCODED_WORD_LENGTH_ESTIMATION
(
x
) \

14 (((
x
)+2)*4/3+
MIME_ENCODED_WORD_LENGTH_OFFSET
)

	)

15 
	#MIME_DECODED_WORD_LENGTH_ESTIMATION
(
x
) \

16 (((
x
)-
MIME_ENCODED_WORD_LENGTH_OFFSET
)/4*3)

	)

17 
	#J_CHARSET
 "ISO-2022-JP"

	)

19 
	#BAD_BASE64
 255

	)

23 
	$c2e
(
x
)

25 i‡('A' <
x
 && x <= 'Z')

26  (
x
) - 'A';

27 i‡('a' <
x
 && x <= 'z')

28  (
x
) - 'a' + 26;

29 i‡('0' <
x
 && x <= '9')

30  (
x
) - '0' + 52;

31 i‡(
x
 == '+')

33 i‡(
x
 == '/')

35  
BAD_BASE64
;

36 
	}
}

40 
	$ha2d
(
x
, 
y
)

42 
r
 = 0;

44 i‡('0' <
x
 && x <= '9')

45 
r
 = 
x
 - '0';

46 i‡('A' <
x
 && x <= 'F')

47 
r
 = 
x
 - 'A' + 10;

48 i‡('a' <
x
 && x <= 'f')

49 
r
 = 
x
 - 'a' + 10;

51 
r
 <<= 4;

53 i‡('0' <
y
 && y <= '9')

54 
r
 +
y
 - '0';

55 i‡('A' <
y
 && y <= 'F')

56 
r
 +
y
 - 'A' + 10;

57 i‡('a' <
y
 && y <= 'f')

58 
r
 +
y
 - 'a' + 10;

60  
r
;

62 
	}
}

64 
Så


65 
	$decodeB
(**
ww
)

67 
c
[4];

68 *
wp
 = *
ww
;

69 
d
[3];

70 
i
, 
n_∑d
;

71 
Så
 
≠
 = 
	`Så√w_size
(
	`°æí
(
wp
));

73 
n_∑d
 = 0;

75 
i
 = 0; i < 4; i++) {

76 
c
[
i
] = *(
wp
++);

77 i‡(*
wp
 == '\0' || *wp == '?') {

78 
i
++;

79 ; 
i
 < 4; i++) {

80 
c
[
i
] = '=';

85 i‡(
c
[3] == '=') {

86 
n_∑d
++;

87 
c
[3] = 'A';

88 i‡(
c
[2] == '=') {

89 
n_∑d
++;

90 
c
[2] = 'A';

93 
i
 = 0; i < 4; i++) {

94 
c
[
i
] = 
	`c2e
(c[i]);

95 i‡(
c
[
i
] =
BAD_BASE64
) {

96 *
ww
 = 
wp
;

97  
≠
;

100 
d
[0] = ((
c
[0] << 2) | (c[1] >> 4));

101 
d
[1] = ((
c
[1] << 4) | (c[2] >> 2));

102 
d
[2] = ((
c
[2] << 6) | c[3]);

103 
i
 = 0; i < 3 - 
n_∑d
; i++) {

104 
	`Såˇt_ch¨
(
≠
, 
d
[
i
]);

106 i‡(
n_∑d
 || *
wp
 == '\0' || *wp == '?')

109 *
ww
 = 
wp
;

110  
≠
;

111 
	}
}

113 
Så


114 
	$decodeU
(**
ww
)

116 
c1
, 
c2
;

117 *
w
 = *
ww
;

118 
n
, 
i
;

119 
Så
 
a
;

121 i‡(*
w
 <= 0x20 || *w >= 0x60)

122  
	`Så√w_size
(0);

123 
n
 = *
w
 - 0x20;

124 
a
 = 
	`Så√w_size
(
n
);

125 
w
++, 
i
 = 2; *w !'\0' && 
n
;Ç--) {

126 
c1
 = (
w
[0] - 0x20) % 0x40;

127 
c2
 = (
w
[1] - 0x20) % 0x40;

128 
	`Såˇt_ch¨
(
a
, (
c1
 << 
i
Ë| (
c2
 >> (6 - i)));

129 i‡(
i
 == 6) {

130 
w
 += 2;

131 
i
 = 2;

134 
w
++;

135 
i
 += 2;

138  
a
;

139 
	}
}

142 
Så


143 
	$decodeQ
(**
ww
)

145 *
w
 = *
ww
;

146 
Så
 
a
 = 
	`Så√w_size
(
	`°æí
(
w
));

148 ; *
w
 != '\0' && *w != '?'; w++) {

149 i‡(*
w
 == '=') {

150 
w
++;

151 
	`Såˇt_ch¨
(
a
, 
	`ha2d
(*
w
, *(w + 1)));

152 
w
++;

154 i‡(*
w
 == '_') {

155 
	`Såˇt_ch¨
(
a
, ' ');

158 
	`Såˇt_ch¨
(
a
, *
w
);

160 *
ww
 = 
w
;

161  
a
;

162 
	}
}

165 
Så


166 
	$decodeQP
(**
ww
)

168 *
w
 = *
ww
;

169 
Så
 
a
 = 
	`Så√w_size
(
	`°æí
(
w
));

171 ; *
w
 != '\0'; w++) {

172 i‡(*
w
 == '=') {

173 
w
++;

174 i‡(*
w
 == '\n' || *w == '\r' || *w == ' ' || *w == '\t') {

175 *
w
 != '\n' && *w != '\0')

176 
w
++;

177 i‡(*
w
 == '\0')

181 i‡(*
w
 == '\0' || *(w + 1) == '\0')

183 
	`Såˇt_ch¨
(
a
, 
	`ha2d
(*
w
, *(w + 1)));

184 
w
++;

188 
	`Såˇt_ch¨
(
a
, *
w
);

190 *
ww
 = 
w
;

191  
a
;

192 
	}
}

194 #ifde‡
USE_M17N


195 
Så


196 
	$decodeW‹d
(**
ow
, 
wc_˚s
 * 
ch¨£t
)

198 
Så


199 
	$decodeW‹d0
(**
ow
)

202 #ifde‡
USE_M17N


203 
wc_˚s
 
c
;

205 *
p
, *
w
 = *
ow
;

206 
mëhod
;

207 
Så
 
a
 = 
	`Så√w
();

208 
Så
 
tmp
 = 
	`Så√w
();

210 i‡(*
w
 != '=' || *(w + 1) != '?')

211 
c⁄vît_Áû
;

212 
w
 += 2;

213 ; *
w
 != '?'; w++) {

214 i‡(*
w
 == '\0')

215 
c⁄vît_Áû
;

216 
	`Såˇt_ch¨
(
tmp
, *
w
);

218 #ifde‡
USE_M17N


219 
c
 = 
	`wc_guess_ch¨£t
(
tmp
->
±r
, 0);

220 i‡(!
c
)

221 
c⁄vît_Áû
;

223 i‡(
	`°rˇ£cmp
(
tmp
->
±r
, "ISO-8859-1") != 0 && strcasecmp(tmp->ptr, "US_ASCII") != 0)

225 
c⁄vît_Áû
;

227 
w
++;

228 
mëhod
 = *(
w
++);

229 i‡(*
w
 != '?')

230 
c⁄vît_Áû
;

231 
w
++;

232 
p
 = 
w
;

233 
	`TOUPPER
(
mëhod
)) {

235 
a
 = 
	`decodeB
(&
w
);

238 
a
 = 
	`decodeQ
(&
w
);

241 
c⁄vît_Áû
;

243 i‡(
p
 =
w
)

244 
c⁄vît_Áû
;

245 i‡(*
w
 == '?') {

246 
w
++;

247 i‡(*
w
 == '=')

248 
w
++;

250 *
ow
 = 
w
;

251 #ifde‡
USE_M17N


252 *
ch¨£t
 = 
c
;

254  
a
;

256 
c⁄vît_Áû
:

257  
	`Så√w
();

258 
	}
}

263 #ifde‡
USE_M17N


264 
Så


265 
	$decodeMIME
(
Så
 
‹g°r
, 
wc_˚s
 * 
ch¨£t
)

267 
Så


268 
	$decodeMIME0
(
Så
 
‹g°r
)

271 *
‹g
 = 
‹g°r
->
±r
, *
ídp
 = org + org°r->
Àngth
;

272 *
‹g0
, *
p
;

273 
Så
 
˙v
 = 
NULL
;

275 #ifde‡
USE_M17N


276 *
ch¨£t
 = 0;

278 
‹g
 < 
ídp
) {

279 i‡(*
‹g
 == '=' && *(org + 1) == '?') {

280 i‡(
˙v
 =
NULL
) {

281 
˙v
 = 
	`Så√w_size
(
‹g°r
->
Àngth
);

282 
	`Såˇt_ch¨p_n
(
˙v
, 
‹g°r
->
±r
, 
‹g
 - orgstr->ptr);

284 
√xtEncodeW‹d
:

285 
p
 = 
‹g
;

286 
	`Såˇt
(
˙v
, 
	`decodeW‹d
(&
‹g
, 
ch¨£t
));

287 i‡(
‹g
 =
p
) {

288 
	`Såˇt_ch¨p
(
˙v
, 
‹g
);

289  
˙v
;

291 
‹g0
 = 
‹g
;

292 
SPCRLo›
:

293 *
‹g0
) {

298 
‹g0
++;

299 
SPCRLo›
;

301 i‡(
‹g0
[1] == '?') {

302 
‹g
 = 
‹g0
;

303 
√xtEncodeW‹d
;

310 i‡(
˙v
 !
NULL
)

311 
	`Såˇt_ch¨
(
˙v
, *
‹g
);

312 
‹g
++;

315 i‡(
˙v
 =
NULL
)

316  
‹g°r
;

317  
˙v
;

318 
	}
}

322 
	gBa£64TabÀ
[] =

325 
Så


326 
	$ícodeB
(*
a
)

328 
d
[3];

329 
c1
, 
c2
, 
c3
, 
c4
;

330 
i
, 
n_∑d
;

331 
Så
 
w
 = 
	`Så√w
();

334 i‡(*
a
 == '\0')

336 
n_∑d
 = 0;

337 
d
[1] = d[2] = 0;

338 
i
 = 0; i < 3; i++) {

339 
d
[
i
] = 
a
[i];

340 i‡(
a
[
i
] == '\0') {

341 
n_∑d
 = 3 - 
i
;

345 
c1
 = 
d
[0] >> 2;

346 
c2
 = (((
d
[0] << 4) | (d[1] >> 4)) & 0x3f);

347 i‡(
n_∑d
 == 2) {

348 
c3
 = 
c4
 = 64;

350 i‡(
n_∑d
 == 1) {

351 
c3
 = ((
d
[1] << 2) & 0x3f);

352 
c4
 = 64;

355 
c3
 = (((
d
[1] << 2) | (d[2] >> 6)) & 0x3f);

356 
c4
 = (
d
[2] & 0x3f);

358 
	`Såˇt_ch¨
(
w
, 
Ba£64TabÀ
[
c1
]);

359 
	`Såˇt_ch¨
(
w
, 
Ba£64TabÀ
[
c2
]);

360 
	`Såˇt_ch¨
(
w
, 
Ba£64TabÀ
[
c3
]);

361 
	`Såˇt_ch¨
(
w
, 
Ba£64TabÀ
[
c4
]);

362 i‡(
n_∑d
)

364 
a
 += 3;

366  
w
;

367 
	}
}

	@mktable.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"my˘y≥.h
"

5 
	~"c⁄fig.h
"

6 
	~"hash.h
"

7 
	~"my˘y≥.h
"

8 
	~"Så.h
"

9 
	~<gc.h
>

12 
	$defhash
(
HashIãm_ss
 *, , 
hss_i
)

15 
	#keycomp
(
x
,
y
Ë((x)==(y))

	)

19 
	$hashfunc
(
HashIãm_ss
 * 
x
)

21  ()
x
;

22 
	}
}

25 
	$defhashfunc
(
HashIãm_ss
 *, , 
hss_i
)

29 
	$maö
(
¨gc
, *
¨gv
[], **
ívp
)

31 
FILE
 *
f
;

32 
Hash_ss
 *
hash
;

33 
HashIãm_ss
 **
hashôems
, *
hi
;

34 
size
, 
n
, 
i
, 
j
;

35 
Så
 
s
, 
«me
, 
fba£
;

36 *
p
;

37 
Hash_hss_i
 *
rhash
;

39 
	`GC_INIT
();

40 i‡(
¨gc
 != 3) {

41 
	`Ârötf
(
°dîr
, "ußge: %†hashsizêfûe.èb > fûe.c\n", 
¨gv
[0]);

42 
	`exô
(1);

44 
size
 = 
	`©oi
(
¨gv
[1]);

45 i‡(
size
 <= 0) {

46 
	`Ârötf
(
°dîr
, "hash size should beÖositive\n");

47 
	`exô
(1);

49 i‡((
f
 = 
	`f›í
(
¨gv
[2], "r")Ë=
NULL
) {

50 
	`Ârötf
(
°dîr
, "C™'à›í %s\n", 
¨gv
[2]);

51 
	`exô
(1);

53 
p
 = 
¨gv
[2];

54 i‡(
	`°ºchr
(
p
, '/'Ë!
NULL
)

55 
p
 = 
	`°ºchr
(p, '/') + 1;

56 
fba£
 = 
	`Så√w_ch¨p
(
p
);

57 i‡(
	`°rchr
(
fba£
->
±r
, '.'))

58 
	`Såœ°ch¨
(
fba£
) != '.')

59 
	`Såshrök
(
fba£
, 1);

60 
	`Såshrök
(
fba£
, 1);

62 
hash
 = 
	`√wHash_ss
(
size
);

63 
	`¥ötf
("#include \"hash.h\"\n");

65 
s
 = 
	`Såfgës
(
f
);

66 i‡(
s
->
Àngth
 == 0)

67 
	`exô
(0);

68 
	`Såªmovëøûög•a˚s
(
s
);

69 i‡(
	`Såcmp_ch¨p
(
s
, "%%") == 0)

71 
	`puts
(
s
->
±r
);

73 
n
 = 0;

75 
s
 = 
	`Såfgës
(
f
);

76 i‡(
s
->
Àngth
 == 0)

78 
	`Såªmovefú°•a˚s
(
s
);

79 
	`Såªmovëøûög•a˚s
(
s
);

80 
«me
 = 
	`Så√w
();

81 
p
 = 
s
->
±r
; *p;Ö++) {

82 i‡(
	`IS_SPACE
(*
p
))

84 
	`Såˇt_ch¨
(
«me
, *
p
);

86 *
p
 && 
	`IS_SPACE
(*p))

87 
p
++;

88 
	`putHash_ss
(
hash
, 
«me
->
±r
, 
p
);

89 
n
++;

91 
	`f˛o£
(
f
);

93 
hashôems
 = (
HashIãm_ss
 **Ë
	`GC_mÆloc
((HashIãm_s†*Ë* 
n
);

94 
rhash
 = 
	`√wHash_hss_i
(
n
 * 2);

95 
j
 = 0;

96 
i
 = 0; i < 
hash
->
size
; i++) {

97 
hi
 = 
hash
->
èb
[
i
]; hò!
NULL
; hòhi->
√xt
) {

98 
hashôems
[
j
] = 
hi
;

99 
	`putHash_hss_i
(
rhash
, 
hi
, 
j
);

100 
j
++;

103 
	`¥ötf
("static HashItem_si MyHashItem[] = {\n");

104 
i
 = 0; i < 
j
; i++) {

105 
	`¥ötf
(" /* %d */ {\"%s\",%s,", 
i
,

106 
hashôems
[
i
]->
key
, hashôems[i]->
vÆue
);

107 i‡(
hashôems
[
i
]->
√xt
 =
NULL
) {

108 
	`¥ötf
("NULL},\n");

111 
	`¥ötf
("&MyHashItem[%d]},\n",

112 
	`gëHash_hss_i
(
rhash
, 
hashôems
[
i
]->
√xt
, -1));

115 
	`¥ötf
("};\n\nstatic HashItem_si *MyHashItemTbl[] = {\n");

117 
i
 = 0; i < 
hash
->
size
; i++) {

118 i‡(
hash
->
èb
[
i
])

119 
	`¥ötf
(" &MyHashItem[%d],\n",

120 
	`gëHash_hss_i
(
rhash
, 
hash
->
èb
[
i
], -1));

122 
	`¥ötf
(" NULL,\n");

124 
	`¥ötf
("};\n\n");

125 
	`¥ötf
("Hash_sò%†{%d, MyHashIãmTbl};\n", 
fba£
->
±r
, 
hash
->
size
);

127 
	`exô
(0);

128 
	}
}

	@myctype.c

2 
	gMYCTYPE_MAP
[0x100] = {

30 
	gMYCTYPE_DIGITMAP
[0x100] = {

	@myctype.h

2 #i‚de‡
_MYCTYPE_H


3 
	#_MYCTYPE_H


	)

5 
	#MYCTYPE_CNTRL
 1

	)

6 
	#MYCTYPE_SPACE
 2

	)

7 
	#MYCTYPE_ALPHA
 4

	)

8 
	#MYCTYPE_DIGIT
 8

	)

9 
	#MYCTYPE_PRINT
 16

	)

10 
	#MYCTYPE_HEX
 32

	)

11 
	#MYCTYPE_INTSPACE
 64

	)

12 
	#MYCTYPE_ASCII
 (
MYCTYPE_CNTRL
|
MYCTYPE_PRINT
)

	)

13 
	#MYCTYPE_ALNUM
 (
MYCTYPE_ALPHA
|
MYCTYPE_DIGIT
)

	)

14 
	#MYCTYPE_XDIGIT
 (
MYCTYPE_HEX
|
MYCTYPE_DIGIT
)

	)

16 
	#GET_MYCTYPE
(
x
Ë(
MYCTYPE_MAP
[()()(x)])

	)

17 
	#GET_MYCDIGIT
(
x
Ë(
MYCTYPE_DIGITMAP
[()()(x)])

	)

19 
	#IS_CNTRL
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_CNTRL
)

	)

20 
	#IS_SPACE
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_SPACE
)

	)

21 
	#IS_ALPHA
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_ALPHA
)

	)

22 
	#IS_DIGIT
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_DIGIT
)

	)

23 
	#IS_PRINT
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_PRINT
)

	)

24 
	#IS_ASCII
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_ASCII
)

	)

25 
	#IS_ALNUM
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_ALNUM
)

	)

26 
	#IS_XDIGIT
(
x
Ë(
	`GET_MYCTYPE
(xË& 
MYCTYPE_XDIGIT
)

	)

27 
	#IS_INTSPACE
(
x
Ë(
MYCTYPE_MAP
[()(x)] & 
MYCTYPE_INTSPACE
)

	)

29 
MYCTYPE_MAP
[];

30 
MYCTYPE_DIGITMAP
[];

32 
	#TOLOWER
(
x
Ë(
	`IS_ALPHA
(xË? ((x)|0x20Ë: (x))

	)

33 
	#TOUPPER
(
x
Ë(
	`IS_ALPHA
(xË? ((x)&~0x20Ë: (x))

	)

	@news.c

2 
	~"fm.h
"

3 
	~"my˘y≥.h
"

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<time.h
>

7 
	~<sig«l.h
>

8 
	~<£tjmp.h
>

10 #ifde‡
USE_NNTP


12 
	#NEWS_ENDLINE
(
p
) \

13 ((*(
p
) == '.' && ((p)[1] == '\n' || (p)[1] == '\r' || (p)[1] == '\0')) || \

14 *(
p
Ë='\n' || *’Ë='\r' || *’Ë='\0')

	)

16 
	s_News
 {

17 *
	mho°
;

18 
	mp‹t
;

19 *
	mmode
;

20 
I≈utSåóm
 
	mrf
;

21 
FILE
 *
	mwf
;

22 } 
	tNews
;

24 
News
 
	gcuºít_√ws
 = { 
NULL
, 0, NULL, NULL, NULL };

26 
JMP_BUF
 
	gAb‹tLﬂdög
;

28 
MySig«lH™dÀr


29 
	$KeyAb‹t
(
SIGNAL_ARG
)

31 
	`LONGJMP
(
Ab‹tLﬂdög
, 1);

32 
SIGNAL_RETURN
;

33 
	}
}

35 
Så


36 
	$√ws_comm™d
(
News
 * 
√ws
, *
cmd
, *
¨g
, *
°©us
)

38 
Så
 
tmp
;

40 i‡(!
√ws
->
ho°
)

41  
NULL
;

42 i‡(
cmd
) {

43 i‡(
¨g
)

44 
tmp
 = 
	`S¥ötf
("%†%s\r\n", 
cmd
, 
¨g
);

46 
tmp
 = 
	`S¥ötf
("%s\r\n", 
cmd
);

47 
	`fwrôe
(
tmp
->
±r
, (),Åmp->
Àngth
, 
√ws
->
wf
);

48 
	`fÊush
(
√ws
->
wf
);

50 i‡(!
°©us
)

51  
NULL
;

52 *
°©us
 = -1;

53 
tmp
 = 
	`SåISgës
(
√ws
->
rf
);

54 i‡(
tmp
->
Àngth
)

55 
	`ssˇnf
(
tmp
->
±r
, "%d", 
°©us
);

56  
tmp
;

57 
	}
}

60 
	$√ws_˛o£
(
News
 * 
√ws
)

62 i‡(!
√ws
->
ho°
)

64 i‡(
√ws
->
rf
) {

65 
	`ISty≥
(
√ws
->
rf
Ë&~
IST_UNCLOSE
;

66 
	`IS˛o£
(
√ws
->
rf
);

67 
√ws
->
rf
 = 
NULL
;

69 i‡(
√ws
->
wf
) {

70 
	`f˛o£
(
√ws
->
wf
);

71 
√ws
->
wf
 = 
NULL
;

73 
√ws
->
ho°
 = 
NULL
;

74 
	}
}

77 
	$√ws_›í
(
News
 * 
√ws
)

79 
sock
, 
°©us
;

81 
sock
 = 
	`›íSockë
(
√ws
->
ho°
, "¬ç",Çews->
p‹t
);

82 i‡(
sock
 < 0)

83 
›í_îr
;

84 
√ws
->
rf
 = 
	`√wI≈utSåóm
(
sock
);

85 
√ws
->
wf
 = 
	`fd›í
(
	`dup
(
sock
), "wb");

86 i‡(!
√ws
->
rf
 || !√ws->
wf
)

87 
›í_îr
;

88 
	`ISty≥
(
√ws
->
rf
Ë|
IST_UNCLOSE
;

89 
	`√ws_comm™d
(
√ws
, 
NULL
, NULL, &
°©us
);

90 i‡(
°©us
 != 200 && status != 201)

91 
›í_îr
;

92 i‡(
√ws
->
mode
) {

93 
	`√ws_comm™d
(
√ws
, "MODE",Çews->
mode
, &
°©us
);

94 i‡(
°©us
 != 200 && status != 201)

95 
›í_îr
;

97  
TRUE
;

98 
›í_îr
:

99 
	`√ws_˛o£
(
√ws
);

100  
FALSE
;

101 
	}
}

104 
	$√ws_quô
(
News
 * 
√ws
)

106 
	`√ws_comm™d
(
√ws
, "QUIT", 
NULL
, NULL);

107 
	`√ws_˛o£
(
√ws
);

108 
	}
}

111 
	$«me_‰om_addªss
(*
°r
, 
n
)

113 *
s
, *
p
;

114 
l
, 
•a˚
 = 
TRUE
;

116 
s
 = 
	`ÆlocSå
(
°r
, -1);

117 
	`SKIP_BLANKS
(
s
);

118 i‡(*
s
 ='<' && (
p
 = 
	`°rchr
(s, '>'))) {

119 *
p
++ = '\0';

120 
	`SKIP_BLANKS
(
p
);

121 i‡(*
p
 == '\0')

122 
s
++;

124 
s
 = 
p
;

126 i‡((
p
 = 
	`°rchr
(
s
, '<')))

127 *
p
 = '\0';

128 i‡((
p
 = 
	`°rchr
(
s
, '(')))

129 
s
 = 
p
;

130 i‡(*
s
 ='"' && (
p
 = 
	`°rchr
(s + 1, '"'))) {

131 *
p
 = '\0';

132 
s
++;

134 i‡(*
s
 ='(' && (
p
 = 
	`°rchr
(s + 1, ')'))) {

135 *
p
 = '\0';

136 
s
++;

138 
p
 = 
s
, 
l
 = 0; *p;Ö +
	`gë_m˛í
(p)) {

139 i‡(
	`IS_SPACE
(*
p
)) {

140 i‡(
•a˚
)

142 
•a˚
 = 
TRUE
;

145 
•a˚
 = 
FALSE
;

146 
l
 +
	`gë_mcwidth
(
p
);

147 i‡(
l
 > 
n
)

150 *
p
 = '\0';

151  
s
;

152 
	}
}

155 
	$html_quŸe_s
(*
°r
)

157 
Så
 
tmp
 = 
NULL
;

158 *
p
, *
q
;

159 
•a˚
 = 
TRUE
;

161 
p
 = 
°r
; *p;Ö++) {

162 i‡(
	`IS_SPACE
(*
p
)) {

163 i‡(
•a˚
)

165 
q
 = "&nbsp;";

166 
•a˚
 = 
TRUE
;

169 
q
 = 
	`html_quŸe_ch¨
(*
p
);

170 
•a˚
 = 
FALSE
;

172 i‡(
q
) {

173 i‡(
tmp
 =
NULL
)

174 
tmp
 = 
	`Så√w_ch¨p_n
(
°r
, ()(
p
 - str));

175 
	`Såˇt_ch¨p
(
tmp
, 
q
);

178 i‡(
tmp
)

179 
	`Såˇt_ch¨
(
tmp
, *
p
);

182 i‡(
tmp
)

183  
tmp
->
±r
;

184  
°r
;

185 
	}
}

188 
	$add_√ws_mesßge
(
Så
 
°r
, 
ödex
, *
d©e
, *
«me
, *
subje˘
,

189 *
mid
, *
scheme
, *
group
)

191 
time_t
 
t
;

192 
tm
 *tm;

194 
«me
 = 
	`«me_‰om_addªss
(name, 16);

195 
t
 = 
	`mymktime
(
d©e
);

196 
tm
 = 
	`loˇ…ime
(&
t
);

197 
	`Såˇt
(
°r
,

198 
	`S¥ötf
("<tr valign=top><td>%d<tdÇowrap>(%02d/%02d)<tdÇowrap>%s",

199 
ödex
, 
tm
->
tm_m⁄
 + 1,Åm->
tm_mday
, 
	`html_quŸe_s
(
«me
)));

200 i‡(
group
)

201 
	`Såˇt
(
°r
, 
	`S¥ötf
("<td><®hªf=\"%s%s/%d\">%s</a>\n", 
scheme
, 
group
,

202 
ödex
, 
	`html_quŸe
(
subje˘
)));

204 
	`Såˇt
(
°r
, 
	`S¥ötf
("<td><®hªf=\"%s%s\">%s</a>\n", 
scheme
,

205 
	`html_quŸe
(
	`fûe_quŸe
(
mid
)), html_quŸe(
subje˘
)));

206 
	}
}

232 
I≈utSåóm


233 
	$›íNewsSåóm
(
P¨£dURL
 *
pu
)

235 *
ho°
, *
mode
, *
group
, *
p
;

236 
Så
 
tmp
;

237 
p‹t
, 
°©us
;

239 i‡(
pu
->
fûe
 =
NULL
 || *pu->file == '\0')

240  
NULL
;

241 i‡(
pu
->
scheme
 =
SCM_NNTP
 ||Öu->schemê=
SCM_NNTP_GROUP
)

242 
ho°
 = 
pu
->host;

244 
ho°
 = 
NNTP_£rvî
;

245 i‡(!
ho°
 || *host == '\0') {

246 i‡(
cuºít_√ws
.
ho°
)

247 
	`√ws_quô
(&
cuºít_√ws
);

248  
NULL
;

250 i‡(
pu
->
scheme
 !
SCM_NNTP
 &&Öu->schemê!
SCM_NNTP_GROUP
 &&

251 (
p
 = 
	`°rchr
(
ho°
, ':'))) {

252 
ho°
 = 
	`ÆlocSå
(ho°, 
p
 - host);

253 
p‹t
 = 
	`©oi
(
p
 + 1);

256 
p‹t
 = 
pu
->port;

257 i‡(
NNTP_mode
 && *NNTP_mode)

258 
mode
 = 
NNTP_mode
;

260 
mode
 = 
NULL
;

261 i‡(
cuºít_√ws
.
ho°
) {

262 i‡(!
	`°rcmp
(
cuºít_√ws
.
ho°
, ho°Ë&& cuºít_√ws.
p‹t
 ==Öort) {

263 
tmp
 = 
	`√ws_comm™d
(&
cuºít_√ws
, "MODE", 
mode
 ? mode : "READER",

264 &
°©us
);

265 i‡(
°©us
 != 200 && status != 201)

266 
	`√ws_˛o£
(&
cuºít_√ws
);

269 
	`√ws_quô
(&
cuºít_√ws
);

271 i‡(!
cuºít_√ws
.
ho°
) {

272 
cuºít_√ws
.
ho°
 = 
	`ÆlocSå
(host, -1);

273 
cuºít_√ws
.
p‹t
 =Öort;

274 
cuºít_√ws
.
mode
 = modê? 
	`ÆlocSå
(mode, -1Ë: 
NULL
;

275 i‡(!
	`√ws_›í
(&
cuºít_√ws
))

276  
NULL
;

278 i‡(
pu
->
scheme
 =
SCM_NNTP
 ||Öu->schemê=
SCM_NEWS
) {

280 
group
 = 
	`fûe_unquŸe
(
	`ÆlocSå
(
pu
->
fûe
, -1));

281 
p
 = 
	`°rchr
(
group
, '/');

282 i‡(
p
 =
NULL
) {

283 i‡(!
	`°rchr
(
group
, '@'))

284  
NULL
;

285 
p
 = 
group
;

288 *
p
++ = '\0';

289 
	`√ws_comm™d
(&
cuºít_√ws
, "GROUP", 
group
, &
°©us
);

290 i‡(
°©us
 != 211)

291  
NULL
;

293 i‡(
	`°rchr
(
p
, '@'))

294 
	`√ws_comm™d
(&
cuºít_√ws
, "ARTICLE", 
	`S¥ötf
("<%s>", 
p
)->
±r
,

295 &
°©us
);

297 
	`√ws_comm™d
(&
cuºít_√ws
, "ARTICLE", 
p
, &
°©us
);

298 i‡(
°©us
 != 220)

299  
NULL
;

300  
cuºít_√ws
.
rf
;

302  
NULL
;

303 
	}
}

306 #ifde‡
USE_M17N


307 
Så


308 
	$lﬂdNewsgroup
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
)

310 
Så


311 
	$lﬂdNewsgroup0
(
P¨£dURL
 *
pu
)

314 vﬁ©ûê
Så
 
∑ge
;

315 
Så
 
tmp
;

316 
URLFûe
 
f
;

317 
Buf„r
 *
buf
;

318 *
qgroup
, *
p
, *
q
, *
s
, *
t
, *
n
;

319 *vﬁ©ûê
scheme
, *vﬁ©ûê
group
, *vﬁ©ûê
li°
;

320 
°©us
, 
i
, 
fú°
, 
œ°
;

321 vﬁ©ûê
Êag
 = 0, 
°¨t
 = 0, 
íd
 = 0;

322 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

323 #ifde‡
USE_M17N


324 
wc_˚s
 
doc_ch¨£t
 = 
DocumítCh¨£t
, 
mime_ch¨£t
;

326 *
ch¨£t
 = 
WC_CES_US_ASCII
;

328 i‡(
cuºít_√ws
.
ho°
 =
NULL
 || !
pu
->
fûe
 || *pu->file == '\0')

329  
NULL
;

330 
group
 = 
	`ÆlocSå
(
pu
->
fûe
, -1);

331 i‡(
pu
->
scheme
 =
SCM_NNTP_GROUP
)

332 
scheme
 = "/";

334 
scheme
 = "news:";

335 i‡((
li°
 = 
	`°rchr
(
group
, '/'))) {

337 *
li°
++ = '\0';

339 i‡(
fmInôülized
) {

340 
	`mesßge
(
	`S¥ötf
("RódögÇewsgrou∞%s...", 
group
)->
±r
, 0, 0);

341 
	`ª‰esh
();

343 
qgroup
 = 
	`html_quŸe
(
group
);

344 
group
 = 
	`fûe_unquŸe
(group);

345 
∑ge
 = 
	`Så√w_m_ch¨p
("<html>\n<head>\n<base href=\"",

346 
	`∑r£dURL2Så
(
pu
)->
±r
, "\">\n<title>Newsgroup: ",

347 
qgroup
, "</title>\n</head>\n<body>\n<h1>Newsgroup: ",

348 
qgroup
, "</h1>\n<hr>\n", 
NULL
);

350 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

351 
	`√ws_˛o£
(&
cuºít_√ws
);

352 
	`Såˇt_ch¨p
(
∑ge
, "</table>\n<p>Transfer Interrupted!\n");

353 
√ws_íd
;

355 
TRAP_ON
;

357 
tmp
 = 
	`√ws_comm™d
(&
cuºít_√ws
, "GROUP", 
group
, &
°©us
);

358 i‡(
°©us
 != 211)

359 
√ws_li°
;

360 i‡(
	`ssˇnf
(
tmp
->
±r
, "%d %d %d %d", &
°©us
, &
i
, &
fú°
, &
œ°
) != 4)

361 
√ws_li°
;

362 i‡(
li°
 && *list) {

363 i‡((
p
 = 
	`°rchr
(
li°
, '-'))) {

364 *
p
++ = '\0';

365 
íd
 = 
	`©oi
(
p
);

367 
°¨t
 = 
	`©oi
(
li°
);

368 i‡(
°¨t
 > 0) {

369 i‡(
°¨t
 < 
fú°
)

370 
°¨t
 = 
fú°
;

371 i‡(
íd
 <= 0)

372 
íd
 = 
°¨t
 + 
MaxNewsMesßge
 - 1;

375 i‡(
°¨t
 <= 0) {

376 
°¨t
 = 
fú°
;

377 
íd
 = 
œ°
;

378 i‡(
íd
 - 
°¨t
 > 
MaxNewsMesßge
 - 1)

379 
°¨t
 = 
íd
 - 
MaxNewsMesßge
 + 1;

381 
∑ge
 = 
	`S¥ötf
("<html>\n<hód>\n<ba£ hªf=\"%s\">\n\
<tôÀ>Newsgroup: %†%d-%d</tôÀ>\n\
</hód>\n<body>\n<h1>Newsgroup: %†%d-%d</h1>\n<hr>\n", 
	`∑r£dURL2Så
(
pu
)->
±r
, 
qgroup
, 
°¨t
, 
íd
, qgroup, start,Énd);

384 i‡(
°¨t
 > 
fú°
) {

385 
i
 = 
°¨t
 - 
MaxNewsMesßge
;

386 i‡(
i
 < 
fú°
)

387 
i
 = 
fú°
;

388 
	`Såˇt
(
∑ge
, 
	`S¥ötf
("<®hªf=\"%s%s/%d-%d\">[%d-%d]</a>\n", 
scheme
,

389 
qgroup
, 
i
, 
°¨t
 - 1, i, start - 1));

392 
	`Såˇt_ch¨p
(
∑ge
, "<table>\n");

393 
	`√ws_comm™d
(&
cuºít_√ws
, "XOVER", 
	`S¥ötf
("%d-%d", 
°¨t
, 
íd
)->
±r
,

394 &
°©us
);

395 i‡(
°©us
 == 224) {

396 
f
.
scheme
 = 
SCM_NEWS
;

398 
tmp
 = 
	`SåISgës
(
cuºít_√ws
.
rf
);

399 i‡(
	`NEWS_ENDLINE
(
tmp
->
±r
))

401 i‡(
	`ssˇnf
(
tmp
->
±r
, "%d", &
i
) != 1)

403 i‡(!(
s
 = 
	`°rchr
(
tmp
->
±r
, '\t')))

405 
s
++;

406 i‡(!(
n
 = 
	`°rchr
(
s
, '\t')))

408 *
n
++ = '\0';

409 i‡(!(
t
 = 
	`°rchr
(
n
, '\t')))

411 *
t
++ = '\0';

412 i‡(!(
p
 = 
	`°rchr
(
t
, '\t')))

414 *
p
++ = '\0';

415 i‡(*
p
 == '<')

416 
p
++;

417 i‡(!(
q
 = 
	`°rchr
(
p
, '>')) && !(q = strchr(p, '\t')))

419 *
q
 = '\0';

420 
tmp
 = 
	`decodeMIME
(
	`Så√w_ch¨p
(
s
), &
mime_ch¨£t
);

421 
s
 = 
	`c⁄vîtLöe
(&
f
, 
tmp
, 
HEADER_MODE
,

422 
mime_ch¨£t
 ? &mime_ch¨£à: 
ch¨£t
,

423 
mime_ch¨£t
 ? mime_ch¨£à: 
doc_ch¨£t
)->
±r
;

424 
tmp
 = 
	`decodeMIME
(
	`Så√w_ch¨p
(
n
), &
mime_ch¨£t
);

425 
n
 = 
	`c⁄vîtLöe
(&
f
, 
tmp
, 
HEADER_MODE
,

426 
mime_ch¨£t
 ? &mime_ch¨£à: 
ch¨£t
,

427 
mime_ch¨£t
 ? mime_ch¨£à: 
doc_ch¨£t
)->
±r
;

428 
	`add_√ws_mesßge
(
∑ge
, 
i
, 
t
, 
n
, 
s
, 
p
, 
scheme
,

429 
pu
->
scheme
 =
SCM_NNTP_GROUP
 ? 
qgroup
 : 
NULL
);

433 
	`öô_°ªam
(&
f
, 
SCM_NEWS
, 
cuºít_√ws
.
rf
);

434 
buf
 = 
	`√wBuf„r
(
INIT_BUFFER_WIDTH
);

435 
i
 = 
°¨t
; i <
íd
 && i <
œ°
; i++) {

436 
	`√ws_comm™d
(&
cuºít_√ws
, "HEAD", 
	`S¥ötf
("%d", 
i
)->
±r
,

437 &
°©us
);

438 i‡(
°©us
 != 221)

440 
	`ªadHódî
(&
f
, 
buf
, 
FALSE
, 
NULL
);

441 i‡(!(
p
 = 
	`checkHódî
(
buf
, "Message-ID:")))

443 i‡(*
p
 == '<')

444 
p
++;

445 i‡(!(
q
 = 
	`°rchr
(
p
, '>')) && !(q = strchr(p, '\t')))

446 *
q
 = '\0';

447 i‡(!(
s
 = 
	`checkHódî
(
buf
, "Subject:")))

449 i‡(!(
n
 = 
	`checkHódî
(
buf
, "From:")))

451 i‡(!(
t
 = 
	`checkHódî
(
buf
, "Date:")))

453 
	`add_√ws_mesßge
(
∑ge
, 
i
, 
t
, 
n
, 
s
, 
p
, 
scheme
,

454 
pu
->
scheme
 =
SCM_NNTP_GROUP
 ? 
qgroup
 : 
NULL
);

457 
	`Såˇt_ch¨p
(
∑ge
, "</table>\n");

459 i‡(
íd
 < 
œ°
) {

460 
i
 = 
íd
 + 
MaxNewsMesßge
;

461 i‡(
i
 > 
œ°
)

462 
i
 = 
œ°
;

463 
	`Såˇt
(
∑ge
, 
	`S¥ötf
("<®hªf=\"%s%s/%d-%d\">[%d-%d]</a>\n", 
scheme
,

464 
qgroup
, 
íd
 + 1, 
i
,Énd + 1, i));

466 
Êag
 = 1;

468 
√ws_li°
:

469 
tmp
 = 
	`S¥ötf
("ACTIVE %s", 
group
);

470 i‡(!
	`°rchr
(
group
, '*'))

471 
	`Såˇt_ch¨p
(
tmp
, ".*");

472 
	`√ws_comm™d
(&
cuºít_√ws
, "LIST", 
tmp
->
±r
, &
°©us
);

473 i‡(
°©us
 != 215)

474 
√ws_íd
;

476 
tmp
 = 
	`SåISgës
(
cuºít_√ws
.
rf
);

477 i‡(
	`NEWS_ENDLINE
(
tmp
->
±r
))

479 i‡(
Êag
 < 2) {

480 i‡(
Êag
 == 1)

481 
	`Såˇt_ch¨p
(
∑ge
, "<hr>\n");

482 
	`Såˇt_ch¨p
(
∑ge
, "<table>\n");

483 
Êag
 = 2;

485 
p
 = 
tmp
->
±r
;

486 
q
 = 
p
; *q && !
	`IS_SPACE
(*q); q++) ;

487 *(
q
++) = '\0';

488 i‡(
	`ssˇnf
(
q
, "%d %d", &
œ°
, &
fú°
) == 2 &&Üast >= first)

489 
i
 = 
œ°
 - 
fú°
 + 1;

491 
i
 = 0;

492 
	`Såˇt
(
∑ge
,

493 
S¥ötf


494 ("<å><tdálignÙight>%d<td><®hªf=\"%s%s\">%s</a>\n", 
i
,

495 
scheme
, 
	`html_quŸe
(
	`fûe_quŸe
(
p
)), html_quote(p)));

497 i‡(
Êag
 == 2)

498 
	`Såˇt_ch¨p
(
∑ge
, "</table>\n");

500 
√ws_íd
:

501 
	`Såˇt_ch¨p
(
∑ge
, "</body>\n</html>\n");

502 
TRAP_OFF
;

503  
∑ge
;

504 
	}
}

507 
	$˛o£News
()

509 
	`√ws_˛o£
(&
cuºít_√ws
);

510 
	}
}

513 
	$disc⁄√˘News
()

515 
	`√ws_quô
(&
cuºít_√ws
);

516 
	}
}

	@parsetag.c

2 
	~"my˘y≥.h
"

3 
	~"ödï.h
"

4 
	~"Så.h
"

5 
	~"∑r£èg.h
"

8 
	$èg_gë_vÆue
(
∑r£d_èg¨g
 *
t
, *
¨g
)

10 ; 
t
;Å =Å->
√xt
) {

11 i‡(!
	`°rˇ£cmp
(
t
->
¨g
,árg))

12  
t
->
vÆue
;

14  
NULL
;

15 
	}
}

18 
	$èg_exi°s
(
∑r£d_èg¨g
 *
t
, *
¨g
)

20 ; 
t
;Å =Å->
√xt
) {

21 i‡(!
	`°rˇ£cmp
(
t
->
¨g
,árg))

25 
	}
}

27 
∑r£d_èg¨g
 *

28 
	$cgi°r2èg¨g
(*
cgi°r
)

30 
Så
 
èg
;

31 
Så
 
vÆue
;

32 
∑r£d_èg¨g
 *
t0
, *
t
;

34 
t
 = 
t0
 = 
NULL
;

36 
t
 = 
	`New
(
∑r£d_èg¨g
);

37 
t
->
√xt
 = 
t0
;

38 
t0
 = 
t
;

39 
èg
 = 
	`Så√w
();

40 *
cgi°r
 && *cgistr != '=' && *cgistr != '&')

41 
	`Såˇt_ch¨
(
èg
, *
cgi°r
++);

42 
t
->
¨g
 = 
	`Så_f‹m_unquŸe
(
èg
)->
±r
;

43 
t
->
vÆue
 = 
NULL
;

44 i‡(*
cgi°r
 == '\0')

45  
t
;

46 i‡(*
cgi°r
 == '=') {

47 
cgi°r
++;

48 
vÆue
 = 
	`Så√w
();

49 *
cgi°r
 && *cgistr != '&')

50 
	`Såˇt_ch¨
(
vÆue
, *
cgi°r
++);

51 
t
->
vÆue
 = 
	`Så_f‹m_unquŸe
(vÆue)->
±r
;

53 i‡(*
cgi°r
 == '&')

54 
cgi°r
++;

55 } *
cgi°r
);

56  
t
;

57 
	}
}

	@parsetag.h

2 #i‚de‡
PARSETAG_H


3 
	#PARSETAG_H


	)

4 
	s∑r£d_èg¨g
 {

5 *
	m¨g
;

6 *
	mvÆue
;

7 
∑r£d_èg¨g
 *
	m√xt
;

10 *
èg_gë_vÆue
(
∑r£d_èg¨g
 *
t
, *
¨g
);

11 
èg_exi°s
(
∑r£d_èg¨g
 *
t
, *
¨g
);

12 
∑r£d_èg¨g
 *
cgi°r2èg¨g
(*
cgi°r
);

	@parsetagx.c

2 
	~"fm.h
"

3 
	~"my˘y≥.h
"

4 
	~"ödï.h
"

5 
	~"Så.h
"

6 
	~"∑r£ègx.h
"

7 
	~"hash.h
"

9 
	~"html.c
"

13 
noC⁄v
(*, **);

14 
toNumbî
(*, *);

15 
toLígth
(*, *);

16 
toAlign
(*, *);

17 
toVAlign
(*, *);

20 (*
	gtoVÆFunc
[]) () = {

21 
noC⁄v
,

22 
noC⁄v
,

23 
toNumbî
,

24 
toLígth
,

25 
toAlign
,

26 
toVAlign
,

27 
noC⁄v
,

28 
noC⁄v
,

29 
noC⁄v
,

30 
noC⁄v
,

31 
noC⁄v
,

36 
	$noC⁄v
(*
ovÆ
, **
°r
)

38 *
°r
 = 
ovÆ
;

40 
	}
}

43 
	$toNumbî
(*
ovÆ
, *
num
)

45 *
ï
;

46 
x
;

48 
x
 = 
	`°πﬁ
(
ovÆ
, &
ï
, 10);

50 i‡(
ï
 > 
ovÆ
) {

51 *
num
 = 
x
;

56 
	}
}

59 
	$toLígth
(*
ovÆ
, *
Àn
)

61 
w
;

62 i‡(!
	`IS_DIGIT
(
ovÆ
[0]))

64 
w
 = 
	`©oi
(
ovÆ
);

65 i‡(
w
 < 0)

67 i‡(
w
 == 0)

68 
w
 = 1;

69 i‡(
ovÆ
[
	`°æí
(oval) - 1] == '%')

70 *
Àn
 = -
w
;

72 *
Àn
 = 
w
;

74 
	}
}

77 
	$toAlign
(*
ovÆ
, *
Æign
)

79 i‡(
	`°rˇ£cmp
(
ovÆ
, "left") == 0)

80 *
Æign
 = 
ALIGN_LEFT
;

81 i‡(
	`°rˇ£cmp
(
ovÆ
, "right") == 0)

82 *
Æign
 = 
ALIGN_RIGHT
;

83 i‡(
	`°rˇ£cmp
(
ovÆ
, "center") == 0)

84 *
Æign
 = 
ALIGN_CENTER
;

85 i‡(
	`°rˇ£cmp
(
ovÆ
, "top") == 0)

86 *
Æign
 = 
ALIGN_TOP
;

87 i‡(
	`°rˇ£cmp
(
ovÆ
, "bottom") == 0)

88 *
Æign
 = 
ALIGN_BOTTOM
;

89 i‡(
	`°rˇ£cmp
(
ovÆ
, "middle") == 0)

90 *
Æign
 = 
ALIGN_MIDDLE
;

94 
	}
}

97 
	$toVAlign
(*
ovÆ
, *
vÆign
)

99 i‡(
	`°rˇ£cmp
(
ovÆ
, "top") == 0 || strcasecmp(oval, "baseline") == 0)

100 *
vÆign
 = 
VALIGN_TOP
;

101 i‡(
	`°rˇ£cmp
(
ovÆ
, "bottom") == 0)

102 *
vÆign
 = 
VALIGN_BOTTOM
;

103 i‡(
	`°rˇ£cmp
(
ovÆ
, "middle") == 0)

104 *
vÆign
 = 
VALIGN_MIDDLE
;

108 
	}
}

110 
Hash_si
 
ègèbÀ
;

111 
	#MAX_TAG_LEN
 64

	)

113 
∑r£d_èg
 *

114 
	$∑r£_èg
(**
s
, 
öã∫Æ
)

116 
∑r£d_èg
 *
èg
 = 
NULL
;

117 
èg_id
;

118 
èg«me
[
MAX_TAG_LEN
], 
©å«me
[MAX_TAG_LEN];

119 *
p
, *
q
;

120 
i
, 
©å_id
 = 0, 
«âr
;

123 
q
 = (*
s
) + 1;

124 
p
 = 
èg«me
;

125 i‡(*
q
 == '/') {

126 *(
p
++Ë*(
q
++);

127 
	`SKIP_BLANKS
(
q
);

129 *
q
 && !
	`IS_SPACE
(*qË&& !(
èg«me
[0] != '/' && *q == '/') &&

130 *
q
 !'>' && 
p
 - 
èg«me
 < 
MAX_TAG_LEN
 - 1) {

131 *(
p
++Ë
	`TOLOWER
(*
q
);

132 
q
++;

134 *
p
 = '\0';

135 *
q
 && !
	`IS_SPACE
(*qË&& !(
èg«me
[0] != '/' && *q == '/') &&

136 *
q
 != '>')

137 
q
++;

139 
èg_id
 = 
	`gëHash_si
(&
ègèbÀ
, 
èg«me
, 
HTML_UNKNOWN
);

141 i‡(
èg_id
 =
HTML_UNKNOWN
 ||

142 (!
öã∫Æ
 && 
TagMAP
[
èg_id
].
Êag
 & 
TFLG_INT
))

143 
skù_∑r£_èg¨g
;

145 
èg
 = 
	`New
(
∑r£d_èg
);

146 
	`bzîo
(
èg
, (
∑r£d_èg
));

147 
èg
->
ègid
 = 
èg_id
;

149 i‡((
«âr
 = 
TagMAP
[
èg_id
].
max_©åibuã
) > 0) {

150 
èg
->
©åid
 = 
	`NewAtom_N
(, 
«âr
);

151 
èg
->
vÆue
 = 
	`New_N
(*, 
«âr
);

152 
èg
->
m≠
 = 
	`NewAtom_N
(, 
MAX_TAGATTR
);

153 
	`mem£t
(
èg
->
m≠
, 
MAX_TAGATTR
, MAX_TAGATTR);

154 
	`mem£t
(
èg
->
©åid
, 
ATTR_UNKNOWN
, 
«âr
);

155 
i
 = 0; i < 
«âr
; i++)

156 
èg
->
m≠
[
TagMAP
[
èg_id
].
ac˚±_©åibuã
[
i
]] = i;

160 
	`SKIP_BLANKS
(
q
);

162 
Så
 
vÆue
 = 
NULL
, 
vÆue_tmp
 = NULL;

163 i‡(*
q
 == '>' || *q == '\0')

164 
d⁄e_∑r£_èg
;

165 
p
 = 
©å«me
;

166 *
q
 && *q !'=' && !
	`IS_SPACE
(*q) &&

167 *
q
 !'>' && 
p
 - 
©å«me
 < 
MAX_TAG_LEN
 - 1) {

168 *(
p
++Ë
	`TOLOWER
(*
q
);

169 
q
++;

171 *
p
 = '\0';

172 *
q
 && *q !'=' && !
	`IS_SPACE
(*q) && *q != '>')

173 
q
++;

174 
	`SKIP_BLANKS
(
q
);

175 i‡(*
q
 == '=') {

177 
vÆue_tmp
 = 
	`Så√w
();

178 
q
++;

179 
	`SKIP_BLANKS
(
q
);

180 i‡(*
q
 == '"') {

181 
q
++;

182 *
q
 && *q != '"') {

183 
	`Såˇt_ch¨
(
vÆue_tmp
, *
q
);

184 i‡(!
èg
->
√ed_ªc⁄°ru˘
 && 
	`is_html_quŸe
(*
q
))

185 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

186 
q
++;

188 i‡(*
q
 == '"')

189 
q
++;

191 i‡(*
q
 == '\'') {

192 
q
++;

193 *
q
 && *q != '\'') {

194 
	`Såˇt_ch¨
(
vÆue_tmp
, *
q
);

195 i‡(!
èg
->
√ed_ªc⁄°ru˘
 && 
	`is_html_quŸe
(*
q
))

196 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

197 
q
++;

199 i‡(*
q
 == '\'')

200 
q
++;

202 i‡(*
q
) {

203 *
q
 && !
	`IS_SPACE
(*q) && *q != '>') {

204 
	`Såˇt_ch¨
(
vÆue_tmp
, *
q
);

205 i‡(!
èg
->
√ed_ªc⁄°ru˘
 && 
	`is_html_quŸe
(*
q
))

206 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

207 
q
++;

211 
i
 = 0; i < 
«âr
; i++) {

212 i‡((
èg
)->
©åid
[
i
] =
ATTR_UNKNOWN
 &&

213 
	`°rcmp
(
AârMAP
[
TagMAP
[
èg_id
].
ac˚±_©åibuã
[
i
]].
«me
,

214 
©å«me
) == 0) {

215 
©å_id
 = 
TagMAP
[
èg_id
].
ac˚±_©åibuã
[
i
];

220 i‡(
vÆue_tmp
) {

221 
j
, 
hiddí
=
FALSE
;

222 
j
=0; j<
i
; j++) {

223 i‡(
èg
->
©åid
[
j
] =
ATTR_TYPE
 &&

224 
	`°rcmp
("hiddí",
èg
->
vÆue
[
j
]) == 0) {

225 
hiddí
=
TRUE
;

229 i‡((
èg_id
 =
HTML_INPUT
 ||Åag_id =
HTML_INPUT_ALT
) &&

230 
©å_id
 =
ATTR_VALUE
 && 
hiddí
) {

231 
vÆue
 = 
vÆue_tmp
;

233 *
x
;

234 
vÆue
 = 
	`Så√w
();

235 
x
 = 
vÆue_tmp
->
±r
; *x; x++) {

236 i‡(*
x
 != '\n')

237 
	`Såˇt_ch¨
(
vÆue
, *
x
);

242 i‡(
i
 !
«âr
) {

243 i‡(!
öã∫Æ
 &&

244 ((
AârMAP
[
©å_id
].
Êag
 & 
AFLG_INT
) ||

245 (
vÆue
 && 
AârMAP
[
©å_id
].
vty≥
 =
VTYPE_METHOD
 &&

246 !
	`°rˇ£cmp
(
vÆue
->
±r
, "internal")))) {

247 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

250 
èg
->
©åid
[
i
] = 
©å_id
;

251 i‡(
vÆue
)

252 
èg
->
vÆue
[
i
] = 
	`html_unquŸe
(vÆue->
±r
);

254 
èg
->
vÆue
[
i
] = 
NULL
;

257 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

261 
skù_∑r£_èg¨g
:

262 *
q
 != '>' && *q)

263 
q
++;

264 
d⁄e_∑r£_èg
:

265 i‡(*
q
 == '>')

266 
q
++;

267 *
s
 = 
q
;

268  
èg
;

269 
	}
}

272 
	$∑r£dèg_£t_vÆue
(
∑r£d_èg
 *
èg
, 
id
, *
vÆue
)

274 
i
;

276 i‡(!
	`∑r£dèg_ac˚±s
(
èg
, 
id
))

279 
i
 = 
èg
->
m≠
[
id
];

280 
èg
->
©åid
[
i
] = 
id
;

281 i‡(
vÆue
)

282 
èg
->
vÆue
[
i
] = 
	`ÆlocSå
(value, -1);

284 
èg
->
vÆue
[
i
] = 
NULL
;

285 
èg
->
√ed_ªc⁄°ru˘
 = 
TRUE
;

287 
	}
}

290 
	$∑r£dèg_gë_vÆue
(
∑r£d_èg
 *
èg
, 
id
, *
vÆue
)

292 
i
;

293 i‡(!
	`∑r£dèg_exi°s
(
èg
, 
id
Ë|| !èg->
vÆue
[
i
 =Åag->
m≠
[id]])

295  
toVÆFunc
[
AârMAP
[
id
].
vty≥
] (
èg
->
vÆue
[
i
], value);

296 
	}
}

298 
Så


299 
	$∑r£dèg2°r
(
∑r£d_èg
 *
èg
)

301 
i
;

302 
èg_id
 = 
èg
->
ègid
;

303 
«âr
 = 
TagMAP
[
èg_id
].
max_©åibuã
;

304 
Så
 
èg°r
 = 
	`Så√w
();

305 
	`Såˇt_ch¨
(
èg°r
, '<');

306 
	`Såˇt_ch¨p
(
èg°r
, 
TagMAP
[
èg_id
].
«me
);

307 
i
 = 0; i < 
«âr
; i++) {

308 i‡(
èg
->
©åid
[
i
] !
ATTR_UNKNOWN
) {

309 
	`Såˇt_ch¨
(
èg°r
, ' ');

310 
	`Såˇt_ch¨p
(
èg°r
, 
AârMAP
[
èg
->
©åid
[
i
]].
«me
);

311 i‡(
èg
->
vÆue
[
i
])

312 
	`Såˇt
(
èg°r
, 
	`S¥ötf
("=\"%s\"", 
	`html_quŸe
(
èg
->
vÆue
[
i
])));

315 
	`Såˇt_ch¨
(
èg°r
, '>');

316  
èg°r
;

317 
	}
}

	@parsetagx.h

2 #i‚de‡
PARSETAGX_H


3 
	#PARSETAGX_H


	)

5 
	~"html.h
"

6 
	~"Så.h
"

10 
	s∑r£d_èg
 {

11 
	mègid
;

12 *
	m©åid
;

13 **
	mvÆue
;

14 *
	mm≠
;

15 
	m√ed_ªc⁄°ru˘
;

18 
	#∑r£dèg_ac˚±s
(
èg
, 
id
Ë(—ag)->
m≠
&&—ag)->m≠[id]!=
MAX_TAGATTR
)

	)

19 
	#∑r£dèg_exi°s
(
èg
, 
id
Ë(
	`∑r£dèg_ac˚±s
—ag,id)&&(—ag)->
©åid
[—ag)->
m≠
[id]]!=
ATTR_UNKNOWN
))

	)

20 
	#∑r£dèg_dñëe
(
èg
, 
id
Ë(
	`∑r£dèg_ac˚±s
—ag,id)&&(—ag)->
©åid
[—ag)->
m≠
[id]]=
ATTR_UNKNOWN
))

	)

21 
	#∑r£dèg_√ed_ªc⁄°ru˘
(
èg
Ë(—ag)->
√ed_ªc⁄°ru˘
)

	)

22 
	#∑r£dèg_©äame
(
èg
, 
i
Ë(
AârMAP
[—ag)->
©åid
[i]].
«me
)

	)

24 
∑r£d_èg
 *
∑r£_èg
(**
s
, 
öã∫Æ
);

25 
∑r£dèg_gë_vÆue
(
∑r£d_èg
 *
èg
, 
id
, *
vÆue
);

26 
∑r£dèg_£t_vÆue
(
∑r£d_èg
 *
èg
, 
id
, *
vÆue
);

27 
Så
 
∑r£dèg2°r
(
∑r£d_èg
 *
èg
);

	@proto.h

8 
maö
(
¨gc
, **
¨gv
, **
ívp
);

9 
nulcmd
();

10 
pushEvít
(
cmd
, *
d©a
);

11 
MySig«lH™dÀr
 
ötTøp
(
SIGNAL_ARG
);

12 
pgF‹e
();

13 
pgBack
();

14 
lup1
();

15 
ldown1
();

16 
˘rC§V
();

17 
˘rC§H
();

18 
rdrwSc
();

19 
§chf‹
();

20 
i§chf‹
();

21 
§chbak
();

22 
i§chbak
();

23 
§chnxt
();

24 
§ch¥v
();

25 
shi·l
();

26 
shi·r
();

27 
cﬁ1R
();

28 
cﬁ1L
();

29 
£tEnv
();

30 
pùeBuf
();

31 
pùesh
();

32 
ªadsh
();

33 
execsh
();

34 
ldfûe
();

35 
ldhñp
();

36 
movL
();

37 
movL1
();

38 
movD
();

39 
movD1
();

40 
movU
();

41 
movU1
();

42 
movR
();

43 
movR1
();

44 
movLW
();

45 
movRW
();

46 
qquôfm
();

47 
quôfm
();

48 
£lBuf
();

49 
su•
();

50 
goLöe
();

51 
goLöeF
();

52 
goLöeL
();

53 
löbeg
();

54 
löíd
();

55 
edôBf
();

56 
edôS¸
();

57 
fﬁlowA
();

58 
buf„rA
();

59 
fﬁlowI
();

60 
submôF‹m
();

61 
fﬁlowF‹m
();

62 
t›A
();

63 
œ°A
();

64 
⁄A
();

66 
√xtA
();

67 
¥evA
();

68 
√xtVA
();

69 
¥evVA
();

70 
√xtL
();

71 
√xtLU
();

72 
√xtR
();

73 
√xtRD
();

74 
√xtD
();

75 
√xtU
();

76 
√xtBf
();

77 
¥evBf
();

78 
backBf
();

79 
dñëePªvBuf
();

80 
goURL
();

81 
g‹URL
();

82 
ldBm¨k
();

83 
adBm¨k
();

84 
ldO±
();

85 
£tO±
();

86 
pgöfo
();

87 
msgs
();

88 
svA
();

89 
svI
();

90 
svBuf
();

91 
svSrc
();

92 
≥ekURL
();

93 
≥ekIMG
();

94 
curURL
();

95 
vwSrc
();

96 
ªlﬂd
();

97 
ªsh≠e
();

98 
chkURL
();

99 
chkURLBuf„r
(
Buf„r
 *
buf
);

100 
chkWORD
();

101 #ifde‡
USE_NNTP


102 
chkNMID
();

103 
chkNMIDBuf„r
(
Buf„r
 *
buf
);

105 
	#chkNMID
 
nulcmd


	)

107 
rFøme
();

108 
extbrz
();

109 
lökbrz
();

110 
cuæno
();

111 
execCmd
();

112 #ifde‡
USE_IMAGE


113 
di•I
();

114 
°›I
();

116 
	#di•I
 
nulcmd


	)

117 
	#°›I
 
nulcmd


	)

119 #ifde‡
USE_ALARM


120 
£tAœrm
();

121 
AœrmEvít
 *
£tAœrmEvít
(AœrmEvíà* 
evít
, 
£c
, 
°©us
,

122 
cmd
, *
d©a
);

124 
	#£tAœrm
 
nulcmd


	)

126 
ªöô
();

127 
defKey
();

128 
√wT
();

129 
˛o£T
();

130 
√xtT
();

131 
¥evT
();

132 
èbA
();

133 
èbURL
();

134 
èbrURL
();

135 
èbR
();

136 
èbL
();

137 
ldDL
();

138 
lökL°
();

139 #ifde‡
USE_MENU


140 
lökMn
();

141 
LökLi°
 *
lök_míu
(
Buf„r
 *
buf
);

142 
ac˚ssKey
();

143 
Anch‹
 *
ac˚sskey_míu
(
Buf„r
 *
buf
);

144 
li°Mn
();

145 
movli°Mn
();

146 
Anch‹
 *
li°_míu
(
Buf„r
 *
buf
);

148 
	#lökMn
 
nulcmd


	)

149 
	#ac˚ssKey
 
nulcmd


	)

150 
	#li°Mn
 
nulcmd


	)

151 
	#movli°Mn
 
nulcmd


	)

153 
undoPos
();

154 
ªdoPos
();

156 
cuºítLn
(
Buf„r
 *
buf
);

157 
tmpCÀ¨Buf„r
(
Buf„r
 *
buf
);

158 *
fûíame_exãnsi⁄
(*
∑tch
, 
is_uæ
);

159 #ifde‡
USE_EXTERNAL_URI_LOADER


160 
öôURIMëhods
();

161 
Så
 
£¨chURIMëhods
(
P¨£dURL
 *
pu
);

162 
chkExã∫ÆURIBuf„r
(
Buf„r
 *
buf
);

164 
P¨£dURL
 *
schemeToProxy
(
scheme
);

165 
examöeFûe
(*
∑th
, 
URLFûe
 *
uf
);

166 *
ac˚±abÀEncodög
();

167 
dú_exi°
(*
∑th
);

168 #ifde‡
USE_M17N


169 **
gë_symbﬁ
(
wc_˚s
 
ch¨£t
, *
width
);

170 **
£t_symbﬁ
(
width
);

171 
Så
 
c⁄vîtLöe
(
URLFûe
 *
uf
, Så 
löe
, 
mode
, 
wc_˚s
 * 
ch¨£t
,

172 
wc_˚s
 
doc_ch¨£t
);

174 **
gë_symbﬁ
();

175 
Så
 
c⁄vîtLöe0
(
URLFûe
 *
uf
, Så 
löe
, 
mode
);

176 
	#c⁄vîtLöe
(
uf
,
löe
,
mode
,
ch¨£t
,
dch¨£t
Ë
	`c⁄vîtLöe0
(uf,löe,mode)

	)

178 
push_symbﬁ
(
Så
 
°r
, 
symbﬁ
, 
width
, 
n
);

179 
Buf„r
 *
lﬂdFûe
(*
∑th
);

180 
Buf„r
 *
lﬂdGíîÆFûe
(*
∑th
, 
P¨£dURL
 *
cuºít
, *
ª„ªr
,

181 
Êag
, 
F‹mLi°
 *
ªque°
);

182 
is_bound¨y
(*, *);

183 
is_bœnk_löe
(*
löe
, 
ödít
);

184 
push_ªndî_image
(
Så
 
°r
, 
width
, 
limô
,

185 
html_„ed_ívú⁄
 *
h_ív
);

186 
Êushlöe
(
html_„ed_ívú⁄
 *
h_ív
, 
ªadbuf„r
 *
obuf
,

187 
ödít
, 
f‹˚
, 
width
);

188 
do_bœnklöe
(
html_„ed_ívú⁄
 *
h_ív
,

189 
ªadbuf„r
 *
obuf
, 
ödít
, 
ödít_ö¸
,

190 
width
);

191 
purgñöe
(
html_„ed_ívú⁄
 *
h_ív
);

192 
ßve_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
,

193 
ªadbuf„r
 *
obuf
);

194 
ª°‹e_f⁄ãf„˘
(
html_„ed_ívú⁄
 *
h_ív
,

195 
ªadbuf„r
 *
obuf
);

196 #ifde‡
USE_IMAGE


197 
dñëeImage
(
Buf„r
 *
buf
);

198 
gëAŒImage
(
Buf„r
 *
buf
);

199 
lﬂdImage
(
Buf„r
 *
buf
, 
Êag
);

200 
ImageCache
 *
gëImage
(
Image
 * 
image
, 
P¨£dURL
 *
cuºít
, 
Êag
);

201 
gëImageSize
(
ImageCache
 * 
ˇche
);

203 
Så
 
¥o˚ss_img
(
∑r£d_èg
 *
èg
, 
width
);

204 
Så
 
¥o˚ss_™ch‹
(
∑r£d_èg
 *
èg
, *
ègbuf
);

205 
Så
 
¥o˚ss_öput
(
∑r£d_èg
 *
èg
);

206 
Så
 
¥o˚ss_£À˘
(
∑r£d_èg
 *
èg
);

207 
Så
 
¥o˚ss_n_£À˘
();

208 
„ed_£À˘
(*
°r
);

209 
¥o˚ss_›ti⁄
();

210 
Så
 
¥o˚ss_ãxèªa
(
∑r£d_èg
 *
èg
, 
width
);

211 
Så
 
¥o˚ss_n_ãxèªa
();

212 
„ed_ãxèªa
(*
°r
);

213 
Så
 
¥o˚ss_f‹m
(
∑r£d_èg
 *
èg
);

214 
Så
 
¥o˚ss_n_f‹m
();

215 
gëMëaRe‰eshP¨am
(*
q
, 
Så
 *
ª‰esh_uri
);

216 
HTMLèg¥oc1
(
∑r£d_èg
 *
èg
,

217 
html_„ed_ívú⁄
 *
h_ív
);

218 
HTMLlöïroc2
(
Buf„r
 *
buf
, 
TextLöeLi°
 *
é
);

219 
HTMLlöïroc0
(*
i°r
, 
html_„ed_ívú⁄
 *
h_ív
,

220 
öã∫Æ
);

221 
	#HTMLlöïroc1
(
x
,
y
Ë
	`HTMLlöïroc0
(x,y,
TRUE
)

	)

222 
Buf„r
 *
lﬂdHTMLBuf„r
(
URLFûe
 *
f
, Buf„∏*
√wBuf
);

223 *
c⁄vît_size
(
˛í_t
 
size
, 
u£Êﬂt
);

224 *
c⁄vît_size2
(
˛í_t
 
size1
, cÀn_à
size2
, 
u£Êﬂt
);

225 
showProgªss
(
˛í_t
 * 
löñí
, cÀn_à* 
åbyã
);

226 
öô_hív
(
html_„ed_ívú⁄
 *, 
ªadbuf„r
 *,

227 
ívú⁄mít
 *, , 
TextLöeLi°
 *, , );

228 
com∂ëeHTML°ªam
(
html_„ed_ívú⁄
 *,

229 
ªadbuf„r
 *);

230 
lﬂdHTML°ªam
(
URLFûe
 *
f
, 
Buf„r
 *
√wBuf
, 
FILE
 * 
§c
,

231 
öã∫Æ
);

232 
Buf„r
 *
lﬂdHTMLSåög
(
Så
 
∑ge
);

233 #ifde‡
USE_GOPHER


234 
Så
 
lﬂdG›hîDú
(
URLFûe
 *
uf
, 
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

236 
Buf„r
 *
lﬂdBuf„r
(
URLFûe
 *
uf
, Buf„∏*
√wBuf
);

237 #ifde‡
USE_IMAGE


238 
Buf„r
 *
lﬂdImageBuf„r
(
URLFûe
 *
uf
, Buf„∏*
√wBuf
);

240 
ßveBuf„r
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
);

241 
ßveBuf„rBody
(
Buf„r
 *
buf
, 
FILE
 * 
f
, 
c⁄t
);

242 
Buf„r
 *
gëshñl
(*
cmd
);

243 
Buf„r
 *
gëpùe
(*
cmd
);

244 
Buf„r
 *
›íPagîBuf„r
(
I≈utSåóm
 
°ªam
, Buf„∏*
buf
);

245 
Buf„r
 *
›íGíîÆPagîBuf„r
(
I≈utSåóm
 
°ªam
);

246 
Löe
 *
gëNextPage
(
Buf„r
 *
buf
, 
∂í
);

247 
ßve2tmp
(
URLFûe
 
uf
, *
tmpf
);

248 
doExã∫Æ
(
URLFûe
 
uf
, *
∑th
, *
ty≥
, 
Buf„r
 **
buÂ
,

249 
Buf„r
 *
deÁu…buf
);

250 
_doFûeC›y
(*
tmpf
, *
def°r
, 
dow∆ﬂd
);

251 
	#doFûeC›y
(
tmpf
, 
def°r
Ë
	`_doFûeC›y
—mpf, def°r, 
FALSE
);

	)

252 
doFûeMove
(*
tmpf
, *
def°r
);

253 
doFûeSave
(
URLFûe
 
uf
, *
def°r
);

254 
checkC›yFûe
(*
∑th1
, *
∑th2
);

255 
checkSaveFûe
(
I≈utSåóm
 
°ªam
, *
∑th
);

256 
checkOvîWrôe
(*
∑th
);

257 *
öputAnswî
(*
¥om±
);

258 
m©ch©å
(*
p
, *
©å
, 
Àn
, 
Så
 *
vÆue
);

259 
ªadHódî
(
URLFûe
 *
uf
, 
Buf„r
 *
√wBuf
, 
thru
, 
P¨£dURL
 *
pu
);

260 *
checkHódî
(
Buf„r
 *
buf
, *
fõld
);

261 
TabBuf„r
 *
√wTab
();

262 
ˇlcTabPos
();

263 
TabBuf„r
 *
dñëeTab
(TabBuf„∏* 
èb
);

264 
addDow∆ﬂdLi°
(
pid_t
 
pid
, *
uæ
, *
ßve
, *
lock
,

265 
˛í_t
 
size
);

266 
°›Dow∆ﬂd
();

267 
checkDow∆ﬂdLi°
();

268 
dow∆ﬂd_a˘i⁄
(
∑r£d_èg¨g
 *
¨g
);

269 
Buf„r
 *
√wBuf„r
(
width
);

270 
Buf„r
 *
nuŒBuf„r
();

271 
˛órBuf„r
(
Buf„r
 *
buf
);

272 
disˇrdBuf„r
(
Buf„r
 *
buf
);

273 
Buf„r
 *
«medBuf„r
(Buf„∏*
fú°
, *
«me
);

274 
Buf„r
 *
dñëeBuf„r
(Buf„∏*
fú°
, Buf„∏*
dñbuf
);

275 
Buf„r
 *
ª∂a˚Buf„r
(Buf„∏*
fú°
, Buf„∏*
dñbuf
, Buf„∏*
√wbuf
);

276 
Buf„r
 *
¡hBuf„r
(Buf„∏*
fú°buf
, 
n
);

277 
gŸoRólLöe
(
Buf„r
 *
buf
, 
n
);

278 
gŸoLöe
(
Buf„r
 *
buf
, 
n
);

279 
Buf„r
 *
£À˘Buf„r
(Buf„∏*
fú°buf
, Buf„∏*
cuºítbuf
,

280 *
£À˘ch¨
);

281 
ªsh≠eBuf„r
(
Buf„r
 *
buf
);

282 
c›yBuf„r
(
Buf„r
 *
a
, Buf„∏*
b
);

283 
Buf„r
 *
¥evBuf„r
(Buf„∏*
fú°
, Buf„∏*
buf
);

284 
wrôeBuf„rCache
(
Buf„r
 *
buf
);

285 
ªadBuf„rCache
(
Buf„r
 *
buf
);

286 
fmTîm
();

287 
fmInô
();

288 
di•œyBuf„r
(
Buf„r
 *
buf
, 
mode
);

289 
addCh¨
(
c
, 
Löïr›
 
mode
);

290 #ifde‡
USE_M17N


291 
addMCh¨
(*
c
, 
Löïr›
 
mode
, 
size_t
 
Àn
);

293 
ªc‹d_îr_mesßge
(*
s
);

294 
Buf„r
 *
mesßge_li°_∑√l
();

295 
mesßge
(*
s
, 
ªtu∫_x
, 
ªtu∫_y
);

296 
di•_îr_mesßge
(*
s
, 
ªdøw_cuºít
);

297 
di•_mesßge_n£c
(*
s
, 
ªdøw_cuºít
, 
£c
, 
purge
,

298 
mou£
);

299 
di•_mesßge
(*
s
, 
ªdøw_cuºít
);

300 #ifde‡
USE_MOUSE


301 
di•_mesßge_nomou£
(*
s
, 
ªdøw_cuºít
);

303 
	#di•_mesßge_nomou£
 
di•_mesßge


	)

305 
£t_dñayed_mesßge
(*
s
);

306 
curs‹Up0
(
Buf„r
 *
buf
, 
n
);

307 
curs‹Up
(
Buf„r
 *
buf
, 
n
);

308 
curs‹Down0
(
Buf„r
 *
buf
, 
n
);

309 
curs‹Down
(
Buf„r
 *
buf
, 
n
);

310 
curs‹UpDown
(
Buf„r
 *
buf
, 
n
);

311 
curs‹Right
(
Buf„r
 *
buf
, 
n
);

312 
curs‹Le·
(
Buf„r
 *
buf
, 
n
);

313 
curs‹Home
(
Buf„r
 *
buf
);

314 
¨øngeCurs‹
(
Buf„r
 *
buf
);

315 
¨øngeLöe
(
Buf„r
 *
buf
);

316 
curs‹XY
(
Buf„r
 *
buf
, 
x
, 
y
);

317 
ª°‹ePosôi⁄
(
Buf„r
 *
buf
, Buf„∏*
‹ig
);

318 
cﬁumnSkù
(
Buf„r
 *
buf
, 
off£t
);

319 
cﬁumnPos
(
Löe
 *
löe
, 
cﬁumn
);

320 
cﬁumnLí
(
Löe
 *
löe
, 
cﬁumn
);

321 
Löe
 *
löeSkù
(
Buf„r
 *
buf
, Löê*
löe
, 
off£t
, 
œ°
);

322 
Löe
 *
cuºítLöeSkù
(
Buf„r
 *
buf
, Löê*
löe
, 
off£t
, 
œ°
);

323 
gëhtmlcmd
(**
s
);

324 #i‚de‡
USE_ANSI_COLOR


325 
	#checkTy≥
(
a
,
b
,
c
Ë
	`_checkTy≥
◊,b)

	)

327 
Så
 
checkTy≥
(Så 
s
, 
Löïr›
 **
›r›
, 
Löecﬁ‹
 **
ocﬁ‹
);

328 
ˇlcPosôi⁄
(*
l
, 
Löïr›
 *
¥
, 
Àn
, 
pos
, 
bpos
,

329 
mode
);

330 *
œ°FûeName
(*
∑th
);

331 *
myba£«me
(*
s
);

332 *
mydú«me
(*
s
);

333 
√xt_°©us
(
c
, *
°©us
);

334 
ªad_tokí
(
Så
 
buf
, **
ö°r
, *
°©us
, 
¥e
, 
≠≥nd
);

335 
Så
 
c‹ª˘_úπag
(
°©us
);

336 #ifde‡
USE_MIGEMO


337 
öô_migemo
();

339 #ifde‡
USE_M17N


340 *
c⁄v_£¨ch_°rög
(*
°r
, 
wc_˚s
 
f_˚s
);

342 
	#c⁄v_£¨ch_°rög
(
°r
, 
f_˚s
Ë
	)
str

344 
f‹w¨dSórch
(
Buf„r
 *
buf
, *
°r
);

345 
backw¨dSórch
(
Buf„r
 *
buf
, *
°r
);

346 
pcm≠
();

347 
escm≠
();

348 
escbm≠
();

349 
escdm≠
(
c
);

350 
mu…im≠
();

351 *
öputLöeHi°Sórch
(*
¥om±
, *
def_°r
, 
Êag
,

352 
Hi°
 *
hi°
, (*
öcfunc
Ë(
ch
, 
Så
 
buf
,

353 
Löïr›
 *
¥›
));

354 
Så
 
	`u√sˇ≥_•a˚s
(Så 
s
);

355 #ifde‡
USE_HISTORY


356 
Buf„r
 *
	`hi°‹yBuf„r
(
Hi°
 *
hi°
);

357 
	`lﬂdHi°‹y
(
Hi°
 *
hi°
);

358 
	`ßveHi°‹y
(
Hi°
 *
hi°
, 
size_t
 
size
);

359 
	`ldHi°
();

361 
	#ldHi°
 
nulcmd


	)

363 
	`log_like
(
x
);

364 
èbÀ
 *
	`√wTabÀ
();

365 
	`pushd©a
(
èbÀ
 *
t
, 
row
, 
cﬁ
, *
d©a
);

366 
	`visibÀ_Àngth
(*
°r
);

367 
	`Æign
(
TextLöe
 *
lbuf
, 
width
, 
mode
);

368 
	`¥öt_ôem
(
èbÀ
 *
t
, 
row
, 
cﬁ
, 
width
, 
Så
 
buf
);

369 
	`¥öt_£p
(
èbÀ
 *
t
, 
row
, 
ty≥
, 
maxcﬁ
, 
Så
 
buf
);

370 
	`do_ªfûl
(
èbÀ
 *
tbl
, 
row
, 
cﬁ
, 
maxlimô
);

371 
	`ªndîTabÀ
(
èbÀ
 *
t
, 
max_width
,

372 
html_„ed_ívú⁄
 *
h_ív
);

373 
èbÀ
 *
	`begö_èbÀ
(
b‹dî
, 
•acög
, 
∑ddög
,

374 
v•a˚
);

375 
	`íd_èbÀ
(
èbÀ
 *
tbl
);

376 
	`check_rowcﬁ
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
);

377 
	`möimum_Àngth
(*
löe
);

378 
	`„ed_èbÀ
(
èbÀ
 *
tbl
, *
löe
, 
èbÀ_mode
 *
mode
,

379 
width
, 
öã∫Æ
);

380 
	`„ed_èbÀ1
(
èbÀ
 *
tbl
, 
Så
 
tok
, 
èbÀ_mode
 *
mode
,

381 
width
);

382 
	`pushTabÀ
(
èbÀ
 *, table *);

383 
f‹m_li°
 *
	`√wF‹mLi°
(*
a˘i⁄
, *
mëhod
, *
ch¨£t
,

384 *
í˘y≥
, *
èrgë
, *
«me
,

385 
f‹m_li°
 *
_√xt
);

386 
f‹m_ôem_li°
 *
	`f‹mLi°_addI≈ut
(
f‹m_li°
 *
Ê
,

387 
∑r£d_èg
 *
èg
);

388 *
	`f‹m2°r
(
F‹mIãmLi°
 *
fi
);

389 
	`f‹mty≥
(*
ty≥°r
);

390 
	`f‹mRecheckRadio
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
f‹m
);

391 
	`f‹mRe£tBuf„r
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
f‹môem
);

392 
	`f‹mUpd©eBuf„r
(
Anch‹
 *
a
, 
Buf„r
 *
buf
, 
F‹mIãmLi°
 *
f‹m
);

393 
	`¥eF‹mUpd©eBuf„r
(
Buf„r
 *
buf
);

394 
Så
 
	`ãxtfõldªp
(Så 
s
, 
width
);

395 
	`öput_ãxèªa
(
F‹mIãmLi°
 *
fi
);

396 
	`do_öã∫Æ
(*
a˘i⁄
, *
d©a
);

397 
	`f‹m_wrôe_d©a
(
FILE
 * 
f
, *
bound¨y
, *
«me
, *
vÆue
);

398 
	`f‹m_wrôe_‰om_fûe
(
FILE
 * 
f
, *
bound¨y
, *
«me
,

399 *
fûíame
, *
fûe
);

400 
M≠Li°
 *
	`£¨chM≠Li°
(
Buf„r
 *
buf
, *
«me
);

401 
	`fﬁlow_m≠
(
∑r£d_èg¨g
 *
¨g
);

402 #i‡
	`deföed
(
MENU_MAP
Ë|| deföed(
USE_IMAGE
)

403 
M≠Aªa
 *
	`fﬁlow_m≠_míu
(
Buf„r
 *
buf
, *
«me
, 
Anch‹
 *
a_img
, 
x
,

404 
y
);

406 #i‚de‡
MENU_MAP


407 
Buf„r
 *
	`fﬁlow_m≠_∑√l
(Buf„∏*
buf
, *
«me
);

409 #ifde‡
USE_IMAGE


410 
	`gëM≠XY
(
Buf„r
 *
buf
, 
Anch‹
 *
a
, *
x
, *
y
);

411 
M≠Aªa
 *
	`ªåõveCuºítM≠Aªa
(
Buf„r
 *
buf
);

413 
Anch‹
 *
	`ªåõveCuºítM≠
(
Buf„r
 *
buf
);

414 
M≠Aªa
 *
	`√wM≠Aªa
(*
uæ
, *
èrgë
, *
Æt
, *
sh≠e
,

415 *
co‹ds
);

416 
Buf„r
 *
	`∑ge_öfo_∑√l
(Buf„∏*
buf
);

417 
‰ame_body
 *
	`√wFøme
(
∑r£d_èg
 *
èg
, 
Buf„r
 *
buf
);

418 
‰ame£t
 *
	`√wFømeSë
(
∑r£d_èg
 *
èg
);

419 
	`addFømeSëEÀmít
(
‰ame£t
 *
f
,

420 
‰ame£t_ñemít
 
ñemít
);

421 
	`dñëeFøme
(
‰ame_body
 *
b
);

422 
	`dñëeFømeSë
(
‰ame£t
 *
f
);

423 
	`dñëeFømeSëEÀmít
(
‰ame£t_ñemít
 
e
);

424 
‰ame£t
 *
	`c›yFømeSë
(‰ame£à*
of
);

425 
	`pushFømeTªe
(
‰ame£t_queue
 **
fqµ
, 
‰ame£t
 *
fs
,

426 
Buf„r
 *
buf
);

427 
‰ame£t
 *
	`p›FømeTªe
(
‰ame£t_queue
 **
fqµ
);

428 
	`ª£tFømeEÀmít
(
‰ame£t_ñemít
 *
f_ñemít
, 
Buf„r
 *
buf
,

429 *
ª„ªr
, 
F‹mLi°
 *
ªque°
);

430 
Buf„r
 *
	`ªndîFøme
(Buf„∏*
Cbuf
, 
f‹˚_ªlﬂd
);

431 
‰ame£t_ñemít
 *
	`£¨ch_‰ame
(
‰ame£t
 *
f£t
, *
«me
);

432 
	`£t_ây
();

433 
	`£t_cc
(
•ec
, 
vÆ
);

434 
	`˛o£_ây
();

435 *
	`ây«me_ây
();

436 
	`ª£t_ây
();

437 
MySig«lH™dÀr
 
	`ª£t_exô
(
SIGNAL_ARG
);

438 
MySig«lH™dÀr
 
	`îr‹_dump
(
SIGNAL_ARG
);

439 
	`£t_öt
();

440 
	`gëTC°r
();

441 
	`£éöescﬁs
();

442 
	`£tups¸ìn
();

443 
pid_t
 
	`›í_pùe_rw
(
FILE
 ** 
‰
, FILE ** 
fw
);

444 
	`öôs¸
();

445 
	`move
(
löe
, 
cﬁumn
);

446 #ifde‡
USE_M17N


447 
	`addmch
(*
p
, 
size_t
 
Àn
);

449 
	`addch
(
c
);

450 
	`wøp
();

451 
	`touch_löe
();

452 
	`°™dout
();

453 
	`°™díd
();

454 
	`bﬁd
();

455 
	`bﬁdíd
();

456 
	`undîlöe
();

457 
	`undîlöìnd
();

458 
	`gøph°¨t
();

459 
	`gøphíd
();

460 
	`gøph_ok
();

461 #ifde‡
USE_COLOR


462 
	`£tfcﬁ‹
(
cﬁ‹
);

463 #ifde‡
USE_BG_COLOR


464 
	`£tbcﬁ‹
(
cﬁ‹
);

467 
	`ª‰esh
();

468 
	`˛ór
();

469 #ifde‡
USE_RAW_SCROLL


470 
	`s¸ﬁl
();

471 
	`rs¸ﬁl
();

474 
	`√ed_˛π€ﬁ
();

476 
	`˛π€ﬁ
();

477 
	`˛π€ﬁx
();

478 
	`˛πobŸ
();

479 
	`˛πobŸx
();

480 
	`no_˛π€ﬁ
();

481 
	`add°r
(*
s
);

482 
	`addn°r
(*
s
, 
n
);

483 
	`addn°r_sup
(*
s
, 
n
);

484 
	`¸mode
();

485 
	`no¸mode
();

486 
	`ãrm_echo
();

487 
	`ãrm_n€cho
();

488 
	`ãrm_øw
();

489 
	`ãrm_cooked
();

490 
	`ãrm_cbªak
();

491 
	`ãrm_tôÀ
(*
s
);

492 
	`Êush_ây
();

493 
	`toggÀ_°™d
();

494 
	`gëch
();

495 
	`bñl
();

496 
	`¶ìp_tûl_™ykey
(
£c
, 
purge
);

497 #ifde‡
USE_IMAGE


498 
	`touch_curs‹
();

500 
	`öôMimeTy≥s
();

501 
	`‰ì_s¶_˘x
();

502 
P¨£dURL
 *
	`ba£URL
(
Buf„r
 *
buf
);

503 
	`›íSockë
(*
ho°«me
, *
ªmŸï‹t_«me
,

504 
ªmŸï‹t_num
);

505 
	`∑r£URL
(*
uæ
, 
P¨£dURL
 *
p_uæ
, P¨£dURL *
cuºít
);

506 
	`c›yP¨£dURL
(
P¨£dURL
 *
p
, P¨£dURL *
q
);

507 
	`∑r£URL2
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
);

508 
Så
 
	`∑r£dURL2Så
(
P¨£dURL
 *
pu
);

509 
	`gëURLScheme
(**
uæ
);

510 
	`öô_°ªam
(
URLFûe
 *
uf
, 
scheme
, 
I≈utSåóm
 
°ªam
);

511 
Så
 
	`HTTPªque°Mëhod
(
HReque°
 *
hr
);

512 
Så
 
	`HTTPªque°URI
(
P¨£dURL
 *
pu
, 
HReque°
 *
hr
);

513 
URLFûe
 
	`›íURL
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
,

514 
URLO±i⁄
 *
›ti⁄
, 
F‹mLi°
 *
ªque°
,

515 
TextLi°
 *
exåa_hódî
, 
URLFûe
 *
ouf
,

516 
HReque°
 *
hr
, *
°©us
);

517 
	`maûˇpM©ch
(
maûˇp
 *
mˇp
, *
ty≥
);

518 
maûˇp
 *
	`£¨chMaûˇp
(maûˇ∞*
èbÀ
, *
ty≥
);

519 
	`öôMaûˇp
();

520 *
	`ac˚±abÀMimeTy≥s
();

521 
maûˇp
 *
	`£¨chExtVõwî
(*
ty≥
);

522 
Så
 
	`unquŸe_maûˇp
(*
q°r
, *
ty≥
, *
«me
, *
©å
,

523 *
mc_°©
);

524 *
	`guessC⁄ã¡Ty≥
(*
fûíame
);

525 
TextLi°
 *
	`make_domaö_li°
(*
domaö_li°
);

526 
	`check_no_¥oxy
(*
domaö
);

527 
I≈utSåóm
 
	`›íFTPSåóm
(
P¨£dURL
 *
pu
, 
URLFûe
 *
uf
);

528 #ifde‡
USE_M17N


529 
Så
 
	`lﬂdFTPDú
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

531 
Så
 
	`lﬂdFTPDú0
(
P¨£dURL
 *
pu
);

532 
	#lﬂdFTPDú
(
pu
,
ch¨£t
Ë
	`lﬂdFTPDú0
’u)

	)

534 
	`˛o£FTP
();

535 
	`disc⁄√˘FTP
();

536 #ifde‡
USE_NNTP


537 
I≈utSåóm
 
	`›íNewsSåóm
(
P¨£dURL
 *
pu
);

538 #ifde‡
USE_M17N


539 
Så
 
	`lﬂdNewsgroup
(
P¨£dURL
 *
pu
, 
wc_˚s
 * 
ch¨£t
);

541 
Så
 
	`lﬂdNewsgroup0
(
P¨£dURL
 *
pu
);

542 
	#lﬂdNewsgroup
(
pu
,
ch¨£t
Ë
	`lﬂdNewsgroup0
’u)

	)

544 
	`˛o£News
();

545 
	`disc⁄√˘News
();

547 
Anch‹Li°
 *
	`putAnch‹
(Anch‹Li° *
Æ
, *
uæ
, *
èrgë
,

548 
Anch‹
 **
™ch‹_ªtu∫
, *
ª„ªr
,

549 *
tôÀ
, 
key
, 
löe
,

550 
pos
);

551 
Anch‹
 *
	`ªgi°îHªf
(
Buf„r
 *
buf
, *
uæ
, *
èrgë
,

552 *
ª„ªr
, *
tôÀ
, 
key
,

553 
löe
, 
pos
);

554 
Anch‹
 *
	`ªgi°îName
(
Buf„r
 *
buf
, *
uæ
, 
löe
, 
pos
);

555 
Anch‹
 *
	`ªgi°îImg
(
Buf„r
 *
buf
, *
uæ
, *
tôÀ
, 
löe
,

556 
pos
);

557 
Anch‹
 *
	`ªgi°îF‹m
(
Buf„r
 *
buf
, 
F‹mLi°
 *
Êi°
,

558 
∑r£d_èg
 *
èg
, 
löe
, 
pos
);

559 
	`⁄Anch‹
(
Anch‹
 *
a
, 
löe
, 
pos
);

560 
Anch‹
 *
	`ªåõveAnch‹
(
Anch‹Li°
 *
Æ
, 
löe
, 
pos
);

561 
Anch‹
 *
	`ªåõveCuºítAnch‹
(
Buf„r
 *
buf
);

562 
Anch‹
 *
	`ªåõveCuºítImg
(
Buf„r
 *
buf
);

563 
Anch‹
 *
	`ªåõveCuºítF‹m
(
Buf„r
 *
buf
);

564 
Anch‹
 *
	`£¨chAnch‹
(
Anch‹Li°
 *
Æ
, *
°r
);

565 
Anch‹
 *
	`£¨chURLLabñ
(
Buf„r
 *
buf
, *
uæ
);

566 
	`ªAnch‹W‹d
(
Buf„r
 *
buf
, 
Löe
 *
l
, 
•os
, 
ïos
);

567 *
	`ªAnch‹
(
Buf„r
 *
buf
, *
ª
);

568 #ifde‡
USE_NNTP


569 *
	`ªAnch‹News
(
Buf„r
 *
buf
, *
ª
);

570 *
	`ªAnch‹Newshódî
(
Buf„r
 *
buf
);

572 
	`addMu…úowsF‹m
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
);

573 
Anch‹
 *
	`˛o£°_√xt_™ch‹
(
Anch‹Li°
 *
a
, Anch‹ *
™
, 
x
, 
y
);

574 
Anch‹
 *
	`˛o£°_¥ev_™ch‹
(
Anch‹Li°
 *
a
, Anch‹ *
™
, 
x
, 
y
);

575 #ifde‡
USE_IMAGE


576 
	`addMu…úowsImg
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
);

578 
Hm¨kîLi°
 *
	`putHm¨kî
(Hm¨kîLi° *
ml
, 
löe
, 
pos
, 
£q
);

579 
	`shi·Anch‹Posôi⁄
(
Anch‹Li°
 *
a
, 
Hm¨kîLi°
 *
hl
, 
löe
,

580 
pos
, 
shi·
);

581 *
	`gëAnch‹Text
(
Buf„r
 *
buf
, 
Anch‹Li°
 *
Æ
, 
Anch‹
 *
a
);

582 
Buf„r
 *
	`lök_li°_∑√l
(Buf„∏*
buf
);

584 
Så
 
	`decodeB
(**
ww
);

585 
Så
 
	`decodeQ
(**
ww
);

586 
Så
 
	`decodeQP
(**
ww
);

587 
Så
 
	`decodeU
(**
ww
);

588 #ifde‡
USE_M17N


589 
Så
 
	`decodeW‹d
(**
ow
, 
wc_˚s
 * 
ch¨£t
);

590 
Så
 
	`decodeMIME
(Så 
‹g°r
, 
wc_˚s
 * 
ch¨£t
);

592 
Så
 
	`decodeW‹d0
(**
ow
);

593 
Så
 
	`decodeMIME0
(Så 
‹g°r
);

594 
	#decodeW‹d
(
ow
,
ch¨£t
Ë
	`decodeW‹d0
(ow)

	)

595 
	#decodeMIME
(
‹g°r
,
ch¨£t
Ë
	`decodeMIME0
(‹g°r)

	)

597 
Så
 
	`ícodeB
(*
a
);

598 
	`£t_∑øm_›ti⁄
(*
›ti⁄
);

599 *
	`gë_∑øm_›ti⁄
(*
«me
);

600 
	`öô_rc
();

601 
Buf„r
 *
	`lﬂd_›ti⁄_∑√l
();

602 
	`∑√l_£t_›ti⁄
(
∑r£d_èg¨g
 *);

603 
	`sync_wôh_›ti⁄
();

604 *
	`rcFûe
(*
ba£
);

605 *
	`ëcFûe
(*
ba£
);

606 *
	`c⁄fFûe
(*
ba£
);

607 *
	`auxböFûe
(*
ba£
);

608 *
	`libFûe
(*
ba£
);

609 *
	`hñpFûe
(*
ba£
);

610 
Så
 
	`loˇlCookõ
();

611 
Så
 
	`lﬂdLoˇlDú
(*
dú«me
);

612 
	`£t_ívú⁄
(*
v¨
, *
vÆue
);

613 
FILE
 *
	`loˇlcgi_po°
(*, *, 
F‹mLi°
 *, *);

614 
	#loˇlcgi_gë
(
u
, 
q
, 
r
Ë
	`loˇlcgi_po°
((u), (q), 
NULL
, (r))

	)

615 
FILE
 *
	`›íSe¸ëFûe
(*
‚ame
);

616 
	`lﬂdPasswd
();

617 
	`lﬂdPªF‹m
();

618 
	`föd_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

619 
Så
 *
u«me
, Så *
pwd
, 
is_¥oxy
);

620 
	`add_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

621 
Så
 
u«me
, Så 
pwd
, 
is_¥oxy
);

622 
	`övÆid©e_auth_u£r_∑sswd
(
P¨£dURL
 *
pu
, *
ªÆm
,

623 
Så
 
u«me
, Så 
pwd
, 
is_¥oxy
);

624 *
	`œ°_modifõd
(
Buf„r
 *
buf
);

625 
Så
 
	`rom™NumîÆ
(
n
);

626 
Så
 
	`rom™AÕhabë
(
n
);

627 
	`£tup_chûd
(
chûd
, 
i
, 
f
);

628 
	`myExec
(*
comm™d
);

629 
	`mySy°em
(*
comm™d
, 
background
);

630 
Så
 
	`myExtComm™d
(*
cmd
, *
¨g
, 
ªdúe˘
);

631 
Så
 
	`myEdô‹
(*
cmd
, *
fûe
, 
löe
);

632 *
	`fûe_to_uæ
(*
fûe
);

633 #ifde‡
USE_M17N


634 *
	`uæ_unquŸe_c⁄v
(*
uæ
, 
wc_˚s
 
ch¨£t
);

636 *
	`uæ_unquŸe_c⁄v0
(*
uæ
);

637 
	#uæ_unquŸe_c⁄v
(
uæ
, 
ch¨£t
Ë
	`uæ_unquŸe_c⁄v0
(uæ)

	)

639 *
	`ex∑ndName
(*
«me
);

640 
Så
 
	`tmp‚ame
(
ty≥
, *
ext
);

641 
time_t
 
	`mymktime
(*
time°r
);

642 (*
	`mySig«l
(
sig«l_numbî
, (*
a˘i⁄
) ())) ();

643 #ifde‡
USE_COOKIE


644 *
	`FQDN
(*
ho°
);

645 
Så
 
	`föd_cookõ
(
P¨£dURL
 *
pu
);

646 
	`add_cookõ
(
P¨£dURL
 *
pu
, 
Så
 
«me
, Så 
vÆue
, 
time_t
 
expúes
,

647 
Så
 
domaö
, Så 
∑th
, 
Êag
, Så 
commít
, 
vîsi⁄
,

648 
Så
 
p‹t
, Så 
commítURL
);

649 
	`ßve_cookõs
();

650 
	`lﬂd_cookõs
();

651 
	`öôCookõ
();

652 
	`cooL°
();

653 
Buf„r
 *
	`cookõ_li°_∑√l
();

654 
	`£t_cookõ_Êag
(
∑r£d_èg¨g
 *
¨g
);

655 
	`check_cookõ_ac˚±_domaö
(*
domaö
);

657 
	#cooL°
 
nulcmd


	)

659 #ifde‡
USE_M17N


660 
	`docCSë
();

661 
	`defCSë
();

662 
	`ch™ge_ch¨£t
(
∑r£d_èg¨g
 *
¨g
);

664 
	#docCSë
 
nulcmd


	)

665 
	#defCSë
 
nulcmd


	)

668 #ifde‡
USE_MARK


669 
	`_m¨k
();

670 
	`√xtMk
();

671 
	`¥evMk
();

672 
	`ªM¨k
();

674 
	#_m¨k
 
nulcmd


	)

675 
	#√xtMk
 
nulcmd


	)

676 
	#¥evMk
 
nulcmd


	)

677 
	#ªM¨k
 
nulcmd


	)

680 #ifde‡
USE_MOUSE


681 
	`mou£
();

682 
	`mou£_öô
();

683 
	`mou£_íd
();

684 
	`mou£_a˘ive
();

685 
	`mou£_öa˘ive
();

686 
	`msToggÀ
();

687 
	`movMs
();

688 #ifde‡
USE_MENU


689 
	`míuMs
();

691 
	#míuMs
 
nulcmd


	)

693 
	`èbMs
();

694 
	`˛o£TMs
();

696 
	#mou£
 
nulcmd


	)

697 
	#msToggÀ
 
nulcmd


	)

698 
	#movMs
 
nulcmd


	)

699 
	#míuMs
 
nulcmd


	)

700 
	#èbMs
 
nulcmd


	)

701 
	#˛o£TMs
 
nulcmd


	)

704 #ifde‡
USE_IMAGE


705 
	`öôImage
();

706 
	`ãrmImage
();

707 
	`addImage
(
ImageCache
 * 
ˇche
, 
x
, 
y
, 
sx
, 
sy
, 
w
,

708 
h
);

709 
	`døwImage
();

710 
	`˛órImage
();

713 *
	`£¨chKeyD©a
();

715 
	`£tKeym≠
(*
p
, 
löío
, 
vîbo£
);

716 
	`öôKeym≠
(
f‹˚
);

717 
	`gëFuncLi°
(*
id
);

718 
	`gëKey
(*
s
);

719 *
	`gëKeyD©a
(
key
);

720 *
	`gëW‹d
(**
°r
);

721 *
	`gëQW‹d
(**
°r
);

722 #ifde‡
USE_MOUSE


723 
	`öôMou£A˘i⁄
();

726 #ifde‡
USE_MENU


727 
	`√w_míu
(
Míu
 *
míu
, 
MíuIãm
 *
ôem
);

728 
	`geom_míu
(
Míu
 *
míu
, 
x
, 
y
, 
m£À˘
);

729 
	`døw_Æl_míu
(
Míu
 *
míu
);

730 
	`døw_míu
(
Míu
 *
míu
);

731 
	`døw_míu_ôem
(
Míu
 *
míu
, 
m£À˘
);

732 
	`£À˘_míu
(
Míu
 *
míu
, 
m£À˘
);

733 
	`gŸo_míu
(
Míu
 *
míu
, 
m£À˘
, 
down
);

734 
	`up_míu
(
Míu
 *
míu
, 
n
);

735 
	`down_míu
(
Míu
 *
míu
, 
n
);

736 
	`a˘i⁄_míu
(
Míu
 *
míu
);

737 
	`p›up_míu
(
Míu
 *
∑ª¡
, Míu *
míu
);

738 
	`guess_míu_xy
(
Míu
 *
míu
, 
width
, *
x
, *
y
);

739 
	`√w_›ti⁄_míu
(
Míu
 *
míu
, **
œbñ
, *
v¨übÀ
,

740 (*
func
) ());

742 
	`£tMíuIãm
(
MíuIãm
 *
ôem
, *
ty≥
, *
löe
);

743 
	`addMíuLi°
(
MíuLi°
 **
li°
, *
id
);

744 
	`gëMíuN
(
MíuLi°
 *
li°
, *
id
);

746 
	`p›upMíu
(
x
, 
y
, 
Míu
 *
míu
);

747 
	`maöMíu
(
x
, 
y
);

748 
	`maöMn
();

749 
	`£lMn
();

750 
	`èbMn
();

751 
	`›ti⁄Míu
(
x
, 
y
, **
œbñ
, *
v¨übÀ
, 
öôül
,

752 (*
func
) ());

753 
	`öôMíu
();

755 
	#maöMn
 
nulcmd


	)

756 
	#£lMn
 
£lBuf


	)

757 
	#èbMn
 
nulcmd


	)

760 #ifde‡
USE_DICT


761 
	`di˘w‹d
();

762 
	`di˘w‹d©
();

764 
	#di˘w‹d
 
nulcmd


	)

765 
	#di˘w‹d©
 
nulcmd


	)

767 #ifde‡
USE_GOOGLE


768 
	`googÀw‹d
();

769 
	`googÀw‹d©
();

771 
	#googÀw‹d
 
nulcmd


	)

772 
	#googÀw‹d©
 
nulcmd


	)

774 #ifde‡
USE_GOOGLE_LUCKY


775 
	`googÀluckyw‹d
();

776 
	`googÀluckyw‹d©
();

778 
	#googÀluckyw‹d
 
nulcmd


	)

779 
	#googÀluckyw‹d©
 
nulcmd


	)

782 
	`ªlﬂdBuf„r
(
Buf„r
 *
buf
);

784 *
	`guess_ßve_«me
(
Buf„r
 *
buf
, *
fûe
);

786 
	`wøpToggÀ
();

787 #ifde‡
USE_BUFINFO


788 
	`ßveBuf„rInfo
();

791 
	`di•Vî
();

793 #ifde‡
USE_INCLUDED_SRAND48


794 
	`§™d48
();

795 
	`Ã™d48
();

798 
	~"ödï.h
"

	@rc.c

5 
	~"fm.h
"

6 
	~"my˘y≥.h
"

7 
	~"¥Ÿo.h
"

8 
	~<°dio.h
>

9 
	~<î∫o.h
>

10 
	~"∑r£èg.h
"

11 
	~"loˇl.h
"

12 
	~<°dlib.h
>

14 
	s∑øm_±r
 {

15 *
	m«me
;

16 
	mty≥
;

17 
	möpuây≥
;

18 *
	mv¨±r
;

19 *
	mcommít
;

20 *
	m£À˘
;

23 
	s∑øm_£˘i⁄
 {

24 *
	m«me
;

25 
∑øm_±r
 *
	m∑øms
;

28 
	src_£¨ch_èbÀ
 {

29 
∑øm_±r
 *
	m∑øm
;

30 
	muniq_pos
;

33 
rc_£¨ch_èbÀ
 *
	gRC_£¨ch_èbÀ
;

34 
	gRC_èbÀ_size
;

36 
	#P_INT
 0

	)

37 
	#P_SHORT
 1

	)

38 
	#P_CHARINT
 2

	)

39 
	#P_CHAR
 3

	)

40 
	#P_STRING
 4

	)

41 #i‡
deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

42 
	#P_SSLPATH
 5

	)

44 #ifde‡
USE_COLOR


45 
	#P_COLOR
 6

	)

47 #ifde‡
USE_M17N


48 
	#P_CODE
 7

	)

50 
	#P_PIXELS
 8

	)

51 
	#P_NZINT
 9

	)

52 
	#P_SCALE
 10

	)

55 #ifde‡
USE_M17N


56 
wc_˚s
 
	gO±i⁄Ch¨£t
 = 
WC_CES_US_ASCII
;

57 
	gO±i⁄Encode
 = 
FALSE
;

60 
	#CMT_HELPER
 
	`N_
("Exã∫Æ Võwî Sëup")

	)

61 
	#CMT_TABSTOP
 
	`N_
("Tab width i¿ch¨a˘îs")

	)

62 
	#CMT_INDENT_INCR
 
	`N_
("Indíàf‹ HTMLÑídîög")

	)

63 
	#CMT_PIXEL_PER_CHAR
 
	`N_
("Numbî o‡pixñ†≥∏ch¨a˘î (4.0...32.0)")

	)

64 
	#CMT_PIXEL_PER_LINE
 
	`N_
("Numbî o‡pixñ†≥∏löê(4.0...64.0)")

	)

65 
	#CMT_PAGERLINE
 
	`N_
("Numbî o‡ªmembîedÜöe†whí u£dá†®∑gî")

	)

66 
	#CMT_HISTORY
 
	`N_
("U£ URL hi°‹y")

	)

67 
	#CMT_HISTSIZE
 
	`N_
("Numbî o‡ªmembîed URL")

	)

68 
	#CMT_SAVEHIST
 
	`N_
("SavêURL hi°‹y")

	)

69 
	#CMT_FRAME
 
	`N_
("Rídî føme†autom©iˇŒy")

	)

70 
	#CMT_ARGV_IS_URL
 
	`N_
("Tª©árgumíàwôhouàschemêa†URL")

	)

71 
	#CMT_TSELF
 
	`N_
("U£ _£l‡a†deÁu…Å¨gë")

	)

72 
	#CMT_OPEN_TAB_BLANK
 
	`N_
("O≥¿lök o¿√wÅab i‡èrgë i†_bœnk o∏_√w")

	)

73 
	#CMT_OPEN_TAB_DL_LIST
 
	`N_
("O≥¿dow∆ﬂdÜi°Ö™ñ o¿√wÅab")

	)

74 
	#CMT_DISPLINK
 
	`N_
("Di•œyÜök URLáutom©iˇŒy")

	)

75 
	#CMT_DECODE_URL
 
	`N_
("Di•œy decoded URL")

	)

76 
	#CMT_DISPLINEINFO
 
	`N_
("Di•œy cuºíàlöênumbî")

	)

77 
	#CMT_DISP_IMAGE
 
	`N_
("Di•œy i∆öêimages")

	)

78 #ifde‡
USE_IMAGE


79 
	#CMT_AUTO_IMAGE
 
	`N_
("Lﬂd i∆öêimage†autom©iˇŒy")

	)

80 
	#CMT_MAX_LOAD_IMAGE
 
	`N_
("MaximumÖro˚s£†f‹Ö¨ÆÀ»imagêlﬂdög")

	)

81 
	#CMT_EXT_IMAGE_VIEWER
 
	`N_
("U£Éxã∫Æ imagêvõwî")

	)

82 
	#CMT_IMAGE_SCALE
 
	`N_
("SˇÀ o‡imagê(%)")

	)

83 
	#CMT_IMGDISPLAY
 
	`N_
("Exã∫Æ comm™dÅÿdi•œy image")

	)

84 
	#CMT_IMAGE_MAP_LIST
 
	`N_
("U£ÜökÜi° o‡imagêm≠")

	)

86 
	#CMT_MULTICOL
 
	`N_
("Di•œy fûê«me†ö mu…i-cﬁum¿f‹m©")

	)

87 
	#CMT_ALT_ENTITY
 
	`N_
("U£ ASCIIÉquivÆít†tÿdi•œyÉ¡ôõs")

	)

88 
	#CMT_GRAPHIC_CHAR
 
	`N_
("U£ gøphi¯ch¨ f‹ b‹dî o‡èbÀánd míu")

	)

89 
	#CMT_FOLD_TEXTAREA
 
	`N_
("FﬁdÜöe†ö TEXTAREA")

	)

90 
	#CMT_DISP_INS_DEL
 
	`N_
("Di•œy INS, DEL, Sánd STRIKEÉÀmít")

	)

91 
	#CMT_COLOR
 
	`N_
("Di•œy wôh cﬁ‹")

	)

92 
	#CMT_B_COLOR
 
	`N_
("Cﬁ‹ o‡n‹mÆ ch¨a˘î")

	)

93 
	#CMT_A_COLOR
 
	`N_
("Cﬁ‹ o‡™ch‹")

	)

94 
	#CMT_I_COLOR
 
	`N_
("Cﬁ‹ o‡imagêlök")

	)

95 
	#CMT_F_COLOR
 
	`N_
("Cﬁ‹ o‡f‹m")

	)

96 
	#CMT_ACTIVE_STYLE
 
	`N_
("E«bÀ cﬁ‹ög o‡a˘ivêlök")

	)

97 
	#CMT_C_COLOR
 
	`N_
("Cﬁ‹ o‡cuºíéyá˘ivêlök")

	)

98 
	#CMT_VISITED_ANCHOR
 
	`N_
("U£ visôedÜök cﬁ‹")

	)

99 
	#CMT_V_COLOR
 
	`N_
("Cﬁ‹ o‡visôedÜök")

	)

100 
	#CMT_BG_COLOR
 
	`N_
("Cﬁ‹ o‡background")

	)

101 
	#CMT_MARK_COLOR
 
	`N_
("Cﬁ‹ o‡m¨k")

	)

102 
	#CMT_USE_PROXY
 
	`N_
("U£Öroxy")

	)

103 
	#CMT_HTTP_PROXY
 
	`N_
("URL o‡HTTPÖroxy ho°")

	)

104 #ifde‡
USE_SSL


105 
	#CMT_HTTPS_PROXY
 
	`N_
("URL o‡HTTPSÖroxy ho°")

	)

107 #ifde‡
USE_GOPHER


108 
	#CMT_GOPHER_PROXY
 
	`N_
("URL o‡GOPHERÖroxy ho°")

	)

110 
	#CMT_FTP_PROXY
 
	`N_
("URL o‡FTPÖroxy ho°")

	)

111 
	#CMT_NO_PROXY
 
	`N_
("Domaö†tÿbêac˚s£d dúe˘ly (nÿ¥oxy)")

	)

112 
	#CMT_NOPROXY_NETADDR
 
	`N_
("CheckÇ›roxy byÇëw‹káddªss")

	)

113 
	#CMT_NO_CACHE
 
	`N_
("DißbÀ cache")

	)

114 #ifde‡
USE_NNTP


115 
	#CMT_NNTP_SERVER
 
	`N_
("New†£rvî")

	)

116 
	#CMT_NNTP_MODE
 
	`N_
("Modêo‡√w†£rvî")

	)

117 
	#CMT_MAX_NEWS
 
	`N_
("Numbî o‡√w†mesßges")

	)

119 
	#CMT_DNS_ORDER
 
	`N_
("Ordî o‡«mêªsﬁuti⁄")

	)

120 
	#CMT_DROOT
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/ (documíàroŸ)")

	)

121 
	#CMT_PDROOT
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/~u£r")

	)

122 
	#CMT_CGIBIN
 
	`N_
("Dúe˘‹y c‹ª•⁄dögÅÿ/cgi-bö")

	)

123 
	#CMT_CONFIRM_QQ
 
	`N_
("C⁄fúm whí quôtög wôh q")

	)

124 
	#CMT_CLOSE_TAB_BACK
 
	`N_
("Clo£Åab i‡buf„∏i†œ° whí back")

	)

125 #ifde‡
USE_MARK


126 
	#CMT_USE_MARK
 
	`N_
("E«bÀ m¨k o≥øti⁄s")

	)

128 
	#CMT_EMACS_LIKE_LINEEDIT
 
	`N_
("E«bÀ Emacs-°yÀÜöêedôög")

	)

129 
	#CMT_VI_PREC_NUM
 
	`N_
("E«bÀ vi-likênumîi¯¥efix")

	)

130 
	#CMT_LABEL_TOPLINE
 
	`N_
("Movêcurs‹Åÿt›Üöêwhí goögÅÿœbñ")

	)

131 
	#CMT_NEXTPAGE_TOPLINE
 
	`N_
("Movêcurs‹Åÿt›Üöêwhí movögÅÿ√xà∑ge")

	)

132 
	#CMT_FOLD_LINE
 
	`N_
("FﬁdÜöe†o‡∂aöÅexàfûe")

	)

133 
	#CMT_SHOW_NUM
 
	`N_
("ShowÜöênumbîs")

	)

134 
	#CMT_SHOW_SRCH_STR
 
	`N_
("Show sórch såög")

	)

135 
	#CMT_MIMETYPES
 
	`N_
("Li° o‡mime.ty≥†fûes")

	)

136 
	#CMT_MAILCAP
 
	`N_
("Li° o‡maûˇ∞fûes")

	)

137 
	#CMT_URIMETHODMAP
 
	`N_
("Li° o‡urimëhodm≠ fûes")

	)

138 
	#CMT_EDITOR
 
	`N_
("Edô‹")

	)

139 
	#CMT_MAILER
 
	`N_
("Maûî")

	)

140 
	#CMT_EXTBRZ
 
	`N_
("Exã∫Æ Brow£r")

	)

141 
	#CMT_EXTBRZ2
 
	`N_
("Sec⁄d Exã∫Æ Brow£r")

	)

142 
	#CMT_EXTBRZ3
 
	`N_
("Thúd Exã∫Æ Brow£r")

	)

143 
	#CMT_DISABLE_SECRET_SECURITY_CHECK
 
	`N_
("DißbÀ se¸ë fûê£curôy check")

	)

144 
	#CMT_PASSWDFILE
 
	`N_
("Passw‹d fûe")

	)

145 
	#CMT_PRE_FORM_FILE
 
	`N_
("Fûêf‹ sëtög f‹m o¿lﬂdög")

	)

146 
	#CMT_FTPPASS
 
	`N_
("Passw‹d f‹án⁄ymou†FTP (you∏maûáddªss)")

	)

147 
	#CMT_FTPPASS_HOSTNAMEGEN
 
	`N_
("Gíî©êdomaöÖ¨ào‡∑ssw‹d f‹ FTP")

	)

148 
	#CMT_USERAGENT
 
	`N_
("U£r-Agíàidítifiˇti⁄ såög")

	)

149 
	#CMT_ACCEPTENCODING
 
	`N_
("Ac˚±-Encodög hódî")

	)

150 
	#CMT_ACCEPTMEDIA
 
	`N_
("Ac˚± hódî")

	)

151 
	#CMT_ACCEPTLANG
 
	`N_
("Ac˚±-L™guagêhódî")

	)

152 
	#CMT_MARK_ALL_PAGES
 
	`N_
("Tª© URL-likê°rög†a†lök†öáŒÖages")

	)

153 
	#CMT_WRAP
 
	`N_
("Wø∞£¨ch")

	)

154 
	#CMT_VIEW_UNSEENOBJECTS
 
	`N_
("Di•œy un£í obje˘†”.g. bgimagêèg)")

	)

155 
	#CMT_AUTO_UNCOMPRESS
 
	`N_
("Uncom¥es†com¥es£d d©®autom©iˇŒy whí dow∆ﬂdög")

	)

156 #ifde‡
__EMX__


157 
	#CMT_BGEXTVIEW
 
	`N_
("Ru¿exã∫Æ võwî i¿®£∑øã sessi⁄")

	)

159 
	#CMT_BGEXTVIEW
 
	`N_
("Ru¿exã∫Æ võwî i¿thêbackground")

	)

161 
	#CMT_EXT_DIRLIST
 
	`N_
("U£Éxã∫ÆÖrogøm f‹ dúe˘‹yÜi°ög")

	)

162 
	#CMT_DIRLIST_CMD
 
	`N_
("URL o‡dúe˘‹yÜi°ög comm™d")

	)

163 #ifde‡
USE_DICT


164 
	#CMT_USE_DICTCOMMAND
 
	`N_
("E«bÀ di˘i⁄¨yÜooku∞through CGI")

	)

165 
	#CMT_DICTCOMMAND
 
	`N_
("URL o‡di˘i⁄¨yÜooku∞comm™d")

	)

167 #ifde‡
USE_GOOGLE


168 
	#CMT_USE_GOOGLECOMMAND
 
	`N_
("E«bÀ googÀ sórchÅhrough CGI")

	)

169 
	#CMT_GOOGLECOMMAND
 
	`N_
("URL o‡googÀ sórch comm™d")

	)

171 #ifde‡
USE_GOOGLE_LUCKY


172 
	#CMT_USE_GOOGLELUCKYCOMMAND
 
	`N_
("E«bÀ googÀÜucky sórchÅhrough CGI")

	)

173 
	#CMT_GOOGLELUCKYCOMMAND
 
	`N_
("URL o‡googÀÜucky sórch comm™d")

	)

175 
	#CMT_IGNORE_NULL_IMG_ALT
 
	`N_
("Di•œyÜökÇamêf‹ image†œckög ALT")

	)

176 
	#CMT_IFILE
 
	`N_
("Index fûêf‹ dúe˘‹õs")

	)

177 
	#CMT_RETRY_HTTP
 
	`N_
("Pª≥nd hâp://ÅÿURLáutom©iˇŒy")

	)

178 
	#CMT_DEFAULT_URL
 
	`N_
("DeÁu… vÆuêf‹ o≥n-URL comm™d")

	)

179 
	#CMT_DECODE_CTE
 
	`N_
("DecodêC⁄ã¡-Tøns„r-Encodög whí savög")

	)

180 
	#CMT_PRESERVE_TIMESTAMP
 
	`N_
("Pª£rvêtime°am∞whí savög")

	)

181 #ifde‡
USE_MOUSE


182 
	#CMT_MOUSE
 
	`N_
("E«bÀ mou£")

	)

183 
	#CMT_REVERSE_MOUSE
 
	`N_
("S¸ﬁ»öÑevî£ dúe˘i⁄ o‡mou£ døg")

	)

184 
	#CMT_RELATIVE_WHEEL_SCROLL
 
	`N_
("Behavi‹ o‡whì»s¸ﬁ»•ìd")

	)

185 
	#CMT_RELATIVE_WHEEL_SCROLL_RATIO
 
	`N_
("(A o∆y)S¸ﬁ»by # (%Ëo‡s¸ìn")

	)

186 
	#CMT_FIXED_WHEEL_SCROLL_COUNT
 
	`N_
("(B o∆y)S¸ﬁ»by #Üöes")

	)

188 
	#CMT_CLEAR_BUF
 
	`N_
("Fªêmem‹y o‡undi•œyed buf„rs")

	)

189 
	#CMT_NOSENDREFERER
 
	`N_
("Suµªs†`Re„ªr:' hódî")

	)

190 
	#CMT_IGNORE_CASE
 
	`N_
("Sórch ca£-ö£nsôivñy")

	)

191 
	#CMT_USE_LESSOPEN
 
	`N_
("U£ LESSOPEN")

	)

192 #ifde‡
USE_SSL


193 #ifde‡
USE_SSL_VERIFY


194 
	#CMT_SSL_VERIFY_SERVER
 
	`N_
("Pîf‹m SSL sîvî vîifiˇti⁄")

	)

195 
	#CMT_SSL_CERT_FILE
 
	`N_
("PEMÉncoded cîtifiˇã fûêo‡˛õ¡")

	)

196 
	#CMT_SSL_KEY_FILE
 
	`N_
("PEMÉncodedÖriv©êkey fûêo‡˛õ¡")

	)

197 
	#CMT_SSL_CA_PATH
 
	`N_
("P©hÅÿdúe˘‹y f‹ PEMÉncoded cîtifiˇã†o‡CAs")

	)

198 
	#CMT_SSL_CA_FILE
 
	`N_
("Fûêc⁄si°ög o‡PEMÉncoded cîtifiˇã†o‡CAs")

	)

200 
	#CMT_SSL_FORBID_METHOD
 
	`N_
("Li° o‡f‹biddí SSL mëhod†(2: SSLv2, 3: SSLv3,Å:TLSv1)")

	)

202 #ifde‡
USE_COOKIE


203 
	#CMT_USECOOKIE
 
	`N_
("E«bÀ cookõÖro˚ssög")

	)

204 
	#CMT_SHOWCOOKIE
 
	`N_
("Pröà®mesßgêwhíÑe˚ivögá cookõ")

	)

205 
	#CMT_ACCEPTCOOKIE
 
	`N_
("Ac˚± cookõs")

	)

206 
	#CMT_ACCEPTBADCOOKIE
 
	`N_
("A˘i⁄Åÿbêèkí o¿övÆid cookõ")

	)

207 
	#CMT_COOKIE_REJECT_DOMAINS
 
	`N_
("Domaö†tÿªje˘ cookõ†‰om")

	)

208 
	#CMT_COOKIE_ACCEPT_DOMAINS
 
	`N_
("Domaö†tÿac˚± cookõ†‰om")

	)

210 
	#CMT_FOLLOW_REDIRECTION
 
	`N_
("Numbî o‡ªdúe˘i⁄†tÿfﬁlow")

	)

211 
	#CMT_META_REFRESH
 
	`N_
("E«bÀÖro˚ssög o‡mëa-ª‰eshÅag")

	)

213 #ifde‡
USE_MIGEMO


214 
	#CMT_USE_MIGEMO
 
	`N_
("E«bÀ Migemÿ(Roma-jò£¨ch)")

	)

215 
	#CMT_MIGEMO_COMMAND
 
	`N_
("Migemÿcomm™d")

	)

218 #ifde‡
USE_M17N


219 
	#CMT_DISPLAY_CHARSET
 
	`N_
("Di•œy ch¨£t")

	)

220 
	#CMT_DOCUMENT_CHARSET
 
	`N_
("DeÁu… documíàch¨£t")

	)

221 
	#CMT_AUTO_DETECT
 
	`N_
("Autom©i¯ch¨£àdëe˘ whíÜﬂdög")

	)

222 
	#CMT_SYSTEM_CHARSET
 
	`N_
("Sy°em ch¨£t")

	)

223 
	#CMT_FOLLOW_LOCALE
 
	`N_
("Sy°em ch¨£àfﬁlow†loˇÀ(LC_CTYPE)")

	)

224 
	#CMT_EXT_HALFDUMP
 
	`N_
("OuçuàhÆfdum∞wôh di•œy ch¨£t")

	)

225 
	#CMT_USE_WIDE
 
	`N_
("U£ mu…òcﬁum¿ch¨a˘îs")

	)

226 
	#CMT_USE_COMBINING
 
	`N_
("U£ comböög ch¨a˘îs")

	)

227 
	#CMT_USE_LANGUAGE_TAG
 
	`N_
("U£ Unicodêœnguagêègs")

	)

228 
	#CMT_UCS_CONV
 
	`N_
("Ch¨£àc⁄vîsi⁄ usög Unicodêm≠")

	)

229 
	#CMT_PRE_CONV
 
	`N_
("Ch¨£àc⁄vîsi⁄ whíÜﬂdög")

	)

230 
	#CMT_SEARCH_CONV
 
	`N_
("Adju° sórch såög f‹ documíàch¨£t")

	)

231 
	#CMT_FIX_WIDTH_CONV
 
	`N_
("Fix ch¨a˘î width whí c⁄vîsi⁄")

	)

232 
	#CMT_USE_GB12345_MAP
 
	`N_
("U£ GB 12345 Unicodêm≠ in°ód o‡GB 2312's")

	)

233 
	#CMT_USE_JISX0201
 
	`N_
("U£ JIS X 0201 Rom™ f‹ ISO-2022-JP")

	)

234 
	#CMT_USE_JISC6226
 
	`N_
("U£ JIS C 6226:1978 f‹ ISO-2022-JP")

	)

235 
	#CMT_USE_JISX0201K
 
	`N_
("U£ JIS X 0201 K©ak™a")

	)

236 
	#CMT_USE_JISX0212
 
	`N_
("U£ JIS X 0212:1990 (SuµÀmíè»K™ji)")

	)

237 
	#CMT_USE_JISX0213
 
	`N_
("U£ JIS X 0213:2000 (2000JIS)")

	)

238 
	#CMT_STRICT_ISO2022
 
	`N_
("Såi˘ ISO-2022-JP/KR/CN")

	)

239 
	#CMT_GB18030_AS_UCS
 
	`N_
("Tª© 4 byã†ch¨. o‡GB18030á†Unicode")

	)

242 
	#CMT_KEYMAP_FILE
 
	`N_
("keym≠ fûe")

	)

244 
	#PI_TEXT
 0

	)

245 
	#PI_ONOFF
 1

	)

246 
	#PI_SEL_C
 2

	)

247 #ifde‡
USE_M17N


248 
	#PI_CODE
 3

	)

251 
	s£l_c
 {

252 
	mvÆue
;

253 *
	mcvÆue
;

254 *
	mãxt
;

257 #ifde‡
USE_COLOR


258 
£l_c
 
	gcﬁ‹°r
[] = {

259 {0, "bœck", 
N_
("black")},

260 {1, "ªd", 
N_
("red")},

261 {2, "gªí", 
N_
("green")},

262 {3, "yñlow", 
N_
("yellow")},

263 {4, "blue", 
N_
("blue")},

264 {5, "magíè", 
N_
("magenta")},

265 {6, "cy™", 
N_
("cyan")},

266 {7, "whôe", 
N_
("white")},

267 {8, "ãrmöÆ", 
N_
("terminal")},

268 {0, 
NULL
, NULL}

273 
	#N_STR
(
x
Ë#x

	)

274 
	#N_S
(
x
Ë(x), 
	`N_STR
(x)

	)

276 
	gn_s
[][2] = {

281 
	#N_S
(
x
Ë(x), 
n_s
[(x)]

	)

285 
£l_c
 
	gdeÁu…uæs
[] = {

286 {
N_S
(
DEFAULT_URL_EMPTY
), 
N_
("none")},

287 {
N_S
(
DEFAULT_URL_CURRENT
), 
N_
("current URL")},

288 {
N_S
(
DEFAULT_URL_LINK
), 
N_
("link URL")},

289 {0, 
NULL
, NULL}

292 
£l_c
 
	gdi•œyösdñ
[] = {

293 {
N_S
(
DISPLAY_INS_DEL_SIMPLE
), 
N_
("simple")},

294 {
N_S
(
DISPLAY_INS_DEL_NORMAL
), 
N_
("useÅag")},

295 {
N_S
(
DISPLAY_INS_DEL_FONTIFY
), 
N_
("fontify")},

296 {0, 
NULL
, NULL}

299 #ifde‡
USE_MOUSE


300 
£l_c
 
	gwhìlmode
[] = {

301 {
TRUE
, "1", 
N_
("A:relativeÅo screen height")},

302 {
FALSE
, "0", 
N_
("B:fixed speed")},

303 {0, 
NULL
, NULL}

307 #ifde‡
INET6


308 
£l_c
 
	gdns‹dîs
[] = {

309 {
N_S
(
DNS_ORDER_UNSPEC
), 
N_
("unspecified")},

310 {
N_S
(
DNS_ORDER_INET_INET6
), 
N_
("inet inet6")},

311 {
N_S
(
DNS_ORDER_INET6_INET
), 
N_
("inet6 inet")},

312 {
N_S
(
DNS_ORDER_INET_ONLY
), 
N_
("inet only")},

313 {
N_S
(
DNS_ORDER_INET6_ONLY
), 
N_
("inet6 only")},

314 {0, 
NULL
, NULL}

318 #ifde‡
USE_COOKIE


319 
£l_c
 
	gbadcookõ°r
[] = {

320 {
N_S
(
ACCEPT_BAD_COOKIE_DISCARD
), 
N_
("discard")},

322 {
N_S
(
ACCEPT_BAD_COOKIE_ACCEPT
), 
N_
("accept")},

324 {
N_S
(
ACCEPT_BAD_COOKIE_ASK
), 
N_
("ask")},

325 {0, 
NULL
, NULL}

329 #ifde‡
USE_M17N


330 
wc_˚s_li°
 *
	gdi•œy_ch¨£t_°r
 = 
NULL
;

331 
wc_˚s_li°
 *
	gdocumít_ch¨£t_°r
 = 
NULL
;

332 
wc_˚s_li°
 *
	gsy°em_ch¨£t_°r
 = 
NULL
;

333 
£l_c
 
	gauto_dëe˘_°r
[] = {

334 {
N_S
(
WC_OPT_DETECT_OFF
), 
N_
("OFF")},

335 {
N_S
(
WC_OPT_DETECT_ISO_2022
), 
N_
("Only ISO 2022")},

336 {
N_S
(
WC_OPT_DETECT_ON
), 
N_
("ON")},

337 {0, 
NULL
, NULL}

341 
∑øm_±r
 
	g∑øms1
[] = {

342 {"èb°›", 
P_NZINT
, 
PI_TEXT
, (*)&
Tab°›
, 
CMT_TABSTOP
, 
NULL
},

343 {"ödít_ö¸", 
P_NZINT
, 
PI_TEXT
, (*)&
IndítIn¸
, 
CMT_INDENT_INCR
,

344 
NULL
},

345 {"pixñ_≥r_ch¨", 
P_PIXELS
, 
PI_TEXT
, (*)&
pixñ_≥r_ch¨
,

346 
CMT_PIXEL_PER_CHAR
, 
NULL
},

347 #ifde‡
USE_IMAGE


348 {"pixñ_≥r_löe", 
P_PIXELS
, 
PI_TEXT
, (*)&
pixñ_≥r_löe
,

349 
CMT_PIXEL_PER_LINE
, 
NULL
},

351 {"‰ame", 
P_CHARINT
, 
PI_ONOFF
, (*)&
RídîFøme
, 
CMT_FRAME
, 
NULL
},

352 {"èrgë_£lf", 
P_CHARINT
, 
PI_ONOFF
, (*)&
T¨gëSñf
, 
CMT_TSELF
, 
NULL
},

353 {"›í_èb_bœnk", 
P_INT
, 
PI_ONOFF
, (*)&
›í_èb_bœnk
,

354 
CMT_OPEN_TAB_BLANK
, 
NULL
},

355 {"›í_èb_dl_li°", 
P_INT
, 
PI_ONOFF
, (*)&
›í_èb_dl_li°
,

356 
CMT_OPEN_TAB_DL_LIST
, 
NULL
},

357 {"di•œy_lök", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyLök
, 
CMT_DISPLINK
,

358 
NULL
},

359 {"decode_uæ", 
P_INT
, 
PI_ONOFF
, (*)&
DecodeURL
, 
CMT_DECODE_URL
, 
NULL
},

360 {"di•œy_löeöfo", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyLöeInfo
,

361 
CMT_DISPLINEINFO
, 
NULL
},

362 {"ext_dúli°", 
P_INT
, 
PI_ONOFF
, (*)&
U£Exã∫ÆDúBuf„r
,

363 
CMT_EXT_DIRLIST
, 
NULL
},

364 {"dúli°_cmd", 
P_STRING
, 
PI_TEXT
, (*)&
DúBuf„rComm™d
,

365 
CMT_DIRLIST_CMD
, 
NULL
},

366 #ifde‡
USE_DICT


367 {"u£_di˘comm™d", 
P_INT
, 
PI_ONOFF
, (*)&
U£Di˘Comm™d
,

368 
CMT_USE_DICTCOMMAND
, 
NULL
},

369 {"di˘comm™d", 
P_STRING
, 
PI_TEXT
, (*)&
Di˘Comm™d
,

370 
CMT_DICTCOMMAND
, 
NULL
},

372 #ifde‡
USE_GOOGLE


373 {"u£_googÀcomm™d", 
P_INT
, 
PI_ONOFF
, (*)&
U£GoogÀComm™d
,

374 
CMT_USE_GOOGLECOMMAND
, 
NULL
},

375 {"googÀcomm™d", 
P_STRING
, 
PI_TEXT
, (*)&
GoogÀComm™d
,

376 
CMT_GOOGLECOMMAND
, 
NULL
},

378 #ifde‡
USE_GOOGLE_LUCKY


379 {"u£_googÀluckycomm™d", 
P_INT
, 
PI_ONOFF
, (*)&
U£GoogÀLuckyComm™d
,

380 
CMT_USE_GOOGLELUCKYCOMMAND
, 
NULL
},

381 {"googÀluckycomm™d", 
P_STRING
, 
PI_TEXT
, (*)&
GoogÀLuckyComm™d
,

382 
CMT_GOOGLELUCKYCOMMAND
, 
NULL
},

384 {"mu…icﬁ", 
P_INT
, 
PI_ONOFF
, (*)&
mu…icﬁLi°
, 
CMT_MULTICOL
, 
NULL
},

385 {"Æt_ítôy", 
P_CHARINT
, 
PI_ONOFF
, (*)&
U£A…E¡ôy
, 
CMT_ALT_ENTITY
,

386 
NULL
},

387 {"gøphic_ch¨", 
P_CHARINT
, 
PI_ONOFF
, (*)&
U£GøphicCh¨
,

388 
CMT_GRAPHIC_CHAR
, 
NULL
},

389 {"fﬁd_ãxèªa", 
P_CHARINT
, 
PI_ONOFF
, (*)&
FﬁdTexèªa
,

390 
CMT_FOLD_TEXTAREA
, 
NULL
},

391 {"di•œy_ös_dñ", 
P_INT
, 
PI_SEL_C
, (*)&
di•œyInsDñ
,

392 
CMT_DISP_INS_DEL
, 
di•œyösdñ
},

393 {"ign‹e_nuŒ_img_Æt", 
P_INT
, 
PI_ONOFF
, (*)&
ign‹e_nuŒ_img_Æt
,

394 
CMT_IGNORE_NULL_IMG_ALT
, 
NULL
},

395 {"võw_un£íobje˘", 
P_INT
, 
PI_ONOFF
, (*)&
võw_un£íobje˘
,

396 
CMT_VIEW_UNSEENOBJECTS
, 
NULL
},

398 {"di•œy_image", 
P_INT
, 
PI_ONOFF
, (*)&
di•œyImage
, 
CMT_DISP_IMAGE
,

399 
NULL
},

400 #ifde‡
USE_IMAGE


401 {"auto_image", 
P_INT
, 
PI_ONOFF
, (*)&
autoImage
, 
CMT_AUTO_IMAGE
, 
NULL
},

402 {"max_lﬂd_image", 
P_INT
, 
PI_TEXT
, (*)&
maxLﬂdImage
,

403 
CMT_MAX_LOAD_IMAGE
, 
NULL
},

404 {"ext_image_võwî", 
P_INT
, 
PI_ONOFF
, (*)&
u£ExtImageVõwî
,

405 
CMT_EXT_IMAGE_VIEWER
, 
NULL
},

406 {"image_sˇÀ", 
P_SCALE
, 
PI_TEXT
, (*)&
image_sˇÀ
, 
CMT_IMAGE_SCALE
,

407 
NULL
},

408 {"imgdi•œy", 
P_STRING
, 
PI_TEXT
, (*)&
Imgdi•œy
, 
CMT_IMGDISPLAY
,

409 
NULL
},

410 {"image_m≠_li°", 
P_INT
, 
PI_ONOFF
, (*)&
image_m≠_li°
,

411 
CMT_IMAGE_MAP_LIST
, 
NULL
},

413 {"fﬁd_löe", 
P_INT
, 
PI_ONOFF
, (*)&
FﬁdLöe
, 
CMT_FOLD_LINE
, 
NULL
},

414 {"show_ um", 
P_INT
, 
PI_ONOFF
, (*)&
showLöeNum
, 
CMT_SHOW_NUM
, 
NULL
},

415 {"show_§ch_°r", 
P_INT
, 
PI_ONOFF
, (*)&
show_§ch_°r
,

416 
CMT_SHOW_SRCH_STR
, 
NULL
},

417 {"œbñ_t›löe", 
P_INT
, 
PI_ONOFF
, (*)&
œbñ_t›löe
,

418 
CMT_LABEL_TOPLINE
, 
NULL
},

419 {"√xçage_t›löe", 
P_INT
, 
PI_ONOFF
, (*)&
√xçage_t›löe
,

420 
CMT_NEXTPAGE_TOPLINE
, 
NULL
},

421 {
NULL
, 0, 0, NULL, NULL, NULL},

424 #ifde‡
USE_COLOR


425 
∑øm_±r
 
	g∑øms2
[] = {

426 {"cﬁ‹", 
P_INT
, 
PI_ONOFF
, (*)&
u£Cﬁ‹
, 
CMT_COLOR
, 
NULL
},

427 {"basic_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
basic_cﬁ‹
, 
CMT_B_COLOR
,

428 (*)
cﬁ‹°r
},

429 {"™ch‹_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
™ch‹_cﬁ‹
, 
CMT_A_COLOR
,

430 (*)
cﬁ‹°r
},

431 {"image_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
image_cﬁ‹
, 
CMT_I_COLOR
,

432 (*)
cﬁ‹°r
},

433 {"f‹m_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
f‹m_cﬁ‹
, 
CMT_F_COLOR
,

434 (*)
cﬁ‹°r
},

435 #ifde‡
USE_BG_COLOR


436 {"m¨k_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
m¨k_cﬁ‹
, 
CMT_MARK_COLOR
,

437 (*)
cﬁ‹°r
},

438 {"bg_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
bg_cﬁ‹
, 
CMT_BG_COLOR
,

439 (*)
cﬁ‹°r
},

441 {"a˘ive_°yÀ", 
P_INT
, 
PI_ONOFF
, (*)&
u£A˘iveCﬁ‹
,

442 
CMT_ACTIVE_STYLE
, 
NULL
},

443 {"a˘ive_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
a˘ive_cﬁ‹
, 
CMT_C_COLOR
,

444 (*)
cﬁ‹°r
},

445 {"visôed_™ch‹", 
P_INT
, 
PI_ONOFF
, (*)&
u£VisôedCﬁ‹
,

446 
CMT_VISITED_ANCHOR
, 
NULL
},

447 {"visôed_cﬁ‹", 
P_COLOR
, 
PI_SEL_C
, (*)&
visôed_cﬁ‹
, 
CMT_V_COLOR
,

448 (*)
cﬁ‹°r
},

449 {
NULL
, 0, 0, NULL, NULL, NULL},

454 
∑øm_±r
 
	g∑øms3
[] = {

455 {"∑gîlöe", 
P_NZINT
, 
PI_TEXT
, (*)&
PagîMax
, 
CMT_PAGERLINE
, 
NULL
},

456 #ifde‡
USE_HISTORY


457 {"u£_hi°‹y", 
P_INT
, 
PI_ONOFF
, (*)&
U£Hi°‹y
, 
CMT_HISTORY
, 
NULL
},

458 {"hi°‹y", 
P_INT
, 
PI_TEXT
, (*)&
URLHi°Size
, 
CMT_HISTSIZE
, 
NULL
},

459 {"ßve_hi°", 
P_INT
, 
PI_ONOFF
, (*)&
SaveURLHi°
, 
CMT_SAVEHIST
, 
NULL
},

461 {"c⁄fúm_qq", 
P_INT
, 
PI_ONOFF
, (*)&
c⁄fúm_⁄_quô
, 
CMT_CONFIRM_QQ
,

462 
NULL
},

463 {"˛o£_èb_back", 
P_INT
, 
PI_ONOFF
, (*)&
˛o£_èb_back
,

464 
CMT_CLOSE_TAB_BACK
, 
NULL
},

465 #ifde‡
USE_MARK


466 {"m¨k", 
P_INT
, 
PI_ONOFF
, (*)&
u£_m¨k
, 
CMT_USE_MARK
, 
NULL
},

468 {"emacs_like_löìdô", 
P_INT
, 
PI_ONOFF
, (*)&
emacs_like_löìdô
,

469 
CMT_EMACS_LIKE_LINEEDIT
, 
NULL
},

470 {"vi_¥ec_num", 
P_INT
, 
PI_ONOFF
, (*)&
vi_¥ec_num
, 
CMT_VI_PREC_NUM
,

471 
NULL
},

472 {"m¨k_Æl_∑ges", 
P_INT
, 
PI_ONOFF
, (*)&
M¨kAŒPages
,

473 
CMT_MARK_ALL_PAGES
, 
NULL
},

474 {"wøp_£¨ch", 
P_INT
, 
PI_ONOFF
, (*)&
WøpDeÁu…
, 
CMT_WRAP
, 
NULL
},

475 {"ign‹eˇ£_£¨ch", 
P_INT
, 
PI_ONOFF
, (*)&
Ign‹eCa£
,

476 
CMT_IGNORE_CASE
, 
NULL
},

477 #ifde‡
USE_MIGEMO


478 {"u£_migemo", 
P_INT
, 
PI_ONOFF
, (*)&
u£_migemo
, 
CMT_USE_MIGEMO
,

479 
NULL
},

480 {"migemo_comm™d", 
P_STRING
, 
PI_TEXT
, (*)&
migemo_comm™d
,

481 
CMT_MIGEMO_COMMAND
, 
NULL
},

483 #ifde‡
USE_MOUSE


484 {"u£_mou£", 
P_INT
, 
PI_ONOFF
, (*)&
u£_mou£
, 
CMT_MOUSE
, 
NULL
},

485 {"ªvî£_mou£", 
P_INT
, 
PI_ONOFF
, (*)&
ªvî£_mou£
,

486 
CMT_REVERSE_MOUSE
, 
NULL
},

487 {"ªœtive_whìl_s¸ﬁl", 
P_INT
, 
PI_SEL_C
, (*)&
ªœtive_whìl_s¸ﬁl
,

488 
CMT_RELATIVE_WHEEL_SCROLL
, (*)
whìlmode
},

489 {"ªœtive_whìl_s¸ﬁl_øtio", 
P_INT
, 
PI_TEXT
,

490 (*)&
ªœtive_whìl_s¸ﬁl_øtio
,

491 
CMT_RELATIVE_WHEEL_SCROLL_RATIO
, 
NULL
},

492 {"fixed_whìl_s¸ﬁl_cou¡", 
P_INT
, 
PI_TEXT
,

493 (*)&
fixed_whìl_s¸ﬁl_cou¡
,

494 
CMT_FIXED_WHEEL_SCROLL_COUNT
, 
NULL
},

496 {"˛ór_buf„r", 
P_INT
, 
PI_ONOFF
, (*)&
˛ór_buf„r
, 
CMT_CLEAR_BUF
,

497 
NULL
},

498 {"decode_˘e", 
P_CHARINT
, 
PI_ONOFF
, (*)&
DecodeCTE
, 
CMT_DECODE_CTE
,

499 
NULL
},

500 {"auto_uncom¥ess", 
P_CHARINT
, 
PI_ONOFF
, (*)&
AutoUncom¥ess
,

501 
CMT_AUTO_UNCOMPRESS
, 
NULL
},

502 {"¥e£rve_time°amp", 
P_CHARINT
, 
PI_ONOFF
, (*)&
Pª£rveTime°amp
,

503 
CMT_PRESERVE_TIMESTAMP
, 
NULL
},

504 {"keym≠_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
keym≠_fûe
, 
CMT_KEYMAP_FILE
,

505 
NULL
},

506 {
NULL
, 0, 0, NULL, NULL, NULL},

509 
∑øm_±r
 
	g∑øms4
[] = {

510 {"u£_¥oxy", 
P_CHARINT
, 
PI_ONOFF
, (*)&
u£_¥oxy
, 
CMT_USE_PROXY
,

511 
NULL
},

512 {"hâp_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
HTTP_¥oxy
, 
CMT_HTTP_PROXY
,

513 
NULL
},

514 #ifde‡
USE_SSL


515 {"hâps_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
HTTPS_¥oxy
, 
CMT_HTTPS_PROXY
,

516 
NULL
},

518 #ifde‡
USE_GOPHER


519 {"g›hî_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
GOPHER_¥oxy
,

520 
CMT_GOPHER_PROXY
, 
NULL
},

522 {"·p_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
FTP_¥oxy
, 
CMT_FTP_PROXY
, 
NULL
},

523 {"no_¥oxy", 
P_STRING
, 
PI_TEXT
, (*)&
NO_¥oxy
, 
CMT_NO_PROXY
, 
NULL
},

524 {"n›roxy_√èddr", 
P_INT
, 
PI_ONOFF
, (*)&
NO¥oxy_√èddr
,

525 
CMT_NOPROXY_NETADDR
, 
NULL
},

526 {"no_ˇche", 
P_CHARINT
, 
PI_ONOFF
, (*)&
NoCache
, 
CMT_NO_CACHE
, 
NULL
},

528 {
NULL
, 0, 0, NULL, NULL, NULL},

531 
∑øm_±r
 
	g∑øms5
[] = {

532 {"documít_roŸ", 
P_STRING
, 
PI_TEXT
, (*)&
documít_roŸ
, 
CMT_DROOT
,

533 
NULL
},

534 {"≥rs⁄Æ_documít_roŸ", 
P_STRING
, 
PI_TEXT
,

535 (*)&
≥rs⁄Æ_documít_roŸ
, 
CMT_PDROOT
, 
NULL
},

536 {"cgi_bö", 
P_STRING
, 
PI_TEXT
, (*)&
cgi_bö
, 
CMT_CGIBIN
, 
NULL
},

537 {"ödex_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
ödex_fûe
, 
CMT_IFILE
, 
NULL
},

538 {
NULL
, 0, 0, NULL, NULL, NULL},

541 
∑øm_±r
 
	g∑øms6
[] = {

542 {"mime_ty≥s", 
P_STRING
, 
PI_TEXT
, (*)&
mimëy≥s_fûes
, 
CMT_MIMETYPES
,

543 
NULL
},

544 {"maûˇp", 
P_STRING
, 
PI_TEXT
, (*)&
maûˇp_fûes
, 
CMT_MAILCAP
, 
NULL
},

545 #ifde‡
USE_EXTERNAL_URI_LOADER


546 {"urimëhodm≠", 
P_STRING
, 
PI_TEXT
, (*)&
urimëhodm≠_fûes
,

547 
CMT_URIMETHODMAP
, 
NULL
},

549 {"edô‹", 
P_STRING
, 
PI_TEXT
, (*)&
Edô‹
, 
CMT_EDITOR
, 
NULL
},

550 {"maûî", 
P_STRING
, 
PI_TEXT
, (*)&
Maûî
, 
CMT_MAILER
, 
NULL
},

551 {"extbrow£r", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r
, 
CMT_EXTBRZ
, 
NULL
},

552 {"extbrow£r2", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r2
, 
CMT_EXTBRZ2
,

553 
NULL
},

554 {"extbrow£r3", 
P_STRING
, 
PI_TEXT
, (*)&
ExtBrow£r3
, 
CMT_EXTBRZ3
,

555 
NULL
},

556 {"bgextvõwî", 
P_INT
, 
PI_ONOFF
, (*)&
BackgroundExtVõwî
,

557 
CMT_BGEXTVIEW
, 
NULL
},

558 {"u£_Àss›í", 
P_INT
, 
PI_ONOFF
, (*)&
u£_Àss›í
, 
CMT_USE_LESSOPEN
,

559 
NULL
},

560 {
NULL
, 0, 0, NULL, NULL, NULL},

563 #ifde‡
USE_SSL


564 
∑øm_±r
 
	g∑øms7
[] = {

565 {"s¶_f‹bid_mëhod", 
P_STRING
, 
PI_TEXT
, (*)&
s¶_f‹bid_mëhod
,

566 
CMT_SSL_FORBID_METHOD
, 
NULL
},

567 #ifde‡
USE_SSL_VERIFY


568 {"s¶_vîify_£rvî", 
P_INT
, 
PI_ONOFF
, (*)&
s¶_vîify_£rvî
,

569 
CMT_SSL_VERIFY_SERVER
, 
NULL
},

570 {"s¶_˚π_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_˚π_fûe
,

571 
CMT_SSL_CERT_FILE
, 
NULL
},

572 {"s¶_key_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_key_fûe
,

573 
CMT_SSL_KEY_FILE
, 
NULL
},

574 {"s¶_ˇ_∑th", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_ˇ_∑th
, 
CMT_SSL_CA_PATH
,

575 
NULL
},

576 {"s¶_ˇ_fûe", 
P_SSLPATH
, 
PI_TEXT
, (*)&
s¶_ˇ_fûe
, 
CMT_SSL_CA_FILE
,

577 
NULL
},

579 {
NULL
, 0, 0, NULL, NULL, NULL},

583 #ifde‡
USE_COOKIE


584 
∑øm_±r
 
	g∑øms8
[] = {

585 {"u£_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
u£_cookõ
, 
CMT_USECOOKIE
, 
NULL
},

586 {"show_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
show_cookõ
,

587 
CMT_SHOWCOOKIE
, 
NULL
},

588 {"ac˚±_cookõ", 
P_INT
, 
PI_ONOFF
, (*)&
ac˚±_cookõ
,

589 
CMT_ACCEPTCOOKIE
, 
NULL
},

590 {"ac˚±_bad_cookõ", 
P_INT
, 
PI_SEL_C
, (*)&
ac˚±_bad_cookõ
,

591 
CMT_ACCEPTBADCOOKIE
, (*)
badcookõ°r
},

592 {"cookõ_ªje˘_domaös", 
P_STRING
, 
PI_TEXT
,

593 (*)&
cookõ_ªje˘_domaös
, 
CMT_COOKIE_REJECT_DOMAINS
, 
NULL
},

594 {"cookõ_ac˚±_domaös", 
P_STRING
, 
PI_TEXT
,

595 (*)&
cookõ_ac˚±_domaös
, 
CMT_COOKIE_ACCEPT_DOMAINS
, 
NULL
},

596 {
NULL
, 0, 0, NULL, NULL, NULL},

600 
∑øm_±r
 
	g∑øms9
[] = {

601 {"∑sswd_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
∑sswd_fûe
, 
CMT_PASSWDFILE
,

602 
NULL
},

603 {"dißbÀ_£¸ë_£curôy_check", 
P_INT
, 
PI_ONOFF
,

604 (*)&
dißbÀ_£¸ë_£curôy_check
, 
CMT_DISABLE_SECRET_SECURITY_CHECK
,

605 
NULL
},

606 {"·µasswd", 
P_STRING
, 
PI_TEXT
, (*)&
·µasswd
, 
CMT_FTPPASS
, 
NULL
},

607 {"·µass_ho°«megí", 
P_INT
, 
PI_ONOFF
, (*)&
·µass_ho°«megí
,

608 
CMT_FTPPASS_HOSTNAMEGEN
, 
NULL
},

609 {"¥e_f‹m_fûe", 
P_STRING
, 
PI_TEXT
, (*)&
¥e_f‹m_fûe
,

610 
CMT_PRE_FORM_FILE
, 
NULL
},

611 {"u£r_agít", 
P_STRING
, 
PI_TEXT
, (*)&
U£rAgít
, 
CMT_USERAGENT
, 
NULL
},

612 {"no_ª„ªr", 
P_INT
, 
PI_ONOFF
, (*)&
NoSídRe„ªr
, 
CMT_NOSENDREFERER
,

613 
NULL
},

614 {"ac˚±_œnguage", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±L™g
, 
CMT_ACCEPTLANG
,

615 
NULL
},

616 {"ac˚±_ícodög", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±Encodög
,

617 
CMT_ACCEPTENCODING
,

618 
NULL
},

619 {"ac˚±_medü", 
P_STRING
, 
PI_TEXT
, (*)&
Ac˚±Medü
, 
CMT_ACCEPTMEDIA
,

620 
NULL
},

621 {"¨gv_is_uæ", 
P_CHARINT
, 
PI_ONOFF
, (*)&
ArgvIsURL
, 
CMT_ARGV_IS_URL
,

622 
NULL
},

623 {"ªåy_hâp", 
P_INT
, 
PI_ONOFF
, (*)&
ªåyAsHâp
, 
CMT_RETRY_HTTP
,

624 
NULL
},

625 {"deÁu…_uæ", 
P_INT
, 
PI_SEL_C
, (*)&
DeÁu…URLSåög
,

626 
CMT_DEFAULT_URL
, (*)
deÁu…uæs
},

627 {"fﬁlow_ªdúe˘i⁄", 
P_INT
, 
PI_TEXT
, &
FﬁlowRedúe˘i⁄
,

628 
CMT_FOLLOW_REDIRECTION
, 
NULL
},

629 {"mëa_ª‰esh", 
P_CHARINT
, 
PI_ONOFF
, (*)&
MëaRe‰esh
,

630 
CMT_META_REFRESH
, 
NULL
},

631 #ifde‡
INET6


632 {"dns_‹dî", 
P_INT
, 
PI_SEL_C
, (*)&
DNS_‹dî
, 
CMT_DNS_ORDER
,

633 (*)
dns‹dîs
},

635 #ifde‡
USE_NNTP


636 {"¬ç£rvî", 
P_STRING
, 
PI_TEXT
, (*)&
NNTP_£rvî
, 
CMT_NNTP_SERVER
,

637 
NULL
},

638 {"¬çmode", 
P_STRING
, 
PI_TEXT
, (*)&
NNTP_mode
, 
CMT_NNTP_MODE
, 
NULL
},

639 {"max_√ws", 
P_INT
, 
PI_TEXT
, (*)&
MaxNewsMesßge
, 
CMT_MAX_NEWS
, 
NULL
},

641 {
NULL
, 0, 0, NULL, NULL, NULL},

644 #ifde‡
USE_M17N


645 
∑øm_±r
 
	g∑øms10
[] = {

646 {"di•œy_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
Di•œyCh¨£t
,

647 
CMT_DISPLAY_CHARSET
, (*)&
di•œy_ch¨£t_°r
},

648 {"documít_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
DocumítCh¨£t
,

649 
CMT_DOCUMENT_CHARSET
, (*)&
documít_ch¨£t_°r
},

650 {"auto_dëe˘", 
P_CHARINT
, 
PI_SEL_C
, (*)&
WcO±i⁄
.
auto_dëe˘
,

651 
CMT_AUTO_DETECT
, (*)
auto_dëe˘_°r
},

652 {"sy°em_ch¨£t", 
P_CODE
, 
PI_CODE
, (*)&
Sy°emCh¨£t
,

653 
CMT_SYSTEM_CHARSET
, (*)&
sy°em_ch¨£t_°r
},

654 {"fﬁlow_loˇÀ", 
P_CHARINT
, 
PI_ONOFF
, (*)&
FﬁlowLoˇÀ
,

655 
CMT_FOLLOW_LOCALE
, 
NULL
},

656 {"ext_hÆfdump", 
P_CHARINT
, 
PI_ONOFF
, (*)&
ExtHÆfdump
,

657 
CMT_EXT_HALFDUMP
, 
NULL
},

658 {"u£_wide", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_wide
, 
CMT_USE_WIDE
,

659 
NULL
},

660 {"u£_comböög", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_comböög
,

661 
CMT_USE_COMBINING
, 
NULL
},

662 #ifde‡
USE_UNICODE


663 {"u£_œnguage_èg", 
P_CHARINT
, 
PI_ONOFF
,

664 (*)&
WcO±i⁄
.
u£_œnguage_èg
, 
CMT_USE_LANGUAGE_TAG
, 
NULL
},

665 {"ucs_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
ucs_c⁄v
, 
CMT_UCS_CONV
,

666 
NULL
},

668 {"¥e_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
¥e_c⁄v
, 
CMT_PRE_CONV
,

669 
NULL
},

670 {"£¨ch_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
SórchC⁄v
, 
CMT_SEARCH_CONV
,

671 
NULL
},

672 {"fix_width_c⁄v", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
fix_width_c⁄v
,

673 
CMT_FIX_WIDTH_CONV
, 
NULL
},

674 #ifde‡
USE_UNICODE


675 {"u£_gb12345_m≠", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_gb12345_m≠
,

676 
CMT_USE_GB12345_MAP
, 
NULL
},

678 {"u£_jisx0201", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0201
,

679 
CMT_USE_JISX0201
, 
NULL
},

680 {"u£_jisc6226", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisc6226
,

681 
CMT_USE_JISC6226
, 
NULL
},

682 {"u£_jisx0201k", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0201k
,

683 
CMT_USE_JISX0201K
, 
NULL
},

684 {"u£_jisx0212", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0212
,

685 
CMT_USE_JISX0212
, 
NULL
},

686 {"u£_jisx0213", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
u£_jisx0213
,

687 
CMT_USE_JISX0213
, 
NULL
},

688 {"°ri˘_iso2022", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
°ri˘_iso2022
,

689 
CMT_STRICT_ISO2022
, 
NULL
},

690 #ifde‡
USE_UNICODE


691 {"gb18030_as_ucs", 
P_CHARINT
, 
PI_ONOFF
, (*)&
WcO±i⁄
.
gb18030_as_ucs
,

692 
CMT_GB18030_AS_UCS
, 
NULL
},

694 {
NULL
, 0, 0, NULL, NULL, NULL},

698 
∑øm_£˘i⁄
 
	g£˘i⁄s
[] = {

699 {
N_
("Di•œy Sëtögs"), 
∑øms1
},

700 #ifde‡
USE_COLOR


701 {
N_
("Cﬁ‹ Sëtögs"), 
∑øms2
},

703 {
N_
("Mis˚Œ™eou†Sëtögs"), 
∑øms3
},

704 {
N_
("Dúe˘‹y Sëtögs"), 
∑øms5
},

705 {
N_
("Exã∫Æ Progøm Sëtögs"), 
∑øms6
},

706 {
N_
("Nëw‹k Sëtögs"), 
∑øms9
},

707 {
N_
("Proxy Sëtögs"), 
∑øms4
},

708 #ifde‡
USE_SSL


709 {
N_
("SSL Sëtögs"), 
∑øms7
},

711 #ifde‡
USE_COOKIE


712 {
N_
("Cookõ Sëtögs"), 
∑øms8
},

714 #ifde‡
USE_M17N


715 {
N_
("Ch¨£àSëtögs"), 
∑øms10
},

717 {
NULL
, NULL}

720 
Så
 
to_°r
(
∑øm_±r
 *
p
);

723 
	$com∑ª_èbÀ
(
rc_£¨ch_èbÀ
 *
a
, rc_£¨ch_èbÀ *
b
)

725  
	`°rcmp
(
a
->
∑øm
->
«me
, 
b
->param->name);

726 
	}
}

729 
	$¸óã_›ti⁄_£¨ch_èbÀ
()

731 
i
, 
j
, 
k
;

732 
diff1
, 
diff2
;

733 *
p
, *
q
;

736 
RC_èbÀ_size
 = 0;

737 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

738 
i
 = 0;

739 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

740 
i
++;

741 
RC_èbÀ_size
++;

745 
RC_£¨ch_èbÀ
 = 
	`New_N
(
rc_£¨ch_èbÀ
, 
RC_èbÀ_size
);

746 
k
 = 0;

747 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

748 
i
 = 0;

749 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

750 
RC_£¨ch_èbÀ
[
k
].
∑øm
 = &
£˘i⁄s
[
j
].
∑øms
[
i
];

751 
k
++;

752 
i
++;

756 
	`qs‹t
(
RC_£¨ch_èbÀ
, 
RC_èbÀ_size
, (
rc_£¨ch_èbÀ
),

757 ((*)(c⁄° *, c⁄° *))
com∑ª_èbÀ
);

759 
diff1
 = 
diff2
 = 0;

760 
i
 = 0; i < 
RC_èbÀ_size
 - 1; i++) {

761 
p
 = 
RC_£¨ch_èbÀ
[
i
].
∑øm
->
«me
;

762 
q
 = 
RC_£¨ch_èbÀ
[
i
 + 1].
∑øm
->
«me
;

763 
j
 = 0; 
p
[j] !'\0' && 
q
[j] != '\0' &&Ö[j] == q[j]; j++) ;

764 
diff1
 = 
j
;

765 i‡(
diff1
 > 
diff2
)

766 
RC_£¨ch_èbÀ
[
i
].
uniq_pos
 = 
diff1
 + 1;

768 
RC_£¨ch_èbÀ
[
i
].
uniq_pos
 = 
diff2
 + 1;

769 
diff2
 = 
diff1
;

771 
	}
}

773 
∑øm_±r
 *

774 
	$£¨ch_∑øm
(*
«me
)

776 
size_t
 
b
, 
e
, 
i
;

777 
cmp
;

778 
Àn
 = 
	`°æí
(
«me
);

780 
b
 = 0, 
e
 = 
RC_èbÀ_size
 - 1; b <=É;) {

781 
i
 = (
b
 + 
e
) / 2;

782 
cmp
 = 
	`°∫cmp
(
«me
, 
RC_£¨ch_èbÀ
[
i
].
∑øm
->«me, 
Àn
);

784 i‡(!
cmp
) {

785 i‡(
Àn
 >
RC_£¨ch_èbÀ
[
i
].
uniq_pos
) {

786  
RC_£¨ch_èbÀ
[
i
].
∑øm
;

789 (
cmp
 =

790 
	`°rcmp
(
«me
, 
RC_£¨ch_èbÀ
[
i
].
∑øm
->name)) <= 0)

791 i‡(!
cmp
)

792  
RC_£¨ch_èbÀ
[
i
].
∑øm
;

793 i‡(
i
 == 0)

794  
NULL
;

796 
i
--;

798  
NULL
;

801 i‡(
cmp
 < 0) {

802 i‡(
i
 == 0)

803  
NULL
;

804 
e
 = 
i
 - 1;

807 
b
 = 
i
 + 1;

809  
NULL
;

810 
	}
}

814 
	$show_∑øms
(
FILE
 * 
Â
)

816 
i
, 
j
, 
l
;

817 *
t
 = 
NULL
;

818 *
cmt
;

820 #ifde‡
USE_M17N


821 #ifde‡
ENABLE_NLS


822 
O±i⁄Ch¨£t
 = 
Sy°emCh¨£t
;

826 
	`Âuts
("\nc⁄figuøti⁄Ö¨amëîs\n", 
Â
);

827 
j
 = 0; 
£˘i⁄s
[j].
«me
 !
NULL
; j++) {

828 #ifde‡
USE_M17N


829 i‡(!
O±i⁄Encode
)

830 
cmt
 =

831 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
j
].
«me
), 
O±i⁄Ch¨£t
,

832 
I¬îCh¨£t
)->
±r
;

835 
cmt
 = 
£˘i⁄s
[
j
].
«me
;

836 
	`Ârötf
(
Â
, " se˘i⁄[%d]: %s\n", 
j
, 
	`c⁄v_to_sy°em
(
cmt
));

837 
i
 = 0;

838 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
) {

839 
£˘i⁄s
[
j
].
∑øms
[
i
].
ty≥
) {

840 
P_INT
:

841 
P_SHORT
:

842 
P_CHARINT
:

843 
P_NZINT
:

844 
t
 = (
£˘i⁄s
[
j
].
∑øms
[
i
].
öpuây≥
 ==

845 
PI_ONOFF
) ? "bool" : "number";

847 
P_CHAR
:

848 
t
 = "char";

850 
P_STRING
:

851 
t
 = "string";

853 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

854 
P_SSLPATH
:

855 
t
 = "path";

858 #ifde‡
USE_COLOR


859 
P_COLOR
:

860 
t
 = "color";

863 #ifde‡
USE_M17N


864 
P_CODE
:

865 
t
 = "charset";

868 
P_PIXELS
:

869 
t
 = "number";

871 
P_SCALE
:

872 
t
 = "percent";

875 #ifde‡
USE_M17N


876 i‡(!
O±i⁄Encode
)

877 
cmt
 = 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
j
].
∑øms
[
i
].
commít
),

878 
O±i⁄Ch¨£t
, 
I¬îCh¨£t
)->
±r
;

881 
cmt
 = 
£˘i⁄s
[
j
].
∑øms
[
i
].
commít
;

882 
l
 = 30 - (
	`°æí
(
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
Ë+ såÀn(
t
));

883 i‡(
l
 < 0)

884 
l
 = 1;

885 
	`Ârötf
(
Â
, " -o %s=<%s>%*s%s\n",

886 
£˘i⁄s
[
j
].
∑øms
[
i
].
«me
, 
t
, 
l
, " ",

887 
	`c⁄v_to_sy°em
(
cmt
));

888 
i
++;

891 
	}
}

894 
	$°r_to_boﬁ
(*
vÆue
, 
ﬁd
)

896 i‡(
vÆue
 =
NULL
)

898 
	`TOLOWER
(*
vÆue
)) {

905 i‡(
	`TOLOWER
(
vÆue
[1]) == 'f')

909 i‡(
	`TOLOWER
(
vÆue
[1]) == 'o')

910  !
ﬁd
;

915  !
ﬁd
;

918 
	}
}

920 #ifde‡
USE_COLOR


922 
	$°r_to_cﬁ‹
(*
vÆue
)

924 i‡(
vÆue
 =
NULL
)

926 
	`TOLOWER
(*
vÆue
)) {

953 i‡(!
	`°∫ˇ£cmp
(
vÆue
, "blu", 3))

959 
	}
}

963 
	$£t_∑øm
(*
«me
, *
vÆue
)

965 
∑øm_±r
 *
p
;

966 
µc
;

968 i‡(
vÆue
 =
NULL
)

970 
p
 = 
	`£¨ch_∑øm
(
«me
);

971 i‡(
p
 =
NULL
)

973 
p
->
ty≥
) {

974 
P_INT
:

975 i‡(
	`©oi
(
vÆue
) >= 0)

976 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

977 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

979 
P_NZINT
:

980 i‡(
	`©oi
(
vÆue
) > 0)

981 *(*)
p
->
v¨±r
 = 
	`©oi
(
vÆue
);

983 
P_SHORT
:

984 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

985 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

987 
P_CHARINT
:

988 *(*)
p
->
v¨±r
 = (p->
öpuây≥
 =
PI_ONOFF
)

989 ? 
	`°r_to_boﬁ
(
vÆue
, *(*)
p
->
v¨±r
Ë: 
	`©oi
(value);

991 
P_CHAR
:

992 *(*)
p
->
v¨±r
 = 
vÆue
[0];

994 
P_STRING
:

995 *(**)
p
->
v¨±r
 = 
vÆue
;

997 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

998 
P_SSLPATH
:

999 i‡(
vÆue
 !
NULL
 && value[0] != '\0')

1000 *(**)
p
->
v¨±r
 = 
	`rcFûe
(
vÆue
);

1002 *(**)
p
->
v¨±r
 = 
NULL
;

1003 
s¶_∑th_modifõd
 = 1;

1006 #ifde‡
USE_COLOR


1007 
P_COLOR
:

1008 *(*)
p
->
v¨±r
 = 
	`°r_to_cﬁ‹
(
vÆue
);

1011 #ifde‡
USE_M17N


1012 
P_CODE
:

1013 *(
wc_˚s
 *Ë
p
->
v¨±r
 =

1014 
	`wc_guess_ch¨£t_sh‹t
(
vÆue
, *(
wc_˚s
 *Ë
p
->
v¨±r
);

1017 
P_PIXELS
:

1018 
µc
 = 
	`©of
(
vÆue
);

1019 i‡(
µc
 >
MINIMUM_PIXEL_PER_CHAR
 &&Öp¯<
MAXIMUM_PIXEL_PER_CHAR
 * 2)

1020 *(*)
p
->
v¨±r
 = 
µc
;

1022 
P_SCALE
:

1023 
µc
 = 
	`©of
(
vÆue
);

1024 i‡(
µc
 >= 10 &&Öpc <= 1000)

1025 *(*)
p
->
v¨±r
 = 
µc
;

1029 
	}
}

1032 
	$£t_∑øm_›ti⁄
(*
›ti⁄
)

1034 
Så
 
tmp
 = 
	`Så√w
();

1035 *
p
 = 
›ti⁄
, *
q
;

1037 *
p
 && !
	`IS_SPACE
(*p) && *p != '=')

1038 
	`Såˇt_ch¨
(
tmp
, *
p
++);

1039 *
p
 && 
	`IS_SPACE
(*p))

1040 
p
++;

1041 i‡(*
p
 == '=') {

1042 
p
++;

1043 *
p
 && 
	`IS_SPACE
(*p))

1044 
p
++;

1046 
	`Sålowî
(
tmp
);

1047 i‡(
	`£t_∑øm
(
tmp
->
±r
, 
p
))

1048 
›ti⁄_assig√d
;

1049 
q
 = 
tmp
->
±r
;

1050 i‡(!
	`°∫cmp
(
q
, "no", 2)) {

1051 
q
 += 2;

1052 i‡(*
q
 == '-' || *q == '_')

1053 
q
++;

1055 i‡(
tmp
->
±r
[0] == '-')

1056 
q
++;

1059 i‡(
	`£t_∑øm
(
q
, "0"))

1060 
›ti⁄_assig√d
;

1062 
›ti⁄_assig√d
:

1064 
	}
}

1067 
	$gë_∑øm_›ti⁄
(*
«me
)

1069 
∑øm_±r
 *
p
;

1071 
p
 = 
	`£¨ch_∑øm
(
«me
);

1072  
p
 ? 
	`to_°r
’)->
±r
 : 
NULL
;

1073 
	}
}

1076 
	$öãΩªt_rc
(
FILE
 * 
f
)

1078 
Så
 
löe
;

1079 
Så
 
tmp
;

1080 *
p
;

1083 
löe
 = 
	`Såfgës
(
f
);

1084 
	`Såch›
(
löe
);

1085 i‡(
löe
->
Àngth
 == 0)

1087 
	`Såªmovefú°•a˚s
(
löe
);

1088 i‡(
löe
->
±r
[0] == '#')

1090 
tmp
 = 
	`Så√w
();

1091 
p
 = 
löe
->
±r
;

1092 *
p
 && !
	`IS_SPACE
(*p))

1093 
	`Såˇt_ch¨
(
tmp
, *
p
++);

1094 *
p
 && 
	`IS_SPACE
(*p))

1095 
p
++;

1096 
	`Sålowî
(
tmp
);

1097 
	`£t_∑øm
(
tmp
->
±r
, 
p
);

1099 
	}
}

1102 
	$∑r£_¥oxy
()

1104 i‡(
	`n⁄_nuŒ
(
HTTP_¥oxy
))

1105 
	`∑r£URL
(
HTTP_¥oxy
, &
HTTP_¥oxy_∑r£d
, 
NULL
);

1106 #ifde‡
USE_SSL


1107 i‡(
	`n⁄_nuŒ
(
HTTPS_¥oxy
))

1108 
	`∑r£URL
(
HTTPS_¥oxy
, &
HTTPS_¥oxy_∑r£d
, 
NULL
);

1110 #ifde‡
USE_GOPHER


1111 i‡(
	`n⁄_nuŒ
(
GOPHER_¥oxy
))

1112 
	`∑r£URL
(
GOPHER_¥oxy
, &
GOPHER_¥oxy_∑r£d
, 
NULL
);

1114 i‡(
	`n⁄_nuŒ
(
FTP_¥oxy
))

1115 
	`∑r£URL
(
FTP_¥oxy
, &
FTP_¥oxy_∑r£d
, 
NULL
);

1116 i‡(
	`n⁄_nuŒ
(
NO_¥oxy
))

1117 
	`£t_no_¥oxy
(
NO_¥oxy
);

1118 
	}
}

1120 #ifde‡
USE_COOKIE


1122 
	$∑r£_cookõ
()

1124 i‡(
	`n⁄_nuŒ
(
cookõ_ªje˘_domaös
))

1125 
Cookõ_ªje˘_domaös
 = 
	`make_domaö_li°
(
cookõ_ªje˘_domaös
);

1126 i‡(
	`n⁄_nuŒ
(
cookõ_ac˚±_domaös
))

1127 
Cookõ_ac˚±_domaös
 = 
	`make_domaö_li°
(
cookõ_ac˚±_domaös
);

1128 
	}
}

1131 #ifde‡
__EMX__


1133 
	$do_mkdú
(c⁄° *
dú
, 
mode
)

1135 *
r
, 
abs
[
_MAX_PATH
];

1136 
size_t
 
n
;

1138 
	`_ab•©h
(
abs
, 
rc_dú
, 
_MAX_PATH
);

1140 i‡(!(
n
 = 
	`°æí
(
abs
)))

1143 i‡(*(
r
 = 
abs
 + 
n
 - 1) == '/')

1144 *
r
 = 0;

1146  
	`mkdú
(
abs
, 
mode
);

1147 
	}
}

1149 #ifde‡
__MINGW32_VERSION


1150 
	#do_mkdú
(
dú
,
mode
Ë
	`mkdú
(dú)

	)

1152 
	#do_mkdú
(
dú
,
mode
Ë
	`mkdú
(dú,mode)

	)

1157 
	$sync_wôh_›ti⁄
()

1159 i‡(
PagîMax
 < 
LINES
)

1160 
PagîMax
 = 
LINES
;

1161 
WøpSórch
 = 
WøpDeÁu…
;

1162 
	`∑r£_¥oxy
();

1163 #ifde‡
USE_COOKIE


1164 
	`∑r£_cookõ
();

1166 
	`öôMaûˇp
();

1167 
	`öôMimeTy≥s
();

1168 #ifde‡
USE_EXTERNAL_URI_LOADER


1169 
	`öôURIMëhods
();

1171 #ifde‡
USE_MIGEMO


1172 
	`öô_migemo
();

1174 #ifde‡
USE_IMAGE


1175 i‡(
fmInôülized
 && 
di•œyImage
)

1176 
	`öôImage
();

1178 
di•œyImage
 = 
FALSE
;

1180 
	`lﬂdPasswd
();

1181 
	`lﬂdPªF‹m
();

1183 i‡(
Ac˚±L™g
 =
NULL
 || *AcceptLang == '\0') {

1189 
Ac˚±L™g
 = 
	`_
("en;q=1.0");

1191 i‡(
Ac˚±Encodög
 =
NULL
 || *AcceptEncoding == '\0')

1192 
Ac˚±Encodög
 = 
	`ac˚±abÀEncodög
();

1193 i‡(
Ac˚±Medü
 =
NULL
 || *AcceptMedia == '\0')

1194 
Ac˚±Medü
 = 
	`ac˚±abÀMimeTy≥s
();

1195 i‡(
fmInôülized
) {

1196 
	`öôKeym≠
(
FALSE
);

1197 #ifde‡
USE_MOUSE


1198 
	`öôMou£A˘i⁄
();

1200 #ifde‡
USE_MENU


1201 
	`öôMíu
();

1204 
	}
}

1207 
	$öô_rc
()

1209 
i
;

1210 
°©
 
°
;

1211 
FILE
 *
f
;

1213 i‡(
rc_dú
 !
NULL
)

1214 
›í_rc
;

1216 
rc_dú
 = 
	`ex∑ndP©h
(
RC_DIR
);

1217 
i
 = 
	`°æí
(
rc_dú
);

1218 i‡(
i
 > 1 && 
rc_dú
[i - 1] == '/')

1219 
rc_dú
[
i
 - 1] = '\0';

1221 #ifde‡
USE_M17N


1222 
di•œy_ch¨£t_°r
 = 
	`wc_gë_˚s_li°
();

1223 
documít_ch¨£t_°r
 = 
di•œy_ch¨£t_°r
;

1224 
sy°em_ch¨£t_°r
 = 
di•œy_ch¨£t_°r
;

1227 i‡(
	`°©
(
rc_dú
, &
°
) < 0) {

1228 i‡(
î∫o
 =
ENOENT
) {

1229 i‡(
	`do_mkdú
(
rc_dú
, 0700) < 0) {

1230 
	`Ârötf
(
°dîr
, "C™'à¸óã c⁄fig dúe˘‹y (%s)!", 
rc_dú
);

1231 
rc_dú_îr
;

1234 
	`°©
(
rc_dú
, &
°
);

1238 
	`Ârötf
(
°dîr
, "C™'à›í c⁄fig dúe˘‹y (%s)!", 
rc_dú
);

1239 
rc_dú_îr
;

1242 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

1244 
	`Ârötf
(
°dîr
, "%†i†nŸá dúe˘‹y!", 
rc_dú
);

1245 
rc_dú_îr
;

1247 i‡(!(
°
.
°_mode
 & 
S_IWUSR
)) {

1248 
	`Ârötf
(
°dîr
, "%†i†nŸ wrôabÀ!", 
rc_dú
);

1249 
rc_dú_îr
;

1251 
no_rc_dú
 = 
FALSE
;

1252 
tmp_dú
 = 
rc_dú
;

1254 i‡(
c⁄fig_fûe
 =
NULL
)

1255 
c⁄fig_fûe
 = 
	`rcFûe
(
CONFIG_FILE
);

1257 
	`¸óã_›ti⁄_£¨ch_èbÀ
();

1259 
›í_rc
:

1261 i‡((
f
 = 
	`f›í
(
	`ëcFûe
(
W3MCONFIG
), "π")Ë!
NULL
) {

1262 
	`öãΩªt_rc
(
f
);

1263 
	`f˛o£
(
f
);

1265 i‡((
f
 = 
	`f›í
(
	`c⁄fFûe
(
CONFIG_FILE
), "π")Ë!
NULL
) {

1266 
	`öãΩªt_rc
(
f
);

1267 
	`f˛o£
(
f
);

1269 i‡((
f
 = 
	`f›í
(
c⁄fig_fûe
, "π")Ë!
NULL
) {

1270 
	`öãΩªt_rc
(
f
);

1271 
	`f˛o£
(
f
);

1275 
rc_dú_îr
:

1276 
no_rc_dú
 = 
TRUE
;

1277 i‡(((
tmp_dú
 = 
	`gëív
("TMPDIR")Ë=
NULL
 || *tmp_dir == '\0') &&

1278 ((
tmp_dú
 = 
	`gëív
("TMP")Ë=
NULL
 || *tmp_dir == '\0') &&

1279 ((
tmp_dú
 = 
	`gëív
("TEMP")Ë=
NULL
 || *tmp_dir == '\0'))

1280 
tmp_dú
 = "/tmp";

1281 
	}
}

1284 
	g›ti⁄∑√l_§c1
[] =

1285 "<html><hód><tôÀ>O±i⁄ Sëtög P™ñ</tôÀ></hód><body>\
<h1álign=˚¡î>O±i⁄ Sëtög P™ñ<br>(w3m vîsi⁄ %s)</b></h1>\
<f‹m mëhodıo°á˘i⁄=\"fûe:///$LIB/" 
W3MHELPERPANEL_CMDNAME
 "\">\
<inputÅype=hiddenÇame=mode value=panel>\
<inputÅype=hiddenÇame=cookie value=\"%s\">\
<inputÅype=submit value=\"%s\">\
</form><br>\
<form method=internaláction=option>";

1294 
Så
 
	g›ti⁄∑√l_°r
 = 
NULL
;

1296 
Så


1297 
	$to_°r
(
∑øm_±r
 *
p
)

1299 
p
->
ty≥
) {

1300 
P_INT
:

1301 #ifde‡
USE_COLOR


1302 
P_COLOR
:

1304 #ifde‡
USE_M17N


1305 
P_CODE
:

1306  
	`S¥ötf
("%d", ()(*(
wc_˚s
 *Ë
p
->
v¨±r
));

1308 
P_NZINT
:

1309  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1310 
P_SHORT
:

1311  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1312 
P_CHARINT
:

1313  
	`S¥ötf
("%d", *(*)
p
->
v¨±r
);

1314 
P_CHAR
:

1315  
	`S¥ötf
("%c", *(*)
p
->
v¨±r
);

1316 
P_STRING
:

1317 #i‡
	`deföed
(
USE_SSL
Ë&& deföed(
USE_SSL_VERIFY
)

1318 
P_SSLPATH
:

1321  
	`Så√w_ch¨p
(
	`c⁄v_‰om_sy°em
(*(**)
p
->
v¨±r
));

1322 
P_PIXELS
:

1323 
P_SCALE
:

1324  
	`S¥ötf
("%g", *(*)
p
->
v¨±r
);

1327  
NULL
;

1328 
	}
}

1330 
Buf„r
 *

1331 
	$lﬂd_›ti⁄_∑√l
()

1333 
Så
 
§c
;

1334 
∑øm_±r
 *
p
;

1335 
£l_c
 *
s
;

1336 #ifde‡
USE_M17N


1337 
wc_˚s_li°
 *
c
;

1339 
x
, 
i
;

1340 
Så
 
tmp
;

1341 
Buf„r
 *
buf
;

1343 i‡(
›ti⁄∑√l_°r
 =
NULL
)

1344 
›ti⁄∑√l_°r
 = 
	`S¥ötf
(
›ti⁄∑√l_§c1
, 
w3m_vîsi⁄
,

1345 
	`html_quŸe
(
	`loˇlCookõ
()->
±r
), 
	`_
(
CMT_HELPER
));

1346 #ifde‡
USE_M17N


1347 #ifde‡
ENABLE_NLS


1348 
O±i⁄Ch¨£t
 = 
Sy°emCh¨£t
;

1350 i‡(!
O±i⁄Encode
) {

1351 
›ti⁄∑√l_°r
 =

1352 
	`wc_Så_c⁄v
(
›ti⁄∑√l_°r
, 
O±i⁄Ch¨£t
, 
I¬îCh¨£t
);

1353 
i
 = 0; 
£˘i⁄s
[i].
«me
 !
NULL
; i++) {

1354 
£˘i⁄s
[
i
].
«me
 =

1355 
	`wc_c⁄v
(
	`_
(
£˘i⁄s
[
i
].
«me
), 
O±i⁄Ch¨£t
,

1356 
I¬îCh¨£t
)->
±r
;

1357 
p
 = 
£˘i⁄s
[
i
].
∑øms
;Ö->
«me
;Ö++) {

1358 
p
->
commít
 =

1359 
	`wc_c⁄v
(
	`_
(
p
->
commít
), 
O±i⁄Ch¨£t
,

1360 
I¬îCh¨£t
)->
±r
;

1361 i‡(
p
->
öpuây≥
 =
PI_SEL_C


1362 #ifde‡
USE_COLOR


1363 && 
p
->
£À˘
 !
cﬁ‹°r


1366 
s
 = (
£l_c
 *)
p
->
£À˘
; s->
ãxt
 !
NULL
; s++) {

1367 
s
->
ãxt
 =

1368 
	`wc_c⁄v
(
	`_
(
s
->
ãxt
), 
O±i⁄Ch¨£t
,

1369 
I¬îCh¨£t
)->
±r
;

1374 #ifde‡
USE_COLOR


1375 
s
 = 
cﬁ‹°r
; s->
ãxt
; s++)

1376 
s
->
ãxt
 = 
	`wc_c⁄v
(
	`_
(s->ãxt), 
O±i⁄Ch¨£t
,

1377 
I¬îCh¨£t
)->
±r
;

1379 
O±i⁄Encode
 = 
TRUE
;

1382 
§c
 = 
	`Sådup
(
›ti⁄∑√l_°r
);

1384 
	`Såˇt_ch¨p
(
§c
, "<table><tr><td>");

1385 
i
 = 0; 
£˘i⁄s
[i].
«me
 !
NULL
; i++) {

1386 
	`Såˇt_m_ch¨p
(
§c
, "<h1>", 
£˘i⁄s
[
i
].
«me
, "</h1>", 
NULL
);

1387 
p
 = 
£˘i⁄s
[
i
].
∑øms
;

1388 
	`Såˇt_ch¨p
(
§c
, "<table width=100% cellpadding=0>");

1389 
p
->
«me
) {

1390 
	`Såˇt_m_ch¨p
(
§c
, "<å><td>", 
p
->
commít
, 
NULL
);

1391 
	`Såˇt
(
§c
, 
	`S¥ötf
("</td><td width=%d>",

1392 ()(28 * 
pixñ_≥r_ch¨
)));

1393 
p
->
öpuây≥
) {

1394 
PI_TEXT
:

1395 
	`Såˇt_m_ch¨p
(
§c
, "<inputÅype=textÇame=",

1396 
p
->
«me
,

1398 
	`html_quŸe
(
	`to_°r
(
p
)->
±r
), "\">", 
NULL
);

1400 
PI_ONOFF
:

1401 
x
 = 
	`©oi
(
	`to_°r
(
p
)->
±r
);

1402 
	`Såˇt_m_ch¨p
(
§c
, "<inputÅype=radioÇame=",

1403 
p
->
«me
,

1405 (
x
 ? " checked" : ""),

1407 
p
->
«me
,

1408 " vÆue=0", (
x
 ? "" : " checked"), ">NO", 
NULL
);

1410 
PI_SEL_C
:

1411 
tmp
 = 
	`to_°r
(
p
);

1412 
	`Såˇt_m_ch¨p
(
§c
, "<£À˘Çame=", 
p
->
«me
, ">", 
NULL
);

1413 
s
 = (
£l_c
 *)
p
->
£À˘
; s->
ãxt
 !
NULL
; s++) {

1414 
	`Såˇt_ch¨p
(
§c
, "<option value=");

1415 
	`Såˇt
(
§c
, 
	`S¥ötf
("%s\n", 
s
->
cvÆue
));

1416 i‡((
p
->
ty≥
 !
P_CHAR
 && 
s
->
vÆue
 =
	`©oi
(
tmp
->
±r
)) ||

1417 (
p
->
ty≥
 =
P_CHAR
 && ()
s
->
vÆue
 =*(
tmp
->
±r
)))

1418 
	`Såˇt_ch¨p
(
§c
, " selected");

1419 
	`Såˇt_ch¨
(
§c
, '>');

1420 
	`Såˇt_ch¨p
(
§c
, 
s
->
ãxt
);

1422 
	`Såˇt_ch¨p
(
§c
, "</select>");

1424 #ifde‡
USE_M17N


1425 
PI_CODE
:

1426 
tmp
 = 
	`to_°r
(
p
);

1427 
	`Såˇt_m_ch¨p
(
§c
, "<£À˘Çame=", 
p
->
«me
, ">", 
NULL
);

1428 
c
 = *(
wc_˚s_li°
 **Ë
p
->
£À˘
; c->
desc
 !
NULL
; c++) {

1429 
	`Såˇt_ch¨p
(
§c
, "<option value=");

1430 
	`Såˇt
(
§c
, 
	`S¥ötf
("%s\n", 
c
->
«me
));

1431 i‡(
c
->
id
 =
	`©oi
(
tmp
->
±r
))

1432 
	`Såˇt_ch¨p
(
§c
, " selected");

1433 
	`Såˇt_ch¨
(
§c
, '>');

1434 
	`Såˇt_ch¨p
(
§c
, 
c
->
desc
);

1436 
	`Såˇt_ch¨p
(
§c
, "</select>");

1440 
	`Såˇt_ch¨p
(
§c
, "</td></tr>\n");

1441 
p
++;

1443 
	`Såˇt_ch¨p
(
§c
,

1445 
	`Såˇt_ch¨p
(
§c
, "</table><hr width=50%>");

1447 
	`Såˇt_ch¨p
(
§c
, "</table></form></body></html>");

1448 
buf
 = 
	`lﬂdHTMLSåög
(
§c
);

1449 #ifde‡
USE_M17N


1450 i‡(
buf
)

1451 
buf
->
documít_ch¨£t
 = 
O±i⁄Ch¨£t
;

1453  
buf
;

1454 
	}
}

1457 
	$∑√l_£t_›ti⁄
(
∑r£d_èg¨g
 *
¨g
)

1459 
FILE
 *
f
 = 
NULL
;

1460 *
p
;

1462 i‡(
no_rc_dú
) {

1463 
	`di•_mesßge
("Thîe'†nÿ~/.w3m dúe˘‹y... c⁄figÇŸ saved", 
FALSE
);

1466 
f
 = 
	`f›í
(
c⁄fig_fûe
, "wt");

1467 i‡(
f
 =
NULL
) {

1468 
	`di•_mesßge
("C™'àwrôê›ti⁄!", 
FALSE
);

1471 
¨g
) {

1473 i‡(
¨g
->
vÆue
) {

1474 
p
 = 
	`c⁄v_to_sy°em
(
¨g
->
vÆue
);

1475 i‡(
	`£t_∑øm
(
¨g
->¨g, 
p
)) {

1476 i‡(
f
)

1477 
	`Ârötf
(
f
, "%†%s\n", 
¨g
->¨g, 
p
);

1480 
¨g
 =árg->
√xt
;

1482 i‡(
f
)

1483 
	`f˛o£
(
f
);

1484 
	`sync_wôh_›ti⁄
();

1485 
	`backBf
();

1486 
	}
}

1489 
	$rcFûe
(*
ba£
)

1491 i‡(
ba£
 &&

1492 (
ba£
[0] == '/' ||

1493 (
ba£
[0] == '.'

1494 && (
ba£
[1] == '/' || (base[1] == '.' && base[2] == '/')))

1495 || (
ba£
[0] == '~' && base[1] == '/')))

1497  
	`ex∑ndP©h
(
ba£
);

1498  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
rc_dú
, "/", 
ba£
, 
NULL
)->
±r
);

1499 
	}
}

1502 
	$auxböFûe
(*
ba£
)

1504  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_auxbö_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1505 
	}
}

1509 
	$libFûe
(*
ba£
)

1511  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_lib_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1512 
	}
}

1516 
	$ëcFûe
(*
ba£
)

1518  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_ëc_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1519 
	}
}

1522 
	$c⁄fFûe
(*
ba£
)

1524  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_c⁄f_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1525 
	}
}

1527 #i‚de‡
USE_HELP_CGI


1529 
	$hñpFûe
(*
ba£
)

1531  
	`ex∑ndP©h
(
	`Så√w_m_ch¨p
(
	`w3m_hñp_dú
(), "/", 
ba£
, 
NULL
)->
±r
);

1532 
	}
}

	@regex.c

9 #ifde‡
REGEX_DEBUG


10 
	~<sys/ty≥s.h
>

11 
	~<mÆloc.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

16 
	~<gc.h
>

17 
	~"c⁄fig.h
"

18 #ifde‡
USE_M17N


19 
	~"wc.h
"

20 
	~"wtf.h
"

21 #ifde‡
USE_UNICODE


22 
	~"ucs.h
"

25 
	~"ªgex.h
"

26 
	~"c⁄fig.h
"

27 
	~"my˘y≥.h
"

29 #i‚de‡
NULL


30 
	#NULL
 0

	)

33 
	#RE_ITER_LIMIT
 65535

	)

35 
	#RE_MATCHMODE
 0x07

	)

36 
	#RE_NORMAL
 0x00

	)

37 
	#RE_ANY
 0x01

	)

38 
	#RE_WHICH
 0x02

	)

39 
	#RE_EXCEPT
 0x03

	)

40 
	#RE_SUBREGEX
 0x04

	)

41 
	#RE_BEGIN
 0x05

	)

42 
	#RE_END
 0x06

	)

43 
	#RE_ENDMARK
 0x07

	)

45 
	#RE_OPT
 0x08

	)

46 
	#RE_ANYTIME
 0x10

	)

47 
	#RE_IGNCASE
 0x40

	)

49 
	#RE_MODE
(
x
Ë((x)->
mode
&
RE_MATCHMODE
)

	)

50 
	#RE_SET_MODE
(
x
,
v
Ë((x)->
mode
 = (((x)->mode&~
RE_MATCHMODE
)|((v)&RE_MATCHMODE)))

	)

52 #ifde‡
REGEX_DEBUG


53 
debugª
(
ªgexch¨
 *);

54 *
lc2c
(
l⁄gch¨
 *, );

55 
	gvîbo£
;

58 #ifde‡
USE_M17N


59 
	#gë_m˛í
(
c
Ë
	`wtf_Àn1
((
wc_uch¨
 *)(c))

	)

61 
	#gë_m˛í
(
c
Ë1

	)

64 #i‚de‡
TOLOWER


65 
	~<˘y≥.h
>

66 
	#TOLOWER
(
x
Ë
	`tﬁowî
(x)

	)

67 
	#TOUPPER
(
x
Ë
	`touµî
(x)

	)

70 
	#RE_TYPE_END
 0

	)

71 
	#RE_TYPE_CHAR
 1

	)

72 
	#RE_TYPE_WCHAR_T
 2

	)

73 
	#RE_WHICH_RANGE
 3

	)

74 
	#RE_TYPE_SYMBOL
 4

	)

76 
l⁄gch¨


77 
	$£t_l⁄gch¨
(*
°r
)

79 *
p
 = (*)
°r
;

80 
l⁄gch¨
 
r
;

82 #ifde‡
USE_M17N


83 i‡(*
p
 & 0x80) {

84 
r
.
wch
 = 
	`wtf_∑r£1
(&
p
);

85 i‡(
r
.
wch
.
ccs
 =
WC_CCS_SPECIAL
 ||Ñ.wch.cc†=
WC_CCS_SPECIAL_W
) {

86 
r
.
ty≥
 = 
RE_TYPE_SYMBOL
;

87  
r
;

89 #ifde‡
USE_UNICODE


90 i‡(
	`WC_CCS_IS_UNICODE
(
r
.
wch
.
ccs
)) {

91 i‡(
	`WC_CCS_SET
(
r
.
wch
.
ccs
Ë=
WC_CCS_UCS_TAG
)

92 
r
.
wch
.
code
 = 
	`wc_ucs_èg_to_ucs
(r.wch.code);

93 
r
.
wch
.
ccs
 = 
WC_CCS_UCS4
;

97 
r
.
wch
.
ccs
 = 
	`WC_CCS_SET
(r.wch.ccs);

98 
r
.
ty≥
 = 
RE_TYPE_WCHAR_T
;

99  
r
;

102 
r
.
ch
 = *
p
;

103 
r
.
ty≥
 = 
RE_TYPE_CHAR
;

104  
r
;

105 
	}
}

107 
Regex
 
	gDeÁu…Regex
;

108 
	#CompûedRegex
 
DeÁu…Regex
.
ª


	)

109 
	#C°‹age
 
DeÁu…Regex
.
°‹age


	)

111 
ªgm©ch
(
ªgexch¨
 *, *, *, , **);

112 
ªgm©ch1
(
ªgexch¨
 *, 
l⁄gch¨
 *);

113 
m©chWhich
(
l⁄gch¨
 *,Üongchar *, );

114 
m©ch_l⁄gch¨
(
l⁄gch¨
 *,Üongchar *, );

115 
m©ch_ønge_l⁄gch¨
(
l⁄gch¨
 *,Üongchar *,Üongchar *, );

121 
	$ªgexCompûe
(*
ex
, 
ignˇ£
)

123 *
msg
;

124 
	`√wRegex
(
ex
, 
ignˇ£
, &
DeÁu…Regex
, &
msg
);

125  
msg
;

126 
	}
}

128 
Regex
 *

129 
	$√wRegex0
(**
ex
, 
ignˇ£
, 
Regex
 *
ªgex
, **
msg
, 
Àvñ
)

131 *
p
;

132 
l⁄gch¨
 *
r
;

133 
ªgexch¨
 *
ª
;

134 
m
;

135 
l⁄gch¨
 *
°_±r
;

137 i‡(
ªgex
 =
NULL
)

138 
ªgex
 = (
Regex
 *)
	`GC_mÆloc
((Regex));

139 
ªgex
->
Æt_ªgex
 = 
NULL
;

140 
ª
 = 
ªgex
->re;

141 
°_±r
 = 
ªgex
->
°‹age
;

142 
p
 = *
ex
; *p != '\0';Ö++) {

143 
ª
->
mode
 = 0;

144 *
p
) {

146 
ª
->
p
.
∑âîn
 = 
NULL
;

147 
	`RE_SET_MODE
(
ª
, 
RE_ANY
);

148 
ª
++;

151 
ª
->
p
.
∑âîn
 = 
NULL
;

152 
	`RE_SET_MODE
(
ª
, 
RE_END
);

153 
ª
++;

156 
ª
->
p
.
∑âîn
 = 
NULL
;

157 
	`RE_SET_MODE
(
ª
, 
RE_BEGIN
);

158 
ª
++;

161 i‡(
ª
 =
ªgex
->re ||

162 (
	`RE_MODE
(
ª
 - 1Ë!
RE_ANY
 && (ª - 1)->
p
.
∑âîn
 =
NULL
)) {

163 i‡(
msg
)

164 *
msg
 = "InvalidÑegularÉxpression";

165  
NULL
;

167 *
ª
 = *(re - 1);

168 
ª
->
mode
 |
RE_ANYTIME
;

169 
ª
++;

172 i‡(
ª
 =
ªgex
->re ||

173 (
	`RE_MODE
(
ª
 - 1Ë!
RE_ANY
 && (ª - 1)->
p
.
∑âîn
 =
NULL
)) {

174 i‡(
msg
)

175 *
msg
 = "InvalidÑegularÉxpression";

176  
NULL
;

178 (
ª
 - 1)->
mode
 |
RE_ANYTIME
;

181 i‡(
ª
 =
ªgex
->re ||

182 (
	`RE_MODE
(
ª
 - 1Ë!
RE_ANY
 && (ª - 1)->
p
.
∑âîn
 =
NULL
)) {

183 i‡(
msg
)

184 *
msg
 = "InvalidÑegularÉxpression";

185  
NULL
;

187 (
ª
 - 1)->
mode
 |
RE_OPT
;

190 
r
 = 
°_±r
;

191 i‡(*++
p
 == '^') {

192 
p
++;

193 
m
 = 
RE_EXCEPT
;

196 
m
 = 
RE_WHICH
;

197 i‡(*
p
 == '-' || *p == ']')

198 *(
°_±r
++Ë
	`£t_l⁄gch¨
(
p
);

199 *
p
 != ']') {

200 i‡(*
p
 == '\\') {

201 
p
++;

202 *(
°_±r
++Ë
	`£t_l⁄gch¨
(
p
);

203 
p
 +
	`gë_m˛í
(p);

205 i‡(*
p
 == '-' && *(p + 1) != ']') {

206 (
°_±r
++)->
ty≥
 = 
RE_WHICH_RANGE
;

207 
p
++;

209 i‡(*
p
 == '\0') {

210 i‡(
msg
)

211 *
msg
 = "Missing ]";

212  
NULL
;

215 *(
°_±r
++Ë
	`£t_l⁄gch¨
(
p
);

216 
p
 +
	`gë_m˛í
(p);

218 i‡(
°_±r
 >&
ªgex
->
°‹age
[
STORAGE_MAX
]) {

219 i‡(
msg
)

220 *
msg
 = "RegularÉxpressionÅooÜong";

221  
NULL
;

224 (
°_±r
++)->
ty≥
 = 
RE_TYPE_END
;

225 
ª
->
p
.
∑âîn
 = 
r
;

226 
	`RE_SET_MODE
(
ª
, 
m
);

227 i‡(
ignˇ£
)

228 
ª
->
mode
 |
RE_IGNCASE
;

229 
ª
++;

232 
	`RE_SET_MODE
(
ª
, 
RE_ENDMARK
);

233 
ª
++;

234 
p
++;

235 
ªgex
->
Æt_ªgex
 = 
	`√wRegex0
(&
p
, 
ignˇ£
, 
NULL
, 
msg
, 
Àvñ
);

236 i‡(
ªgex
->
Æt_ªgex
 =
NULL
)

237  
NULL
;

238 *
ex
 = 
p
;

239  
ªgex
;

241 
	`RE_SET_MODE
(
ª
, 
RE_SUBREGEX
);

242 
p
++;

243 
ª
->
p
.
sub
 = 
	`√wRegex0
(&p, 
ignˇ£
, 
NULL
, 
msg
, 
Àvñ
 + 1);

244 i‡(
ª
->
p
.
sub
 =
NULL
)

245  
NULL
;

246 
ª
++;

249 i‡(
Àvñ
 == 0) {

250 i‡(
msg
)

251 *
msg
 = "Too many ')'";

252  
NULL
;

254 
	`RE_SET_MODE
(
ª
, 
RE_ENDMARK
);

255 
ª
++;

256 *
ex
 = 
p
;

257  
ªgex
;

259 
p
++;

261 *(
°_±r
Ë
	`£t_l⁄gch¨
(
p
);

262 
p
 +
	`gë_m˛í
(p) - 1;

263 
ª
->
p
.
∑âîn
 = 
°_±r
;

264 
°_±r
++;

265 
	`RE_SET_MODE
(
ª
, 
RE_NORMAL
);

266 i‡(
ignˇ£
)

267 
ª
->
mode
 |
RE_IGNCASE
;

268 
ª
++;

270 i‡(
°_±r
 >&
ªgex
->
°‹age
[
STORAGE_MAX
] ||

271 
ª
 >&
ªgex
->ª[
REGEX_MAX
]) {

272 i‡(
msg
)

273 *
msg
 = "RegularÉxpressionÅooÜong";

274  
NULL
;

277 
	`RE_SET_MODE
(
ª
, 
RE_ENDMARK
);

278 i‡(
msg
)

279 *
msg
 = 
NULL
;

280 *
ex
 = 
p
;

281  
ªgex
;

282 
	}
}

284 
Regex
 *

285 
	$√wRegex
(*
ex
, 
ignˇ£
, 
Regex
 *
ªgex
, **
msg
)

287  
	`√wRegex0
(&
ex
, 
ignˇ£
, 
ªgex
, 
msg
, 0);

288 
	}
}

294 
	$ªgexM©ch
(*
°r
, 
Àn
, 
fú°p
)

296  
	`RegexM©ch
(&
DeÁu…Regex
, 
°r
, 
Àn
, 
fú°p
);

297 
	}
}

300 
	$RegexM©ch
(
Regex
 *
ª
, *
°r
, 
Àn
, 
fú°p
)

302 *
p
, *
ï
;

303 *
Õos
;

304 
Regex
 *
r
;

306 i‡(
°r
 =
NULL
)

308 i‡(
Àn
 < 0)

309 
Àn
 = 
	`°æí
(
°r
);

310 
ª
->
posôi⁄
 = 
NULL
;

311 
ï
 = 
°r
 + 
Àn
;

312 
p
 = 
°r
;Ö <
ï
;Ö++) {

313 
Õos
 = 
NULL
;

314 
ª
->
Õosôi⁄
 = 
NULL
;

315 
r
 = 
ª
;Ñ !
NULL
;Ñ =Ñ->
Æt_ªgex
) {

316 
	`ªgm©ch
(
r
->
ª
, 
p
, 
ï
, 
fú°p
 && (∞=
°r
), &
Õos
)) {

318 
ª
->
posôi⁄
 = 
p
;

319 i‡(
ª
->
Õosôi⁄
 =
NULL
 ||Ñe->Õosôi⁄ < 
Õos
)

320 
ª
->
Õosôi⁄
 = 
Õos
;

323 
ª
->
posôi⁄
 = 
NULL
;

327 i‡(
ª
->
Õosôi⁄
 !
NULL
) {

331 
p
 +
	`gë_m˛í
(p) - 1;

334 
	}
}

340 
	$M©chedPosôi⁄
(
Regex
 *
ª
, **
fú°
, **
œ°
)

342 *
fú°
 = 
ª
->
posôi⁄
;

343 *
œ°
 = 
ª
->
Õosôi⁄
;

344 
	}
}

347 
	$m©chedPosôi⁄
(**
fú°
, **
œ°
)

349 *
fú°
 = 
DeÁu…Regex
.
posôi⁄
;

350 *
œ°
 = 
DeÁu…Regex
.
Õosôi⁄
;

351 
	}
}

357 
	sM©chögC⁄ãxt1
 {

358 
	mœbñ
;

359 
ªgexch¨
 *
	mª
;

360 *
	mœ°pos
;

361 *
	m°r
;

362 
	môî_limô
;

363 
	mn_™y
;

364 
	mfú°p
;

365 *
	míd_p
;

366 
Regex
 *
	msub_ªgex
;

367 
M©chögC⁄ãxt1
 *
	msub_˘x
;

368 
M©chögC⁄ãxt2
 *
	m˘x2
;

371 
	sM©chögC⁄ãxt2
 {

372 
	mœbñ
;

373 
Regex
 *
	mªgex
;

374 *
	mœ°pos
;

375 
M©chögC⁄ãxt1
 *
	m˘x
;

376 
M©chögC⁄ãxt2
 *
	m˘x2
;

377 *
	m°r
;

378 
	mn_™y
;

379 
	mfú°p
;

383 
	#YIELD
(
ªtvÆ
,
c⁄ãxt
,
 um
Ë(c⁄ãxt)->
œbñ
 =Ünum;  (ªtvÆ);Üabñ## um:

	)

385 
ªgm©ch_ôî
(
M©chögC⁄ãxt1
 *,

386 
ªgexch¨
 *, *, *, );

389 
	$ªgm©ch_sub_™ytime
(
M©chögC⁄ãxt2
 *
c
, 
Regex
 *
ªgex
,

390 
ªgexch¨
 * 
∑t2
,

391 *
°r
, *
íd_p
, 
ôî_limô
, 
fú°p
)

393 
c
->
œbñ
) {

395 
œbñ1
;

397 
œbñ2
;

399 
œbñ3
;

401 
c
->
˘x
 = 
	`GC_mÆloc
((
M©chögC⁄ãxt1
));

402 
c
->
˘x2
 = 
	`GC_mÆloc
((
M©chögC⁄ãxt2
));

403 
c
->
˘x
->
œbñ
 = 0;

404 
c
->
ªgex
 =Ñegex;

405 
c
->
n_™y
 = 0;

406 
c
->
°r
 = str;

407 
c
->
fú°p
 = firstp;

409 
c
->
˘x
->
œbñ
 = 0;

410 
	`ªgm©ch_ôî
(
c
->
˘x
, c->
ªgex
->
ª
, c->
°r
, 
íd_p
, c->
fú°p
)) {

411 
c
->
n_™y
 = c->
˘x
->
œ°pos
 - c->
°r
;

412 i‡(
c
->
n_™y
 <= 0)

414 
c
->
fú°p
 = 0;

415 i‡(
	`RE_MODE
(
∑t2
Ë=
RE_ENDMARK
) {

416 
c
->
œ°pos
 = c->
°r
 + c->
n_™y
;

417 
	`YIELD
(1, 
c
, 1);

419 i‡(
	`ªgm©ch
(
∑t2
, 
c
->
°r
 + c->
n_™y
, 
íd_p
,

420 
c
->
fú°p
, &c->
œ°pos
) == 1) {

421 
	`YIELD
(1, 
c
, 2);

423 i‡(
ôî_limô
 == 1)

425 
c
->
˘x2
->
œbñ
 = 0;

426 
	`ªgm©ch_sub_™ytime
(
c
->
˘x2
, 
ªgex
, 
∑t2
,

427 
c
->
°r
 + c->
n_™y
, 
íd_p
,

428 
ôî_limô
 - 1, 
c
->
fú°p
)) {

430 
c
->
œ°pos
 = c->
˘x2
->lastpos;

431 
	`YIELD
(1, 
c
, 3);

434 i‡(
c
->
ªgex
->
Æt_ªgex
 =
NULL
)

436 
c
->
ªgex
 = c->ªgex->
Æt_ªgex
;

439 
	}
}

442 
	$ªgm©ch_ôî
(
M©chögC⁄ãxt1
 *
c
,

443 
ªgexch¨
 * 
ª
, *
°r
, *
íd_p
, 
fú°p
)

445 
c
->
œbñ
) {

447 
œbñ1
;

449 
œbñ2
;

451 
œbñ3
;

453 
œbñ4
;

455 
œbñ5
;

457 
œbñ6
;

459 
œbñ7
;

461 i‡(
	`RE_MODE
(
ª
Ë=
RE_ENDMARK
)

463 
c
->
ª
 =Ñe;

464 
c
->
fú°p
 = firstp;

465 
c
->
°r
 = str;

466 
c
->
íd_p
 =Énd_p;

467 
c
->
sub_˘x
 = 
NULL
;

468 
c
->
œ°pos
 = 
NULL
;

469 
	`RE_MODE
(
c
->
ª
Ë!
RE_ENDMARK
) {

470 i‡(
c
->
ª
->
mode
 & (
RE_ANYTIME
 | 
RE_OPT
)) {

471 i‡(
c
->
ª
->
mode
 & 
RE_ANYTIME
)

472 
c
->
ôî_limô
 = 
RE_ITER_LIMIT
;

474 
c
->
ôî_limô
 = 1;

475 
c
->
n_™y
 = -1;

476 
c
->
n_™y
 < c->
ôî_limô
) {

477 i‡(
c
->
°r
 + c->
n_™y
 >c->
íd_p
) {

480 i‡(
c
->
n_™y
 >= 0) {

481 i‡(
	`RE_MODE
(
c
->
ª
Ë=
RE_SUBREGEX
) {

482 
c
->
˘x2
 = 
	`GC_mÆloc
((
M©chögC⁄ãxt2
));

483 
c
->
˘x2
->
œbñ
 = 0;

484 
	`ªgm©ch_sub_™ytime
(
c
->
˘x2
,

485 
c
->
ª
->
p
.
sub
,

486 
c
->
ª
 + 1,

487 
c
->
°r
 + c->
n_™y
,

488 
c
->
íd_p
,

489 
c
->
ôî_limô
,

490 
c
->
fú°p
)) {

491 
c
->
n_™y
 = c->
˘x2
->
œ°pos
 - c->
°r
;

492 
c
->
œ°pos
 = c->
˘x2
->lastpos;

493 
	`YIELD
(1, 
c
, 1);

498 
l⁄gch¨
 
k
;

499 
k
 = 
	`£t_l⁄gch¨
(
c
->
°r
 + c->
n_™y
);

500 i‡(
	`ªgm©ch1
(
c
->
ª
, &
k
)) {

501 
c
->
n_™y
 +
	`gë_m˛í
(c->
°r
 + c->n_any);

506 
c
->
fú°p
 = 0;

510 
c
->
n_™y
++;

511 i‡(
	`RE_MODE
(
c
->
ª
 + 1Ë=
RE_ENDMARK
) {

512 
c
->
œ°pos
 = c->
°r
 + c->
n_™y
;

513 
	`YIELD
(1, 
c
, 2);

515 i‡(
	`ªgm©ch
(
c
->
ª
 + 1, c->
°r
 + c->
n_™y
, c->
íd_p
,

516 
c
->
fú°p
, &c->
œ°pos
) == 1) {

517 
	`YIELD
(1, 
c
, 3);

523 
	`RE_MODE
(
c
->
ª
)) {

524 
RE_BEGIN
:

525 i‡(!
c
->
fú°p
)

527 
c
->
ª
++;

529 
RE_END
:

530 i‡(
c
->
°r
 >c->
íd_p
) {

531 
c
->
œ°pos
 = c->
°r
;

532 
c
->
ª
++;

533 
	`YIELD
(1, 
c
, 4);

536 
c
->
œ°pos
 = 
NULL
;

540 
RE_SUBREGEX
:

541 i‡(
c
->
sub_˘x
 =
NULL
) {

542 
c
->
sub_˘x
 = 
	`GC_mÆloc
((
M©chögC⁄ãxt1
));

544 
c
->
sub_ªgex
 = c->
ª
->
p
.
sub
;

546 
c
->
sub_˘x
->
œbñ
 = 0;

547 
	`ªgm©ch_ôî
(
c
->
sub_˘x
, c->
sub_ªgex
->
ª
,

548 
c
->
°r
, c->
íd_p
, c->
fú°p
)) {

549 i‡(
c
->
sub_˘x
->
œ°pos
 !c->
°r
)

550 
c
->
fú°p
 = 0;

551 i‡(
	`RE_MODE
(
c
->
ª
 + 1Ë=
RE_ENDMARK
) {

552 
c
->
œ°pos
 = c->
sub_˘x
->lastpos;

553 
	`YIELD
(1, 
c
, 5);

555 i‡(
	`ªgm©ch
(
c
->
ª
 + 1, c->
sub_˘x
->
œ°pos
, c->
íd_p
,

556 
c
->
fú°p
, &c->
œ°pos
) == 1) {

557 
	`YIELD
(1, 
c
, 6);

560 i‡(
c
->
sub_ªgex
->
Æt_ªgex
 =
NULL
)

562 
c
->
sub_ªgex
 = c->sub_ªgex->
Æt_ªgex
;

567 
l⁄gch¨
 
k
;

568 
k
 = 
	`£t_l⁄gch¨
(
c
->
°r
);

569 
c
->
°r
 +
	`gë_m˛í
(c->str);

570 i‡(!
	`ªgm©ch1
(
c
->
ª
, &
k
))

573 
c
->
ª
++;

574 
c
->
fú°p
 = 0;

576 i‡(
c
->
°r
 > c->
íd_p
) {

580 
c
->
œ°pos
 = c->
°r
;

581 #ifde‡
REGEX_DEBUG


582 i‡(
vîbo£
)

583 
	`¥ötf
("Suc˚ed: %†%d\n", 
c
->
°r
, c->
œ°pos
 - c->str);

585 
	`YIELD
(1, 
c
, 7);

587 
	}
}

590 
	$ªgm©ch
(
ªgexch¨
 * 
ª
, *
°r
, *
íd_p
, 
fú°p
, **
œ°pos
)

592 
M©chögC⁄ãxt1
 
c⁄tx
;

594 *
œ°pos
 = 
NULL
;

596 
c⁄tx
.
œbñ
 = 0;

597 
	`ªgm©ch_ôî
(&
c⁄tx
, 
ª
, 
°r
, 
íd_p
, 
fú°p
)) {

598 #ifde‡
REGEX_DEBUG


599 *
p
;

600 i‡(
vîbo£
) {

601 
	`¥ötf
("regmatch: matched <");

602 
p
 = 
°r
;Ö < 
c⁄tx
.
œ°pos
;Ö++)

603 
	`putch¨
(*
p
);

604 
	`¥ötf
(">\n");

607 i‡(*
œ°pos
 =
NULL
 || *œ°po†< 
c⁄tx
.lastpos)

608 *
œ°pos
 = 
c⁄tx
.lastpos;

610 i‡(*
œ°pos
 =
NULL
)

613 
	}
}

617 
	$ªgm©ch1
(
ªgexch¨
 * 
ª
, 
l⁄gch¨
 * 
c
)

619 
™s
;

621 #ifde‡
USE_M17N


622 i‡(
c
->
ty≥
 =
RE_TYPE_SYMBOL
)

625 
	`RE_MODE
(
ª
)) {

626 
RE_ANY
:

627 #ifde‡
REGEX_DEBUG


628 i‡(
vîbo£
)

629 
	`¥ötf
("%†v†™y. -> 1\n", 
	`lc2c
(
c
, 1));

632 
RE_NORMAL
:

633 
™s
 = 
	`m©ch_l⁄gch¨
(
ª
->
p
.
∑âîn
, 
c
,Ñe->
mode
 & 
RE_IGNCASE
);

634 #ifde‡
REGEX_DEBUG


635 i‡(
vîbo£
)

636 
	`¥ötf
("RE=%†v†%†-> %d\n", 
	`lc2c
(
ª
->
p
.
∑âîn
, 1),Üc2c(
c
, 1),

637 
™s
);

639  
™s
;

640 
RE_WHICH
:

641  
	`m©chWhich
(
ª
->
p
.
∑âîn
, 
c
,Ñe->
mode
 & 
RE_IGNCASE
);

642 
RE_EXCEPT
:

643  !
	`m©chWhich
(
ª
->
p
.
∑âîn
, 
c
,Ñe->
mode
 & 
RE_IGNCASE
);

646 
	}
}

649 
	$m©chWhich
(
l⁄gch¨
 * 
∑âîn
,Ü⁄gch¨ * 
c
, 
ignˇ£
)

651 
l⁄gch¨
 *
p
 = 
∑âîn
;

652 
™s
 = 0;

654 #ifde‡
REGEX_DEBUG


655 i‡(
vîbo£
)

656 
	`¥ötf
("REÖ©ã∫ = %†ch¨=%s", 
	`lc2c
(
∑âîn
, 10000),Üc2c(
c
, 1));

658 
p
->
ty≥
 !
RE_TYPE_END
) {

659 i‡((
p
 + 1)->
ty≥
 =
RE_WHICH_RANGE
 && (∞+ 2)->ty≥ !
RE_TYPE_END
) {

660 i‡(
	`m©ch_ønge_l⁄gch¨
(
p
,Ö + 2, 
c
, 
ignˇ£
)) {

661 
™s
 = 1;

664 
p
 += 3;

667 i‡(
	`m©ch_l⁄gch¨
(
p
, 
c
, 
ignˇ£
)) {

668 
™s
 = 1;

671 
p
++;

674 #ifde‡
REGEX_DEBUG


675 i‡(
vîbo£
)

676 
	`¥ötf
(" -> %d\n", 
™s
);

678  
™s
;

679 
	}
}

682 
	$m©ch_l⁄gch¨
(
l⁄gch¨
 * 
a
,Ü⁄gch¨ * 
b
, 
ign‹e
)

684 #ifde‡
USE_M17N


685 i‡(
a
->
ty≥
 !
b
->type)

687 i‡(
a
->
ty≥
 =
RE_TYPE_WCHAR_T
)

688  (
a
->
wch
.
ccs
 =
b
->wch.ccsË&& (a->wch.
code
 == b->wch.code);

690 i‡(
ign‹e
 && 
	`IS_ALPHA
(
b
->
ch
))

691  (
a
->
ch
 =
	`TOLOWER
(
b
->chË||á->ch =
	`TOUPPER
(b->ch));

693  
a
->
ch
 =
b
->ch;

694 
	}
}

697 
	$m©ch_ønge_l⁄gch¨
(
l⁄gch¨
 * 
a
,Ü⁄gch¨ * 
b
,Ü⁄gch¨ * 
c
, 
ign‹e
)

699 #ifde‡
USE_M17N


700 i‡(
a
->
ty≥
 !
b
->ty≥ ||á->ty≥ !
c
->type)

702 i‡(
a
->
ty≥
 =
RE_TYPE_WCHAR_T
)

703  ((
a
->
wch
.
ccs
 =
c
->wch.cc†&& c->wch.cc†=
b
->wch.ccs) &&

704 (
a
->
wch
.
code
 <
c
->wch.codê&& c->wch.codê<
b
->wch.code));

706 i‡(
ign‹e
 && 
	`IS_ALPHA
(
c
->
ch
))

707  ((
a
->
ch
 <
	`TOLOWER
(
c
->chË&& TOLOWER(c->chË<
b
->ch) ||

708 (
a
->
ch
 <
	`TOUPPER
(
c
->chË&& TOUPPER(c->chË<
b
->ch));

710  (
a
->
ch
 <
c
->ch && c->ch <
b
->ch);

711 
	}
}

713 #ifde‡
REGEX_DEBUG


715 
	$lc2c
(
l⁄gch¨
 * 
x
, 
Àn
)

717 
y
[100];

718 
i
 = 0, 
j
 = 0;

719 *
r
;

721 
x
[
j
].
ty≥
 !
RE_TYPE_END
 && j < 
Àn
) {

722 i‡(
x
[
j
].
ty≥
 =
RE_WHICH_RANGE
)

723 
y
[
i
++] = '-';

724 #ifde‡
USE_M17N


725 i‡(
x
[
j
].
ty≥
 =
RE_TYPE_WCHAR_T
) {

726 
buf
[20];

727 
	`•rötf
(
buf
, "[%x-%x]", 
x
[
j
].
wch
.
ccs
, x[j].wch.
code
);

728 
	`°r˝y
(&
y
[
i
], 
buf
);

729 
i
 +
	`°æí
(
buf
);

733 
y
[
i
++] = 
x
[
j
].
ch
;

734 
j
++;

736 
y
[
i
] = '\0';

737 
r
 = 
	`GC_mÆloc_©omic
(
i
 + 1);

738 
	`°r˝y
(
r
, 
y
);

739  
r
;

740 
	}
}

743 
	$debugª
(
ªgexch¨
 * 
ª
)

745 ; 
	`RE_MODE
(
ª
Ë!
RE_ENDMARK
;Ñe++) {

746 
	`RE_MODE
(
ª
)) {

747 
RE_BEGIN
:

748 
	`¥ötf
("Begin ");

750 
RE_END
:

751 
	`¥ötf
("End ");

754 i‡(
ª
->
mode
 & 
RE_ANYTIME
)

755 
	`¥ötf
("Anytime-");

756 i‡(
ª
->
mode
 & 
RE_OPT
)

757 
	`¥ötf
("Opt-");

759 
	`RE_MODE
(
ª
)) {

760 
RE_ANY
:

761 
	`¥ötf
("Any ");

763 
RE_NORMAL
:

764 
	`¥ötf
("M©ch-to'%c' ", *
ª
->
p
.
∑âîn
);

766 
RE_WHICH
:

767 
	`¥ötf
("O√-of\"%s\" ", 
	`lc2c
(
ª
->
p
.
∑âîn
, 10000));

769 
RE_EXCEPT
:

770 
	`¥ötf
("Othî-th™\"%s\" ", 
	`lc2c
(
ª
->
p
.
∑âîn
, 10000));

772 
RE_SUBREGEX
:

774 
Regex
 *
r
 = 
ª
->
p
.
sub
;

775 
	`¥ötf
("(");

776 
r
) {

777 
	`debugª
(
r
->
ª
);

778 i‡(
r
->
Æt_ªgex
)

779 
	`¥ötf
(" | ");

780 
r
 =Ñ->
Æt_ªgex
;

782 
	`¥ötf
(")");

786 
	`¥ötf
("Unknown ");

789 
	}
}

793 #ifde‡
REGEXTEST


795 
	$maö
(
¨gc
, **
¨gv
)

797 
buf
[128], 
buf2
[128];

798 *
msg
;

799 
Regex
 *
ª
;

800 *
Âos
, *
ïos
;

801 
FILE
 *
f
 = 
°dö
;

802 
i
 = 1;

804 #ifde‡
USE_M17N


805 
	`wtf_öô
(
WC_CES_EUC_JP
, WC_CES_EUC_JP);

807 #ifde‡
REGEX_DEBUG


808 
i
 = 1; i < 
¨gc
; i++) {

809 i‡(
	`°rcmp
(
¨gv
[
i
], "-v") == 0)

810 
vîbo£
 = 1;

816 i‡(
¨gc
 > 
i
)

817 
f
 = 
	`f›í
(
¨gv
[
i
], "r");

818 i‡(
f
 =
NULL
) {

819 
	`Ârötf
(
°dîr
, "C™'à›í %s\n", 
¨gv
[
i
]);

820 
	`exô
(1);

822 
	`fsˇnf
(
f
, "%s%s", 
buf
, 
buf2
) == 2) {

823 
ª
 = 
	`√wRegex
(
buf
, 0, 
NULL
, &
msg
);

824 i‡(
ª
 =
NULL
) {

825 
	`¥ötf
("Eº‹ o¿ªgex∞/%s/: %s\n", 
buf
, 
msg
);

826 
	`exô
(1);

828 i‡(
	`RegexM©ch
(
ª
, 
buf2
, -1, 1)) {

829 
	`¥ötf
("/%s/\t\"%s\"\t\"", 
buf
, 
buf2
);

830 
	`M©chedPosôi⁄
(
ª
, &
Âos
, &
ïos
);

831 
Âos
 < 
ïos
)

832 
	`putch¨
(*(
Âos
++));

833 
	`putch¨
('"');

836 
	`¥ötf
("/%s/\t\"%s\"\äo_m©ch", 
buf
, 
buf2
);

837 
	`putch¨
('\n');

841 
	}
}

	@regex.h

2 
	#REGEX_MAX
 64

	)

3 
	#STORAGE_MAX
 256

	)

6 
	mty≥
;

7 #ifde‡
USE_M17N


8 
wc_wch¨_t
 
	mwch
;

10 
	mch
;

11 } 
	tl⁄gch¨
;

13 
	sªgexch¨
 {

15 
l⁄gch¨
 *
	m∑âîn
;

16 
ªgex
 *
	msub
;

17 } 
	mp
;

18 
	mmode
;

19 } 
	tªgexch¨
;

22 
	sªgex
 {

23 
ªgexch¨
 
	mª
[
REGEX_MAX
];

24 
l⁄gch¨
 
	m°‹age
[
STORAGE_MAX
];

25 *
	mposôi⁄
;

26 *
	mÕosôi⁄
;

27 
ªgex
 *
	mÆt_ªgex
;

28 } 
	tRegex
;

31 
Regex
 *
√wRegex
(*
ex
, 
ignˇ£
, Regex *
ªgex
, **
îr‹_msg
);

33 
RegexM©ch
(
Regex
 *
ª
, *
°r
, 
Àn
, 
fú°p
);

35 
M©chedPosôi⁄
(
Regex
 *
ª
, **
fú°
, **
œ°
);

39 *
ªgexCompûe
(*
ex
, 
ignˇ£
);

41 
ªgexM©ch
(*
°r
, 
Àn
, 
fú°p
);

43 
m©chedPosôi⁄
(**
fú°
, **
œ°
);

	@scrsize.c

34 
	~<X11/Xlib.h
>

35 
	~<X11/Xutû.h
>

36 
	~<°dlib.h
>

37 
	~<°dio.h
>

40 
	$maö
()

42 *
˝
;

43 
Di•œy
 *
dpy
;

44 
Wödow
 
wödow
;

45 
XWödowAâribuãs
 
wö_©åibuãs
;

46 
XSizeHöts
 
höts
;

47 
l⁄gjunk
;

48 
d°
[2];

50 
	`_s¸size
(
d°
);

51 
˝
 = 
	`gëív
("WINDOWID");

52 i‡(
˝
) {

53 
dpy
 = 
	`XO≥nDi•œy
(
NULL
);

54 i‡(
dpy
) {

55 i‡(
	`XGëWödowAâribuãs
(
dpy
, 
wödow
 = 
	`©ﬁ
(
˝
), &
wö_©åibuãs
))

56 i‡(
	`XGëWMN‹mÆHöts
(
dpy
, 
wödow
, &
höts
, &
l⁄gjunk
))

57 i‡(
höts
.
Êags
 & 
PResizeInc
 && höts.
width_öc


58 && 
höts
.
height_öc
) {

59 i‡(
höts
.
Êags
 & (
PBa£Size
 | 
PMöSize
)) {

60 i‡(
höts
.
Êags
 & 
PBa£Size
) {

61 
wö_©åibuãs
.
width
 -
höts
.
ba£_width
;

62 
wö_©åibuãs
.
height
 -
höts
.
ba£_height
;

65 
wö_©åibuãs
.
width
 -
höts
.
mö_width
;

66 
wö_©åibuãs
.
height
 -
höts
.
mö_height
;

69 
d°
[0] = 
wö_©åibuãs
.
width
 / 
höts
.
width_öc
;

70 
d°
[1] = 
wö_©åibuãs
.
height
 / 
höts
.
height_öc
;

72 
	`XClo£Di•œy
(
dpy
);

75 
	`¥ötf
("%ò%i\n", 
d°
[0], dst[1]);

77 
	}
}

	@search.c

2 
	~"fm.h
"

3 
	~"ªgex.h
"

4 
	~<sig«l.h
>

5 
	~<î∫o.h
>

6 
	~<uni°d.h
>

9 
	$£t_m¨k
(
Löe
 *
l
, 
pos
, 
ïos
)

11 ; 
pos
 < 
ïos
 &&Öo†< 
l
->
size
;Öos++)

12 
l
->
¥›Buf
[
pos
] |
PE_MARK
;

13 
	}
}

15 #ifde‡
USE_MIGEMO


17 
FILE
 *
	gmigem‹
 = 
NULL
, *
	gmigemow
 = NULL;

18 
	gmigemo_ru¬ög
;

19 
	gmigemo_pid
 = 0;

22 
	$öô_migemo
()

24 
migemo_a˘ive
 = 
migemo_ru¬ög
 = 
u£_migemo
;

25 i‡(
migem‹
 !
NULL
)

26 
	`f˛o£
(
migem‹
);

27 i‡(
migemow
 !
NULL
)

28 
	`f˛o£
(
migemow
);

29 
migem‹
 = 
migemow
 = 
NULL
;

30 i‡(
migemo_pid
)

31 
	`kûl
(
migemo_pid
, 
SIGKILL
);

32 
migemo_pid
 = 0;

33 
	}
}

36 
	$›í_migemo
(*
migemo_comm™d
)

38 
migemo_pid
 = 
	`›í_pùe_rw
(&
migem‹
, &
migemow
);

39 i‡(
migemo_pid
 < 0)

40 
îr0
;

41 i‡(
migemo_pid
 == 0) {

43 
	`£tup_chûd
(
FALSE
, 2, -1);

44 
	`myExec
(
migemo_comm™d
);

48 
îr0
:

49 
migemo_pid
 = 0;

50 
migemo_a˘ive
 = 
migemo_ru¬ög
 = 0;

52 
	}
}

55 
	$migemo°r
(*
°r
)

57 
Så
 
tmp
 = 
NULL
;

58 i‡(
migem‹
 =
NULL
 || 
migemow
 == NULL)

59 i‡(
	`›í_migemo
(
migemo_comm™d
) == 0)

60  
°r
;

61 
	`Ârötf
(
migemow
, "%s\n", 
	`c⁄v_to_sy°em
(
°r
));

62 
agaö
:

63 i‡(
	`fÊush
(
migemow
) != 0) {

64 
î∫o
) {

65 
EINTR
:

66 
agaö
;

68 
îr
;

71 
tmp
 = 
	`Så_c⁄v_‰om_sy°em
(
	`Såfgës
(
migem‹
));

72 
	`Såch›
(
tmp
);

73 i‡(
tmp
->
Àngth
 == 0)

74 
îr
;

75  
	`c⁄v_£¨ch_°rög
(
tmp
->
±r
, 
Sy°emCh¨£t
);

76 
îr
:

78 
	`öô_migemo
();

79 
migemo_a˘ive
 = 
migemo_ru¬ög
 = 0;

80  
°r
;

81 
	}
}

84 #ifde‡
USE_M17N


87 
	$c⁄v_£¨ch_°rög
(*
°r
, 
wc_˚s
 
f_˚s
)

89 i‡(
SórchC⁄v
 && !
WcO±i⁄
.
¥e_c⁄v
 &&

90 
Cuºítbuf
->
documít_ch¨£t
 !
f_˚s
)

91 
°r
 = 
	`wtf_c⁄v_fô
(°r, 
Cuºítbuf
->
documít_ch¨£t
);

92  
°r
;

93 
	}
}

97 
	$f‹w¨dSórch
(
Buf„r
 *
buf
, *
°r
)

99 *
p
, *
fú°
, *
œ°
;

100 
Löe
 *
l
, *
begö
;

101 
wøµed
 = 
FALSE
;

102 
pos
;

104 #ifde‡
USE_MIGEMO


105 i‡(
migemo_a˘ive
 > 0) {

106 i‡(((
p
 = 
	`ªgexCompûe
(
	`migemo°r
(
°r
), 
Ign‹eCa£
)Ë!
NULL
)

107 && ((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
)) {

108 
	`mesßge
(
p
, 0, 0);

109  
SR_NOTFOUND
;

114 i‡((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
) {

115 
	`mesßge
(
p
, 0, 0);

116  
SR_NOTFOUND
;

118 
l
 = 
buf
->
cuºítLöe
;

119 i‡(
l
 =
NULL
) {

120  
SR_NOTFOUND
;

122 
pos
 = 
buf
->pos;

123 i‡(
l
->
bpos
) {

124 
pos
 +
l
->
bpos
;

125 
l
->
bpos
 &&Ü->
¥ev
)

126 
l
 =Ü->
¥ev
;

128 
begö
 = 
l
;

129 #ifde‡
USE_M17N


130 
pos
 < 
l
->
size
 &&Ü->
¥›Buf
[pos] & 
PC_WCHAR2
)

131 
pos
++;

133 i‡(
pos
 < 
l
->
size
 && 
	`ªgexM©ch
(&l->
löeBuf
[pos],Ü->size -Öos, 0) == 1) {

134 
	`m©chedPosôi⁄
(&
fú°
, &
œ°
);

135 
pos
 = 
fú°
 - 
l
->
löeBuf
;

136 
pos
 >
l
->
Àn
 &&Ü->
√xt
 &&Ü->√xt->
bpos
) {

137 
pos
 -
l
->
Àn
;

138 
l
 =Ü->
√xt
;

140 
buf
->
pos
 =Öos;

141 i‡(
l
 !
buf
->
cuºítLöe
)

142 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

143 
	`¨øngeCurs‹
(
buf
);

144 
	`£t_m¨k
(
l
, 
pos
,Öo†+ 
œ°
 - 
fú°
);

145  
SR_FOUND
;

147 
l
 =Ü->
√xt
;;Ü =Ü->next) {

148 i‡(
l
 =
NULL
) {

149 i‡(
buf
->
∑gîSour˚
) {

150 
l
 = 
	`gëNextPage
(
buf
, 1);

151 i‡(
l
 =
NULL
) {

152 i‡(
WøpSórch
 && !
wøµed
) {

153 
l
 = 
buf
->
fú°Löe
;

154 
wøµed
 = 
TRUE
;

161 i‡(
WøpSórch
) {

162 
l
 = 
buf
->
fú°Löe
;

163 
wøµed
 = 
TRUE
;

169 i‡(
l
->
bpos
)

171 i‡(
	`ªgexM©ch
(
l
->
löeBuf
,Ü->
size
, 1) == 1) {

172 
	`m©chedPosôi⁄
(&
fú°
, &
œ°
);

173 
pos
 = 
fú°
 - 
l
->
löeBuf
;

174 
pos
 >
l
->
Àn
 &&Ü->
√xt
 &&Ü->√xt->
bpos
) {

175 
pos
 -
l
->
Àn
;

176 
l
 =Ü->
√xt
;

178 
buf
->
pos
 =Öos;

179 
buf
->
cuºítLöe
 = 
l
;

180 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

181 
	`¨øngeCurs‹
(
buf
);

182 
	`£t_m¨k
(
l
, 
pos
,Öo†+ 
œ°
 - 
fú°
);

183  
SR_FOUND
 | (
wøµed
 ? 
SR_WRAPPED
 : 0);

185 i‡(
wøµed
 && 
l
 =
begö
)

188  
SR_NOTFOUND
;

189 
	}
}

192 
	$backw¨dSórch
(
Buf„r
 *
buf
, *
°r
)

194 *
p
, *
q
, *
found
, *
found_œ°
, *
fú°
, *
œ°
;

195 
Löe
 *
l
, *
begö
;

196 
wøµed
 = 
FALSE
;

197 
pos
;

199 #ifde‡
USE_MIGEMO


200 i‡(
migemo_a˘ive
 > 0) {

201 i‡(((
p
 = 
	`ªgexCompûe
(
	`migemo°r
(
°r
), 
Ign‹eCa£
)Ë!
NULL
)

202 && ((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
)) {

203 
	`mesßge
(
p
, 0, 0);

204  
SR_NOTFOUND
;

209 i‡((
p
 = 
	`ªgexCompûe
(
°r
, 
Ign‹eCa£
)Ë!
NULL
) {

210 
	`mesßge
(
p
, 0, 0);

211  
SR_NOTFOUND
;

213 
l
 = 
buf
->
cuºítLöe
;

214 i‡(
l
 =
NULL
) {

215  
SR_NOTFOUND
;

217 
pos
 = 
buf
->pos;

218 i‡(
l
->
bpos
) {

219 
pos
 +
l
->
bpos
;

220 
l
->
bpos
 &&Ü->
¥ev
)

221 
l
 =Ü->
¥ev
;

223 
begö
 = 
l
;

224 i‡(
pos
 > 0) {

225 
pos
--;

226 #ifde‡
USE_M17N


227 
pos
 > 0 && 
l
->
¥›Buf
[pos] & 
PC_WCHAR2
)

228 
pos
--;

230 
p
 = &
l
->
löeBuf
[
pos
];

231 
found
 = 
NULL
;

232 
found_œ°
 = 
NULL
;

233 
q
 = 
l
->
löeBuf
;

234 
	`ªgexM©ch
(
q
, &
l
->
löeBuf
[l->
size
] - q, q ==Ü->lineBuf) == 1) {

235 
	`m©chedPosôi⁄
(&
fú°
, &
œ°
);

236 i‡(
fú°
 <
p
) {

237 
found
 = 
fú°
;

238 
found_œ°
 = 
œ°
;

240 i‡(
q
 - 
l
->
löeBuf
 >l->
size
)

242 
q
++;

243 #ifde‡
USE_M17N


244 
q
 - 
l
->
löeBuf
 <Ü->
size


245 && 
l
->
¥›Buf
[
q
 -Ü->
löeBuf
] & 
PC_WCHAR2
)

246 
q
++;

248 i‡(
q
 > 
p
)

251 i‡(
found
) {

252 
pos
 = 
found
 - 
l
->
löeBuf
;

253 
pos
 >
l
->
Àn
 &&Ü->
√xt
 &&Ü->√xt->
bpos
) {

254 
pos
 -
l
->
Àn
;

255 
l
 =Ü->
√xt
;

257 
buf
->
pos
 =Öos;

258 i‡(
l
 !
buf
->
cuºítLöe
)

259 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

260 
	`¨øngeCurs‹
(
buf
);

261 
	`£t_m¨k
(
l
, 
pos
,Öo†+ 
found_œ°
 - 
found
);

262  
SR_FOUND
;

265 
l
 =Ü->
¥ev
;;Ü =Ü->prev) {

266 i‡(
l
 =
NULL
) {

267 i‡(
WøpSórch
) {

268 
l
 = 
buf
->
œ°Löe
;

269 
wøµed
 = 
TRUE
;

275 
found
 = 
NULL
;

276 
found_œ°
 = 
NULL
;

277 
q
 = 
l
->
löeBuf
;

278 
	`ªgexM©ch
(
q
, &
l
->
löeBuf
[l->
size
] - q, q ==Ü->lineBuf) == 1) {

279 
	`m©chedPosôi⁄
(&
fú°
, &
œ°
);

280 
found
 = 
fú°
;

281 
found_œ°
 = 
œ°
;

282 i‡(
q
 - 
l
->
löeBuf
 >l->
size
)

284 
q
++;

285 #ifde‡
USE_M17N


286 
q
 - 
l
->
löeBuf
 <Ü->
size


287 && 
l
->
¥›Buf
[
q
 -Ü->
löeBuf
] & 
PC_WCHAR2
)

288 
q
++;

291 i‡(
found
) {

292 
pos
 = 
found
 - 
l
->
löeBuf
;

293 
pos
 >
l
->
Àn
 &&Ü->
√xt
 &&Ü->√xt->
bpos
) {

294 
pos
 -
l
->
Àn
;

295 
l
 =Ü->
√xt
;

297 
buf
->
pos
 =Öos;

298 
	`gŸoLöe
(
buf
, 
l
->
löíumbî
);

299 
	`¨øngeCurs‹
(
buf
);

300 
	`£t_m¨k
(
l
, 
pos
,Öo†+ 
found_œ°
 - 
found
);

301  
SR_FOUND
 | (
wøµed
 ? 
SR_WRAPPED
 : 0);

303 i‡(
wøµed
 && 
l
 =
begö
)

306  
SR_NOTFOUND
;

307 
	}
}

	@symbol.c

2 
	~"fm.h
"

4 
	~"Symbﬁs/Æt.sym
"

5 
	~"Symbﬁs/gøph.sym
"

6 #ifde‡
USE_M17N


7 
	~"Symbﬁs/eucjp.sym
"

8 
	~"Symbﬁs/euckr.sym
"

9 
	~"Symbﬁs/euc˙.sym
"

10 
	~"Symbﬁs/eu˘w.sym
"

11 
	~"Symbﬁs/big5.sym
"

12 #ifde‡
USE_UNICODE


13 
	~"Symbﬁs/utf8.sym
"

15 
	~"Symbﬁs/˝850.sym
"

18 
wc_˚s
 
	m˚s
;

19 
	mwidth
;

20 **
	môem
;

21 
	mícode
;

22 } 
	tsymbﬁ_£t
;

25 
wc_˚s
 
	mch¨£t
;

26 
symbﬁ_£t
 *
	msymbﬁ
;

27 } 
	tch¨£t_symbﬁ_£t
;

30 
symbﬁ_£t
 
	gÆt_symbﬁ_£t
 = { 
WC_CES_US_ASCII
, 1, 
Æt_symbﬁ
, 1 };

31 
symbﬁ_£t
 
	gÆt2_symbﬁ_£t
 = { 
WC_CES_US_ASCII
, 2, 
Æt2_symbﬁ
, 1 };

32 
symbﬁ_£t
 
	geucjp_symbﬁ_£t
 = { 
WC_CES_EUC_JP
, 2, 
eucjp_symbﬁ
, 0 };

33 
symbﬁ_£t
 
	geuckr_symbﬁ_£t
 = { 
WC_CES_EUC_KR
, 2, 
euckr_symbﬁ
, 0 };

34 
symbﬁ_£t
 
	geuc˙_symbﬁ_£t
 = { 
WC_CES_EUC_CN
, 2, 
euc˙_symbﬁ
, 0 };

35 
symbﬁ_£t
 
	geu˘w_symbﬁ_£t
 = { 
WC_CES_EUC_TW
, 2, 
eu˘w_symbﬁ
, 0 };

36 
symbﬁ_£t
 
	gbig5_symbﬁ_£t
 = { 
WC_CES_BIG5
, 2, 
big5_symbﬁ
, 0 };

37 #ifde‡
USE_UNICODE


38 
symbﬁ_£t
 
	gutf8_symbﬁ_£t
 = { 
WC_CES_UTF_8
, 1, 
utf8_symbﬁ
, 0 };

40 
symbﬁ_£t
 
	g˝850_symbﬁ_£t
 = { 
WC_CES_CP850
, 1, 
˝850_symbﬁ
, 0 };

42 
ch¨£t_symbﬁ_£t
 
	gch¨£t_symbﬁ_li°
[] = {

43 { 
WC_CES_EUC_JP
, &
eucjp_symbﬁ_£t
 },

44 { 
WC_CES_SHIFT_JIS
, &
eucjp_symbﬁ_£t
 },

45 { 
WC_CES_ISO_2022_JP
, &
eucjp_symbﬁ_£t
 },

46 { 
WC_CES_ISO_2022_JP_2
, &
eucjp_symbﬁ_£t
 },

47 { 
WC_CES_ISO_2022_JP_3
, &
eucjp_symbﬁ_£t
 },

48 { 
WC_CES_EUC_KR
, &
euckr_symbﬁ_£t
 },

49 { 
WC_CES_ISO_2022_KR
, &
euckr_symbﬁ_£t
 },

50 { 
WC_CES_JOHAB
, &
euckr_symbﬁ_£t
 },

51 { 
WC_CES_UHC
, &
euckr_symbﬁ_£t
 },

52 { 
WC_CES_EUC_CN
, &
euc˙_symbﬁ_£t
 },

53 { 
WC_CES_GBK
, &
euc˙_symbﬁ_£t
 },

54 { 
WC_CES_GB18030
, &
euc˙_symbﬁ_£t
 },

55 { 
WC_CES_HZ_GB_2312
, &
euc˙_symbﬁ_£t
 },

56 { 
WC_CES_ISO_2022_CN
, &
euc˙_symbﬁ_£t
 },

57 { 
WC_CES_EUC_TW
, &
eu˘w_symbﬁ_£t
 },

58 { 
WC_CES_BIG5
, &
big5_symbﬁ_£t
 },

59 { 
WC_CES_HKSCS
, &
big5_symbﬁ_£t
 },

60 #ifde‡
USE_UNICODE


61 { 
WC_CES_UTF_8
, &
utf8_symbﬁ_£t
 },

63 { 
WC_CES_CP850
, &
˝850_symbﬁ_£t
 },

64 { 0, 
NULL
 },

68 
wc_˚s
 
	gßve_ch¨£t
 = 0;

69 
symbﬁ_£t
 *
	gßve_symbﬁ
 = 
NULL
;

72 
	$ícode_symbﬁ
(
symbﬁ_£t
 * 
s
)

74 
i
;

76 
i
 = 0; 
s
->
ôem
[i]; i++) {

77 i‡(*(
s
->
ôem
[
i
]))

78 
s
->
ôem
[
i
] = 
	`wc_c⁄v
(s->ôem[i], s->
˚s
, 
I¬îCh¨£t
)->
±r
;

80 
s
->
ícode
 = 1;

81 
	}
}

84 
	$gë_symbﬁ
(
wc_˚s
 
ch¨£t
, *
width
)

86 
ch¨£t_symbﬁ_£t
 *
p
;

87 
symbﬁ_£t
 *
s
 = 
NULL
;

89 i‡(
ch¨£t
 =
ßve_ch¨£t
 && 
ßve_symbﬁ
 !
NULL
 &&

90 *
width
 =
ßve_symbﬁ
->width) {

91 *
width
 = 
ßve_symbﬁ
->width;

92  
ßve_symbﬁ
->
ôem
;

94 
ßve_ch¨£t
 = 
ch¨£t
;

95 
p
 = 
ch¨£t_symbﬁ_li°
;Ö->
ch¨£t
;Ö++) {

96 i‡(
ch¨£t
 =
p
->charset &&

97 (*
width
 =0 || *width =
p
->
symbﬁ
->width)) {

98 
s
 = 
p
->
symbﬁ
;

102 i‡(
s
 =
NULL
)

103 
s
 = (*
width
 =2Ë? &
Æt2_symbﬁ_£t
 : &
Æt_symbﬁ_£t
;

104 i‡(
s
 !
ßve_symbﬁ
) {

105 i‡(!
s
->
ícode
)

106 
	`ícode_symbﬁ
(
s
);

107 
ßve_symbﬁ
 = 
s
;

109 *
width
 = 
s
->width;

110  
s
->
ôem
;

111 
	}
}

114 
	$£t_symbﬁ
(
width
)

116 **
symbﬁ_buf
 = 
NULL
;

117 
ßve_width
 = -1;

118 
symbﬁ_£t
 *
s
 = &
Æt_symbﬁ_£t
;

119 
i
;

120 
Så
 
tmp
;

122 i‡(
width
 =
ßve_width
)

123  
symbﬁ_buf
;

124 i‡(
symbﬁ_buf
 =
NULL
) {

125 
i
 = 0; 
s
->
ôem
[i]; i++) ;

126 
symbﬁ_buf
 = 
	`New_N
(*, 
i
);

128 
i
 = 0; 
s
->
ôem
[i]; i++) {

129 
tmp
 = 
	`Så√w_size
(4);

130 i‡(
width
 == 2)

131 
	`wtf_push
(
tmp
, 
WC_CCS_SPECIAL_W
, (
wc_uöt32
Ë(
SYMBOL_BASE
 + 
i
));

133 
	`wtf_push
(
tmp
, 
WC_CCS_SPECIAL
, (
wc_uöt32
Ë(
SYMBOL_BASE
 + 
i
));

134 
symbﬁ_buf
[
i
] = 
tmp
->
±r
;

136 
ßve_width
 = 
width
;

137  
symbﬁ_buf
;

138 
	}
}

143 
	$gë_symbﬁ
()

145  
Æt_symbﬁ
;

146 
	}
}

150 
	$push_symbﬁ
(
Så
 
°r
, 
symbﬁ
, 
width
, 
n
)

152 
buf
[2], *
p
;

153 
i
;

155 #ifde‡
USE_M17N


156 i‡(
width
 == 2)

157 
p
 = 
Æt2_symbﬁ
[()
symbﬁ
];

160 
p
 = 
Æt_symbﬁ
[()
symbﬁ
];

161 
i
 = 0; i < 2 && *
p
; i++,Ö++)

162 
buf
[
i
] = (*
p
 =' 'Ë? 
NBSP_CODE
 : *p;

164 
	`Såˇt
(
°r
, 
	`S¥ötf
("<_SYMBOL TYPE=%d>", 
symbﬁ
));

165 ; 
n
 > 0;Ç--)

166 
	`Såˇt_ch¨p_n
(
°r
, 
buf
, 
i
);

167 
	`Såˇt_ch¨p
(
°r
, "</_SYMBOL>");

168 
	}
}

	@table.c

5 
	~<sys/ty≥s.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<m©h.h
>

9 
	~"fm.h
"

10 
	~"html.h
"

11 
	~"∑r£ègx.h
"

12 
	~"Så.h
"

13 
	~"my˘y≥.h
"

15 
	gsymbﬁ_width
 = 0;

16 
	gsymbﬁ_width0
 = 0;

18 
	#RULE_WIDTH
 
symbﬁ_width


	)

19 
	#RULE
(
mode
,
n
Ë(((modeË=
BORDER_THICK
Ë? (“Ë+ 16Ë: (n))

	)

20 
	#TK_VERTICALBAR
(
mode
Ë
	`RULE
(mode,5)

	)

22 
	#BORDERWIDTH
 2

	)

23 
	#BORDERHEIGHT
 1

	)

24 
	#NOBORDERWIDTH
 1

	)

25 
	#NOBORDERHEIGHT
 0

	)

27 
	#HTT_X
 1

	)

28 
	#HTT_Y
 2

	)

29 
	#HTT_ALIGN
 0x30

	)

30 
	#HTT_LEFT
 0x00

	)

31 
	#HTT_CENTER
 0x10

	)

32 
	#HTT_RIGHT
 0x20

	)

33 
	#HTT_TRSET
 0x40

	)

34 
	#HTT_VALIGN
 0x700

	)

35 
	#HTT_TOP
 0x100

	)

36 
	#HTT_MIDDLE
 0x200

	)

37 
	#HTT_BOTTOM
 0x400

	)

38 
	#HTT_VTRSET
 0x800

	)

39 #ifde‡
NOWRAP


40 
	#HTT_NOWRAP
 4

	)

42 
	#TAG_IS
(
s
,
èg
,
Àn
Ë(
	`°∫ˇ£cmp
(s,èg,Àn)==0&&(s[Àn] ='>' || 
	`IS_SPACE
(()s[Àn])))

	)

44 #i‚de‡
max


45 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

47 #i‚de‡
mö


48 
	#mö
(
a
,
b
Ë(◊Ë> (bË? (bË: (a))

	)

50 #i‚de‡
abs


51 
	#abs
(
a
Ë(◊Ë>0. ? (aË: -◊))

	)

54 
	#£t_¥evch¨
(
x
,
y
,
n
Ë
	`Såc›y_ch¨p_n
((x),(y),“))

	)

55 
	#£t_•a˚_to_¥evch¨
(
x
Ë
	`Såc›y_ch¨p_n
((x)," ",1)

	)

57 #ifde‡
MATRIX


58 #i‚de‡
MESCHACH


59 
	~"m©rix.c
"

63 #ifde‡
MATRIX


64 
c‹ª˘_èbÀ_m©rix
(
èbÀ
 *, , , , );

65 
£t_èbÀ_m©rix
(
èbÀ
 *, );

68 #ifde‡
MATRIX


70 
	$weight
(
x
)

73 i‡(
x
 < 
COLS
)

74  ()
x
;

76  
COLS
 * (
	`log
(()
x
 / COLS) + 1.);

77 
	}
}

80 
	$weight2
(
a
)

82  ()
a
 / 
COLS
 * 4 + 1.;

83 
	}
}

85 
	#sigma_td
(
a
Ë(0.5*
	`weight2
◊)Ë

	)

86 
	#sigma_td_nw
(
a
Ë(32*
	`weight2
◊)Ë

	)

87 
	#sigma_èbÀ
(
a
Ë(0.25*
	`weight2
◊)Ë

	)

88 
	#sigma_èbÀ_nw
(
a
Ë(2*
	`weight2
◊)Ë

	)

90 
	#LOG_MIN
 1.0

	)

92 
	$weight3
(
x
)

94 i‡(
x
 < 0.1)

96 i‡(
x
 < 
LOG_MIN
)

97  ()
x
;

99  
LOG_MIN
 * (
	`log
(()
x
 / LOG_MIN) + 1.);

100 
	}
}

104 
	$b£¨ch_2sh‹t
(
e1
, *
ít1
, 
e2
, *
ít2
, 
ba£
,

105 *
ödex¨øy
, 
√¡
)

107 
n
 = 
√¡
;

108 
k
 = 0;

110 
e
 = 
e1
 * 
ba£
 + 
e2
;

111 
n
 > 0) {

112 
¬
 = 
n
 / 2;

113 
idx
 = 
ödex¨øy
[
k
 + 
¬
];

114 
√
 = 
ít1
[
idx
] * 
ba£
 + 
ít2
[idx];

115 i‡(
√
 =
e
) {

116 
k
 +
¬
;

119 i‡(
√
 < 
e
) {

120 
n
 -
¬
 + 1;

121 
k
 +
¬
 + 1;

124 
n
 = 
¬
;

127  
k
;

128 
	}
}

131 
	$b£¨ch_doubÀ
(
e
, *
ít
, *
ödex¨øy
, 
√¡
)

133 
n
 = 
√¡
;

134 
k
 = 0;

136 
n
 > 0) {

137 
¬
 = 
n
 / 2;

138 
idx
 = 
ödex¨øy
[
k
 + 
¬
];

139 
√
 = 
ít
[
idx
];

140 i‡(
√
 =
e
) {

141 
k
 +
¬
;

144 i‡(
√
 > 
e
) {

145 
n
 -
¬
 + 1;

146 
k
 +
¬
 + 1;

149 
n
 = 
¬
;

152  
k
;

153 
	}
}

156 
	$˚û_©_öãrvÆs
(
x
, 
°ï
)

158 
mo
 = 
x
 % 
°ï
;

159 i‡(
mo
 > 0)

160 
x
 +
°ï
 - 
mo
;

161 i‡(
mo
 < 0)

162 
x
 -
mo
;

163  
x
;

164 
	}
}

167 
	$Êo‹_©_öãrvÆs
(
x
, 
°ï
)

169 
mo
 = 
x
 % 
°ï
;

170 i‡(
mo
 > 0)

171 
x
 -
mo
;

172 i‡(
mo
 < 0)

173 
x
 +
°ï
 - 
mo
;

174  
x
;

175 
	}
}

177 
	#round
(
x
Ë(()
	`Êo‹
((x)+0.5))

	)

179 #i‚de‡
MATRIX


181 
	$dv2sv
(*
dv
, *
iv
, 
size
)

183 
i
, 
k
, 
iw
;

184 *
ödex¨øy
;

185 *
edv
;

186 
w
 = 0., 
x
;

188 
ödex¨øy
 = 
	`NewAtom_N
(, 
size
);

189 
edv
 = 
	`NewAtom_N
(, 
size
);

190 
i
 = 0; i < 
size
; i++) {

191 
iv
[
i
] = 
	`˚û
(
dv
[i]);

192 
edv
[
i
] = ()
iv
[i] - 
dv
[i];

195 
w
 = 0.;

196 
k
 = 0; k < 
size
; k++) {

197 
x
 = 
edv
[
k
];

198 
w
 +
x
;

199 
i
 = 
	`b£¨ch_doubÀ
(
x
, 
edv
, 
ödex¨øy
, 
k
);

200 i‡(
k
 > 
i
) {

201 
ii
;

202 
ii
 = 
k
; iò> 
i
; ii--)

203 
ödex¨øy
[
ii
] = indexarray[ii - 1];

205 
ödex¨øy
[
i
] = 
k
;

207 
iw
 = 
	`mö
(()(
w
 + 0.5), 
size
);

208 i‡(
iw
 == 0)

210 
x
 = 
edv
[()
ödex¨øy
[
iw
 - 1]];

211 
i
 = 0; i < 
size
; i++) {

212 
k
 = 
ödex¨øy
[
i
];

213 i‡(
i
 >
iw
 && 
	`abs
(
edv
[
k
] - 
x
) > 1e-6)

215 
iv
[
k
]--;

217 
	}
}

221 
	$èbÀ_cﬁ•™
(
èbÀ
 *
t
, 
row
, 
cﬁ
)

223 
i
;

224 
i
 = 
cﬁ
 + 1; i <
t
->
maxcﬁ
 && (t->
èb©å
[
row
][i] & 
HTT_X
); i++) ;

225  
i
 - 
cﬁ
;

226 
	}
}

229 
	$èbÀ_row•™
(
èbÀ
 *
t
, 
row
, 
cﬁ
)

231 
i
;

232 i‡(!
t
->
èb©å
[
row
])

234 
i
 = 
row
 + 1; i <
t
->
maxrow
 &&Å->
èb©å
[i] &&

235 (
t
->
èb©å
[
i
][
cﬁ
] & 
HTT_Y
); i++) ;

236  
i
 - 
row
;

237 
	}
}

240 
	$möimum_˚Œ•acög
(
b‹dî_mode
)

242 
b‹dî_mode
) {

243 
BORDER_THIN
:

244 
BORDER_THICK
:

245 
BORDER_NOWIN
:

246  
RULE_WIDTH
;

247 
BORDER_NONE
:

253 
	}
}

256 
	$èbÀ_b‹dî_width
(
èbÀ
 *
t
)

258 
t
->
b‹dî_mode
) {

259 
BORDER_THIN
:

260 
BORDER_THICK
:

261  
t
->
maxcﬁ
 *Å->
˚Œ•acög
 + 2 * (
RULE_WIDTH
 +Å->
˚Œ∑ddög
);

262 
BORDER_NOWIN
:

263 
BORDER_NONE
:

264  
t
->
maxcﬁ
 *Å->
˚Œ•acög
;

269 
	}
}

271 
èbÀ
 *

272 
	$√wTabÀ
()

274 
èbÀ
 *
t
;

275 
i
, 
j
;

277 
t
 = 
	`New
(
èbÀ
);

278 
t
->
max_rowsize
 = 
MAXROW
;

279 
t
->
èbd©a
 = 
	`New_N
(
GíîÆLi°
 **, 
MAXROW
);

280 
t
->
èb©å
 = 
	`New_N
(
èbÀ_©å
 *, 
MAXROW
);

281 
t
->
èbheight
 = 
	`NewAtom_N
(, 
MAXROW
);

282 #ifde‡
ID_EXT


283 
t
->
èbidvÆue
 = 
	`New_N
(
Så
 *, 
MAXROW
);

284 
t
->
åidvÆue
 = 
	`New_N
(
Så
, 
MAXROW
);

287 
i
 = 0; i < 
MAXROW
; i++) {

288 
t
->
èbd©a
[
i
] = 
NULL
;

289 
t
->
èb©å
[
i
] = 0;

290 
t
->
èbheight
[
i
] = 0;

291 #ifde‡
ID_EXT


292 
t
->
èbidvÆue
[
i
] = 
NULL
;

293 
t
->
åidvÆue
[
i
] = 
NULL
;

296 
j
 = 0; j < 
MAXCOL
; j++) {

297 
t
->
èbwidth
[
j
] = 0;

298 
t
->
möimum_width
[
j
] = 0;

299 
t
->
fixed_width
[
j
] = 0;

301 
t
->
˚Œ
.
max˚Œ
 = -1;

302 
t
->
˚Œ
.
i˚Œ
 = -1;

303 
t
->
¡abÀ
 = 0;

304 
t
->
èbÀs_size
 = 0;

305 
t
->
èbÀs
 = 
NULL
;

306 #ifde‡
MATRIX


307 
t
->
m©rix
 = 
NULL
;

308 
t
->
ve˘‹
 = 
NULL
;

311 
t
->
èbc⁄ã¡ssize
 = 0;

312 
t
->
ödít
 = 0;

313 
t
->
löfo
.
¥ev_˘y≥
 = 
PC_ASCII
;

314 
t
->
löfo
.
¥ev_•a˚s
 = -1;

316 
t
->
löfo
.
¥evch¨
 = 
	`Så√w_size
(8);

317 
	`£t_¥evch¨
(
t
->
löfo
.
¥evch¨
, "", 0);

318 
t
->
å©å
 = 0;

320 
t
->
ˇ±i⁄
 = 
	`Så√w
();

321 
t
->
su•íded_d©a
 = 
NULL
;

322 #ifde‡
ID_EXT


323 
t
->
id
 = 
NULL
;

325  
t
;

326 
	}
}

329 
	$check_row
(
èbÀ
 *
t
, 
row
)

331 
i
, 
r
;

332 
GíîÆLi°
 ***
èbd©a
;

333 
èbÀ_©å
 **
èb©å
;

334 *
èbheight
;

335 #ifde‡
ID_EXT


336 
Så
 **
èbidvÆue
;

337 
Så
 *
åidvÆue
;

340 i‡(
row
 >
t
->
max_rowsize
) {

341 
r
 = 
	`max
(
t
->
max_rowsize
 * 2, 
row
 + 1);

342 
èbd©a
 = 
	`New_N
(
GíîÆLi°
 **, 
r
);

343 
èb©å
 = 
	`New_N
(
èbÀ_©å
 *, 
r
);

344 
èbheight
 = 
	`NewAtom_N
(, 
r
);

345 #ifde‡
ID_EXT


346 
èbidvÆue
 = 
	`New_N
(
Så
 *, 
r
);

347 
åidvÆue
 = 
	`New_N
(
Så
, 
r
);

349 
i
 = 0; i < 
t
->
max_rowsize
; i++) {

350 
èbd©a
[
i
] = 
t
->tabdata[i];

351 
èb©å
[
i
] = 
t
->tabattr[i];

352 
èbheight
[
i
] = 
t
->tabheight[i];

353 #ifde‡
ID_EXT


354 
èbidvÆue
[
i
] = 
t
->tabidvalue[i];

355 
åidvÆue
[
i
] = 
t
->tridvalue[i];

358 ; 
i
 < 
r
; i++) {

359 
èbd©a
[
i
] = 
NULL
;

360 
èb©å
[
i
] = 
NULL
;

361 
èbheight
[
i
] = 0;

362 #ifde‡
ID_EXT


363 
èbidvÆue
[
i
] = 
NULL
;

364 
åidvÆue
[
i
] = 
NULL
;

367 
t
->
èbd©a
 =Åabdata;

368 
t
->
èb©å
 =Åabattr;

369 
t
->
èbheight
 =Åabheight;

370 #ifde‡
ID_EXT


371 
t
->
èbidvÆue
 =Åabidvalue;

372 
t
->
åidvÆue
 =Åridvalue;

374 
t
->
max_rowsize
 = 
r
;

377 i‡(
t
->
èbd©a
[
row
] =
NULL
) {

378 
t
->
èbd©a
[
row
] = 
	`New_N
(
GíîÆLi°
 *, 
MAXCOL
);

379 
t
->
èb©å
[
row
] = 
	`NewAtom_N
(
èbÀ_©å
, 
MAXCOL
);

380 #ifde‡
ID_EXT


381 
t
->
èbidvÆue
[
row
] = 
	`New_N
(
Så
, 
MAXCOL
);

383 
i
 = 0; i < 
MAXCOL
; i++) {

384 
t
->
èbd©a
[
row
][
i
] = 
NULL
;

385 
t
->
èb©å
[
row
][
i
] = 0;

386 #ifde‡
ID_EXT


387 
t
->
èbidvÆue
[
row
][
i
] = 
NULL
;

391 
	}
}

394 
	$pushd©a
(
èbÀ
 *
t
, 
row
, 
cﬁ
, *
d©a
)

396 
	`check_row
(
t
, 
row
);

397 i‡(
t
->
èbd©a
[
row
][
cﬁ
] =
NULL
)

398 
t
->
èbd©a
[
row
][
cﬁ
] = 
	`√wGíîÆLi°
();

400 
	`pushText
(
t
->
èbd©a
[
row
][
cﬁ
], 
d©a
 ? data : "");

401 
	}
}

404 
	$su•íd_‹_pushd©a
(
èbÀ
 *
tbl
, *
löe
)

406 i‡(
tbl
->
Êag
 & 
TBL_IN_COL
)

407 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
löe
);

409 i‡(!
tbl
->
su•íded_d©a
)

410 
tbl
->
su•íded_d©a
 = 
	`√wTextLi°
();

411 
	`pushText
(
tbl
->
su•íded_d©a
, 
löe
 ?Üine : "");

413 
	}
}

415 #ifde‡
USE_M17N


416 
	#PUSH_TAG
(
°r
,
n
Ë
	`Såˇt_ch¨p_n
(
ègbuf
, så,Ç)

	)

418 
	#PUSH_TAG
(
°r
,
n
Ë
	`Såˇt_ch¨
(
ègbuf
, *°r)

	)

421 
	gvisibÀ_Àngth_off£t
 = 0;

423 
	$visibÀ_Àngth
(*
°r
)

425 
Àn
 = 0, 
n
, 
max_Àn
 = 0;

426 
°©us
 = 
R_ST_NORMAL
;

427 
¥ev_°©us
 = 
°©us
;

428 
Så
 
ègbuf
 = 
	`Så√w
();

429 *
t
, *
r2
;

430 
amp_Àn
 = 0;

432 
t
 = 
°r
;

433 *
°r
) {

434 
¥ev_°©us
 = 
°©us
;

435 i‡(
	`√xt_°©us
(*
°r
, &
°©us
)) {

436 #ifde‡
USE_M17N


437 
Àn
 +
	`gë_mcwidth
(
°r
);

438 
n
 = 
	`gë_m˛í
(
°r
);

441 
n
 = 1;

444 
Àn
++;

447 i‡(
°©us
 =
R_ST_TAG0
) {

448 
	`Så˛ór
(
ègbuf
);

449 
	`PUSH_TAG
(
°r
, 
n
);

451 i‡(
°©us
 =
R_ST_TAG
 || sètu†=
R_ST_DQUOTE


452 || 
°©us
 =
R_ST_QUOTE
 || sètu†=
R_ST_EQL


453 || 
°©us
 =
R_ST_VALUE
) {

454 
	`PUSH_TAG
(
°r
, 
n
);

456 i‡(
°©us
 =
R_ST_AMP
) {

457 i‡(
¥ev_°©us
 =
R_ST_NORMAL
) {

458 
	`Så˛ór
(
ègbuf
);

459 
Àn
--;

460 
amp_Àn
 = 0;

463 
	`PUSH_TAG
(
°r
, 
n
);

464 
amp_Àn
++;

467 i‡(
°©us
 =
R_ST_NORMAL
 && 
¥ev_°©us
 =
R_ST_AMP
) {

468 
	`PUSH_TAG
(
°r
, 
n
);

469 
r2
 = 
ègbuf
->
±r
;

470 
t
 = 
	`gëesˇ≥cmd
(&
r2
);

471 i‡(!*
r2
 && (*
t
 == '\r' || *t == '\n')) {

472 i‡(
Àn
 > 
max_Àn
)

473 
max_Àn
 = 
Àn
;

474 
Àn
 = 0;

477 
Àn
 +
	`gë_°rwidth
(
t
Ë+ gë_°rwidth(
r2
);

479 i‡(
°©us
 =
R_ST_NORMAL
 && 
	`ST_IS_REAL_TAG
(
¥ev_°©us
)) {

482 i‡(*
°r
 == '\t') {

483 
Àn
--;

485 
Àn
++;

486 } (
visibÀ_Àngth_off£t
 + 
Àn
Ë% 
Tab°›
 != 0);

488 i‡(*
°r
 == '\r' || *str == '\n') {

489 
Àn
--;

490 i‡(
Àn
 > 
max_Àn
)

491 
max_Àn
 = 
Àn
;

492 
Àn
 = 0;

494 #ifde‡
USE_M17N


495 
°r
 +
n
;

497 
°r
++;

500 i‡(
°©us
 =
R_ST_AMP
) {

501 
r2
 = 
ègbuf
->
±r
;

502 
t
 = 
	`gëesˇ≥cmd
(&
r2
);

503 i‡(*
t
 != '\r' && *t != '\n')

504 
Àn
 +
	`gë_°rwidth
(
t
Ë+ gë_°rwidth(
r2
);

506  
Àn
 > 
max_Àn
 ?Üen : max_len;

507 
	}
}

510 
	$visibÀ_Àngth_∂aö
(*
°r
)

512 
Àn
 = 0, 
max_Àn
 = 0;

514 *
°r
) {

515 i‡(*
°r
 == '\t') {

517 
Àn
++;

518 } (
visibÀ_Àngth_off£t
 + 
Àn
Ë% 
Tab°›
 != 0);

519 
°r
++;

521 i‡(*
°r
 == '\r' || *str == '\n') {

522 i‡(
Àn
 > 
max_Àn
)

523 
max_Àn
 = 
Àn
;

524 
Àn
 = 0;

525 
°r
++;

528 #ifde‡
USE_M17N


529 
Àn
 +
	`gë_mcwidth
(
°r
);

530 
°r
 +
	`gë_m˛í
(str);

532 
Àn
++;

533 
°r
++;

537  
Àn
 > 
max_Àn
 ?Üen : max_len;

538 
	}
}

541 
	$maximum_visibÀ_Àngth
(*
°r
, 
off£t
)

543 
visibÀ_Àngth_off£t
 = 
off£t
;

544  
	`visibÀ_Àngth
(
°r
);

545 
	}
}

548 
	$maximum_visibÀ_Àngth_∂aö
(*
°r
, 
off£t
)

550 
visibÀ_Àngth_off£t
 = 
off£t
;

551  
	`visibÀ_Àngth_∂aö
(
°r
);

552 
	}
}

555 
	$Æign
(
TextLöe
 *
lbuf
, 
width
, 
mode
)

557 
i
, 
l
, 
l1
, 
l2
;

558 
Så
 
buf
, 
löe
 = 
lbuf
->line;

560 i‡(
löe
->
Àngth
 == 0) {

561 
i
 = 0; i < 
width
; i++)

562 
	`Såˇt_ch¨
(
löe
, ' ');

563 
lbuf
->
pos
 = 
width
;

566 
buf
 = 
	`Så√w
();

567 
l
 = 
width
 - 
lbuf
->
pos
;

568 
mode
) {

569 
ALIGN_CENTER
:

570 
l1
 = 
l
 / 2;

571 
l2
 = 
l
 - 
l1
;

572 
i
 = 0; i < 
l1
; i++)

573 
	`Såˇt_ch¨
(
buf
, ' ');

574 
	`Såˇt
(
buf
, 
löe
);

575 
i
 = 0; i < 
l2
; i++)

576 
	`Såˇt_ch¨
(
buf
, ' ');

578 
ALIGN_LEFT
:

579 
	`Såˇt
(
buf
, 
löe
);

580 
i
 = 0; i < 
l
; i++)

581 
	`Såˇt_ch¨
(
buf
, ' ');

583 
ALIGN_RIGHT
:

584 
i
 = 0; i < 
l
; i++)

585 
	`Såˇt_ch¨
(
buf
, ' ');

586 
	`Såˇt
(
buf
, 
löe
);

591 
lbuf
->
löe
 = 
buf
;

592 i‡(
lbuf
->
pos
 < 
width
)

593 
lbuf
->
pos
 = 
width
;

594 
	}
}

597 
	$¥öt_ôem
(
èbÀ
 *
t
, 
row
, 
cﬁ
, 
width
, 
Så
 
buf
)

599 
Æignmít
;

600 
TextLöe
 *
lbuf
;

602 i‡(
t
->
èbd©a
[
row
])

603 
lbuf
 = 
	`p›TextLöe
(
t
->
èbd©a
[
row
][
cﬁ
]);

605 
lbuf
 = 
NULL
;

607 i‡(
lbuf
 !
NULL
) {

608 
	`check_row
(
t
, 
row
);

609 
Æignmít
 = 
ALIGN_CENTER
;

610 i‡((
t
->
èb©å
[
row
][
cﬁ
] & 
HTT_ALIGN
Ë=
HTT_LEFT
)

611 
Æignmít
 = 
ALIGN_LEFT
;

612 i‡((
t
->
èb©å
[
row
][
cﬁ
] & 
HTT_ALIGN
Ë=
HTT_RIGHT
)

613 
Æignmít
 = 
ALIGN_RIGHT
;

614 i‡((
t
->
èb©å
[
row
][
cﬁ
] & 
HTT_ALIGN
Ë=
HTT_CENTER
)

615 
Æignmít
 = 
ALIGN_CENTER
;

616 
	`Æign
(
lbuf
, 
width
, 
Æignmít
);

617 
	`Såˇt
(
buf
, 
lbuf
->
löe
);

620 
lbuf
 = 
	`√wTextLöe
(
NULL
, 0);

621 
	`Æign
(
lbuf
, 
width
, 
ALIGN_CENTER
);

622 
	`Såˇt
(
buf
, 
lbuf
->
löe
);

624 
	}
}

627 
	#T_TOP
 0

	)

628 
	#T_MIDDLE
 1

	)

629 
	#T_BOTTOM
 2

	)

632 
	$¥öt_£p
(
èbÀ
 *
t
, 
row
, 
ty≥
, 
maxcﬁ
, 
Så
 
buf
)

634 
f‹bid
;

635 
ruÀ_mode
;

636 
i
, 
k
, 
l
, 
m
;

638 i‡(
row
 >= 0)

639 
	`check_row
(
t
, 
row
);

640 
	`check_row
(
t
, 
row
 + 1);

641 i‡((
ty≥
 =
T_TOP
 ||Åy≥ =
T_BOTTOM
Ë&& 
t
->
b‹dî_mode
 =
BORDER_THICK
) {

642 
ruÀ_mode
 = 
BORDER_THICK
;

645 
ruÀ_mode
 = 
BORDER_THIN
;

647 
f‹bid
 = 1;

648 i‡(
ty≥
 =
T_TOP
)

649 
f‹bid
 |= 2;

650 i‡(
ty≥
 =
T_BOTTOM
)

651 
f‹bid
 |= 8;

652 i‡(
t
->
èb©å
[
row
 + 1][0] & 
HTT_Y
) {

653 
f‹bid
 |= 4;

655 i‡(
t
->
b‹dî_mode
 !
BORDER_NOWIN
) {

656 
	`push_symbﬁ
(
buf
, 
	`RULE
(
t
->
b‹dî_mode
, 
f‹bid
), 
symbﬁ_width
, 1);

658 
i
 = 0; i <
maxcﬁ
; i++) {

659 
f‹bid
 = 10;

660 i‡(
ty≥
 !
T_BOTTOM
 && (
t
->
èb©å
[
row
 + 1][
i
] & 
HTT_Y
)) {

661 i‡(
t
->
èb©å
[
row
 + 1][
i
] & 
HTT_X
) {

662 
do_œ°_£p
;

665 
k
 = 
row
;

666 
k
 >0 && 
t
->
èb©å
[k] && (t->èb©å[k][
i
] & 
HTT_Y
);

667 
k
--) ;

668 
m
 = 
t
->
èbwidth
[
i
] + 2 *Å->
˚Œ∑ddög
;

669 
l
 = 
i
 + 1;Ü <
t
->
maxcﬁ
 && (t->
èb©å
[
row
][l] & 
HTT_X
);

670 
l
++)

671 
m
 +
t
->
èbwidth
[
l
] +Å->
˚Œ•acög
;

672 
	`¥öt_ôem
(
t
, 
k
, 
i
, 
m
, 
buf
);

676 
w
 = 
t
->
èbwidth
[
i
] + 2 *Å->
˚Œ∑ddög
;

677 i‡(
RULE_WIDTH
 == 2)

678 
w
 = (w + 1Ë/ 
RULE_WIDTH
;

679 
	`push_symbﬁ
(
buf
, 
	`RULE
(
ruÀ_mode
, 
f‹bid
), 
symbﬁ_width
, 
w
);

681 
do_œ°_£p
:

682 i‡(
i
 < 
maxcﬁ
) {

683 
f‹bid
 = 0;

684 i‡(
ty≥
 =
T_TOP
)

685 
f‹bid
 |= 2;

686 i‡(
t
->
èb©å
[
row
][
i
 + 1] & 
HTT_X
) {

687 
f‹bid
 |= 2;

689 i‡(
ty≥
 =
T_BOTTOM
)

690 
f‹bid
 |= 8;

692 i‡(
t
->
èb©å
[
row
 + 1][
i
 + 1] & 
HTT_X
) {

693 
f‹bid
 |= 8;

695 i‡(
t
->
èb©å
[
row
 + 1][
i
 + 1] & 
HTT_Y
) {

696 
f‹bid
 |= 4;

698 i‡(
t
->
èb©å
[
row
 + 1][
i
] & 
HTT_Y
) {

699 
f‹bid
 |= 1;

702 i‡(
f‹bid
 != 15)

703 
	`push_symbﬁ
(
buf
, 
	`RULE
(
ruÀ_mode
, 
f‹bid
), 
symbﬁ_width
, 1);

706 
f‹bid
 = 4;

707 i‡(
ty≥
 =
T_TOP
)

708 
f‹bid
 |= 2;

709 i‡(
ty≥
 =
T_BOTTOM
)

710 
f‹bid
 |= 8;

711 i‡(
t
->
èb©å
[
row
 + 1][
maxcﬁ
] & 
HTT_Y
) {

712 
f‹bid
 |= 1;

714 i‡(
t
->
b‹dî_mode
 !
BORDER_NOWIN
)

715 
	`push_symbﬁ
(
buf
, 
	`RULE
(
t
->
b‹dî_mode
, 
f‹bid
), 
symbﬁ_width
, 1);

716 
	}
}

719 
	$gë_•ec_˚Œ_width
(
èbÀ
 *
tbl
, 
row
, 
cﬁ
)

721 
i
, 
w
;

723 
w
 = 
tbl
->
èbwidth
[
cﬁ
];

724 
i
 = 
cﬁ
 + 1; i <
tbl
->
maxcﬁ
; i++) {

725 
	`check_row
(
tbl
, 
row
);

726 i‡(
tbl
->
èb©å
[
row
][
i
] & 
HTT_X
)

727 
w
 +
tbl
->
èbwidth
[
i
] +Åbl->
˚Œ•acög
;

731  
w
;

732 
	}
}

735 
	$do_ªfûl
(
èbÀ
 *
tbl
, 
row
, 
cﬁ
, 
maxlimô
)

737 
TextLi°
 *
‹gd©a
;

738 
TextLi°Iãm
 *
l
;

739 
ªadbuf„r
 
obuf
;

740 
html_„ed_ívú⁄
 
h_ív
;

741 
ívú⁄mít
 
ívs
[
MAX_ENV_LEVEL
];

742 
cﬁ•™
, 
i˚Œ
;

744 i‡(
tbl
->
èbd©a
[
row
] =
NULL
 ||Åbl->èbd©a[row][
cﬁ
] == NULL)

746 
‹gd©a
 = (
TextLi°
 *)
tbl
->
èbd©a
[
row
][
cﬁ
];

747 
tbl
->
èbd©a
[
row
][
cﬁ
] = 
	`√wGíîÆLi°
();

749 
	`öô_hív
(&
h_ív
, &
obuf
, 
ívs
, 
MAX_ENV_LEVEL
,

750 (
TextLöeLi°
 *)
tbl
->
èbd©a
[
row
][
cﬁ
],

751 
	`gë_•ec_˚Œ_width
(
tbl
, 
row
, 
cﬁ
), 0);

752 
obuf
.
Êag
 |
RB_INTABLE
;

753 i‡(
h_ív
.
limô
 > 
maxlimô
)

754 
h_ív
.
limô
 = 
maxlimô
;

755 i‡(
tbl
->
b‹dî_mode
 !
BORDER_NONE
 &&Åbl->
v˚Œ∑ddög
 > 0)

756 
	`do_bœnklöe
(&
h_ív
, &
obuf
, 0, 0, h_ív.
limô
);

757 
l
 = 
‹gd©a
->
fú°
;Ü !
NULL
;Ü =Ü->
√xt
) {

758 i‡(
	`TAG_IS
(
l
->
±r
, "<table_alt", 10)) {

759 
id
 = -1;

760 *
p
 = 
l
->
±r
;

761 
∑r£d_èg
 *
èg
;

762 i‡((
èg
 = 
	`∑r£_èg
(&
p
, 
TRUE
)Ë!
NULL
)

763 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TID
, &
id
);

764 i‡(
id
 >0 && id < 
tbl
->
¡abÀ
) {

765 
Æignmít
;

766 
TextLöeLi°Iãm
 *
ti
;

767 
èbÀ
 *
t
 = 
tbl
->
èbÀs
[
id
].
±r
;

768 
limô
 = 
tbl
->
èbÀs
[
id
].
ödít
 + 
t
->
tŸÆ_width
;

769 
tbl
->
èbÀs
[
id
].
±r
 = 
NULL
;

770 
	`ßve_f⁄ãf„˘
(&
h_ív
, h_ív.
obuf
);

771 
	`Êushlöe
(&
h_ív
, &
obuf
, 0, 2, h_ív.
limô
);

772 i‡(
t
->
v•a˚
 > 0 && !(
obuf
.
Êag
 & 
RB_IGNORE_P
))

773 
	`do_bœnklöe
(&
h_ív
, &
obuf
, 0, 0, h_ív.
limô
);

774 i‡(
	`RB_GET_ALIGN
(
h_ív
.
obuf
Ë=
RB_CENTER
)

775 
Æignmít
 = 
ALIGN_CENTER
;

776 i‡(
	`RB_GET_ALIGN
(
h_ív
.
obuf
Ë=
RB_RIGHT
)

777 
Æignmít
 = 
ALIGN_RIGHT
;

779 
Æignmít
 = 
ALIGN_LEFT
;

781 i‡(
Æignmít
 !
ALIGN_LEFT
) {

782 
ti
 = 
tbl
->
èbÀs
[
id
].
buf
->
fú°
;

783 
ti
 !
NULL
;Åòti->
√xt
)

784 
	`Æign
(
ti
->
±r
, 
h_ív
.
limô
, 
Æignmít
);

786 
	`≠≥ndTextLöeLi°
(
h_ív
.
buf
, 
tbl
->
èbÀs
[
id
].buf);

787 i‡(
h_ív
.
maxlimô
 < 
limô
)

788 
h_ív
.
maxlimô
 = 
limô
;

789 
	`ª°‹e_f⁄ãf„˘
(&
h_ív
, h_ív.
obuf
);

790 
obuf
.
Êag
 &~
RB_IGNORE_P
;

791 
h_ív
.
bœnk_löes
 = 0;

792 i‡(
t
->
v•a˚
 > 0) {

793 
	`do_bœnklöe
(&
h_ív
, &
obuf
, 0, 0, h_ív.
limô
);

794 
obuf
.
Êag
 |
RB_IGNORE_P
;

799 
	`HTMLlöïroc1
(
l
->
±r
, &
h_ív
);

801 i‡(
obuf
.
°©us
 !
R_ST_NORMAL
) {

802 
obuf
.
°©us
 = 
R_ST_EOL
;

803 
	`HTMLlöïroc1
("\n", &
h_ív
);

805 
	`com∂ëeHTML°ªam
(&
h_ív
, &
obuf
);

806 
	`Êushlöe
(&
h_ív
, &
obuf
, 0, 2, h_ív.
limô
);

807 i‡(
tbl
->
b‹dî_mode
 =
BORDER_NONE
) {

808 
row•™
 = 
	`èbÀ_row•™
(
tbl
, 
row
, 
cﬁ
);

809 i‡(
row
 + 
row•™
 <
tbl
->
maxrow
) {

810 i‡(
tbl
->
v˚Œ∑ddög
 > 0 && !(
obuf
.
Êag
 & 
RB_IGNORE_P
))

811 
	`do_bœnklöe
(&
h_ív
, &
obuf
, 0, 0, h_ív.
limô
);

814 i‡(
tbl
->
v•a˚
 > 0)

815 
	`purgñöe
(&
h_ív
);

819 i‡(
tbl
->
v˚Œ∑ddög
 > 0) {

820 i‡(!(
obuf
.
Êag
 & 
RB_IGNORE_P
))

821 
	`do_bœnklöe
(&
h_ív
, &
obuf
, 0, 0, h_ív.
limô
);

824 
	`purgñöe
(&
h_ív
);

826 i‡((
cﬁ•™
 = 
	`èbÀ_cﬁ•™
(
tbl
, 
row
, 
cﬁ
)) > 1) {

827 
èbÀ_˚Œ
 *
˚Œ
 = &
tbl
->cell;

828 
k
;

829 
k
 = 
	`b£¨ch_2sh‹t
(
cﬁ•™
, 
˚Œ
->cﬁ•™, 
cﬁ
, cñl->cﬁ, 
MAXCOL
,

830 
˚Œ
->
ödex
, cñl->
max˚Œ
 + 1);

831 
i˚Œ
 = 
˚Œ
->
ödex
[
k
];

832 i‡(
˚Œ
->
möimum_width
[
i˚Œ
] < 
h_ív
.
maxlimô
)

833 
˚Œ
->
möimum_width
[
i˚Œ
] = 
h_ív
.
maxlimô
;

836 i‡(
tbl
->
möimum_width
[
cﬁ
] < 
h_ív
.
maxlimô
)

837 
tbl
->
möimum_width
[
cﬁ
] = 
h_ív
.
maxlimô
;

839 
	}
}

842 
	$èbÀ_ruÀ_width
(
èbÀ
 *
t
)

844 i‡(
t
->
b‹dî_mode
 =
BORDER_NONE
)

846  
RULE_WIDTH
;

847 
	}
}

850 
	$check_˚Œ_width
(*
èbwidth
, *
˚Œwidth
,

851 *
cﬁ
, *
cﬁ•™
, 
max˚Œ
,

852 *
ödex¨øy
, 
•a˚
, 
dú
)

854 
i
, 
j
, 
k
, 
bcﬁ
, 
ecﬁ
;

855 
swidth
, 
width
;

857 
k
 = 0; k <
max˚Œ
; k++) {

858 
j
 = 
ödex¨øy
[
k
];

859 i‡(
˚Œwidth
[
j
] <= 0)

861 
bcﬁ
 = 
cﬁ
[
j
];

862 
ecﬁ
 = 
bcﬁ
 + 
cﬁ•™
[
j
];

863 
swidth
 = 0;

864 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

865 
swidth
 +
èbwidth
[
i
];

867 
width
 = 
˚Œwidth
[
j
] - (
cﬁ•™
[j] - 1Ë* 
•a˚
;

868 i‡(
width
 > 
swidth
) {

869 
w
 = (
width
 - 
swidth
Ë/ 
cﬁ•™
[
j
];

870 
r
 = (
width
 - 
swidth
Ë% 
cﬁ•™
[
j
];

871 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

872 
èbwidth
[
i
] +
w
;

874 i‡(
dú
 =1 && 
r
 > 0)

875 
r
 = 
cﬁ•™
[
j
];

876 
i
 = 1; i <
r
; i++)

877 
èbwidth
[
ecﬁ
 - 
i
]++;

880 
	}
}

883 
	$check_möimum_width
(
èbÀ
 *
t
, *
èbwidth
)

885 
i
;

886 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

888 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

889 i‡(
èbwidth
[
i
] < 
t
->
möimum_width
[i])

890 
èbwidth
[
i
] = 
t
->
möimum_width
[i];

893 
	`check_˚Œ_width
(
èbwidth
, 
˚Œ
->
möimum_width
, cñl->
cﬁ
, cñl->
cﬁ•™
,

894 
˚Œ
->
max˚Œ
, cñl->
ödex
, 
t
->
˚Œ•acög
, 0);

895 
	}
}

898 
	$check_maximum_width
(
èbÀ
 *
t
)

900 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

901 #ifde‡
MATRIX


902 
i
, 
j
, 
bcﬁ
, 
ecﬁ
;

903 
swidth
, 
width
;

905 
˚Œ
->
√˚Œ
 = 0;

906 
j
 = 0; j <
˚Œ
->
max˚Œ
; j++) {

907 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

908 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

909 
swidth
 = 0;

910 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

911 
swidth
 +
t
->
èbwidth
[
i
];

913 
width
 = 
˚Œ
->width[
j
] - (˚Œ->
cﬁ•™
[j] - 1Ë* 
t
->
˚Œ•acög
;

914 i‡(
width
 > 
swidth
) {

915 
˚Œ
->
eödex
[˚Œ->
√˚Œ
] = 
j
;

916 
˚Œ
->
√˚Œ
++;

920 
	`check_˚Œ_width
(
t
->
èbwidth
, 
˚Œ
->
width
, cñl->
cﬁ
, cñl->
cﬁ•™
,

921 
˚Œ
->
max˚Œ
, cñl->
ödex
, 
t
->
˚Œ•acög
, 0);

922 
	`check_möimum_width
(
t
,Å->
èbwidth
);

924 
	}
}

927 #ifde‡
MATRIX


929 
	$£t_öãgîed_width
(
èbÀ
 *
t
, *
dwidth
, *
iwidth
)

931 
i
, 
j
, 
k
, 
n
, 
bcﬁ
, 
ecﬁ
, 
°ï
;

932 *
ödex¨øy
;

933 *
fixed
;

934 *
mod
;

935 
sum
 = 0., 
x
 = 0.;

936 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

937 
ruÀwidth
 = 
	`èbÀ_ruÀ_width
(
t
);

939 
ödex¨øy
 = 
	`NewAtom_N
(, 
t
->
maxcﬁ
 + 1);

940 
mod
 = 
	`NewAtom_N
(, 
t
->
maxcﬁ
 + 1);

941 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

942 
iwidth
[
i
] = 
	`˚û_©_öãrvÆs
(
	`˚û
(
dwidth
[i]), 
ruÀwidth
);

943 
mod
[
i
] = ()
iwidth
[i] - 
dwidth
[i];

946 
sum
 = 0.;

947 
k
 = 0; k <
t
->
maxcﬁ
; k++) {

948 
x
 = 
mod
[
k
];

949 
sum
 +
x
;

950 
i
 = 
	`b£¨ch_doubÀ
(
x
, 
mod
, 
ödex¨øy
, 
k
);

951 i‡(
k
 > 
i
) {

952 
ii
;

953 
ii
 = 
k
; iò> 
i
; ii--)

954 
ödex¨øy
[
ii
] = indexarray[ii - 1];

956 
ödex¨øy
[
i
] = 
k
;

959 
fixed
 = 
	`NewAtom_N
(, 
t
->
maxcﬁ
 + 1);

960 
	`bzîo
(
fixed
, 
t
->
maxcﬁ
 + 1);

961 
°ï
 = 0; step < 2; step++) {

962 
i
 = 0; i <
t
->
maxcﬁ
; i +
n
) {

963 
¬
;

964 *
idx
;

965 
nsum
;

966 i‡(
sum
 < 0.5)

968 
n
 = 0; 
i
 +Ç <
t
->
maxcﬁ
;Ç++) {

969 
ii
 = 
ödex¨øy
[
i
 + 
n
];

970 i‡(
n
 == 0)

971 
x
 = 
mod
[
ii
];

972 i‡(
	`Ábs
(
mod
[
ii
] - 
x
) > 1e-6)

975 
k
 = 0; k < 
n
; k++) {

976 
ii
 = 
ödex¨øy
[
i
 + 
k
];

977 i‡(
fixed
[
ii
] < 2 &&

978 
iwidth
[
ii
] - 
ruÀwidth
 < 
t
->
möimum_width
[ii])

979 
fixed
[
ii
] = 2;

980 i‡(
fixed
[
ii
] < 1 &&

981 
iwidth
[
ii
] - 
ruÀwidth
 < 
t
->
èbwidth
[ii] &&

982 ()
ruÀwidth
 - 
mod
[
ii
] > 0.5)

983 
fixed
[
ii
] = 1;

985 
idx
 = 
	`NewAtom_N
(, 
n
);

986 
k
 = 0; k < 
˚Œ
->
max˚Œ
; k++) {

987 
kk
, 
w
, 
width
, 
m
;

988 
j
 = 
˚Œ
->
ödex
[
k
];

989 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

990 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

991 
m
 = 0;

992 
kk
 = 0; kk < 
n
; kk++) {

993 
ii
 = 
ödex¨øy
[
i
 + 
kk
];

994 i‡(
ii
 >
bcﬁ
 && iò< 
ecﬁ
) {

995 
idx
[
m
] = 
ii
;

996 
m
++;

999 i‡(
m
 == 0)

1001 
width
 = (
˚Œ
->
cﬁ•™
[
j
] - 1Ë* 
t
->
˚Œ•acög
;

1002 
kk
 = 
bcﬁ
; kk < 
ecﬁ
; kk++)

1003 
width
 +
iwidth
[
kk
];

1004 
w
 = 0;

1005 
kk
 = 0; kk < 
m
; kk++) {

1006 i‡(
fixed
[()
idx
[
kk
]] < 2)

1007 
w
 +
ruÀwidth
;

1009 i‡(
width
 - 
w
 < 
˚Œ
->
möimum_width
[
j
]) {

1010 
kk
 = 0; kk < 
m
; kk++) {

1011 i‡(
fixed
[()
idx
[
kk
]] < 2)

1012 
fixed
[()
idx
[
kk
]] = 2;

1015 
w
 = 0;

1016 
kk
 = 0; kk < 
m
; kk++) {

1017 i‡(
fixed
[()
idx
[
kk
]] < 1 &&

1018 ()
ruÀwidth
 - 
mod
[()
idx
[
kk
]] > 0.5)

1019 
w
 +
ruÀwidth
;

1021 i‡(
width
 - 
w
 < 
˚Œ
->width[
j
]) {

1022 
kk
 = 0; kk < 
m
; kk++) {

1023 i‡(
fixed
[()
idx
[
kk
]] < 1 &&

1024 ()
ruÀwidth
 - 
mod
[()
idx
[
kk
]] > 0.5)

1025 
fixed
[()
idx
[
kk
]] = 1;

1029 
¬
 = 0;

1030 
k
 = 0; k < 
n
; k++) {

1031 
ii
 = 
ödex¨øy
[
i
 + 
k
];

1032 i‡(
fixed
[
ii
] <
°ï
)

1033 
¬
++;

1035 
nsum
 = 
sum
 - ()(
¬
 * 
ruÀwidth
);

1036 i‡(
nsum
 < 0. && 
	`Ábs
(
sum
) <= fabs(nsum))

1038 
k
 = 0; k < 
n
; k++) {

1039 
ii
 = 
ödex¨øy
[
i
 + 
k
];

1040 i‡(
fixed
[
ii
] <
°ï
) {

1041 
iwidth
[
ii
] -
ruÀwidth
;

1042 
fixed
[
ii
] = 3;

1045 
sum
 = 
nsum
;

1048 
	}
}

1051 
	$c‹ªœti⁄_c€fficõ¡
(
sxx
, 
syy
, 
sxy
)

1053 
c€
, 
tmp
;

1054 
tmp
 = 
sxx
 * 
syy
;

1055 i‡(
tmp
 < 
Töy
)

1056 
tmp
 = 
Töy
;

1057 
c€
 = 
sxy
 / 
	`sqπ
(
tmp
);

1058 i‡(
c€
 > 1.)

1060 i‡(
c€
 < -1.)

1062  
c€
;

1063 
	}
}

1066 
	$c‹ªœti⁄_c€fficõ¡2
(
sxx
, 
syy
, 
sxy
)

1068 
c€
, 
tmp
;

1069 
tmp
 = (
syy
 + 
sxx
 - 2 * 
sxy
) * sxx;

1070 i‡(
tmp
 < 
Töy
)

1071 
tmp
 = 
Töy
;

1072 
c€
 = (
sxx
 - 
sxy
Ë/ 
	`sqπ
(
tmp
);

1073 i‡(
c€
 > 1.)

1075 i‡(
c€
 < -1.)

1077  
c€
;

1078 
	}
}

1081 
	$ªˇlc_width
(
ﬁd
, 
swidth
, 
cwidth
,

1082 
sxx
, 
syy
, 
sxy
, 
is_ö˛usive
)

1084 
dñè
 = 
swidth
 - ()
cwidth
;

1085 
øt
 = 
sxy
 / 
sxx
,

1086 
c€
 = 
	`c‹ªœti⁄_c€fficõ¡
(
sxx
, 
syy
, 
sxy
), 
w
, 
ww
;

1087 i‡(
ﬁd
 < 0.)

1088 
ﬁd
 = 0.;

1089 i‡(
	`Ábs
(
c€
) < 1e-5)

1090  
ﬁd
;

1091 
w
 = 
øt
 * 
ﬁd
;

1092 
ww
 = 
dñè
;

1093 i‡(
w
 > 0.) {

1094 
wmö
 = 5e-3 * 
	`sqπ
(
syy
 * (1. - 
c€
 * coe));

1095 i‡(
swidth
 < 0.2 && 
cwidth
 > 0 && 
is_ö˛usive
) {

1096 
c€1
 = 
	`c‹ªœti⁄_c€fficõ¡2
(
sxx
, 
syy
, 
sxy
);

1097 i‡(
c€
 > 0.9 || 
c€1
 > 0.9)

1100 i‡(
wmö
 > 0.05)

1101 
wmö
 = 0.05;

1102 i‡(
ww
 < 0.)

1103 
ww
 = 0.;

1104 
ww
 +
wmö
;

1107 
wmö
 = 5e-3 * 
	`sqπ
(
syy
Ë* 
	`Ábs
(
c€
);

1108 i‡(
øt
 > -0.001)

1109  
ﬁd
;

1110 i‡(
wmö
 > 0.01)

1111 
wmö
 = 0.01;

1112 i‡(
ww
 > 0.)

1113 
ww
 = 0.;

1114 
ww
 -
wmö
;

1116 i‡(
w
 > 
ww
)

1117  
ww
 / 
øt
;

1118  
ﬁd
;

1119 
	}
}

1122 
	$check_com¥essibÀ_˚Œ
(
èbÀ
 *
t
, 
MAT
 * 
möv
,

1123 *
√wwidth
, *
swidth
, *
cwidth
,

1124 
tŸÆwidth
, *
Sxx
,

1125 
icﬁ
, 
i˚Œ
, 
sxx
, 
c‹r
)

1127 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

1128 
i
, 
j
, 
k
, 
m
, 
bcﬁ
, 
ecﬁ
, 
•™
;

1129 
dñè
, 
owidth
;

1130 
dmax
, 
dmö
, 
sxy
;

1131 
ruÀwidth
 = 
	`èbÀ_ruÀ_width
(
t
);

1133 i‡(
sxx
 < 10.)

1134  
c‹r
;

1136 i‡(
icﬁ
 >= 0) {

1137 
owidth
 = 
√wwidth
[
icﬁ
];

1138 
dñè
 = 
√wwidth
[
icﬁ
] - ()
t
->
èbwidth
[icol];

1139 
bcﬁ
 = 
icﬁ
;

1140 
ecﬁ
 = 
bcﬁ
 + 1;

1142 i‡(
i˚Œ
 >= 0) {

1143 
owidth
 = 
swidth
[
i˚Œ
];

1144 
dñè
 = 
swidth
[
i˚Œ
] - ()
cwidth
[icell];

1145 
bcﬁ
 = 
˚Œ
->
cﬁ
[
i˚Œ
];

1146 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
i˚Œ
];

1149 
owidth
 = 
tŸÆwidth
;

1150 
dñè
 = 
tŸÆwidth
;

1151 
bcﬁ
 = 0;

1152 
ecﬁ
 = 
t
->
maxcﬁ
 + 1;

1155 
dmö
 = 
dñè
;

1156 
dmax
 = -1.;

1157 
k
 = 0; k <
˚Œ
->
max˚Œ
; k++) {

1158 
bcﬁ1
, 
ecﬁ1
;

1159 
is_ö˛usive
 = 0;

1160 i‡(
dmö
 <= 0.)

1161 
_íd
;

1162 
j
 = 
˚Œ
->
ödex
[
k
];

1163 i‡(
j
 =
i˚Œ
)

1165 
bcﬁ1
 = 
˚Œ
->
cﬁ
[
j
];

1166 
ecﬁ1
 = 
bcﬁ1
 + 
˚Œ
->
cﬁ•™
[
j
];

1167 
sxy
 = 0.;

1168 
m
 = 
bcﬁ1
; m < 
ecﬁ1
; m++) {

1169 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

1170 
sxy
 +
	`m_íåy
(
möv
, 
i
, 
m
);

1172 i‡(
bcﬁ1
 >
bcﬁ
 && 
ecﬁ1
 <
ecﬁ
) {

1173 
is_ö˛usive
 = 1;

1175 i‡(
sxy
 > 0.)

1176 
dmö
 = 
	`ªˇlc_width
(dmö, 
swidth
[
j
], 
cwidth
[j],

1177 
sxx
, 
Sxx
[
j
], 
sxy
, 
is_ö˛usive
);

1179 
dmax
 = 
	`ªˇlc_width
(dmax, 
swidth
[
j
], 
cwidth
[j],

1180 
sxx
, 
Sxx
[
j
], 
sxy
, 
is_ö˛usive
);

1182 
m
 = 0; m <
t
->
maxcﬁ
; m++) {

1183 
is_ö˛usive
 = 0;

1184 i‡(
dmö
 <= 0.)

1185 
_íd
;

1186 i‡(
m
 =
icﬁ
)

1188 
sxy
 = 0.;

1189 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

1190 
sxy
 +
	`m_íåy
(
möv
, 
i
, 
m
);

1191 i‡(
m
 >
bcﬁ
 && m < 
ecﬁ
) {

1192 
is_ö˛usive
 = 1;

1194 i‡(
sxy
 > 0.)

1195 
dmö
 = 
	`ªˇlc_width
(dmö, 
√wwidth
[
m
], 
t
->
èbwidth
[m],

1196 
sxx
, 
	`m_íåy
(
möv
, 
m
, m), 
sxy
, 
is_ö˛usive
);

1198 
dmax
 = 
	`ªˇlc_width
(dmax, 
√wwidth
[
m
], 
t
->
èbwidth
[m],

1199 
sxx
, 
	`m_íåy
(
möv
, 
m
, m), 
sxy
, 
is_ö˛usive
);

1201 
_íd
:

1202 i‡(
dmax
 > 0. && 
dmö
 > dmax)

1203 
dmö
 = 
dmax
;

1204 
•™
 = 
ecﬁ
 - 
bcﬁ
;

1205 i‡((
•™
 =
t
->
maxcﬁ
 + 1 && 
dmö
 >= 0.) ||

1206 (
•™
 !
t
->
maxcﬁ
 + 1 && 
dmö
 > 
ruÀwidth
 * 0.5)) {

1207 
nwidth
 = 
	`˚û_©_öãrvÆs
(
	`round
(
owidth
 - 
dmö
), 
ruÀwidth
);

1208 
	`c‹ª˘_èbÀ_m©rix
(
t
, 
bcﬁ
, 
ecﬁ
 - bcﬁ, 
nwidth
, 1.);

1209 
c‹r
++;

1211  
c‹r
;

1212 
	}
}

1214 
	#MAX_ITERATION
 10

	)

1216 
	$check_èbÀ_width
(
èbÀ
 *
t
, *
√wwidth
, 
MAT
 * 
möv
, 
ôr
)

1218 
i
, 
j
, 
k
, 
m
, 
bcﬁ
, 
ecﬁ
;

1219 
c‹r
 = 0;

1220 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

1221 #ifde‡
__GNUC__


1222 
‹gwidth
[
t
->
maxcﬁ
 + 1], 
c‹width
[t->maxcol + 1];

1223 
cwidth
[
˚Œ
->
max˚Œ
 + 1];

1224 
swidth
[
˚Œ
->
max˚Œ
 + 1];

1226 
‹gwidth
[
MAXCOL
], 
c‹width
[MAXCOL];

1227 
cwidth
[
MAXCELL
];

1228 
swidth
[
MAXCELL
];

1230 
twidth
, 
sxy
, *
Sxx
, 
°ŸÆ
;

1232 
twidth
 = 0.;

1233 
°ŸÆ
 = 0.;

1234 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1235 
twidth
 +
√wwidth
[
i
];

1236 
°ŸÆ
 +
	`m_íåy
(
möv
, 
i
, i);

1237 
m
 = 0; m < 
i
; m++) {

1238 
°ŸÆ
 +2 * 
	`m_íåy
(
möv
, 
i
, 
m
);

1242 
Sxx
 = 
	`NewAtom_N
(, 
˚Œ
->
max˚Œ
 + 1);

1243 
k
 = 0; k <
˚Œ
->
max˚Œ
; k++) {

1244 
j
 = 
˚Œ
->
ödex
[
k
];

1245 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

1246 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

1247 
swidth
[
j
] = 0.;

1248 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

1249 
swidth
[
j
] +
√wwidth
[
i
];

1250 
cwidth
[
j
] = 
˚Œ
->
width
[j] - (˚Œ->
cﬁ•™
[j] - 1Ë* 
t
->
˚Œ•acög
;

1251 
Sxx
[
j
] = 0.;

1252 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

1253 
Sxx
[
j
] +
	`m_íåy
(
möv
, 
i
, i);

1254 
m
 = 
bcﬁ
; m <
ecﬁ
; m++) {

1255 i‡(
m
 < 
i
)

1256 
Sxx
[
j
] +2 * 
	`m_íåy
(
möv
, 
i
, 
m
);

1262 
c‹r
 = 
	`check_com¥essibÀ_˚Œ
(
t
, 
möv
, 
√wwidth
, 
swidth
,

1263 
cwidth
, 
twidth
, 
Sxx
, -1, -1, 
°ŸÆ
, 
c‹r
);

1264 i‡(
ôr
 < 
MAX_ITERATION
 && 
c‹r
 > 0)

1265  
c‹r
;

1268 
k
 = 
˚Œ
->
max˚Œ
; k >= 0; k--) {

1269 
j
 = 
˚Œ
->
ödex
[
k
];

1270 
c‹r
 = 
	`check_com¥essibÀ_˚Œ
(
t
, 
möv
, 
√wwidth
, 
swidth
,

1271 
cwidth
, 
twidth
, 
Sxx
,

1272 -1, 
j
, 
Sxx
[j], 
c‹r
);

1273 i‡(
ôr
 < 
MAX_ITERATION
 && 
c‹r
 > 0)

1274  
c‹r
;

1278 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1279 
c‹r
 = 
	`check_com¥essibÀ_˚Œ
(
t
, 
möv
, 
√wwidth
, 
swidth
,

1280 
cwidth
, 
twidth
, 
Sxx
,

1281 
i
, -1, 
	`m_íåy
(
möv
, i, i), 
c‹r
);

1282 i‡(
ôr
 < 
MAX_ITERATION
 && 
c‹r
 > 0)

1283  
c‹r
;

1287 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1288 
c‹width
[
i
] = 
‹gwidth
[i] = 
	`round
(
√wwidth
[i]);

1290 
	`check_möimum_width
(
t
, 
c‹width
);

1292 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1293 
sx
 = 
	`sqπ
(
	`m_íåy
(
möv
, 
i
, i));

1294 i‡(
sx
 < 0.1)

1296 i‡(
‹gwidth
[
i
] < 
t
->
möimum_width
[i] &&

1297 
c‹width
[
i
] =
t
->
möimum_width
[i]) {

1298 
w
 = (
sx
 > 0.5) ? 0.5 : sx * 0.2;

1299 
sxy
 = 0.;

1300 
m
 = 0; m <
t
->
maxcﬁ
; m++) {

1301 i‡(
m
 =
i
)

1303 
sxy
 +
	`m_íåy
(
möv
, 
i
, 
m
);

1305 i‡(
sxy
 <= 0.) {

1306 
	`c‹ª˘_èbÀ_m©rix
(
t
, 
i
, 1,Å->
möimum_width
[i], 
w
);

1307 
c‹r
++;

1312 
k
 = 0; k <
˚Œ
->
max˚Œ
; k++) {

1313 
nwidth
 = 0, 
mwidth
;

1314 
sx
;

1316 
j
 = 
˚Œ
->
ödex
[
k
];

1317 
sx
 = 
	`sqπ
(
Sxx
[
j
]);

1318 i‡(
sx
 < 0.1)

1320 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

1321 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

1322 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

1323 
nwidth
 +
c‹width
[
i
];

1324 
mwidth
 =

1325 
˚Œ
->
möimum_width
[
j
] - (˚Œ->
cﬁ•™
[j] - 1Ë* 
t
->
˚Œ•acög
;

1326 i‡(
mwidth
 > 
swidth
[
j
] && mwidth =
nwidth
) {

1327 
w
 = (
sx
 > 0.5) ? 0.5 : sx * 0.2;

1329 
sxy
 = 0.;

1330 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

1331 
m
 = 0; m <
t
->
maxcﬁ
; m++) {

1332 i‡(
m
 >
bcﬁ
 && m < 
ecﬁ
)

1334 
sxy
 +
	`m_íåy
(
möv
, 
i
, 
m
);

1337 i‡(
sxy
 <= 0.) {

1338 
	`c‹ª˘_èbÀ_m©rix
(
t
, 
bcﬁ
, 
˚Œ
->
cﬁ•™
[
j
], 
mwidth
, 
w
);

1339 
c‹r
++;

1344 i‡(
ôr
 >
MAX_ITERATION
)

1347  
c‹r
;

1348 
	}
}

1352 
	$£t_èbÀ_width
(
èbÀ
 *
t
, *
√wwidth
, 
maxwidth
)

1354 
i
, 
j
, 
k
, 
bcﬁ
, 
ecﬁ
;

1355 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

1356 *
fixed
;

1357 
swidth
, 
fwidth
, 
width
, 
nv¨
;

1358 
s
;

1359 *
dwidth
;

1360 
åy_agaö
;

1362 
fixed
 = 
	`NewAtom_N
(, 
t
->
maxcﬁ
 + 1);

1363 
	`bzîo
(
fixed
, 
t
->
maxcﬁ
 + 1);

1364 
dwidth
 = 
	`NewAtom_N
(, 
t
->
maxcﬁ
 + 1);

1366 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1367 
dwidth
[
i
] = 0.0;

1368 i‡(
t
->
fixed_width
[
i
] < 0) {

1369 
t
->
fixed_width
[
i
] = -t->fixed_width[i] * 
maxwidth
 / 100;

1371 i‡(
t
->
fixed_width
[
i
] > 0) {

1372 
√wwidth
[
i
] = 
t
->
fixed_width
[i];

1373 
fixed
[
i
] = 1;

1376 
√wwidth
[
i
] = 0;

1377 i‡(
√wwidth
[
i
] < 
t
->
möimum_width
[i])

1378 
√wwidth
[
i
] = 
t
->
möimum_width
[i];

1381 
k
 = 0; k <
˚Œ
->
max˚Œ
; k++) {

1382 
j
 = 
˚Œ
->
ödex¨øy
[
k
];

1383 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

1384 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

1386 i‡(
˚Œ
->
fixed_width
[
j
] < 0)

1387 
˚Œ
->
fixed_width
[
j
] = -˚Œ->fixed_width[j] * 
maxwidth
 / 100;

1389 
swidth
 = 0;

1390 
fwidth
 = 0;

1391 
nv¨
 = 0;

1392 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

1393 i‡(
fixed
[
i
]) {

1394 
fwidth
 +
√wwidth
[
i
];

1397 
swidth
 +
√wwidth
[
i
];

1398 
nv¨
++;

1401 
width
 = 
	`max
(
˚Œ
->
fixed_width
[
j
], cñl->
möimum_width
[j])

1402 - (
˚Œ
->
cﬁ•™
[
j
] - 1Ë* 
t
->
˚Œ•acög
;

1403 i‡(
nv¨
 > 0 && 
width
 > 
fwidth
 + 
swidth
) {

1404 
s
 = 0.;

1405 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

1406 i‡(!
fixed
[
i
])

1407 
s
 +
	`weight3
(
t
->
èbwidth
[
i
]);

1409 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

1410 i‡(!
fixed
[
i
])

1411 
dwidth
[
i
] = (
width
 - 
fwidth
Ë* 
	`weight3
(
t
->
èbwidth
[i]Ë/ 
s
;

1413 
dwidth
[
i
] = ()
√wwidth
[i];

1415 
	`dv2sv
(
dwidth
, 
√wwidth
, 
˚Œ
->
cﬁ•™
[
j
]);

1416 i‡(
˚Œ
->
fixed_width
[
j
] > 0) {

1417 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++)

1418 
fixed
[
i
] = 1;

1424 
nv¨
 = 0;

1425 
swidth
 = 0;

1426 
fwidth
 = 0;

1427 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1428 i‡(
fixed
[
i
]) {

1429 
fwidth
 +
√wwidth
[
i
];

1432 
swidth
 +
√wwidth
[
i
];

1433 
nv¨
++;

1436 
width
 = 
maxwidth
 - 
t
->
maxcﬁ
 *Å->
˚Œ•acög
;

1437 i‡(
nv¨
 =0 || 
width
 <
fwidth
 + 
swidth
)

1440 
s
 = 0.;

1441 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1442 i‡(!
fixed
[
i
])

1443 
s
 +
	`weight3
(
t
->
èbwidth
[
i
]);

1445 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1446 i‡(!
fixed
[
i
])

1447 
dwidth
[
i
] = (
width
 - 
fwidth
Ë* 
	`weight3
(
t
->
èbwidth
[i]Ë/ 
s
;

1449 
dwidth
[
i
] = ()
√wwidth
[i];

1451 
	`dv2sv
(
dwidth
, 
√wwidth
, 
t
->
maxcﬁ
 + 1);

1453 
åy_agaö
 = 0;

1454 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1455 i‡(!
fixed
[
i
]) {

1456 i‡(
√wwidth
[
i
] > 
t
->
èbwidth
[i]) {

1457 
√wwidth
[
i
] = 
t
->
èbwidth
[i];

1458 
fixed
[
i
] = 1;

1459 
åy_agaö
 = 1;

1461 i‡(
√wwidth
[
i
] < 
t
->
möimum_width
[i]) {

1462 
√wwidth
[
i
] = 
t
->
möimum_width
[i];

1463 
fixed
[
i
] = 1;

1464 
åy_agaö
 = 1;

1468 } 
åy_agaö
);

1469 
	}
}

1473 
	$check_èbÀ_height
(
èbÀ
 *
t
)

1475 
i
, 
j
, 
k
;

1477 *
row
;

1478 *
row•™
;

1479 *
ödex¨øy
;

1480 
max˚Œ
;

1481 
size
;

1482 *
height
;

1483 } 
˚Œ
;

1484 
•a˚
 = 0;

1486 
˚Œ
.
size
 = 0;

1487 
˚Œ
.
max˚Œ
 = -1;

1489 
j
 = 0; j <
t
->
maxrow
; j++) {

1490 i‡(!
t
->
èb©å
[
j
])

1492 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1493 
t_dï
, 
row•™
;

1494 i‡(
t
->
èb©å
[
j
][
i
] & (
HTT_X
 | 
HTT_Y
))

1497 i‡(
t
->
èbd©a
[
j
][
i
] =
NULL
)

1498 
t_dï
 = 0;

1500 
t_dï
 = 
t
->
èbd©a
[
j
][
i
]->
nôem
;

1502 
row•™
 = 
	`èbÀ_row•™
(
t
, 
j
, 
i
);

1503 i‡(
row•™
 > 1) {

1504 
c
 = 
˚Œ
.
max˚Œ
 + 1;

1505 
k
 = 
	`b£¨ch_2sh‹t
(
row•™
, 
˚Œ
.rowspan,

1506 
j
, 
˚Œ
.
row
, 
t
->
maxrow
 + 1, cñl.
ödex¨øy
,

1507 
c
);

1508 i‡(
k
 <
˚Œ
.
max˚Œ
) {

1509 
idx
 = 
˚Œ
.
ödex¨øy
[
k
];

1510 i‡(
˚Œ
.
row
[
idx
] =
j
 && cñl.
row•™
[idx] ==Ñowspan)

1511 
c
 = 
idx
;

1513 i‡(
c
 >
MAXROWCELL
)

1515 i‡(
c
 >
˚Œ
.
size
) {

1516 i‡(
˚Œ
.
size
 == 0) {

1517 
˚Œ
.
size
 = 
	`max
(
MAXCELL
, 
c
 + 1);

1518 
˚Œ
.
row
 = 
	`NewAtom_N
(, cñl.
size
);

1519 
˚Œ
.
row•™
 = 
	`NewAtom_N
(, cñl.
size
);

1520 
˚Œ
.
ödex¨øy
 = 
	`NewAtom_N
(, cñl.
size
);

1521 
˚Œ
.
height
 = 
	`NewAtom_N
(, cñl.
size
);

1524 
˚Œ
.
size
 = 
	`max
(˚Œ.sizê+ 
MAXCELL
, 
c
 + 1);

1525 
˚Œ
.
row
 = 
	`New_Reu£
(, cñl.row, cñl.
size
);

1526 
˚Œ
.
row•™
 = 
	`New_Reu£
(, cell.rowspan,

1527 
˚Œ
.
size
);

1528 
˚Œ
.
ödex¨øy
 = 
	`New_Reu£
(, cell.indexarray,

1529 
˚Œ
.
size
);

1530 
˚Œ
.
height
 = 
	`New_Reu£
(, cñl.height, cñl.
size
);

1533 i‡(
c
 > 
˚Œ
.
max˚Œ
) {

1534 
˚Œ
.
max˚Œ
++;

1535 
˚Œ
.
row
[˚Œ.
max˚Œ
] = 
j
;

1536 
˚Œ
.
row•™
[˚Œ.
max˚Œ
] =Ñowspan;

1537 
˚Œ
.
height
[˚Œ.
max˚Œ
] = 0;

1538 i‡(
˚Œ
.
max˚Œ
 > 
k
) {

1539 
ii
;

1540 
ii
 = 
˚Œ
.
max˚Œ
; iò> 
k
; ii--)

1541 
˚Œ
.
ödex¨øy
[
ii
] = cell.indexarray[ii - 1];

1543 
˚Œ
.
ödex¨øy
[
k
] = cñl.
max˚Œ
;

1546 i‡(
˚Œ
.
height
[
c
] < 
t_dï
)

1547 
˚Œ
.
height
[
c
] = 
t_dï
;

1550 i‡(
t
->
èbheight
[
j
] < 
t_dï
)

1551 
t
->
èbheight
[
j
] = 
t_dï
;

1555 
t
->
b‹dî_mode
) {

1556 
BORDER_THIN
:

1557 
BORDER_THICK
:

1558 
BORDER_NOWIN
:

1559 
•a˚
 = 1;

1561 
BORDER_NONE
:

1562 
•a˚
 = 0;

1564 
	`check_˚Œ_width
(
t
->
èbheight
, 
˚Œ
.
height
, cñl.
row
, cñl.
row•™
,

1565 
˚Œ
.
max˚Œ
, cñl.
ödex¨øy
, 
•a˚
, 1);

1566 
	}
}

1568 
	#CHECK_MINIMUM
 1

	)

1569 
	#CHECK_FIXED
 2

	)

1572 
	$gë_èbÀ_width
(
èbÀ
 *
t
, *
‹gwidth
, *
˚Œwidth
, 
Êag
)

1574 #ifde‡
__GNUC__


1575 
√wwidth
[
t
->
maxcﬁ
 + 1];

1577 
√wwidth
[
MAXCOL
];

1579 
i
;

1580 
swidth
;

1581 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

1582 
ruÀwidth
 = 
	`èbÀ_ruÀ_width
(
t
);

1584 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1585 
√wwidth
[
i
] = 
	`max
(
‹gwidth
[i], 0);

1587 i‡(
Êag
 & 
CHECK_FIXED
) {

1588 #ifde‡
__GNUC__


1589 
c˚Œwidth
[
˚Œ
->
max˚Œ
 + 1];

1591 
c˚Œwidth
[
MAXCELL
];

1593 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1594 i‡(
√wwidth
[
i
] < 
t
->
fixed_width
[i])

1595 
√wwidth
[
i
] = 
t
->
fixed_width
[i];

1597 
i
 = 0; i <
˚Œ
->
max˚Œ
; i++) {

1598 
c˚Œwidth
[
i
] = 
˚Œwidth
[i];

1599 i‡(
c˚Œwidth
[
i
] < 
˚Œ
->
fixed_width
[i])

1600 
c˚Œwidth
[
i
] = 
˚Œ
->
fixed_width
[i];

1602 
	`check_˚Œ_width
(
√wwidth
, 
c˚Œwidth
, 
˚Œ
->
cﬁ
, cñl->
cﬁ•™
,

1603 
˚Œ
->
max˚Œ
, cñl->
ödex
, 
t
->
˚Œ•acög
, 0);

1606 
	`check_˚Œ_width
(
√wwidth
, 
˚Œwidth
, 
˚Œ
->
cﬁ
, cñl->
cﬁ•™
,

1607 
˚Œ
->
max˚Œ
, cñl->
ödex
, 
t
->
˚Œ•acög
, 0);

1609 i‡(
Êag
 & 
CHECK_MINIMUM
)

1610 
	`check_möimum_width
(
t
, 
√wwidth
);

1612 
swidth
 = 0;

1613 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1614 
swidth
 +
	`˚û_©_öãrvÆs
(
√wwidth
[
i
], 
ruÀwidth
);

1616 
swidth
 +
	`èbÀ_b‹dî_width
(
t
);

1617  
swidth
;

1618 
	}
}

1620 
	#möimum_èbÀ_width
(
t
)\

1621 (
	`gë_èbÀ_width
(
t
,t->
möimum_width
,t->
˚Œ
.möimum_width,0))

	)

1622 
	#maximum_èbÀ_width
(
t
)\

1623 (
	`gë_èbÀ_width
(
t
,t->
èbwidth
,t->
˚Œ
.
width
,
CHECK_FIXED
))

	)

1624 
	#fixed_èbÀ_width
(
t
)\

1625 (
	`gë_èbÀ_width
(
t
,t->
fixed_width
,t->
˚Œ
.fixed_width,
CHECK_MINIMUM
))

	)

1628 
	$ªndîCoTabÀ
(
èbÀ
 *
tbl
, 
maxlimô
)

1630 
ªadbuf„r
 
obuf
;

1631 
html_„ed_ívú⁄
 
h_ív
;

1632 
ívú⁄mít
 
ívs
[
MAX_ENV_LEVEL
];

1633 
èbÀ
 *
t
;

1634 
i
, 
cﬁ
, 
row
;

1635 
ödít
, 
maxwidth
;

1637 
i
 = 0; i < 
tbl
->
¡abÀ
; i++) {

1638 
t
 = 
tbl
->
èbÀs
[
i
].
±r
;

1639 
cﬁ
 = 
tbl
->
èbÀs
[
i
].col;

1640 
row
 = 
tbl
->
èbÀs
[
i
].row;

1641 
ödít
 = 
tbl
->
èbÀs
[
i
].indent;

1643 
	`öô_hív
(&
h_ív
, &
obuf
, 
ívs
, 
MAX_ENV_LEVEL
, 
tbl
->
èbÀs
[
i
].
buf
,

1644 
	`gë_•ec_˚Œ_width
(
tbl
, 
row
, 
cﬁ
), 
ödít
);

1645 
	`check_row
(
tbl
, 
row
);

1646 i‡(
h_ív
.
limô
 > 
maxlimô
)

1647 
h_ív
.
limô
 = 
maxlimô
;

1648 i‡(
t
->
tŸÆ_width
 == 0)

1649 
maxwidth
 = 
h_ív
.
limô
 - 
ödít
;

1650 i‡(
t
->
tŸÆ_width
 > 0)

1651 
maxwidth
 = 
t
->
tŸÆ_width
;

1653 
maxwidth
 = 
t
->
tŸÆ_width
 = -t->tŸÆ_width * 
h_ív
.
limô
 / 100;

1654 
	`ªndîTabÀ
(
t
, 
maxwidth
, &
h_ív
);

1656 
	}
}

1659 
	$make_ˇ±i⁄
(
èbÀ
 *
t
, 
html_„ed_ívú⁄
 *
h_ív
)

1661 
html_„ed_ívú⁄
 
hív
;

1662 
ªadbuf„r
 
obuf
;

1663 
ívú⁄mít
 
ívs
[
MAX_ENV_LEVEL
];

1664 
limô
;

1666 i‡(
t
->
ˇ±i⁄
->
Àngth
 <= 0)

1669 i‡(
t
->
tŸÆ_width
 > 0)

1670 
limô
 = 
t
->
tŸÆ_width
;

1672 
limô
 = 
h_ív
->limit;

1673 
	`öô_hív
(&
hív
, &
obuf
, 
ívs
, 
MAX_ENV_LEVEL
, 
	`√wTextLöeLi°
(),

1674 
limô
, 
h_ív
->
ívs
[h_ív->
ívc
].
ödít
);

1675 
	`HTMLlöïroc1
("<˚¡î>", &
hív
);

1676 
	`HTMLlöïroc0
(
t
->
ˇ±i⁄
->
±r
, &
hív
, 
FALSE
);

1677 
	`HTMLlöïroc1
("</˚¡î>", &
hív
);

1679 i‡(
t
->
tŸÆ_width
 < 
hív
.
maxlimô
)

1680 
t
->
tŸÆ_width
 = 
hív
.
maxlimô
;

1681 
limô
 = 
h_ív
->limit;

1682 
h_ív
->
limô
 = 
t
->
tŸÆ_width
;

1683 
	`HTMLlöïroc1
("<˚¡î>", 
h_ív
);

1684 
	`HTMLlöïroc0
(
t
->
ˇ±i⁄
->
±r
, 
h_ív
, 
FALSE
);

1685 
	`HTMLlöïroc1
("</˚¡î>", 
h_ív
);

1686 
h_ív
->
limô
 =Üimit;

1687 
	}
}

1690 
	$ªndîTabÀ
(
èbÀ
 *
t
, 
max_width
, 
html_„ed_ívú⁄
 *
h_ív
)

1692 
i
, 
j
, 
w
, 
r
, 
h
;

1693 
Så
 
ªndîbuf
;

1694 
√w_èbwidth
[
MAXCOL
];

1695 #ifde‡
MATRIX


1696 
ôr
;

1697 
VEC
 *
√wwidth
;

1698 
MAT
 *
m©
, *
möv
;

1699 
PERM
 *
pivŸ
;

1701 
width
;

1702 
ruÀwidth
;

1703 
Så
 
vruÀa
 = 
NULL
, 
vruÀb
 = NULL, 
vruÀc
 = NULL;

1704 #ifde‡
ID_EXT


1705 
Så
 
idèg
;

1708 
t
->
tŸÆ_height
 = 0;

1709 i‡(
t
->
maxcﬁ
 < 0) {

1710 
	`make_ˇ±i⁄
(
t
, 
h_ív
);

1714 i‡(
t
->
¶›py_width
 > 
max_width
)

1715 
max_width
 = 
t
->
¶›py_width
;

1717 
ruÀwidth
 = 
	`èbÀ_ruÀ_width
(
t
);

1719 
max_width
 -
	`èbÀ_b‹dî_width
(
t
);

1721 i‡(
ruÀwidth
 > 1)

1722 
max_width
 = 
	`Êo‹_©_öãrvÆs
(max_width, 
ruÀwidth
);

1724 i‡(
max_width
 < 
ruÀwidth
)

1725 
max_width
 = 
ruÀwidth
;

1727 
	`check_maximum_width
(
t
);

1729 #ifde‡
MATRIX


1730 i‡(
t
->
maxcﬁ
 == 0) {

1731 i‡(
t
->
èbwidth
[0] > 
max_width
)

1732 
t
->
èbwidth
[0] = 
max_width
;

1733 i‡(
t
->
tŸÆ_width
 > 0)

1734 
t
->
èbwidth
[0] = 
max_width
;

1735 i‡(
t
->
fixed_width
[0] > 0)

1736 
t
->
èbwidth
[0] =Å->
fixed_width
[0];

1737 i‡(
t
->
èbwidth
[0] <Å->
möimum_width
[0])

1738 
t
->
èbwidth
[0] =Å->
möimum_width
[0];

1741 
	`£t_èbÀ_m©rix
(
t
, 
max_width
);

1743 
ôr
 = 0;

1744 
m©
 = 
	`m_gë
(
t
->
maxcﬁ
 + 1,Å->maxcol + 1);

1745 
pivŸ
 = 
	`px_gë
(
t
->
maxcﬁ
 + 1);

1746 
√wwidth
 = 
	`v_gë
(
t
->
maxcﬁ
 + 1);

1747 
möv
 = 
	`m_gë
(
t
->
maxcﬁ
 + 1,Å->maxcol + 1);

1749 
	`m_c›y
(
t
->
m©rix
, 
m©
);

1750 
	`LUÁ˘‹
(
m©
, 
pivŸ
);

1751 
	`LUsﬁve
(
m©
, 
pivŸ
, 
t
->
ve˘‹
, 
√wwidth
);

1752 
	`LUövî£
(
m©
, 
pivŸ
, 
möv
);

1753 #ifde‡
TABLE_DEBUG


1754 
	`£t_öãgîed_width
(
t
, 
√wwidth
->
ve
, 
√w_èbwidth
);

1755 
	`Ârötf
(
°dîr
, "ôr=%d\n", 
ôr
);

1756 
	`Ârötf
(
°dîr
, "max_width=%d\n", 
max_width
);

1757 
	`Ârötf
(
°dîr
, "minimum : ");

1758 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1759 
	`Ârötf
(
°dîr
, "%2d ", 
t
->
möimum_width
[
i
]);

1760 
	`Ârötf
(
°dîr
, "\nfixed : ");

1761 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1762 
	`Ârötf
(
°dîr
, "%2d ", 
t
->
fixed_width
[
i
]);

1763 
	`Ârötf
(
°dîr
, "\ndecided : ");

1764 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1765 
	`Ârötf
(
°dîr
, "%2d ", 
√w_èbwidth
[
i
]);

1766 
	`Ârötf
(
°dîr
, "\n");

1768 
ôr
++;

1770 } 
	`check_èbÀ_width
(
t
, 
√wwidth
->
ve
, 
möv
, 
ôr
));

1771 
	`£t_öãgîed_width
(
t
, 
√wwidth
->
ve
, 
√w_èbwidth
);

1772 
	`check_möimum_width
(
t
, 
√w_èbwidth
);

1773 
	`v_‰ì
(
√wwidth
);

1774 
	`px_‰ì
(
pivŸ
);

1775 
	`m_‰ì
(
m©
);

1776 
	`m_‰ì
(
möv
);

1777 
	`m_‰ì
(
t
->
m©rix
);

1778 
	`v_‰ì
(
t
->
ve˘‹
);

1779 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1780 
t
->
èbwidth
[
i
] = 
√w_èbwidth
[i];

1784 
	`£t_èbÀ_width
(
t
, 
√w_èbwidth
, 
max_width
);

1785 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1786 
t
->
èbwidth
[
i
] = 
√w_èbwidth
[i];

1790 
	`check_möimum_width
(
t
,Å->
èbwidth
);

1791 
i
 = 0; i <
t
->
maxcﬁ
; i++)

1792 
t
->
èbwidth
[
i
] = 
	`˚û_©_öãrvÆs
—->èbwidth[i], 
ruÀwidth
);

1794 
	`ªndîCoTabÀ
(
t
, 
h_ív
->
limô
);

1796 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1797 
j
 = 0; j <
t
->
maxrow
; j++) {

1798 
	`check_row
(
t
, 
j
);

1799 i‡(
t
->
èb©å
[
j
][
i
] & 
HTT_Y
)

1801 
	`do_ªfûl
(
t
, 
j
, 
i
, 
h_ív
->
limô
);

1805 
	`check_möimum_width
(
t
,Å->
èbwidth
);

1806 
t
->
tŸÆ_width
 = 0;

1807 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1808 
t
->
èbwidth
[
i
] = 
	`˚û_©_öãrvÆs
—->èbwidth[i], 
ruÀwidth
);

1809 
t
->
tŸÆ_width
 +t->
èbwidth
[
i
];

1812 
t
->
tŸÆ_width
 +
	`èbÀ_b‹dî_width
(t);

1814 
	`check_èbÀ_height
(
t
);

1816 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1817 
j
 = 0; j <
t
->
maxrow
; j++) {

1818 
TextLöeLi°
 *
l
;

1819 
k
;

1820 i‡((
t
->
èb©å
[
j
][
i
] & 
HTT_Y
) ||

1821 (
t
->
èb©å
[
j
][
i
] & 
HTT_TOP
Ë|| (t->
èbd©a
[j][i] =
NULL
))

1823 
h
 = 
t
->
èbheight
[
j
];

1824 
k
 = 
j
 + 1; k <
t
->
maxrow
; k++) {

1825 i‡(!(
t
->
èb©å
[
k
][
i
] & 
HTT_Y
))

1827 
h
 +
t
->
èbheight
[
k
];

1828 
t
->
b‹dî_mode
) {

1829 
BORDER_THIN
:

1830 
BORDER_THICK
:

1831 
BORDER_NOWIN
:

1832 
h
 += 1;

1836 
h
 -
t
->
èbd©a
[
j
][
i
]->
nôem
;

1837 i‡(
t
->
èb©å
[
j
][
i
] & 
HTT_MIDDLE
)

1838 
h
 /= 2;

1839 i‡(
h
 <= 0)

1841 
l
 = 
	`√wTextLöeLi°
();

1842 
k
 = 0; k < 
h
; k++)

1843 
	`pushTextLöe
(
l
, 
	`√wTextLöe
(
NULL
, 0));

1844 
t
->
èbd©a
[
j
][
i
] = 
	`≠≥ndGíîÆLi°
((
GíîÆLi°
 *)
l
,

1845 
t
->
èbd©a
[
j
][
i
]);

1850 
width
 = 
t
->
tŸÆ_width
;

1852 
	`make_ˇ±i⁄
(
t
, 
h_ív
);

1854 
	`HTMLlöïroc1
("<¥êf‹_èbÀ>", 
h_ív
);

1855 #ifde‡
ID_EXT


1856 i‡(
t
->
id
 !
NULL
) {

1857 
idèg
 = 
	`S¥ötf
("<_id id=\"%s\">", 
	`html_quŸe
((
t
->
id
)->
±r
));

1858 
	`HTMLlöïroc1
(
idèg
->
±r
, 
h_ív
);

1861 
t
->
b‹dî_mode
) {

1862 
BORDER_THIN
:

1863 
BORDER_THICK
:

1864 
ªndîbuf
 = 
	`Så√w
();

1865 
	`¥öt_£p
(
t
, -1, 
T_TOP
,Å->
maxcﬁ
, 
ªndîbuf
);

1866 
	`push_ªndî_image
(
ªndîbuf
, 
width
, 
t
->
tŸÆ_width
, 
h_ív
);

1867 
t
->
tŸÆ_height
 += 1;

1870 
vruÀb
 = 
	`Så√w
();

1871 
t
->
b‹dî_mode
) {

1872 
BORDER_THIN
:

1873 
BORDER_THICK
:

1874 
vruÀa
 = 
	`Så√w
();

1875 
vruÀc
 = 
	`Så√w
();

1876 
	`push_symbﬁ
(
vruÀa
, 
	`TK_VERTICALBAR
(
t
->
b‹dî_mode
), 
symbﬁ_width
, 1);

1877 
i
 = 0; i < 
t
->
˚Œ∑ddög
; i++) {

1878 
	`Såˇt_ch¨
(
vruÀa
, ' ');

1879 
	`Såˇt_ch¨
(
vruÀb
, ' ');

1880 
	`Såˇt_ch¨
(
vruÀc
, ' ');

1882 
	`push_symbﬁ
(
vruÀc
, 
	`TK_VERTICALBAR
(
t
->
b‹dî_mode
), 
symbﬁ_width
, 1);

1883 
BORDER_NOWIN
:

1884 
	`push_symbﬁ
(
vruÀb
, 
	`TK_VERTICALBAR
(
BORDER_THIN
), 
symbﬁ_width
, 1);

1885 
i
 = 0; i < 
t
->
˚Œ∑ddög
; i++)

1886 
	`Såˇt_ch¨
(
vruÀb
, ' ');

1888 
BORDER_NONE
:

1889 
i
 = 0; i < 
t
->
˚Œ•acög
; i++)

1890 
	`Såˇt_ch¨
(
vruÀb
, ' ');

1893 
r
 = 0;Ñ <
t
->
maxrow
;Ñ++) {

1894 
h
 = 0; h < 
t
->
èbheight
[
r
]; h++) {

1895 
ªndîbuf
 = 
	`Så√w
();

1896 i‡(
t
->
b‹dî_mode
 =
BORDER_THIN


1897 || 
t
->
b‹dî_mode
 =
BORDER_THICK
)

1898 
	`Såˇt
(
ªndîbuf
, 
vruÀa
);

1899 #ifde‡
ID_EXT


1900 i‡(
t
->
åidvÆue
[
r
] !
NULL
 && 
h
 == 0) {

1901 
idèg
 = 
	`S¥ötf
("<_id id=\"%s\">",

1902 
	`html_quŸe
((
t
->
åidvÆue
[
r
])->
±r
));

1903 
	`Såˇt
(
ªndîbuf
, 
idèg
);

1906 
i
 = 0; i <
t
->
maxcﬁ
; i++) {

1907 
	`check_row
(
t
, 
r
);

1908 #ifde‡
ID_EXT


1909 i‡(
t
->
èbidvÆue
[
r
][
i
] !
NULL
 && 
h
 == 0) {

1910 
idèg
 = 
	`S¥ötf
("<_id id=\"%s\">",

1911 
	`html_quŸe
((
t
->
èbidvÆue
[
r
][
i
])->
±r
));

1912 
	`Såˇt
(
ªndîbuf
, 
idèg
);

1915 i‡(!(
t
->
èb©å
[
r
][
i
] & 
HTT_X
)) {

1916 
w
 = 
t
->
èbwidth
[
i
];

1917 
j
 = 
i
 + 1;

1918 
j
 <
t
->
maxcﬁ
 && (t->
èb©å
[
r
][j] & 
HTT_X
); j++)

1919 
w
 +
t
->
èbwidth
[
j
] +Å->
˚Œ•acög
;

1920 i‡(
t
->
èb©å
[
r
][
i
] & 
HTT_Y
) {

1921 
j
 = 
r
 - 1; j >0 && 
t
->
èb©å
[j]

1922 && (
t
->
èb©å
[
j
][
i
] & 
HTT_Y
); j--) ;

1923 
	`¥öt_ôem
(
t
, 
j
, 
i
, 
w
, 
ªndîbuf
);

1926 
	`¥öt_ôem
(
t
, 
r
, 
i
, 
w
, 
ªndîbuf
);

1928 i‡(
i
 < 
t
->
maxcﬁ
 && !—->
èb©å
[
r
][ò+ 1] & 
HTT_X
))

1929 
	`Såˇt
(
ªndîbuf
, 
vruÀb
);

1931 
t
->
b‹dî_mode
) {

1932 
BORDER_THIN
:

1933 
BORDER_THICK
:

1934 
	`Såˇt
(
ªndîbuf
, 
vruÀc
);

1935 
t
->
tŸÆ_height
 += 1;

1938 
	`push_ªndî_image
(
ªndîbuf
, 
width
, 
t
->
tŸÆ_width
, 
h_ív
);

1940 i‡(
r
 < 
t
->
maxrow
 &&Å->
b‹dî_mode
 !
BORDER_NONE
) {

1941 
ªndîbuf
 = 
	`Så√w
();

1942 
	`¥öt_£p
(
t
, 
r
, 
T_MIDDLE
,Å->
maxcﬁ
, 
ªndîbuf
);

1943 
	`push_ªndî_image
(
ªndîbuf
, 
width
, 
t
->
tŸÆ_width
, 
h_ív
);

1945 
t
->
tŸÆ_height
 +t->
èbheight
[
r
];

1947 
t
->
b‹dî_mode
) {

1948 
BORDER_THIN
:

1949 
BORDER_THICK
:

1950 
ªndîbuf
 = 
	`Så√w
();

1951 
	`¥öt_£p
(
t
,Å->
maxrow
, 
T_BOTTOM
,Å->
maxcﬁ
, 
ªndîbuf
);

1952 
	`push_ªndî_image
(
ªndîbuf
, 
width
, 
t
->
tŸÆ_width
, 
h_ív
);

1953 
t
->
tŸÆ_height
 += 1;

1956 i‡(
t
->
tŸÆ_height
 == 0) {

1957 
ªndîbuf
 = 
	`Så√w_ch¨p
(" ");

1958 
t
->
tŸÆ_height
++;

1959 
t
->
tŸÆ_width
 = 1;

1960 
	`push_ªndî_image
(
ªndîbuf
, 1, 
t
->
tŸÆ_width
, 
h_ív
);

1962 
	`HTMLlöïroc1
("</¥e>", 
h_ív
);

1963 
	}
}

1965 #ifde‡
TABLE_NO_COMPACT


1966 
	#THR_PADDING
 2

	)

1968 
	#THR_PADDING
 4

	)

1971 
èbÀ
 *

1972 
	$begö_èbÀ
(
b‹dî
, 
•acög
, 
∑ddög
, 
v•a˚
)

1974 
èbÀ
 *
t
;

1975 
mö˚Œ
 = 
	`möimum_˚Œ•acög
(
b‹dî
);

1976 
r˚Œ•acög
;

1977 
mö˚Œ_pixñs
 = 
	`round
(
mö˚Œ
 * 
pixñ_≥r_ch¨
);

1978 
µc
 = 
	`round
(
pixñ_≥r_ch¨
);

1980 
t
 = 
	`√wTabÀ
();

1981 
t
->
row
 =Å->
cﬁ
 = -1;

1982 
t
->
maxcﬁ
 = -1;

1983 
t
->
maxrow
 = -1;

1984 
t
->
b‹dî_mode
 = 
b‹dî
;

1985 
t
->
Êag
 = 0;

1986 i‡(
b‹dî
 =
BORDER_NOWIN
)

1987 
t
->
Êag
 |
TBL_EXPAND_OK
;

1989 
r˚Œ•acög
 = 
•acög
 + 2 * 
∑ddög
;

1990 
b‹dî
) {

1991 
BORDER_THIN
:

1992 
BORDER_THICK
:

1993 
BORDER_NOWIN
:

1994 
t
->
˚Œ∑ddög
 = 
∑ddög
 - (
mö˚Œ_pixñs
 - 4) / 2;

1996 
BORDER_NONE
:

1997 
t
->
˚Œ∑ddög
 = 
r˚Œ•acög
 - 
mö˚Œ_pixñs
;

1999 i‡(
t
->
˚Œ∑ddög
 >
µc
)

2000 
t
->
˚Œ∑ddög
 /
µc
;

2001 i‡(
t
->
˚Œ∑ddög
 > 0)

2002 
t
->
˚Œ∑ddög
 = 1;

2004 
t
->
˚Œ∑ddög
 = 0;

2006 
b‹dî
) {

2007 
BORDER_THIN
:

2008 
BORDER_THICK
:

2009 
BORDER_NOWIN
:

2010 
t
->
˚Œ•acög
 = 2 *Å->
˚Œ∑ddög
 + 
mö˚Œ
;

2012 
BORDER_NONE
:

2013 
t
->
˚Œ•acög
 =Å->
˚Œ∑ddög
 + 
mö˚Œ
;

2016 i‡(
b‹dî
 =
BORDER_NONE
) {

2017 i‡(
r˚Œ•acög
 / 2 + 
v•a˚
 <= 1)

2018 
t
->
v•a˚
 = 0;

2020 
t
->
v•a˚
 = 1;

2023 i‡(
v•a˚
 < 
µc
)

2024 
t
->
v•a˚
 = 0;

2026 
t
->
v•a˚
 = 1;

2029 i‡(
b‹dî
 =
BORDER_NONE
) {

2030 i‡(
r˚Œ•acög
 <
THR_PADDING
)

2031 
t
->
v˚Œ∑ddög
 = 0;

2033 
t
->
v˚Œ∑ddög
 = 1;

2036 i‡(
∑ddög
 < 2 * 
µc
 - 2)

2037 
t
->
v˚Œ∑ddög
 = 0;

2039 
t
->
v˚Œ∑ddög
 = 1;

2042  
t
;

2043 
	}
}

2046 
	$íd_èbÀ
(
èbÀ
 *
tbl
)

2048 
èbÀ_˚Œ
 *
˚Œ
 = &
tbl
->cell;

2049 
i
, 
ruÀwidth
 = 
	`èbÀ_ruÀ_width
(
tbl
);

2050 i‡(
ruÀwidth
 > 1) {

2051 i‡(
tbl
->
tŸÆ_width
 > 0)

2052 
tbl
->
tŸÆ_width
 = 
	`˚û_©_öãrvÆs
—bl->tŸÆ_width, 
ruÀwidth
);

2053 
i
 = 0; i <
tbl
->
maxcﬁ
; i++) {

2054 
tbl
->
möimum_width
[
i
] =

2055 
	`˚û_©_öãrvÆs
(
tbl
->
möimum_width
[
i
], 
ruÀwidth
);

2056 
tbl
->
èbwidth
[
i
] = 
	`˚û_©_öãrvÆs
—bl->èbwidth[i], 
ruÀwidth
);

2057 i‡(
tbl
->
fixed_width
[
i
] > 0)

2058 
tbl
->
fixed_width
[
i
] =

2059 
	`˚û_©_öãrvÆs
(
tbl
->
fixed_width
[
i
], 
ruÀwidth
);

2061 
i
 = 0; i <
˚Œ
->
max˚Œ
; i++) {

2062 
˚Œ
->
möimum_width
[
i
] =

2063 
	`˚û_©_öãrvÆs
(
˚Œ
->
möimum_width
[
i
], 
ruÀwidth
);

2064 
˚Œ
->
width
[
i
] = 
	`˚û_©_öãrvÆs
(˚Œ->width[i], 
ruÀwidth
);

2065 i‡(
˚Œ
->
fixed_width
[
i
] > 0)

2066 
˚Œ
->
fixed_width
[
i
] =

2067 
	`˚û_©_öãrvÆs
(
˚Œ
->
fixed_width
[
i
], 
ruÀwidth
);

2070 
tbl
->
¶›py_width
 = 
	`fixed_èbÀ_width
(tbl);

2071 i‡(
tbl
->
tŸÆ_width
 >Åbl->
¶›py_width
)

2072 
tbl
->
¶›py_width
 =Åbl->
tŸÆ_width
;

2073 
	}
}

2076 
	$check_möimum0
(
èbÀ
 *
t
, 
mö
)

2078 
i
, 
w
, 
ww
;

2079 
èbÀ_˚Œ
 *
˚Œ
;

2081 i‡(
t
->
cﬁ
 < 0)

2083 i‡(
t
->
èbwidth
[t->
cﬁ
] < 0)

2085 
	`check_row
(
t
,Å->
row
);

2086 
w
 = 
	`èbÀ_cﬁ•™
(
t
,Å->
row
,Å->
cﬁ
);

2087 
mö
 +
t
->
ödít
;

2088 i‡(
w
 == 1)

2089 
ww
 = 
mö
;

2091 
˚Œ
 = &
t
->cell;

2092 
ww
 = 0;

2093 i‡(
˚Œ
->
i˚Œ
 >0 && cñl->
möimum_width
[˚Œ->i˚Œ] < 
mö
)

2094 
˚Œ
->
möimum_width
[˚Œ->
i˚Œ
] = 
mö
;

2096 
i
 = 
t
->
cﬁ
;

2097 
i
 <
t
->
maxcﬁ
 && (ò=t->
cﬁ
 || (t->
èb©å
[t->
row
][i] & 
HTT_X
));

2098 
i
++) {

2099 i‡(
t
->
möimum_width
[
i
] < 
ww
)

2100 
t
->
möimum_width
[
i
] = 
ww
;

2102 
	}
}

2105 
	$£twidth0
(
èbÀ
 *
t
, 
èbÀ_mode
 *
mode
)

2107 
w
;

2108 
width
 = 
t
->
èbc⁄ã¡ssize
;

2109 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

2111 i‡(
t
->
cﬁ
 < 0)

2113 i‡(
t
->
èbwidth
[t->
cﬁ
] < 0)

2115 
	`check_row
(
t
,Å->
row
);

2116 i‡(
t
->
löfo
.
¥ev_•a˚s
 > 0)

2117 
width
 -
t
->
löfo
.
¥ev_•a˚s
;

2118 
w
 = 
	`èbÀ_cﬁ•™
(
t
,Å->
row
,Å->
cﬁ
);

2119 i‡(
w
 == 1) {

2120 i‡(
t
->
èbwidth
[t->
cﬁ
] < 
width
)

2121 
t
->
èbwidth
[t->
cﬁ
] = 
width
;

2123 i‡(
˚Œ
->
i˚Œ
 >= 0) {

2124 i‡(
˚Œ
->
width
[˚Œ->
i˚Œ
] < width)

2125 
˚Œ
->
width
[˚Œ->
i˚Œ
] = width;

2127  
width
;

2128 
	}
}

2131 
	$£twidth
(
èbÀ
 *
t
, 
èbÀ_mode
 *
mode
)

2133 
width
 = 
	`£twidth0
(
t
, 
mode
);

2134 i‡(
width
 < 0)

2136 #ifde‡
NOWRAP


2137 i‡(
t
->
èb©å
[t->
row
][t->
cﬁ
] & 
HTT_NOWRAP
)

2138 
	`check_möimum0
(
t
, 
width
);

2140 i‡(
mode
->
¥e_mode
 & (
TBLM_NOBR
 | 
TBLM_PRE
 | 
TBLM_PRE_INT
) &&

2141 
mode
->
nobr_off£t
 >= 0)

2142 
	`check_möimum0
(
t
, 
width
 - 
mode
->
nobr_off£t
);

2143 
	}
}

2146 
	$addc⁄ã¡ssize
(
èbÀ
 *
t
, 
width
)

2149 i‡(
t
->
cﬁ
 < 0)

2151 i‡(
t
->
èbwidth
[t->
cﬁ
] < 0)

2153 
	`check_row
(
t
,Å->
row
);

2154 
t
->
èbc⁄ã¡ssize
 +
width
;

2155 
	}
}

2157 
èbÀ_˛o£_™ch‹0
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
);

2160 
	$˛órc⁄ã¡ssize
(
èbÀ
 *
t
, 
èbÀ_mode
 *
mode
)

2162 
	`èbÀ_˛o£_™ch‹0
(
t
, 
mode
);

2163 
mode
->
nobr_off£t
 = 0;

2164 
t
->
löfo
.
¥ev_•a˚s
 = -1;

2165 
	`£t_•a˚_to_¥evch¨
(
t
->
löfo
.
¥evch¨
);

2166 
t
->
löfo
.
¥ev_˘y≥
 = 
PC_ASCII
;

2167 
t
->
löfo
.
Àngth
 = 0;

2168 
t
->
èbc⁄ã¡ssize
 = 0;

2169 
	}
}

2172 
	$begö_˚Œ
(
èbÀ
 *
t
, 
èbÀ_mode
 *
mode
)

2174 
	`˛órc⁄ã¡ssize
(
t
, 
mode
);

2175 
mode
->
ödít_Àvñ
 = 0;

2176 
mode
->
nobr_Àvñ
 = 0;

2177 
mode
->
¥e_mode
 = 0;

2178 
t
->
ödít
 = 0;

2179 
t
->
Êag
 |
TBL_IN_COL
;

2181 i‡(
t
->
su•íded_d©a
) {

2182 
	`check_row
(
t
,Å->
row
);

2183 i‡(
t
->
èbd©a
[t->
row
][t->
cﬁ
] =
NULL
)

2184 
t
->
èbd©a
[t->
row
][t->
cﬁ
] = 
	`√wGíîÆLi°
();

2185 
	`≠≥ndGíîÆLi°
(
t
->
èbd©a
[t->
row
][t->
cﬁ
],

2186 (
GíîÆLi°
 *)
t
->
su•íded_d©a
);

2187 
t
->
su•íded_d©a
 = 
NULL
;

2189 
	}
}

2192 
	$check_rowcﬁ
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
)

2194 
row
 = 
tbl
->row, 
cﬁ
 =Åbl->col;

2196 i‡(!(
tbl
->
Êag
 & 
TBL_IN_ROW
)) {

2197 
tbl
->
Êag
 |
TBL_IN_ROW
;

2198 
tbl
->
row
++;

2199 i‡(
tbl
->
row
 >Åbl->
maxrow
)

2200 
tbl
->
maxrow
 =Åbl->
row
;

2201 
tbl
->
cﬁ
 = -1;

2203 i‡(
tbl
->
row
 == -1)

2204 
tbl
->
row
 = 0;

2205 i‡(
tbl
->
cﬁ
 == -1)

2206 
tbl
->
cﬁ
 = 0;

2208 ;; 
tbl
->
row
++) {

2209 
	`check_row
(
tbl
,Åbl->
row
);

2210 ; 
tbl
->
cﬁ
 < 
MAXCOL
 &&

2211 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
] & (
HTT_X
 | 
HTT_Y
);Åbl->col++) ;

2212 i‡(
tbl
->
cﬁ
 < 
MAXCOL
)

2214 
tbl
->
cﬁ
 = 0;

2216 i‡(
tbl
->
row
 >Åbl->
maxrow
)

2217 
tbl
->
maxrow
 =Åbl->
row
;

2218 i‡(
tbl
->
cﬁ
 >Åbl->
maxcﬁ
)

2219 
tbl
->
maxcﬁ
 =Åbl->
cﬁ
;

2221 i‡(
tbl
->
row
 !row ||Åbl->
cﬁ
 != col)

2222 
	`begö_˚Œ
(
tbl
, 
mode
);

2223 
tbl
->
Êag
 |
TBL_IN_COL
;

2224 
	}
}

2227 
	$skù_•a˚
(
èbÀ
 *
t
, *
löe
, 
èbÀ_löfo
 *
löfo
,

2228 
checkmöimum
)

2230 
skù
 = 0, 
s
 = 
löfo
->
¥ev_•a˚s
;

2231 
Löïr›
 
˘y≥
, 
¥ev_˘y≥
 = 
löfo
->prev_ctype;

2232 
Så
 
¥evch¨
 = 
löfo
->prevchar;

2233 
w
 = 
löfo
->
Àngth
;

2234 
mö
 = 1;

2236 i‡(*
löe
 ='<' &&Üöe[
	`°æí
(line) - 1] == '>') {

2237 i‡(
checkmöimum
)

2238 
	`check_möimum0
(
t
, 
	`visibÀ_Àngth
(
löe
));

2242 *
löe
) {

2243 *
ßve
 = 
löe
, *
c
 =Üine;

2244 
ec
, 
Àn
, 
wÀn
, 
∂í
;

2245 
˘y≥
 = 
	`gë_m˘y≥
(
löe
);

2246 
Àn
 = 
	`gë_mcwidth
(
löe
);

2247 
wÀn
 = 
∂í
 = 
	`gë_m˛í
(
löe
);

2249 i‡(
mö
 < 
w
)

2250 
mö
 = 
w
;

2251 i‡(
˘y≥
 =
PC_ASCII
 && 
	`IS_SPACE
(*
c
)) {

2252 
w
 = 0;

2253 
s
++;

2256 i‡(*
c
 == '&') {

2257 
ec
 = 
	`gëesˇ≥ch¨
(&
löe
);

2258 i‡(
ec
 >= 0) {

2259 
c
 = 
	`c⁄v_ítôy
(
ec
);

2260 
˘y≥
 = 
	`gë_m˘y≥
(
c
);

2261 
Àn
 = 
	`gë_°rwidth
(
c
);

2262 
wÀn
 = 
löe
 - 
ßve
;

2263 
∂í
 = 
	`gë_m˛í
(
c
);

2266 i‡(
¥evch¨
->
Àngth
 && 
	`is_bound¨y
((*Ìªvch¨->
±r
,

2267 (*)
c
)) {

2268 
w
 = 
Àn
;

2271 
w
 +
Àn
;

2273 i‡(
s
 > 0) {

2274 #ifde‡
USE_M17N


2275 i‡(
˘y≥
 =
PC_KANJI1
 && 
¥ev_˘y≥
 == PC_KANJI1)

2276 
skù
 +
s
;

2279 
skù
 +
s
 - 1;

2281 
s
 = 0;

2282 
¥ev_˘y≥
 = 
˘y≥
;

2284 
	`£t_¥evch¨
(
¥evch¨
, 
c
, 
∂í
);

2285 
löe
 = 
ßve
 + 
wÀn
;

2287 i‡(
s
 > 1) {

2288 
skù
 +
s
 - 1;

2289 
löfo
->
¥ev_•a˚s
 = 1;

2292 
löfo
->
¥ev_•a˚s
 = 
s
;

2294 
löfo
->
¥ev_˘y≥
 =Örev_ctype;

2295 
löfo
->
¥evch¨
 =Örevchar;

2297 i‡(
checkmöimum
) {

2298 i‡(
mö
 < 
w
)

2299 
mö
 = 
w
;

2300 
löfo
->
Àngth
 = 
w
;

2301 
	`check_möimum0
(
t
, 
mö
);

2303  
skù
;

2304 
	}
}

2307 
	$„ed_èbÀ_ölöe_èg
(
èbÀ
 *
tbl
,

2308 *
löe
, 
èbÀ_mode
 *
mode
, 
width
)

2310 
	`check_rowcﬁ
(
tbl
, 
mode
);

2311 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
löe
);

2312 i‡(
width
 >= 0) {

2313 
	`check_möimum0
(
tbl
, 
width
);

2314 
	`addc⁄ã¡ssize
(
tbl
, 
width
);

2315 
	`£twidth
(
tbl
, 
mode
);

2317 
	}
}

2320 
	$„ed_èbÀ_block_èg
(
èbÀ
 *
tbl
,

2321 *
löe
, 
èbÀ_mode
 *
mode
, 
ödít
, 
cmd
)

2323 
off£t
;

2324 i‡(
mode
->
ödít_Àvñ
 <0 && 
ödít
 == -1)

2326 
	`£twidth
(
tbl
, 
mode
);

2327 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2328 
	`˛órc⁄ã¡ssize
(
tbl
, 
mode
);

2329 i‡(
ödít
 == 1) {

2330 
mode
->
ödít_Àvñ
++;

2331 i‡(
mode
->
ödít_Àvñ
 <
MAX_INDENT_LEVEL
)

2332 
tbl
->
ödít
 +
INDENT_INCR
;

2334 i‡(
ödít
 == -1) {

2335 
mode
->
ödít_Àvñ
--;

2336 i‡(
mode
->
ödít_Àvñ
 < 
MAX_INDENT_LEVEL
)

2337 
tbl
->
ödít
 -
INDENT_INCR
;

2339 
off£t
 = 
tbl
->
ödít
;

2340 i‡(
cmd
 =
HTML_DT
) {

2341 i‡(
mode
->
ödít_Àvñ
 > 0 && mode->ödít_Àvñ <
MAX_INDENT_LEVEL
)

2342 
off£t
 -
INDENT_INCR
;

2344 i‡(
tbl
->
ödít
 > 0) {

2345 
	`check_möimum0
(
tbl
, 0);

2346 
	`addc⁄ã¡ssize
(
tbl
, 
off£t
);

2348 
	}
}

2351 
	$èbÀ_˛o£_£À˘
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
, 
width
)

2353 
Så
 
tmp
 = 
	`¥o˚ss_n_£À˘
();

2354 
mode
->
¥e_mode
 &~
TBLM_INSELECT
;

2355 
mode
->
íd_èg
 = 0;

2356 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2357 
	}
}

2360 
	$èbÀ_˛o£_ãxèªa
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
, 
width
)

2362 
Så
 
tmp
 = 
	`¥o˚ss_n_ãxèªa
();

2363 
mode
->
¥e_mode
 &~
TBLM_INTXTA
;

2364 
mode
->
íd_èg
 = 0;

2365 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2366 
	}
}

2369 
	$èbÀ_˛o£_™ch‹0
(
èbÀ
 *
tbl
, 
èbÀ_mode
 *
mode
)

2371 i‡(!(
mode
->
¥e_mode
 & 
TBLM_ANCHOR
))

2373 
mode
->
¥e_mode
 &~
TBLM_ANCHOR
;

2374 i‡(
tbl
->
èbc⁄ã¡ssize
 =
mode
->
™ch‹_off£t
) {

2375 
	`check_möimum0
(
tbl
, 1);

2376 
	`addc⁄ã¡ssize
(
tbl
, 1);

2377 
	`£twidth
(
tbl
, 
mode
);

2379 i‡(
tbl
->
löfo
.
¥ev_•a˚s
 > 0 &&

2380 
tbl
->
èbc⁄ã¡ssize
 - 1 =
mode
->
™ch‹_off£t
) {

2381 i‡(
tbl
->
löfo
.
¥ev_•a˚s
 > 0)

2382 
tbl
->
löfo
.
¥ev_•a˚s
 = -1;

2384 
	}
}

2386 
	#TAG_ACTION_NONE
 0

	)

2387 
	#TAG_ACTION_FEED
 1

	)

2388 
	#TAG_ACTION_TABLE
 2

	)

2389 
	#TAG_ACTION_N_TABLE
 3

	)

2390 
	#TAG_ACTION_PLAIN
 4

	)

2392 
	#CASE_TABLE_TAG
 \

2393 
HTML_TABLE
:\

2394 
HTML_N_TABLE
:\

2395 
HTML_TR
:\

2396 
HTML_N_TR
:\

2397 
HTML_TD
:\

2398 
HTML_N_TD
:\

2399 
HTML_TH
:\

2400 
HTML_N_TH
:\

2401 
HTML_THEAD
:\

2402 
HTML_N_THEAD
:\

2403 
HTML_TBODY
:\

2404 
HTML_N_TBODY
:\

2405 
HTML_TFOOT
:\

2406 
HTML_N_TFOOT
:\

2407 
HTML_COLGROUP
:\

2408 
HTML_N_COLGROUP
:\

2409 
HTML_COL


	)

2412 
	$„ed_èbÀ_èg
(
èbÀ
 *
tbl
, *
löe
, 
èbÀ_mode
 *
mode
,

2413 
width
, 
∑r£d_èg
 *
èg
)

2415 
cmd
;

2416 #ifde‡
ID_EXT


2417 *
p
;

2419 
èbÀ_˚Œ
 *
˚Œ
 = &
tbl
->cell;

2420 
cﬁ•™
, 
row•™
;

2421 
cﬁ
, 
¥ev_cﬁ
;

2422 
i
, 
j
, 
k
, 
v
, 
v0
, 
w
, 
id
;

2423 
Så
 
tok
, 
tmp
, 
™ch‹
;

2424 
èbÀ_©å
 
Æign
, 
vÆign
;

2426 
cmd
 = 
èg
->
ègid
;

2428 i‡(
mode
->
¥e_mode
 & 
TBLM_PLAIN
) {

2429 i‡(
mode
->
íd_èg
 =
cmd
) {

2430 
mode
->
¥e_mode
 &~
TBLM_PLAIN
;

2431 
mode
->
íd_èg
 = 0;

2432 
	`„ed_èbÀ_block_èg
(
tbl
, 
löe
, 
mode
, 0, 
cmd
);

2433  
TAG_ACTION_NONE
;

2435  
TAG_ACTION_PLAIN
;

2437 i‡(
mode
->
¥e_mode
 & 
TBLM_INTXTA
) {

2438 
cmd
) {

2439 
CASE_TABLE_TAG
:

2440 
HTML_N_TEXTAREA
:

2441 
	`èbÀ_˛o£_ãxèªa
(
tbl
, 
mode
, 
width
);

2442 i‡(
cmd
 =
HTML_N_TEXTAREA
)

2443  
TAG_ACTION_NONE
;

2446  
TAG_ACTION_FEED
;

2449 i‡(
mode
->
¥e_mode
 & 
TBLM_SCRIPT
) {

2450 i‡(
mode
->
íd_èg
 =
cmd
) {

2451 
mode
->
¥e_mode
 &~
TBLM_SCRIPT
;

2452 
mode
->
íd_èg
 = 0;

2453  
TAG_ACTION_NONE
;

2455  
TAG_ACTION_PLAIN
;

2457 i‡(
mode
->
¥e_mode
 & 
TBLM_STYLE
) {

2458 i‡(
mode
->
íd_èg
 =
cmd
) {

2459 
mode
->
¥e_mode
 &~
TBLM_STYLE
;

2460 
mode
->
íd_èg
 = 0;

2461  
TAG_ACTION_NONE
;

2463  
TAG_ACTION_PLAIN
;

2467 i‡(
mode
->
¥e_mode
 & 
TBLM_INSELECT
) {

2468 
cmd
) {

2469 
CASE_TABLE_TAG
:

2470 
HTML_N_FORM
:

2471 
HTML_N_SELECT
:

2472 
	`èbÀ_˛o£_£À˘
(
tbl
, 
mode
, 
width
);

2473 i‡(
cmd
 =
HTML_N_SELECT
)

2474  
TAG_ACTION_NONE
;

2477  
TAG_ACTION_FEED
;

2480 i‡(
mode
->
ˇ±i⁄
) {

2481 
cmd
) {

2482 
CASE_TABLE_TAG
:

2483 
HTML_N_CAPTION
:

2484 
mode
->
ˇ±i⁄
 = 0;

2485 i‡(
cmd
 =
HTML_N_CAPTION
)

2486  
TAG_ACTION_NONE
;

2489  
TAG_ACTION_FEED
;

2493 i‡(
mode
->
¥e_mode
 & 
TBLM_PRE
) {

2494 
cmd
) {

2495 
HTML_NOBR
:

2496 
HTML_N_NOBR
:

2497 
HTML_PRE_INT
:

2498 
HTML_N_PRE_INT
:

2499  
TAG_ACTION_NONE
;

2503 
cmd
) {

2504 
HTML_TABLE
:

2505 
	`check_rowcﬁ
(
tbl
, 
mode
);

2506  
TAG_ACTION_TABLE
;

2507 
HTML_N_TABLE
:

2508 i‡(
tbl
->
su•íded_d©a
)

2509 
	`check_rowcﬁ
(
tbl
, 
mode
);

2510  
TAG_ACTION_N_TABLE
;

2511 
HTML_TR
:

2512 i‡(
tbl
->
cﬁ
 >0 &&Åbl->
èbc⁄ã¡ssize
 > 0)

2513 
	`£twidth
(
tbl
, 
mode
);

2514 
tbl
->
cﬁ
 = -1;

2515 
tbl
->
row
++;

2516 
tbl
->
Êag
 |
TBL_IN_ROW
;

2517 
tbl
->
Êag
 &~
TBL_IN_COL
;

2518 
Æign
 = 0;

2519 
vÆign
 = 0;

2520 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALIGN
, &
i
)) {

2521 
i
) {

2522 
ALIGN_LEFT
:

2523 
Æign
 = (
HTT_LEFT
 | 
HTT_TRSET
);

2525 
ALIGN_RIGHT
:

2526 
Æign
 = (
HTT_RIGHT
 | 
HTT_TRSET
);

2528 
ALIGN_CENTER
:

2529 
Æign
 = (
HTT_CENTER
 | 
HTT_TRSET
);

2533 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALIGN
, &
i
)) {

2534 
i
) {

2535 
VALIGN_TOP
:

2536 
vÆign
 = (
HTT_TOP
 | 
HTT_VTRSET
);

2538 
VALIGN_MIDDLE
:

2539 
vÆign
 = (
HTT_MIDDLE
 | 
HTT_VTRSET
);

2541 
VALIGN_BOTTOM
:

2542 
vÆign
 = (
HTT_BOTTOM
 | 
HTT_VTRSET
);

2546 #ifde‡
ID_EXT


2547 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ID
, &
p
))

2548 
tbl
->
åidvÆue
[tbl->
row
] = 
	`Så√w_ch¨p
(
p
);

2550 
tbl
->
å©å
 = 
Æign
 | 
vÆign
;

2552 
HTML_TH
:

2553 
HTML_TD
:

2554 
¥ev_cﬁ
 = 
tbl
->
cﬁ
;

2555 i‡(
tbl
->
cﬁ
 >0 &&Åbl->
èbc⁄ã¡ssize
 > 0)

2556 
	`£twidth
(
tbl
, 
mode
);

2557 i‡(
tbl
->
row
 == -1) {

2559 
tbl
->
row
 = -1;

2560 
tbl
->
cﬁ
 = -1;

2561 
tbl
->
maxrow
 =Åbl->
row
;

2563 i‡(
tbl
->
cﬁ
 == -1) {

2564 i‡(!(
tbl
->
Êag
 & 
TBL_IN_ROW
)) {

2565 
tbl
->
row
++;

2566 
tbl
->
Êag
 |
TBL_IN_ROW
;

2568 i‡(
tbl
->
row
 >Åbl->
maxrow
)

2569 
tbl
->
maxrow
 =Åbl->
row
;

2571 
tbl
->
cﬁ
++;

2572 
	`check_row
(
tbl
,Åbl->
row
);

2573 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
]) {

2574 
tbl
->
cﬁ
++;

2576 i‡(
tbl
->
cﬁ
 > 
MAXCOL
 - 1) {

2577 
tbl
->
cﬁ
 = 
¥ev_cﬁ
;

2578  
TAG_ACTION_NONE
;

2580 i‡(
tbl
->
cﬁ
 >Åbl->
maxcﬁ
) {

2581 
tbl
->
maxcﬁ
 =Åbl->
cﬁ
;

2583 
cﬁ•™
 = 
row•™
 = 1;

2584 i‡(
tbl
->
å©å
 & 
HTT_TRSET
)

2585 
Æign
 = (
tbl
->
å©å
 & 
HTT_ALIGN
);

2586 i‡(
cmd
 =
HTML_TH
)

2587 
Æign
 = 
HTT_CENTER
;

2589 
Æign
 = 
HTT_LEFT
;

2590 i‡(
tbl
->
å©å
 & 
HTT_VTRSET
)

2591 
vÆign
 = (
tbl
->
å©å
 & 
HTT_VALIGN
);

2593 
vÆign
 = 
HTT_MIDDLE
;

2594 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ROWSPAN
, &
row•™
)) {

2595 i‡((
tbl
->
row
 + 
row•™
Ë>tbl->
max_rowsize
)

2596 
	`check_row
(
tbl
,Åbl->
row
 + 
row•™
);

2598 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_COLSPAN
, &
cﬁ•™
)) {

2599 i‡((
tbl
->
cﬁ
 + 
cﬁ•™
Ë>
MAXCOL
) {

2601 
cﬁ•™
 = 
MAXCOL
 - 
tbl
->
cﬁ
;

2604 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ALIGN
, &
i
)) {

2605 
i
) {

2606 
ALIGN_LEFT
:

2607 
Æign
 = 
HTT_LEFT
;

2609 
ALIGN_RIGHT
:

2610 
Æign
 = 
HTT_RIGHT
;

2612 
ALIGN_CENTER
:

2613 
Æign
 = 
HTT_CENTER
;

2617 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_VALIGN
, &
i
)) {

2618 
i
) {

2619 
VALIGN_TOP
:

2620 
vÆign
 = 
HTT_TOP
;

2622 
VALIGN_MIDDLE
:

2623 
vÆign
 = 
HTT_MIDDLE
;

2625 
VALIGN_BOTTOM
:

2626 
vÆign
 = 
HTT_BOTTOM
;

2630 #ifde‡
NOWRAP


2631 i‡(
	`∑r£dèg_exi°s
(
èg
, 
ATTR_NOWRAP
))

2632 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
] |
HTT_NOWRAP
;

2634 
v
 = 0;

2635 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_WIDTH
, &
v
)) {

2636 #ifde‡
TABLE_EXPAND


2637 i‡(
v
 > 0) {

2638 i‡(
tbl
->
ªÆ_width
 > 0)

2639 
v
 = -(v * 100Ë/ (
tbl
->
ªÆ_width
 * 
pixñ_≥r_ch¨
);

2641 
v
 = ()(v / 
pixñ_≥r_ch¨
);

2644 
v
 = 
	`RELATIVE_WIDTH
(v);

2647 #ifde‡
ID_EXT


2648 i‡(
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_ID
, &
p
))

2649 
tbl
->
èbidvÆue
[tbl->
row
][tbl->
cﬁ
] = 
	`Så√w_ch¨p
(
p
);

2651 #ifde‡
NOWRAP


2652 i‡(
v
 != 0) {

2654 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
] &~
HTT_NOWRAP
;

2657 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
] &~(
HTT_ALIGN
 | 
HTT_VALIGN
);

2658 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
] |(
Æign
 | 
vÆign
);

2659 i‡(
cﬁ•™
 > 1) {

2660 
cﬁ
 = 
tbl
->col;

2662 
˚Œ
->
i˚Œ
 = cñl->
max˚Œ
 + 1;

2663 
k
 = 
	`b£¨ch_2sh‹t
(
cﬁ•™
, 
˚Œ
->cﬁ•™, 
cﬁ
, cñl->cﬁ, 
MAXCOL
,

2664 
˚Œ
->
ödex
, cñl->
i˚Œ
);

2665 i‡(
k
 <
˚Œ
->
max˚Œ
) {

2666 
i
 = 
˚Œ
->
ödex
[
k
];

2667 i‡(
˚Œ
->
cﬁ
[
i
] =cﬁ && cñl->
cﬁ•™
[i] == colspan)

2668 
˚Œ
->
i˚Œ
 = 
i
;

2670 i‡(
˚Œ
->
i˚Œ
 > cñl->
max˚Œ
 && cñl->i˚Œ < 
MAXCELL
) {

2671 
˚Œ
->
max˚Œ
++;

2672 
˚Œ
->
cﬁ
[˚Œ->
max˚Œ
] = col;

2673 
˚Œ
->
cﬁ•™
[˚Œ->
max˚Œ
] = colspan;

2674 
˚Œ
->
width
[˚Œ->
max˚Œ
] = 0;

2675 
˚Œ
->
möimum_width
[˚Œ->
max˚Œ
] = 0;

2676 
˚Œ
->
fixed_width
[˚Œ->
max˚Œ
] = 0;

2677 i‡(
˚Œ
->
max˚Œ
 > 
k
) {

2678 
ii
;

2679 
ii
 = 
˚Œ
->
max˚Œ
; iò> 
k
; ii--)

2680 
˚Œ
->
ödex
[
ii
] = cell->index[ii - 1];

2682 
˚Œ
->
ödex
[
k
] = cñl->
max˚Œ
;

2684 i‡(
˚Œ
->
i˚Œ
 > cñl->
max˚Œ
)

2685 
˚Œ
->
i˚Œ
 = -1;

2687 i‡(
v
 != 0) {

2688 i‡(
cﬁ•™
 == 1) {

2689 
v0
 = 
tbl
->
fixed_width
[tbl->
cﬁ
];

2690 i‡(
v0
 =0 || (v0 > 0 && 
v
 > v0) || (v0 < 0 && v < v0)) {

2691 #ifde‡
FEED_TABLE_DEBUG


2692 
	`Ârötf
(
°dîr
, "width(%dË%d\n", 
tbl
->
cﬁ
, 
v
);

2694 
tbl
->
fixed_width
[tbl->
cﬁ
] = 
v
;

2697 i‡(
˚Œ
->
i˚Œ
 >= 0) {

2698 
v0
 = 
˚Œ
->
fixed_width
[˚Œ->
i˚Œ
];

2699 i‡(
v0
 =0 || (v0 > 0 && 
v
 > v0) || (v0 < 0 && v < v0))

2700 
˚Œ
->
fixed_width
[˚Œ->
i˚Œ
] = 
v
;

2703 
i
 = 0; i < 
row•™
; i++) {

2704 
	`check_row
(
tbl
,Åbl->
row
 + 
i
);

2705 
j
 = 0; j < 
cﬁ•™
; j++) {

2707 
tbl
->
èb©å
[tbl->
row
 + 
i
][tbl->
cﬁ
 + 
j
] &~(
HTT_X
 | 
HTT_Y
);

2709 i‡(!(
tbl
->
èb©å
[tbl->
row
 + 
i
][tbl->
cﬁ
 + 
j
] &

2710 (
HTT_X
 | 
HTT_Y
))) {

2711 
tbl
->
èb©å
[tbl->
row
 + 
i
][tbl->
cﬁ
 + 
j
] |=

2712 ((
i
 > 0Ë? 
HTT_Y
 : 0Ë| ((
j
 > 0Ë? 
HTT_X
 : 0);

2714 i‡(
tbl
->
cﬁ
 + 
j
 >Åbl->
maxcﬁ
) {

2715 
tbl
->
maxcﬁ
 =Åbl->
cﬁ
 + 
j
;

2718 i‡(
tbl
->
row
 + 
i
 >Åbl->
maxrow
) {

2719 
tbl
->
maxrow
 =Åbl->
row
 + 
i
;

2722 
	`begö_˚Œ
(
tbl
, 
mode
);

2724 
HTML_N_TR
:

2725 
	`£twidth
(
tbl
, 
mode
);

2726 
tbl
->
cﬁ
 = -1;

2727 
tbl
->
Êag
 &~(
TBL_IN_ROW
 | 
TBL_IN_COL
);

2728  
TAG_ACTION_NONE
;

2729 
HTML_N_TH
:

2730 
HTML_N_TD
:

2731 
	`£twidth
(
tbl
, 
mode
);

2732 
tbl
->
Êag
 &~
TBL_IN_COL
;

2733 #ifde‡
FEED_TABLE_DEBUG


2735 
TextLi°Iãm
 *
ô
;

2736 
i
 = 
tbl
->
cﬁ
, 
j
 =Åbl->
row
;

2737 
	`Ârötf
(
°dîr
, "◊Ërow,cﬁ: %d, %d\n", 
j
, 
i
);

2738 i‡(
tbl
->
èbd©a
[
j
] &&Åbl->èbd©a[j][
i
]) {

2739 
ô
 = ((
TextLi°
 *)
tbl
->
èbd©a
[
j
][
i
])->
fú°
;

2740 
ô
; iàô->
√xt
)

2741 
	`Ârötf
(
°dîr
, " [%s] \n", 
ô
->
±r
);

2745  
TAG_ACTION_NONE
;

2746 
HTML_P
:

2747 
HTML_BR
:

2748 
HTML_CENTER
:

2749 
HTML_N_CENTER
:

2750 
HTML_DIV
:

2751 
HTML_N_DIV
:

2752 i‡(!(
tbl
->
Êag
 & 
TBL_IN_ROW
))

2754 
HTML_DT
:

2755 
HTML_DD
:

2756 
HTML_H
:

2757 
HTML_N_H
:

2758 
HTML_LI
:

2759 
HTML_PRE
:

2760 
HTML_N_PRE
:

2761 
HTML_HR
:

2762 
HTML_LISTING
:

2763 
HTML_XMP
:

2764 
HTML_PLAINTEXT
:

2765 
HTML_PRE_PLAIN
:

2766 
HTML_N_PRE_PLAIN
:

2767 
	`„ed_èbÀ_block_èg
(
tbl
, 
löe
, 
mode
, 0, 
cmd
);

2768 
cmd
) {

2769 
HTML_PRE
:

2770 
HTML_PRE_PLAIN
:

2771 
mode
->
¥e_mode
 |
TBLM_PRE
;

2773 
HTML_N_PRE
:

2774 
HTML_N_PRE_PLAIN
:

2775 
mode
->
¥e_mode
 &~
TBLM_PRE
;

2777 
HTML_LISTING
:

2778 
mode
->
¥e_mode
 |
TBLM_PLAIN
;

2779 
mode
->
íd_èg
 = 
HTML_N_LISTING
;

2781 
HTML_XMP
:

2782 
mode
->
¥e_mode
 |
TBLM_PLAIN
;

2783 
mode
->
íd_èg
 = 
HTML_N_XMP
;

2785 
HTML_PLAINTEXT
:

2786 
mode
->
¥e_mode
 |
TBLM_PLAIN
;

2787 
mode
->
íd_èg
 = 
MAX_HTMLTAG
;

2791 
HTML_DL
:

2792 
HTML_BLQ
:

2793 
HTML_OL
:

2794 
HTML_UL
:

2795 
	`„ed_èbÀ_block_èg
(
tbl
, 
löe
, 
mode
, 1, 
cmd
);

2797 
HTML_N_DL
:

2798 
HTML_N_BLQ
:

2799 
HTML_N_OL
:

2800 
HTML_N_UL
:

2801 
	`„ed_èbÀ_block_èg
(
tbl
, 
löe
, 
mode
, -1, 
cmd
);

2803 
HTML_NOBR
:

2804 
HTML_WBR
:

2805 i‡(!(
tbl
->
Êag
 & 
TBL_IN_ROW
))

2807 
HTML_PRE_INT
:

2808 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2809 
cmd
) {

2810 
HTML_NOBR
:

2811 
mode
->
nobr_Àvñ
++;

2812 i‡(
mode
->
¥e_mode
 & 
TBLM_NOBR
)

2813  
TAG_ACTION_NONE
;

2814 
mode
->
¥e_mode
 |
TBLM_NOBR
;

2816 
HTML_PRE_INT
:

2817 i‡(
mode
->
¥e_mode
 & 
TBLM_PRE_INT
)

2818  
TAG_ACTION_NONE
;

2819 
mode
->
¥e_mode
 |
TBLM_PRE_INT
;

2820 
tbl
->
löfo
.
¥ev_•a˚s
 = 0;

2823 
mode
->
nobr_off£t
 = -1;

2824 i‡(
tbl
->
löfo
.
Àngth
 > 0) {

2825 
	`check_möimum0
(
tbl
,Åbl->
löfo
.
Àngth
);

2826 
tbl
->
löfo
.
Àngth
 = 0;

2829 
HTML_N_NOBR
:

2830 i‡(!(
tbl
->
Êag
 & 
TBL_IN_ROW
))

2832 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2833 i‡(
mode
->
nobr_Àvñ
 > 0)

2834 
mode
->
nobr_Àvñ
--;

2835 i‡(
mode
->
nobr_Àvñ
 == 0)

2836 
mode
->
¥e_mode
 &~
TBLM_NOBR
;

2838 
HTML_N_PRE_INT
:

2839 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2840 
mode
->
¥e_mode
 &~
TBLM_PRE_INT
;

2842 
HTML_IMG
:

2843 
	`check_rowcﬁ
(
tbl
, 
mode
);

2844 
w
 = 
tbl
->
fixed_width
[tbl->
cﬁ
];

2845 i‡(
w
 < 0) {

2846 i‡(
tbl
->
tŸÆ_width
 > 0)

2847 
w
 = -
tbl
->
tŸÆ_width
 * w / 100;

2848 i‡(
width
 > 0)

2849 
w
 = -
width
 * w / 100;

2851 
w
 = 0;

2853 i‡(
w
 == 0) {

2854 i‡(
tbl
->
tŸÆ_width
 > 0)

2855 
w
 = 
tbl
->
tŸÆ_width
;

2856 i‡(
width
 > 0)

2857 
w
 = 
width
;

2859 
tok
 = 
	`¥o˚ss_img
(
èg
, 
w
);

2860 
	`„ed_èbÀ1
(
tbl
, 
tok
, 
mode
, 
width
);

2862 
HTML_FORM
:

2863 
	`„ed_èbÀ_block_èg
(
tbl
, "", 
mode
, 0, 
cmd
);

2864 
tmp
 = 
	`¥o˚ss_f‹m
(
èg
);

2865 i‡(
tmp
)

2866 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2868 
HTML_N_FORM
:

2869 
	`„ed_èbÀ_block_èg
(
tbl
, "", 
mode
, 0, 
cmd
);

2870 
	`¥o˚ss_n_f‹m
();

2872 
HTML_INPUT
:

2873 
tmp
 = 
	`¥o˚ss_öput
(
èg
);

2874 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2876 
HTML_SELECT
:

2877 
tmp
 = 
	`¥o˚ss_£À˘
(
èg
);

2878 i‡(
tmp
)

2879 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2880 
mode
->
¥e_mode
 |
TBLM_INSELECT
;

2881 
mode
->
íd_èg
 = 
HTML_N_SELECT
;

2883 
HTML_N_SELECT
:

2884 
HTML_OPTION
:

2887 
HTML_TEXTAREA
:

2888 
w
 = 0;

2889 
	`check_rowcﬁ
(
tbl
, 
mode
);

2890 i‡(
tbl
->
cﬁ
 + 1 <tbl->
maxcﬁ
 &&

2891 
tbl
->
èb©å
[tbl->
row
][tbl->
cﬁ
 + 1] & 
HTT_X
) {

2892 i‡(
˚Œ
->
i˚Œ
 >0 && cñl->
fixed_width
[cell->icell] > 0)

2893 
w
 = 
˚Œ
->
fixed_width
[˚Œ->
i˚Œ
];

2896 i‡(
tbl
->
fixed_width
[tbl->
cﬁ
] > 0)

2897 
w
 = 
tbl
->
fixed_width
[tbl->
cﬁ
];

2899 
tmp
 = 
	`¥o˚ss_ãxèªa
(
èg
, 
w
);

2900 i‡(
tmp
)

2901 
	`„ed_èbÀ1
(
tbl
, 
tmp
, 
mode
, 
width
);

2902 
mode
->
¥e_mode
 |
TBLM_INTXTA
;

2903 
mode
->
íd_èg
 = 
HTML_N_TEXTAREA
;

2905 
HTML_A
:

2906 
	`èbÀ_˛o£_™ch‹0
(
tbl
, 
mode
);

2907 
™ch‹
 = 
NULL
;

2908 
i
 = 0;

2909 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HREF
, &
™ch‹
);

2910 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_HSEQ
, &
i
);

2911 i‡(
™ch‹
) {

2912 
	`check_rowcﬁ
(
tbl
, 
mode
);

2913 i‡(
i
 == 0) {

2914 
Så
 
tmp
 = 
	`¥o˚ss_™ch‹
(
èg
, 
löe
);

2915 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
tmp
->
±r
);

2918 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
löe
);

2919 i‡(
i
 >= 0) {

2920 
mode
->
¥e_mode
 |
TBLM_ANCHOR
;

2921 
mode
->
™ch‹_off£t
 = 
tbl
->
èbc⁄ã¡ssize
;

2925 
	`su•íd_‹_pushd©a
(
tbl
, 
löe
);

2927 
HTML_DEL
:

2928 
di•œyInsDñ
) {

2929 
DISPLAY_INS_DEL_SIMPLE
:

2930 
mode
->
¥e_mode
 |
TBLM_DEL
;

2932 
DISPLAY_INS_DEL_NORMAL
:

2933 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 5);

2935 
DISPLAY_INS_DEL_FONTIFY
:

2936 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2940 
HTML_N_DEL
:

2941 
di•œyInsDñ
) {

2942 
DISPLAY_INS_DEL_SIMPLE
:

2943 
mode
->
¥e_mode
 &~
TBLM_DEL
;

2945 
DISPLAY_INS_DEL_NORMAL
:

2946 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 5);

2948 
DISPLAY_INS_DEL_FONTIFY
:

2949 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2953 
HTML_S
:

2954 
di•œyInsDñ
) {

2955 
DISPLAY_INS_DEL_SIMPLE
:

2956 
mode
->
¥e_mode
 |
TBLM_S
;

2958 
DISPLAY_INS_DEL_NORMAL
:

2959 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 3);

2961 
DISPLAY_INS_DEL_FONTIFY
:

2962 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2966 
HTML_N_S
:

2967 
di•œyInsDñ
) {

2968 
DISPLAY_INS_DEL_SIMPLE
:

2969 
mode
->
¥e_mode
 &~
TBLM_S
;

2971 
DISPLAY_INS_DEL_NORMAL
:

2972 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 3);

2974 
DISPLAY_INS_DEL_FONTIFY
:

2975 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2979 
HTML_INS
:

2980 
HTML_N_INS
:

2981 
di•œyInsDñ
) {

2982 
DISPLAY_INS_DEL_SIMPLE
:

2984 
DISPLAY_INS_DEL_NORMAL
:

2985 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 5);

2987 
DISPLAY_INS_DEL_FONTIFY
:

2988 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, -1);

2992 
HTML_SUP
:

2993 
HTML_SUB
:

2994 
HTML_N_SUB
:

2995 i‡(!(
mode
->
¥e_mode
 & (
TBLM_DEL
 | 
TBLM_S
)))

2996 
	`„ed_èbÀ_ölöe_èg
(
tbl
, 
löe
, 
mode
, 1);

2998 
HTML_N_SUP
:

3000 
HTML_TABLE_ALT
:

3001 
id
 = -1;

3002 
w
 = 0;

3003 
	`∑r£dèg_gë_vÆue
(
èg
, 
ATTR_TID
, &
id
);

3004 i‡(
id
 >0 && id < 
tbl
->
¡abÀ
) {

3005 
èbÀ
 *
tbl1
 = 
tbl
->
èbÀs
[
id
].
±r
;

3006 
	`„ed_èbÀ_block_èg
(
tbl
, 
löe
, 
mode
, 0, 
cmd
);

3007 
	`addc⁄ã¡ssize
(
tbl
, 
	`maximum_èbÀ_width
(
tbl1
));

3008 
	`check_möimum0
(
tbl
, 
tbl1
->
¶›py_width
);

3009 #ifde‡
TABLE_EXPAND


3010 
w
 = 
tbl1
->
tŸÆ_width
;

3011 
v
 = 0;

3012 
cﬁ•™
 = 
	`èbÀ_cﬁ•™
(
tbl
,Åbl->
row
,Åbl->
cﬁ
);

3013 i‡(
cﬁ•™
 > 1) {

3014 i‡(
˚Œ
->
i˚Œ
 >= 0)

3015 
v
 = 
˚Œ
->
fixed_width
[˚Œ->
i˚Œ
];

3018 
v
 = 
tbl
->
fixed_width
[tbl->
cﬁ
];

3019 i‡(
v
 < 0 && 
tbl
->
ªÆ_width
 > 0 && 
tbl1
->real_width > 0)

3020 
w
 = -(
tbl1
->
ªÆ_width
 * 100Ë/ 
tbl
->real_width;

3022 
w
 = 
tbl1
->
ªÆ_width
;

3023 i‡(
w
 > 0)

3024 
	`check_möimum0
(
tbl
, 
w
);

3025 i‡(
w
 < 0 && 
v
 < w) {

3026 i‡(
cﬁ•™
 > 1) {

3027 i‡(
˚Œ
->
i˚Œ
 >= 0)

3028 
˚Œ
->
fixed_width
[˚Œ->
i˚Œ
] = 
w
;

3031 
tbl
->
fixed_width
[tbl->
cﬁ
] = 
w
;

3034 
	`£twidth0
(
tbl
, 
mode
);

3035 
	`˛órc⁄ã¡ssize
(
tbl
, 
mode
);

3038 
HTML_CAPTION
:

3039 
mode
->
ˇ±i⁄
 = 1;

3041 
HTML_N_CAPTION
:

3042 
HTML_THEAD
:

3043 
HTML_N_THEAD
:

3044 
HTML_TBODY
:

3045 
HTML_N_TBODY
:

3046 
HTML_TFOOT
:

3047 
HTML_N_TFOOT
:

3048 
HTML_COLGROUP
:

3049 
HTML_N_COLGROUP
:

3050 
HTML_COL
:

3052 
HTML_SCRIPT
:

3053 
mode
->
¥e_mode
 |
TBLM_SCRIPT
;

3054 
mode
->
íd_èg
 = 
HTML_N_SCRIPT
;

3056 
HTML_STYLE
:

3057 
mode
->
¥e_mode
 |
TBLM_STYLE
;

3058 
mode
->
íd_èg
 = 
HTML_N_STYLE
;

3060 
HTML_N_A
:

3061 
	`èbÀ_˛o£_™ch‹0
(
tbl
, 
mode
);

3062 
HTML_FONT
:

3063 
HTML_N_FONT
:

3064 
HTML_NOP
:

3065 
	`su•íd_‹_pushd©a
(
tbl
, 
löe
);

3067 
HTML_INTERNAL
:

3068 
HTML_N_INTERNAL
:

3069 
HTML_FORM_INT
:

3070 
HTML_N_FORM_INT
:

3071 
HTML_INPUT_ALT
:

3072 
HTML_N_INPUT_ALT
:

3073 
HTML_SELECT_INT
:

3074 
HTML_N_SELECT_INT
:

3075 
HTML_OPTION_INT
:

3076 
HTML_TEXTAREA_INT
:

3077 
HTML_N_TEXTAREA_INT
:

3078 
HTML_IMG_ALT
:

3079 
HTML_SYMBOL
:

3080 
HTML_N_SYMBOL
:

3083  
TAG_ACTION_FEED
;

3085  
TAG_ACTION_NONE
;

3086 
	}
}

3090 
	$„ed_èbÀ
(
èbÀ
 *
tbl
, *
löe
, 
èbÀ_mode
 *
mode
,

3091 
width
, 
öã∫Æ
)

3093 
i
;

3094 *
p
;

3095 
Så
 
tmp
;

3096 
èbÀ_löfo
 *
löfo
 = &
tbl
->linfo;

3098 i‡(*
löe
 ='<' &&Üöe[1] && 
	`REALLY_THE_BEGINNING_OF_A_TAG
(line)) {

3099 
∑r£d_èg
 *
èg
;

3100 
p
 = 
löe
;

3101 
èg
 = 
	`∑r£_èg
(&
p
, 
öã∫Æ
);

3102 i‡(
èg
) {

3103 
	`„ed_èbÀ_èg
(
tbl
, 
löe
, 
mode
, 
width
, 
èg
)) {

3104 
TAG_ACTION_NONE
:

3106 
TAG_ACTION_N_TABLE
:

3108 
TAG_ACTION_TABLE
:

3110 
TAG_ACTION_PLAIN
:

3112 
TAG_ACTION_FEED
:

3114 i‡(
	`∑r£dèg_√ed_ªc⁄°ru˘
(
èg
))

3115 
löe
 = 
	`∑r£dèg2°r
(
èg
)->
±r
;

3119 i‡(!(
mode
->
¥e_mode
 & (
TBLM_PLAIN
 | 
TBLM_INTXTA
 | 
TBLM_INSELECT
 |

3120 
TBLM_SCRIPT
 | 
TBLM_STYLE
)))

3125 i‡(
mode
->
¥e_mode
 & (
TBLM_DEL
 | 
TBLM_S
))

3128 i‡(
mode
->
ˇ±i⁄
) {

3129 
	`Såˇt_ch¨p
(
tbl
->
ˇ±i⁄
, 
löe
);

3132 i‡(
mode
->
¥e_mode
 & 
TBLM_SCRIPT
)

3134 i‡(
mode
->
¥e_mode
 & 
TBLM_STYLE
)

3136 i‡(
mode
->
¥e_mode
 & 
TBLM_INTXTA
) {

3137 
	`„ed_ãxèªa
(
löe
);

3140 i‡(
mode
->
¥e_mode
 & 
TBLM_INSELECT
) {

3141 
	`„ed_£À˘
(
löe
);

3144 i‡(!(
mode
->
¥e_mode
 & 
TBLM_PLAIN
) &&

3145 !(*
löe
 ='<' &&Üöe[
	`°æí
(line) - 1] == '>') &&

3146 
	`°rchr
(
löe
, '&'Ë!
NULL
) {

3147 
tmp
 = 
	`Så√w
();

3148 
p
 = 
löe
; *p;) {

3149 *
q
, *
r
;

3150 i‡(*
p
 == '&') {

3151 i‡(!
	`°∫ˇ£cmp
(
p
, "&amp;", 5) ||

3152 !
	`°∫ˇ£cmp
(
p
, "&gt;", 4) || !strncasecmp(p, "&lt;", 4)) {

3154 
	`Såˇt_ch¨
(
tmp
, *
p
);

3155 
p
++;

3158 
ec
;

3159 
q
 = 
p
;

3160 
ec
 = 
	`gëesˇ≥ch¨
(&
p
)) {

3162 
	`Såˇt_ch¨p
(
tmp
, "&lt;");

3165 
	`Såˇt_ch¨p
(
tmp
, "&gt;");

3168 
	`Såˇt_ch¨p
(
tmp
, "&amp;");

3171 
	`Såˇt_ch¨
(
tmp
, '\n');

3174 
r
 = 
	`c⁄v_ítôy
(
ec
);

3175 i‡(
r
 !
NULL
 && 
	`°æí
(r) == 1 &&

3176 
ec
 =()*
r
) {

3177 
	`Såˇt_ch¨
(
tmp
, *
r
);

3181 
	`Såˇt_ch¨
(
tmp
, *
q
);

3182 
p
 = 
q
 + 1;

3188 
	`Såˇt_ch¨
(
tmp
, *
p
);

3189 
p
++;

3192 
löe
 = 
tmp
->
±r
;

3194 i‡(!(
mode
->
¥e_mode
 & (
TBLM_SPECIAL
 & ~
TBLM_NOBR
))) {

3195 i‡(!(
tbl
->
Êag
 & 
TBL_IN_COL
Ë|| 
löfo
->
¥ev_•a˚s
 != 0)

3196 
	`IS_SPACE
(*
löe
))

3197 
löe
++;

3198 i‡(*
löe
 == '\0')

3200 
	`check_rowcﬁ
(
tbl
, 
mode
);

3201 i‡(
mode
->
¥e_mode
 & 
TBLM_NOBR
 && mode->
nobr_off£t
 < 0)

3202 
mode
->
nobr_off£t
 = 
tbl
->
èbc⁄ã¡ssize
;

3205 
i
 = 
	`skù_•a˚
(
tbl
, 
löe
, 
löfo
, !(
mode
->
¥e_mode
 & 
TBLM_NOBR
));

3206 
	`addc⁄ã¡ssize
(
tbl
, 
	`visibÀ_Àngth
(
löe
Ë- 
i
);

3207 
	`£twidth
(
tbl
, 
mode
);

3208 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
löe
);

3210 i‡(
mode
->
¥e_mode
 & 
TBLM_PRE_INT
) {

3211 
	`check_rowcﬁ
(
tbl
, 
mode
);

3212 i‡(
mode
->
nobr_off£t
 < 0)

3213 
mode
->
nobr_off£t
 = 
tbl
->
èbc⁄ã¡ssize
;

3214 
	`addc⁄ã¡ssize
(
tbl
, 
	`maximum_visibÀ_Àngth
(
löe
,Åbl->
èbc⁄ã¡ssize
));

3215 
	`£twidth
(
tbl
, 
mode
);

3216 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
löe
);

3220 
	`check_rowcﬁ
(
tbl
, 
mode
);

3221 *
löe
) {

3222 
∆
 = 
FALSE
;

3223 i‡((
p
 = 
	`°rchr
(
löe
, '\r')) || (p = strchr(line, '\n'))) {

3224 i‡(*
p
 == '\r' &&Ö[1] == '\n')

3225 
p
++;

3226 i‡(
p
[1]) {

3227 
p
++;

3228 
tmp
 = 
	`Så√w_ch¨p_n
(
löe
, 
p
 -Üine);

3229 
löe
 = 
p
;

3230 
p
 = 
tmp
->
±r
;

3233 
p
 = 
löe
;

3234 
löe
 = "";

3236 
∆
 = 
TRUE
;

3239 
p
 = 
löe
;

3240 
löe
 = "";

3242 i‡(
mode
->
¥e_mode
 & 
TBLM_PLAIN
)

3243 
i
 = 
	`maximum_visibÀ_Àngth_∂aö
(
p
, 
tbl
->
èbc⁄ã¡ssize
);

3245 
i
 = 
	`maximum_visibÀ_Àngth
(
p
, 
tbl
->
èbc⁄ã¡ssize
);

3246 
	`addc⁄ã¡ssize
(
tbl
, 
i
);

3247 
	`£twidth
(
tbl
, 
mode
);

3248 i‡(
∆
)

3249 
	`˛órc⁄ã¡ssize
(
tbl
, 
mode
);

3250 
	`pushd©a
(
tbl
,Åbl->
row
,Åbl->
cﬁ
, 
p
);

3254 
	}
}

3257 
	$„ed_èbÀ1
(
èbÀ
 *
tbl
, 
Så
 
tok
, 
èbÀ_mode
 *
mode
, 
width
)

3259 
Så
 
tokbuf
;

3260 
°©us
;

3261 *
löe
;

3262 i‡(!
tok
)

3264 
tokbuf
 = 
	`Så√w
();

3265 
°©us
 = 
R_ST_NORMAL
;

3266 
löe
 = 
tok
->
±r
;

3267 
ªad_tokí


3268 (
tokbuf
, &
löe
, &
°©us
, 
mode
->
¥e_mode
 & 
TBLM_PREMODE
, 0))

3269 
	`„ed_èbÀ
(
tbl
, 
tokbuf
->
±r
, 
mode
, 
width
, 
TRUE
);

3270 
	}
}

3273 
	$pushTabÀ
(
èbÀ
 *
tbl
, èbÀ *
tbl1
)

3275 
cﬁ
;

3276 
row
;

3278 
cﬁ
 = 
tbl
->col;

3279 
row
 = 
tbl
->row;

3281 i‡(
tbl
->
¡abÀ
 >tbl->
èbÀs_size
) {

3282 
èbÀ_ö
 *
tmp
;

3283 
tbl
->
èbÀs_size
 +
MAX_TABLE_N
;

3284 
tmp
 = 
	`New_N
(
èbÀ_ö
, 
tbl
->
èbÀs_size
);

3285 i‡(
tbl
->
èbÀs
)

3286 
	`bc›y
(
tbl
->
èbÀs
, 
tmp
,Åbl->
¡abÀ
 * (
èbÀ_ö
));

3287 
tbl
->
èbÀs
 = 
tmp
;

3290 
tbl
->
èbÀs
[tbl->
¡abÀ
].
±r
 = 
tbl1
;

3291 
tbl
->
èbÀs
[tbl->
¡abÀ
].
cﬁ
 = col;

3292 
tbl
->
èbÀs
[tbl->
¡abÀ
].
row
 =Ñow;

3293 
tbl
->
èbÀs
[tbl->
¡abÀ
].
ödít
 =Åbl->indent;

3294 
tbl
->
èbÀs
[tbl->
¡abÀ
].
buf
 = 
	`√wTextLöeLi°
();

3295 
	`check_row
(
tbl
, 
row
);

3296 i‡(
cﬁ
 + 1 <
tbl
->
maxcﬁ
 &&Åbl->
èb©å
[
row
][cﬁ + 1] & 
HTT_X
)

3297 
tbl
->
èbÀs
[tbl->
¡abÀ
].
˚Œ
 =Åbl->˚Œ.
i˚Œ
;

3299 
tbl
->
èbÀs
[tbl->
¡abÀ
].
˚Œ
 = -1;

3300 
tbl
->
¡abÀ
++;

3301 
	}
}

3303 #ifde‡
MATRIX


3305 
	$c‹ª˘_èbÀ_m©rix
(
èbÀ
 *
t
, 
cﬁ
, 
c•™
, 
a
, 
b
)

3307 
i
, 
j
;

3308 
ecﬁ
 = 
cﬁ
 + 
c•™
;

3309 
w
 = 1. / (
b
 * b);

3311 
i
 = 
cﬁ
; i < 
ecﬁ
; i++) {

3312 
	`v_add_vÆ
(
t
->
ve˘‹
, 
i
, 
w
 * 
a
);

3313 
j
 = 
i
; j < 
ecﬁ
; j++) {

3314 
	`m_add_vÆ
(
t
->
m©rix
, 
i
, 
j
, 
w
);

3315 
	`m_£t_vÆ
(
t
->
m©rix
, 
j
, 
i
, 
	`m_íåy
(t->matrix, i, j));

3318  
i
;

3319 
	}
}

3322 
	$c‹ª˘_èbÀ_m©rix2
(
èbÀ
 *
t
, 
cﬁ
, 
c•™
, 
s
, 
b
)

3324 
i
, 
j
;

3325 
ecﬁ
 = 
cﬁ
 + 
c•™
;

3326 
size
 = 
t
->
maxcﬁ
 + 1;

3327 
w
 = 1. / (
b
 * b);

3328 
ss
;

3330 
i
 = 0; i < 
size
; i++) {

3331 
j
 = 
i
; j < 
size
; j++) {

3332 i‡(
i
 >
cﬁ
 && i < 
ecﬁ
 && 
j
 >= col && j <Écol)

3333 
ss
 = (1. - 
s
) * (1. - s);

3334 i‡((
i
 >
cﬁ
 && i < 
ecﬁ
Ë|| (
j
 >= col && j <Écol))

3335 
ss
 = -(1. - 
s
) * s;

3337 
ss
 = 
s
 * s;

3338 
	`m_add_vÆ
(
t
->
m©rix
, 
i
, 
j
, 
w
 * 
ss
);

3341 
	}
}

3344 
	$c‹ª˘_èbÀ_m©rix3
(
èbÀ
 *
t
, 
cﬁ
, *
Êags
, 
s
,

3345 
b
)

3347 
i
, 
j
;

3348 
ss
;

3349 
size
 = 
t
->
maxcﬁ
 + 1;

3350 
w
 = 1. / (
b
 * b);

3351 
Êg
 = (
Êags
[
cﬁ
] == 0);

3353 
i
 = 0; i < 
size
; i++) {

3354 i‡(!((
Êg
 && 
Êags
[
i
] == 0) || (!flg && flags[i] != 0)))

3356 
j
 = 
i
; j < 
size
; j++) {

3357 i‡(!((
Êg
 && 
Êags
[
j
] == 0) || (!flg && flags[j] != 0)))

3359 i‡(
i
 =
cﬁ
 && 
j
 == col)

3360 
ss
 = (1. - 
s
) * (1. - s);

3361 i‡(
i
 =
cﬁ
 || 
j
 == col)

3362 
ss
 = -(1. - 
s
) * s;

3364 
ss
 = 
s
 * s;

3365 
	`m_add_vÆ
(
t
->
m©rix
, 
i
, 
j
, 
w
 * 
ss
);

3368 
	}
}

3371 
	$c‹ª˘_èbÀ_m©rix4
(
èbÀ
 *
t
, 
cﬁ
, 
c•™
, *
Êags
,

3372 
s
, 
b
)

3374 
i
, 
j
;

3375 
ss
;

3376 
ecﬁ
 = 
cﬁ
 + 
c•™
;

3377 
size
 = 
t
->
maxcﬁ
 + 1;

3378 
w
 = 1. / (
b
 * b);

3380 
i
 = 0; i < 
size
; i++) {

3381 i‡(
Êags
[
i
] && !(ò>
cﬁ
 && i < 
ecﬁ
))

3383 
j
 = 
i
; j < 
size
; j++) {

3384 i‡(
Êags
[
j
] && !(j >
cﬁ
 && j < 
ecﬁ
))

3386 i‡(
i
 >
cﬁ
 && i < 
ecﬁ
 && 
j
 >= col && j <Écol)

3387 
ss
 = (1. - 
s
) * (1. - s);

3388 i‡((
i
 >
cﬁ
 && i < 
ecﬁ
Ë|| (
j
 >= col && j <Écol))

3389 
ss
 = -(1. - 
s
) * s;

3391 
ss
 = 
s
 * s;

3392 
	`m_add_vÆ
(
t
->
m©rix
, 
i
, 
j
, 
w
 * 
ss
);

3395 
	}
}

3398 
	$£t_èbÀ_m©rix0
(
èbÀ
 *
t
, 
maxwidth
)

3400 
size
 = 
t
->
maxcﬁ
 + 1;

3401 
i
, 
j
, 
k
, 
bcﬁ
, 
ecﬁ
;

3402 
width
;

3403 
w0
, 
w1
, 
w
, 
s
, 
b
;

3404 #ifde‡
__GNUC__


3405 
we
[
size
];

3406 
ex∑nd
[
size
];

3408 
we
[
MAXCOL
];

3409 
ex∑nd
[
MAXCOL
];

3411 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

3413 
w0
 = 0.;

3414 
i
 = 0; i < 
size
; i++) {

3415 
we
[
i
] = 
	`weight
(
t
->
èbwidth
[i]);

3416 
w0
 +
we
[
i
];

3418 i‡(
w0
 <= 0.)

3419 
w0
 = 1.;

3421 i‡(
˚Œ
->
√˚Œ
 == 0) {

3422 
i
 = 0; i < 
size
; i++) {

3423 
s
 = 
we
[
i
] / 
w0
;

3424 
b
 = 
	`sigma_td_nw
(()(
s
 * 
maxwidth
));

3425 
	`c‹ª˘_èbÀ_m©rix2
(
t
, 
i
, 1, 
s
, 
b
);

3430 
	`bzîo
(
ex∑nd
, 
size
);

3432 
k
 = 0; k < 
˚Œ
->
√˚Œ
; k++) {

3433 
j
 = 
˚Œ
->
eödex
[
k
];

3434 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

3435 
ecﬁ
 = 
bcﬁ
 + 
˚Œ
->
cﬁ•™
[
j
];

3436 
width
 = 
˚Œ
->width[
j
] - (˚Œ->
cﬁ•™
[j] - 1Ë* 
t
->
˚Œ•acög
;

3437 
w1
 = 0.;

3438 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

3439 
w1
 +
t
->
èbwidth
[
i
] + 0.1;

3440 
ex∑nd
[
i
]++;

3442 
i
 = 
bcﬁ
; i < 
ecﬁ
; i++) {

3443 
w
 = 
	`weight
(
width
 * (
t
->
èbwidth
[
i
] + 0.1Ë/ 
w1
);

3444 i‡(
w
 > 
we
[
i
])

3445 
we
[
i
] = 
w
;

3449 
w0
 = 0.;

3450 
w1
 = 0.;

3451 
i
 = 0; i < 
size
; i++) {

3452 
w0
 +
we
[
i
];

3453 i‡(
ex∑nd
[
i
] == 0)

3454 
w1
 +
we
[
i
];

3456 i‡(
w0
 <= 0.)

3457 
w0
 = 1.;

3459 
k
 = 0; k < 
˚Œ
->
√˚Œ
; k++) {

3460 
j
 = 
˚Œ
->
eödex
[
k
];

3461 
bcﬁ
 = 
˚Œ
->
cﬁ
[
j
];

3462 
width
 = 
˚Œ
->width[
j
] - (˚Œ->
cﬁ•™
[j] - 1Ë* 
t
->
˚Œ•acög
;

3463 
w
 = 
	`weight
(
width
);

3464 
s
 = 
w
 / (
w1
 + w);

3465 
b
 = 
	`sigma_td_nw
(()(
s
 * 
maxwidth
));

3466 
	`c‹ª˘_èbÀ_m©rix4
(
t
, 
bcﬁ
, 
˚Œ
->
cﬁ•™
[
j
], 
ex∑nd
, 
s
, 
b
);

3469 
i
 = 0; i < 
size
; i++) {

3470 i‡(
ex∑nd
[
i
] == 0) {

3471 
s
 = 
we
[
i
] / 
	`max
(
w1
, 1.);

3472 
b
 = 
	`sigma_td_nw
(()(
s
 * 
maxwidth
));

3475 
s
 = 
we
[
i
] / 
	`max
(
w0
 - 
w1
, 1.);

3476 
b
 = 
	`sigma_td_nw
(
maxwidth
);

3478 
	`c‹ª˘_èbÀ_m©rix3
(
t
, 
i
, 
ex∑nd
, 
s
, 
b
);

3480 
	}
}

3483 
	$check_ªœtive_width
(
èbÀ
 *
t
, 
maxwidth
)

3485 
i
;

3486 
ªl_tŸÆ
 = 0;

3487 
size
 = 
t
->
maxcﬁ
 + 1;

3488 *
rcﬁwidth
 = 
	`New_N
(, 
size
);

3489 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

3490 
n_À·cﬁ
 = 0;

3492 
i
 = 0; i < 
size
; i++)

3493 
rcﬁwidth
[
i
] = 0;

3495 
i
 = 0; i < 
size
; i++) {

3496 i‡(
t
->
fixed_width
[
i
] < 0)

3497 
rcﬁwidth
[
i
] = -()
t
->
fixed_width
[i] / 100.0;

3498 i‡(
t
->
fixed_width
[
i
] > 0)

3499 
rcﬁwidth
[
i
] = ()
t
->
fixed_width
[i] / 
maxwidth
;

3501 
n_À·cﬁ
++;

3503 
i
 = 0; i <
˚Œ
->
max˚Œ
; i++) {

3504 i‡(
˚Œ
->
fixed_width
[
i
] < 0) {

3505 
w
 = -()
˚Œ
->
fixed_width
[
i
] / 100.0;

3506 
r
;

3507 
j
, 
k
;

3508 
n_À·˚Œ
 = 0;

3509 
k
 = 
˚Œ
->
cﬁ
[
i
];

3510 
r
 = 0.0;

3511 
j
 = 0; j < 
˚Œ
->
cﬁ•™
[
i
]; j++) {

3512 i‡(
rcﬁwidth
[
j
 + 
k
] > 0)

3513 
r
 +
rcﬁwidth
[
j
 + 
k
];

3515 
n_À·˚Œ
++;

3517 i‡(
n_À·˚Œ
 == 0) {

3519 i‡(
w
 !
r
)

3520 
˚Œ
->
fixed_width
[
i
] = -100 * 
r
;

3523 i‡(
w
 <
r
) {

3526 
w
 = 
r
 * 
˚Œ
->
cﬁ•™
[
i
] / (˚Œ->cﬁ•™[i] - 
n_À·˚Œ
);

3527 
˚Œ
->
fixed_width
[
i
] = -100 * 
w
;

3529 
j
 = 0; j < 
˚Œ
->
cﬁ•™
[
i
]; j++) {

3530 i‡(
rcﬁwidth
[
j
 + 
k
] == 0)

3531 
rcﬁwidth
[
j
 + 
k
] = (
w
 - 
r
Ë/ 
n_À·˚Œ
;

3535 i‡(
˚Œ
->
fixed_width
[
i
] > 0) {

3540 
i
 = 0; i < 
size
; i++)

3541 
ªl_tŸÆ
 +
rcﬁwidth
[
i
];

3543 i‡((
n_À·cﬁ
 =0 && 
ªl_tŸÆ
 < 0.9) || 1.1 <Ñel_total) {

3544 
i
 = 0; i < 
size
; i++) {

3545 
rcﬁwidth
[
i
] /
ªl_tŸÆ
;

3547 
i
 = 0; i < 
size
; i++) {

3548 i‡(
t
->
fixed_width
[
i
] < 0)

3549 
t
->
fixed_width
[
i
] = -
rcﬁwidth
[i] * 100;

3551 
i
 = 0; i <
˚Œ
->
max˚Œ
; i++) {

3552 i‡(
˚Œ
->
fixed_width
[
i
] < 0) {

3553 
r
;

3554 
j
, 
k
;

3555 
k
 = 
˚Œ
->
cﬁ
[
i
];

3556 
r
 = 0.0;

3557 
j
 = 0; j < 
˚Œ
->
cﬁ•™
[
i
]; j++)

3558 
r
 +
rcﬁwidth
[
j
 + 
k
];

3559 
˚Œ
->
fixed_width
[
i
] = -
r
 * 100;

3563 
	}
}

3566 
	$£t_èbÀ_m©rix
(
èbÀ
 *
t
, 
width
)

3568 
size
 = 
t
->
maxcﬁ
 + 1;

3569 
i
, 
j
;

3570 
b
, 
s
;

3571 
a
;

3572 
èbÀ_˚Œ
 *
˚Œ
 = &
t
->cell;

3574 i‡(
size
 < 1)

3577 
t
->
m©rix
 = 
	`m_gë
(
size
, size);

3578 
t
->
ve˘‹
 = 
	`v_gë
(
size
);

3579 
i
 = 0; i < 
size
; i++) {

3580 
j
 = 
i
; j < 
size
; j++)

3581 
	`m_£t_vÆ
(
t
->
m©rix
, 
i
, 
j
, 0.);

3582 
	`v_£t_vÆ
(
t
->
ve˘‹
, 
i
, 0.);

3585 
	`check_ªœtive_width
(
t
, 
width
);

3587 
i
 = 0; i < 
size
; i++) {

3588 i‡(
t
->
fixed_width
[
i
] > 0) {

3589 
a
 = 
	`max
(
t
->
fixed_width
[
i
],Å->
möimum_width
[i]);

3590 
b
 = 
	`sigma_td
(
a
);

3591 
	`c‹ª˘_èbÀ_m©rix
(
t
, 
i
, 1, 
a
, 
b
);

3593 i‡(
t
->
fixed_width
[
i
] < 0) {

3594 
s
 = -()
t
->
fixed_width
[
i
] / 100.;

3595 
b
 = 
	`sigma_td
(()(
s
 * 
width
));

3596 
	`c‹ª˘_èbÀ_m©rix2
(
t
, 
i
, 1, 
s
, 
b
);

3600 
j
 = 0; j <
˚Œ
->
max˚Œ
; j++) {

3601 i‡(
˚Œ
->
fixed_width
[
j
] > 0) {

3602 
a
 = 
	`max
(
˚Œ
->
fixed_width
[
j
], cñl->
möimum_width
[j]);

3603 
b
 = 
	`sigma_td
(
a
);

3604 
	`c‹ª˘_èbÀ_m©rix
(
t
, 
˚Œ
->
cﬁ
[
j
], cñl->
cﬁ•™
[j], 
a
, 
b
);

3606 i‡(
˚Œ
->
fixed_width
[
j
] < 0) {

3607 
s
 = -()
˚Œ
->
fixed_width
[
j
] / 100.;

3608 
b
 = 
	`sigma_td
(()(
s
 * 
width
));

3609 
	`c‹ª˘_èbÀ_m©rix2
(
t
, 
˚Œ
->
cﬁ
[
j
], cñl->
cﬁ•™
[j], 
s
, 
b
);

3613 
	`£t_èbÀ_m©rix0
(
t
, 
width
);

3615 i‡(
t
->
tŸÆ_width
 > 0) {

3616 
b
 = 
	`sigma_èbÀ
(
width
);

3619 
b
 = 
	`sigma_èbÀ_nw
(
width
);

3621 
	`c‹ª˘_èbÀ_m©rix
(
t
, 0, 
size
, 
width
, 
b
);

3622 
	}
}

	@table.h

2 #i‡(
deföed
(
MESCHACH
Ë&& !deföed(
MATRIX
))

3 
	#MATRIX


	)

6 #ifde‡
MATRIX


7 #ifde‡
MESCHACH


8 
	~<m©rix2.h
>

10 
	~"m©rix.h
"

14 
	~"Så.h
"

16 
	#MAX_TABLE
 20

	)

17 
	#MAX_TABLE_N
 20

	)

19 
	#MAXROW
 50

	)

20 
	#MAXCOL
 50

	)

22 
	#MAX_WIDTH
 80

	)

24 
	#BORDER_NONE
 0

	)

25 
	#BORDER_THIN
 1

	)

26 
	#BORDER_THICK
 2

	)

27 
	#BORDER_NOWIN
 3

	)

29 
	tèbÀ_©å
;

32 
	#TBL_IN_ROW
 1

	)

33 
	#TBL_EXPAND_OK
 2

	)

34 
	#TBL_IN_COL
 4

	)

36 
	#MAXCELL
 20

	)

37 
	#MAXROWCELL
 1000

	)

38 
	sèbÀ_˚Œ
 {

39 
	mcﬁ
[
MAXCELL
];

40 
	mcﬁ•™
[
MAXCELL
];

41 
	mödex
[
MAXCELL
];

42 
	mmax˚Œ
;

43 
	mi˚Œ
;

44 #ifde‡
MATRIX


45 
	meödex
[
MAXCELL
];

46 
	m√˚Œ
;

48 
	mwidth
[
MAXCELL
];

49 
	mmöimum_width
[
MAXCELL
];

50 
	mfixed_width
[
MAXCELL
];

53 
	sèbÀ_ö
 {

54 
èbÀ
 *
	m±r
;

55 
	mcﬁ
;

56 
	mrow
;

57 
	m˚Œ
;

58 
	mödít
;

59 
TextLöeLi°
 *
	mbuf
;

62 
	sèbÀ_löfo
 {

63 
Löïr›
 
	m¥ev_˘y≥
;

64 sig√d 
	m¥ev_•a˚s
;

65 
Så
 
	m¥evch¨
;

66 
	mÀngth
;

69 
	sèbÀ
 {

70 
	mrow
;

71 
	mcﬁ
;

72 
	mmaxrow
;

73 
	mmaxcﬁ
;

74 
	mmax_rowsize
;

75 
	mb‹dî_mode
;

76 
	mtŸÆ_width
;

77 
	mtŸÆ_height
;

78 
	mèbc⁄ã¡ssize
;

79 
	mödít
;

80 
	m˚Œ•acög
;

81 
	m˚Œ∑ddög
;

82 
	mv˚Œ∑ddög
;

83 
	mv•a˚
;

84 
	mÊag
;

85 #ifde‡
TABLE_EXPAND


86 
	mªÆ_width
;

88 
Så
 
	mˇ±i⁄
;

89 #ifde‡
ID_EXT


90 
Så
 
	mid
;

92 
GíîÆLi°
 ***
	mèbd©a
;

93 
èbÀ_©å
 **
	mèb©å
;

94 
èbÀ_©å
 
	må©å
;

95 #ifde‡
ID_EXT


96 
Så
 **
	mèbidvÆue
;

97 
Så
 *
	måidvÆue
;

99 
	mèbwidth
[
MAXCOL
];

100 
	mmöimum_width
[
MAXCOL
];

101 
	mfixed_width
[
MAXCOL
];

102 
èbÀ_˚Œ
 
	m˚Œ
;

103 *
	mèbheight
;

104 
èbÀ_ö
 *
	mèbÀs
;

105 
	m¡abÀ
;

106 
	mèbÀs_size
;

107 
TextLi°
 *
	msu•íded_d©a
;

109 
èbÀ_löfo
 
	mlöfo
;

110 #ifde‡
MATRIX


111 
MAT
 *
	mm©rix
;

112 
VEC
 *
	mve˘‹
;

114 
	m¶›py_width
;

117 
	#TBLM_PRE
 
RB_PRE


	)

118 
	#TBLM_SCRIPT
 
RB_SCRIPT


	)

119 
	#TBLM_STYLE
 
RB_STYLE


	)

120 
	#TBLM_PLAIN
 
RB_PLAIN


	)

121 
	#TBLM_NOBR
 
RB_NOBR


	)

122 
	#TBLM_PRE_INT
 
RB_PRE_INT


	)

123 
	#TBLM_INTXTA
 
RB_INTXTA


	)

124 
	#TBLM_INSELECT
 
RB_INSELECT


	)

125 
	#TBLM_PREMODE
 (
TBLM_PRE
 | 
TBLM_PRE_INT
 | 
TBLM_SCRIPT
 | 
TBLM_STYLE
 | 
TBLM_PLAIN
 | 
TBLM_INTXTA
)

	)

126 
	#TBLM_SPECIAL
 (
TBLM_PRE
 | 
TBLM_PRE_INT
 | 
TBLM_SCRIPT
 | 
TBLM_STYLE
 | 
TBLM_PLAIN
 | 
TBLM_NOBR
)

	)

127 
	#TBLM_DEL
 
RB_DEL


	)

128 
	#TBLM_S
 
RB_S


	)

129 
	#TBLM_ANCHOR
 0x1000000

	)

131 
	sèbÀ_mode
 {

132 
	m¥e_mode
;

133 
	mödít_Àvñ
;

134 
	mˇ±i⁄
;

135 
	mnobr_off£t
;

136 
	mnobr_Àvñ
;

137 
	m™ch‹_off£t
;

138 
	míd_èg
;

	@tagtable.c

1 
	~"hash.h
"

2 
	~<°dio.h
>

3 
	~"html.h
"

4 
HashIãm_si
 
	gMyHashIãm
[] = {

5  {"›ti⁄_öt",
HTML_OPTION_INT
,&
MyHashIãm
[1]},

6  {"/f‹m_öt",
HTML_N_FORM_INT
,&
MyHashIãm
[2]},

7  {"/kbd",
HTML_NOP
,&
MyHashIãm
[3]},

8  {"dd",
HTML_DD
,&
MyHashIãm
[4]},

9  {"/dú",
HTML_N_UL
,
NULL
},

10  {"/body",
HTML_N_BODY
,&
MyHashIãm
[6]},

11  {"no‰ames",
HTML_NOFRAMES
,
NULL
},

12  {"ba£",
HTML_BASE
,
NULL
},

13  {"/div",
HTML_N_DIV
,
NULL
},

14  {"tbody",
HTML_TBODY
,&
MyHashIãm
[10]},

15  {"mëa",
HTML_META
,&
MyHashIãm
[11]},

16  {"i",
HTML_I
,
NULL
},

17  {"/_symbﬁ",
HTML_N_SYMBOL
,&
MyHashIãm
[13]},

18  {"sup",
HTML_SUP
,&
MyHashIãm
[14]},

19  {"/p",
HTML_N_P
,
NULL
},

20  {"/q",
HTML_N_Q
,
NULL
},

21  {"öput_Æt",
HTML_INPUT_ALT
,&
MyHashIãm
[17]},

22  {"dl",
HTML_DL
,
NULL
},

23  {"/tbody",
HTML_N_TBODY
,&
MyHashIãm
[19]},

24  {"/s",
HTML_N_S
,
NULL
},

25  {"dñ",
HTML_DEL
,&
MyHashIãm
[21]},

26  {"xmp",
HTML_XMP
,&
MyHashIãm
[22]},

27  {"br",
HTML_BR
,
NULL
},

28  {"lök",
HTML_LINK
,&
MyHashIãm
[24]},

29  {"/u",
HTML_N_U
,&
MyHashIãm
[25]},

30  {"em",
HTML_EM
,
NULL
},

31  {"tôÀ_Æt",
HTML_TITLE_ALT
,&
MyHashIãm
[27]},

32  {"ˇ±i⁄",
HTML_CAPTION
,&
MyHashIãm
[28]},

33  {"∂aöãxt",
HTML_PLAINTEXT
,&
MyHashIãm
[29]},

34  {"p",
HTML_P
,
NULL
},

35  {"q",
HTML_Q
,&
MyHashIãm
[31]},

36  {"blockquŸe",
HTML_BLQ
,&
MyHashIãm
[32]},

37  {"míu",
HTML_UL
,
NULL
},

38  {"/cﬁgroup",
HTML_N_COLGROUP
,&
MyHashIãm
[34]},

39  {"d‚",
HTML_NOP
,
NULL
},

40  {"s",
HTML_S
,&
MyHashIãm
[36]},

41  {"°r⁄g",
HTML_STRONG
,
NULL
},

42  {"dt",
HTML_DT
,
NULL
},

43  {"u",
HTML_U
,
NULL
},

44  {"/m≠",
HTML_N_MAP
,&
MyHashIãm
[40]},

45  {"/‰ame£t",
HTML_N_FRAMESET
,&
MyHashIãm
[41]},

46  {"/ﬁ",
HTML_N_OL
,
NULL
},

47  {"/td",
HTML_N_TD
,
NULL
},

48  {"li",
HTML_LI
,
NULL
},

49  {"html",
HTML_BODY
,&
MyHashIãm
[45]},

50  {"hr",
HTML_HR
,
NULL
},

51  {"/°r⁄g",
HTML_N_STRONG
,
NULL
},

52  {"/th",
HTML_N_TH
,&
MyHashIãm
[48]},

53  {"›ti⁄",
HTML_OPTION
,&
MyHashIãm
[49]},

54  {"kbd",
HTML_NOP
,&
MyHashIãm
[50]},

55  {"dú",
HTML_UL
,
NULL
},

56  {"cﬁ",
HTML_COL
,
NULL
},

57  {"/ˇ±i⁄",
HTML_N_CAPTION
,&
MyHashIãm
[53]},

58  {"div",
HTML_DIV
,
NULL
},

59  {"hód",
HTML_HEAD
,&
MyHashIãm
[55]},

60  {"ﬁ",
HTML_OL
,&
MyHashIãm
[56]},

61  {"/ul",
HTML_N_UL
,
NULL
},

62  {"/ös",
HTML_N_INS
,&
MyHashIãm
[58]},

63  {"¨ó",
HTML_AREA
,
NULL
},

64  {"¥e_∂aö",
HTML_PRE_PLAIN
,&
MyHashIãm
[60]},

65  {"td",
HTML_TD
,&
MyHashIãm
[61]},

66  {"/›ti⁄",
HTML_N_OPTION
,
NULL
},

67  {"/no‰ames",
HTML_N_NOFRAMES
,
NULL
},

68  {"/å",
HTML_N_TR
,&
MyHashIãm
[64]},

69  {"nobr",
HTML_NOBR
,
NULL
},

70  {"img_Æt",
HTML_IMG_ALT
,&
MyHashIãm
[66]},

71  {"èbÀ_Æt",
HTML_TABLE_ALT
,&
MyHashIãm
[67]},

72  {"th",
HTML_TH
,&
MyHashIãm
[68]},

73  {"s¸ùt",
HTML_SCRIPT
,&
MyHashIãm
[69]},

74  {"/â",
HTML_NOP
,
NULL
},

75  {"code",
HTML_NOP
,
NULL
},

76  {"ßmp",
HTML_NOP
,
NULL
},

77  {"ãxèªa",
HTML_TEXTAREA
,
NULL
},

78  {"ãxèªa_öt",
HTML_TEXTAREA_INT
,
NULL
},

79  {"èbÀ",
HTML_TABLE
,&
MyHashIãm
[75]},

80  {"img",
HTML_IMG
,&
MyHashIãm
[76]},

81  {"/blockquŸe",
HTML_N_BLQ
,
NULL
},

82  {"≠∂ë",
HTML_APPLET
,&
MyHashIãm
[78]},

83  {"m≠",
HTML_MAP
,&
MyHashIãm
[79]},

84  {"ul",
HTML_UL
,
NULL
},

85  {"/s¸ùt",
HTML_N_SCRIPT
,&
MyHashIãm
[81]},

86  {"˚¡î",
HTML_CENTER
,
NULL
},

87  {"/èbÀ",
HTML_N_TABLE
,&
MyHashIãm
[83]},

88  {"côe",
HTML_NOP
,&
MyHashIãm
[84]},

89  {"/h1",
HTML_N_H
,
NULL
},

90  {"å",
HTML_TR
,&
MyHashIãm
[86]},

91  {"/h2",
HTML_N_H
,
NULL
},

92  {"image",
HTML_IMG
,&
MyHashIãm
[88]},

93  {"/h3",
HTML_N_H
,
NULL
},

94  {"¥e_öt",
HTML_PRE_INT
,&
MyHashIãm
[90]},

95  {"/f⁄t",
HTML_N_FONT
,&
MyHashIãm
[91]},

96  {"â",
HTML_NOP
,&
MyHashIãm
[92]},

97  {"/h4",
HTML_N_H
,
NULL
},

98  {"body",
HTML_BODY
,&
MyHashIãm
[94]},

99  {"/f‹m",
HTML_N_FORM
,&
MyHashIãm
[95]},

100  {"/h5",
HTML_N_H
,
NULL
},

101  {"/h6",
HTML_N_H
,
NULL
},

102  {"‰ame",
HTML_FRAME
,
NULL
},

103  {"/ãxèªa_öt",
HTML_N_TEXTAREA_INT
,&
MyHashIãm
[99]},

104  {"/img_Æt",
HTML_N_IMG_ALT
,&
MyHashIãm
[100]},

105  {"/˚¡î",
HTML_N_CENTER
,
NULL
},

106  {"/¥e",
HTML_N_PRE
,
NULL
},

107  {"tfoŸ",
HTML_TFOOT
,
NULL
},

108  {"ös",
HTML_INS
,
NULL
},

109  {"/v¨",
HTML_NOP
,
NULL
},

110  {"h1",
HTML_H
,
NULL
},

111  {"/tfoŸ",
HTML_N_TFOOT
,&
MyHashIãm
[107]},

112  {"öput",
HTML_INPUT
,&
MyHashIãm
[108]},

113  {"h2",
HTML_H
,
NULL
},

114  {"h3",
HTML_H
,
NULL
},

115  {"h4",
HTML_H
,
NULL
},

116  {"h5",
HTML_H
,
NULL
},

117  {"öã∫Æ",
HTML_INTERNAL
,&
MyHashIãm
[113]},

118  {"h6",
HTML_H
,
NULL
},

119  {"div_öt",
HTML_DIV_INT
,&
MyHashIãm
[115]},

120  {"£À˘_öt",
HTML_SELECT_INT
,&
MyHashIãm
[116]},

121  {"/¥e_öt",
HTML_N_PRE_INT
,
NULL
},

122  {"/míu",
HTML_N_UL
,
NULL
},

123  {"f‹m_öt",
HTML_FORM_INT
,&
MyHashIãm
[119]},

124  {"/sub",
HTML_N_SUB
,
NULL
},

125  {"°yÀ",
HTML_STYLE
,&
MyHashIãm
[121]},

126  {"addªss",
HTML_BR
,
NULL
},

127  {"/ãxèªa",
HTML_N_TEXTAREA
,
NULL
},

128  {"/öput_Æt",
HTML_N_INPUT_ALT
,
NULL
},

129  {"do˘y≥",
HTML_DOCTYPE
,&
MyHashIãm
[125]},

130  {"/°yÀ",
HTML_N_STYLE
,
NULL
},

131  {"/html",
HTML_N_BODY
,
NULL
},

132  {"¥e",
HTML_PRE
,&
MyHashIãm
[128]},

133  {"tôÀ",
HTML_TITLE
,
NULL
},

134  {"£À˘",
HTML_SELECT
,
NULL
},

135  {"/div_öt",
HTML_N_DIV_INT
,&
MyHashIãm
[131]},

136  {"v¨",
HTML_NOP
,
NULL
},

137  {"/tôÀ",
HTML_N_TITLE
,
NULL
},

138  {"embed",
HTML_EMBED
,&
MyHashIãm
[134]},

139  {"/sup",
HTML_N_SUP
,&
MyHashIãm
[135]},

140  {"cﬁgroup",
HTML_COLGROUP
,&
MyHashIãm
[136]},

141  {"/hód",
HTML_N_HEAD
,&
MyHashIãm
[137]},

142  {"isödex",
HTML_ISINDEX
,
NULL
},

143  {"°rike",
HTML_S
,&
MyHashIãm
[139]},

144  {"li°ög",
HTML_LISTING
,
NULL
},

145  {"bgsound",
HTML_BGSOUND
,
NULL
},

146  {"/addªss",
HTML_BR
,
NULL
},

147  {"thód",
HTML_THEAD
,&
MyHashIãm
[143]},

148  {"wbr",
HTML_WBR
,&
MyHashIãm
[144]},

149  {"/dñ",
HTML_N_DEL
,&
MyHashIãm
[145]},

150  {"/nobr",
HTML_N_NOBR
,&
MyHashIãm
[146]},

151  {"/£À˘",
HTML_N_SELECT
,&
MyHashIãm
[147]},

152  {"‰ame£t",
HTML_FRAMESET
,&
MyHashIãm
[148]},

153  {"/xmp",
HTML_N_XMP
,
NULL
},

154  {"/code",
HTML_NOP
,
NULL
},

155  {"_symbﬁ",
HTML_SYMBOL
,&
MyHashIãm
[151]},

156  {"/thód",
HTML_N_THEAD
,&
MyHashIãm
[152]},

157  {"/ßmp",
HTML_NOP
,&
MyHashIãm
[153]},

158  {"/d‚",
HTML_NOP
,&
MyHashIãm
[154]},

159  {"_id",
HTML_NOP
,
NULL
},

160  {"/°rike",
HTML_N_S
,&
MyHashIãm
[156]},

161  {"/a",
HTML_N_A
,
NULL
},

162  {"/£À˘_öt",
HTML_N_SELECT_INT
,&
MyHashIãm
[158]},

163  {"sub",
HTML_SUB
,&
MyHashIãm
[159]},

164  {"/b",
HTML_N_B
,
NULL
},

165  {"/öã∫Æ",
HTML_N_INTERNAL
,
NULL
},

166  {"/¥e_∂aö",
HTML_N_PRE_PLAIN
,&
MyHashIãm
[162]},

167  {"f⁄t",
HTML_FONT
,&
MyHashIãm
[163]},

168  {"/dl",
HTML_N_DL
,
NULL
},

169  {"f‹m",
HTML_FORM
,&
MyHashIãm
[165]},

170  {"/côe",
HTML_NOP
,&
MyHashIãm
[166]},

171  {"a",
HTML_A
,
NULL
},

172  {"b",
HTML_B
,
NULL
},

173  {"/li°ög",
HTML_N_LISTING
,&
MyHashIãm
[169]},

174  {"/em",
HTML_N_EM
,&
MyHashIãm
[170]},

175  {"/i",
HTML_N_I
,
NULL
},

178 
HashIãm_si
 *
	gMyHashIãmTbl
[] = {

179 &
MyHashIãm
[0],

180 &
MyHashIãm
[5],

181 
NULL
,

182 &
MyHashIãm
[7],

183 &
MyHashIãm
[8],

184 &
MyHashIãm
[9],

185 &
MyHashIãm
[12],

186 &
MyHashIãm
[15],

187 &
MyHashIãm
[16],

188 &
MyHashIãm
[18],

189 &
MyHashIãm
[20],

190 &
MyHashIãm
[23],

191 &
MyHashIãm
[26],

192 &
MyHashIãm
[30],

193 &
MyHashIãm
[33],

194 &
MyHashIãm
[35],

195 &
MyHashIãm
[37],

196 &
MyHashIãm
[38],

197 &
MyHashIãm
[39],

198 
NULL
,

199 &
MyHashIãm
[42],

200 &
MyHashIãm
[43],

201 &
MyHashIãm
[44],

202 &
MyHashIãm
[46],

203 &
MyHashIãm
[47],

204 
NULL
,

205 &
MyHashIãm
[51],

206 
NULL
,

207 &
MyHashIãm
[52],

208 
NULL
,

209 &
MyHashIãm
[54],

210 &
MyHashIãm
[57],

211 &
MyHashIãm
[59],

212 &
MyHashIãm
[62],

213 &
MyHashIãm
[63],

214 
NULL
,

215 &
MyHashIãm
[65],

216 &
MyHashIãm
[70],

217 &
MyHashIãm
[71],

218 &
MyHashIãm
[72],

219 &
MyHashIãm
[73],

220 &
MyHashIãm
[74],

221 &
MyHashIãm
[77],

222 
NULL
,

223 &
MyHashIãm
[80],

224 &
MyHashIãm
[82],

225 &
MyHashIãm
[85],

226 &
MyHashIãm
[87],

227 &
MyHashIãm
[89],

228 &
MyHashIãm
[93],

229 &
MyHashIãm
[96],

230 &
MyHashIãm
[97],

231 &
MyHashIãm
[98],

232 &
MyHashIãm
[101],

233 &
MyHashIãm
[102],

234 &
MyHashIãm
[103],

235 &
MyHashIãm
[104],

236 &
MyHashIãm
[105],

237 &
MyHashIãm
[106],

238 &
MyHashIãm
[109],

239 &
MyHashIãm
[110],

240 &
MyHashIãm
[111],

241 &
MyHashIãm
[112],

242 
NULL
,

243 &
MyHashIãm
[114],

244 &
MyHashIãm
[117],

245 
NULL
,

246 
NULL
,

247 &
MyHashIãm
[118],

248 &
MyHashIãm
[120],

249 
NULL
,

250 &
MyHashIãm
[122],

251 &
MyHashIãm
[123],

252 &
MyHashIãm
[124],

253 &
MyHashIãm
[126],

254 
NULL
,

255 
NULL
,

256 &
MyHashIãm
[127],

257 &
MyHashIãm
[129],

258 
NULL
,

259 &
MyHashIãm
[130],

260 &
MyHashIãm
[132],

261 &
MyHashIãm
[133],

262 &
MyHashIãm
[138],

263 &
MyHashIãm
[140],

264 &
MyHashIãm
[141],

265 &
MyHashIãm
[142],

266 
NULL
,

267 
NULL
,

268 &
MyHashIãm
[149],

269 &
MyHashIãm
[150],

270 &
MyHashIãm
[155],

271 &
MyHashIãm
[157],

272 
NULL
,

273 &
MyHashIãm
[160],

274 
NULL
,

275 &
MyHashIãm
[161],

276 &
MyHashIãm
[164],

277 &
MyHashIãm
[167],

278 &
MyHashIãm
[168],

281 
Hash_si
 
	gègèbÀ
 = {100, 
MyHashIãmTbl
};

	@terms.c

6 
	~<°dio.h
>

7 
	~<sig«l.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<f˙é.h
>

10 
	~<î∫o.h
>

11 
	~<sys/time.h
>

12 
	~<uni°d.h
>

13 
	~"c⁄fig.h
"

14 
	~<°rög.h
>

15 #ifde‡
HAVE_SYS_SELECT_H


16 
	~<sys/£À˘.h
>

18 #i‚de‡
__MINGW32_VERSION


19 
	~<sys/io˘l.h
>

21 
	~<wösock.h
>

23 #ifde‡
USE_MOUSE


24 #ifde‡
USE_GPM


25 
	~<gpm.h
>

27 #ifde‡
USE_SYSMOUSE


28 
	~<o§ñd©e.h
>

29 #i‡(
__FªeBSD_vîsi⁄
 >= 400017)

30 
	~<sys/c⁄sio.h
>

31 
	~<sys/fbio.h
>

33 
	~<machöe/c⁄sﬁe.h
>

35 (*
sysm_h™dÀr
Ë(
x
, 
y
, 
nbs
, 
obs
);

36 
cwidth
 = 8, 
cheight
 = 16;

37 
xpix
, 
ypix
, 
nbs
, 
obs
 = 0;

40 
is_xãrm
 = 0;

42 
	`mou£_öô
(), 
	`mou£_íd
();

43 
mou£A˘ive
 = 0;

46 *
tôÀ_°r
 = 
NULL
;

48 
ây
;

50 
	~"ãrms.h
"

51 
	~"fm.h
"

52 
	~"my˘y≥.h
"

54 #ifde‡
__EMX__


55 
	#INCL_DOSNLS


	)

56 
	~<os2.h
>

59 #i‡
	`deföed
(
__CYGWIN__
)

60 
	~<wödows.h
>

61 
	~<sys/cygwö.h
>

62 
isWöC⁄sﬁe
 = 0;

63 
	#TERM_CYGWIN
 1

	)

64 
	#TERM_CYGWIN_RESERVE_IME
 2

	)

65 
isLoˇlC⁄sﬁe
 = 0;

67 #i‡
CYGWIN_VERSION_DLL_MAJOR
 < 1005 && 
	`deföed
(
USE_MOUSE
)

68 
cygwö_mou£_bä_sw≠≥d
 = 0;

71 #i‡
	`deföed
(
SUPPORT_WIN9X_CONSOLE_MBCS
)

72 
HANDLE
 
hC⁄In
 = 
INVALID_HANDLE_VALUE
;

73 
isWö95
 = 0;

74 *
C⁄InV
;

75 
iC⁄In
, 
nC⁄In
, 
nC⁄InMax
;

78 
	$check_wö9x
()

80 
OSVERSIONINFO
 
wöVîsi⁄Info
;

82 
wöVîsi⁄Info
.
dwOSVîsi⁄InfoSize
 = (
OSVERSIONINFO
);

83 i‡(
	`GëVîsi⁄Ex
(&
wöVîsi⁄Info
) == 0) {

84 
	`Ârötf
(
°dîr
, "can't get Windows version information.\n");

85 
	`exô
(1);

87 i‡(
wöVîsi⁄Info
.
dwPœtf‹mId
 =
VER_PLATFORM_WIN32_WINDOWS
) {

88 
isWö95
 = 1;

91 
isWö95
 = 0;

93 
	}
}

96 
	$íabÀ_wö9x_c⁄sﬁe_öput
()

98 i‡(
isWö95
 && 
isWöC⁄sﬁe
 && 
isLoˇlC⁄sﬁe
 &&

99 
hC⁄In
 =
INVALID_HANDLE_VALUE
) {

100 
hC⁄In
 = 
	`Cª©eFûe
("CONIN$", 
GENERIC_READ
 | 
GENERIC_WRITE
,

101 
FILE_SHARE_READ
 | 
FILE_SHARE_WRITE
,

102 
NULL
, 
OPEN_EXISTING
, 0, NULL);

103 i‡(
hC⁄In
 !
INVALID_HANDLE_VALUE
) {

104 
	`gëch
();

107 
	}
}

110 
	$dißbÀ_wö9x_c⁄sﬁe_öput
()

112 i‡(
hC⁄In
 !
INVALID_HANDLE_VALUE
) {

113 
	`Clo£H™dÀ
(
hC⁄In
);

114 
hC⁄In
 = 
INVALID_HANDLE_VALUE
;

116 
	}
}

119 
	$ex∑nd_wö32_c⁄sﬁe_öput_buf„r
(
n
)

121 i‡(
nC⁄In
 + 
n
 >
nC⁄InMax
) {

122 *
ﬁdv
;

124 
nC⁄InMax
 = ((
nC⁄In
 + 
n
) / 2 + 1) * 3;

125 
ﬁdv
 = 
C⁄InV
;

126 
C⁄InV
 = 
	`GC_MALLOC_ATOMIC
(
nC⁄InMax
);

127 
	`mem˝y
(
C⁄InV
, 
ﬁdv
, 
nC⁄In
);

129 
	}
}

132 
	$ªad_wö32_c⁄sﬁe_öput
()

134 
INPUT_RECORD
 
ªc
;

135 
DWORD
 
√víts
;

137 i‡(
	`PìkC⁄sﬁeI≈ut
(
hC⁄In
, &
ªc
, 1, &
√víts
) &&Çevents) {

138 
ªc
.
EvítTy≥
) {

139 
KEY_EVENT
:

140 
	`ex∑nd_wö32_c⁄sﬁe_öput_buf„r
(3);

142 i‡(
	`RódC⁄sﬁe
(
hC⁄In
, &
C⁄InV
[
nC⁄In
], 1, &
√víts
, 
NULL
)) {

143 
nC⁄In
 +
√víts
;

144  
√víts
;

152 
	`RódC⁄sﬁeI≈ut
(
hC⁄In
, &
ªc
, 1, &
√víts
);

155 
	}
}

158 
	$ªad_wö32_c⁄sﬁe
(*
s
, 
n
)

160 
KEY_EVENT_RECORD
 *
kî
;

162 i‡(
hC⁄In
 =
INVALID_HANDLE_VALUE
)

163  
	`ªad
(
ây
, 
s
, 
n
);

165 i‡(
n
 > 0)

167 i‡(
iC⁄In
 < 
nC⁄In
) {

168 i‡(
n
 > 
nC⁄In
 - 
iC⁄In
)

169 
n
 = 
nC⁄In
 - 
iC⁄In
;

171 
	`mem˝y
(
s
, 
C⁄InV
, 
n
);

173 i‡((
iC⁄In
 +
n
Ë>
nC⁄In
)

174 
iC⁄In
 = 
nC⁄In
 = 0;

179 
iC⁄In
 = 
nC⁄In
 = 0;

181 !
	`ªad_wö32_c⁄sﬁe_öput
()) ;

184  
n
;

185 
	}
}

189 
HWND


190 
	$GëC⁄sﬁeHwnd
()

192 
	#MY_BUFSIZE
 1024

	)

193 
HWND
 
hwndFound
;

194 
pszNewWödowTôÀ
[
MY_BUFSIZE
];

195 
pszOldWödowTôÀ
[
MY_BUFSIZE
];

197 
	`GëC⁄sﬁeTôÀ
(
pszOldWödowTôÀ
, 
MY_BUFSIZE
);

198 
	`w•rötf
(
pszNewWödowTôÀ
, "%d/%d",

199 
	`GëTickCou¡
(), 
	`GëCuºítPro˚ssId
());

200 
	`SëC⁄sﬁeTôÀ
(
pszNewWödowTôÀ
);

201 
	`SÀï
(40);

202 
hwndFound
 = 
	`FödWödow
(
NULL
, 
pszNewWödowTôÀ
);

203 
	`SëC⁄sﬁeTôÀ
(
pszOldWödowTôÀ
);

204  (
hwndFound
);

205 
	}
}

207 #i‡
CYGWIN_VERSION_DLL_MAJOR
 < 1005 && 
deföed
(
USE_MOUSE
)

209 
	$cygwö_vîsi⁄
()

211 
≥r_¥o˚ss
 *
p
;

213 
p
 = (
≥r_¥o˚ss
 *)
	`cygwö_öã∫Æ
(
CW_USER_DATA
);

214 i‡(
p
 !
NULL
) {

215  (
p
->
dŒ_maj‹
 * 1000Ë+Ö->
dŒ_mö‹
;

218 
	}
}

222 
	$check_cygwö_c⁄sﬁe
()

224 *
ãrm
 = 
	`gëív
("TERM");

225 
HANDLE
 
hWnd
;

227 i‡(
ãrm
 =
NULL
)

228 
ãrm
 = 
DEFAULT_TERM
;

229 i‡(
ãrm
 && 
	`°∫cmp
(term, "cygwin", 6) == 0) {

230 
isWöC⁄sﬁe
 = 
TERM_CYGWIN
;

232 i‡(
isWöC⁄sﬁe
) {

233 
hWnd
 = 
	`GëC⁄sﬁeHwnd
();

234 i‡(
hWnd
 !
INVALID_HANDLE_VALUE
) {

235 i‡(
	`IsWödowVisibÀ
(
hWnd
)) {

236 
isLoˇlC⁄sﬁe
 = 1;

239 i‡(
	`°∫cmp
(
	`gëív
("LANG"), "ja", 2) == 0) {

240 
isWöC⁄sﬁe
 = 
TERM_CYGWIN_RESERVE_IME
;

242 #ifde‡
SUPPORT_WIN9X_CONSOLE_MBCS


243 
	`check_wö9x
();

244 i‡(
isWö95
 && 
	`ây¶Ÿ
() != -1) {

245 
isLoˇlC⁄sﬁe
 = 0;

249 #i‡
CYGWIN_VERSION_DLL_MAJOR
 < 1005 && 
	`deföed
(
USE_MOUSE
)

250 i‡(
	`cygwö_vîsi⁄
() <= 1003015) {

252 
cygwö_mou£_bä_sw≠≥d
 = 1;

255 
	}
}

258 *
gëív
(const *);

259 
MySig«lH™dÀr
 
ª£t_exô
(
SIGNAL_ARG
), 
îr‹_dump
(SIGNAL_ARG);

260 
£éöescﬁs
();

261 
Êush_ây
();

263 #i‚de‡
SIGIOT


264 
	#SIGIOT
 
SIGABRT


	)

267 #ifde‡
HAVE_TERMIO_H


268 
	~<ãrmio.h
>

269 
ãrmio
 
	tTîmöÆMode
;

270 
	#TîmöÆSë
(
fd
,
x
Ë
	`io˘l
(fd,
TCSETA
,x)

	)

271 
	#TîmöÆGë
(
fd
,
x
Ë
	`io˘l
(fd,
TCGETA
,x)

	)

272 
	#MODEFLAG
(
d
Ë((d).
c_lÊag
)

	)

273 
	#IMODEFLAG
(
d
Ë((d).
c_iÊag
)

	)

276 #ifde‡
HAVE_TERMIOS_H


277 
	~<ãrmios.h
>

278 
	~<uni°d.h
>

279 
ãrmios
 
	tTîmöÆMode
;

280 
	#TîmöÆSë
(
fd
,
x
Ë
	`tc£èâr
(fd,
TCSANOW
,x)

	)

281 
	#TîmöÆGë
(
fd
,
x
Ë
	`tcgë©å
(fd,x)

	)

282 
	#MODEFLAG
(
d
Ë((d).
c_lÊag
)

	)

283 
	#IMODEFLAG
(
d
Ë((d).
c_iÊag
)

	)

286 #ifde‡
HAVE_SGTTY_H


287 
	~<sgây.h
>

288 
sgâyb
 
	tTîmöÆMode
;

289 
	#TîmöÆSë
(
fd
,
x
Ë
	`io˘l
(fd,
TIOCSETP
,x)

	)

290 
	#TîmöÆGë
(
fd
,
x
Ë
	`io˘l
(fd,
TIOCGETP
,x)

	)

291 
	#MODEFLAG
(
d
Ë((d).
sg_Êags
)

	)

294 #ifde‡
__MINGW32_VERSION


296 
	tcc_t
;

297 
	t•ìd_t
;

298 
	ttcÊag_t
;

300 
	#NCCS
 32

	)

301 
	sãrmios


303 
tcÊag_t
 
	mc_iÊag
;

304 
tcÊag_t
 
	mc_oÊag
;

305 
tcÊag_t
 
	mc_cÊag
;

306 
tcÊag_t
 
	mc_lÊag
;

307 
cc_t
 
	mc_löe
;

308 
cc_t
 
	mc_cc
[
NCCS
];

309 
•ìd_t
 
	mc_i•ìd
;

310 
•ìd_t
 
	mc_o•ìd
;

312 
ãrmios
 
	tTîmöÆMode
;

313 
	#TîmöÆSë
(
fd
,
x
Ë(0)

	)

314 
	#TîmöÆGë
(
fd
,
x
Ë(0)

	)

315 
	#MODEFLAG
(
d
Ë(0)

	)

318 
	#SIGHUP
 (0)

	)

319 
	#SIGQUIT
 (0)

	)

320 
	#ECHO
 (0)

	)

321 
	#ISIG
 (0)

	)

322 
	#VEOF
 (0)

	)

323 
	#ICANON
 (0)

	)

324 
	#IXON
 (0)

	)

325 
	#IXOFF
 (0)

	)

327 *
ây«me
();

330 
	#MAX_LINE
 200

	)

331 
	#MAX_COLUMN
 400

	)

334 
	#S_SCREENPROP
 0x0f

	)

335 
	#S_NORMAL
 0x00

	)

336 
	#S_STANDOUT
 0x01

	)

337 
	#S_UNDERLINE
 0x02

	)

338 
	#S_BOLD
 0x04

	)

339 
	#S_EOL
 0x08

	)

342 
	#C_WHICHCHAR
 0xc0

	)

343 
	#C_ASCII
 0x00

	)

344 #ifde‡
USE_M17N


345 
	#C_WCHAR1
 0x40

	)

346 
	#C_WCHAR2
 0x80

	)

348 
	#C_CTRL
 0xc0

	)

350 
	#CHMODE
(
c
Ë((c)&
C_WHICHCHAR
)

	)

351 
	#SETCHMODE
(
v¨
,
mode
Ë((v¨Ë(((v¨)&~
C_WHICHCHAR
Ë| mode))

	)

352 #ifde‡
USE_M17N


353 
	#SETCH
(
v¨
,
ch
,
Àn
Ë((v¨Ë
	`New_Reu£
(, (var), (len) + 1), \

354 
	`°∫˝y
((
v¨
), (
ch
), (
Àn
)), (v¨)[Àn] = '\0')

	)

356 
	#SETCH
(
v¨
,
ch
,
Àn
Ë((v¨Ë(ch))

	)

360 
	#COL_FCOLOR
 0xf00

	)

361 
	#COL_FBLACK
 0x800

	)

362 
	#COL_FRED
 0x900

	)

363 
	#COL_FGREEN
 0xa00

	)

364 
	#COL_FYELLOW
 0xb00

	)

365 
	#COL_FBLUE
 0xc00

	)

366 
	#COL_FMAGENTA
 0xd00

	)

367 
	#COL_FCYAN
 0xe00

	)

368 
	#COL_FWHITE
 0xf00

	)

369 
	#COL_FTERM
 0x000

	)

371 
	#S_COLORED
 0xf00

	)

373 #ifde‡
USE_BG_COLOR


375 
	#COL_BCOLOR
 0xf000

	)

376 
	#COL_BBLACK
 0x8000

	)

377 
	#COL_BRED
 0x9000

	)

378 
	#COL_BGREEN
 0xa000

	)

379 
	#COL_BYELLOW
 0xb000

	)

380 
	#COL_BBLUE
 0xc000

	)

381 
	#COL_BMAGENTA
 0xd000

	)

382 
	#COL_BCYAN
 0xe000

	)

383 
	#COL_BWHITE
 0xf000

	)

384 
	#COL_BTERM
 0x0000

	)

386 
	#S_BCOLORED
 0xf000

	)

390 
	#S_GRAPHICS
 0x10

	)

392 
	#S_DIRTY
 0x20

	)

394 
	#SETPROP
(
v¨
,
¥›
Ë(v¨ = (((v¨)&
S_DIRTY
Ë|Ör›))

	)

397 
	#L_DIRTY
 0x01

	)

398 
	#L_UNUSED
 0x02

	)

399 
	#L_NEED_CE
 0x04

	)

400 
	#L_CLRTOEOL
 0x08

	)

402 
	#ISDIRTY
(
d
Ë((dË& 
L_DIRTY
)

	)

403 
	#ISUNUSED
(
d
Ë((dË& 
L_UNUSED
)

	)

404 
	#NEED_CE
(
d
Ë((dË& 
L_NEED_CE
)

	)

406 
	tl_¥›
;

408 
	ss˛öe
 {

409 #ifde‡
USE_M17N


410 **
	mlöeimage
;

412 *
	mlöeimage
;

414 
l_¥›
 *
	mlöïr›
;

415 
	misdúty
;

416 
	meﬁ
;

417 } 
	tS¸ìn
;

419 
TîmöÆMode
 
	gd_iovÆ
;

420 
	gây
 = -1;

421 
FILE
 *
	gâyf
 = 
NULL
;

424 
	gbp
[1024], 
	gfunc°r
[256];

426 *
	gT_cd
, *
	gT_˚
, *
	gT_kr
, *
	gT_kl
, *
	gT_¸
, *
	gT_bt
, *
	gT_è
, *
	gT_sc
, *
	gT_rc
,

427 *
	gT_so
, *
	gT_£
, *
	gT_us
, *
	gT_ue
, *
	gT_˛
, *
	gT_cm
, *
	gT_Æ
, *
	gT_§
, *
	gT_md
, *
	gT_me
,

428 *
	gT_ti
, *
	gT_ã
, *
	gT_nd
, *
	gT_as
, *
	gT_´
, *
	gT_eA
, *
	gT_ac
, *
	gT_›
;

430 
	gLINES
, 
	gCOLS
;

431 #i‡
deföed
(
__CYGWIN__
)

432 
	gLASTLINE
;

435 
	gmax_LINES
 = 0, 
	gmax_COLS
 = 0;

436 
	gèb_°ï
 = 8;

437 
	gCurLöe
, 
	gCurCﬁumn
;

438 
S¸ìn
 *
	gS¸ìnEÀm
 = 
NULL
, **
	gS¸ìnImage
 = NULL;

439 
l_¥›
 
	gCuºítMode
 = 0;

440 
	ggøph_íabÀd
 = 0;

442 
	ggcm≠
[96];

444 
tgëít
(*, *);

445 
tgënum
(*);

446 
tgëÊag
(*);

447 *
tgë°r
(*, **);

448 *
tgŸo
(*, , );

449 
çuts
(*, , (*)());

450 
	`˛ór
(), 
	`wøp
(), 
	`touch_löe
(), 
	`touch_cﬁumn
();

452 
	`√ed_˛π€ﬁ
();

454 
	`˛π€ﬁ
();

456 
	`wrôe1
();

459 
	$wrôe°r
(*
s
)

461 
	`çuts
(
s
, 1, 
wrôe1
);

462 
	}
}

464 
	#MOVE
(
löe
,
cﬁumn
Ë
	`wrôe°r
(
	`tgŸo
(
T_cm
,cﬁumn,löe));

	)

466 #ifde‡
USE_MOUSE


467 
	#W3M_TERM_INFO
(
«me
, 
tôÀ
, 
mou£
Ë«me,ÅôÀ, 
	)
mouse

468 
	#NEED_XTERM_ON
 (1)

	)

469 
	#NEED_XTERM_OFF
 (1<<1)

	)

470 #ifde‡
__CYGWIN__


471 
	#NEED_CYGWIN_ON
 (1<<2)

	)

472 
	#NEED_CYGWIN_OFF
 (1<<3)

	)

475 
	#W3M_TERM_INFO
(
«me
, 
tôÀ
, 
mou£
Ë«me, 
	)
title

478 
	gXTERM_TITLE
[] = "\033]0;w3m: %s\007";

479 
	gSCREEN_TITLE
[] = "\033k%s\033\134";

480 #ifde‡
__CYGWIN__


481 
	gCYGWIN_TITLE
[] = "w3m: %s";

485 
	sw3m_ãrm_öfo
 {

486 *
	mãrm
;

487 *
	mtôÀ_°r
;

488 #ifde‡
USE_MOUSE


489 
	mmou£_Êag
;

491 } 
	gw3m_ãrm_öfo_li°
[] = {

492 {
W3M_TERM_INFO
("xãrm", 
XTERM_TITLE
, (
NEED_XTERM_ON
|
NEED_XTERM_OFF
))},

493 {
W3M_TERM_INFO
("kãrm", 
XTERM_TITLE
, (
NEED_XTERM_ON
|
NEED_XTERM_OFF
))},

494 {
W3M_TERM_INFO
("rxvt", 
XTERM_TITLE
, (
NEED_XTERM_ON
|
NEED_XTERM_OFF
))},

495 {
W3M_TERM_INFO
("Eãrm", 
XTERM_TITLE
, (
NEED_XTERM_ON
|
NEED_XTERM_OFF
))},

496 {
W3M_TERM_INFO
("m…îm", 
XTERM_TITLE
, (
NEED_XTERM_ON
|
NEED_XTERM_OFF
))},

497 {
W3M_TERM_INFO
("s¸ìn", 
SCREEN_TITLE
, 0)},

498 #ifde‡
__CYGWIN__


499 {
W3M_TERM_INFO
("cygwö", 
CYGWIN_TITLE
, (
NEED_CYGWIN_ON
|
NEED_CYGWIN_OFF
))},

501 {
W3M_TERM_INFO
(
NULL
, NULL, 0)}

503 #unde‡
W3M_TERM_INFO


507 
	$£t_ây
()

509 *
âyn
;

511 i‡(
	`ißây
(0))

512 
âyn
 = 
	`ây«me
(0);

514 
âyn
 = 
DEV_TTY_PATH
;

515 
ây
 = 
	`›í
(
âyn
, 
O_RDWR
);

516 i‡(
ây
 < 0) {

518 
ây
 = 2;

520 
âyf
 = 
	`fd›í
(
ây
, "w");

521 #ifde‡
__CYGWIN__


522 
	`check_cygwö_c⁄sﬁe
();

524 
	`TîmöÆGë
(
ây
, &
d_iovÆ
);

525 i‡(
di•œyTôÀTîm
 !
NULL
) {

526 
w3m_ãrm_öfo
 *
p
;

527 
p
 = 
w3m_ãrm_öfo_li°
;Ö->
ãrm
 !
NULL
;Ö++) {

528 i‡(!
	`°∫cmp
(
di•œyTôÀTîm
, 
p
->
ãrm
, 
	`°æí
(p->term))) {

529 
tôÀ_°r
 = 
p
->title_str;

534 #ifde‡
USE_MOUSE


536 *
ãrm
 = 
	`gëív
("TERM");

537 i‡(
ãrm
 !
NULL
) {

538 
w3m_ãrm_öfo
 *
p
;

539 
p
 = 
w3m_ãrm_öfo_li°
;Ö->
ãrm
 !
NULL
;Ö++) {

540 i‡(!
	`°∫cmp
(
ãrm
, 
p
->ãrm, 
	`°æí
(p->term))) {

541 
is_xãrm
 = 
p
->
mou£_Êag
;

549 
	}
}

552 
	$âymode_£t
(
mode
, 
imode
)

554 #i‚de‡
__MINGW32_VERSION


555 
TîmöÆMode
 
iovÆ
;

557 
	`TîmöÆGë
(
ây
, &
iovÆ
);

558 
	`MODEFLAG
(
iovÆ
Ë|
mode
;

559 #i‚de‡
HAVE_SGTTY_H


560 
	`IMODEFLAG
(
iovÆ
Ë|
imode
;

563 
	`TîmöÆSë
(
ây
, &
iovÆ
) == -1) {

564 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

566 
	`¥ötf
("Eº‹ occuªd whûê£à%x:Éºno=%d\n", 
mode
, 
î∫o
);

567 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

570 
	}
}

573 
	$âymode_ª£t
(
mode
, 
imode
)

575 #i‚de‡
__MINGW32_VERSION


576 
TîmöÆMode
 
iovÆ
;

578 
	`TîmöÆGë
(
ây
, &
iovÆ
);

579 
	`MODEFLAG
(
iovÆ
Ë&~
mode
;

580 #i‚de‡
HAVE_SGTTY_H


581 
	`IMODEFLAG
(
iovÆ
Ë&~
imode
;

584 
	`TîmöÆSë
(
ây
, &
iovÆ
) == -1) {

585 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

587 
	`¥ötf
("Eº‹ occuªd whûêª£à%x:Éºno=%d\n", 
mode
, 
î∫o
);

588 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

591 
	}
}

593 #i‚de‡
HAVE_SGTTY_H


595 
	$£t_cc
(
•ec
, 
vÆ
)

597 
TîmöÆMode
 
iovÆ
;

599 
	`TîmöÆGë
(
ây
, &
iovÆ
);

600 
iovÆ
.
c_cc
[
•ec
] = 
vÆ
;

601 
	`TîmöÆSë
(
ây
, &
iovÆ
) == -1) {

602 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

604 
	`¥ötf
("Eº‹ occuªd:Éºno=%d\n", 
î∫o
);

605 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

607 
	}
}

611 
	$˛o£_ây
()

613 i‡(
ây
 > 2)

614 
	`˛o£
(
ây
);

615 
	}
}

618 
	$ây«me_ây
()

620  
	`ây«me
(
ây
);

621 
	}
}

624 
	$ª£t_ây
()

626 
	`wrôe°r
(
T_›
);

627 
	`wrôe°r
(
T_me
);

628 i‡(!
Do_nŸ_u£_ti_ã
) {

629 i‡(
T_ã
 && *T_te)

630 
	`wrôe°r
(
T_ã
);

632 
	`wrôe°r
(
T_˛
);

634 
	`wrôe°r
(
T_£
);

635 
	`Êush_ây
();

636 
	`TîmöÆSë
(
ây
, &
d_iovÆ
);

637 
	`˛o£_ây
();

638 
	}
}

640 
MySig«lH™dÀr


641 
	$ª£t_exô
(
SIGNAL_ARG
)

643 #ifde‡
USE_MOUSE


644 i‡(
mou£A˘ive
)

645 
	`mou£_íd
();

647 
	`ª£t_ây
();

648 
	`w3m_exô
(0);

649 
SIGNAL_RETURN
;

650 
	}
}

652 
MySig«lH™dÀr


653 
	$îr‹_dump
(
SIGNAL_ARG
)

655 
	`mySig«l
(
SIGIOT
, 
SIG_DFL
);

656 
	`ª£t_ây
();

657 
	`ab‹t
();

658 
SIGNAL_RETURN
;

659 
	}
}

662 
	$£t_öt
()

664 
	`mySig«l
(
SIGHUP
, 
ª£t_exô
);

665 
	`mySig«l
(
SIGINT
, 
ª£t_exô
);

666 
	`mySig«l
(
SIGQUIT
, 
ª£t_exô
);

667 
	`mySig«l
(
SIGTERM
, 
ª£t_exô
);

668 
	`mySig«l
(
SIGILL
, 
îr‹_dump
);

669 
	`mySig«l
(
SIGIOT
, 
îr‹_dump
);

670 
	`mySig«l
(
SIGFPE
, 
îr‹_dump
);

671 #ifdef 
SIGBUS


672 
	`mySig«l
(
SIGBUS
, 
îr‹_dump
);

675 
	}
}

679 
	$£tgøphch¨
()

681 
c
, 
i
, 
n
;

683 
c
 = 0; c < 96; c++)

684 
gcm≠
[
c
] = ()(c + ' ');

686 i‡(!
T_ac
)

689 
n
 = 
	`°æí
(
T_ac
);

690 
i
 = 0; i < 
n
 - 1; i += 2) {

691 
c
 = ()
T_ac
[
i
] - ' ';

692 i‡(
c
 >= 0 && c < 96)

693 
gcm≠
[
c
] = 
T_ac
[
i
 + 1];

695 
	}
}

697 
	#gøphch¨
(
c
Ë((()(c)>=' ' && ()(c)<128)? 
gcm≠
[(c)-' '] : (c))

	)

698 
	#GETSTR
(
v
,
s
Ë{v = 
±
; 
suc
 = 
	`tgë°r
(s,&±); i‡(!sucËv = ""; v = 
	`ÆlocSå
(suc, -1); }

	)

701 
	$gëTC°r
()

703 *
ít
;

704 *
suc
;

705 *
±
 = 
func°r
;

706 
r
;

708 
ít
 = 
	`gëív
("TERM"Ë? gëív("TERM"Ë: 
DEFAULT_TERM
;

709 i‡(
ít
 =
NULL
) {

710 
	`Ârötf
(
°dîr
, "TERM isÇot set\n");

711 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

714 
r
 = 
	`tgëít
(
bp
, 
ít
);

715 i‡(
r
 != 1) {

717 
	`Ârötf
(
°dîr
, "C™'àfödÅîmˇ∞íåy %s\n", 
ít
);

718 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

721 
	`GETSTR
(
T_˚
, "ce");

722 
	`GETSTR
(
T_cd
, "cd");

723 
	`GETSTR
(
T_kr
, "nd");

724 i‡(
suc
 =
NULL
)

725 
	`GETSTR
(
T_kr
, "kr");

726 i‡(
	`tgëÊag
("bs"))

727 
T_kl
 = "\b";

729 
	`GETSTR
(
T_kl
, "le");

730 i‡(
suc
 =
NULL
)

731 
	`GETSTR
(
T_kl
, "kb");

732 i‡(
suc
 =
NULL
)

733 
	`GETSTR
(
T_kl
, "kl");

735 
	`GETSTR
(
T_¸
, "cr");

736 
	`GETSTR
(
T_è
, "ta");

737 
	`GETSTR
(
T_sc
, "sc");

738 
	`GETSTR
(
T_rc
, "rc");

739 
	`GETSTR
(
T_so
, "so");

740 
	`GETSTR
(
T_£
, "se");

741 
	`GETSTR
(
T_us
, "us");

742 
	`GETSTR
(
T_ue
, "ue");

743 
	`GETSTR
(
T_md
, "md");

744 
	`GETSTR
(
T_me
, "me");

745 
	`GETSTR
(
T_˛
, "cl");

746 
	`GETSTR
(
T_cm
, "cm");

747 
	`GETSTR
(
T_Æ
, "al");

748 
	`GETSTR
(
T_§
, "sr");

749 
	`GETSTR
(
T_ti
, "ti");

750 
	`GETSTR
(
T_ã
, "te");

751 
	`GETSTR
(
T_nd
, "nd");

752 
	`GETSTR
(
T_eA
, "eA");

753 
	`GETSTR
(
T_as
, "as");

754 
	`GETSTR
(
T_´
, "ae");

755 
	`GETSTR
(
T_ac
, "ac");

756 
	`GETSTR
(
T_›
, "op");

757 #i‡
	`deföed
–
CYGWIN
 ) && CYGWIN < 1

760 
T_eA
 = "";

761 
T_as
 = "\033[12m";

762 
T_´
 = "\033[10m";

763 
T_ac
 = "l\001k\002m\003j\004x\005q\006n\020a\024v\025w\026u\027t\031";

765 
T_eA
 = "";

766 
T_as
 = "";

767 
T_´
 = "";

768 
T_ac
 = "";

771 
LINES
 = 
COLS
 = 0;

772 
	`£éöescﬁs
();

773 
	`£tgøphch¨
();

774 
	}
}

777 
	$£éöescﬁs
()

779 *
p
;

780 
i
;

781 #ifde‡
__EMX__


783 
s
[2];

784 
	`_s¸size
(
s
);

785 
COLS
 = 
s
[0];

786 
LINES
 = 
s
[1];

788 i‡(
	`gëív
("WINDOWID")) {

789 
FILE
 *
fd
 = 
	`p›í
("scrsize", "rt");

790 i‡(
fd
) {

791 
	`fsˇnf
(
fd
, "%ò%i", &
COLS
, &
LINES
);

792 
	`p˛o£
(
fd
);

796 #ñi‡
	`deföed
(
HAVE_TERMIOS_H
Ë&& deföed(
TIOCGWINSZ
)

797 
wösize
 
wös
;

799 
i
 = 
	`io˘l
(
ây
, 
TIOCGWINSZ
, &
wös
);

800 i‡(
i
 >0 && 
wös
.
ws_row
 !0 && wös.
ws_cﬁ
 != 0) {

801 
LINES
 = 
wös
.
ws_row
;

802 
COLS
 = 
wös
.
ws_cﬁ
;

805 i‡(
LINES
 <0 && (
p
 = 
	`gëív
("LINES")Ë!
NULL
 && (
i
 = 
	`©oi
(p)) >= 0)

806 
LINES
 = 
i
;

807 i‡(
COLS
 <0 && (
p
 = 
	`gëív
("COLUMNS")Ë!
NULL
 && (
i
 = 
	`©oi
(p)) >= 0)

808 
COLS
 = 
i
;

809 i‡(
LINES
 <= 0)

810 
LINES
 = 
	`tgënum
("li");

811 i‡(
COLS
 <= 0)

812 
COLS
 = 
	`tgënum
("co");

813 i‡(
COLS
 > 
MAX_COLUMN
)

814 
COLS
 = 
MAX_COLUMN
;

815 i‡(
LINES
 > 
MAX_LINE
)

816 
LINES
 = 
MAX_LINE
;

817 #i‡
	`deföed
(
__CYGWIN__
)

818 
LASTLINE
 = 
LINES
 - (
isWöC⁄sﬁe
 =
TERM_CYGWIN_RESERVE_IME
 ? 2 : 1);

820 
	}
}

823 
	$£tups¸ìn
()

825 
i
;

827 i‡(
LINES
 + 1 > 
max_LINES
) {

828 
max_LINES
 = 
LINES
 + 1;

829 
max_COLS
 = 0;

830 
S¸ìnEÀm
 = 
	`New_N
(
S¸ìn
, 
max_LINES
);

831 
S¸ìnImage
 = 
	`New_N
(
S¸ìn
 *, 
max_LINES
);

833 i‡(
COLS
 + 1 > 
max_COLS
) {

834 
max_COLS
 = 
COLS
 + 1;

835 
i
 = 0; i < 
max_LINES
; i++) {

836 #ifde‡
USE_M17N


837 
S¸ìnEÀm
[
i
].
löeimage
 = 
	`New_N
(*, 
max_COLS
);

838 
	`bzîo
((*)
S¸ìnEÀm
[
i
].
löeimage
, 
max_COLS
 * (*));

840 
S¸ìnEÀm
[
i
].
löeimage
 = 
	`New_N
(, 
max_COLS
);

842 
S¸ìnEÀm
[
i
].
löïr›
 = 
	`New_N
(
l_¥›
, 
max_COLS
);

845 
i
 = 0; i < 
LINES
; i++) {

846 
S¸ìnImage
[
i
] = &
S¸ìnEÀm
[i];

847 
S¸ìnImage
[
i
]->
löïr›
[0] = 
S_EOL
;

848 
S¸ìnImage
[
i
]->
isdúty
 = 0;

850 ; 
i
 < 
max_LINES
; i++) {

851 
S¸ìnEÀm
[
i
].
isdúty
 = 
L_UNUSED
;

854 
	`˛ór
();

855 
	}
}

861 
	$öôs¸
()

863 i‡(
	`£t_ây
() < 0)

865 
	`£t_öt
();

866 
	`gëTC°r
();

867 i‡(
T_ti
 && !
Do_nŸ_u£_ti_ã
)

868 
	`wrôe°r
(
T_ti
);

869 
	`£tups¸ìn
();

871 
	}
}

874 
	$wrôe1
(
c
)

876 
	`putc
(
c
, 
âyf
);

877 #ifde‡
SCREEN_DEBUG


878 
	`Êush_ây
();

881 
	}
}

884 
	$move
(
löe
, 
cﬁumn
)

886 i‡(
löe
 >0 &&Üöê< 
LINES
)

887 
CurLöe
 = 
löe
;

888 i‡(
cﬁumn
 >0 && cﬁum¿< 
COLS
)

889 
CurCﬁumn
 = 
cﬁumn
;

890 
	}
}

892 #ifde‡
USE_BG_COLOR


893 
	#M_SPACE
 (
S_SCREENPROP
|
S_COLORED
|
S_BCOLORED
|
S_GRAPHICS
)

	)

895 
	#M_SPACE
 (
S_SCREENPROP
|
S_COLORED
|
S_GRAPHICS
)

	)

899 #ifde‡
USE_M17N


900 
	$√ed_ªdøw
(*
c1
, 
l_¥›
 
¥1
, *
c2
,Ü_¥› 
¥2
)

902 i‡(!
c1
 || !
c2
 || 
	`°rcmp
(c1, c2))

904 i‡(*
c1
 == ' ')

906 
	$√ed_ªdøw
(
c1
, 
l_¥›
 
¥1
, 
c2
,Ü_¥› 
¥2
)

908 i‡(
c1
 !
c2
)

910 i‡(
c1
 == ' ')

912  (
¥1
 ^ 
¥2
Ë& 
M_SPACE
 & ~
S_DIRTY
;

914 i‡((
¥1
 ^ 
¥2
Ë& ~
S_DIRTY
)

918 
	}
}

920 
	#M_CEOL
 (~(
M_SPACE
|
C_WHICHCHAR
))

	)

922 #ifde‡
USE_M17N


923 
	#SPACE
 " "

	)

925 
	#SPACE
 ' '

	)

928 #ifde‡
USE_M17N


930 
	$addch
(
c
)

932 
	`addmch
(&
c
, 1);

933 
	}
}

936 
	$addmch
(*
pc
, 
size_t
 
Àn
)

939 
	$addch
(
pc
)

942 
l_¥›
 *
¥
;

943 
de°
, 
i
;

944 *
dúty
;

945 #ifde‡
USE_M17N


946 
Så
 
tmp
 = 
NULL
;

947 **
p
;

948 
c
 = *
pc
;

949 
width
 = 
	`wtf_width
((
wc_uch¨
 *Ë
pc
);

951 i‡(
tmp
 =
NULL
)

952 
tmp
 = 
	`Så√w
();

953 
	`Såc›y_ch¨p_n
(
tmp
, 
pc
, 
Àn
);

954 
pc
 = 
tmp
->
±r
;

956 *
p
;

957 
c
 = 
pc
;

960 i‡(
CurCﬁumn
 =
COLS
)

961 
	`wøp
();

962 i‡(
CurCﬁumn
 >
COLS
)

964 
p
 = 
S¸ìnImage
[
CurLöe
]->
löeimage
;

965 
¥
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

966 
dúty
 = &
S¸ìnImage
[
CurLöe
]->
isdúty
;

968 #i‚de‡
USE_M17N


971 i‡(
	`IS_INTSPACE
(
c
))

972 
c
 = ' ';

975 i‡(
¥
[
CurCﬁumn
] & 
S_EOL
) {

976 i‡(
c
 =' ' && !(
CuºítMode
 & 
M_SPACE
)) {

977 
CurCﬁumn
++;

980 
i
 = 
CurCﬁumn
; i >0 && (
¥
[i] & 
S_EOL
); i--) {

981 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

982 
	`SETPROP
(
¥
[
i
], (¥[i] & 
M_CEOL
Ë| 
C_ASCII
);

986 i‡(
c
 == '\t' || c == '\n' || c == '\r' || c == '\b')

987 
	`SETCHMODE
(
CuºítMode
, 
C_CTRL
);

988 #ifde‡
USE_M17N


989 i‡(
Àn
 > 1)

990 
	`SETCHMODE
(
CuºítMode
, 
C_WCHAR1
);

992 i‡(!
	`IS_CNTRL
(
c
))

993 
	`SETCHMODE
(
CuºítMode
, 
C_ASCII
);

999 #ifde‡
USE_M17N


1000 
i
 = 
CurCﬁumn
 + 
width
 - 1;

1002 
i
 = 
CurCﬁumn
;

1004 i‡(
i
 < 
COLS
 &&

1005 (((
¥
[
i
] & 
S_BOLD
Ë&& 
	`√ed_ªdøw
(
p
[i],Ör[i], 
pc
, 
CuºítMode
)) ||

1006 ((
¥
[
i
] & 
S_UNDERLINE
Ë&& !(
CuºítMode
 & S_UNDERLINE)))) {

1007 
	`touch_löe
();

1008 
i
++;

1009 i‡(
i
 < 
COLS
) {

1010 
	`touch_cﬁumn
(
i
);

1011 i‡(
¥
[
i
] & 
S_EOL
) {

1012 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1013 
	`SETPROP
(
¥
[
i
], (¥[i] & 
M_CEOL
Ë| 
C_ASCII
);

1015 #ifde‡
USE_M17N


1017 
i
++; i < 
COLS
 && 
	`CHMODE
(
¥
[i]Ë=
C_WCHAR2
; i++)

1018 
	`touch_cﬁumn
(
i
);

1024 #ifde‡
USE_M17N


1025 i‡(
CurCﬁumn
 + 
width
 > 
COLS
) {

1026 
	`touch_löe
();

1027 
i
 = 
CurCﬁumn
; i < 
COLS
; i++) {

1028 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1029 
	`SETPROP
(
¥
[
i
], (¥[i] & ~
C_WHICHCHAR
Ë| 
C_ASCII
);

1030 
	`touch_cﬁumn
(
i
);

1032 
	`wøp
();

1033 i‡(
CurCﬁumn
 + 
width
 > 
COLS
)

1035 
p
 = 
S¸ìnImage
[
CurLöe
]->
löeimage
;

1036 
¥
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1038 i‡(
	`CHMODE
(
¥
[
CurCﬁumn
]Ë=
C_WCHAR2
) {

1039 
	`touch_löe
();

1040 
i
 = 
CurCﬁumn
 - 1; i >= 0; i--) {

1041 
l_¥›
 
l
 = 
	`CHMODE
(
¥
[
i
]);

1042 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1043 
	`SETPROP
(
¥
[
i
], (¥[i] & ~
C_WHICHCHAR
Ë| 
C_ASCII
);

1044 
	`touch_cﬁumn
(
i
);

1045 i‡(
l
 !
C_WCHAR2
)

1050 i‡(
	`CHMODE
(
CuºítMode
Ë!
C_CTRL
) {

1051 i‡(
	`√ed_ªdøw
(
p
[
CurCﬁumn
], 
¥
[CurCﬁumn], 
pc
, 
CuºítMode
)) {

1052 
	`SETCH
(
p
[
CurCﬁumn
], 
pc
, 
Àn
);

1053 
	`SETPROP
(
¥
[
CurCﬁumn
], 
CuºítMode
);

1054 
	`touch_löe
();

1055 
	`touch_cﬁumn
(
CurCﬁumn
);

1056 #ifde‡
USE_M17N


1057 
	`SETCHMODE
(
CuºítMode
, 
C_WCHAR2
);

1058 
i
 = 
CurCﬁumn
 + 1; i < CurCﬁum¿+ 
width
; i++) {

1059 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1060 
	`SETPROP
(
¥
[
i
], (¥[
CurCﬁumn
] & ~
C_WHICHCHAR
Ë| 
C_WCHAR2
);

1061 
	`touch_cﬁumn
(
i
);

1063 ; 
i
 < 
COLS
 && 
	`CHMODE
(
¥
[i]Ë=
C_WCHAR2
; i++) {

1064 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1065 
	`SETPROP
(
¥
[
i
], (¥[i] & ~
C_WHICHCHAR
Ë| 
C_ASCII
);

1066 
	`touch_cﬁumn
(
i
);

1069 
CurCﬁumn
 +
width
;

1072 
CurCﬁumn
++;

1075 i‡(
c
 == '\t') {

1076 
de°
 = (
CurCﬁumn
 + 
èb_°ï
) /Åab_step *Åab_step;

1077 i‡(
de°
 >
COLS
) {

1078 
	`wøp
();

1079 
	`touch_löe
();

1080 
de°
 = 
èb_°ï
;

1081 
p
 = 
S¸ìnImage
[
CurLöe
]->
löeimage
;

1082 
¥
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1084 
i
 = 
CurCﬁumn
; i < 
de°
; i++) {

1085 i‡(
	`√ed_ªdøw
(
p
[
i
], 
¥
[i], 
SPACE
, 
CuºítMode
)) {

1086 
	`SETCH
(
p
[
i
], 
SPACE
, 1);

1087 
	`SETPROP
(
¥
[
i
], 
CuºítMode
);

1088 
	`touch_löe
();

1089 
	`touch_cﬁumn
(
i
);

1092 
CurCﬁumn
 = 
i
;

1094 i‡(
c
 == '\n') {

1095 
	`wøp
();

1097 i‡(
c
 == '\r') {

1098 
CurCﬁumn
 = 0;

1100 i‡(
c
 ='\b' && 
CurCﬁumn
 > 0) {

1101 
CurCﬁumn
--;

1102 #ifde‡
USE_M17N


1103 
CurCﬁumn
 > 0 && 
	`CHMODE
(
¥
[CurCﬁumn]Ë=
C_WCHAR2
)

1104 
CurCﬁumn
--;

1107 
	}
}

1110 
	$wøp
()

1112 i‡(
CurLöe
 =
LASTLINE
)

1114 
CurLöe
++;

1115 
CurCﬁumn
 = 0;

1116 
	}
}

1119 
	$touch_cﬁumn
(
cﬁ
)

1121 i‡(
cﬁ
 >0 && cﬁ < 
COLS
)

1122 
S¸ìnImage
[
CurLöe
]->
löïr›
[
cﬁ
] |
S_DIRTY
;

1123 
	}
}

1126 
	$touch_löe
()

1128 i‡(!(
S¸ìnImage
[
CurLöe
]->
isdúty
 & 
L_DIRTY
)) {

1129 
i
;

1130 
i
 = 0; i < 
COLS
; i++)

1131 
S¸ìnImage
[
CurLöe
]->
löïr›
[
i
] &~
S_DIRTY
;

1132 
S¸ìnImage
[
CurLöe
]->
isdúty
 |
L_DIRTY
;

1135 
	}
}

1138 
	$°™dout
()

1140 
CuºítMode
 |
S_STANDOUT
;

1141 
	}
}

1144 
	$°™díd
()

1146 
CuºítMode
 &~
S_STANDOUT
;

1147 
	}
}

1150 
	$toggÀ_°™d
()

1152 #ifde‡
USE_M17N


1153 
i
;

1155 
l_¥›
 *
¥
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1156 
¥
[
CurCﬁumn
] ^
S_STANDOUT
;

1157 #ifde‡
USE_M17N


1158 i‡(
	`CHMODE
(
¥
[
CurCﬁumn
]Ë!
C_WCHAR2
) {

1159 
i
 = 
CurCﬁumn
 + 1; 
	`CHMODE
(
¥
[i]Ë=
C_WCHAR2
; i++)

1160 
¥
[
i
] ^
S_STANDOUT
;

1163 
	}
}

1166 
	$bﬁd
()

1168 
CuºítMode
 |
S_BOLD
;

1169 
	}
}

1172 
	$bﬁdíd
()

1174 
CuºítMode
 &~
S_BOLD
;

1175 
	}
}

1178 
	$undîlöe
()

1180 
CuºítMode
 |
S_UNDERLINE
;

1181 
	}
}

1184 
	$undîlöìnd
()

1186 
CuºítMode
 &~
S_UNDERLINE
;

1187 
	}
}

1190 
	$gøph°¨t
()

1192 
CuºítMode
 |
S_GRAPHICS
;

1193 
	}
}

1196 
	$gøphíd
()

1198 
CuºítMode
 &~
S_GRAPHICS
;

1199 
	}
}

1202 
	$gøph_ok
()

1204 i‡(!
U£GøphicCh¨
)

1206  
T_as
[0] !0 && 
T_´
[0] !0 && 
T_ac
[0] != 0;

1207 
	}
}

1210 
	$£tfcﬁ‹
(
cﬁ‹
)

1212 
CuºítMode
 &~
COL_FCOLOR
;

1213 i‡((
cﬁ‹
 & 0xf) <= 7)

1214 
CuºítMode
 |(((
cﬁ‹
 & 7) | 8) << 8);

1215 
	}
}

1218 
	$cﬁ‹_£q
(
cﬁmode
)

1220 
£qbuf
[32];

1221 
	`•rötf
(
£qbuf
, "\033[%dm", ((
cﬁmode
 >> 8) & 7) + 30);

1222  
£qbuf
;

1223 
	}
}

1225 #ifde‡
USE_BG_COLOR


1227 
	$£tbcﬁ‹
(
cﬁ‹
)

1229 
CuºítMode
 &~
COL_BCOLOR
;

1230 i‡((
cﬁ‹
 & 0xf) <= 7)

1231 
CuºítMode
 |(((
cﬁ‹
 & 7) | 8) << 12);

1232 
	}
}

1235 
	$bcﬁ‹_£q
(
cﬁmode
)

1237 
£qbuf
[32];

1238 
	`•rötf
(
£qbuf
, "\033[%dm", ((
cﬁmode
 >> 12) & 7) + 40);

1239  
£qbuf
;

1240 
	}
}

1243 
	#RF_NEED_TO_MOVE
 0

	)

1244 
	#RF_CR_OK
 1

	)

1245 
	#RF_NONEED_TO_MOVE
 2

	)

1246 #ifde‡
USE_BG_COLOR


1247 
	#M_MEND
 (
S_STANDOUT
|
S_UNDERLINE
|
S_BOLD
|
S_COLORED
|
S_BCOLORED
|
S_GRAPHICS
)

	)

1249 
	#M_MEND
 (
S_STANDOUT
|
S_UNDERLINE
|
S_BOLD
|
S_COLORED
|
S_GRAPHICS
)

	)

1252 
	$ª‰esh
()

1254 
löe
, 
cﬁ
, 
pcﬁ
;

1255 
∂öe
 = 
CurLöe
;

1256 
moved
 = 
RF_NEED_TO_MOVE
;

1257 #ifde‡
USE_M17N


1258 **
pc
;

1260 *
pc
;

1262 
l_¥›
 *
¥
, 
mode
 = 0;

1263 
l_¥›
 
cﬁ‹
 = 
COL_FTERM
;

1264 #ifde‡
USE_BG_COLOR


1265 
l_¥›
 
bcﬁ‹
 = 
COL_BTERM
;

1267 *
dúty
;

1269 #ifde‡
USE_M17N


1270 
	`wc_putc_öô
(
I¬îCh¨£t
, 
Di•œyCh¨£t
);

1272 
löe
 = 0;Üöê<
LASTLINE
;Üine++) {

1273 
dúty
 = &
S¸ìnImage
[
löe
]->
isdúty
;

1274 i‡(*
dúty
 & 
L_DIRTY
) {

1275 *
dúty
 &~
L_DIRTY
;

1276 
pc
 = 
S¸ìnImage
[
löe
]->
löeimage
;

1277 
¥
 = 
S¸ìnImage
[
löe
]->
löïr›
;

1278 
cﬁ
 = 0; cﬁ < 
COLS
 && !(
¥
[cﬁ] & 
S_EOL
); col++) {

1279 i‡(*
dúty
 & 
L_NEED_CE
 && 
cﬁ
 >
S¸ìnImage
[
löe
]->
eﬁ
) {

1280 i‡(
	`√ed_ªdøw
(
pc
[
cﬁ
], 
¥
[cﬁ], 
SPACE
, 0))

1284 i‡(
¥
[
cﬁ
] & 
S_DIRTY
)

1288 i‡(*
dúty
 & (
L_NEED_CE
 | 
L_CLRTOEOL
)) {

1289 
pcﬁ
 = 
S¸ìnImage
[
löe
]->
eﬁ
;

1290 i‡(
pcﬁ
 >
COLS
) {

1291 *
dúty
 &~(
L_NEED_CE
 | 
L_CLRTOEOL
);

1292 
pcﬁ
 = 
cﬁ
;

1296 
pcﬁ
 = 
cﬁ
;

1298 i‡(
löe
 < 
LINES
 - 2 && 
∂öe
 =löê- 1 && 
pcﬁ
 == 0) {

1299 
moved
) {

1300 
RF_NEED_TO_MOVE
:

1301 
	`MOVE
(
löe
, 0);

1302 
moved
 = 
RF_CR_OK
;

1304 
RF_CR_OK
:

1305 
	`wrôe1
('\n');

1306 
	`wrôe1
('\r');

1308 
RF_NONEED_TO_MOVE
:

1309 
moved
 = 
RF_CR_OK
;

1314 
	`MOVE
(
löe
, 
pcﬁ
);

1315 
moved
 = 
RF_CR_OK
;

1317 i‡(*
dúty
 & (
L_NEED_CE
 | 
L_CLRTOEOL
)) {

1318 
	`wrôe°r
(
T_˚
);

1319 i‡(
cﬁ
 !
pcﬁ
)

1320 
	`MOVE
(
löe
, 
cﬁ
);

1322 
∂öe
 = 
löe
;

1323 
pcﬁ
 = 
cﬁ
;

1324 ; 
cﬁ
 < 
COLS
; col++) {

1325 i‡(
¥
[
cﬁ
] & 
S_EOL
)

1338 #i‡!
	`deföed
(
USE_BG_COLOR
Ë|| deföed(
__CYGWIN__
)

1339 #ifde‡
__CYGWIN__


1340 i‡(
isWöC⁄sﬁe
)

1342 i‡(
löe
 =
LINES
 - 1 && 
cﬁ
 =
COLS
 - 1)

1345 i‡((!(
¥
[
cﬁ
] & 
S_STANDOUT
Ë&& (
mode
 & S_STANDOUT)) ||

1346 (!(
¥
[
cﬁ
] & 
S_UNDERLINE
Ë&& (
mode
 & S_UNDERLINE)) ||

1347 (!(
¥
[
cﬁ
] & 
S_BOLD
Ë&& (
mode
 & S_BOLD)) ||

1348 (!(
¥
[
cﬁ
] & 
S_COLORED
Ë&& (
mode
 & S_COLORED))

1349 #ifde‡
USE_BG_COLOR


1350 || (!(
¥
[
cﬁ
] & 
S_BCOLORED
Ë&& (
mode
 & S_BCOLORED))

1352 || (!(
¥
[
cﬁ
] & 
S_GRAPHICS
Ë&& (
mode
 & S_GRAPHICS))) {

1353 i‡((
mode
 & 
S_COLORED
)

1354 #ifde‡
USE_BG_COLOR


1355 || (
mode
 & 
S_BCOLORED
)

1358 
	`wrôe°r
(
T_›
);

1359 i‡(
mode
 & 
S_GRAPHICS
)

1360 
	`wrôe°r
(
T_´
);

1361 
	`wrôe°r
(
T_me
);

1362 
mode
 &~
M_MEND
;

1364 i‡((*
dúty
 & 
L_NEED_CE
 && 
cﬁ
 >
S¸ìnImage
[
löe
]->
eﬁ
) ?

1365 
	`√ed_ªdøw
(
pc
[
cﬁ
], 
¥
[cﬁ], 
SPACE
,

1366 0Ë: (
¥
[
cﬁ
] & 
S_DIRTY
)) {

1367 i‡(
pcﬁ
 =
cﬁ
 - 1)

1368 
	`wrôe°r
(
T_nd
);

1369 i‡(
pcﬁ
 !
cﬁ
)

1370 
	`MOVE
(
löe
, 
cﬁ
);

1372 i‡((
¥
[
cﬁ
] & 
S_STANDOUT
Ë&& !(
mode
 & S_STANDOUT)) {

1373 
	`wrôe°r
(
T_so
);

1374 
mode
 |
S_STANDOUT
;

1376 i‡((
¥
[
cﬁ
] & 
S_UNDERLINE
Ë&& !(
mode
 & S_UNDERLINE)) {

1377 
	`wrôe°r
(
T_us
);

1378 
mode
 |
S_UNDERLINE
;

1380 i‡((
¥
[
cﬁ
] & 
S_BOLD
Ë&& !(
mode
 & S_BOLD)) {

1381 
	`wrôe°r
(
T_md
);

1382 
mode
 |
S_BOLD
;

1384 i‡((
¥
[
cﬁ
] & 
S_COLORED
Ë&& (¥[cﬁ] ^ 
mode
Ë& 
COL_FCOLOR
) {

1385 
cﬁ‹
 = (
¥
[
cﬁ
] & 
COL_FCOLOR
);

1386 
mode
 = ((modê& ~
COL_FCOLOR
Ë| 
cﬁ‹
);

1387 
	`wrôe°r
(
	`cﬁ‹_£q
(
cﬁ‹
));

1389 #ifde‡
USE_BG_COLOR


1390 i‡((
¥
[
cﬁ
] & 
S_BCOLORED
)

1391 && (
¥
[
cﬁ
] ^ 
mode
Ë& 
COL_BCOLOR
) {

1392 
bcﬁ‹
 = (
¥
[
cﬁ
] & 
COL_BCOLOR
);

1393 
mode
 = ((modê& ~
COL_BCOLOR
Ë| 
bcﬁ‹
);

1394 
	`wrôe°r
(
	`bcﬁ‹_£q
(
bcﬁ‹
));

1397 i‡((
¥
[
cﬁ
] & 
S_GRAPHICS
Ë&& !(
mode
 & S_GRAPHICS)) {

1398 #ifde‡
USE_M17N


1399 
	`wc_putc_íd
(
âyf
);

1401 i‡(!
gøph_íabÀd
) {

1402 
gøph_íabÀd
 = 1;

1403 
	`wrôe°r
(
T_eA
);

1405 
	`wrôe°r
(
T_as
);

1406 
mode
 |
S_GRAPHICS
;

1408 #ifde‡
USE_M17N


1409 i‡(
¥
[
cﬁ
] & 
S_GRAPHICS
)

1410 
	`wrôe1
(
	`gøphch¨
(*
pc
[
cﬁ
]));

1411 i‡(
	`CHMODE
(
¥
[
cﬁ
]Ë!
C_WCHAR2
)

1412 
	`wc_putc
(
pc
[
cﬁ
], 
âyf
);

1414 
	`wrôe1
((
¥
[
cﬁ
] & 
S_GRAPHICS
Ë? 
	`gøphch¨
(
pc
[col]) :

1415 
pc
[
cﬁ
]);

1417 
pcﬁ
 = 
cﬁ
 + 1;

1420 i‡(
cﬁ
 =
COLS
)

1421 
moved
 = 
RF_NEED_TO_MOVE
;

1422 ; 
cﬁ
 < 
COLS
 && !(
¥
[cﬁ] & 
S_EOL
); col++)

1423 
¥
[
cﬁ
] |
S_EOL
;

1425 *
dúty
 &~(
L_NEED_CE
 | 
L_CLRTOEOL
);

1426 i‡(
mode
 & 
M_MEND
) {

1427 i‡(
mode
 & (
S_COLORED


1428 #ifde‡
USE_BG_COLOR


1429 | 
S_BCOLORED


1432 
	`wrôe°r
(
T_›
);

1433 i‡(
mode
 & 
S_GRAPHICS
) {

1434 
	`wrôe°r
(
T_´
);

1435 #ifde‡
USE_M17N


1436 
	`wc_putc_˛ór_°©us
();

1439 
	`wrôe°r
(
T_me
);

1440 
mode
 &~
M_MEND
;

1443 #ifde‡
USE_M17N


1444 
	`wc_putc_íd
(
âyf
);

1446 
	`MOVE
(
CurLöe
, 
CurCﬁumn
);

1447 
	`Êush_ây
();

1448 
	}
}

1451 
	$˛ór
()

1453 
i
, 
j
;

1454 
l_¥›
 *
p
;

1455 
	`wrôe°r
(
T_˛
);

1456 
	`move
(0, 0);

1457 
i
 = 0; i < 
LINES
; i++) {

1458 
S¸ìnImage
[
i
]->
isdúty
 = 0;

1459 
p
 = 
S¸ìnImage
[
i
]->
löïr›
;

1460 
j
 = 0; j < 
COLS
; j++) {

1461 
p
[
j
] = 
S_EOL
;

1464 
CuºítMode
 = 
C_ASCII
;

1465 
	}
}

1467 #ifde‡
USE_RAW_SCROLL


1469 
	$s¸ﬁl_øw
()

1471 
	`MOVE
(
LINES
 - 1, 0);

1472 
	`wrôe1
('\n');

1473 
	}
}

1476 
	$s¸ﬁl
(
n
)

1478 
˛i
 = 
CurLöe
, 
cco
 = 
CurCﬁumn
;

1479 
S¸ìn
 *
t
;

1480 
i
, 
j
, 
k
;

1482 
i
 = 
LINES
;

1483 
j
 = 
n
;

1485 
k
 = 
j
;

1486 
j
 = 
i
 % 
k
;

1487 
i
 = 
k
;

1488 } 
j
);

1490 
k
--;

1491 
i
 = 
k
;

1492 
j
 = (
i
 + 
n
Ë% 
LINES
;

1493 
t
 = 
S¸ìnImage
[
k
];

1494 
j
 !
k
) {

1495 
S¸ìnImage
[
i
] = S¸ìnImage[
j
];

1496 
i
 = 
j
;

1497 
j
 = (
i
 + 
n
Ë% 
LINES
;

1499 
S¸ìnImage
[
i
] = 
t
;

1500 } 
k
);

1502 
i
 = 0; i < 
n
; i++) {

1503 
t
 = 
S¸ìnImage
[
LINES
 - 1 - 
i
];

1504 
t
->
isdúty
 = 0;

1505 
j
 = 0; j < 
COLS
; j++)

1506 
t
->
löïr›
[
j
] = 
S_EOL
;

1507 
	`s¸ﬁl_øw
();

1509 
	`move
(
˛i
, 
cco
);

1510 
	}
}

1513 
	$rs¸ﬁl
(
n
)

1515 
˛i
 = 
CurLöe
, 
cco
 = 
CurCﬁumn
;

1516 
S¸ìn
 *
t
;

1517 
i
, 
j
, 
k
;

1519 
i
 = 
LINES
;

1520 
j
 = 
n
;

1522 
k
 = 
j
;

1523 
j
 = 
i
 % 
k
;

1524 
i
 = 
k
;

1525 } 
j
);

1527 
k
--;

1528 
i
 = 
k
;

1529 
j
 = (
LINES
 + 
i
 - 
n
) % LINES;

1530 
t
 = 
S¸ìnImage
[
k
];

1531 
j
 !
k
) {

1532 
S¸ìnImage
[
i
] = S¸ìnImage[
j
];

1533 
i
 = 
j
;

1534 
j
 = (
LINES
 + 
i
 - 
n
) % LINES;

1536 
S¸ìnImage
[
i
] = 
t
;

1537 } 
k
);

1538 i‡(
T_§
 && *T_sr) {

1539 
	`MOVE
(0, 0);

1540 
i
 = 0; i < 
n
; i++) {

1541 
t
 = 
S¸ìnImage
[
i
];

1542 
t
->
isdúty
 = 0;

1543 
j
 = 0; j < 
COLS
; j++)

1544 
t
->
löïr›
[
j
] = 
S_EOL
;

1545 
	`wrôe°r
(
T_§
);

1547 
	`move
(
˛i
, 
cco
);

1550 
i
 = 0; i < 
LINES
; i++) {

1551 
t
 = 
S¸ìnImage
[
i
];

1552 
t
->
isdúty
 |
L_DIRTY
 | 
L_NEED_CE
;

1553 
j
 = 0; j < 
COLS
; j++) {

1554 
t
->
löïr›
[
j
] |
S_DIRTY
;

1558 
	}
}

1563 
	$√ed_˛π€ﬁ
()

1566 
l_¥›
 *
Õr›
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1568 i‡(
Õr›
[
CurCﬁumn
] & 
S_EOL
)

1571 i‡(!(
S¸ìnImage
[
CurLöe
]->
isdúty
 & (
L_NEED_CE
 | 
L_CLRTOEOL
)) ||

1572 
S¸ìnImage
[
CurLöe
]->
eﬁ
 > 
CurCﬁumn
)

1573 
S¸ìnImage
[
CurLöe
]->
eﬁ
 = 
CurCﬁumn
;

1575 
S¸ìnImage
[
CurLöe
]->
isdúty
 |
L_NEED_CE
;

1576 
	}
}

1581 
	$˛π€ﬁ
()

1583 
i
;

1584 
l_¥›
 *
Õr›
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1586 i‡(
Õr›
[
CurCﬁumn
] & 
S_EOL
)

1589 i‡(!(
S¸ìnImage
[
CurLöe
]->
isdúty
 & (
L_NEED_CE
 | 
L_CLRTOEOL
)) ||

1590 
S¸ìnImage
[
CurLöe
]->
eﬁ
 > 
CurCﬁumn
)

1591 
S¸ìnImage
[
CurLöe
]->
eﬁ
 = 
CurCﬁumn
;

1593 
S¸ìnImage
[
CurLöe
]->
isdúty
 |
L_CLRTOEOL
;

1594 
	`touch_löe
();

1595 
i
 = 
CurCﬁumn
; i < 
COLS
 && !(
Õr›
[i] & 
S_EOL
); i++) {

1596 
Õr›
[
i
] = 
S_EOL
 | 
S_DIRTY
;

1598 
	}
}

1600 #ifde‡
USE_BG_COLOR


1602 
	$˛π€ﬁ_wôh_bcﬁ‹
()

1604 
i
, 
˛i
, 
cco
;

1605 
l_¥›
 
¥
;

1607 i‡(!(
CuºítMode
 & 
S_BCOLORED
)) {

1608 
	`˛π€ﬁ
();

1611 
˛i
 = 
CurLöe
;

1612 
cco
 = 
CurCﬁumn
;

1613 
¥
 = 
CuºítMode
;

1614 
CuºítMode
 = (CuºítModê& (
M_CEOL
 | 
S_BCOLORED
)Ë| 
C_ASCII
;

1615 
i
 = 
CurCﬁumn
; i < 
COLS
; i++)

1616 
	`addch
(' ');

1617 
	`move
(
˛i
, 
cco
);

1618 
CuºítMode
 = 
¥
;

1619 
	}
}

1622 
	$˛π€ﬁx
()

1624 
	`˛π€ﬁ_wôh_bcﬁ‹
();

1625 
	}
}

1629 
	$˛π€ﬁx
()

1631 
	`˛π€ﬁ
();

1632 
	}
}

1636 
˛πobŸ_eﬁ
((*
˛π€ﬁ
) ())

1638 
l
, 
c
;

1640 
l
 = 
CurLöe
;

1641 
c
 = 
CurCﬁumn
;

1642 (*
˛π€ﬁ
) ();

1643 
CurCﬁumn
 = 0;

1644 
CurLöe
++;

1645 ; 
CurLöe
 < 
LINES
; CurLine++)

1646 (*
˛π€ﬁ
) ();

1647 
CurLöe
 = 
l
;

1648 
CurCﬁumn
 = 
c
;

1649 
	}
}

1652 
	$˛πobŸ
()

1654 
	`˛πobŸ_eﬁ
(
˛π€ﬁ
);

1655 
	}
}

1658 
	$˛πobŸx
()

1660 
	`˛πobŸ_eﬁ
(
˛π€ﬁx
);

1661 
	}
}

1665 
	$no_˛π€ﬁ
()

1667 
i
;

1668 
l_¥›
 *
Õr›
 = 
S¸ìnImage
[
CurLöe
]->
löïr›
;

1670 
S¸ìnImage
[
CurLöe
]->
isdúty
 &~
L_CLRTOEOL
;

1671 
	}
}

1675 
	$add°r
(*
s
)

1677 #ifde‡
USE_M17N


1678 
Àn
;

1680 *
s
 != '\0') {

1681 
Àn
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë
s
);

1682 
	`addmch
(
s
, 
Àn
);

1683 
s
 +
Àn
;

1686 *
s
 != '\0')

1687 
	`addch
(*(
s
++));

1689 
	}
}

1692 
	$addn°r
(*
s
, 
n
)

1694 
i
;

1695 #ifde‡
USE_M17N


1696 
Àn
, 
width
;

1698 
i
 = 0; *
s
 != '\0';) {

1699 
width
 = 
	`wtf_width
((
wc_uch¨
 *Ë
s
);

1700 i‡(
i
 + 
width
 > 
n
)

1702 
Àn
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë
s
);

1703 
	`addmch
(
s
, 
Àn
);

1704 
s
 +
Àn
;

1705 
i
 +
width
;

1708 
i
 = 0; i < 
n
 && *
s
 != '\0'; i++)

1709 
	`addch
(*(
s
++));

1711 
	}
}

1714 
	$addn°r_sup
(*
s
, 
n
)

1716 
i
;

1717 #ifde‡
USE_M17N


1718 
Àn
, 
width
;

1720 
i
 = 0; *
s
 != '\0';) {

1721 
width
 = 
	`wtf_width
((
wc_uch¨
 *Ë
s
);

1722 i‡(
i
 + 
width
 > 
n
)

1724 
Àn
 = 
	`wtf_Àn
((
wc_uch¨
 *Ë
s
);

1725 
	`addmch
(
s
, 
Àn
);

1726 
s
 +
Àn
;

1727 
i
 +
width
;

1730 
i
 = 0; i < 
n
 && *
s
 != '\0'; i++)

1731 
	`addch
(*(
s
++));

1733 ; 
i
 < 
n
; i++)

1734 
	`addch
(' ');

1735 
	}
}

1738 
	$¸mode
()

1739 #i‚de‡
HAVE_SGTTY_H


1741 
	`âymode_ª£t
(
ICANON
, 
IXON
);

1742 
	`âymode_£t
(
ISIG
, 0);

1743 #ifde‡
HAVE_TERMIOS_H


1744 
	`£t_cc
(
VMIN
, 1);

1746 
	`£t_cc
(
VEOF
, 1);

1748 
	}
}

1751 
âymode_£t
(
CBREAK
, 0);

1756 
	$no¸mode
()

1757 #i‚de‡
HAVE_SGTTY_H


1759 
	`âymode_£t
(
ICANON
, 0);

1760 #ifde‡
HAVE_TERMIOS_H


1761 
	`£t_cc
(
VMIN
, 4);

1763 
	`£t_cc
(
VEOF
, 4);

1765 
	}
}

1768 
âymode_ª£t
(
CBREAK
, 0);

1773 
	$ãrm_echo
()

1775 
	`âymode_£t
(
ECHO
, 0);

1776 
	}
}

1779 
	$ãrm_n€cho
()

1781 
	`âymode_ª£t
(
ECHO
, 0);

1782 
	}
}

1785 
	$ãrm_øw
()

1786 #i‚de‡
HAVE_SGTTY_H


1787 #ifde‡
IEXTEN


1788 
	#TTY_MODE
 
ISIG
|
ICANON
|
ECHO
|
IEXTEN


	)

1790 
	#TTY_MODE
 
ISIG
|
ICANON
|
ECHO


	)

1793 
	`âymode_ª£t
(
TTY_MODE
, 
IXON
 | 
IXOFF
);

1794 #ifde‡
HAVE_TERMIOS_H


1795 
	`£t_cc
(
VMIN
, 1);

1797 
	`£t_cc
(
VEOF
, 1);

1799 
	}
}

1802 
âymode_£t
(
RAW
, 0);

1807 
	$ãrm_cooked
()

1808 #i‚de‡
HAVE_SGTTY_H


1810 #ifde‡
__EMX__


1814 
	`âymode_£t
((
TTY_MODE
Ë& ~
IEXTEN
, 0);

1816 
	`âymode_£t
(
TTY_MODE
, 0);

1818 #ifde‡
HAVE_TERMIOS_H


1819 
	`£t_cc
(
VMIN
, 4);

1821 
	`£t_cc
(
VEOF
, 4);

1823 
	}
}

1826 
âymode_ª£t
(
RAW
, 0);

1831 
	$ãrm_cbªak
()

1833 
	`ãrm_cooked
();

1834 
	`ãrm_n€cho
();

1835 
	}
}

1838 
	$ãrm_tôÀ
(*
s
)

1840 i‡(!
fmInôülized
)

1842 i‡(
tôÀ_°r
 !
NULL
) {

1843 #ifde‡
__CYGWIN__


1844 i‡(
isLoˇlC⁄sﬁe
 && 
tôÀ_°r
 =
CYGWIN_TITLE
) {

1845 
Så
 
buff
;

1846 
buff
 = 
	`S¥ötf
(
tôÀ_°r
, 
s
);

1847 i‡(
buff
->
Àngth
 > 1024) {

1848 
	`Sååunˇã
(
buff
, 1024);

1850 
	`SëC⁄sﬁeTôÀ
(
buff
->
±r
);

1852 i‡(
isLoˇlC⁄sﬁe
 || !
isWöC⁄sﬁe
)

1854 
	`Ârötf
(
âyf
, 
tôÀ_°r
, 
s
);

1856 
	}
}

1859 
	$gëch
()

1861 
c
;

1864 #ifde‡
SUPPORT_WIN9X_CONSOLE_MBCS


1865 
	`ªad_wö32_c⁄sﬁe
(&
c
, 1)

1867 
	`ªad
(
ây
, &
c
, 1)

1870 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

1873 
	`quôfm
();

1876  
c
;

1877 
	}
}

1879 #ifde‡
USE_MOUSE


1880 #ifde‡
USE_GPM


1882 
	$wgëch
(*
p
)

1884 
c
;

1887 
	`ªad
(
ây
, &
c
, 1Ë< (
ssize_t
) 1) {

1888 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
)

1891 
	`quôfm
();

1894  
c
;

1895 
	}
}

1898 
	$do_gëch
()

1900 i‡(
is_xãrm
)

1901  
	`gëch
();

1903  
	`Gpm_Gëch
();

1904 
	}
}

1907 #ifde‡
USE_SYSMOUSE


1909 
	$sysm_gëch
()

1911 
fd_£t
 
rfd
;

1912 
key
, 
x
, 
y
;

1914 
	`FD_ZERO
(&
rfd
);

1915 
	`FD_SET
(
ây
, &
rfd
);

1916 
	`£À˘
(
ây
 + 1, &
rfd
, 
NULL
, NULL, NULL) <= 0) {

1917 i‡(
î∫o
 =
EINTR
) {

1918 
x
 = 
xpix
 / 
cwidth
;

1919 
y
 = 
ypix
 / 
cheight
;

1920 
key
 = (*
sysm_h™dÀr
Ë(
x
, 
y
, 
nbs
, 
obs
);

1921 i‡(
key
 != 0)

1922  
key
;

1925  
	`gëch
();

1926 
	}
}

1929 
	$do_gëch
()

1931 i‡(
is_xãrm
 || !
sysm_h™dÀr
)

1932  
	`gëch
();

1934  
	`sysm_gëch
();

1935 
	}
}

1937 
MySig«lH™dÀr


1938 
	$sysmou£
(
SIGNAL_ARG
)

1940 
mou£_öfo
 
mi
;

1942 
mi
.
›î©i⁄
 = 
MOUSE_GETINFO
;

1943 i‡(
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
) == -1)

1945 
xpix
 = 
mi
.
u
.
d©a
.
x
;

1946 
ypix
 = 
mi
.
u
.
d©a
.
y
;

1947 
obs
 = 
nbs
;

1948 
nbs
 = 
mi
.
u
.
d©a
.
buâ⁄s
 & 0x7;

1950 
mi
.
›î©i⁄
 = 
MOUSE_HIDE
;

1951 
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
);

1952 
mi
.
›î©i⁄
 = 
MOUSE_SHOW
;

1953 
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
);

1954 
	}
}

1959 
	$bñl
()

1961 
	`wrôe1
(7);

1962 
	}
}

1965 
	$skù_esc£q
()

1967 
c
;

1969 
c
 = 
	`gëch
();

1970 i‡(
c
 == '[' || c == 'O') {

1971 
c
 = 
	`gëch
();

1972 #ifde‡
USE_MOUSE


1973 i‡(
is_xãrm
 && 
c
 == 'M') {

1974 
	`gëch
();

1975 
	`gëch
();

1976 
	`gëch
();

1980 
	`IS_DIGIT
(
c
))

1981 
c
 = 
	`gëch
();

1983 
	}
}

1986 
	$¶ìp_tûl_™ykey
(
£c
, 
purge
)

1988 
fd_£t
 
rfd
;

1989 
timevÆ
 
tim
;

1990 
î
, 
c
, 
ªt
;

1991 
TîmöÆMode
 
iovÆ
;

1993 
	`TîmöÆGë
(
ây
, &
iovÆ
);

1994 
	`ãrm_øw
();

1996 
tim
.
tv_£c
 = 
£c
;

1997 
tim
.
tv_u£c
 = 0;

1999 
	`FD_ZERO
(&
rfd
);

2000 
	`FD_SET
(
ây
, &
rfd
);

2002 
ªt
 = 
	`£À˘
(
ây
 + 1, &
rfd
, 0, 0, &
tim
);

2003 i‡(
ªt
 > 0 && 
purge
) {

2004 
c
 = 
	`gëch
();

2005 i‡(
c
 =
ESC_CODE
)

2006 
	`skù_esc£q
();

2008 
î
 = 
	`TîmöÆSë
(
ây
, &
iovÆ
);

2009 i‡(
î
 == -1) {

2010 
	`¥ötf
("Eº‹ occuªd:Éºno=%d\n", 
î∫o
);

2011 
	`ª£t_exô
(
SIGNAL_ARGLIST
);

2013  
ªt
;

2014 
	}
}

2016 #ifde‡
USE_MOUSE


2018 
	#XTERM_ON
 {
	`Âuts
("\033[?1001s\033[?1000h",
âyf
); 
	`Êush_ây
();}

	)

2019 
	#XTERM_OFF
 {
	`Âuts
("\033[?1000l\033[?1001r",
âyf
); 
	`Êush_ây
();}

	)

2020 
	#CYGWIN_ON
 {
	`Âuts
("\033[?1000h",
âyf
); 
	`Êush_ây
();}

	)

2021 
	#CYGWIN_OFF
 {
	`Âuts
("\033[?1000l",
âyf
); 
	`Êush_ây
();}

	)

2023 #ifde‡
USE_GPM


2027 
	$mou£_öô
()

2029 
Gpm_C⁄√˘
 
c⁄n
;

2030 
	`gpm_¥o˚ss_mou£
(
Gpm_Evít
 *, *);

2031 
r
;

2033 i‡(
mou£A˘ive
)

2035 
c⁄n
.
evítMask
 = ~0;

2036 
c⁄n
.
deÁu…Mask
 = 0;

2037 
c⁄n
.
maxMod
 = 0;

2038 
c⁄n
.
möMod
 = 0;

2040 
r
 = 
	`Gpm_O≥n
(&
c⁄n
, 0);

2041 i‡(
r
 == -2) {

2049 
	`Gpm_Clo£
();

2050 
is_xãrm
 = (
NEED_XTERM_ON
 | 
NEED_XTERM_OFF
);

2052 i‡(
r
 >= 0) {

2053 
gpm_h™dÀr
 = 
gpm_¥o˚ss_mou£
;

2054 
is_xãrm
 = 0;

2056 i‡(
is_xãrm
) {

2057 
XTERM_ON
;

2059 
mou£A˘ive
 = 1;

2060 
	}
}

2063 
	$mou£_íd
()

2065 i‡(
mou£A˘ive
 == 0)

2067 i‡(
is_xãrm
) {

2068 
XTERM_OFF
;

2071 
	`Gpm_Clo£
();

2072 
mou£A˘ive
 = 0;

2073 
	}
}

2075 #ñif 
deföed
(
USE_SYSMOUSE
)

2078 
	$mou£_öô
()

2080 
mou£_öfo_t
 
mi
;

2081 
	`sysm_¥o˚ss_mou£
();

2083 i‡(
mou£A˘ive
)

2085 i‡(
is_xãrm
) {

2086 
XTERM_ON
;

2089 #i‡
	`deföed
(
FBIO_MODEINFO
Ë|| deföed(
CONS_MODEINFO
)

2090 #i‚de‡
FBIO_GETMODE


2091 
	#FBIO_GETMODE
 
CONS_GET


	)

2092 
	#FBIO_MODEINFO
 
CONS_MODEINFO


	)

2094 
video_öfo_t
 
vi
;

2096 i‡(
	`io˘l
(
ây
, 
FBIO_GETMODE
, &
vi
.
vi_mode
) != -1 &&

2097 
	`io˘l
(
ây
, 
FBIO_MODEINFO
, &
vi
) != -1) {

2098 
cwidth
 = 
vi
.
vi_cwidth
;

2099 
cheight
 = 
vi
.
vi_cheight
;

2102 * 
	`deföed
(
CONS_MODEINFO
) */

2103 
	`mySig«l
(
SIGUSR2
, 
SIG_IGN
);

2104 
mi
.
›î©i⁄
 = 
MOUSE_MODE
;

2105 
mi
.
u
.
mode
.mode = 0;

2106 
mi
.
u
.
mode
.
sig«l
 = 
SIGUSR2
;

2107 
sysm_h™dÀr
 = 
NULL
;

2108 i‡(
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
) != -1) {

2109 
	`mySig«l
(
SIGUSR2
, 
sysmou£
);

2110 
mi
.
›î©i⁄
 = 
MOUSE_SHOW
;

2111 
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
);

2112 
sysm_h™dÀr
 = 
sysm_¥o˚ss_mou£
;

2115 
mou£A˘ive
 = 1;

2116 
	}
}

2119 
	$mou£_íd
()

2121 i‡(
mou£A˘ive
 == 0)

2123 i‡(
is_xãrm
) {

2124 
XTERM_OFF
;

2127 
mou£_öfo_t
 
mi
;

2128 
mi
.
›î©i⁄
 = 
MOUSE_MODE
;

2129 
mi
.
u
.
mode
.mode = 0;

2130 
mi
.
u
.
mode
.
sig«l
 = 0;

2131 
	`io˘l
(
ây
, 
CONS_MOUSECTL
, &
mi
);

2133 
mou£A˘ive
 = 0;

2134 
	}
}

2140 
	$mou£_öô
()

2142 i‡(
mou£A˘ive
)

2144 i‡(
is_xãrm
 & 
NEED_XTERM_ON
) {

2145 
XTERM_ON
;

2147 #ifde‡
__CYGWIN__


2148 i‡(
is_xãrm
 & 
NEED_CYGWIN_ON
) {

2149 
CYGWIN_ON
;

2152 
mou£A˘ive
 = 1;

2153 
	}
}

2156 
	$mou£_íd
()

2158 i‡(
mou£A˘ive
 == 0)

2160 i‡(
is_xãrm
 & 
NEED_XTERM_OFF
) {

2161 
XTERM_OFF
;

2163 #ifde‡
__CYGWIN__


2164 i‡(
is_xãrm
 & 
NEED_CYGWIN_OFF
) {

2165 
CYGWIN_OFF
;

2168 
mou£A˘ive
 = 0;

2169 
	}
}

2175 
	$mou£_a˘ive
()

2177 i‡(!
mou£A˘ive
)

2178 
	`mou£_öô
();

2179 
	}
}

2182 
	$mou£_öa˘ive
()

2184 i‡(
mou£A˘ive
 && 
is_xãrm
)

2185 
	`mou£_íd
();

2186 
	}
}

2191 
	$Êush_ây
()

2193 i‡(
âyf
)

2194 
	`fÊush
(
âyf
);

2195 
	}
}

2197 #ifde‡
USE_IMAGE


2199 
	$touch_curs‹
()

2201 #ifde‡
USE_M17N


2202 
i
;

2204 
	`touch_löe
();

2205 #ifde‡
USE_M17N


2206 
i
 = 
CurCﬁumn
; i >= 0; i--) {

2207 
	`touch_cﬁumn
(
i
);

2208 i‡(
	`CHMODE
(
S¸ìnImage
[
CurLöe
]->
löïr›
[
i
]Ë!
C_WCHAR2
)

2211 
i
 = 
CurCﬁumn
 + 1; i < 
COLS
; i++) {

2212 i‡(
	`CHMODE
(
S¸ìnImage
[
CurLöe
]->
löïr›
[
i
]Ë!
C_WCHAR2
)

2214 
	`touch_cﬁumn
(
i
);

2217 
	`touch_cﬁumn
(
CurCﬁumn
);

2219 
	}
}

2222 #ifde‡
__MINGW32_VERSION


2224 
	$tgëít
(*
bp
, *
«me
)

2227 
	}
}

2229 
	$tgënum
(*
id
)

2232 
	}
}

2234 
	$tgëÊag
(*
id
)

2237 
	}
}

2239 *
	$tgë°r
(*
id
, **
¨ó
)

2241 
id
 = "";

2242 
	}
}

2244 *
	$tgŸo
(*
ˇp
, 
cﬁ
, 
row
)

2246 
	}
}

2248 
çuts
(*
°r
, 
aff˙t
, (*
putc
)())

2250 
	}
}

2252 *
	$ây«me
(
ây
)

2255 
	}
}

	@terms.h

2 #i‚de‡
TERMS_H


3 
	#TERMS_H


	)

5 
LINES
, 
COLS
;

6 #i‡
deföed
(
__CYGWIN__
)

7 
LASTLINE
;

10 #ifde‡
USE_MOUSE


12 
	#MOUSE_BTN1_DOWN
 0

	)

13 
	#MOUSE_BTN2_DOWN
 1

	)

14 
	#MOUSE_BTN3_DOWN
 2

	)

15 
	#MOUSE_BTN4_DOWN_RXVT
 3

	)

16 
	#MOUSE_BTN5_DOWN_RXVT
 4

	)

17 
	#MOUSE_BTN4_DOWN_XTERM
 64

	)

18 
	#MOUSE_BTN5_DOWN_XTERM
 65

	)

19 
	#MOUSE_BTN_UP
 3

	)

20 
	#MOUSE_BTN_RESET
 -1

	)

23 #ifde‡
__CYGWIN__


24 #i‡
CYGWIN_VERSION_DLL_MAJOR
 < 1005 && 
deföed
(
USE_MOUSE
)

25 
cygwö_mou£_bä_sw≠≥d
;

27 #ifde‡
SUPPORT_WIN9X_CONSOLE_MBCS


28 
íabÀ_wö9x_c⁄sﬁe_öput
();

29 
dißbÀ_wö9x_c⁄sﬁe_öput
();

	@textlist.c

2 
	~"ãxéi°.h
"

3 
	~"ödï.h
"

4 
	~"Så.h
"

5 
	~<gc.h
>

9 
Li°Iãm
 *

10 
	$√wLi°Iãm
(*
s
, 
Li°Iãm
 *
n
, Li°Iãm *
p
)

12 
Li°Iãm
 *
ô
;

13 
ô
 = 
	`New
(
Li°Iãm
);

14 
ô
->
±r
 = 
s
;

15 
ô
->
√xt
 = 
n
;

16 
ô
->
¥ev
 = 
p
;

17  
ô
;

18 
	}
}

20 
GíîÆLi°
 *

21 
	$√wGíîÆLi°
()

23 
GíîÆLi°
 *
é
 = 
	`New
(GeneralList);

24 
é
->
fú°
 =Ål->
œ°
 = 
NULL
;

25 
é
->
nôem
 = 0;

26  
é
;

27 
	}
}

30 
	$pushVÆue
(
GíîÆLi°
 *
é
, *
s
)

32 
Li°Iãm
 *
ô
;

33 i‡(
s
 =
NULL
)

35 
ô
 = 
	`√wLi°Iãm
(
s
, 
NULL
, 
é
->
œ°
);

36 i‡(
é
->
fú°
 =
NULL
) {

37 
é
->
fú°
 = 
ô
;

38 
é
->
œ°
 = 
ô
;

39 
é
->
nôem
 = 1;

42 
é
->
œ°
->
√xt
 = 
ô
;

43 
é
->
œ°
 = 
ô
;

44 
é
->
nôem
++;

46 
	}
}

49 
	$p›VÆue
(
GíîÆLi°
 *
é
)

51 
Li°Iãm
 *
f
;

53 i‡(
é
 =
NULL
 ||Ål->
fú°
 == NULL)

54  
NULL
;

55 
f
 = 
é
->
fú°
;

56 
é
->
fú°
 = 
f
->
√xt
;

57 i‡(
é
->
fú°
)

58 
é
->
fú°
->
¥ev
 = 
NULL
;

60 
é
->
œ°
 = 
NULL
;

61 
é
->
nôem
--;

62  
f
->
±r
;

63 
	}
}

66 
	$Ω›VÆue
(
GíîÆLi°
 *
é
)

68 
Li°Iãm
 *
f
;

70 i‡(
é
 =
NULL
 ||Ål->
œ°
 == NULL)

71  
NULL
;

72 
f
 = 
é
->
œ°
;

73 
é
->
œ°
 = 
f
->
¥ev
;

74 i‡(
é
->
œ°
)

75 
é
->
œ°
->
√xt
 = 
NULL
;

77 
é
->
fú°
 = 
NULL
;

78 
é
->
nôem
--;

79  
f
->
±r
;

80 
	}
}

83 
	$dñVÆue
(
GíîÆLi°
 *
é
, 
Li°Iãm
 *
ô
)

85 i‡(
ô
->
¥ev
)

86 
ô
->
¥ev
->
√xt
 = it->next;

88 
é
->
fú°
 = 
ô
->
√xt
;

89 i‡(
ô
->
√xt
)

90 
ô
->
√xt
->
¥ev
 = it->prev;

92 
é
->
œ°
 = 
ô
->
¥ev
;

93 
é
->
nôem
--;

94 
	}
}

96 
GíîÆLi°
 *

97 
	$≠≥ndGíîÆLi°
(
GíîÆLi°
 *
é
, GíîÆLi° *
é2
)

99 i‡(
é
 && 
é2
) {

100 i‡(
é2
->
fú°
) {

101 i‡(
é
->
œ°
) {

102 
é
->
œ°
->
√xt
 = 
é2
->
fú°
;

103 
é2
->
fú°
->
¥ev
 = 
é
->
œ°
;

104 
é
->
œ°
 = 
é2
->last;

105 
é
->
nôem
 +
é2
->nitem;

108 
é
->
fú°
 = 
é2
->first;

109 
é
->
œ°
 = 
é2
->last;

110 
é
->
nôem
 = 
é2
->nitem;

113 
é2
->
fú°
 =Ål2->
œ°
 = 
NULL
;

114 
é2
->
nôem
 = 0;

117  
é
;

118 
	}
}

123 
TextLöe
 *

124 
	$√wTextLöe
(
Så
 
löe
, 
pos
)

126 
TextLöe
 *
lbuf
 = 
	`New
(TextLine);

127 i‡(
löe
)

128 
lbuf
->
löe
 =Üine;

130 
lbuf
->
löe
 = 
	`Så√w
();

131 
lbuf
->
pos
 =Öos;

132  
lbuf
;

133 
	}
}

136 
	$≠≥ndTextLöe
(
TextLöeLi°
 *
é
, 
Så
 
löe
, 
pos
)

138 
TextLöe
 *
lbuf
;

140 i‡(
é
->
œ°
 =
NULL
) {

141 
	`pushTextLöe
(
é
, 
	`√wTextLöe
(
	`Sådup
(
löe
), 
pos
));

144 
lbuf
 = 
é
->
œ°
->
±r
;

145 i‡(
lbuf
->
löe
)

146 
	`Såˇt
(
lbuf
->
löe
,Üine);

148 
lbuf
->
löe
 =Üine;

149 
lbuf
->
pos
 +=Öos;

151 
	}
}

	@textlist.h

2 #i‚de‡
TEXTLIST_H


3 
	#TEXTLIST_H


	)

4 
	~"Så.h
"

8 
	s_li°ôem
 {

9 *
	m±r
;

10 
_li°ôem
 *
	m√xt
;

11 
_li°ôem
 *
	m¥ev
;

12 } 
	tLi°Iãm
;

14 
	s_gíîÆli°
 {

15 
Li°Iãm
 *
	mfú°
;

16 
Li°Iãm
 *
	mœ°
;

17 
	mnôem
;

18 } 
	tGíîÆLi°
;

20 
Li°Iãm
 *
√wLi°Iãm
(*
s
, Li°Iãm *
n
, Li°Iãm *
p
);

21 
GíîÆLi°
 *
√wGíîÆLi°
();

22 
pushVÆue
(
GíîÆLi°
 *
é
, *
s
);

23 *
p›VÆue
(
GíîÆLi°
 *
é
);

24 *
Ω›VÆue
(
GíîÆLi°
 *
é
);

25 
dñVÆue
(
GíîÆLi°
 *
é
, 
Li°Iãm
 *
ô
);

26 
GíîÆLi°
 *
≠≥ndGíîÆLi°
(GeneralList *, GeneralList *);

30 
	s_ãxéi°ôem
 {

31 *
	m±r
;

32 
_ãxéi°ôem
 *
	m√xt
;

33 
_ãxéi°ôem
 *
	m¥ev
;

34 } 
	tTextLi°Iãm
;

36 
	s_ãxéi°
 {

37 
TextLi°Iãm
 *
	mfú°
;

38 
TextLi°Iãm
 *
	mœ°
;

39 
	mnôem
;

40 } 
	tTextLi°
;

42 
	#√wTextLi°
(Ë((
TextLi°
 *)
	`√wGíîÆLi°
())

	)

43 
	#pushText
(
é
, 
s
Ë
	`pushVÆue
((
GíîÆLi°
 *)—l), (*)
	`ÆlocSå
((s),-1))

	)

44 
	#p›Text
(
é
Ë((*)
	`p›VÆue
((
GíîÆLi°
 *)—l)))

	)

45 
	#Ω›Text
(
é
Ë((*)
	`Ω›VÆue
((
GíîÆLi°
 *)—l)))

	)

46 
	#dñText
(
é
, 
i
Ë
	`dñVÆue
((
GíîÆLi°
 *)—l), (*)(i))

	)

47 
	#≠≥ndTextLi°
(
é
, 
é2
Ë((
TextLi°
 *)
	`≠≥ndGíîÆLi°
((
GíîÆLi°
 *)—l), (GíîÆLi° *)—l2)))

	)

51 
	s_TextLöe
 {

52 
Så
 
	mlöe
;

53 
	mpos
;

54 } 
	tTextLöe
;

56 
	s_ãxéöñi°ôem
 {

57 
TextLöe
 *
	m±r
;

58 
_ãxéöñi°ôem
 *
	m√xt
;

59 
_ãxéöñi°ôem
 *
	m¥ev
;

60 } 
	tTextLöeLi°Iãm
;

62 
	s_ãxéöñi°
 {

63 
TextLöeLi°Iãm
 *
	mfú°
;

64 
TextLöeLi°Iãm
 *
	mœ°
;

65 
	mnôem
;

66 } 
	tTextLöeLi°
;

68 
TextLöe
 *
√wTextLöe
(
Så
 
löe
, 
pos
);

69 
≠≥ndTextLöe
(
TextLöeLi°
 *
é
, 
Så
 
löe
, 
pos
);

70 
	#√wTextLöeLi°
(Ë((
TextLöeLi°
 *)
	`√wGíîÆLi°
())

	)

71 
	#pushTextLöe
(
é
,
lbuf
Ë
	`pushVÆue
((
GíîÆLi°
 *)—l),(*)÷buf))

	)

72 
	#p›TextLöe
(
é
Ë((
TextLöe
 *)
	`p›VÆue
((
GíîÆLi°
 *)—l)))

	)

73 
	#Ω›TextLöe
(
é
Ë((
TextLöe
 *)
	`Ω›VÆue
((
GíîÆLi°
 *)—l)))

	)

74 
	#≠≥ndTextLöeLi°
(
é
, 
é2
Ë((
TextLöeLi°
 *)
	`≠≥ndGíîÆLi°
((
GíîÆLi°
 *)—l), (GíîÆLi° *)—l2)))

	)

	@url.c

2 
	~"fm.h
"

3 #i‚de‡
__MINGW32_VERSION


4 
	~<sys/ty≥s.h
>

5 
	~<sys/sockë.h
>

6 
	~<√töë/ö.h
>

7 
	~<¨∑/öë.h
>

8 
	~<√tdb.h
>

10 
	~<wösock.h
>

13 
	~<sig«l.h
>

14 
	~<£tjmp.h
>

15 
	~<î∫o.h
>

17 
	~<sys/°©.h
>

18 #ifde‡
__EMX__


19 
	~<io.h
>

22 
	~"html.h
"

23 
	~"Så.h
"

24 
	~"my˘y≥.h
"

25 
	~"ªgex.h
"

27 #ifde‡
USE_SSL


28 #i‚de‡
SSLEAY_VERSION_NUMBER


29 
	~<›ís¶/¸y±o.h
>

31 
	~<›ís¶/îr.h
>

34 #ifdef 
__WATT32__


35 
	#wrôe
(
a
,
b
,
c
Ë
	`wrôe_s
◊,b,c)

	)

38 #ifde‡
__MINGW32_VERSION


39 
	#wrôe
(
a
,
b
,
c
Ë
	`£nd
◊,b,c, 0)

	)

40 
	#˛o£
(
fd
Ë
	`˛o£sockë
(fd)

	)

43 #ifde‡
INET6


45 
	gai_Ámûy_‹dî_èbÀ
[7][3] = {

46 {
PF_UNSPEC
, PF_UNSPEC, PF_UNSPEC},

47 {
PF_INET
, 
PF_INET6
, 
PF_UNSPEC
},

48 {
PF_INET6
, 
PF_INET
, 
PF_UNSPEC
},

49 {
PF_UNSPEC
, PF_UNSPEC, PF_UNSPEC},

50 {
PF_INET
, 
PF_UNSPEC
, PF_UNSPEC},

51 {
PF_UNSPEC
, PF_UNSPEC, PF_UNSPEC},

52 {
PF_INET6
, 
PF_UNSPEC
, PF_UNSPEC},

56 
JMP_BUF
 
	gAb‹tLﬂdög
;

60 
	gDeÁu…P‹t
[] = {

74 #ifde‡
USE_SSL


79 
cmdèbÀ
 
	gschemëabÀ
[] = {

80 {"hâp", 
SCM_HTTP
},

81 {"g›hî", 
SCM_GOPHER
},

82 {"·p", 
SCM_FTP
},

83 {"loˇl", 
SCM_LOCAL
},

84 {"fûe", 
SCM_LOCAL
},

86 {"¬ç", 
SCM_NNTP
},

88 {"√ws", 
SCM_NEWS
},

90 {"d©a", 
SCM_DATA
},

91 #i‚de‡
USE_W3MMAILER


92 {"maûto", 
SCM_MAILTO
},

94 #ifde‡
USE_SSL


95 {"hâps", 
SCM_HTTPS
},

97 {
NULL
, 
SCM_UNKNOWN
},

100 
èbÀ2
 
	gDeÁu…Guess
[] = {

119 {
NULL
, NULL}

122 
add_ödex_fûe
(
P¨£dURL
 *
pu
, 
URLFûe
 *
uf
);

126 #i‚de‡
HTTP_DEFAULT_FILE


127 
	#HTTP_DEFAULT_FILE
 "/"

	)

130 #ifde‡
SOCK_DEBUG


131 
	~<°d¨g.h
>

134 
	$sock_log
(*
mesßge
, ...)

136 
FILE
 *
f
 = 
	`f›í
("zzzsocklog", "a");

137 
va_li°
 
va
;

139 i‡(
f
 =
NULL
)

141 
	`va_°¨t
(
va
, 
mesßge
);

142 
	`vÂrötf
(
f
, 
mesßge
, 
va
);

143 
	`f˛o£
(
f
);

144 
	}
}

148 
TextLi°
 *
	gmimëy≥s_li°
;

149 
èbÀ2
 **
	gU£rMimeTy≥s
;

151 
èbÀ2
 *

152 
	$lﬂdMimeTy≥s
(*
fûíame
)

154 
FILE
 *
f
;

155 *
d
, *
ty≥
;

156 
i
, 
n
;

157 
Så
 
tmp
;

158 
èbÀ2
 *
mty≥s
;

160 
f
 = 
	`f›í
(
	`ex∑ndP©h
(
fûíame
), "r");

161 i‡(
f
 =
NULL
)

162  
NULL
;

163 
n
 = 0;

164 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

165 
d
 = 
tmp
->
±r
;

166 i‡(
d
[0] != '#') {

167 
d
 = 
	`°πok
(d, " \t\n\r");

168 i‡(
d
 !
NULL
) {

169 
d
 = 
	`°πok
(
NULL
, " \t\n\r");

170 
i
 = 0; 
d
 !
NULL
; i++)

171 
d
 = 
	`°πok
(
NULL
, " \t\n\r");

172 
n
 +
i
;

176 
	`f£ek
(
f
, 0, 0);

177 
mty≥s
 = 
	`New_N
(
èbÀ2
, 
n
 + 1);

178 
i
 = 0;

179 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

180 
d
 = 
tmp
->
±r
;

181 i‡(
d
[0] == '#')

183 
ty≥
 = 
	`°πok
(
d
, " \t\n\r");

184 i‡(
ty≥
 =
NULL
)

187 
d
 = 
	`°πok
(
NULL
, " \t\n\r");

188 i‡(
d
 =
NULL
)

190 
mty≥s
[
i
].
ôem1
 = 
	`Så√w_ch¨p
(
d
)->
±r
;

191 
mty≥s
[
i
].
ôem2
 = 
	`Så√w_ch¨p
(
ty≥
)->
±r
;

192 
i
++;

195 
mty≥s
[
i
].
ôem1
 = 
NULL
;

196 
mty≥s
[
i
].
ôem2
 = 
NULL
;

197 
	`f˛o£
(
f
);

198  
mty≥s
;

199 
	}
}

202 
	$öôMimeTy≥s
()

204 
i
;

205 
TextLi°Iãm
 *
é
;

207 i‡(
	`n⁄_nuŒ
(
mimëy≥s_fûes
))

208 
mimëy≥s_li°
 = 
	`make_domaö_li°
(
mimëy≥s_fûes
);

210 
mimëy≥s_li°
 = 
NULL
;

211 i‡(
mimëy≥s_li°
 =
NULL
)

213 
U£rMimeTy≥s
 = 
	`New_N
(
èbÀ2
 *, 
mimëy≥s_li°
->
nôem
);

214 
i
 = 0, 
é
 = 
mimëy≥s_li°
->
fú°
;Ål; i++,Å»é->
√xt
)

215 
U£rMimeTy≥s
[
i
] = 
	`lﬂdMimeTy≥s
(
é
->
±r
);

216 
	}
}

219 
	$DeÁu…Fûe
(
scheme
)

221 
scheme
) {

222 
SCM_HTTP
:

223 #ifde‡
USE_SSL


224 
SCM_HTTPS
:

226  
	`ÆlocSå
(
HTTP_DEFAULT_FILE
, -1);

227 #ifde‡
USE_GOPHER


228 
SCM_GOPHER
:

229  
	`ÆlocSå
("1", -1);

231 
SCM_LOCAL
:

232 
SCM_LOCAL_CGI
:

233 
SCM_FTP
:

234 
SCM_FTPDIR
:

235  
	`ÆlocSå
("/", -1);

237  
NULL
;

238 
	}
}

240 
MySig«lH™dÀr


241 
	$KeyAb‹t
(
SIGNAL_ARG
)

243 
	`LONGJMP
(
Ab‹tLﬂdög
, 1);

244 
SIGNAL_RETURN
;

245 
	}
}

247 #ifde‡
USE_SSL


248 
SSL_CTX
 *
	gs¶_˘x
 = 
NULL
;

251 
	$‰ì_s¶_˘x
()

253 i‡(
s¶_˘x
 !
NULL
)

254 
	`SSL_CTX_‰ì
(
s¶_˘x
);

255 
s¶_˘x
 = 
NULL
;

256 
	`s¶_ac˚±_this_sôe
(
NULL
);

257 
	}
}

259 #i‡
SSLEAY_VERSION_NUMBER
 >= 0x00905100

260 
	~<›ís¶/ønd.h
>

262 
	$öô_PRNG
()

264 
buf„r
[256];

265 c⁄° *
fûe
;

266 
l
;

267 i‡(
	`RAND_°©us
())

269 i‡((
fûe
 = 
	`RAND_fûe_«me
(
buf„r
, (buffer)))) {

270 #ifde‡
USE_EGD


271 i‡(
	`RAND_egd
(
fûe
) > 0)

274 
	`RAND_lﬂd_fûe
(
fûe
, -1);

276 i‡(
	`RAND_°©us
())

277 
£eded
;

278 
	`§™d48
(()
	`time
(
NULL
));

279 !
	`RAND_°©us
()) {

280 
l
 = 
	`Ã™d48
();

281 
	`RAND_£ed
((*)&
l
, ());

283 
£eded
:

284 i‡(
fûe
)

285 
	`RAND_wrôe_fûe
(
fûe
);

286 
	}
}

289 
SSL
 *

290 
	$›íSSLH™dÀ
(
sock
, *
ho°«me
, **
p_˚π
)

292 
SSL
 *
h™dÀ
 = 
NULL
;

293 *
ﬁd_s¶_f‹bid_mëhod
 = 
NULL
;

294 #ifde‡
USE_SSL_VERIFY


295 
ﬁd_s¶_vîify_£rvî
 = -1;

298 i‡(
ﬁd_s¶_f‹bid_mëhod
 !
s¶_f‹bid_mëhod


299 && (!
ﬁd_s¶_f‹bid_mëhod
 || !
s¶_f‹bid_mëhod
 ||

300 
	`°rcmp
(
ﬁd_s¶_f‹bid_mëhod
, 
s¶_f‹bid_mëhod
))) {

301 
ﬁd_s¶_f‹bid_mëhod
 = 
s¶_f‹bid_mëhod
;

302 #ifde‡
USE_SSL_VERIFY


303 
s¶_∑th_modifõd
 = 1;

305 
	`‰ì_s¶_˘x
();

308 #ifde‡
USE_SSL_VERIFY


309 i‡(
ﬁd_s¶_vîify_£rvî
 !
s¶_vîify_£rvî
) {

310 
ﬁd_s¶_vîify_£rvî
 = 
s¶_vîify_£rvî
;

311 
s¶_∑th_modifõd
 = 1;

313 i‡(
s¶_∑th_modifõd
) {

314 
	`‰ì_s¶_˘x
();

315 
s¶_∑th_modifõd
 = 0;

318 i‡(
s¶_˘x
 =
NULL
) {

319 
›ti⁄
;

320 #i‡
SSLEAY_VERSION_NUMBER
 < 0x0800

321 
s¶_˘x
 = 
	`SSL_CTX_√w
();

322 
	`X509_£t_deÁu…_vîify_∑ths
(
s¶_˘x
->
˚π
);

324 
	`SSLóy_add_s¶_Æg‹ôhms
();

325 
	`SSL_lﬂd_îr‹_°rögs
();

326 i‡(!(
s¶_˘x
 = 
	`SSL_CTX_√w
(
	`SSLv23_˛õ¡_mëhod
())))

327 
ìnd
;

328 
›ti⁄
 = 
SSL_OP_ALL
;

329 i‡(
s¶_f‹bid_mëhod
) {

330 i‡(
	`°rchr
(
s¶_f‹bid_mëhod
, '2'))

331 
›ti⁄
 |
SSL_OP_NO_SSLv2
;

332 i‡(
	`°rchr
(
s¶_f‹bid_mëhod
, '3'))

333 
›ti⁄
 |
SSL_OP_NO_SSLv3
;

334 i‡(
	`°rchr
(
s¶_f‹bid_mëhod
, 't'))

335 
›ti⁄
 |
SSL_OP_NO_TLSv1
;

336 i‡(
	`°rchr
(
s¶_f‹bid_mëhod
, 'T'))

337 
›ti⁄
 |
SSL_OP_NO_TLSv1
;

339 
	`SSL_CTX_£t_›ti⁄s
(
s¶_˘x
, 
›ti⁄
);

340 #ifde‡
USE_SSL_VERIFY


343 
	`SSL_CTX_£t_vîify
(
s¶_˘x
, 
SSL_VERIFY_NONE
, 
NULL
);

345 
	`SSL_CTX_£t_vîify
(
s¶_˘x
,

346 
s¶_vîify_£rvî
 ? 
SSL_VERIFY_PEER
 :

347 
SSL_VERIFY_NONE
, 
NULL
);

349 i‡(
s¶_˚π_fûe
 !
NULL
 && *ssl_cert_file != '\0') {

350 
ng
 = 1;

351 i‡(
SSL_CTX_u£_˚πifiˇã_fûe


352 (
s¶_˘x
, 
s¶_˚π_fûe
, 
SSL_FILETYPE_PEM
) > 0) {

353 *
key_fûe
 = (
s¶_key_fûe
 =
NULL


354 || *
s¶_key_fûe
 ==

355 '\0'Ë? 
s¶_˚π_fûe
 : 
s¶_key_fûe
;

356 i‡(
SSL_CTX_u£_Priv©eKey_fûe


357 (
s¶_˘x
, 
key_fûe
, 
SSL_FILETYPE_PEM
) > 0)

358 i‡(
	`SSL_CTX_check_¥iv©e_key
(
s¶_˘x
))

359 
ng
 = 0;

361 i‡(
ng
) {

362 
	`‰ì_s¶_˘x
();

363 
ìnd
;

366 i‡((!
s¶_ˇ_fûe
 && !
s¶_ˇ_∑th
)

367 || 
	`SSL_CTX_lﬂd_vîify_loˇti⁄s
(
s¶_˘x
, 
s¶_ˇ_fûe
, 
s¶_ˇ_∑th
))

369 
	`SSL_CTX_£t_deÁu…_vîify_∑ths
(
s¶_˘x
);

372 
h™dÀ
 = 
	`SSL_√w
(
s¶_˘x
);

373 
	`SSL_£t_fd
(
h™dÀ
, 
sock
);

374 #i‡
SSLEAY_VERSION_NUMBER
 >= 0x00905100

375 
	`öô_PRNG
();

377 i‡(
	`SSL_c⁄√˘
(
h™dÀ
) > 0) {

378 
Så
 
£rv_˚π
 = 
	`s¶_gë_˚πifiˇã
(
h™dÀ
, 
ho°«me
);

379 i‡(
£rv_˚π
) {

380 *
p_˚π
 = 
£rv_˚π
->
±r
;

381  
h™dÀ
;

383 
	`˛o£
(
sock
);

384 
	`SSL_‰ì
(
h™dÀ
);

385  
NULL
;

387 
ìnd
:

388 
	`˛o£
(
sock
);

389 i‡(
h™dÀ
)

390 
	`SSL_‰ì
(
h™dÀ
);

392 
	`di•_îr_mesßge
(
S¥ötf


394 
	`ERR_îr‹_°rög
(
	`ERR_gë_îr‹
(), 
NULL
))->
±r
, 
FALSE
);

395  
NULL
;

396 
	}
}

399 
	$SSL_wrôe_‰om_fûe
(
SSL
 * 
s¶
, *
fûe
)

401 
FILE
 *
fd
;

402 
c
;

403 
buf
[1];

404 
fd
 = 
	`f›í
(
fûe
, "r");

405 i‡(
fd
 !
NULL
) {

406 (
c
 = 
	`fgëc
(
fd
)Ë!
EOF
) {

407 
buf
[0] = 
c
;

408 
	`SSL_wrôe
(
s¶
, 
buf
, 1);

410 
	`f˛o£
(
fd
);

412 
	}
}

417 
	$wrôe_‰om_fûe
(
sock
, *
fûe
)

419 
FILE
 *
fd
;

420 
c
;

421 
buf
[1];

422 
fd
 = 
	`f›í
(
fûe
, "r");

423 i‡(
fd
 !
NULL
) {

424 (
c
 = 
	`fgëc
(
fd
)Ë!
EOF
) {

425 
buf
[0] = 
c
;

426 
	`wrôe
(
sock
, 
buf
, 1);

428 
	`f˛o£
(
fd
);

430 
	}
}

432 
P¨£dURL
 *

433 
	$ba£URL
(
Buf„r
 *
buf
)

435 i‡(
buf
->
buf„Ωr›
 & 
BP_NO_URL
) {

437  
NULL
;

439 i‡(
buf
->
ba£URL
 !
NULL
) {

441  
buf
->
ba£URL
;

444  &
buf
->
cuºítURL
;

445 
	}
}

448 
	$›íSockë
(*c⁄° 
ho°«me
,

449 *
ªmŸï‹t_«me
, 
ªmŸï‹t_num
)

451 vﬁ©ûê
sock
 = -1;

452 #ifde‡
INET6


453 *
af
;

454 
addröfo
 
höts
, *
ªs0
, *
ªs
;

455 
îr‹
;

456 *
h«me
;

458 
sockaddr_ö
 
ho°addr
;

459 
ho°ít
 *
íåy
;

460 
¥Ÿ€¡
 *
¥Ÿo
;

461 
s_p‹t
;

462 
a1
, 
a2
, 
a3
, 
a4
;

463 
adr
;

465 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

467 i‡(
fmInôülized
) {

469 
	`mesßge
(
	`S¥ötf
("O≥nög sockë...")->
±r
, 0, 0);

470 
	`ª‰esh
();

472 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

473 #ifde‡
SOCK_DEBUG


474 
	`sock_log
("openSocket() failed.Ñeason: userábort\n");

476 i‡(
sock
 >= 0)

477 
	`˛o£
(
sock
);

478 
îr‹
;

480 
TRAP_ON
;

481 i‡(
ho°«me
 =
NULL
) {

482 #ifde‡
SOCK_DEBUG


483 
	`sock_log
("openSocket() failed.Ñeason: Bad hostname \"%s\"\n",

484 
ho°«me
);

486 
îr‹
;

489 #ifde‡
INET6


491 
h«me
 = 
ho°«me
;

492 i‡(
h«me
 !
NULL
 && h«me[0] ='[' && h«me[
	`°æí
(hname) - 1] == ']') {

493 
h«me
 = 
	`ÆlocSå
(
ho°«me
 + 1, -1);

494 
h«me
[
	`°æí
(hname) - 1] = '\0';

495 i‡(
	`°r•n
(
h«me
, "0123456789abcdefABCDEF:."Ë!
	`°æí
(hname))

496 
îr‹
;

498 
af
 = 
ai_Ámûy_‹dî_èbÀ
[
DNS_‹dî
];;áf++) {

499 
	`mem£t
(&
höts
, 0, (hints));

500 
höts
.
ai_Ámûy
 = *
af
;

501 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

502 i‡(
ªmŸï‹t_num
 != 0) {

503 
Så
 
p‹tbuf
 = 
	`S¥ötf
("%d", 
ªmŸï‹t_num
);

504 
îr‹
 = 
	`gëaddröfo
(
h«me
, 
p‹tbuf
->
±r
, &
höts
, &
ªs0
);

507 
îr‹
 = -1;

509 i‡(
îr‹
 && 
ªmŸï‹t_«me
 &&Ñemoteport_name[0] != '\0') {

511 
îr‹
 = 
	`gëaddröfo
(
h«me
, 
ªmŸï‹t_«me
, &
höts
, &
ªs0
);

513 i‡(
îr‹
) {

514 i‡(*
af
 =
PF_UNSPEC
) {

515 
îr‹
;

520 
sock
 = -1;

521 
ªs
 = 
ªs0
;Ñes;Ñe†ªs->
ai_√xt
) {

522 
sock
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

523 i‡(
sock
 < 0) {

526 i‡(
	`c⁄√˘
(
sock
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) < 0) {

527 
	`˛o£
(
sock
);

528 
sock
 = -1;

533 i‡(
sock
 < 0) {

534 
	`‰ìaddröfo
(
ªs0
);

535 i‡(*
af
 =
PF_UNSPEC
) {

536 
îr‹
;

541 
	`‰ìaddröfo
(
ªs0
);

545 
s_p‹t
 = 
	`ht⁄s
(
ªmŸï‹t_num
);

546 
	`bzîo
((*)&
ho°addr
, (
sockaddr_ö
));

547 i‡((
¥Ÿo
 = 
	`gë¥Ÿoby«me
("t˝")Ë=
NULL
) {

549 
¥Ÿo
 = 
	`New
(
¥Ÿ€¡
);

550 
¥Ÿo
->
p_¥Ÿo
 = 6;

552 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
¥Ÿo
->
p_¥Ÿo
)) < 0) {

553 #ifde‡
SOCK_DEBUG


554 
	`sock_log
("›íSockë: sockë(ËÁûed.Ñós⁄: %s\n", 
	`°ªº‹
(
î∫o
));

556 
îr‹
;

558 
	`ªgexCompûe
("^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$", 0);

559 i‡(
	`ªgexM©ch
(
ho°«me
, -1, 1)) {

560 
	`ssˇnf
(
ho°«me
, "%d.%d.%d.%d", &
a1
, &
a2
, &
a3
, &
a4
);

561 
adr
 = 
	`ht⁄l
((
a1
 << 24Ë| (
a2
 << 16Ë| (
a3
 << 8Ë| 
a4
);

562 
	`bc›y
((*)&
adr
, (*)&
ho°addr
.
sö_addr
, ());

563 
ho°addr
.
sö_Ámûy
 = 
AF_INET
;

564 
ho°addr
.
sö_p‹t
 = 
s_p‹t
;

565 i‡(
fmInôülized
) {

566 
	`mesßge
(
	`S¥ötf
("C⁄√˘ögÅÿ%s", 
ho°«me
)->
±r
, 0, 0);

567 
	`ª‰esh
();

569 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
 *)&
ho°addr
,

570 (
sockaddr_ö
)) < 0) {

571 #ifde‡
SOCK_DEBUG


572 
	`sock_log
("openSocket: connect() failed.Ñeason: %s\n",

573 
	`°ªº‹
(
î∫o
));

575 
îr‹
;

579 **
h_addr_li°
;

580 
ªsu…
 = -1;

581 i‡(
fmInôülized
) {

582 
	`mesßge
(
	`S¥ötf
("Pîf‹mög ho°«mêlooku∞⁄ %s", 
ho°«me
)->
±r
,

584 
	`ª‰esh
();

586 i‡((
íåy
 = 
	`gëho°by«me
(
ho°«me
)Ë=
NULL
) {

587 #ifde‡
SOCK_DEBUG


588 
	`sock_log
("openSocket: gethostbyname() failed.Ñeason: %s\n",

589 
	`°ªº‹
(
î∫o
));

591 
îr‹
;

593 
ho°addr
.
sö_Ámûy
 = 
AF_INET
;

594 
ho°addr
.
sö_p‹t
 = 
s_p‹t
;

595 
h_addr_li°
 = 
íåy
->h_addr_list; *h_addr_list; h_addr_list++) {

596 
	`bc›y
((*)
h_addr_li°
[0], (*)&
ho°addr
.
sö_addr
,

597 
íåy
->
h_Àngth
);

598 #ifde‡
SOCK_DEBUG


599 
adr
 = 
	`¡ohl
(*(*)&
ho°addr
.
sö_addr
);

600 
	`sock_log
("openSocket: connecting %d.%d.%d.%d\n",

601 (
adr
 >> 24) & 0xff,

602 (
adr
 >> 16) & 0xff, (adr >> 8) & 0xff,ádr & 0xff);

604 i‡(
fmInôülized
) {

605 
	`mesßge
(
	`S¥ötf
("C⁄√˘ögÅÿ%s", 
ho°«me
)->
±r
, 0, 0);

606 
	`ª‰esh
();

608 i‡((
ªsu…
 = 
	`c⁄√˘
(
sock
, (
sockaddr
 *)&
ho°addr
,

609 (
sockaddr_ö
))) == 0) {

612 #ifde‡
SOCK_DEBUG


614 
	`sock_log
("openSocket: connect() failed.Ñeason: %s\n",

615 
	`°ªº‹
(
î∫o
));

619 i‡(
ªsu…
 < 0) {

620 
îr‹
;

625 
TRAP_OFF
;

626  
sock
;

627 
îr‹
:

628 
TRAP_OFF
;

631 
	}
}

634 
	#COPYPATH_SPC_ALLOW
 0

	)

635 
	#COPYPATH_SPC_IGNORE
 1

	)

636 
	#COPYPATH_SPC_REPLACE
 2

	)

639 
	$c›yP©h
(*
‹g∑th
, 
Àngth
, 
›ti⁄
)

641 
Så
 
tmp
 = 
	`Så√w
();

642 *
‹g∑th
 && 
Àngth
 != 0) {

643 i‡(
	`IS_SPACE
(*
‹g∑th
)) {

644 
›ti⁄
) {

645 
COPYPATH_SPC_ALLOW
:

646 
	`Såˇt_ch¨
(
tmp
, *
‹g∑th
);

648 
COPYPATH_SPC_IGNORE
:

651 
COPYPATH_SPC_REPLACE
:

652 
	`Såˇt_ch¨p
(
tmp
, "%20");

657 
	`Såˇt_ch¨
(
tmp
, *
‹g∑th
);

658 
‹g∑th
++;

659 
Àngth
--;

661  
tmp
->
±r
;

662 
	}
}

665 
	$∑r£URL
(*
uæ
, 
P¨£dURL
 *
p_uæ
, P¨£dURL *
cuºít
)

667 *
p
, *
q
;

668 
Så
 
tmp
;

670 
uæ
 = 
	`uæ_quŸe
(url);

672 
p
 = 
uæ
;

673 
p_uæ
->
scheme
 = 
SCM_MISSING
;

674 
p_uæ
->
p‹t
 = 0;

675 
p_uæ
->
u£r
 = 
NULL
;

676 
p_uæ
->
∑ss
 = 
NULL
;

677 
p_uæ
->
ho°
 = 
NULL
;

678 
p_uæ
->
is_noˇche
 = 0;

679 
p_uæ
->
fûe
 = 
NULL
;

680 
p_uæ
->
ªÆ_fûe
 = 
NULL
;

681 
p_uæ
->
quîy
 = 
NULL
;

682 
p_uæ
->
œbñ
 = 
NULL
;

687 i‡(*
uæ
 == '\0' || *url == '#') {

688 i‡(
cuºít
)

689 
	`c›yP¨£dURL
(
p_uæ
, 
cuºít
);

690 
do_œbñ
;

692 #i‡
	`deföed
–
__EMX__
 ) || deföed–
__CYGWIN__
 )

693 i‡(!
	`°∫cmp
(
uæ
, "file://localhost/", 17)) {

694 
p_uæ
->
scheme
 = 
SCM_LOCAL
;

695 
p
 += 17 - 1;

696 
uæ
 += 17 - 1;

699 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


700 i‡(
	`IS_ALPHA
(*
p
) && (p[1] == ':' ||Ö[1] == '|')) {

701 
p_uæ
->
scheme
 = 
SCM_LOCAL
;

702 
™Æyze_fûe
;

706 
p_uæ
->
scheme
 = 
	`gëURLScheme
(&
p
);

707 i‡(
p_uæ
->
scheme
 =
SCM_MISSING
) {

712 i‡(
cuºít
) {

713 
cuºít
->
scheme
) {

714 
SCM_LOCAL
:

715 
SCM_LOCAL_CGI
:

716 
p_uæ
->
scheme
 = 
SCM_LOCAL
;

718 
SCM_FTP
:

719 
SCM_FTPDIR
:

720 
p_uæ
->
scheme
 = 
SCM_FTP
;

722 #ifde‡
USE_NNTP


723 
SCM_NNTP
:

724 
SCM_NNTP_GROUP
:

725 
p_uæ
->
scheme
 = 
SCM_NNTP
;

727 
SCM_NEWS
:

728 
SCM_NEWS_GROUP
:

729 
p_uæ
->
scheme
 = 
SCM_NEWS
;

733 
p_uæ
->
scheme
 = 
cuºít
->scheme;

738 
p_uæ
->
scheme
 = 
SCM_LOCAL
;

739 
p
 = 
uæ
;

740 i‡(!
	`°∫cmp
(
p
, "//", 2)) {

743 
p
 += 2;

744 
™Æyze_uæ
;

747 
™Æyze_fûe
;

750 i‡(
p_uæ
->
scheme
 =
SCM_UNKNOWN
) {

751 
p_uæ
->
fûe
 = 
	`ÆlocSå
(
uæ
, -1);

755 i‡(
p
[0] != '/' ||Ö[1] != '/') {

756 
p_uæ
->
ho°
 = 
NULL
;

757 i‡(
p_uæ
->
scheme
 !
SCM_UNKNOWN
)

758 
p_uæ
->
p‹t
 = 
DeÁu…P‹t
[p_uæ->
scheme
];

760 
p_uæ
->
p‹t
 = 0;

761 
™Æyze_fûe
;

764 i‡(
p_uæ
->
scheme
 =
SCM_LOCAL
) {

765 #ifde‡
__EMX__


766 
p
 += 2;

767 
™Æyze_fûe
;

769 i‡(
p
[2] == '/' ||Ö[2] == '~'

771 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


772 || (
	`IS_ALPHA
(
p
[2]) && (p[3] == ':' ||Ö[3] == '|'))

776 
p
 += 2;

777 
™Æyze_fûe
;

781 
p
 += 2;

783 
™Æyze_uæ
:

784 
q
 = 
p
;

785 #ifde‡
INET6


786 i‡(*
q
 == '[') {

787 
p
++;

788 
	`IS_XDIGIT
(*
p
) || *p == ':' || *p == '.')

789 
p
++;

790 i‡(*
p
 !']' || (*’ + 1Ë&& 
	`°rchr
(":/?#", *’ + 1)Ë=
NULL
))

791 
p
 = 
q
;

794 *
p
 && 
	`°rchr
(":/@?#", *pË=
NULL
)

795 
p
++;

796 *
p
) {

801 
p_uæ
->
ho°
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_IGNORE
);

802 
q
 = ++
p
;

803 *
p
 && 
	`°rchr
("@/?#", *pË=
NULL
)

804 
p
++;

805 i‡(*
p
 == '@') {

807 
p_uæ
->
∑ss
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_ALLOW
);

808 
q
 = ++
p
;

809 
p_uæ
->
u£r
 =Ö_uæ->
ho°
;

810 
p_uæ
->
ho°
 = 
NULL
;

811 
™Æyze_uæ
;

814 
tmp
 = 
	`Så√w_ch¨p_n
(
q
, 
p
 - q);

815 
p_uæ
->
p‹t
 = 
	`©oi
(
tmp
->
±r
);

820 
p_uæ
->
u£r
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_IGNORE
);

821 
q
 = ++
p
;

822 
™Æyze_uæ
;

828 
p_uæ
->
ho°
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_IGNORE
);

829 
p_uæ
->
p‹t
 = 
DeÁu…P‹t
[p_uæ->
scheme
];

832 
™Æyze_fûe
:

833 #i‚de‡
SUPPORT_NETBIOS_SHARE


834 i‡(
p_uæ
->
scheme
 =
SCM_LOCAL
 &&Ö_uæ->
u£r
 =
NULL
 &&

835 
p_uæ
->
ho°
 !
NULL
 && *p_url->host != '\0' &&

836 
	`°rcmp
(
p_uæ
->
ho°
, "localhost")) {

846 
p_uæ
->
scheme
 = 
SCM_FTP
;

847 i‡(
p_uæ
->
p‹t
 == 0)

848 
p_uæ
->
p‹t
 = 
DeÁu…P‹t
[
SCM_FTP
];

851 i‡((*
p
 ='\0' || *∞='#' || *∞='?'Ë&& 
p_uæ
->
ho°
 =
NULL
) {

852 
p_uæ
->
fûe
 = "";

853 
do_quîy
;

855 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


856 i‡(
p_uæ
->
scheme
 =
SCM_LOCAL
) {

857 
q
 = 
p
;

858 i‡(*
q
 == '/')

859 
q
++;

860 i‡(
	`IS_ALPHA
(
q
[0]) && (q[1] == ':' || q[1] == '|')) {

861 i‡(
q
[1] == '|') {

862 
p
 = 
	`ÆlocSå
(
q
, -1);

863 
p
[1] = ':';

866 
p
 = 
q
;

871 
q
 = 
p
;

872 #ifde‡
USE_GOPHER


873 i‡(
p_uæ
->
scheme
 =
SCM_GOPHER
) {

874 i‡(*
q
 == '/')

875 
q
++;

876 i‡(*
q
 && q[0] != '/' && q[1] != '/' && q[2] == '/')

877 
q
++;

880 i‡(*
p
 == '/')

881 
p
++;

882 i‡(*
p
 == '\0' || *p == '#' || *p == '?') {

883 
p_uæ
->
fûe
 = 
	`DeÁu…Fûe
’_uæ->
scheme
);

884 
do_quîy
;

886 #ifde‡
USE_GOPHER


887 i‡(
p_uæ
->
scheme
 =
SCM_GOPHER
 && *
p
 == 'R') {

888 
p
++;

889 
tmp
 = 
	`Så√w
();

890 
	`Såˇt_ch¨
(
tmp
, *(
p
++));

891 *
p
 && *p != '/')

892 
p
++;

893 
	`Såˇt_ch¨p
(
tmp
, 
p
);

894 *
p
)

895 
p
++;

896 
p_uæ
->
fûe
 = 
	`c›yP©h
(
tmp
->
±r
, -1, 
COPYPATH_SPC_IGNORE
);

901 *
cgi
 = 
	`°rchr
(
p
, '?');

902 
agaö
:

903 *
p
 && *∞!'#' &&Ö !
cgi
)

904 
p
++;

905 i‡(*
p
 ='#' && 
p_uæ
->
scheme
 =
SCM_LOCAL
) {

912 i‡(
p
 > 
q
 && *’ - 1Ë='/' && (
cgi
 =
NULL
 ||Ö < cgi)) {

918 
p
++;

919 
agaö
;

921 i‡(*(
p
 + 1) == '\0') {

927 
p
++;

930 i‡(
p_uæ
->
scheme
 =
SCM_LOCAL
 ||Ö_uæ->schemê=
SCM_MISSING
)

931 
p_uæ
->
fûe
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_ALLOW
);

933 
p_uæ
->
fûe
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_IGNORE
);

936 
do_quîy
:

937 i‡(*
p
 == '?') {

938 
q
 = ++
p
;

939 *
p
 && *p != '#')

940 
p
++;

941 
p_uæ
->
quîy
 = 
	`c›yP©h
(
q
, 
p
 - q, 
COPYPATH_SPC_ALLOW
);

943 
do_œbñ
:

944 i‡(
p_uæ
->
scheme
 =
SCM_MISSING
) {

945 
p_uæ
->
scheme
 = 
SCM_LOCAL
;

946 
p_uæ
->
fûe
 = 
	`ÆlocSå
(
p
, -1);

947 
p_uæ
->
œbñ
 = 
NULL
;

949 i‡(*
p
 == '#')

950 
p_uæ
->
œbñ
 = 
	`ÆlocSå
(
p
 + 1, -1);

952 
p_uæ
->
œbñ
 = 
NULL
;

953 
	}
}

955 
	#öôP¨£dURL
(
p
Ë
	`bzîo
’,(
P¨£dURL
))

	)

956 
	#ALLOC_STR
(
s
Ë((s)==
NULL
?NULL:
	`ÆlocSå
(s,-1))

	)

959 
	$c›yP¨£dURL
(
P¨£dURL
 *
p
, P¨£dURL *
q
)

961 
p
->
scheme
 = 
q
->scheme;

962 
p
->
p‹t
 = 
q
->port;

963 
p
->
is_noˇche
 = 
q
->is_nocache;

964 
p
->
u£r
 = 
	`ALLOC_STR
(
q
->user);

965 
p
->
∑ss
 = 
	`ALLOC_STR
(
q
->pass);

966 
p
->
ho°
 = 
	`ALLOC_STR
(
q
->host);

967 
p
->
fûe
 = 
	`ALLOC_STR
(
q
->file);

968 
p
->
ªÆ_fûe
 = 
	`ALLOC_STR
(
q
->real_file);

969 
p
->
œbñ
 = 
	`ALLOC_STR
(
q
->label);

970 
p
->
quîy
 = 
	`ALLOC_STR
(
q
->query);

971 
	}
}

974 
	$∑r£URL2
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
)

976 *
p
;

977 
Så
 
tmp
;

978 
ªœtive_uri
 = 
FALSE
;

980 
	`∑r£URL
(
uæ
, 
pu
, 
cuºít
);

981 #i‚de‡
USE_W3MMAILER


982 i‡(
pu
->
scheme
 =
SCM_MAILTO
)

985 i‡(
pu
->
scheme
 =
SCM_DATA
)

987 i‡(
pu
->
scheme
 =
SCM_NEWS
 ||Öu->schemê=
SCM_NEWS_GROUP
) {

988 i‡(
pu
->
fûe
 && !
	`°rchr
(pu->file, '@') &&

989 (!(
p
 = 
	`°rchr
(
pu
->
fûe
, '/')) || strchr(p + 1, '-') ||

990 *(
p
 + 1) == '\0'))

991 
pu
->
scheme
 = 
SCM_NEWS_GROUP
;

993 
pu
->
scheme
 = 
SCM_NEWS
;

996 i‡(
pu
->
scheme
 =
SCM_NNTP
 ||Öu->schemê=
SCM_NNTP_GROUP
) {

997 i‡(
pu
->
fûe
 && *pu->file == '/')

998 
pu
->
fûe
 = 
	`ÆlocSå
(pu->file + 1, -1);

999 i‡(
pu
->
fûe
 && !
	`°rchr
(pu->file, '@') &&

1000 (!(
p
 = 
	`°rchr
(
pu
->
fûe
, '/')) || strchr(p + 1, '-') ||

1001 *(
p
 + 1) == '\0'))

1002 
pu
->
scheme
 = 
SCM_NNTP_GROUP
;

1004 
pu
->
scheme
 = 
SCM_NNTP
;

1005 i‡(
cuºít
 && (cuºít->
scheme
 =
SCM_NNTP
 ||

1006 
cuºít
->
scheme
 =
SCM_NNTP_GROUP
)) {

1007 i‡(
pu
->
ho°
 =
NULL
) {

1008 
pu
->
ho°
 = 
cuºít
->host;

1009 
pu
->
p‹t
 = 
cuºít
->port;

1014 i‡(
pu
->
scheme
 =
SCM_LOCAL
) {

1015 *
q
 = 
	`ex∑ndName
(
	`fûe_unquŸe
(
pu
->
fûe
));

1016 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1017 
Så
 
drive
;

1018 i‡(
	`IS_ALPHA
(
q
[0]) && q[1] == ':') {

1019 
drive
 = 
	`Så√w_ch¨p_n
(
q
, 2);

1020 
	`Såˇt_ch¨p
(
drive
, 
	`fûe_quŸe
(
q
+2));

1021 
pu
->
fûe
 = 
drive
->
±r
;

1025 
pu
->
fûe
 = 
	`fûe_quŸe
(
q
);

1028 i‡(
cuºít
 && (
pu
->
scheme
 == current->scheme ||

1029 (
pu
->
scheme
 =
SCM_FTP
 && 
cuºít
->schemê=
SCM_FTPDIR
) ||

1030 (
pu
->
scheme
 =
SCM_LOCAL
 &&

1031 
cuºít
->
scheme
 =
SCM_LOCAL_CGI
))

1032 && 
pu
->
ho°
 =
NULL
) {

1034 
pu
->
u£r
 = 
cuºít
->user;

1035 
pu
->
∑ss
 = 
cuºít
->pass;

1036 
pu
->
ho°
 = 
cuºít
->host;

1037 
pu
->
p‹t
 = 
cuºít
->port;

1038 i‡(
pu
->
fûe
 && *pu->file) {

1039 #ifde‡
USE_EXTERNAL_URI_LOADER


1040 i‡(
pu
->
scheme
 =
SCM_UNKNOWN


1041 && 
	`°rchr
(
pu
->
fûe
, ':'Ë=
NULL


1042 && 
cuºít
 && (
p
 = 
	`°rchr
(cuºít->
fûe
, ':')Ë!
NULL
) {

1043 
pu
->
fûe
 = 
	`S¥ötf
("%s:%s",

1044 
	`ÆlocSå
(
cuºít
->
fûe
,

1045 
p
 - 
cuºít
->
fûe
), 
pu
->fûe)->
±r
;

1050 #ifde‡
USE_GOPHER


1051 
pu
->
scheme
 !
SCM_GOPHER
 &&

1053 
pu
->
fûe
[0] != '/'

1054 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1055 && !(
pu
->
scheme
 =
SCM_LOCAL
 && 
	`IS_ALPHA
’u->
fûe
[0])

1056 && 
pu
->
fûe
[1] == ':')

1060 
p
 = 
pu
->
fûe
;

1061 i‡(
cuºít
->
fûe
) {

1062 
tmp
 = 
	`Så√w_ch¨p
(
cuºít
->
fûe
);

1063 
tmp
->
Àngth
 > 0) {

1064 i‡(
	`Såœ°ch¨
(
tmp
) == '/')

1066 
	`Såshrök
(
tmp
, 1);

1068 
	`Såˇt_ch¨p
(
tmp
, 
p
);

1069 
pu
->
fûe
 = 
tmp
->
±r
;

1070 
ªœtive_uri
 = 
TRUE
;

1073 #ifde‡
USE_GOPHER


1074 i‡(
pu
->
scheme
 =
SCM_GOPHER
 &&Öu->
fûe
[0] == '/') {

1075 
p
 = 
pu
->
fûe
;

1076 
pu
->
fûe
 = 
	`ÆlocSå
(
p
 + 1, -1);

1081 
pu
->
fûe
 = 
cuºít
->file;

1082 i‡(!
pu
->
quîy
)

1083 
pu
->
quîy
 = 
cuºít
->query;

1088 i‡(
pu
->
fûe
) {

1089 #ifde‡
__EMX__


1090 i‡(
pu
->
scheme
 =
SCM_LOCAL
) {

1091 i‡(
	`°∫cmp
(
pu
->
fûe
, "/$LIB/", 6)) {

1092 
abs
[
_MAX_PATH
];

1094 
	`_ab•©h
(
abs
, 
	`fûe_unquŸe
(
pu
->
fûe
), 
_MAX_PATH
);

1095 
pu
->
fûe
 = 
	`fûe_quŸe
(
	`˛ónupName
(
abs
));

1099 i‡(
pu
->
scheme
 =
SCM_LOCAL
 &&Öu->
fûe
[0] != '/' &&

1100 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1101 !(
	`IS_ALPHA
(
pu
->
fûe
[0]) &&Öu->file[1] == ':') &&

1103 
	`°rcmp
(
pu
->
fûe
, "-")) {

1105 
tmp
 = 
	`Så√w_ch¨p
(
CuºítDú
);

1106 i‡(
	`Såœ°ch¨
(
tmp
) != '/')

1107 
	`Såˇt_ch¨
(
tmp
, '/');

1108 
	`Såˇt_ch¨p
(
tmp
, 
	`fûe_unquŸe
(
pu
->
fûe
));

1109 
pu
->
fûe
 = 
	`fûe_quŸe
(
	`˛ónupName
(
tmp
->
±r
));

1112 i‡(
pu
->
scheme
 =
SCM_HTTP


1113 #ifde‡
USE_SSL


1114 || 
pu
->
scheme
 =
SCM_HTTPS


1117 i‡(
ªœtive_uri
) {

1125 
pu
->
fûe
 = 
	`˛ónupName
(pu->file);

1129 #ifde‡
USE_GOPHER


1130 
pu
->
scheme
 !
SCM_GOPHER
 &&

1132 
pu
->
fûe
[0] == '/') {

1139 
pu
->
fûe
 = 
	`˛ónupName
(pu->file);

1141 i‡(
pu
->
scheme
 =
SCM_LOCAL
) {

1142 #ifde‡
SUPPORT_NETBIOS_SHARE


1143 i‡(
pu
->
ho°
 && 
	`°rcmp
(pu->host, "localhost") != 0) {

1144 
Så
 
tmp
 = 
	`Så√w_ch¨p
("//");

1145 
	`Såˇt_m_ch¨p
(
tmp
, 
pu
->
ho°
,

1146 
	`˛ónupName
(
	`fûe_unquŸe
(
pu
->
fûe
)), 
NULL
);

1147 
pu
->
ªÆ_fûe
 = 
tmp
->
±r
;

1151 
pu
->
ªÆ_fûe
 = 
	`˛ónupName
(
	`fûe_unquŸe
’u->
fûe
));

1154 
	}
}

1156 
Så


1157 
	$_∑r£dURL2Så
(
P¨£dURL
 *
pu
, 
∑ss
)

1159 
Så
 
tmp
;

1160 *
scheme_°r
[] = {

1163 #ifde‡
USE_SSL


1168 i‡(
pu
->
scheme
 =
SCM_MISSING
) {

1169  
	`Så√w_ch¨p
("???");

1171 i‡(
pu
->
scheme
 =
SCM_UNKNOWN
) {

1172  
	`Så√w_ch¨p
(
pu
->
fûe
);

1174 i‡(
pu
->
ho°
 =
NULL
 &&Öu->
fûe
 =NULL &&Öu->
œbñ
 != NULL) {

1176  
	`S¥ötf
("#%s", 
pu
->
œbñ
);

1178 i‡(
pu
->
scheme
 =
SCM_LOCAL
 && !
	`°rcmp
’u->
fûe
, "-")) {

1179 
tmp
 = 
	`Så√w_ch¨p
("-");

1180 i‡(
pu
->
œbñ
) {

1181 
	`Såˇt_ch¨
(
tmp
, '#');

1182 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
œbñ
);

1184  
tmp
;

1186 
tmp
 = 
	`Så√w_ch¨p
(
scheme_°r
[
pu
->
scheme
]);

1187 
	`Såˇt_ch¨
(
tmp
, ':');

1188 #i‚de‡
USE_W3MMAILER


1189 i‡(
pu
->
scheme
 =
SCM_MAILTO
) {

1190 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
fûe
);

1191 i‡(
pu
->
quîy
) {

1192 
	`Såˇt_ch¨
(
tmp
, '?');

1193 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
quîy
);

1195  
tmp
;

1198 i‡(
pu
->
scheme
 =
SCM_DATA
) {

1199 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
fûe
);

1200  
tmp
;

1202 #ifde‡
USE_NNTP


1203 i‡(
pu
->
scheme
 !
SCM_NEWS
 &&Öu->schemê!
SCM_NEWS_GROUP
)

1206 
	`Såˇt_ch¨p
(
tmp
, "//");

1208 i‡(
pu
->
u£r
) {

1209 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
u£r
);

1210 i‡(
∑ss
 && 
pu
->pass) {

1211 
	`Såˇt_ch¨
(
tmp
, ':');

1212 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
∑ss
);

1214 
	`Såˇt_ch¨
(
tmp
, '@');

1216 i‡(
pu
->
ho°
) {

1217 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
ho°
);

1218 i‡(
pu
->
p‹t
 !
DeÁu…P‹t
[pu->
scheme
]) {

1219 
	`Såˇt_ch¨
(
tmp
, ':');

1220 
	`Såˇt
(
tmp
, 
	`S¥ötf
("%d", 
pu
->
p‹t
));

1224 #ifde‡
USE_NNTP


1225 
pu
->
scheme
 !
SCM_NEWS
 &&Öu->schemê!
SCM_NEWS_GROUP
 &&

1227 (
pu
->
fûe
 =
NULL
 || (pu->file[0] != '/'

1228 #ifde‡
SUPPORT_DOS_DRIVE_PREFIX


1229 && !(
	`IS_ALPHA
(
pu
->
fûe
[0])

1230 && 
pu
->
fûe
[1] == ':'

1231 && 
pu
->
ho°
 =
NULL
)

1234 
	`Såˇt_ch¨
(
tmp
, '/');

1235 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
fûe
);

1236 i‡(
pu
->
scheme
 =
SCM_FTPDIR
 && 
	`Såœ°ch¨
(
tmp
) != '/')

1237 
	`Såˇt_ch¨
(
tmp
, '/');

1238 i‡(
pu
->
quîy
) {

1239 
	`Såˇt_ch¨
(
tmp
, '?');

1240 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
quîy
);

1242 i‡(
pu
->
œbñ
) {

1243 
	`Såˇt_ch¨
(
tmp
, '#');

1244 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
œbñ
);

1246  
tmp
;

1247 
	}
}

1249 
Så


1250 
	$∑r£dURL2Så
(
P¨£dURL
 *
pu
)

1252  
	`_∑r£dURL2Så
(
pu
, 
FALSE
);

1253 
	}
}

1256 
	$gëURLScheme
(**
uæ
)

1258 *
p
 = *
uæ
, *
q
;

1259 
i
;

1260 
scheme
 = 
SCM_MISSING
;

1262 *
p
 && (
	`IS_ALNUM
(*p) || *p == '.' || *p == '+' || *p == '-'))

1263 
p
++;

1264 i‡(*
p
 == ':') {

1265 
scheme
 = 
SCM_UNKNOWN
;

1266 
i
 = 0; (
q
 = 
schemëabÀ
[i].
cmd«me
Ë!
NULL
; i++) {

1267 
Àn
 = 
	`°æí
(
q
);

1268 i‡(!
	`°∫ˇ£cmp
(
q
, *
uæ
, 
Àn
) && (*url)[len] == ':') {

1269 
scheme
 = 
schemëabÀ
[
i
].
cmd
;

1270 *
uæ
 = 
p
 + 1;

1275  
scheme
;

1276 
	}
}

1279 
	$Ÿhîöfo
(
P¨£dURL
 *
èrgë
, P¨£dURL *
cuºít
, *
ª„ªr
)

1281 
Så
 
s
 = 
	`Så√w
();

1283 
	`Såˇt_ch¨p
(
s
, "User-Agent: ");

1284 i‡(
U£rAgít
 =
NULL
 || *UserAgent == '\0')

1285 
	`Såˇt_ch¨p
(
s
, 
w3m_vîsi⁄
);

1287 
	`Såˇt_ch¨p
(
s
, 
U£rAgít
);

1288 
	`Såˇt_ch¨p
(
s
, "\r\n");

1290 
	`Såˇt_m_ch¨p
(
s
, "Ac˚±: ", 
Ac˚±Medü
, "\r\n", 
NULL
);

1291 
	`Såˇt_m_ch¨p
(
s
, "Ac˚±-Encodög: ", 
Ac˚±Encodög
, "\r\n", 
NULL
);

1292 
	`Såˇt_m_ch¨p
(
s
, "Ac˚±-L™guage: ", 
Ac˚±L™g
, "\r\n", 
NULL
);

1294 i‡(
èrgë
->
ho°
) {

1295 
	`Såˇt_ch¨p
(
s
, "Host: ");

1296 
	`Såˇt_ch¨p
(
s
, 
èrgë
->
ho°
);

1297 i‡(
èrgë
->
p‹t
 !
DeÁu…P‹t
[èrgë->
scheme
])

1298 
	`Såˇt
(
s
, 
	`S¥ötf
(":%d", 
èrgë
->
p‹t
));

1299 
	`Såˇt_ch¨p
(
s
, "\r\n");

1301 i‡(
èrgë
->
is_noˇche
 || 
NoCache
) {

1302 
	`Såˇt_ch¨p
(
s
, "Pragma:Ço-cache\r\n");

1303 
	`Såˇt_ch¨p
(
s
, "Cache-control:Ço-cache\r\n");

1305 i‡(!
NoSídRe„ªr
) {

1306 i‡(
ª„ªr
 =
NULL
 && 
cuºít
 && cuºít->
scheme
 !
SCM_LOCAL
 &&

1307 (
cuºít
->
scheme
 !
SCM_FTP
 ||

1308 (
cuºít
->
u£r
 =
NULL
 && cuºít->
∑ss
 == NULL))) {

1309 *
p
 = 
cuºít
->
œbñ
;

1310 
	`Såˇt_ch¨p
(
s
, "Referer: ");

1311 
cuºít
->
œbñ
 = 
NULL
;

1312 
	`Såˇt
(
s
, 
	`∑r£dURL2Så
(
cuºít
));

1313 
cuºít
->
œbñ
 = 
p
;

1314 
	`Såˇt_ch¨p
(
s
, "\r\n");

1316 i‡(
ª„ªr
 !
NULL
 &&Ñe„ª∏!
NO_REFERER
) {

1317 *
p
 = 
	`°rchr
(
ª„ªr
, '#');

1318 
	`Såˇt_ch¨p
(
s
, "Referer: ");

1319 i‡(
p
)

1320 
	`Såˇt_ch¨p_n
(
s
, 
ª„ªr
, 
p
 -Ñeferer);

1322 
	`Såˇt_ch¨p
(
s
, 
ª„ªr
);

1323 
	`Såˇt_ch¨p
(
s
, "\r\n");

1326  
s
->
±r
;

1327 
	}
}

1329 
Så


1330 
	$HTTPªque°Mëhod
(
HReque°
 *
hr
)

1332 
hr
->
comm™d
) {

1333 
HR_COMMAND_CONNECT
:

1334  
	`Så√w_ch¨p
("CONNECT");

1335 
HR_COMMAND_POST
:

1336  
	`Så√w_ch¨p
("POST");

1338 
HR_COMMAND_HEAD
:

1339  
	`Så√w_ch¨p
("HEAD");

1341 
HR_COMMAND_GET
:

1343  
	`Så√w_ch¨p
("GET");

1345  
NULL
;

1346 
	}
}

1348 
Så


1349 
	$HTTPªque°URI
(
P¨£dURL
 *
pu
, 
HReque°
 *
hr
)

1351 
Så
 
tmp
 = 
	`Så√w
();

1352 i‡(
hr
->
comm™d
 =
HR_COMMAND_CONNECT
) {

1353 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
ho°
);

1354 
	`Såˇt
(
tmp
, 
	`S¥ötf
(":%d", 
pu
->
p‹t
));

1356 i‡(
hr
->
Êag
 & 
HR_FLAG_LOCAL
) {

1357 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
fûe
);

1358 i‡(
pu
->
quîy
) {

1359 
	`Såˇt_ch¨
(
tmp
, '?');

1360 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
quîy
);

1364 *
ßve_œbñ
 = 
pu
->
œbñ
;

1365 
pu
->
œbñ
 = 
NULL
;

1366 
	`Såˇt
(
tmp
, 
	`_∑r£dURL2Så
(
pu
, 
TRUE
));

1367 
pu
->
œbñ
 = 
ßve_œbñ
;

1369  
tmp
;

1370 
	}
}

1372 
Så


1373 
	$HTTPªque°
(
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
, 
HReque°
 *
hr
, 
TextLi°
 *
exåa
)

1375 
Så
 
tmp
;

1376 
TextLi°Iãm
 *
i
;

1377 
£í_www_auth
 = 0;

1378 
£í_¥oxy_auth
 = 0;

1379 #ifde‡
USE_COOKIE


1380 
Så
 
cookõ
;

1382 
tmp
 = 
	`HTTPªque°Mëhod
(
hr
);

1383 
	`Såˇt_ch¨p
(
tmp
, " ");

1384 
	`Såˇt_ch¨p
(
tmp
, 
	`HTTPªque°URI
(
pu
, 
hr
)->
±r
);

1385 
	`Såˇt_ch¨p
(
tmp
, " HTTP/1.0\r\n");

1386 i‡(
hr
->
ª„ªr
 =
NO_REFERER
)

1387 
	`Såˇt_ch¨p
(
tmp
, 
	`Ÿhîöfo
(
pu
, 
NULL
, NULL));

1389 
	`Såˇt_ch¨p
(
tmp
, 
	`Ÿhîöfo
(
pu
, 
cuºít
, 
hr
->
ª„ªr
));

1390 i‡(
exåa
 !
NULL
)

1391 
i
 = 
exåa
->
fú°
; i !
NULL
; i = i->
√xt
) {

1392 i‡(
	`°∫ˇ£cmp
(
i
->
±r
, "Authorization:",

1394 
£í_www_auth
 = 1;

1395 #ifde‡
USE_SSL


1396 i‡(
hr
->
comm™d
 =
HR_COMMAND_CONNECT
)

1400 i‡(
	`°∫ˇ£cmp
(
i
->
±r
, "Proxy-Authorization:",

1402 
£í_¥oxy_auth
 = 1;

1403 #ifde‡
USE_SSL


1404 i‡(
pu
->
scheme
 =
SCM_HTTPS


1405 && 
hr
->
comm™d
 !
HR_COMMAND_CONNECT
)

1409 
	`Såˇt_ch¨p
(
tmp
, 
i
->
±r
);

1412 #ifde‡
USE_COOKIE


1413 i‡(
hr
->
comm™d
 !
HR_COMMAND_CONNECT
 &&

1414 
u£_cookõ
 && (
cookõ
 = 
	`föd_cookõ
(
pu
))) {

1415 
	`Såˇt_ch¨p
(
tmp
, "Cookie: ");

1416 
	`Såˇt
(
tmp
, 
cookõ
);

1417 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1419 i‡(
cookõ
->
±r
[0] != '$')

1420 
	`Såˇt_ch¨p
(
tmp
, "Cookie2: $Version=\"1\"\r\n");

1423 i‡(
hr
->
comm™d
 =
HR_COMMAND_POST
) {

1424 i‡(
hr
->
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

1425 
	`Såˇt_ch¨p
(
tmp
, "Content-type: multipart/form-data; boundary=");

1426 
	`Såˇt_ch¨p
(
tmp
, 
hr
->
ªque°
->
bound¨y
);

1427 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1428 
	`Såˇt
(
tmp
,

1429 
	`S¥ötf
("C⁄ã¡-Àngth: %ld\r\n", 
hr
->
ªque°
->
Àngth
));

1430 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1433 i‡(!
ovîride_c⁄ã¡_ty≥
) {

1434 
	`Såˇt_ch¨p
(
tmp
,

1437 
	`Såˇt
(
tmp
,

1438 
	`S¥ötf
("C⁄ã¡-Àngth: %ld\r\n", 
hr
->
ªque°
->
Àngth
));

1439 i‡(
hódî_°rög
)

1440 
	`Såˇt
(
tmp
, 
hódî_°rög
);

1441 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1442 
	`Såˇt_ch¨p_n
(
tmp
, 
hr
->
ªque°
->
body
, hr->ªque°->
Àngth
);

1443 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1447 i‡(
hódî_°rög
)

1448 
	`Såˇt
(
tmp
, 
hódî_°rög
);

1449 
	`Såˇt_ch¨p
(
tmp
, "\r\n");

1451 #ifde‡
DEBUG


1452 
	`Ârötf
(
°dîr
, "HTTPªque°: [ %†]\n\n", 
tmp
->
±r
);

1454  
tmp
;

1455 
	}
}

1458 
	$öô_°ªam
(
URLFûe
 *
uf
, 
scheme
, 
I≈utSåóm
 
°ªam
)

1460 
	`mem£t
(
uf
, 0, (
URLFûe
));

1461 
uf
->
°ªam
 = stream;

1462 
uf
->
scheme
 = scheme;

1463 
uf
->
ícodög
 = 
ENC_7BIT
;

1464 
uf
->
is_cgi
 = 
FALSE
;

1465 
uf
->
com¥essi⁄
 = 
CMP_NOCOMPRESS
;

1466 
uf
->
c⁄ã¡_ícodög
 = 
CMP_NOCOMPRESS
;

1467 
uf
->
guess_ty≥
 = 
NULL
;

1468 
uf
->
ext
 = 
NULL
;

1469 
uf
->
modtime
 = -1;

1470 
	}
}

1472 
URLFûe


1473 
	$›íURL
(*
uæ
, 
P¨£dURL
 *
pu
, P¨£dURL *
cuºít
,

1474 
URLO±i⁄
 *
›ti⁄
, 
F‹mLi°
 *
ªque°
, 
TextLi°
 *
exåa_hódî
,

1475 
URLFûe
 *
ouf
, 
HReque°
 *
hr
, *
°©us
)

1477 
Så
 
tmp
;

1478 
sock
, 
scheme
;

1479 *
p
, *
q
, *
u
;

1480 
URLFûe
 
uf
;

1481 
HReque°
 
hr0
;

1482 #ifde‡
USE_SSL


1483 
SSL
 *
s¶h
 = 
NULL
;

1486 i‡(
hr
 =
NULL
)

1487 
hr
 = &
hr0
;

1489 i‡(
ouf
) {

1490 
uf
 = *
ouf
;

1493 
	`öô_°ªam
(&
uf
, 
SCM_MISSING
, 
NULL
);

1496 
u
 = 
uæ
;

1497 
scheme
 = 
	`gëURLScheme
(&
u
);

1498 i‡(
cuºít
 =
NULL
 && 
scheme
 =
SCM_MISSING
 && !
ArgvIsURL
)

1499 
u
 = 
	`fûe_to_uæ
(
uæ
);

1501 
u
 = 
uæ
;

1502 
ªåy
:

1503 
	`∑r£URL2
(
u
, 
pu
, 
cuºít
);

1504 i‡(
pu
->
scheme
 =
SCM_LOCAL
 &&Öu->
fûe
 =
NULL
) {

1505 i‡(
pu
->
œbñ
 !
NULL
) {

1507 
Så
 
tmp2
 = 
	`Så√w_ch¨p
("#");

1508 
	`Såˇt_ch¨p
(
tmp2
, 
pu
->
œbñ
);

1509 
pu
->
fûe
 = 
tmp2
->
±r
;

1510 
pu
->
ªÆ_fûe
 = 
	`˛ónupName
(
	`fûe_unquŸe
’u->
fûe
));

1511 
pu
->
œbñ
 = 
NULL
;

1515 #ifde‡
SOCK_DEBUG


1516 
	`sock_log
("given URL must beÇull string\n");

1518  
uf
;

1522 
uf
.
scheme
 = 
pu
->scheme;

1523 
uf
.
uæ
 = 
	`∑r£dURL2Så
(
pu
)->
±r
;

1524 
pu
->
is_noˇche
 = (
›ti⁄
->
Êag
 & 
RG_NOCACHE
);

1525 
uf
.
ext
 = 
	`fûíame_exãnsi⁄
(
pu
->
fûe
, 1);

1527 
hr
->
comm™d
 = 
HR_COMMAND_GET
;

1528 
hr
->
Êag
 = 0;

1529 
hr
->
ª„ªr
 = 
›ti⁄
->referer;

1530 
hr
->
ªque°
 =Ñequest;

1532 
pu
->
scheme
) {

1533 
SCM_LOCAL
:

1534 
SCM_LOCAL_CGI
:

1535 i‡(
ªque°
 &&Ñeque°->
body
)

1537 
uf
.
°ªam
 = 
	`√wFûeSåóm
(
	`loˇlcgi_po°
(
pu
->
ªÆ_fûe
,Öu->
quîy
,

1538 
ªque°
, 
›ti⁄
->
ª„ªr
),

1539 ((*)())
f˛o£
);

1542 
uf
.
°ªam
 = 
	`√wFûeSåóm
(
	`loˇlcgi_gë
(
pu
->
ªÆ_fûe
,Öu->
quîy
,

1543 
›ti⁄
->
ª„ªr
),

1544 ((*)())
f˛o£
);

1545 i‡(
uf
.
°ªam
) {

1546 
uf
.
is_cgi
 = 
TRUE
;

1547 
uf
.
scheme
 = 
pu
->schemê
SCM_LOCAL_CGI
;

1548  
uf
;

1550 
	`examöeFûe
(
pu
->
ªÆ_fûe
, &
uf
);

1551 i‡(
uf
.
°ªam
 =
NULL
) {

1552 i‡(
	`dú_exi°
(
pu
->
ªÆ_fûe
)) {

1553 
	`add_ödex_fûe
(
pu
, &
uf
);

1554 i‡(
uf
.
°ªam
 =
NULL
)

1555  
uf
;

1557 i‡(
documít_roŸ
 !
NULL
) {

1558 
tmp
 = 
	`Så√w_ch¨p
(
documít_roŸ
);

1559 i‡(
	`Såœ°ch¨
(
tmp
Ë!'/' && 
pu
->
fûe
[0] != '/')

1560 
	`Såˇt_ch¨
(
tmp
, '/');

1561 
	`Såˇt_ch¨p
(
tmp
, 
pu
->
fûe
);

1562 
p
 = 
	`˛ónupName
(
tmp
->
±r
);

1563 
q
 = 
	`˛ónupName
(
	`fûe_unquŸe
(
p
));

1564 i‡(
	`dú_exi°
(
q
)) {

1565 
pu
->
fûe
 = 
p
;

1566 
pu
->
ªÆ_fûe
 = 
q
;

1567 
	`add_ödex_fûe
(
pu
, &
uf
);

1568 i‡(
uf
.
°ªam
 =
NULL
) {

1569  
uf
;

1573 
	`examöeFûe
(
q
, &
uf
);

1574 i‡(
uf
.
°ªam
) {

1575 
pu
->
fûe
 = 
p
;

1576 
pu
->
ªÆ_fûe
 = 
q
;

1581 i‡(
uf
.
°ªam
 =
NULL
 && 
ªåyAsHâp
 && 
uæ
[0] != '/') {

1582 i‡(
scheme
 =
SCM_MISSING
 || schemê=
SCM_UNKNOWN
) {

1584 
u
 = 
	`Så√w_m_ch¨p
("hâp://", 
uæ
, 
NULL
)->
±r
;

1585 
ªåy
;

1588  
uf
;

1589 
SCM_FTP
:

1590 
SCM_FTPDIR
:

1591 i‡(
pu
->
fûe
 =
NULL
)

1592 
pu
->
fûe
 = 
	`ÆlocSå
("/", -1);

1593 i‡(
	`n⁄_nuŒ
(
FTP_¥oxy
) &&

1594 !
Do_nŸ_u£_¥oxy
 &&

1595 
pu
->
ho°
 !
NULL
 && !
	`check_no_¥oxy
(pu->host)) {

1596 
hr
->
Êag
 |
HR_FLAG_PROXY
;

1597 
sock
 = 
	`›íSockë
(
FTP_¥oxy_∑r£d
.
ho°
,

1598 
schemëabÀ
[
FTP_¥oxy_∑r£d
.
scheme
].
cmd«me
,

1599 
FTP_¥oxy_∑r£d
.
p‹t
);

1600 i‡(
sock
 < 0)

1601  
uf
;

1602 
uf
.
scheme
 = 
SCM_HTTP
;

1603 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1604 
	`wrôe
(
sock
, 
tmp
->
±r
,Åmp->
Àngth
);

1607 
uf
.
°ªam
 = 
	`›íFTPSåóm
(
pu
, &uf);

1608 
uf
.
scheme
 = 
pu
->scheme;

1609  
uf
;

1612 
SCM_HTTP
:

1613 #ifde‡
USE_SSL


1614 
SCM_HTTPS
:

1616 i‡(
pu
->
fûe
 =
NULL
)

1617 
pu
->
fûe
 = 
	`ÆlocSå
("/", -1);

1618 i‡(
ªque°
 &&Ñeque°->
mëhod
 =
FORM_METHOD_POST
 &&Ñeque°->
body
)

1619 
hr
->
comm™d
 = 
HR_COMMAND_POST
;

1620 i‡(
ªque°
 &&Ñeque°->
mëhod
 =
FORM_METHOD_HEAD
)

1621 
hr
->
comm™d
 = 
HR_COMMAND_HEAD
;

1623 #ifde‡
USE_SSL


1624 (
pu
->
scheme
 =
SCM_HTTPS
Ë? 
	`n⁄_nuŒ
(
HTTPS_¥oxy
) :

1626 
	`n⁄_nuŒ
(
HTTP_¥oxy
)Ë&& !
Do_nŸ_u£_¥oxy
 &&

1627 
pu
->
ho°
 !
NULL
 && !
	`check_no_¥oxy
(pu->host)) {

1628 
hr
->
Êag
 |
HR_FLAG_PROXY
;

1629 #ifde‡
USE_SSL


1630 i‡(
pu
->
scheme
 =
SCM_HTTPS
 && *
°©us
 =
HTST_CONNECT
) {

1631 
sock
 = 
	`s¶_sockë_of
(
ouf
->
°ªam
);

1632 i‡(!(
s¶h
 = 
	`›íSSLH™dÀ
(
sock
, 
pu
->
ho°
,

1633 &
uf
.
s¶_˚πifiˇã
))) {

1634 *
°©us
 = 
HTST_MISSING
;

1635  
uf
;

1638 i‡(
pu
->
scheme
 =
SCM_HTTPS
) {

1639 
sock
 = 
	`›íSockë
(
HTTPS_¥oxy_∑r£d
.
ho°
,

1640 
schemëabÀ
[
HTTPS_¥oxy_∑r£d
.
scheme
].

1641 
cmd«me
, 
HTTPS_¥oxy_∑r£d
.
p‹t
);

1642 
s¶h
 = 
NULL
;

1646 
sock
 = 
	`›íSockë
(
HTTP_¥oxy_∑r£d
.
ho°
,

1647 
schemëabÀ
[
HTTP_¥oxy_∑r£d
.
scheme
].

1648 
cmd«me
, 
HTTP_¥oxy_∑r£d
.
p‹t
);

1649 #ifde‡
USE_SSL


1650 
s¶h
 = 
NULL
;

1653 i‡(
sock
 < 0) {

1654 #ifde‡
SOCK_DEBUG


1655 
	`sock_log
("Can't open socket\n");

1657  
uf
;

1659 #ifde‡
USE_SSL


1660 i‡(
pu
->
scheme
 =
SCM_HTTPS
) {

1661 i‡(*
°©us
 =
HTST_NORMAL
) {

1662 
hr
->
comm™d
 = 
HR_COMMAND_CONNECT
;

1663 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1664 *
°©us
 = 
HTST_CONNECT
;

1667 
hr
->
Êag
 |
HR_FLAG_LOCAL
;

1668 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1669 *
°©us
 = 
HTST_NORMAL
;

1675 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1676 *
°©us
 = 
HTST_NORMAL
;

1680 
sock
 = 
	`›íSockë
(
pu
->
ho°
,

1681 
schemëabÀ
[
pu
->
scheme
].
cmd«me
,Öu->
p‹t
);

1682 i‡(
sock
 < 0) {

1683 *
°©us
 = 
HTST_MISSING
;

1684  
uf
;

1686 #ifde‡
USE_SSL


1687 i‡(
pu
->
scheme
 =
SCM_HTTPS
) {

1688 i‡(!(
s¶h
 = 
	`›íSSLH™dÀ
(
sock
, 
pu
->
ho°
,

1689 &
uf
.
s¶_˚πifiˇã
))) {

1690 *
°©us
 = 
HTST_MISSING
;

1691  
uf
;

1695 
hr
->
Êag
 |
HR_FLAG_LOCAL
;

1696 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1697 *
°©us
 = 
HTST_NORMAL
;

1699 #ifde‡
USE_SSL


1700 i‡(
pu
->
scheme
 =
SCM_HTTPS
) {

1701 
uf
.
°ªam
 = 
	`√wSSLSåóm
(
s¶h
, 
sock
);

1702 i‡(
s¶h
)

1703 
	`SSL_wrôe
(
s¶h
, 
tmp
->
±r
,Åmp->
Àngth
);

1705 
	`wrôe
(
sock
, 
tmp
->
±r
,Åmp->
Àngth
);

1706 if(
w3m_ªqlog
){

1707 
FILE
 *
ff
 = 
	`f›í
(
w3m_ªqlog
, "a");

1708 i‡(
s¶h
)

1709 
	`Âuts
("HTTPS:Ñeque° vü SSL\n", 
ff
);

1711 
	`Âuts
("HTTPS:Ñeque° wôhouàSSL\n", 
ff
);

1712 
	`fwrôe
(
tmp
->
±r
, (),Åmp->
Àngth
, 
ff
);

1713 
	`f˛o£
(
ff
);

1715 i‡(
hr
->
comm™d
 =
HR_COMMAND_POST
 &&

1716 
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
) {

1717 i‡(
s¶h
)

1718 
	`SSL_wrôe_‰om_fûe
(
s¶h
, 
ªque°
->
body
);

1720 
	`wrôe_‰om_fûe
(
sock
, 
ªque°
->
body
);

1722  
uf
;

1727 
	`wrôe
(
sock
, 
tmp
->
±r
,Åmp->
Àngth
);

1728 if(
w3m_ªqlog
){

1729 
FILE
 *
ff
 = 
	`f›í
(
w3m_ªqlog
, "a");

1730 
	`fwrôe
(
tmp
->
±r
, (),Åmp->
Àngth
, 
ff
);

1731 
	`f˛o£
(
ff
);

1733 i‡(
hr
->
comm™d
 =
HR_COMMAND_POST
 &&

1734 
ªque°
->
í˘y≥
 =
FORM_ENCTYPE_MULTIPART
)

1735 
	`wrôe_‰om_fûe
(
sock
, 
ªque°
->
body
);

1738 #ifde‡
USE_GOPHER


1739 
SCM_GOPHER
:

1740 i‡(
	`n⁄_nuŒ
(
GOPHER_¥oxy
) &&

1741 !
Do_nŸ_u£_¥oxy
 &&

1742 
pu
->
ho°
 !
NULL
 && !
	`check_no_¥oxy
(pu->host)) {

1743 
hr
->
Êag
 |
HR_FLAG_PROXY
;

1744 
sock
 = 
	`›íSockë
(
GOPHER_¥oxy_∑r£d
.
ho°
,

1745 
schemëabÀ
[
GOPHER_¥oxy_∑r£d
.
scheme
].
cmd«me
,

1746 
GOPHER_¥oxy_∑r£d
.
p‹t
);

1747 i‡(
sock
 < 0)

1748  
uf
;

1749 
uf
.
scheme
 = 
SCM_HTTP
;

1750 
tmp
 = 
	`HTTPªque°
(
pu
, 
cuºít
, 
hr
, 
exåa_hódî
);

1753 
sock
 = 
	`›íSockë
(
pu
->
ho°
,

1754 
schemëabÀ
[
pu
->
scheme
].
cmd«me
,Öu->
p‹t
);

1755 i‡(
sock
 < 0)

1756  
uf
;

1757 i‡(
pu
->
fûe
 =
NULL
)

1758 
pu
->
fûe
 = "1";

1759 
tmp
 = 
	`Så√w_ch¨p
(
	`fûe_unquŸe
(
pu
->
fûe
));

1760 
	`Såˇt_ch¨
(
tmp
, '\n');

1762 
	`wrôe
(
sock
, 
tmp
->
±r
,Åmp->
Àngth
);

1765 #ifde‡
USE_NNTP


1766 
SCM_NNTP
:

1767 
SCM_NNTP_GROUP
:

1768 
SCM_NEWS
:

1769 
SCM_NEWS_GROUP
:

1770 i‡(
pu
->
scheme
 =
SCM_NNTP
 ||Öu->schemê=
SCM_NEWS
)

1771 
uf
.
scheme
 = 
SCM_NEWS
;

1773 
uf
.
scheme
 = 
SCM_NEWS_GROUP
;

1774 
uf
.
°ªam
 = 
	`›íNewsSåóm
(
pu
);

1775  
uf
;

1777 
SCM_DATA
:

1778 i‡(
pu
->
fûe
 =
NULL
)

1779  
uf
;

1780 
p
 = 
	`Så√w_ch¨p
(
pu
->
fûe
)->
±r
;

1781 
q
 = 
	`°rchr
(
p
, ',');

1782 i‡(
q
 =
NULL
)

1783  
uf
;

1784 *
q
++ = '\0';

1785 
tmp
 = 
	`Så√w_ch¨p
(
q
);

1786 
q
 = 
	`°ºchr
(
p
, ';');

1787 i‡(
q
 !
NULL
 && !
	`°rcmp
(q, ";base64")) {

1788 *
q
 = '\0';

1789 
uf
.
ícodög
 = 
ENC_BASE64
;

1792 
tmp
 = 
	`Så_uæ_unquŸe
—mp, 
FALSE
, FALSE);

1793 
uf
.
°ªam
 = 
	`√wSåSåóm
(
tmp
);

1794 
uf
.
guess_ty≥
 = (*
p
 != '\0') ?Ö : "text/plain";

1795  
uf
;

1796 
SCM_UNKNOWN
:

1798  
uf
;

1800 
uf
.
°ªam
 = 
	`√wI≈utSåóm
(
sock
);

1801  
uf
;

1802 
	}
}

1806 
	$add_ödex_fûe
(
P¨£dURL
 *
pu
, 
URLFûe
 *
uf
)

1808 *
p
, *
q
;

1810 i‡(
ödex_fûe
 =
NULL
 || index_file[0] == '\0') {

1811 
uf
->
°ªam
 = 
NULL
;

1814 
p
 = 
	`Så√w_m_ch¨p
(
pu
->
fûe
, "/", 
	`fûe_quŸe
(
ödex_fûe
), 
NULL
)->
±r
;

1815 
p
 = 
	`˛ónupName
(p);

1816 
q
 = 
	`˛ónupName
(
	`fûe_unquŸe
(
p
));

1817 
	`examöeFûe
(
q
, 
uf
);

1818 i‡(
uf
->
°ªam
 =
NULL
)

1820 
pu
->
fûe
 = 
p
;

1821 
pu
->
ªÆ_fûe
 = 
q
;

1823 
	}
}

1826 
	$guessC⁄ã¡Ty≥FromTabÀ
(
èbÀ2
 *
èbÀ
, *
fûíame
)

1828 
èbÀ2
 *
t
;

1829 *
p
;

1830 i‡(
èbÀ
 =
NULL
)

1831  
NULL
;

1832 
p
 = &
fûíame
[
	`°æí
(filename) - 1];

1833 
fûíame
 < 
p
 && *p != '.')

1834 
p
--;

1835 i‡(
p
 =
fûíame
)

1836  
NULL
;

1837 
p
++;

1838 
t
 = 
èbÀ
;Å->
ôem1
;Å++) {

1839 i‡(!
	`°rcmp
(
p
, 
t
->
ôem1
))

1840  
t
->
ôem2
;

1842 
t
 = 
èbÀ
;Å->
ôem1
;Å++) {

1843 i‡(!
	`°rˇ£cmp
(
p
, 
t
->
ôem1
))

1844  
t
->
ôem2
;

1846  
NULL
;

1847 
	}
}

1850 
	$guessC⁄ã¡Ty≥
(*
fûíame
)

1852 *
ªt
;

1853 
i
;

1855 i‡(
fûíame
 =
NULL
)

1856  
NULL
;

1857 i‡(
mimëy≥s_li°
 =
NULL
)

1858 
no_u£r_mimëy≥s
;

1860 
i
 = 0; i < 
mimëy≥s_li°
->
nôem
; i++) {

1861 i‡((
ªt
 =

1862 
	`guessC⁄ã¡Ty≥FromTabÀ
(
U£rMimeTy≥s
[
i
], 
fûíame
)Ë!
NULL
)

1863  
ªt
;

1866 
no_u£r_mimëy≥s
:

1867  
	`guessC⁄ã¡Ty≥FromTabÀ
(
DeÁu…Guess
, 
fûíame
);

1868 
	}
}

1870 
TextLi°
 *

1871 
	$make_domaö_li°
(*
domaö_li°
)

1873 *
p
;

1874 
Så
 
tmp
;

1875 
TextLi°
 *
domaös
 = 
NULL
;

1877 
p
 = 
domaö_li°
;

1878 
tmp
 = 
	`Så√w_size
(64);

1879 *
p
) {

1880 *
p
 && 
	`IS_SPACE
(*p))

1881 
p
++;

1882 
	`Så˛ór
(
tmp
);

1883 *
p
 && !
	`IS_SPACE
(*p) && *p != ',')

1884 
	`Såˇt_ch¨
(
tmp
, *
p
++);

1885 i‡(
tmp
->
Àngth
 > 0) {

1886 i‡(
domaös
 =
NULL
)

1887 
domaös
 = 
	`√wTextLi°
();

1888 
	`pushText
(
domaös
, 
tmp
->
±r
);

1890 *
p
 && 
	`IS_SPACE
(*p))

1891 
p
++;

1892 i‡(*
p
 == ',')

1893 
p
++;

1895  
domaös
;

1896 
	}
}

1899 
	$domaö_m©ch
(*
∑t
, *
domaö
)

1901 i‡(
domaö
 =
NULL
)

1903 i‡(*
∑t
 == '.')

1904 
∑t
++;

1906 i‡(!
	`°rˇ£cmp
(
∑t
, 
domaö
))

1908 
domaö
 = 
	`°rchr
(domain, '.');

1909 i‡(
domaö
 =
NULL
)

1911 
domaö
++;

1913 
	}
}

1916 
	$check_no_¥oxy
(*
domaö
)

1918 
TextLi°Iãm
 *
é
;

1919 vﬁ©ûê
ªt
 = 0;

1920 
	`MySig«lH™dÀr
(*vﬁ©ûê
¥evå≠
Ë(
SIGNAL_ARG
Ë
NULL
;

1922 i‡(
NO_¥oxy_domaös
 =
NULL
 || NO_¥oxy_domaös->
nôem
 == 0 ||

1923 
domaö
 =
NULL
)

1925 
é
 = 
NO_¥oxy_domaös
->
fú°
;Å»!
NULL
;Å»é->
√xt
) {

1926 i‡(
	`domaö_m©ch
(
é
->
±r
, 
domaö
))

1929 i‡(!
NO¥oxy_√èddr
) {

1935 i‡(
	`SETJMP
(
Ab‹tLﬂdög
) != 0) {

1936 
ªt
 = 0;

1937 
íd
;

1939 
TRAP_ON
;

1941 #i‚de‡
INET6


1942 
ho°ít
 *
he
;

1943 
n
;

1944 **
h_addr_li°
;

1945 
addr
[4 * 16], 
buf
[5];

1947 
he
 = 
	`gëho°by«me
(
domaö
);

1948 i‡(!
he
) {

1949 
ªt
 = 0;

1950 
íd
;

1952 
h_addr_li°
 = (**)
he
->h_addr_list; *h_addr_list;

1953 
h_addr_li°
++) {

1954 
	`•rötf
(
addr
, "%d", 
h_addr_li°
[0][0]);

1955 
n
 = 1;Ç < 
he
->
h_Àngth
;Ç++) {

1956 
	`•rötf
(
buf
, ".%d", 
h_addr_li°
[0][
n
]);

1957 
	`°rˇt
(
addr
, 
buf
);

1959 
é
 = 
NO_¥oxy_domaös
->
fú°
;Å»!
NULL
;Å»é->
√xt
) {

1960 i‡(
	`°∫cmp
(
é
->
±r
, 
addr
, 
	`°æí
(tl->ptr)) == 0) {

1961 
ªt
 = 1;

1962 
íd
;

1967 
îr‹
;

1968 
addröfo
 
höts
;

1969 
addröfo
 *
ªs
, *
ªs0
;

1970 
addr
[4 * 16];

1971 *
af
;

1973 
af
 = 
ai_Ámûy_‹dî_èbÀ
[
DNS_‹dî
];;áf++) {

1974 
	`mem£t
(&
höts
, 0, (hints));

1975 
höts
.
ai_Ámûy
 = *
af
;

1976 
îr‹
 = 
	`gëaddröfo
(
domaö
, 
NULL
, &
höts
, &
ªs0
);

1977 i‡(
îr‹
) {

1978 i‡(*
af
 =
PF_UNSPEC
) {

1984 
ªs
 = 
ªs0
;Ñe†!
NULL
;Ñe†ªs->
ai_√xt
) {

1985 
ªs
->
ai_Ámûy
) {

1986 
AF_INET
:

1987 
	`öë_¡›
(
AF_INET
,

1988 &((
sockaddr_ö
 *)
ªs
->
ai_addr
)->
sö_addr
,

1989 
addr
, (addr));

1991 
AF_INET6
:

1992 
	`öë_¡›
(
AF_INET6
,

1993 &((
sockaddr_ö6
 *)
ªs
->
ai_addr
)->

1994 
sö6_addr
, 
addr
, (addr));

2000 
é
 = 
NO_¥oxy_domaös
->
fú°
;Å»!
NULL
;Å»é->
√xt
) {

2001 i‡(
	`°∫cmp
(
é
->
±r
, 
addr
, 
	`°æí
(tl->ptr)) == 0) {

2002 
	`‰ìaddröfo
(
ªs0
);

2003 
ªt
 = 1;

2004 
íd
;

2008 
	`‰ìaddröfo
(
ªs0
);

2009 i‡(*
af
 =
PF_UNSPEC
) {

2015 
íd
:

2016 
TRAP_OFF
;

2017  
ªt
;

2018 
	}
}

2021 
	$fûíame_exãnsi⁄
(*
∑th
, 
is_uæ
)

2023 *
œ°_dŸ
 = "", *
p
 = 
∑th
;

2024 
i
;

2026 i‡(
∑th
 =
NULL
)

2027  
œ°_dŸ
;

2028 i‡(*
p
 == '.')

2029 
p
++;

2030 ; *
p
;Ö++) {

2031 i‡(*
p
 == '.') {

2032 
œ°_dŸ
 = 
p
;

2034 i‡(
is_uæ
 && *
p
 == '?')

2037 i‡(*
œ°_dŸ
 == '.') {

2038 
i
 = 1; 
œ°_dŸ
[i] && i < 8; i++) {

2039 i‡(
is_uæ
 && !
	`IS_ALNUM
(
œ°_dŸ
[
i
]))

2042  
	`ÆlocSå
(
œ°_dŸ
, 
i
);

2045  
œ°_dŸ
;

2046 
	}
}

2048 #ifde‡
USE_EXTERNAL_URI_LOADER


2049 
èbÀ2
 **
	gurimëhods
;

2050 
èbÀ2
 
	gdeÁu…_urimëhods
[] = {

2052 {
NULL
, NULL}

2055 
èbÀ2
 *

2056 
	$lﬂdURIMëhods
(*
fûíame
)

2058 
FILE
 *
f
;

2059 
i
, 
n
;

2060 
Så
 
tmp
;

2061 
èbÀ2
 *
um
;

2062 *
up
, *
p
;

2064 
f
 = 
	`f›í
(
	`ex∑ndP©h
(
fûíame
), "r");

2065 i‡(
f
 =
NULL
)

2066  
NULL
;

2067 
i
 = 0;

2068 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

2069 i‡(
tmp
->
±r
[0] != '#')

2070 
i
++;

2072 
	`f£ek
(
f
, 0, 0);

2073 
n
 = 
i
;

2074 
um
 = 
	`New_N
(
èbÀ2
, 
n
 + 1);

2075 
i
 = 0;

2076 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

2077 i‡(
tmp
->
±r
[0] == '#')

2079 
	`IS_SPACE
(
	`Såœ°ch¨
(
tmp
)))

2080 
	`Såshrök
(
tmp
, 1);

2081 
up
 = 
p
 = 
tmp
->
±r
; *p != '\0';Ö++) {

2082 i‡(*
p
 == ':') {

2083 
um
[
i
].
ôem1
 = 
	`Så√w_ch¨p_n
(
up
, 
p
 - up)->
±r
;

2084 
p
++;

2088 i‡(*
p
 == '\0')

2090 *
p
 !'\0' && 
	`IS_SPACE
(*p))

2091 
p
++;

2092 
um
[
i
].
ôem2
 = 
	`Så√w_ch¨p
(
p
)->
±r
;

2093 
i
++;

2095 
um
[
i
].
ôem1
 = 
NULL
;

2096 
um
[
i
].
ôem2
 = 
NULL
;

2097 
	`f˛o£
(
f
);

2098  
um
;

2099 
	}
}

2102 
	$öôURIMëhods
()

2104 
TextLi°
 *
mëhodm≠_li°
 = 
NULL
;

2105 
TextLi°Iãm
 *
é
;

2106 
i
;

2108 i‡(
	`n⁄_nuŒ
(
urimëhodm≠_fûes
))

2109 
mëhodm≠_li°
 = 
	`make_domaö_li°
(
urimëhodm≠_fûes
);

2110 i‡(
mëhodm≠_li°
 =
NULL
)

2112 
urimëhods
 = 
	`New_N
(
èbÀ2
 *, (
mëhodm≠_li°
->
nôem
 + 1));

2113 
i
 = 0, 
é
 = 
mëhodm≠_li°
->
fú°
;Ål;Å»é->
√xt
) {

2114 
urimëhods
[
i
] = 
	`lﬂdURIMëhods
(
é
->
±r
);

2115 i‡(
urimëhods
[
i
])

2116 
i
++;

2118 
urimëhods
[
i
] = 
NULL
;

2119 
	}
}

2121 
Så


2122 
	$£¨chURIMëhods
(
P¨£dURL
 *
pu
)

2124 
èbÀ2
 *
ump
;

2125 
i
;

2126 
Så
 
scheme
 = 
NULL
;

2127 
Så
 
uæ
;

2128 *
p
;

2130 i‡(
pu
->
scheme
 !
SCM_UNKNOWN
)

2131  
NULL
;

2132 i‡(
urimëhods
 =
NULL
)

2133  
NULL
;

2134 
uæ
 = 
	`∑r£dURL2Så
(
pu
);

2135 
p
 = 
uæ
->
±r
; *p != '\0';Ö++) {

2136 i‡(*
p
 == ':') {

2137 
scheme
 = 
	`Så√w_ch¨p_n
(
uæ
->
±r
, 
p
 - url->ptr);

2141 i‡(
scheme
 =
NULL
)

2142  
NULL
;

2150 
i
 = 0; (
ump
 = 
urimëhods
[i]Ë!
NULL
; i++) {

2151 ; 
ump
->
ôem1
 !
NULL
; ump++) {

2152 i‡(
	`°rˇ£cmp
(
ump
->
ôem1
, 
scheme
->
±r
) == 0) {

2153  
	`S¥ötf
(
ump
->
ôem2
, 
	`uæ_quŸe
(
uæ
->
±r
));

2157 
ump
 = 
deÁu…_urimëhods
; ump->
ôem1
 !
NULL
; ump++) {

2158 i‡(
	`°rˇ£cmp
(
ump
->
ôem1
, 
scheme
->
±r
) == 0) {

2159  
	`S¥ötf
(
ump
->
ôem2
, 
	`uæ_quŸe
(
uæ
->
±r
));

2162  
NULL
;

2163 
	}
}

2177 
	#URI_PATTERN
 "([-;/?:@&=+$,a-zA-Z0-9_.!~*'()]|%[0-9A-Fa-f][0-9A-Fa-f])*"

	)

2179 
	$chkExã∫ÆURIBuf„r
(
Buf„r
 *
buf
)

2181 
i
;

2182 
èbÀ2
 *
ump
;

2184 
i
 = 0; (
ump
 = 
urimëhods
[i]Ë!
NULL
; i++) {

2185 ; 
ump
->
ôem1
 !
NULL
; ump++) {

2186 
	`ªAnch‹
(
buf
, 
	`S¥ötf
("%s:%s", 
ump
->
ôem1
, 
URI_PATTERN
)->
±r
);

2189 
ump
 = 
deÁu…_urimëhods
; ump->
ôem1
 !
NULL
; ump++) {

2190 
	`ªAnch‹
(
buf
, 
	`S¥ötf
("%s:%s", 
ump
->
ôem1
, 
URI_PATTERN
)->
±r
);

2192 
	}
}

2195 
P¨£dURL
 *

2196 
	$schemeToProxy
(
scheme
)

2198 
P¨£dURL
 *
pu
 = 
NULL
;

2199 
scheme
) {

2200 
SCM_HTTP
:

2201 
pu
 = &
HTTP_¥oxy_∑r£d
;

2203 #ifde‡
USE_SSL


2204 
SCM_HTTPS
:

2205 
pu
 = &
HTTPS_¥oxy_∑r£d
;

2208 
SCM_FTP
:

2209 
pu
 = &
FTP_¥oxy_∑r£d
;

2211 #ifde‡
USE_GOPHER


2212 
SCM_GOPHER
:

2213 
pu
 = &
GOPHER_¥oxy_∑r£d
;

2216 #ifde‡
DEBUG


2218 
	`ab‹t
();

2221  
pu
;

2222 
	}
}

	@version.c

2 
	#CURRENT_VERSION
 "w3m/0.5.2"

	)

4 #i‚de‡
FM_H


5 *
	gw3m_vîsi⁄
 = 
CURRENT_VERSION
;

	@w3mbookmark.c

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~"c⁄fig.h
"

5 
	~"Så.h
"

6 
	~"ödï.h
"

7 
	~"ãxéi°.h
"

8 
	~"∑r£èg.h
"

10 #i‡
LANG
 =
JA


12 
	#BKMARK_TITLE
 "•÷•√•Ø•ﬁ°º•Ø§Œ≈–œø"

	)

13 
	#BKMARK_ADD
 "≈–œø"

	)

14 
	#DEFAULT_SECTION
 "Ã§ ¨Œ‡"

	)

16 
	#BKMARK_TITLE
 "Regi°îÅÿmy bookm¨k"

	)

17 
	#BKMARK_ADD
 "ADD"

	)

18 
	#DEFAULT_SECTION
 "Mis˚Œ™eous"

	)

21 *
	gbkm¨k_§c1
 =

22 "<html>\n\
<hód>\n\
<tôÀ>" 
BKMARK_TITLE
 "</tôÀ>\n\
</hód>\n\
<body>\n\
<h1>" BKMARK_TITLE "</h1>\n\
<f‹m mëhodıo°á˘i⁄=\"fûe:///$LIB/" 
W3MBOOKMARK_CMDNAME
 "\">\n\
<inputÅype=hiddenÇame=mode value=register>\n\
<inputÅype=hiddenÇame=bmark value=\"%s\">\n\
<inputÅype=hiddenÇame=cookie value=\"%s\">\n\
<table cellpadding=0>\n";

34 *
	gbkm¨k_§c2
 =

35 "<å><td>New&nb•;Se˘i⁄:<td><öpuàty≥Òexà«meÚew£˘i⁄ size=60>\n\
<å><td>URL:<td><öpuàty≥Òexà«me=uæ vÆue=\"%s\" size=60>\n\
<å><td>TôÀ:<td><öpuàty≥Òexà«meÒôÀ vÆue=\"%s\" size=60>\n\
<å><td><öpuàty≥=submô vÆue=\"" 
BKMARK_ADD
 "\">\n\
</table>\n\
</form>\n\
</body>\n\
</html>\n";

44 #unde‡
FALSE


45 
	#FALSE
 0

	)

46 #unde‡
TRUE


47 
	#TRUE
 1

	)

49 
	gíd_£˘i⁄
[] =

52 *
	gLoˇl_cookõ
 = 
NULL
;

55 
	$¥öt_bookm¨k_∑√l
(*
bm¨k
, *
uæ
, *
tôÀ
, *
ch¨£t
)

57 
Så
 
tmp
, 
tmp2
;

58 
FILE
 *
f
;

59 *
p
;

61 i‡(
ch¨£t
 =
NULL
) {

62 
	`¥ötf
("Content-Type:Åext/html\n\n");

65 
	`¥ötf
("C⁄ã¡-Ty≥:Åext/html; ch¨£t=%s\n\n", 
ch¨£t
);

67 
	`¥ötf
(
bkm¨k_§c1
, 
	`html_quŸe
(
bm¨k
), html_quŸe(
Loˇl_cookõ
));

68 i‡((
f
 = 
	`f›í
(
bm¨k
, "r")Ë!
NULL
) {

69 
	`¥ötf
("<tr><td>Section:<td><selectÇame=\"section\">\n");

70 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

71 
	`Såªmovefú°•a˚s
(
tmp
);

72 i‡(
	`Sånˇ£cmp_ch¨p
(
tmp
, "<h2>", 4) == 0) {

73 
p
 = 
tmp
->
±r
 + 4;

74 
tmp2
 = 
	`Så√w
();

75 *
p
 && *p != '<')

76 
	`Såˇt_ch¨
(
tmp2
, *
p
++);

77 
	`¥ötf
("<›ti⁄ vÆue=\"%s\">%s\n", 
tmp2
->
±r
,

78 
tmp2
->
±r
);

81 
	`¥ötf
("</select>\n");

83 
	`¥ötf
(
bkm¨k_§c2
, 
	`html_quŸe
(
uæ
), html_quŸe(
tôÀ
));

84 
	}
}

88 
	$¸óã_√w_bookm¨k
(*
bm¨k
, *
£˘i⁄
, *
tôÀ
, *
uæ
,

89 *
mode
)

91 
FILE
 *
f
;

92 
f
 = 
	`f›í
(
bm¨k
, 
mode
);

93 i‡(
f
 =
NULL
) {

94 
	`¥ötf
("\nC™'à›í bookm¨k %s\n", 
bm¨k
);

95  
FALSE
;

98 
	`Ârötf
(
f
, "<html><head><title>Bookmarks</title></head>\n");

99 
	`Ârötf
(
f
, "<body>\n<h1>Bookmarks</h1>\n");

100 
	`Ârötf
(
f
, "<h2>%s</h2>\n<ul>\n", 
£˘i⁄
);

101 
	`Ârötf
(
f
, "<li><®hªf=\"%s\">%s</a>\n", 
uæ
, 
tôÀ
);

102 
	`Ârötf
(
f
, 
íd_£˘i⁄
);

103 
	`Ârötf
(
f
, "</ul>\n</body>\n</html>\n");

104 
	`f˛o£
(
f
);

106  
TRUE
;

107 
	}
}

110 
	$ö£π_bookm¨k
(*
bm¨k
, 
∑r£d_èg¨g
 *
d©a
)

112 *
uæ
, *
tôÀ
, *
£˘i⁄
;

113 
FILE
 *
f
;

114 
TextLi°
 *
é
 = 
	`√wTextLi°
();

115 
£˘i⁄_found
 = 0;

116 
bm¨k_added
 = 0;

117 
Så
 
tmp
, 
£˘i⁄_tmp
;

119 
uæ
 = 
	`èg_gë_vÆue
(
d©a
, "url");

120 
tôÀ
 = 
	`èg_gë_vÆue
(
d©a
, "title");

121 
£˘i⁄
 = 
	`èg_gë_vÆue
(
d©a
, "newsection");

122 i‡(
£˘i⁄
 =
NULL
 || *section == '\0')

123 
£˘i⁄
 = 
	`èg_gë_vÆue
(
d©a
, "section");

124 i‡(
£˘i⁄
 =
NULL
 || *section == '\0')

125 
£˘i⁄
 = 
DEFAULT_SECTION
;

127 i‡(
uæ
 =
NULL
 || *uæ ='\0' || 
tôÀ
 == NULL || *title == '\0') {

129  
FALSE
;

131 
uæ
 = 
	`html_quŸe
(url);

132 
tôÀ
 = 
	`html_quŸe
(title);

133 
£˘i⁄
 = 
	`html_quŸe
(section);

135 
f
 = 
	`f›í
(
bm¨k
, "r");

136 i‡(
f
 =
NULL
)

137  
	`¸óã_√w_bookm¨k
(
bm¨k
, 
£˘i⁄
, 
tôÀ
, 
uæ
, "w");

139 
£˘i⁄_tmp
 = 
	`S¥ötf
("<h2>%s</h2>\n", 
£˘i⁄
);

141 
tmp
 = 
	`Såfgës
(
f
);

142 i‡(
tmp
->
Àngth
 == 0)

144 i‡(
	`Såˇ£cmp
(
tmp
, 
£˘i⁄_tmp
) == 0)

145 
£˘i⁄_found
 = 1;

146 i‡(
£˘i⁄_found
 && !
bm¨k_added
) {

147 
	`Såªmovefú°•a˚s
(
tmp
);

148 i‡(
	`Såcmp_ch¨p
(
tmp
, 
íd_£˘i⁄
) == 0) {

149 
	`pushText
(
é
,

150 
	`S¥ötf
("<li><®hªf=\"%s\">%s</a>\n", 
uæ
,

151 
tôÀ
)->
±r
);

152 
bm¨k_added
 = 1;

155 i‡(!
bm¨k_added
 && 
	`Såˇ£cmp_ch¨p
(
tmp
, "</body>\n") == 0) {

156 
	`pushText
(
é
, 
	`S¥ötf
("<h2>%s</h2>\n<ul>\n", 
£˘i⁄
)->
±r
);

157 
	`pushText
(
é
,

158 
	`S¥ötf
("<li><®hªf=\"%s\">%s</a>\n", 
uæ
, 
tôÀ
)->
±r
);

159 
	`pushText
(
é
, 
íd_£˘i⁄
);

160 
	`pushText
(
é
, "</ul>\n");

161 
bm¨k_added
 = 1;

163 
	`pushText
(
é
, 
tmp
->
±r
);

165 
	`f˛o£
(
f
);

166 i‡(!
bm¨k_added
) {

169  
	`¸óã_√w_bookm¨k
(
bm¨k
, 
£˘i⁄
, 
tôÀ
, 
uæ
, "a");

171 
f
 = 
	`f›í
(
bm¨k
, "w");

172 
é
->
nôem
) {

173 
	`Âuts
(
	`p›Text
(
é
), 
f
);

175 
	`f˛o£
(
f
);

176  
TRUE
;

177 
	}
}

180 
	$maö
(
¨gc
, *
¨gv
[], **
ívp
)

182 *
	`gëív
();

183 *
p
;

184 
Àngth
;

185 
Så
 
qs
 = 
NULL
;

186 
∑r£d_èg¨g
 *
cgürg
;

187 *
mode
;

188 *
bm¨k
;

189 *
uæ
;

190 *
tôÀ
;

191 *
ch¨£t
;

192 *
£¡_cookõ
;

194 
	`GC_INIT
();

195 
p
 = 
	`gëív
("REQUEST_METHOD");

196 i‡(
p
 =
NULL
 || 
	`°rˇ£cmp
(p, "post"))

197 
ªque°_îr
;

198 
p
 = 
	`gëív
("CONTENT_LENGTH");

199 i‡(
p
 =
NULL
 || (
Àngth
 = 
	`©oi
(p)) <= 0)

200 
ªque°_îr
;

202 
qs
 = 
	`Såfgës
(
°dö
);

203 
	`Såch›
(
qs
);

204 i‡(
qs
->
Àngth
 !=Üength)

205 
ªque°_îr
;

206 
cgürg
 = 
	`cgi°r2èg¨g
(
qs
->
±r
);

208 
p
 = 
	`gëív
("LOCAL_COOKIE_FILE");

209 i‡(
p
) {

210 
FILE
 *
f
 = 
	`f›í
(
p
, "r");

211 i‡(
f
) {

212 
Loˇl_cookõ
 = 
	`Såfgës
(
f
)->
±r
;

213 
	`f˛o£
(
f
);

216 
£¡_cookõ
 = 
	`èg_gë_vÆue
(
cgürg
, "cookie");

217 i‡(
£¡_cookõ
 =
NULL
 || 
Loˇl_cookõ
 == NULL ||

218 
	`°rcmp
(
£¡_cookõ
, 
Loˇl_cookõ
) != 0) {

220 
	`¥ötf
("Content-Type:Åext/plain\n\n");

221 
	`¥ötf
("Local cookie doesn't match: It may beán illegal invocation\n");

222 
	`exô
(1);

225 
mode
 = 
	`èg_gë_vÆue
(
cgürg
, "mode");

226 
bm¨k
 = 
	`ex∑ndP©h
(
	`èg_gë_vÆue
(
cgürg
, "bmark"));

227 
uæ
 = 
	`èg_gë_vÆue
(
cgürg
, "url");

228 
tôÀ
 = 
	`èg_gë_vÆue
(
cgürg
, "title");

229 
ch¨£t
 = 
	`èg_gë_vÆue
(
cgürg
, "charset");

230 i‡(
bm¨k
 =
NULL
 || 
uæ
 == NULL)

231 
ªque°_îr
;

232 i‡(
mode
 && !
	`°rcmp
(mode, "panel")) {

233 i‡(
tôÀ
 =
NULL
)

234 
tôÀ
 = "";

235 
	`¥öt_bookm¨k_∑√l
(
bm¨k
, 
uæ
, 
tôÀ
, 
ch¨£t
);

237 i‡(
mode
 && !
	`°rcmp
(mode, "register")) {

238 
	`¥ötf
("Content-Type:Åext/plain\n");

239 i‡(
	`ö£π_bookm¨k
(
bm¨k
, 
cgürg
)) {

240 
	`¥ötf
("w3m-control: BACK\n");

241 
	`¥ötf
("w3m-control: BACK\n");

243 
	`¥ötf
("\n");

247 
ªque°_îr
:

248 
	`¥ötf
("Content-Type:Åext/plain\n\n");

249 
	`¥ötf
("Incom∂ëêReque°: %s\n", 
qs
 ? qs->
±r
 : "(null)");

250 
	`exô
(1);

251 
	}
}

	@w3mhelperpanel.c

2 
	~<î∫o.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"c⁄fig.h
"

7 
	~"Så.h
"

8 
	~"ödï.h
"

9 
	~"ãxéi°.h
"

10 
	~"∑r£èg.h
"

11 
	~"my˘y≥.h
"

13 #i‡
LANG
 =
JA


15 
	#MSG_TITLE
 "≥∞…Ù•”•Â°º•¢§Œ ‘Ω∏"

	)

16 
	#MSG_NEW_ENTRY
 "ø∑µ¨≈–œø"

	)

17 
	#MSG_TYPE
 "•«°º•ø•ø•§•◊"

	)

18 
	#MSG_COMMAND
 "≥∞…Ù•≥•ﬁ•Û•…"

	)

19 
	#MSG_REGISTER
 "≈–œø"

	)

20 
	#MSG_DELETE
 "∫ÔΩ¸"

	)

21 
	#MSG_DOIT
 "º¬π‘"

	)

23 
	#MSG_TITLE
 "Exã∫Æ Võwî†Sëup"

	)

24 
	#MSG_NEW_ENTRY
 "New E¡ry"

	)

25 
	#MSG_TYPE
 "Ty≥"

	)

26 
	#MSG_COMMAND
 "Comm™d"

	)

27 
	#MSG_REGISTER
 "Regi°î"

	)

28 
	#MSG_DELETE
 "Dñëe"

	)

29 
	#MSG_DOIT
 "Dÿô"

	)

32 *
	gloˇl_cookõ
;

35 
	$exåa˘MaûˇpE¡ry
(*
mˇp_íåy
, **
ty≥
, **
cmd
)

37 
j
;

39 *
mˇp_íåy
 && 
	`IS_SPACE
(*mcap_entry))

40 
mˇp_íåy
++;

41 
j
 = 0;

42 
mˇp_íåy
[
j
] && mˇp_íåy[j] !';' && !
	`IS_SPACE
(mcap_entry[j]);

43 
j
++) ;

44 *
ty≥
 = 
	`ÆlocSå
(
mˇp_íåy
, 
j
);

45 i‡(
mˇp_íåy
[
j
] == ';')

46 
j
++;

47 
mˇp_íåy
[
j
] && 
	`IS_SPACE
(mcap_entry[j]))

48 
j
++;

49 *
cmd
 = 
	`ÆlocSå
(&
mˇp_íåy
[
j
], -1);

50 
	}
}

53 
	$bye
(c⁄° *
a˘i⁄
, c⁄° *
maûˇp
)

55 
	`¥ötf
("C⁄ã¡-Ty≥:Åext/∂aö\n\n%†%s\n", 
a˘i⁄
, 
maûˇp
);

56 
	`exô
(1);

57 
	}
}

60 
	$¥ötMaûˇpP™ñ
(*
maûˇp
)

62 
FILE
 *
f
;

63 
Så
 
tmp
;

64 *
ty≥
, *
võwî
;

66 i‡((
f
 = 
	`f›í
(
maûˇp
, "π")Ë=
NULL
) {

67 i‡(
î∫o
 !
ENOENT
)

68 
	`bye
("C™'à›í", 
maûˇp
);

70 i‡(!(
f
 = 
	`f›í
(
maûˇp
, "a+")))

71 
	`bye
("C™'à›í", 
maûˇp
);

74 *
SysMaûˇp
 = 
	`gëív
("SYS_MAILCAP");

75 
FILE
 *
s
 = 
	`f›í
(
SysMaûˇp
 ? SysMailcap : "/etc/mailcap", "r");

76 i‡(
s
) {

77 
buf„r
[256];

78 
	`fgës
(
buf„r
,  buf„r, 
s
))

79 
	`Âuts
(
buf„r
, 
f
);

80 
	`f˛o£
(
s
);

81 
	`ªwöd
(
f
);

85 #i‡
LANG
 =
JA


87 
	`¥ötf
("Content-Type:Åext/html; charset=EUC-JP\n\n");

89 
	`¥ötf
("Content-Type:Åext/html\n\n");

91 
	`¥ötf
("<html>\n<head>\n<title>%s</title>\n</head>\n<body>\n<h1>%s</h1>\n",

92 
MSG_TITLE
, MSG_TITLE);

93 
	`¥ötf
("<f‹m mëhodıo°á˘i⁄=\"fûe:///$LIB/" 
W3MHELPERPANEL_CMDNAME


95 
	`¥ötf
("<inputÅype=hiddenÇame=mode value=edit>\n");

96 
	`¥ötf
("<inputÅype=hiddenÇame=cookie value=\"%s\">\n",

97 
	`html_quŸe
(
loˇl_cookõ
));

98 
	`¥ötf
("<table>\n<tr><td>%s:<td>%s=<inputÅype=textÇame=newtype size=40>\n\
<tr><td><td>%s=<inputÅype=textÇame=newcmd size=40>\n\
<tr><td><inputÅype=submitÇame=submit value=\"%s\">\n</table>\n",

101 
MSG_NEW_ENTRY
, 
MSG_TYPE
, 
MSG_COMMAND
, 
MSG_REGISTER
);

102 
	`¥ötf
("<p><hr width=50%%><p>\n<table border='0' cellpadding='0'>\n\
<tr><thálign=left><b>%s</b><th><b>%s</b>\n",

104 
MSG_TYPE
, 
MSG_COMMAND
);

105 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

106 i‡(
tmp
->
±r
[0] == '#')

108 
	`Såch›
(
tmp
);

109 
	`exåa˘MaûˇpE¡ry
(
tmp
->
±r
, &
ty≥
, &
võwî
);

110 
	`¥ötf
("<å vÆignÒ›><td>%s<td>%s<tdÇowøp>", 
	`html_quŸe
(
ty≥
),

111 
	`html_quŸe
(
võwî
));

112 
	`¥ötf
("<inputÅype=checkboxÇame=delete value=\"%s\">%s\n",

113 
	`html_quŸe
(
ty≥
), 
MSG_DELETE
);

115 
	`¥ötf
("</table>\n<inputÅype=submitÇame=submit value=\"%s\">\n</form>\n\
</body>\n</html>\n",

117 
MSG_DOIT
);

118 
	}
}

121 
	$edôMaûˇp
(*
maûˇp
, 
∑r£d_èg¨g
 *
¨gs
)

123 
TextLi°
 *
t
 = 
	`√wTextLi°
();

124 
TextLi°Iãm
 *
ti
;

125 
FILE
 *
f
;

126 
Så
 
tmp
;

127 *
ty≥
, *
võwî
;

128 
∑r£d_èg¨g
 *
a
;

129 
dñëe_ô
;

131 i‡((
f
 = 
	`f›í
(
maûˇp
, "π")Ë=
NULL
)

132 
	`bye
("C™'à›í", 
maûˇp
);

134 
tmp
 = 
	`Såfgës
(
f
),Åmp->
Àngth
 > 0) {

135 i‡(
tmp
->
±r
[0] == '#')

137 
	`Såch›
(
tmp
);

138 
	`exåa˘MaûˇpE¡ry
(
tmp
->
±r
, &
ty≥
, &
võwî
);

139 
dñëe_ô
 = 0;

140 
a
 = 
¨gs
;á !
NULL
;á =á->
√xt
) {

141 i‡(!
	`°rcmp
(
a
->
¨g
, "dñëe"Ë&& !°rcmp◊->
vÆue
, 
ty≥
)) {

142 
dñëe_ô
 = 1;

146 i‡(!
dñëe_ô
)

147 
	`pushText
(
t
, 
	`S¥ötf
("%s;\t%s\n", 
ty≥
, 
võwî
)->
±r
);

149 
ty≥
 = 
	`èg_gë_vÆue
(
¨gs
, "newtype");

150 
võwî
 = 
	`èg_gë_vÆue
(
¨gs
, "newcmd");

151 i‡(
ty≥
 !
NULL
 && *ty≥ !'\0' && 
võwî
 != NULL && *viewer != '\0')

152 
	`pushText
(
t
, 
	`S¥ötf
("%s;\t%s\n", 
ty≥
, 
võwî
)->
±r
);

153 
	`f˛o£
(
f
);

154 i‡((
f
 = 
	`f›í
(
maûˇp
, "w")Ë=
NULL
)

155 
	`bye
("C™'àwrôêto", 
maûˇp
);

157 
ti
 = 
t
->
fú°
;Åò!
NULL
;Åòti->
√xt
)

158 
	`Âuts
(
ti
->
±r
, 
f
);

159 
	`f˛o£
(
f
);

160 
	`¥ötf
("Content-Type:Åext/plain\n");

161 
	`¥ötf
("w3m-control: BACK\nw3m-control: BACK\n");

162 
	`¥ötf
("w3m-control: REINIT MAILCAP\n");

163 
	}
}

166 
	$maö
(
¨gc
, *
¨gv
[], **
ívp
)

168 
Så
 
maûˇpfûe
;

169 *
	`gëív
();

170 *
p
;

171 
Àngth
;

172 
Så
 
qs
 = 
NULL
;

173 
∑r£d_èg¨g
 *
cgürg
;

174 *
mode
;

175 *
£¡_cookõ
;

177 
	`GC_INIT
();

178 
p
 = 
	`gëív
("REQUEST_METHOD");

179 i‡(
p
 =
NULL
 || 
	`°rˇ£cmp
(p, "post"))

180 
ªque°_îr
;

181 
p
 = 
	`gëív
("CONTENT_LENGTH");

182 i‡(
p
 =
NULL
 || (
Àngth
 = 
	`©oi
(p)) <= 0)

183 
ªque°_îr
;

185 
qs
 = 
	`Såfgës
(
°dö
);

186 
	`Såch›
(
qs
);

187 i‡(
qs
->
Àngth
 !=Üength)

188 
ªque°_îr
;

189 
cgürg
 = 
	`cgi°r2èg¨g
(
qs
->
±r
);

191 
p
 = 
	`gëív
("LOCAL_COOKIE_FILE");

192 i‡(
p
) {

193 
FILE
 *
f
 = 
	`f›í
(
p
, "r");

194 i‡(
f
) {

195 
loˇl_cookõ
 = 
	`Såfgës
(
f
)->
±r
;

196 
	`f˛o£
(
f
);

199 
£¡_cookõ
 = 
	`èg_gë_vÆue
(
cgürg
, "cookie");

200 i‡(
loˇl_cookõ
 =
NULL
 || 
£¡_cookõ
 == NULL ||

201 
	`°rcmp
(
loˇl_cookõ
, 
£¡_cookõ
) != 0) {

203 
	`bye
("Local cookie doesn't match: It may beán illegalÉxecution", "");

206 
mode
 = 
	`èg_gë_vÆue
(
cgürg
, "mode");

207 
maûˇpfûe
 = 
	`Så√w_ch¨p
(
	`ex∑ndP©h
(
USER_MAILCAP
));

208 i‡(
mode
 && !
	`°rcmp
(mode, "edit")) {

209 *
ª„ªr
;

211 i‡((
ª„ªr
 = 
	`gëív
("HTTP_REFERER")Ë!
NULL
) {

212 i‡(
	`°∫cmp
(
ª„ªr
, "file://", 7) != 0 &&

213 
	`°∫cmp
(
ª„ªr
, "exec://", 7) != 0) {

215 
	`bye
("Iàmay bê™ iŒegÆÉxecuti⁄\¿ª„ªr=", 
ª„ªr
);

219 
	`edôMaûˇp
(
maûˇpfûe
->
±r
, 
cgürg
);

223 
	`¥ötMaûˇpP™ñ
(
maûˇpfûe
->
±r
);

227 
ªque°_îr
:

228 
	`bye
("Incom∂ëêReque°:", 
qs
 ? qs->
±r
 : "(null)");

229 
	`exô
(1);

230 
	}
}

	@w3mimg/fb/fb.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<uni°d.h
>

10 
	~<f˙é.h
>

11 
	~<limôs.h
>

12 
	~<î∫o.h
>

13 
	~<sys/io˘l.h
>

14 
	~<sys/mm™.h
>

15 
	~<löux/fb.h
>

17 
	~"fb.h
"

19 
	#FB_ENV
 "FRAMEBUFFER"

	)

20 
	#FB_DEFDEV
 "/dev/fb0"

	)

22 
	#MONO_OFFSET_8BIT
 0x40

	)

23 
	#COLORS_MONO_8BIT
 0x40

	)

24 
	#MONO_MASK_8BIT
 0xFC

	)

25 
	#MONO_SHIFT_8BIT
 2

	)

27 
	#COLOR_OFFSET_8BIT
 0x80

	)

28 
	#COLORS_8BIT
 0x80

	)

29 
	#RED_MASK_8BIT
 0xC0

	)

30 
	#GREEN_MASK_8BIT
 0xE0

	)

31 
	#BLUE_MASK_8BIT
 0xC0

	)

32 
	#RED_SHIFT_8BIT
 1

	)

33 
	#GREEN_SHIFT_8BIT
 3

	)

34 
	#BLUE_SHIFT_8BIT
 6

	)

36 
	#FALSE
 0

	)

37 
	#TRUE
 1

	)

39 
	#IMAGE_SIZE_MAX
 10000

	)

41 
fb_cm≠
 *
fb_cm≠_¸óã
(
fb_fix_s¸ìnöfo
 *,

42 
fb_v¨_s¸ìnöfo
 *);

43 
fb_cm≠_de°roy
(
fb_cm≠
 *
cm≠
);

44 
fb_fs¸n_gë
(
fbÂ
, 
fb_fix_s¸ìnöfo
 *
scöfo
);

45 *
fb_mm≠
(
fbÂ
, 
fb_fix_s¸ìnöfo
 *
scöfo
);

46 
fb_munm≠
(*
buf
, 
fb_fix_s¸ìnöfo
 *
scöfo
);

47 
fb_vs¸n_gë
(
fbÂ
, 
fb_v¨_s¸ìnöfo
 *
scöfo
);

48 
fb_cm≠_£t
(
fbÂ
, 
fb_cm≠
 *
cm≠
);

49 
fb_cm≠_gë
(
fbÂ
, 
fb_cm≠
 *
cm≠
);

50 
fb_cm≠_öô
();

51 
fb_gë_cm≠_ödex
(
r
, 
g
, 
b
);

52 
fb_gë_∑cked_cﬁ‹
(
r
, 
g
, 
b
);

54 
fb_fix_s¸ìnöfo
 
	gfscöfo
;

55 
fb_v¨_s¸ìnöfo
 
	gvscöfo
;

56 
fb_cm≠
 *
	gcm≠
 = 
NULL
, *
	gcm≠_‹g
 = NULL;

57 
	gis_›í
 = 
FALSE
;

58 
	gfbÂ
 = -1;

59 
size_t
 
	gpixñ_size
 = 0;

60 *
	gbuf
 = 
NULL
;

63 
	$fb_›í
()

65 *
fbdev
 = { 
FB_DEFDEV
 };

67 i‡(
is_›í
 =
TRUE
)

70 i‡(
	`gëív
(
FB_ENV
)) {

71 
fbdev
 = 
	`gëív
(
FB_ENV
);

74 i‡((
fbÂ
 = 
	`›í
(
fbdev
, 
O_RDWR
)) == -1) {

75 
	`Ârötf
(
°dîr
, "›í %†îr‹\n", 
fbdev
);

76 
ERR_END
;

79 i‡(
	`fb_fs¸n_gë
(
fbÂ
, &
fscöfo
)) {

80 
ERR_END
;

83 i‡(
	`fb_vs¸n_gë
(
fbÂ
, &
vscöfo
)) {

84 
ERR_END
;

87 i‡((
cm≠
 = 
	`fb_cm≠_¸óã
(&
fscöfo
, &
vscöfo
)Ë=(
fb_cm≠
 *)-1) {

88 
ERR_END
;

91 i‡(!(
buf
 = 
	`fb_mm≠
(
fbÂ
, &
fscöfo
))) {

92 
	`Ârötf
(
°dîr
, "Can'tállocate memory.\n");

93 
ERR_END
;

96 i‡(
fscöfo
.
ty≥
 !
FB_TYPE_PACKED_PIXELS
) {

97 
	`Ârötf
(
°dîr
, "ThisÅype of framebuffer isÇot supported.\n");

98 
ERR_END
;

101 i‡(
fscöfo
.
visuÆ
 =
FB_VISUAL_PSEUDOCOLOR
 && 
vscöfo
.
bôs_≥r_pixñ
 == 8) {

102 i‡(
	`fb_cm≠_gë
(
fbÂ
, 
cm≠
)) {

103 
	`Ârötf
(
°dîr
, "Can't get color map.\n");

104 
	`fb_cm≠_de°roy
(
cm≠
);

105 
cm≠
 = 
NULL
;

106 
ERR_END
;

109 i‡(
	`fb_cm≠_öô
())

110 
ERR_END
;

112 
pixñ_size
 = 1;

114 i‡((
fscöfo
.
visuÆ
 =
FB_VISUAL_TRUECOLOR
 ||

115 
fscöfo
.
visuÆ
 =
FB_VISUAL_DIRECTCOLOR
) &&

116 (
vscöfo
.
bôs_≥r_pixñ
 == 15 ||

117 
vscöfo
.
bôs_≥r_pixñ
 == 16 ||

118 
vscöfo
.
bôs_≥r_pixñ
 == 24 || vscinfo.bits_per_pixel == 32)) {

119 
pixñ_size
 = (
vscöfo
.
bôs_≥r_pixñ
 + 7Ë/ 
CHAR_BIT
;

122 
	`Ârötf
(
°dîr
, "ThisÅype of framebuffer isÇot supported.\n");

123 
ERR_END
;

126 
is_›í
 = 
TRUE
;

129 
ERR_END
:

130 
	`fb_˛o£
();

132 
	}
}

135 
	$fb_˛o£
()

137 i‡(
is_›í
 !
TRUE
)

140 i‡(
cm≠
 !
NULL
) {

141 
	`fb_cm≠_de°roy
(
cm≠
);

142 
cm≠
 = 
NULL
;

144 i‡(
cm≠_‹g
 !
NULL
) {

145 
	`fb_cm≠_£t
(
fbÂ
, 
cm≠_‹g
);

146 
	`fb_cm≠_de°roy
(
cm≠_‹g
);

147 
cm≠
 = 
NULL
;

149 i‡(
buf
 !
NULL
) {

150 
	`fb_munm≠
(
buf
, &
fscöfo
);

151 
buf
 = 
NULL
;

154 i‡(
fbÂ
 >= 0) {

155 
	`˛o£
(
fbÂ
);

158 
is_›í
 = 
FALSE
;

159 
	}
}

163 
FB_IMAGE
 *

164 
	$fb_image_√w
(
width
, 
height
)

166 
FB_IMAGE
 *
image
;

168 i‡(
is_›í
 !
TRUE
)

169  
NULL
;

171 i‡(
width
 > 
IMAGE_SIZE_MAX
 || 
height
 > IMAGE_SIZE_MAX || width < 1

172 || 
height
 < 1)

173  
NULL
;

175 
image
 = 
	`mÆloc
((*image));

176 i‡(
image
 =
NULL
)

177  
NULL
;

179 
image
->
d©a
 = 
	`ˇŒoc
((*(image->d©a)), 
width
 * 
height
 * 
pixñ_size
);

180 i‡(
image
->
d©a
 =
NULL
) {

181 
	`‰ì
(
image
);

182  
NULL
;

185 
image
->
num
 = 1;

186 
image
->
id
 = 0;

187 
image
->
dñay
 = 0;

189 
image
->
width
 = width;

190 
image
->
height
 = height;

191 
image
->
row°ride
 = 
width
 * 
pixñ_size
;

192 
image
->
Àn
 = 
width
 * 
height
 * 
pixñ_size
;

194  
image
;

195 
	}
}

198 
	$fb_image_‰ì
(
FB_IMAGE
 * 
image
)

200 i‡(
image
 =
NULL
)

203 i‡(
image
->
d©a
 !
NULL
)

204 
	`‰ì
(
image
->
d©a
);

206 
	`‰ì
(
image
);

207 
	}
}

210 
	$fb_image_p£t
(
FB_IMAGE
 * 
image
, 
x
, 
y
, 
r
, 
g
, 
b
)

212 
w‹k
;

214 i‡(
image
 =
NULL
 || 
is_›í
 !
TRUE
 || 
x
 >image->
width


215 || 
y
 >
image
->
height
)

218 
w‹k
 = 
	`fb_gë_∑cked_cﬁ‹
(
r
, 
g
, 
b
);

219 
	`mem˝y
(
image
->
d©a
 + image->
row°ride
 * 
y
 + 
pixñ_size
 * 
x
, &
w‹k
,

220 
pixñ_size
);

221 
	}
}

224 
	$fb_image_fûl
(
FB_IMAGE
 * 
image
, 
r
, 
g
, 
b
)

226 
w‹k
;

227 
off£t
;

229 i‡(
image
 =
NULL
 || 
is_›í
 !
TRUE
)

232 
w‹k
 = 
	`fb_gë_∑cked_cﬁ‹
(
r
, 
g
, 
b
);

234 
off£t
 = 0; off£à< 
image
->
Àn
; off£à+
pixñ_size
) {

235 
	`mem˝y
(
image
->
d©a
 + 
off£t
, &
w‹k
, 
pixñ_size
);

237 
	}
}

240 
	$fb_image_døw
(
FB_IMAGE
 * 
image
, 
x
, 
y
, 
sx
, 
sy
, 
width
,

241 
height
)

243 
i
, 
off£t_fb
, 
off£t_img
;

245 i‡(
image
 =
NULL
 || 
is_›í
 !
TRUE
 ||

246 
sx
 > 
image
->
width
 || 
sy
 > image->
height
 ||

247 
x
 > 
	`fb_width
(Ë|| 
y
 > 
	`fb_height
())

250 i‡(
sx
 + 
width
 > 
image
->width)

251 
width
 = 
image
->width - 
sx
;

253 i‡(
sy
 + 
height
 > 
image
->height)

254 
height
 = 
image
->heighà- 
sy
;

256 i‡(
x
 + 
width
 > 
	`fb_width
())

257 
width
 = 
	`fb_width
(Ë- 
x
;

259 i‡(
y
 + 
height
 > 
	`fb_height
())

260 
height
 = 
	`fb_height
(Ë- 
y
;

262 
off£t_fb
 = 
fscöfo
.
löe_Àngth
 * 
y
 + 
pixñ_size
 * 
x
;

263 
off£t_img
 = 
image
->
row°ride
 * 
sy
 + 
pixñ_size
 * 
sx
;

264 
i
 = 0; i < 
height
; i++) {

265 
	`mem˝y
(
buf
 + 
off£t_fb
, 
image
->
d©a
 + 
off£t_img
, 
pixñ_size
 * 
width
);

266 
off£t_fb
 +
fscöfo
.
löe_Àngth
;

267 
off£t_img
 +
image
->
row°ride
;

271 
	}
}

274 
	$fb_image_c›y
(
FB_IMAGE
 * 
de°
, FB_IMAGE * 
§c
)

276 i‡(
de°
 =
NULL
 || 
§c
 == NULL)

279 i‡(
de°
->
Àn
 !
§c
->len)

282 
	`mem˝y
(
de°
->
d©a
, 
§c
->d©a, src->
Àn
);

283 
	}
}

287 
FB_IMAGE
 **

288 
	$fb_‰ame_√w
(
w
, 
h
, 
n
)

290 
FB_IMAGE
 **
‰ame
;

291 
i
, 
îr‹
 = 0;

293 i‡(
w
 > 
IMAGE_SIZE_MAX
 || 
h
 > IMAGE_SIZE_MAX || w < 1 || h < 1 || 
n
 < 1)

294  
NULL
;

296 
‰ame
 = 
	`mÆloc
((*‰ameË* 
n
);

297 i‡(
‰ame
 =
NULL
)

298  
NULL
;

300 
i
 = 0; i < 
n
; i++) {

301 
‰ame
[
i
] = 
	`fb_image_√w
(
w
, 
h
);

302 
‰ame
[
i
]->
num
 = 
n
;

303 
‰ame
[
i
]->
id
 = i;

304 
‰ame
[
i
]->
dñay
 = 1000;

305 i‡(
‰ame
[
i
] =
NULL
)

306 
îr‹
 = 1;

309 i‡(
îr‹
) {

310 
	`fb_‰ame_‰ì
(
‰ame
);

311  
NULL
;

314  
‰ame
;

315 
	}
}

319 
	$fb_‰ame_‰ì
(
FB_IMAGE
 ** 
‰ame
)

321 
i
, 
n
;

323 i‡(
‰ame
 =
NULL
)

326 
n
 = 
‰ame
[0]->
num
;

327 
i
 = 0; i < 
n
; i++) {

328 
	`fb_image_‰ì
(
‰ame
[
i
]);

330 
	`‰ì
(
‰ame
);

331 
	}
}

334 
	$fb_width
()

336 i‡(
is_›í
 !
TRUE
)

339  
vscöfo
.
xªs
;

340 
	}
}

343 
	$fb_height
()

345 i‡(
is_›í
 !
TRUE
)

348  
vscöfo
.
yªs
;

349 
	}
}

352 
	$fb_˛ór
(
x
, 
y
, 
w
, 
h
, 
r
, 
g
, 
b
)

354 
i
, 
off£t_fb
;

355 
º
 = -1, 
gg
 = -1, 
bb
 = -1;

356 *
tmp
 = 
NULL
;

358 i‡(
is_›í
 !
TRUE
 || 
x
 > 
	`fb_width
(Ë|| 
y
 > 
	`fb_height
())

361 i‡(
x
 < 0)

362 
x
 = 0;

363 i‡(
y
 < 0)

364 
y
 = 0;

366 i‡(
x
 + 
w
 > 
	`fb_width
())

367 
w
 = 
	`fb_width
(Ë- 
x
;

368 i‡(
y
 + 
h
 > 
	`fb_height
())

369 
h
 = 
	`fb_height
(Ë- 
y
;

371 i‡(
tmp
 =
NULL
) {

372 
tmp
 = 
	`mÆloc
(
fscöfo
.
löe_Àngth
);

373 i‡(
tmp
 =
NULL
)

376 i‡(
º
 !
r
 || 
gg
 !
g
 || 
bb
 !
b
) {

377 
w‹k
;

378 
ww
 = 
	`fb_width
();

380 
w‹k
 = 
	`fb_gë_∑cked_cﬁ‹
(
r
, 
g
, 
b
);

381 
i
 = 0; i < 
ww
; i++)

382 
	`mem˝y
(
tmp
 + 
pixñ_size
 * 
i
, &
w‹k
,Öixel_size);

383 
º
 = 
r
;

384 
gg
 = 
g
;

385 
bb
 = 
b
;

387 
off£t_fb
 = 
fscöfo
.
löe_Àngth
 * 
y
 + 
pixñ_size
 * 
x
;

388 
i
 = 0; i < 
h
; i++) {

389 
	`mem˝y
(
buf
 + 
off£t_fb
, 
tmp
, 
pixñ_size
 * 
w
);

390 
off£t_fb
 +
fscöfo
.
löe_Àngth
;

393 
	}
}

397 
	$fb_gë_∑cked_cﬁ‹
(
r
, 
g
, 
b
)

399 i‡(
pixñ_size
 == 1) {

400  
	`fb_gë_cm≠_ödex
(
r
, 
g
, 
b
);

404 ((
r
 >> (
CHAR_BIT
 - 
vscöfo
.
ªd
.
Àngth
)Ë<< vscöfo.ªd.
off£t
) +

405 ((
g
 >> (
CHAR_BIT
 - 
vscöfo
.
gªí
.
Àngth
)) << vscinfo.green.

406 
off£t
) +

407 ((
b
 >> (
CHAR_BIT
 - 
vscöfo
.
blue
.
Àngth
)Ë<< vscöfo.blue.
off£t
);

409 
	}
}

412 
	$fb_gë_cm≠_ödex
(
r
, 
g
, 
b
)

414 
w‹k
;

415 i‡((
r
 & 
GREEN_MASK_8BIT
Ë=(
g
 & GREEN_MASK_8BIT)

416 && (
g
 & 
GREEN_MASK_8BIT
Ë=(
b
 & GREEN_MASK_8BIT)) {

417 
w‹k
 = (
r
 >> 
MONO_SHIFT_8BIT
Ë+ 
MONO_OFFSET_8BIT
;

420 
w‹k
 = ((
r
 & 
RED_MASK_8BIT
Ë>> 
RED_SHIFT_8BIT
)

421 + ((
g
 & 
GREEN_MASK_8BIT
Ë>> 
GREEN_SHIFT_8BIT
)

422 + ((
b
 & 
BLUE_MASK_8BIT
Ë>> 
BLUE_SHIFT_8BIT
)

423 + 
COLOR_OFFSET_8BIT
;

425  
w‹k
;

426 
	}
}

429 
	$fb_cm≠_öô
()

431 
Õ
;

433 i‡(
cm≠
 =
NULL
)

436 i‡(
cm≠
->
Àn
 < 
COLOR_OFFSET_8BIT
 + 
COLORS_8BIT
) {

437 
	`Ârötf
(
°dîr
, "Can'tállocateÉnough color.\n");

441 i‡(
cm≠_‹g
 =
NULL
) {

442 i‡((
cm≠_‹g
 =

443 
	`fb_cm≠_¸óã
(&
fscöfo
, &
vscöfo
)Ë=(
fb_cm≠
 *)-1) {

447 i‡(
	`fb_cm≠_gë
(
fbÂ
, 
cm≠_‹g
)) {

448 
	`Ârötf
(
°dîr
, "Can't get color map.\n");

449 
	`fb_cm≠_de°roy
(
cm≠_‹g
);

450 
cm≠_‹g
 = 
NULL
;

455 
cm≠
->
°¨t
 = 
MONO_OFFSET_8BIT
;

456 
cm≠
->
Àn
 = 
COLORS_8BIT
 + 
COLORS_MONO_8BIT
;

458 
Õ
 = 0;Ü∞< 
COLORS_MONO_8BIT
;Üp++) {

459 
c
;

460 
c
 = (
Õ
 << (
MONO_SHIFT_8BIT
 + 8)) +

461 (
Õ
 ? (0xFFFF - (
MONO_MASK_8BIT
 << 8)) : 0);

462 i‡(
cm≠
->
ªd
)

463 *(
cm≠
->
ªd
 + 
Õ
Ë
c
;

464 i‡(
cm≠
->
gªí
)

465 *(
cm≠
->
gªí
 + 
Õ
Ë
c
;

466 i‡(
cm≠
->
blue
)

467 *(
cm≠
->
blue
 + 
Õ
Ë
c
;

470 
Õ
 = 0;Ü∞< 
COLORS_8BIT
;Üp++) {

471 
r
, 
g
, 
b
;

472 
r
 = 
Õ
 & (
RED_MASK_8BIT
 >> 
RED_SHIFT_8BIT
);

473 
g
 = 
Õ
 & (
GREEN_MASK_8BIT
 >> 
GREEN_SHIFT_8BIT
);

474 
b
 = 
Õ
 & (
BLUE_MASK_8BIT
 >> 
BLUE_SHIFT_8BIT
);

475 i‡(
cm≠
->
ªd
)

476 *(
cm≠
->
ªd
 + 
Õ
 + 
COLORS_MONO_8BIT
)

477 (
r
 << (
RED_SHIFT_8BIT
 + 8)) +

478 (
r
 ? (0xFFFF - (
RED_MASK_8BIT
 << 8)) : 0);

479 i‡(
cm≠
->
gªí
)

480 *(
cm≠
->
gªí
 + 
Õ
 + 
COLORS_MONO_8BIT
)

481 (
g
 << (
GREEN_SHIFT_8BIT
 + 8)) +

482 (
g
 ? (0xFFFF - (
GREEN_MASK_8BIT
 << 8)) : 0);

483 i‡(
cm≠
->
blue
)

484 *(
cm≠
->
blue
 + 
Õ
 + 
COLORS_MONO_8BIT
)

485 (
b
 << (
BLUE_SHIFT_8BIT
 + 8)) +

486 (
b
 ? (0xFFFF - (
BLUE_MASK_8BIT
 << 8)) : 0);

489 i‡(
	`fb_cm≠_£t
(
fbÂ
, 
cm≠
)) {

490 
	`fb_cm≠_de°roy
(
cm≠
);

491 
cm≠
 = 
NULL
;

492 
	`Ârötf
(
°dîr
, "Can't set color map.\n");

496 
	}
}

507 
	#LUT_MAX
 (256)

	)

509 
fb_cm≠
 *

510 
	$fb_cm≠_¸óã
(
fb_fix_s¸ìnöfo
 *
fscöfo
,

511 
fb_v¨_s¸ìnöfo
 *
vscöfo
)

513 
fb_cm≠
 *
cm≠
;

514 
cm≠Àn
 = 
LUT_MAX
;

517 i‡(
fscöfo
->
visuÆ
 =
FB_VISUAL_MONO01
 ||

518 
fscöfo
->
visuÆ
 =
FB_VISUAL_MONO10
 ||

519 
fscöfo
->
visuÆ
 =
FB_VISUAL_TRUECOLOR
)

520  
NULL
;

522 
cm≠
 = (
fb_cm≠
 *)
	`mÆloc
((fb_cmap));

523 i‡(!
cm≠
) {

524 
	`≥º‹
("cmap mallocÉrror\n");

525  (
fb_cm≠
 *)-1;

527 
	`mem£t
(
cm≠
, 0, (
fb_cm≠
));

530 i‡(
vscöfo
->
ªd
.
Àngth
) {

531 
cm≠
->
ªd
 = (
__u16
 *Ë
	`mÆloc
((__u16Ë* 
cm≠Àn
);

532 i‡(!
cm≠
->
ªd
) {

533 
	`≥º‹
("redÜut mallocÉrror\n");

534  (
fb_cm≠
 *)-1;

537 i‡(
vscöfo
->
gªí
.
Àngth
) {

538 
cm≠
->
gªí
 = (
__u16
 *Ë
	`mÆloc
((__u16Ë* 
cm≠Àn
);

539 i‡(!
cm≠
->
gªí
) {

540 i‡(
vscöfo
->
ªd
.
Àngth
)

541 
	`‰ì
(
cm≠
->
ªd
);

542 
	`≥º‹
("greenÜut mallocÉrror\n");

543  (
fb_cm≠
 *)-1;

546 i‡(
vscöfo
->
blue
.
Àngth
) {

547 
cm≠
->
blue
 = (
__u16
 *Ë
	`mÆloc
((__u16Ë* 
cm≠Àn
);

548 i‡(!
cm≠
->
blue
) {

549 i‡(
vscöfo
->
ªd
.
Àngth
)

550 
	`‰ì
(
cm≠
->
ªd
);

551 i‡(
vscöfo
->
gªí
.
Àngth
)

552 
	`‰ì
(
cm≠
->
gªí
);

553 
	`≥º‹
("blueÜut mallocÉrror\n");

554  (
fb_cm≠
 *)-1;

557 i‡(
vscöfo
->
å™•
.
Àngth
) {

558 
cm≠
->
å™•
 = (
__u16
 *Ë
	`mÆloc
((__u16Ë* 
cm≠Àn
);

559 i‡(!
cm≠
->
å™•
) {

560 i‡(
vscöfo
->
ªd
.
Àngth
)

561 
	`‰ì
(
cm≠
->
ªd
);

562 i‡(
vscöfo
->
gªí
.
Àngth
)

563 
	`‰ì
(
cm≠
->
gªí
);

564 i‡(
vscöfo
->
blue
.
Àngth
)

565 
	`‰ì
(
cm≠
->
blue
);

566 
	`≥º‹
("transpÜut mallocÉrror\n");

567  (
fb_cm≠
 *)-1;

570 
cm≠
->
Àn
 = 
cm≠Àn
;

571  
cm≠
;

572 
	}
}

575 
	$fb_cm≠_de°roy
(
fb_cm≠
 *
cm≠
)

577 i‡(
cm≠
->
ªd
)

578 
	`‰ì
(
cm≠
->
ªd
);

579 i‡(
cm≠
->
gªí
)

580 
	`‰ì
(
cm≠
->
gªí
);

581 i‡(
cm≠
->
blue
)

582 
	`‰ì
(
cm≠
->
blue
);

583 i‡(
cm≠
->
å™•
)

584 
	`‰ì
(
cm≠
->
å™•
);

585 
	`‰ì
(
cm≠
);

586 
	}
}

589 
	$fb_cm≠_gë
(
fbÂ
, 
fb_cm≠
 *
cm≠
)

591 i‡(
	`io˘l
(
fbÂ
, 
FBIOGETCMAP
, 
cm≠
)) {

592 
	`≥º‹
("ioctl FBIOGETCMAPÉrror\n");

596 
	}
}

599 
	$fb_cm≠_£t
(
fbÂ
, 
fb_cm≠
 *
cm≠
)

601 i‡(
	`io˘l
(
fbÂ
, 
FBIOPUTCMAP
, 
cm≠
)) {

602 
	`≥º‹
("ioctl FBIOPUTCMAPÉrror\n");

606 
	}
}

616 
	$fb_mm≠
(
fbÂ
, 
fb_fix_s¸ìnöfo
 *
scöfo
)

618 *
buf
;

619 i‡((
buf
 = (*)

620 
	`mm≠
(
NULL
, 
scöfo
->
smem_Àn
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
, 
fbÂ
,

621 (
off_t
) 0))

622 =
MAP_FAILED
) {

623 
	`≥º‹
("mmapÉrror");

624  
NULL
;

626  
buf
;

627 
	}
}

630 
	$fb_munm≠
(*
buf
, 
fb_fix_s¸ìnöfo
 *
scöfo
)

632  
	`munm≠
(
buf
, 
scöfo
->
smem_Àn
);

633 
	}
}

641 
	$fb_fs¸n_gë
(
fbÂ
, 
fb_fix_s¸ìnöfo
 *
scöfo
)

643 i‡(
	`io˘l
(
fbÂ
, 
FBIOGET_FSCREENINFO
, 
scöfo
)) {

644 
	`≥º‹
("ioctl FBIOGET_FSCREENINFOÉrror\n");

648 
	}
}

656 
	$fb_vs¸n_gë
(
fbÂ
, 
fb_v¨_s¸ìnöfo
 *
scöfo
)

658 i‡(
	`io˘l
(
fbÂ
, 
FBIOGET_VSCREENINFO
, 
scöfo
)) {

659 
	`≥º‹
("ioctl FBIOGET_VSCREENINFOÉrror\n");

663 
	}
}

	@w3mimg/fb/fb.h

2 #i‚de‡
fb_hódî


3 
	#fb_hódî


	)

4 
	~<löux/fb.h
>

7 
	mnum
;

8 
	mid
;

9 
	mdñay
;

10 
	mwidth
;

11 
	mheight
;

12 
	mrow°ride
;

13 
	mÀn
;

14 *
	md©a
;

15 } 
	tFB_IMAGE
;

17 
FB_IMAGE
 *
fb_image_√w
(
width
, 
height
);

18 
fb_image_p£t
(
FB_IMAGE
 * 
image
, 
x
, 
y
, 
r
, 
g
, 
b
);

19 
fb_image_fûl
(
FB_IMAGE
 * 
image
, 
r
, 
g
, 
b
);

20 
fb_image_døw
(
FB_IMAGE
 * 
image
, 
x
, 
y
, 
sx
, 
sy
, 
width
,

21 
height
);

22 
fb_image_‰ì
(
FB_IMAGE
 * 
image
);

23 
fb_image_c›y
(
FB_IMAGE
 * 
de°
, FB_IMAGE * 
§c
);

25 
FB_IMAGE
 **
fb_‰ame_√w
(
w
, 
h
, 
num
);

26 
fb_‰ame_‰ì
(
FB_IMAGE
 ** 
‰ame
);

28 
fb_›í
();

29 
fb_˛o£
();

30 
fb_width
();

31 
fb_height
();

32 
fb_˛ór
(
x
, 
y
, 
w
, 
h
, 
r
, 
g
, 
b
);

	@w3mimg/fb/fb_gdkpixbuf.c

6 
	~"c⁄fig.h
"

7 #i‡
deföed
(
USE_GTK2
)

8 
	~<glib-obje˘.h
>

9 
	~<gdk/gdk.h
>

11 
	~<gdk-pixbuf/gdk-pixbuf.h
>

12 
	~"fb.h
"

13 
	~"fb_img.h
"

15 
døw
(
FB_IMAGE
 * 
img
, 
x
, 
y
, 
w
, 
h
,

16 
GdkPixbuf
 * 
pixbuf
);

17 
GdkPixbuf
 *
ªsize_image
(GdkPixbu‡* 
pixbuf
, 
width
, 
height
);

19 #i‡
deföed
(
USE_GTK2
)

21 
	$gë_™im©i⁄_size
(
GdkPixbufAnim©i⁄
 * 
™im©i⁄
, *
w
, *
h
, *
dñay
)

23 
GdkPixbufAnim©i⁄Iãr
 *
ôî
;

24 
n
, 
i
, 
d
 = -1;

25 
GTimeVÆ
 
time
;

27 
	`g_gë_cuºít_time
(&
time
);

28 
ôî
 = 
	`gdk_pixbuf_™im©i⁄_gë_ôî
(
™im©i⁄
, &
time
);

29 *
w
 = 
	`gdk_pixbuf_™im©i⁄_gë_width
(
™im©i⁄
);

30 *
h
 = 
	`gdk_pixbuf_™im©i⁄_gë_height
(
™im©i⁄
);

31 
i
 = 1;

32 
	`gdk_pixbuf_™im©i⁄_ôî_⁄_cuºíéy_lﬂdög_‰ame
(
ôî
Ë!
TRUE
;

33 
i
++) {

34 
tmp
;

35 
tmp
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
);

36 
	`g_time_vÆ_add
(&
time
, 
tmp
 * 1000);

37 i‡(
tmp
 > 
d
)

38 
d
 = 
tmp
;

39 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

41 i‡(
dñay
)

42 *
dñay
 = 
d
;

43 
n
 = 
i
;

44 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
ôî
));

45  
n
;

46 
	}
}

49 
	$gë_™im©i⁄_size
(
GdkPixbufAnim©i⁄
 * 
™im©i⁄
, *
w
, *
h
, *
dñay
)

51 
GLi°
 *
‰ames
;

52 
iw
, 
ih
, 
n
, 
i
, 
d
 = -1;

54 
‰ames
 = 
	`gdk_pixbuf_™im©i⁄_gë_‰ames
(
™im©i⁄
);

55 
n
 = 
	`gdk_pixbuf_™im©i⁄_gë_num_‰ames
(
™im©i⁄
);

56 *
w
 = 
	`gdk_pixbuf_™im©i⁄_gë_width
(
™im©i⁄
);

57 *
h
 = 
	`gdk_pixbuf_™im©i⁄_gë_height
(
™im©i⁄
);

58 
i
 = 0; i < 
n
; i++) {

59 
GdkPixbufFøme
 *
‰ame
;

60 
GdkPixbuf
 *
pixbuf
;

61 
tmp
;

63 
‰ame
 = (
GdkPixbufFøme
 *Ë
	`g_li°_¡h_d©a
(
‰ames
, 
i
);

64 
tmp
 = 
	`gdk_pixbuf_‰ame_gë_dñay_time
(
‰ame
);

65 i‡(
tmp
 > 
d
)

66 
d
 = 
tmp
;

67 
pixbuf
 = 
	`gdk_pixbuf_‰ame_gë_pixbuf
(
‰ame
);

68 
iw
 = 
	`gdk_pixbuf_‰ame_gë_x_off£t
(
‰ame
)

69 + 
	`gdk_pixbuf_gë_width
(
pixbuf
);

70 
ih
 = 
	`gdk_pixbuf_‰ame_gë_y_off£t
(
‰ame
)

71 + 
	`gdk_pixbuf_gë_height
(
pixbuf
);

72 i‡(
iw
 > *
w
)

73 *
w
 = 
iw
;

74 i‡(
ih
 > *
h
)

75 *
h
 = 
ih
;

77 i‡(
dñay
)

78 *
dñay
 = 
d
;

79  
n
;

80 
	}
}

84 
	$fb_image_öô
()

86 #i‡
	`deföed
(
USE_GTK2
)

87 
	`g_ty≥_öô
();

89 
	}
}

92 
	$gë_image_size
(*
fûíame
, *
w
, *
h
)

94 
GdkPixbufAnim©i⁄
 *
™im©i⁄
;

95 i‡(
fûíame
 =
NULL
)

97 #i‡
	`deföed
(
USE_GTK2
)

98 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
fûíame
, 
NULL
);

100 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
fûíame
);

102 i‡(
™im©i⁄
 =
NULL
)

104 
	`gë_™im©i⁄_size
(
™im©i⁄
, 
w
, 
h
, 
NULL
);

105 #i‡
	`deföed
(
USE_GTK2
)

106 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

108 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

111 
	}
}

113 
FB_IMAGE
 **

114 
	$fb_image_lﬂd
(*
fûíame
, 
w
, 
h
, 
max_™im
)

116 
GdkPixbufAnim©i⁄
 *
™im©i⁄
;

117 #i‡
	`deföed
(
USE_GTK2
)

118 
GdkPixbufAnim©i⁄Iãr
 *
ôî
;

119 
GTimeVÆ
 
time
;

121 
i
;

122 
GLi°
 *
‰ames
;

124 
øtio_w
, 
øtio_h
;

125 
n
, 
j
, 
fw
, 
fh
, 
‰ame_num
, 
dñay
;

126 
FB_IMAGE
 **
fb_‰ame
 = 
NULL
, *
tmp_image
 = NULL;

128 i‡(
fûíame
 =
NULL
)

129  
NULL
;

130 #i‡
	`deföed
(
USE_GTK2
)

131 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
fûíame
, 
NULL
);

133 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
fûíame
);

135 i‡(
™im©i⁄
 =
NULL
)

136  
NULL
;

137 
‰ame_num
 = 
n
 = 
	`gë_™im©i⁄_size
(
™im©i⁄
, &
fw
, &
fh
, &
dñay
);

138 i‡(
dñay
 <= 0)

139 
max_™im
 = -1;

140 i‡(
max_™im
 < 0) {

141 
‰ame_num
 = (-
max_™im
 > 
n
) ?Ç : -max_anim;

143 i‡(
max_™im
 > 0) {

144 
‰ame_num
 = 
n
 = (
max_™im
 >Ç) ?Ç : max_anim;

146 i‡(
w
 < 1 || 
h
 < 1) {

147 
w
 = 
fw
;

148 
h
 = 
fh
;

149 
øtio_w
 = 
øtio_h
 = 1;

152 
øtio_w
 = 1.0 * 
w
 / 
fw
;

153 
øtio_h
 = 1.0 * 
h
 / 
fh
;

156 
fb_‰ame
 = 
	`fb_‰ame_√w
(
w
, 
h
, 
‰ame_num
);

157 i‡(
fb_‰ame
 =
NULL
)

158 
END
;

160 
tmp_image
 = 
	`fb_image_√w
(
w
, 
h
);

161 i‡(
tmp_image
 =
NULL
) {

162 
	`fb_‰ame_‰ì
(
fb_‰ame
);

163 
fb_‰ame
 = 
NULL
;

164 
END
;

167 i‡(
bg_r
 !0 || 
bg_g
 !0 || 
bg_b
 != 0) {

168 
	`fb_image_fûl
(
tmp_image
, 
bg_r
, 
bg_g
, 
bg_b
);

171 #i‡
	`deföed
(
USE_GTK2
)

172 
	`g_gë_cuºít_time
(&
time
);

173 
ôî
 = 
	`gdk_pixbuf_™im©i⁄_gë_ôî
(
™im©i⁄
, &
time
);

175 i‡(
max_™im
 < 0 && 
n
 > -max_anim) {

176 
max_™im
 = 
n
 + max_anim;

177 
j
 = 0; j < 
max_™im
; j++) {

178 
	`g_time_vÆ_add
(&
time
,

179 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
) * 1000);

180 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

183 
j
 = 0; j < 
n
; j++) {

184 
GdkPixbuf
 *
‹g_pixbuf
, *
pixbuf
;

186 
‹g_pixbuf
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_pixbuf
(
ôî
);

187 
pixbuf
 = 
	`ªsize_image
(
‹g_pixbuf
, 
w
, 
h
);

189 
fb_‰ame
[
j
]->
dñay
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
);

190 
	`g_time_vÆ_add
(&
time
, 
fb_‰ame
[
j
]->
dñay
 * 1000);

191 
	`døw
(
fb_‰ame
[
j
], 0, 0, 
w
, 
h
, 
pixbuf
);

192 i‡(
‹g_pixbuf
 !
pixbuf
)

193 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
pixbuf
));

194 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

197 
‰ames
 = 
	`gdk_pixbuf_™im©i⁄_gë_‰ames
(
™im©i⁄
);

199 
j
 = 0; j < 
n
; j++) {

200 
GdkPixbufFøme
 *
‰ame
;

201 
GdkPixbuf
 *
‹g_pixbuf
, *
pixbuf
;

202 
width
, 
height
, 
of°x
, 
of°y
;

204 i‡(
max_™im
 < 0) {

205 
i
 = (
j
 - 
n
 + 
‰ame_num
 > 0) ? (j -Ç + frame_num) : 0;

208 
i
 = 
j
;

210 
‰ame
 = (
GdkPixbufFøme
 *Ë
	`g_li°_¡h_d©a
(
‰ames
, 
j
);

211 
‹g_pixbuf
 = 
	`gdk_pixbuf_‰ame_gë_pixbuf
(
‰ame
);

212 
of°x
 = 
	`gdk_pixbuf_‰ame_gë_x_off£t
(
‰ame
);

213 
of°y
 = 
	`gdk_pixbuf_‰ame_gë_y_off£t
(
‰ame
);

214 
width
 = 
	`gdk_pixbuf_gë_width
(
‹g_pixbuf
);

215 
height
 = 
	`gdk_pixbuf_gë_height
(
‹g_pixbuf
);

216 i‡(
of°x
 =0 && 
of°y
 =0 && 
width
 =
fw
 && 
height
 =
fh
) {

217 
pixbuf
 = 
	`ªsize_image
(
‹g_pixbuf
, 
w
, 
h
);

220 
pixbuf
 =

221 
	`ªsize_image
(
‹g_pixbuf
, 
width
 * 
øtio_w
, 
height
 * 
øtio_h
);

222 
of°x
 *
øtio_w
;

223 
of°y
 *
øtio_h
;

225 
width
 = 
	`gdk_pixbuf_gë_width
(
pixbuf
);

226 
height
 = 
	`gdk_pixbuf_gë_height
(
pixbuf
);

228 
fb_‰ame
[
i
]->
dñay
 = 
	`gdk_pixbuf_‰ame_gë_dñay_time
(
‰ame
);

229 
	`fb_image_c›y
(
fb_‰ame
[
i
], 
tmp_image
);

230 
	`døw
(
fb_‰ame
[
i
], 
of°x
, 
of°y
, 
width
, 
height
, 
pixbuf
);

232 
	`gdk_pixbuf_‰ame_gë_a˘i⁄
(
‰ame
)) {

233 
GDK_PIXBUF_FRAME_RETAIN
:

234 
	`fb_image_c›y
(
tmp_image
, 
fb_‰ame
[
i
]);

236 
GDK_PIXBUF_FRAME_DISPOSE
:

237 
	`fb_image_fûl
(
tmp_image
, 
bg_r
, 
bg_g
, 
bg_b
);

239 
GDK_PIXBUF_FRAME_REVERT
:

240 
	`fb_image_c›y
(
tmp_image
, 
fb_‰ame
[0]);

243 
	`fb_image_c›y
(
tmp_image
, 
fb_‰ame
[0]);

246 i‡(
‹g_pixbuf
 !
pixbuf
)

247 
	`gdk_pixbuf_föÆize
(
pixbuf
);

250 
END
:

251 i‡(
tmp_image
)

252 
	`fb_image_‰ì
(
tmp_image
);

253 #i‡
	`deföed
(
USE_GTK2
)

254 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

256 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

258  
fb_‰ame
;

259 
	}
}

261 
	$døw
(
FB_IMAGE
 * 
img
, 
x
, 
y
, 
w
, 
h
, 
GdkPixbuf
 * 
pixbuf
)

263 
i
, 
j
, 
r
, 
g
, 
b
, 
off£t
, 
bµ
, 
row°ride
;

264 
guch¨
 *
pixñs
;

265 
gboﬁón
 
Æpha
;

266 i‡(
img
 =
NULL
 || 
pixbuf
 == NULL)

268 
row°ride
 = 
	`gdk_pixbuf_gë_row°ride
(
pixbuf
);

269 
pixñs
 = 
	`gdk_pixbuf_gë_pixñs
(
pixbuf
);

270 
Æpha
 = 
	`gdk_pixbuf_gë_has_Æpha
(
pixbuf
);

271 
bµ
 = 
row°ride
 / 
w
;

272 
j
 = 0; j < 
h
; j++) {

273 
off£t
 = 
j
 * 
row°ride
;

274 
i
 = 0; i < 
w
; i++, 
off£t
 +
bµ
) {

275 
r
 = 
pixñs
[
off£t
];

276 
g
 = 
pixñs
[
off£t
 + 1];

277 
b
 = 
pixñs
[
off£t
 + 2];

278 i‡(!
Æpha
 || 
pixñs
[
off£t
 + 3] != 0) {

279 
	`fb_image_p£t
(
img
, 
i
 + 
x
, 
j
 + 
y
, 
r
, 
g
, 
b
);

284 
	}
}

285 
GdkPixbuf
 *

286 
	$ªsize_image
(
GdkPixbuf
 * 
pixbuf
, 
width
, 
height
)

288 
GdkPixbuf
 *
ªsized_pixbuf
;

289 
w
, 
h
;

290 i‡(
pixbuf
 =
NULL
)

291  
NULL
;

292 
w
 = 
	`gdk_pixbuf_gë_width
(
pixbuf
);

293 
h
 = 
	`gdk_pixbuf_gë_height
(
pixbuf
);

294 i‡(
width
 < 1 || 
height
 < 1)

295  
pixbuf
;

296 i‡(
w
 =
width
 && 
h
 =
height
)

297  
pixbuf
;

298 
ªsized_pixbuf
 =

299 
	`gdk_pixbuf_sˇÀ_sim∂e
(
pixbuf
, 
width
, 
height
, 
GDK_INTERP_HYPER
);

300 i‡(
ªsized_pixbuf
 =
NULL
)

301  
NULL
;

302  
ªsized_pixbuf
;

303 
	}
}

	@w3mimg/fb/fb_img.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/waô.h
>

6 
	~"c⁄fig.h
"

7 
	~"fb.h
"

8 
	~"fb_img.h
"

10 
	gbg_r
 = 0, 
	gbg_g
 = 0, 
	gbg_b
 = 0;

12 #i‡
deföed
(
USE_IMLIB2
)

13 
	~"w3mimg/fb/fb_imlib2.c
"

14 #ñi‡
deföed
(
USE_GDKPIXBUF
)

15 
	~"w3mimg/fb/fb_gdkpixbuf.c
"

17 #îr‹ 
no
 
Imlib2
 
™d
 
GdkPixbuf
 
suµ‹t


21 
	$fb_image_£t_bg
(
r
, 
g
, 
b
)

23 
bg_r
 = 
r
;

24 
bg_g
 = 
g
;

25 
bg_b
 = 
b
;

26 
	}
}

29 
	$fb_image_˛ór
(
x
, 
y
, 
w
, 
h
)

31  
	`fb_˛ór
(
x
, 
y
, 
w
, 
h
, 
bg_r
, 
bg_g
, 
bg_b
);

32 
	}
}

	@w3mimg/fb/fb_img.h

2 #i‚de‡
fb_img_hódî


3 
	#fb_img_hódî


	)

4 
	~"fb.h
"

6 
fb_image_öô
();

7 
FB_IMAGE
 **
fb_image_lﬂd
(*
fûíame
, 
w
, 
h
, 
n
);

8 
fb_image_£t_bg
(
r
, 
g
, 
b
);

9 
fb_image_˛ór
(
x
, 
y
, 
w
, 
h
);

10 
gë_image_size
(*
fûíame
, *
w
, *
h
);

	@w3mimg/fb/fb_imlib2.c

6 
	~<X11/Xlib.h
>

7 
	~<Imlib2.h
>

8 
	~"fb.h
"

9 
	~"fb_img.h
"

11 
døw
(
FB_IMAGE
 * 
img
, 
Imlib_Image
 
image
);

12 
Imlib_Image
 
ªsize_image
(Imlib_Imagê
image
, 
width
, 
height
);

15 
	$fb_image_öô
()

18 
	}
}

21 
	$gë_image_size
(*
fûíame
, *
w
, *
h
)

23 
Imlib_Image
 
image
;

25 i‡(
fûíame
 =
NULL
)

28 
image
 = 
	`imlib_lﬂd_image
(
fûíame
);

29 i‡(
image
 =
NULL
)

32 
	`imlib_c⁄ãxt_£t_image
(
image
);

33 *
w
 = 
	`imlib_image_gë_width
();

34 *
h
 = 
	`imlib_image_gë_height
();

35 
	`imlib_‰ì_image
();

38 
	}
}

40 
FB_IMAGE
 **

41 
	$fb_image_lﬂd
(*
fûíame
, 
w
, 
h
, 
n
)

43 
Imlib_Image
 
image
;

44 
FB_IMAGE
 **
‰ame
;

46 i‡(
fûíame
 =
NULL
)

47  
NULL
;

49 
image
 = 
	`imlib_lﬂd_image
(
fûíame
);

50 i‡(
image
 =
NULL
)

51  
NULL
;

53 
image
 = 
	`ªsize_image
(image, 
w
, 
h
);

54 i‡(
image
 =
NULL
)

55  
NULL
;

57 
	`imlib_c⁄ãxt_£t_image
(
image
);

59 
w
 = 
	`imlib_image_gë_width
();

60 
h
 = 
	`imlib_image_gë_height
();

62 
‰ame
 = 
	`fb_‰ame_√w
(
w
, 
h
, 1);

64 i‡(
‰ame
 =
NULL
) {

65 
	`imlib_‰ì_image
();

66  
NULL
;

69 
	`døw
(
‰ame
[0], 
image
);

71 
	`imlib_‰ì_image
();

73  
‰ame
;

74 
	}
}

77 
	$døw
(
FB_IMAGE
 * 
img
, 
Imlib_Image
 
image
)

79 
i
, 
j
, 
r
, 
g
, 
b
, 
a
 = 0, 
off£t
;

80 
DATA32
 *
d©a
;

82 i‡(
img
 =
NULL
)

85 
	`imlib_c⁄ãxt_£t_image
(
image
);

86 
d©a
 = 
	`imlib_image_gë_d©a_f‹_ªadög_⁄ly
();

88 
j
 = 0; j < 
img
->
height
; j++) {

89 
off£t
 = 
img
->
width
 * 
j
;

90 
i
 = 0; i < 
img
->
width
; i++) {

91 
a
 = (
d©a
[
off£t
 + 
i
] >> 24) & 0x000000ff;

92 
r
 = (
d©a
[
off£t
 + 
i
] >> 16) & 0x000000ff;

93 
g
 = (
d©a
[
off£t
 + 
i
] >> 8) & 0x000000ff;

94 
b
 = (
d©a
[
off£t
 + 
i
]) & 0x000000ff;

96 i‡(
a
 == 0) {

97 
	`fb_image_p£t
(
img
, 
i
, 
j
, 
bg_r
, 
bg_g
, 
bg_b
);

100 
	`fb_image_p£t
(
img
, 
i
, 
j
, 
r
, 
g
, 
b
);

105 
	}
}

107 
Imlib_Image


108 
	$ªsize_image
(
Imlib_Image
 
image
, 
width
, 
height
)

110 
Imlib_Image
 
ªsized_image
;

111 
w
, 
h
;

113 i‡(
image
 =
NULL
)

114  
NULL
;

116 
	`imlib_c⁄ãxt_£t_image
(
image
);

117 
w
 = 
	`imlib_image_gë_width
();

118 
h
 = 
	`imlib_image_gë_height
();

120 i‡(
width
 < 1 || 
height
 < 1)

121  
image
;

123 i‡(
w
 =
width
 && 
h
 =
height
)

124  
image
;

126 
ªsized_image
 =

127 
	`imlib_¸óã_¸›≥d_sˇÀd_image
(0, 0, 
w
, 
h
, 
width
, 
height
);

129 
	`imlib_‰ì_image
();

131  
ªsized_image
;

132 
	}
}

	@w3mimg/fb/fb_w3mimg.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<˘y≥.h
>

5 
	~<°rög.h
>

6 
	~<uni°d.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/°©.h
>

9 
	~<f˙é.h
>

11 
	~"w3mimg/fb/fb.h
"

12 
	~"w3mimg/fb/fb_img.h
"

13 
	~"w3mimg/w3mimg.h
"

16 
	$w3mfb_öô
(
w3mimg_›
 * 
£lf
)

18 i‡(
£lf
 =
NULL
)

22 
	}
}

25 
	$w3mfb_föish
(
w3mimg_›
 * 
£lf
)

27 i‡(
£lf
 =
NULL
)

30 
	}
}

33 
	$w3mfb_a˘ive
(
w3mimg_›
 * 
£lf
)

35 i‡(
£lf
 =
NULL
)

38 
	}
}

41 
	$w3mfb_£t_background
(
w3mimg_›
 * 
£lf
, *
background
)

43 i‡(
£lf
 =
NULL
)

45 i‡(
background
) {

46 
r
, 
g
, 
b
;

47 i‡(
	`ssˇnf
(
background
, "#%02x%02x%02x", &
r
, &
g
, &
b
) == 3)

48 
	`fb_image_£t_bg
(
r
, 
g
, 
b
);

50 
	}
}

53 
	$w3mfb_sync
(
w3mimg_›
 * 
£lf
)

56 
	}
}

59 
	$w3mfb_˛o£
(
w3mimg_›
 * 
£lf
)

61 
	`fb_˛o£
();

62 
	}
}

65 
	$w3mfb_˛ór
(
w3mimg_›
 * 
£lf
, 
x
, 
y
, 
w
, 
h
)

67 i‡(
£lf
 =
NULL
)

69 
	`fb_image_˛ór
(
x
, 
y
, 
w
, 
h
);

71 
	}
}

74 
	$w3mfb_lﬂd_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
, *
‚ame
, 
w
, 
h
)

76 
FB_IMAGE
 **
im
;

78 i‡(
£lf
 =
NULL
)

80 
im
 = 
	`fb_image_lﬂd
(
‚ame
, 
w
, 
h
, 
£lf
->
max_™im
);

81 i‡(!
im
)

83 
img
->
pixm≠
 = 
im
;

84 
img
->
width
 = 
im
[0]->width;

85 
img
->
height
 = 
im
[0]->height;

87 
	}
}

90 
	$w3mfb_show_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
, 
sx
, 
sy
,

91 
sw
, 
sh
, 
x
, 
y
)

93 
i
;

94 
FB_IMAGE
 **
‰ame
;

95 
	#WAIT_CNT
 4

	)

97 i‡(
£lf
 =
NULL
)

100 i‡(
img
->
pixm≠
 =
NULL
)

103 
‰ame
 = (
FB_IMAGE
 **Ë
img
->
pixm≠
;

104 
i
 = 
‰ame
[0]->
id
;

105 
	`fb_image_døw
(
‰ame
[
i
],

106 
x
 + 
£lf
->
off£t_x
, 
y
 + sñf->
off£t_y
,

107 
sx
, 
sy
, (
sw
 ? sw : 
img
->
width
), (
sh
 ? sh : img->
height
));

108 i‡(
‰ame
[0]->
num
 > 1) {

109 i‡(
‰ame
[1]->
id
 > 
WAIT_CNT
) {

110 
‰ame
[1]->
id
 = 0;

111 i‡(
i
 < 
‰ame
[0]->
num
 - 1)

112 
‰ame
[0]->
id
 = 
i
 + 1;

114 
‰ame
[0]->
id
 = 0;

116 
‰ame
[1]->
id
 += 1;

119 
	}
}

122 
	$w3mfb_‰ì_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
)

124 i‡(
£lf
 =
NULL
)

126 i‡(
img
 && img->
pixm≠
) {

127 
	`fb_‰ame_‰ì
((
FB_IMAGE
 **Ë
img
->
pixm≠
);

128 
img
->
pixm≠
 = 
NULL
;

129 
img
->
width
 = 0;

130 
img
->
height
 = 0;

132 
	}
}

135 
	$w3mfb_gë_image_size
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
,

136 *
‚ame
, *
w
, *
h
)

138 
i
;

140 i‡(
£lf
 =
NULL
)

142 
i
 = 
	`gë_image_size
(
‚ame
, 
w
, 
h
);

143 i‡(
i
)

146 
	}
}

148 #ifde‡
W3MIMGDISPLAY_SETUID


150 
	$check_ây_c⁄sﬁe
(*
ây
)

152 i‡(
ây
 =
NULL
 || *tty == '\0')

154 i‡(
	`°∫cmp
(
ây
, "/dev/", 5) == 0)

155 
ây
 += 5;

156 i‡(
	`°∫cmp
(
ây
, "ây", 3Ë=0 && 
	`isdigô
(*(tty + 3)))

158 i‡(
	`°∫cmp
(
ây
, "vc/", 3Ë=0 && 
	`isdigô
(*(tty + 3)))

161 
	}
}

163 
	#check_ây_c⁄sﬁe
(
ây
Ë1

	)

166 
w3mimg_›
 *

167 
	$w3mimg_fb›í
()

169 
w3mimg_›
 *
w›
 = 
NULL
;

170 
w›
 = (
w3mimg_›
 *Ë
	`mÆloc
((w3mimg_op));

171 i‡(
w›
 =
NULL
)

172  
NULL
;

173 
	`mem£t
(
w›
, 0, (
w3mimg_›
));

175 i‡(!
	`check_ây_c⁄sﬁe
(
	`gëív
("W3M_TTY")Ë&& 
	`°rcmp
("jfbterm", getenv("TERM")) != 0) {

176 
	`Ârötf
(
°dîr
, "w3mimgdisplay/fb:Åty isÇot console\n");

177 
îr‹
;

180 i‡(
	`fb_›í
())

181 
îr‹
;

183 
w›
->
width
 = 
	`fb_width
();

184 
w›
->
height
 = 
	`fb_height
();

186 
w›
->
öô
 = 
w3mfb_öô
;

187 
w›
->
föish
 = 
w3mfb_föish
;

188 
w›
->
a˘ive
 = 
w3mfb_a˘ive
;

189 
w›
->
£t_background
 = 
w3mfb_£t_background
;

190 
w›
->
sync
 = 
w3mfb_sync
;

191 
w›
->
˛o£
 = 
w3mfb_˛o£
;

192 
w›
->
˛ór
 = 
w3mfb_˛ór
;

194 
w›
->
lﬂd_image
 = 
w3mfb_lﬂd_image
;

195 
w›
->
show_image
 = 
w3mfb_show_image
;

196 
w›
->
‰ì_image
 = 
w3mfb_‰ì_image
;

197 
w›
->
gë_image_size
 = 
w3mfb_gë_image_size
;

200 
	`fb_image_öô
();

202  
w›
;

203 
îr‹
:

204 
	`‰ì
(
w›
);

205  
NULL
;

206 
	}
}

	@w3mimg/w3mimg.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"w3mimg/w3mimg.h
"

9 
w3mimg_›
 *

10 
	$w3mimg_›í
()

12 
w3mimg_›
 *
w_›
 = 
NULL
;

13 #ifde‡
W3MIMGDISPLAY_SETUID


14 
uid_t
 
ru¬î_uid
 = 
	`gëuid
();

15 
uid_t
 
ow√r_uid
 = 
	`gëeuid
();

17 #ifde‡
USE_W3MIMG_X11


18 #ifde‡
W3MIMGDISPLAY_SETUID


20 
	`£åeuid
(
ow√r_uid
, 
ru¬î_uid
);

22 i‡(
w_›
 =
NULL
)

23 
w_›
 = 
	`w3mimg_x11›í
();

24 #ifde‡
W3MIMGDISPLAY_SETUID


25 
	`£åeuid
(
ru¬î_uid
, 
ow√r_uid
);

28 #ifde‡
USE_W3MIMG_FB


30 i‡(
w_›
 =
NULL
)

31 
w_›
 = 
	`w3mimg_fb›í
();

33  
w_›
;

34 
	}
}

	@w3mimg/w3mimg.h

2 
	~"c⁄fig.h
"

4 #ifde‡
USE_W3MIMG_FB


5 
	~"w3mimg/fb/fb.h
"

6 
	~"w3mimg/fb/fb_img.h
"

10 *
	mpixm≠
;

11 
	mwidth
;

12 
	mheight
;

13 } 
	tW3MImage
;

15 
	s_w3mimg_›
 {

16 *
	m¥iv
;

17 
	mwidth
, 
	mheight
;

18 
	moff£t_x
, 
	moff£t_y
;

19 
	m˛ór_m¨gö
;

20 
	mmax_™im
;

22 (*
	möô
Ë(
_w3mimg_›
 * 
	m£lf
);

23 (*
	mföish
Ë(
_w3mimg_›
 * 
	m£lf
);

24 (*
	ma˘ive
Ë(
_w3mimg_›
 * 
	m£lf
);

25 (*
	m£t_background
Ë(
_w3mimg_›
 * 
	m£lf
, *
	mbackground
);

26 (*
	msync
Ë(
_w3mimg_›
 * 
	m£lf
);

27 (*
	m˛o£
Ë(
_w3mimg_›
 * 
	m£lf
);

29 (*
	mlﬂd_image
Ë(
_w3mimg_›
 * 
	m£lf
, 
W3MImage
 * 
	mimg
, *
	m‚ame
,

30 
	mw
, 
	mh
);

31 (*
	mshow_image
Ë(
_w3mimg_›
 * 
	m£lf
, 
W3MImage
 * 
	mimg
,

32 
	msx
, 
	msy
, 
	msw
, 
	msh
, 
	mx
, 
	my
);

33 (*
	m‰ì_image
Ë(
_w3mimg_›
 * 
	m£lf
, 
W3MImage
 * 
	mimg
);

34 (*
	mgë_image_size
Ë(
_w3mimg_›
 * 
	m£lf
, 
W3MImage
 * 
	mimg
,

35 *
	m‚ame
, *
	mw
, *
	mh
);

36 (*
	m˛ór
Ë(
_w3mimg_›
 * 
	m£lf
, 
	mx
, 
	my
, 
	mw
, 
	mh
);

37 } 
	tw3mimg_›
;

39 #ifde‡
USE_W3MIMG_X11


40 
w3mimg_›
 *
w3mimg_x11›í
();

42 #ifde‡
USE_W3MIMG_FB


43 
w3mimg_›
 *
w3mimg_fb›í
();

46 
w3mimg_›
 *
w3mimg_›í
();

	@w3mimg/x11/x11_w3mimg.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<˘y≥.h
>

6 
	~"c⁄fig.h
"

8 #i‡
deföed
(
USE_IMLIB
)

9 
	~<Imlib.h
>

10 #ñi‡
deföed
(
USE_IMLIB2
)

11 
	~<X11/Xlib.h
>

12 
	~<X11/Xutû.h
>

13 
	~<Imlib2.h
>

14 #ñi‡
deföed
(
USE_GDKPIXBUF
)

15 #i‡
deföed
(
USE_GTK2
)

16 
	~<glib-obje˘.h
>

17 
	~<gdk/gdk.h
>

18 
	~<gdk-pixbuf-xlib/gdk-pixbuf-xlib.h
>

20 
	~<gdk-pixbuf/gdk-pixbuf-xlib.h
>

23 #îr‹ 
no
 
Imlib
 
™d
 
GdkPixbuf
 
suµ‹t


26 
	~"w3mimg/w3mimg.h
"

28 
	#OFFSET_X
 2

	)

29 
	#OFFSET_Y
 2

	)

31 
	sx11_öfo
 {

32 
Di•œy
 *
	mdi•œy
;

33 
Wödow
 
	mwödow
, 
	m∑ª¡
;

34 
	mbackground_pixñ
;

35 
GC
 
	mimageGC
;

36 #i‡
deföed
(
USE_IMLIB
)

37 
ImlibD©a
 *
	mid
;

38 #ñi‡
deföed
(
USE_GDKPIXBUF
)

39 
	möô_Êag
;

43 #i‡
deföed
(
USE_GDKPIXBUF
)

44 
	sx11_image
 {

45 
	mtŸÆ
;

46 
	mno
;

47 
	mwaô
;

48 
	mdñay
;

49 
Pixm≠
 *
	mpixm≠
;

52 #i‡
deföed
(
USE_GTK2
)

54 
	$gë_™im©i⁄_size
(
GdkPixbufAnim©i⁄
 * 
™im©i⁄
, *
w
, *
h
, *
dñay
)

56 
GdkPixbufAnim©i⁄Iãr
 *
ôî
;

57 
n
, 
i
, 
d
 = -1;

58 
GTimeVÆ
 
time
;

60 
	`g_gë_cuºít_time
(&
time
);

61 
ôî
 = 
	`gdk_pixbuf_™im©i⁄_gë_ôî
(
™im©i⁄
, &
time
);

62 *
w
 = 
	`gdk_pixbuf_™im©i⁄_gë_width
(
™im©i⁄
);

63 *
h
 = 
	`gdk_pixbuf_™im©i⁄_gë_height
(
™im©i⁄
);

64 
i
 = 1;

65 
	`gdk_pixbuf_™im©i⁄_ôî_⁄_cuºíéy_lﬂdög_‰ame
(
ôî
Ë!
TRUE
;

66 
i
++) {

67 
tmp
;

68 
tmp
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
);

69 
	`g_time_vÆ_add
(&
time
, 
tmp
 * 1000);

70 i‡(
tmp
 > 
d
)

71 
d
 = 
tmp
;

72 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

74 i‡(
dñay
)

75 *
dñay
 = 
d
;

76 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
ôî
));

77 
n
 = 
i
;

78  
n
;

79 
	}
}

82 
	$gë_™im©i⁄_size
(
GdkPixbufAnim©i⁄
 * 
™im©i⁄
, *
w
, *
h
, *
dñay
)

84 
GLi°
 *
‰ames
;

85 
iw
, 
ih
, 
n
, 
i
, 
d
 = -1;

87 
‰ames
 = 
	`gdk_pixbuf_™im©i⁄_gë_‰ames
(
™im©i⁄
);

88 
n
 = 
	`gdk_pixbuf_™im©i⁄_gë_num_‰ames
(
™im©i⁄
);

89 *
w
 = 
	`gdk_pixbuf_™im©i⁄_gë_width
(
™im©i⁄
);

90 *
h
 = 
	`gdk_pixbuf_™im©i⁄_gë_height
(
™im©i⁄
);

91 
i
 = 0; i < 
n
; i++) {

92 
GdkPixbufFøme
 *
‰ame
;

93 
GdkPixbuf
 *
pixbuf
;

94 
tmp
;

96 
‰ame
 = (
GdkPixbufFøme
 *Ë
	`g_li°_¡h_d©a
(
‰ames
, 
i
);

97 
tmp
 = 
	`gdk_pixbuf_‰ame_gë_dñay_time
(
‰ame
);

98 i‡(
tmp
 > 
d
)

99 
d
 = 
tmp
;

100 
pixbuf
 = 
	`gdk_pixbuf_‰ame_gë_pixbuf
(
‰ame
);

101 
iw
 = 
	`gdk_pixbuf_‰ame_gë_x_off£t
(
‰ame
)

102 + 
	`gdk_pixbuf_gë_width
(
pixbuf
);

103 
ih
 = 
	`gdk_pixbuf_‰ame_gë_y_off£t
(
‰ame
)

104 + 
	`gdk_pixbuf_gë_height
(
pixbuf
);

105 i‡(
iw
 > *
w
)

106 *
w
 = 
iw
;

107 i‡(
ih
 > *
h
)

108 *
h
 = 
ih
;

110 i‡(
dñay
)

111 *
dñay
 = 
d
;

112  
n
;

113 
	}
}

118 
	$x11_öô
(
w3mimg_›
 * 
£lf
)

120 
x11_öfo
 *
xi
;

121 i‡(
£lf
 =
NULL
)

123 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

124 i‡(
xi
 =
NULL
)

126 #i‡
	`deföed
(
USE_IMLIB
)

127 i‡(!
xi
->
id
) {

128 
xi
->
id
 = 
	`Imlib_öô
(xi->
di•œy
);

129 i‡(!
xi
->
id
)

132 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

133 i‡(!
xi
->
öô_Êag
) {

134 #i‡
	`deföed
(
USE_GTK2
)

135 
	`g_ty≥_öô
();

137 
	`gdk_pixbuf_xlib_öô
(
xi
->
di•œy
, 0);

138 
xi
->
öô_Êag
 = 
TRUE
;

141 i‡(!
xi
->
imageGC
) {

142 
xi
->
imageGC
 = 
	`XCª©eGC
(xi->
di•œy
, xi->
∑ª¡
, 0, 
NULL
);

143 i‡(!
xi
->
imageGC
)

147 
	}
}

150 
	$x11_föish
(
w3mimg_›
 * 
£lf
)

152 
x11_öfo
 *
xi
;

153 i‡(
£lf
 =
NULL
)

155 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

156 i‡(
xi
 =
NULL
)

158 i‡(
xi
->
imageGC
) {

159 
	`XFªeGC
(
xi
->
di•œy
, xi->
imageGC
);

160 
xi
->
imageGC
 = 
NULL
;

163 
	}
}

166 
	$x11_˛ór
(
w3mimg_›
 * 
£lf
, 
x
, 
y
, 
w
, 
h
)

168 
x11_öfo
 *
xi
;

169 i‡(
£lf
 =
NULL
)

171 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

172 i‡(
xi
 =
NULL
)

175 i‡(
x
 < 0)

176 
x
 = 0;

177 i‡(
y
 < 0)

178 
y
 = 0;

180 
	`XCÀ¨Aªa
(
xi
->
di•œy
, xi->
wödow
, 
x
, 
y
, 
w
, 
h
, 
FÆ£
);

182 
	}
}

185 
	$x11_a˘ive
(
w3mimg_›
 * 
£lf
)

187 
x11_öfo
 *
xi
;

188 i‡(
£lf
 =
NULL
)

190 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

191 i‡(
xi
 =
NULL
)

193 i‡(!
xi
->
imageGC
)

196 
	}
}

199 
	$x11_£t_background
(
w3mimg_›
 * 
£lf
, *
background
)

201 
XCﬁ‹
 
s¸ìn_def
, 
exa˘_def
;

202 
x11_öfo
 *
xi
;

203 i‡(
£lf
 =
NULL
)

205 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

206 i‡(
xi
 =
NULL
)

209 i‡(
background
 &&

210 
	`XAŒocNamedCﬁ‹
(
xi
->
di•œy
, 
	`DeÁu…Cﬁ‹m≠
(xi->display, 0),

211 
background
, &
s¸ìn_def
, &
exa˘_def
))

212 
xi
->
background_pixñ
 = 
s¸ìn_def
.
pixñ
;

214 
Pixm≠
 
p
;

215 
GC
 
gc
;

216 
XImage
 *
i
;

218 
p
 = 
	`XCª©ePixm≠
(
xi
->
di•œy
, xi->
wödow
, 1, 1,

219 
	`DeÁu…Dïth
(
xi
->
di•œy
, 0));

220 
gc
 = 
	`XCª©eGC
(
xi
->
di•œy
, xi->
wödow
, 0, 
NULL
);

221 i‡(!
p
 || !
gc
)

222 
	`exô
(1);

223 
	`XC›yAªa
(
xi
->
di•œy
, xi->
wödow
, 
p
, 
gc
,

224 (
£lf
->
off£t_x
 >= 1) ? (self->offset_x - 1) : 0,

225 (
£lf
->
off£t_y
 >= 1) ? (self->offset_y - 1) : 0,

227 
i
 = 
	`XGëImage
(
xi
->
di•œy
, 
p
, 0, 0, 1, 1, -1, 
ZPixm≠
);

228 i‡(!
i
)

229 
	`exô
(1);

230 
xi
->
background_pixñ
 = 
	`XGëPixñ
(
i
, 0, 0);

231 
	`XDe°royImage
(
i
);

232 
	`XFªeGC
(
xi
->
di•œy
, 
gc
);

233 
	`XFªePixm≠
(
xi
->
di•œy
, 
p
);

235 
	}
}

238 
	$x11_sync
(
w3mimg_›
 * 
£lf
)

240 
x11_öfo
 *
xi
;

241 i‡(
£lf
 =
NULL
)

243 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

244 i‡(
xi
 =
NULL
)

246 
	`XSync
(
xi
->
di•œy
, 
FÆ£
);

247 
	}
}

250 
	$x11_˛o£
(
w3mimg_›
 * 
£lf
)

253 
	}
}

255 #i‡
deföed
(
USE_GDKPIXBUF
)

256 
x11_image
 *

257 
	$x11_img_√w
(
x11_öfo
 *
xi
, 
w
, 
h
, 
n
)

259 
x11_image
 *
img
 = 
NULL
;

260 
i
;

262 
img
 = 
	`mÆloc
((*img));

263 i‡(!
img
)

264 
ERROR
;

266 
img
->
pixm≠
 = 
	`ˇŒoc
(
n
, (*(img->pixmap)));

267 i‡(!
img
->
pixm≠
)

268 
ERROR
;

270 
i
 = 0; i < 
n
; i++) {

271 
img
->
pixm≠
[
i
] = 
	`XCª©ePixm≠
(
xi
->
di•œy
, xi->
∑ª¡
, 
w
, 
h
,

272 
	`DeÁu…Dïth
(
xi
->
di•œy
, 0));

273 i‡(!
img
->
pixm≠
[
i
])

274 
ERROR
;

276 
	`XSëF‹eground
(
xi
->
di•œy
, xi->
imageGC
, xi->
background_pixñ
);

277 
	`XFûlRe˘™gÀ
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
[
i
], xi->
imageGC
, 0, 0,

278 
w
, 
h
);

281 
img
->
no
 = 0;

282 
img
->
tŸÆ
 = 
n
;

283 
img
->
waô
 = 0;

284 
img
->
dñay
 = -1;

286  
img
;

287 
ERROR
:

288 i‡(
img
) {

289 i‡(
img
->
pixm≠
) {

290 
i
 = 0; i < 
n
; i++) {

291 i‡(
img
->
pixm≠
[
i
])

292 
	`XFªePixm≠
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
[
i
]);

294 
	`‰ì
(
img
->
pixm≠
);

296 
	`‰ì
(
img
);

298  
NULL
;

299 
	}
}

301 
GdkPixbuf
 *

302 
	$ªsize_image
(
GdkPixbuf
 * 
pixbuf
, 
width
, 
height
)

304 
GdkPixbuf
 *
ªsized_pixbuf
;

305 
w
, 
h
;

307 i‡(
pixbuf
 =
NULL
)

308  
NULL
;

309 
w
 = 
	`gdk_pixbuf_gë_width
(
pixbuf
);

310 
h
 = 
	`gdk_pixbuf_gë_height
(
pixbuf
);

311 i‡(
width
 < 1 || 
height
 < 1)

312  
pixbuf
;

313 i‡(
w
 =
width
 && 
h
 =
height
)

314  
pixbuf
;

315 
ªsized_pixbuf
 =

316 
	`gdk_pixbuf_sˇÀ_sim∂e
(
pixbuf
, 
width
, 
height
, 
GDK_INTERP_BILINEAR
);

317 i‡(
ªsized_pixbuf
 =
NULL
)

318  
NULL
;

319  
ªsized_pixbuf
;

320 
	}
}

324 
	$x11_lﬂd_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
, *
‚ame
, 
w
, 
h
)

326 
x11_öfo
 *
xi
;

327 #i‡
	`deföed
(
USE_IMLIB
)

328 
ImlibImage
 *
im
;

329 #ñi‡
	`deföed
(
USE_IMLIB2
)

330 
Imlib_Image
 
im
;

331 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

332 
GdkPixbufAnim©i⁄
 *
™im©i⁄
;

333 
j
, 
iw
, 
ih
, 
n
, 
‰ame_num
, 
dñay
 = -1, 
max_™im
;

334 
øtio_w
, 
øtio_h
;

335 
x11_image
 *
ximg
;

336 
Pixm≠
 
tmp_pixm≠
;

337 #i‡
	`deföed
(
USE_GTK2
)

338 
GdkPixbufAnim©i⁄Iãr
 *
ôî
;

339 
GTimeVÆ
 
time
;

341 
i
;

342 
GLi°
 *
‰ames
;

346 i‡(
£lf
 =
NULL
)

348 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

349 i‡(
xi
 =
NULL
)

352 #i‡
	`deföed
(
USE_IMLIB
)

353 
im
 = 
	`Imlib_lﬂd_image
(
xi
->
id
, 
‚ame
);

354 i‡(!
im
)

356 i‡(
w
 <= 0)

357 
w
 = 
im
->
rgb_width
;

358 i‡(
h
 <= 0)

359 
h
 = 
im
->
rgb_height
;

360 
img
->
pixm≠
 = (*)
	`XCª©ePixm≠
(
xi
->
di•œy
, xi->
∑ª¡
, 
w
, 
h
,

361 
	`DeÁu…Dïth
(
xi
->
di•œy
, 0));

362 i‡(!
img
->
pixm≠
)

364 
	`XSëF‹eground
(
xi
->
di•œy
, xi->
imageGC
, xi->
background_pixñ
);

365 
	`XFûlRe˘™gÀ
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
, xi->
imageGC
, 0, 0, 
w
, 
h
);

366 
	`Imlib_∑°e_image
(
xi
->
id
, 
im
, (
Pixm≠
Ë
img
->
pixm≠
, 0, 0, 
w
, 
h
);

367 
	`Imlib_kûl_image
(
xi
->
id
, 
im
);

368 #ñi‡
	`deföed
(
USE_IMLIB2
)

369 
im
 = 
	`imlib_lﬂd_image
(
‚ame
);

370 i‡(!
im
)

372 
	`imlib_c⁄ãxt_£t_image
(
im
);

373 i‡(
w
 <= 0)

374 
w
 = 
	`imlib_image_gë_width
();

375 i‡(
h
 <= 0)

376 
h
 = 
	`imlib_image_gë_height
();

377 
img
->
pixm≠
 = (*)
	`XCª©ePixm≠
(
xi
->
di•œy
, xi->
∑ª¡
, 
w
, 
h
,

378 
	`DeÁu…Dïth
(
xi
->
di•œy
, 0));

379 i‡(!
img
->
pixm≠
)

381 
	`XSëF‹eground
(
xi
->
di•œy
, xi->
imageGC
, xi->
background_pixñ
);

382 
	`XFûlRe˘™gÀ
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
, xi->
imageGC
, 0, 0, 
w
, 
h
);

383 
	`imlib_c⁄ãxt_£t_di•œy
(
xi
->
di•œy
);

384 
	`imlib_c⁄ãxt_£t_visuÆ
(
	`DeÁu…VisuÆ
(
xi
->
di•œy
, 0));

385 
	`imlib_c⁄ãxt_£t_cﬁ‹m≠
(
	`DeÁu…Cﬁ‹m≠
(
xi
->
di•œy
, 0));

386 
	`imlib_c⁄ãxt_£t_døwabÀ
((
DøwabÀ
Ë
img
->
pixm≠
);

387 
	`imlib_ªndî_image_⁄_døwabÀ_©_size
(0, 0, 
w
, 
h
);

388 
	`imlib_‰ì_image
();

389 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

390 
max_™im
 = 
£lf
->max_anim;

391 #i‡
	`deföed
(
USE_GTK2
)

392 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
‚ame
, 
NULL
);

394 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
‚ame
);

396 i‡(!
™im©i⁄
)

398 
‰ame_num
 = 
n
 = 
	`gë_™im©i⁄_size
(
™im©i⁄
, &
iw
, &
ih
, &
dñay
);

399 i‡(
dñay
 <= 0)

400 
max_™im
 = -1;

402 i‡(
max_™im
 < 0) {

403 
‰ame_num
 = (-
max_™im
 > 
n
) ?Ç : -max_anim;

405 i‡(
max_™im
 > 0) {

406 
‰ame_num
 = 
n
 = (
max_™im
 >Ç) ?Ç : max_anim;

409 i‡(
w
 < 1 || 
h
 < 1) {

410 
w
 = 
iw
;

411 
h
 = 
ih
;

412 
øtio_w
 = 
øtio_h
 = 1;

415 
øtio_w
 = 1.0 * 
w
 / 
iw
;

416 
øtio_h
 = 1.0 * 
h
 / 
ih
;

418 
tmp_pixm≠
 = 
	`XCª©ePixm≠
(
xi
->
di•œy
, xi->
∑ª¡
, 
w
, 
h
,

419 
	`DeÁu…Dïth
(
xi
->
di•œy
, 0));

420 
	`XSëF‹eground
(
xi
->
di•œy
, xi->
imageGC
, xi->
background_pixñ
);

421 
	`XFûlRe˘™gÀ
(
xi
->
di•œy
, (
Pixm≠
Ë
tmp_pixm≠
, xi->
imageGC
, 0, 0, 
w
, 
h
);

422 i‡(!
tmp_pixm≠
) {

423 #i‡
	`deföed
(
USE_GTK2
)

424 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

426 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

430 
ximg
 = 
	`x11_img_√w
(
xi
, 
w
, 
h
, 
‰ame_num
);

431 i‡(!
ximg
) {

432 
	`XFªePixm≠
(
xi
->
di•œy
, 
tmp_pixm≠
);

433 #i‡
	`deföed
(
USE_GTK2
)

434 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

436 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

440 #i‡
	`deföed
(
USE_GTK2
)

441 
	`g_gë_cuºít_time
(&
time
);

442 
ôî
 = 
	`gdk_pixbuf_™im©i⁄_gë_ôî
(
™im©i⁄
, &
time
);

444 i‡(
max_™im
 < 0 && 
n
 > -max_anim) {

445 
max_™im
 = 
n
 + max_anim;

446 
j
 = 0; j < 
max_™im
; j++) {

447 
dñay
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
);

448 
	`g_time_vÆ_add
(&
time
, 
dñay
 * 1000);

449 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

452 
j
 = 0; j < 
‰ame_num
; j++) {

453 
GdkPixbuf
 *
‹g_pixbuf
, *
pixbuf
;

455 
‹g_pixbuf
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_pixbuf
(
ôî
);

456 
dñay
 = 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
(
ôî
);

457 
pixbuf
 = 
	`ªsize_image
(
‹g_pixbuf
, 
w
, 
h
);

459 i‡(
dñay
 > 
ximg
->delay)

460 
ximg
->
dñay
 = delay;

462 
	`gdk_pixbuf_xlib_ªndî_to_døwabÀ_Æpha
(
pixbuf
,

463 (
DøwabÀ
Ë
ximg
->
pixm≠
[
j
], 0,

464 0, 0, 0, 
w
, 
h
,

465 
GDK_PIXBUF_ALPHA_BILEVEL
, 1,

466 
XLIB_RGB_DITHER_NORMAL
, 0, 0);

467 i‡(
‹g_pixbuf
 !
pixbuf
)

468 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
pixbuf
));

469 
	`g_time_vÆ_add
(&
time
, 
dñay
 * 1000);

470 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
(
ôî
, &
time
);

472 
	`XFªePixm≠
(
xi
->
di•œy
, 
tmp_pixm≠
);

473 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

476 
‰ames
 = 
	`gdk_pixbuf_™im©i⁄_gë_‰ames
(
™im©i⁄
);

478 
j
 = 0; j < 
n
; j++) {

479 
GdkPixbufFøme
 *
‰ame
;

480 
GdkPixbuf
 *
‹g_pixbuf
, *
pixbuf
;

481 
width
, 
height
, 
of°x
, 
of°y
;

483 i‡(
max_™im
 < 0) {

484 
i
 = (
j
 - 
n
 + 
‰ame_num
 > 0) ? (j -Ç + frame_num) : 0;

487 
i
 = 
j
;

489 
‰ame
 = (
GdkPixbufFøme
 *Ë
	`g_li°_¡h_d©a
(
‰ames
, 
j
);

490 
‹g_pixbuf
 = 
	`gdk_pixbuf_‰ame_gë_pixbuf
(
‰ame
);

491 
of°x
 = 
	`gdk_pixbuf_‰ame_gë_x_off£t
(
‰ame
);

492 
of°y
 = 
	`gdk_pixbuf_‰ame_gë_y_off£t
(
‰ame
);

493 
dñay
 = 
	`gdk_pixbuf_‰ame_gë_dñay_time
(
‰ame
);

494 
width
 = 
	`gdk_pixbuf_gë_width
(
‹g_pixbuf
);

495 
height
 = 
	`gdk_pixbuf_gë_height
(
‹g_pixbuf
);

497 i‡(
of°x
 =0 && 
of°y
 =0 && 
width
 =
w
 && 
height
 =
h
) {

498 
pixbuf
 = 
	`ªsize_image
(
‹g_pixbuf
, 
w
, 
h
);

501 
pixbuf
 =

502 
	`ªsize_image
(
‹g_pixbuf
, 
width
 * 
øtio_w
, 
height
 * 
øtio_h
);

503 
of°x
 *
øtio_w
;

504 
of°y
 *
øtio_h
;

506 
width
 = 
	`gdk_pixbuf_gë_width
(
pixbuf
);

507 
height
 = 
	`gdk_pixbuf_gë_height
(
pixbuf
);

509 i‡(
dñay
 > 
ximg
->delay)

510 
ximg
->
dñay
 = delay;

512 
	`XC›yAªa
(
xi
->
di•œy
, 
tmp_pixm≠
, 
ximg
->
pixm≠
[
i
],

513 
xi
->
imageGC
, 0, 0, 
w
, 
h
, 0, 0);

514 
	`gdk_pixbuf_xlib_ªndî_to_døwabÀ_Æpha
(
pixbuf
,

515 (
DøwabÀ
Ë
ximg
->
pixm≠
[
i
], 0,

516 0, 
of°x
, 
of°y
, 
width
,

517 
height
,

518 
GDK_PIXBUF_ALPHA_BILEVEL
, 1,

519 
XLIB_RGB_DITHER_NORMAL
, 0, 0);

521 
	`gdk_pixbuf_‰ame_gë_a˘i⁄
(
‰ame
)) {

522 
GDK_PIXBUF_FRAME_RETAIN
:

523 
	`XC›yAªa
(
xi
->
di•œy
, 
ximg
->
pixm≠
[
i
], 
tmp_pixm≠
,

524 
xi
->
imageGC
, 0, 0, 
w
, 
h
, 0, 0);

526 
GDK_PIXBUF_FRAME_DISPOSE
:

527 
	`XSëF‹eground
(
xi
->
di•œy
, xi->
imageGC
, xi->
background_pixñ
);

528 
	`XFûlRe˘™gÀ
(
xi
->
di•œy
, 
tmp_pixm≠
, xi->
imageGC
,

529 0, 0, 
w
, 
h
);

531 
GDK_PIXBUF_FRAME_REVERT
:

532 
	`XC›yAªa
(
xi
->
di•œy
, 
ximg
->
pixm≠
[0], 
tmp_pixm≠
,

533 
xi
->
imageGC
, 0, 0, 
w
, 
h
, 0, 0);

536 
	`XC›yAªa
(
xi
->
di•œy
, 
ximg
->
pixm≠
[0], 
tmp_pixm≠
,

537 
xi
->
imageGC
, 0, 0, 
w
, 
h
, 0, 0);

542 i‡(
‹g_pixbuf
 !
pixbuf
)

543 
	`gdk_pixbuf_föÆize
(
pixbuf
);

546 
	`XFªePixm≠
(
xi
->
di•œy
, 
tmp_pixm≠
);

547 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

549 
img
->
pixm≠
 = 
ximg
;

552 
img
->
width
 = 
w
;

553 
img
->
height
 = 
h
;

555 
	}
}

558 
	$x11_show_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
, 
sx
, 
sy
, 
sw
,

559 
sh
, 
x
, 
y
)

561 
x11_öfo
 *
xi
;

562 #i‡
	`deföed
(
USE_GDKPIXBUF
)

563 
x11_image
 *
ximg
 = 
img
->
pixm≠
;

564 
i
;

566 i‡(
£lf
 =
NULL
)

569 i‡(
img
->
pixm≠
 =
NULL
)

572 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

573 i‡(
xi
 =
NULL
)

576 #i‡
	`deföed
(
USE_IMLIB
Ë|| deföed(
USE_IMLIB2
)

577 
	`XC›yAªa
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
, xi->
wödow
, xi->
imageGC
,

578 
sx
, 
sy
,

579 (
sw
 ? sw : 
img
->
width
),

580 (
sh
 ? sh : 
img
->
height
), 
x
 + 
£lf
->
off£t_x
, 
y
 + sñf->
off£t_y
);

581 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

582 
	#WAIT_CNT
 4

	)

583 i‡(
ximg
->
dñay
 <= 0)

584 
i
 = 
ximg
->
tŸÆ
 - 1;

586 
i
 = 
ximg
->
no
;

587 
	`XC›yAªa
(
xi
->
di•œy
, 
ximg
->
pixm≠
[
i
], xi->
wödow
, xi->
imageGC
,

588 
sx
, 
sy
,

589 (
sw
 ? sw : 
img
->
width
),

590 (
sh
 ? sh : 
img
->
height
), 
x
 + 
£lf
->
off£t_x
, 
y
 + sñf->
off£t_y
);

591 i‡(
ximg
->
tŸÆ
 > 1) {

592 i‡(
ximg
->
waô
 > 
WAIT_CNT
) {

593 
ximg
->
waô
 = 0;

594 i‡(
i
 < 
ximg
->
tŸÆ
 - 1)

595 
ximg
->
no
 = 
i
 + 1;

597 
ximg
->
no
 = 0;

599 
ximg
->
waô
 += 1;

603 
	}
}

606 
	$x11_‰ì_image
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
)

608 
x11_öfo
 *
xi
;

609 i‡(
£lf
 =
NULL
)

611 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

612 i‡(
xi
 =
NULL
)

614 #i‡
	`deföed
(
USE_IMLIB
Ë|| deföed(
USE_IMLIB2
)

615 i‡(
img
 && img->
pixm≠
) {

616 
	`XFªePixm≠
(
xi
->
di•œy
, (
Pixm≠
Ë
img
->
pixm≠
);

617 
img
->
pixm≠
 = 
NULL
;

618 
img
->
width
 = 0;

619 
img
->
height
 = 0;

621 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

622 i‡(
img
 && img->
pixm≠
) {

623 
x11_image
 *
ximg
 = 
img
->
pixm≠
;

624 
i
, 
n
;

625 i‡(
ximg
->
pixm≠
) {

626 
n
 = 
ximg
->
tŸÆ
;

627 
i
 = 0; i < 
n
; i++) {

628 i‡(
ximg
->
pixm≠
[
i
])

629 
	`XFªePixm≠
(
xi
->
di•œy
, (
Pixm≠
Ë
ximg
->
pixm≠
[
i
]);

631 
	`‰ì
(
ximg
->
pixm≠
);

633 
	`‰ì
(
ximg
);

634 
img
->
pixm≠
 = 
NULL
;

635 
img
->
width
 = 0;

636 
img
->
height
 = 0;

639 
	}
}

642 
	$x11_gë_image_size
(
w3mimg_›
 * 
£lf
, 
W3MImage
 * 
img
, *
‚ame
, *
w
,

643 *
h
)

645 
x11_öfo
 *
xi
;

646 #i‡
	`deföed
(
USE_IMLIB
)

647 
ImlibImage
 *
im
;

648 #ñi‡
	`deföed
(
USE_IMLIB2
)

649 
Imlib_Image
 
im
;

650 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

651 
GdkPixbufAnim©i⁄
 *
™im©i⁄
;

654 i‡(
£lf
 =
NULL
)

656 
xi
 = (
x11_öfo
 *)
£lf
->
¥iv
;

657 i‡(
xi
 =
NULL
)

660 #i‡
	`deföed
(
USE_IMLIB
)

661 
im
 = 
	`Imlib_lﬂd_image
(
xi
->
id
, 
‚ame
);

662 i‡(!
im
)

665 *
w
 = 
im
->
rgb_width
;

666 *
h
 = 
im
->
rgb_height
;

667 
	`Imlib_kûl_image
(
xi
->
id
, 
im
);

668 #ñi‡
	`deföed
(
USE_IMLIB2
)

669 
im
 = 
	`imlib_lﬂd_image
(
‚ame
);

670 i‡(
im
 =
NULL
)

673 
	`imlib_c⁄ãxt_£t_image
(
im
);

674 *
w
 = 
	`imlib_image_gë_width
();

675 *
h
 = 
	`imlib_image_gë_height
();

676 
	`imlib_‰ì_image
();

677 #ñi‡
	`deföed
(
USE_GDKPIXBUF
)

678 #i‡
	`deföed
(
USE_GTK2
)

679 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
‚ame
, 
NULL
);

681 
™im©i⁄
 = 
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
(
‚ame
);

683 i‡(!
™im©i⁄
)

686 
	`gë_™im©i⁄_size
(
™im©i⁄
, 
w
, 
h
, 
NULL
);

687 #i‡
	`deföed
(
USE_GTK2
)

688 
	`g_obje˘_uƒef
(
	`G_OBJECT
(
™im©i⁄
));

690 
	`gdk_pixbuf_™im©i⁄_uƒef
(
™im©i⁄
);

694 
	}
}

742 
w3mimg_›
 *

743 
	$w3mimg_x11›í
()

745 
w3mimg_›
 *
w›
 = 
NULL
;

746 
x11_öfo
 *
xi
 = 
NULL
;

747 *
id
;

748 
ªvît
, 
i
;

749 
nchûdªn
;

750 
XWödowAâribuãs
 
©å
;

751 
Wödow
 
roŸ
, *
chûdªn
;

753 
w›
 = (
w3mimg_›
 *Ë
	`mÆloc
((w3mimg_op));

754 i‡(
w›
 =
NULL
)

755  
NULL
;

756 
	`mem£t
(
w›
, 0, (
w3mimg_›
));

758 
xi
 = (
x11_öfo
 *)
	`mÆloc
((x11_info));

759 i‡(
xi
 =
NULL
)

760 
îr‹
;

761 
	`mem£t
(
xi
, 0, (
x11_öfo
));

763 
xi
->
di•œy
 = 
	`XO≥nDi•œy
(
NULL
);

764 i‡(
xi
->
di•œy
 =
NULL
) {

765 
îr‹
;

767 i‡((
id
 = 
	`gëív
("WINDOWID")Ë!
NULL
)

768 
xi
->
wödow
 = (
Wödow
Ë
	`©oi
(
id
);

770 
	`XGëI≈utFocus
(
xi
->
di•œy
, &xi->
wödow
, &
ªvît
);

771 i‡(!
xi
->
wödow
)

772 
	`exô
(1);

774 
	`XGëWödowAâribuãs
(
xi
->
di•œy
, xi->
wödow
, &
©å
);

775 
w›
->
width
 = 
©å
.width;

776 
w›
->
height
 = 
©å
.height;

779 
Wödow
 
p_wödow
;

781 
	`XQuîyTªe
(
xi
->
di•œy
, xi->
wödow
, &
roŸ
, &xi->
∑ª¡
,

782 &
chûdªn
, &
nchûdªn
);

783 
p_wödow
 = 
xi
->
wödow
;

784 
i
 = 0; i < 
nchûdªn
; i++) {

785 
	`XGëWödowAâribuãs
(
xi
->
di•œy
, 
chûdªn
[
i
], &
©å
);

786 i‡(
©å
.
width
 > 
w›
->width * 0.7 &&

787 
©å
.
height
 > 
w›
->height * 0.7) {

789 
w›
->
width
 = 
©å
.width;

790 
w›
->
height
 = 
©å
.height;

791 
xi
->
wödow
 = 
chûdªn
[
i
];

794 i‡(
p_wödow
 =
xi
->
wödow
)

797 
w›
->
off£t_x
 = 
OFFSET_X
;

798 
i
 = 0; i < 
nchûdªn
; i++) {

799 
	`XGëWödowAâribuãs
(
xi
->
di•œy
, 
chûdªn
[
i
], &
©å
);

800 i‡(
©å
.
x
 <0 &&áâr.
width
 < 30 &&áâr.
height
 > 
w›
->height * 0.7) {

802 
w›
->
off£t_x
 +
©å
.
x
 +áâr.
width
 +áâr.
b‹dî_width
 * 2;

806 
w›
->
off£t_y
 = 
OFFSET_Y
;

808 
w›
->
¥iv
 = 
xi
;

810 
w›
->
öô
 = 
x11_öô
;

811 
w›
->
föish
 = 
x11_föish
;

812 
w›
->
a˘ive
 = 
x11_a˘ive
;

813 
w›
->
£t_background
 = 
x11_£t_background
;

814 
w›
->
sync
 = 
x11_sync
;

815 
w›
->
˛o£
 = 
x11_˛o£
;

816 
w›
->
˛ór
 = 
x11_˛ór
;

818 
w›
->
lﬂd_image
 = 
x11_lﬂd_image
;

819 
w›
->
show_image
 = 
x11_show_image
;

820 
w›
->
‰ì_image
 = 
x11_‰ì_image
;

821 
w›
->
gë_image_size
 = 
x11_gë_image_size
;

823  
w›
;

824 
îr‹
:

825 i‡(
xi
)

826 
	`‰ì
(
xi
);

827 
	`‰ì
(
w›
);

828  
NULL
;

829 
	}
}

	@w3mimgdisplay.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<˘y≥.h
>

5 
	~<°rög.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<uni°d.h
>

8 
	~"c⁄fig.h
"

9 
	~"w3mimg/w3mimg.h
"

11 
w3mimg_›
 *
	gw_›
;

12 *
	gbackground
 = 
NULL
;

13 
	goff£t_x
 = 0, 
	goff£t_y
 = 0;

14 
	gdeföed_bg
 = 0, 
	gdeföed_x
 = 0, 
	gdeföed_y
 = 0, 
	gdeföed_ã°
 = 0;

15 
	gdeföed_debug
 = 0;

16 *
	gdeföed_size
 = 
NULL
;

18 
	#MAX_IMAGE
 1000

	)

19 
W3MImage
 *
	gimageBuf
 = 
NULL
;

20 
	gmaxImage
 = 0, 
	gmaxAnim
 = 100, 
	g˛órM¨gö
 = 0;

22 
GëO±i⁄
(
¨gc
, **
¨gv
);

23 
DøwImage
(*
buf
, 
ªdøw
);

24 
TîmImage
();

25 
CÀ¨Image
(*
buf
);

28 
	$maö
(
¨gc
, **
¨gv
)

30 
Àn
;

31 
buf
[1024 + 128];

32 #ifde‡
W3MIMGDISPLAY_SETUID


33 
uid_t
 
ru¬î_uid
 = 
	`gëuid
();

34 
uid_t
 
ow√r_uid
 = 
	`gëeuid
();

37 
	`£åeuid
(
ow√r_uid
, 
ru¬î_uid
);

39 
	`GëO±i⁄
(
¨gc
, 
¨gv
);

40 i‡(!
deföed_debug
)

41 
	`‰e›í
(
DEV_NULL_PATH
, "w", 
°dîr
);

43 #ifde‡
W3MIMGDISPLAY_SETUID


48 
	`£åeuid
(
ru¬î_uid
, 
ow√r_uid
);

50 
w_›
 = 
	`w3mimg_›í
();

51 #ifde‡
W3MIMGDISPLAY_SETUID


53 
	`£åeuid
(
ru¬î_uid
,Ñunner_uid);

55 i‡(
w_›
 =
NULL
)

56 
	`exô
(1);

57 i‡(
deföed_x
)

58 
w_›
->
off£t_x
 = offset_x;

59 i‡(
deföed_y
)

60 
w_›
->
off£t_y
 = offset_y;

62 
w_›
->
max_™im
 = 
maxAnim
;

63 
w_›
->
˛ór_m¨gö
 = 
˛órM¨gö
;

65 i‡(
deföed_ã°
) {

66 
	`¥ötf
("%d %d\n", 
w_›
->
width
 - w_›->
off£t_x
,

67 
w_›
->
height
 - w_›->
off£t_y
);

68 
	`exô
(0);

71 i‡(
deföed_size
) {

72 i‡(
w_›
->
	`öô
(w_op)) {

73 
W3MImage
 
img
;

74 
w
, 
h
;

75 i‡(
w_›
->
	`gë_image_size
(w_›, &
img
, 
deföed_size
, &
w
, &
h
))

76 
	`¥ötf
("%d %d\n", 
w
, 
h
);

78 
	`exô
(0);

81 
w_›
->
	`£t_background
(w_›, 
background
);

83 
	`fgës
(
buf
, (buf), 
°dö
Ë!
NULL
) {

84 i‡(!(
	`isdigô
(
buf
[0]) && buf[1] == ';')) {

85 
	`Âutc
('\n', 
°dout
);

86 
	`fÊush
(
°dout
);

89 
Àn
 = 
	`°æí
(
buf
);

90 i‡(
buf
[
Àn
 - 1] == '\n') {

91 
buf
[--
Àn
] = '\0';

92 i‡(
buf
[
Àn
 - 1] == '\r')

93 
buf
[--
Àn
] = '\0';

120 
buf
[0]) {

122 
	`DøwImage
(&
buf
[2], 0);

125 
	`DøwImage
(&
buf
[2], 1);

128 
	`TîmImage
();

131 
w_›
->
	`sync
(w_op);

134 
	`Âuts
("\n", 
°dout
);

135 
	`fÊush
(
°dout
);

138 i‡(
w_›
->
	`öô
(w_op)) {

139 
W3MImage
 
img
;

140 
w
, 
h
;

141 i‡(
w_›
->
	`gë_image_size
(w_›, &
img
, &
buf
[2], &
w
, &
h
)) {

142 
	`Ârötf
(
°dout
, "%d %d\n", 
w
, 
h
);

143 
	`fÊush
(
°dout
);

146 
	`Ârötf
(
°dout
, "\n");

147 
	`fÊush
(
°dout
);

151 
	`Ârötf
(
°dout
, "\n");

152 
	`fÊush
(
°dout
);

156 
	`CÀ¨Image
(&
buf
[2]);

160 
	`TîmImage
();

161 
w_›
->
	`˛o£
(w_op);

162 
	`exô
(0);

163 
	}
}

166 
	$GëO±i⁄
(
¨gc
, **
¨gv
)

168 
i
;

170 
i
 = 1; i < 
¨gc
; i++) {

171 i‡(!
	`°rcmp
("-bg", 
¨gv
[
i
])) {

172 i‡(++
i
 >
¨gc
)

173 
	`exô
(1);

174 
background
 = 
¨gv
[
i
];

175 
deföed_bg
 = 1;

177 i‡(!
	`°rcmp
("-x", 
¨gv
[
i
])) {

178 i‡(++
i
 >
¨gc
)

179 
	`exô
(1);

180 
off£t_x
 = 
	`©oi
(
¨gv
[
i
]);

181 
deföed_x
 = 1;

183 i‡(!
	`°rcmp
("-y", 
¨gv
[
i
])) {

184 i‡(++
i
 >
¨gc
)

185 
	`exô
(1);

186 
off£t_y
 = 
	`©oi
(
¨gv
[
i
]);

187 
deföed_y
 = 1;

189 i‡(!
	`°rcmp
("-ã°", 
¨gv
[
i
])) {

190 
deföed_ã°
 = 1;

192 i‡(!
	`°rcmp
("-™im", 
¨gv
[
i
])) {

193 i‡(++
i
 >
¨gc
)

194 
	`exô
(1);

195 
maxAnim
 = 
	`©oi
(
¨gv
[
i
]);

197 i‡(!
	`°rcmp
("-m¨gö", 
¨gv
[
i
])) {

198 i‡(++
i
 >
¨gc
)

199 
	`exô
(1);

200 
˛órM¨gö
 = 
	`©oi
(
¨gv
[
i
]);

201 i‡(
˛órM¨gö
 < 0)

202 
˛órM¨gö
 = 0;

204 i‡(!
	`°rcmp
("-size", 
¨gv
[
i
])) {

205 i‡(++
i
 >
¨gc
)

206 
	`exô
(1);

207 
deföed_size
 = 
¨gv
[
i
];

209 i‡(!
	`°rcmp
("-debug", 
¨gv
[
i
])) {

210 
deföed_debug
 = 1;

213 
	`exô
(1);

216 
	}
}

219 
	$DøwImage
(*
buf
, 
ªdøw
)

221 *
p
 = 
buf
;

222 
n
 = 0, 
x
 = 0, 
y
 = 0, 
w
 = 0, 
h
 = 0, 
sx
 = 0, 
sy
 = 0, 
sw
 = 0, 
sh
 = 0;

224 i‡(!
p
)

226 ; 
	`isdigô
(*
p
);Ö++)

227 
n
 = 10 *Ç + (*
p
 - '0');

228 i‡(*(
p
++) != ';')

230 ; 
	`isdigô
(*
p
);Ö++)

231 
x
 = 10 * x + (*
p
 - '0');

232 i‡(*(
p
++) != ';')

234 ; 
	`isdigô
(*
p
);Ö++)

235 
y
 = 10 * y + (*
p
 - '0');

236 i‡(*(
p
++) != ';')

238 ; 
	`isdigô
(*
p
);Ö++)

239 
w
 = 10 * w + (*
p
 - '0');

240 i‡(*(
p
++) != ';')

242 ; 
	`isdigô
(*
p
);Ö++)

243 
h
 = 10 * h + (*
p
 - '0');

244 i‡(*(
p
++) != ';')

246 ; 
	`isdigô
(*
p
);Ö++)

247 
sx
 = 10 * sx + (*
p
 - '0');

248 i‡(*(
p
++) != ';')

250 ; 
	`isdigô
(*
p
);Ö++)

251 
sy
 = 10 * sy + (*
p
 - '0');

252 i‡(*(
p
++) != ';')

254 ; 
	`isdigô
(*
p
);Ö++)

255 
sw
 = 10 * sw + (*
p
 - '0');

256 i‡(*(
p
++) != ';')

258 ; 
	`isdigô
(*
p
);Ö++)

259 
sh
 = 10 * sh + (*
p
 - '0');

260 i‡(*(
p
++) != ';')

263 
n
--;

264 i‡(
n
 < 0 ||Ç >
MAX_IMAGE
)

266 i‡(
ªdøw
) {

267 i‡(!
w_›
->
	`a˘ive
(w_›Ë|| 
n
 >
maxImage
 || !
imageBuf
[n].
pixm≠
)

269 
døw_image
;

271 
w_›
->
	`öô
(w_op);

273 i‡(
n
 >
maxImage
) {

274 
i
 = 
maxImage
;

275 
maxImage
 = 
i
 ? (i * 2) : 2;

276 i‡(
maxImage
 > 
MAX_IMAGE
)

277 
maxImage
 = 
MAX_IMAGE
;

278 i‡(
n
 >
maxImage
)

279 
maxImage
 = 
n
 + 1;

280 
imageBuf
 = (
W3MImage
 *Ë
	`ªÆloc
((*)imageBuf,

281 (
W3MImage
Ë* 
maxImage
);

282 ; 
i
 < 
maxImage
; i++)

283 
imageBuf
[
i
].
pixm≠
 = 
NULL
;

285 i‡(
imageBuf
[
n
].
pixm≠
) {

286 
w_›
->
	`‰ì_image
(w_›, &
imageBuf
[
n
]);

287 
imageBuf
[
n
].
pixm≠
 = 
NULL
;

290 i‡(
w_›
->
	`lﬂd_image
(w_›, &
imageBuf
[
n
], 
p
, 
w
, 
h
) == 0)

291 
imageBuf
[
n
].
pixm≠
 = 
NULL
;

293 
døw_image
:

294 i‡(
imageBuf
[
n
].
pixm≠
)

295 
w_›
->
	`show_image
(w_›, &
imageBuf
[
n
], 
sx
, 
sy
, 
sw
, 
sh
, 
x
, 
y
);

296 
	}
}

299 
	$TîmImage
()

301 
w_›
->
	`föish
(w_op);

302 i‡(
imageBuf
) {

303 
i
;

304 
i
 = 0; i < 
maxImage
; i++) {

305 
w_›
->
	`‰ì_image
(w_›, &
imageBuf
[
i
]);

307 
	`‰ì
(
imageBuf
);

308 
imageBuf
 = 
NULL
;

310 
maxImage
 = 0;

311 
	}
}

314 
	$CÀ¨Image
(*
buf
)

316 *
p
 = 
buf
;

317 
x
 = 0, 
y
 = 0, 
w
 = 0, 
h
 = 0;

319 i‡(!
p
)

321 ; 
	`isdigô
(*
p
);Ö++)

322 
x
 = 10 * x + (*
p
 - '0');

323 i‡(*(
p
++) != ';')

325 ; 
	`isdigô
(*
p
);Ö++)

326 
y
 = 10 * y + (*
p
 - '0');

327 i‡(*(
p
++) != ';')

329 ; 
	`isdigô
(*
p
);Ö++)

330 
w
 = 10 * w + (*
p
 - '0');

331 i‡(*(
p
++) != ';')

333 ; 
	`isdigô
(*
p
);Ö++)

334 
h
 = 10 * h + (*
p
 - '0');

336 
w_›
->
	`˛ór
(w_op,

337 
x
 + 
off£t_x
 - 
w_›
->
˛ór_m¨gö
,

338 
y
 + 
off£t_y
 - 
w_›
->
˛ór_m¨gö
,

339 
w
 + 
w_›
->
˛ór_m¨gö
 * 2, 
h
 + w_op->clear_margin * 2);

340 
	}
}

	@/usr/include/Imlib.h

1 #i‚de‡
__IMLIB_H__


2 
	#__IMLIB_H__


	)

4 
	~<Imlib_ty≥s.h
>

6 #ifde‡
__˝lu•lus


11 
ImlibD©a
 *
Imlib_öô
(
Di•œy
 * 
di•
);

12 
ImlibD©a
 *
Imlib_öô_wôh_∑øms
(
Di•œy
 * 
di•
, 
ImlibInôP¨ams
 * 
p
);

13 
Imlib_gë_ªndî_ty≥
(
ImlibD©a
 * 
id
);

14 
Imlib_£t_ªndî_ty≥
(
ImlibD©a
 * 
id
, 
ªnd_ty≥
);

15 
Imlib_lﬂd_cﬁ‹s
(
ImlibD©a
 * 
id
, *
fûe
);

16 
ImlibImage
 *
Imlib_lﬂd_image
(
ImlibD©a
 * 
id
, *
fûe
);

17 
Imlib_be°_cﬁ‹_m©ch
(
ImlibD©a
 * 
id
, *
r
, *
g
, *
b
);

18 
Imlib_ªndî
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, 
width
, 
height
);

19 
Pixm≠
 
Imlib_c›y_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

20 
Pixm≠
 
Imlib_c›y_mask
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

21 
Pixm≠
 
Imlib_move_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

22 
Pixm≠
 
Imlib_move_mask
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

23 
Imlib_de°roy_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

24 
Imlib_kûl_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
);

25 
Imlib_‰ì_cﬁ‹s
(
ImlibD©a
 * 
id
);

26 
Imlib_‰ì_pixm≠
(
ImlibD©a
 * 
id
, 
Pixm≠
 
pixm≠
);

27 
Imlib_gë_image_b‹dî
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, 
ImlibB‹dî
 * 
b‹dî
);

28 
Imlib_£t_image_b‹dî
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, 
ImlibB‹dî
 * 
b‹dî
);

29 
Imlib_gë_image_sh≠e
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, 
ImlibCﬁ‹
 * 
cﬁ‹
);

30 
Imlib_£t_image_sh≠e
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, 
ImlibCﬁ‹
 * 
cﬁ‹
);

31 
Imlib_ßve_image_to_eim
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, *
fûe
);

32 
Imlib_add_image_to_eim
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, *
fûe
);

33 
Imlib_ßve_image_to_µm
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
image
, *
fûe
);

34 
Imlib_lﬂd_fûe_to_pixm≠
(
ImlibD©a
 * 
id
, *
fûíame
, 
Pixm≠
 * 
pm≠
, Pixm≠ * 
mask
);

35 
Imlib_£t_image_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

36 
Imlib_£t_image_ªd_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

37 
Imlib_£t_image_gªí_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

38 
Imlib_£t_image_blue_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

39 
Imlib_gë_image_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

40 
Imlib_gë_image_ªd_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

41 
Imlib_gë_image_gªí_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

42 
Imlib_gë_image_blue_modifõr
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
ImlibCﬁ‹Modifõr
 * 
mod
);

43 
Imlib_£t_image_ªd_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

44 
Imlib_£t_image_gªí_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

45 
Imlib_£t_image_blue_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

46 
Imlib_gë_image_ªd_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

47 
Imlib_gë_image_gªí_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

48 
Imlib_gë_image_blue_curve
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
mod
);

49 
Imlib_≠∂y_modifõrs_to_rgb
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
);

50 
Imlib_ch™ged_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
);

51 
Imlib_≠∂y_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
Wödow
 
p
);

52 
Imlib_∑°e_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
Wödow
 
p
, 
x
, 
y
, 
w
, 
h
);

53 
Imlib_∑°e_image_b‹dî
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
Wödow
 
p
, 
x
, 
y
, 
w
, 
h
);

54 
Imlib_bevñ_image
(
ImlibD©a
 *
id
, 
ImlibImage
 *
im
, 
ImlibB‹dî
 *
b‹d
, 
up
);

55 
Imlib_bevñ_pixm≠
(
ImlibD©a
 *
id
, 
Pixm≠
 
p
, 
w
, 
h
, 
ImlibB‹dî
 *
b‹d
, 
up
);

56 
Imlib_Êù_image_h‹iz⁄èl
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
);

57 
Imlib_Êù_image_vîtiˇl
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
);

58 
Imlib_rŸ©e_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
d
);

59 
ImlibImage
 *
Imlib_¸óã_image_‰om_d©a
(
ImlibD©a
 * 
id
, *
d©a
, *
Æpha
, 
w
, 
h
);

60 
ImlibImage
 *
Imlib_˛⁄e_image
(
ImlibD©a
 * 
id
, ImlibImagê* 
im
);

61 
ImlibImage
 *
Imlib_˛⁄e_sˇÀd_image
(
ImlibD©a
 * 
id
, ImlibImagê* 
im
, 
w
, 
h
);

62 
Imlib_gë_ÁŒback
(
ImlibD©a
 * 
id
);

63 
Imlib_£t_ÁŒback
(
ImlibD©a
 * 
id
, 
ÁŒback
);

64 
VisuÆ
 *
Imlib_gë_visuÆ
(
ImlibD©a
 * 
id
);

65 
Cﬁ‹m≠
 
Imlib_gë_cﬁ‹m≠
(
ImlibD©a
 * 
id
);

66 *
Imlib_gë_sysc⁄fig
(
ImlibD©a
 * 
id
);

67 
ImlibImage
 *
Imlib_¸óã_image_‰om_xpm_d©a
(
ImlibD©a
 * 
id
, **
d©a
);

68 
Imlib_d©a_to_pixm≠
(
ImlibD©a
 * 
id
, **
d©a
, 
Pixm≠
 * 
pm≠
, Pixm≠ * 
mask
);

69 
Imlib_¸›_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, 
x
, 
y
, 
w
, 
h
);

70 
Imlib_ßve_image
(
ImlibD©a
 * 
id
, 
ImlibImage
 * 
im
, *
fûe
, 
ImlibSaveInfo
 * 
öfo
);

71 
ImlibImage
 *
Imlib_¸›_™d_˛⁄e_image
(
ImlibD©a
 * 
id
, ImlibImagê* 
im
, 
x
, 
y
, 
w
, 
h
);

72 
ImlibImage
 *
Imlib_¸óã_image_‰om_døwabÀ
(
ImlibD©a
 * 
id
, 
DøwabÀ
 
wö
, 
Pixm≠
 
mask
, 
x
, 
y
, 
width
, 
height
);

73 
ImlibImage
 *
Imlib_ölöed_≤g_to_image
(
ImlibD©a
 *
id
, *
d©a
, 
d©a_size
);

75 #ifde‡
__˝lu•lus


	@/usr/include/X11/Xlib.h

36 #i‚de‡
_XLIB_H_


37 
	#_XLIB_H_


	)

39 
	#XlibS≥cifiˇti⁄Rñó£
 6

	)

41 #ifde‡
USG


42 #i‚de‡
__TYPES__


43 
	~<sys/ty≥s.h
>

44 
	#__TYPES__


	)

47 #i‡
deföed
(
_POSIX_SOURCE
Ë&& deföed(
MOTOROLA
)

48 #unde‡
_POSIX_SOURCE


49 
	~<sys/ty≥s.h
>

50 
	#_POSIX_SOURCE


	)

52 
	~<sys/ty≥s.h
>

56 #i‡
deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

57 
	~<°döt.h
>

60 
	~<X11/X.h
>

63 
	~<X11/Xfun˝rŸo.h
>

64 
	~<X11/Xosdefs.h
>

66 #i‚de‡
X_WCHAR


67 #ifde‡
X_NOT_STDC_ENV


68 #i‚de‡
ISC


69 
	#X_WCHAR


	)

74 #i‚de‡
X_WCHAR


75 
	~<°ddef.h
>

77 #ifde‡
__UNIXOS2__


78 
	~<°dlib.h
>

81 
	twch¨_t
;

85 #i‡
deföed
(
ISC
Ë&& deföed(
USE_XMBTOWC
)

86 
	#w˘omb
(
a
,
b
Ë
	`_Xw˘omb
◊,b)

	)

87 
	#mbÀn
(
a
,
b
Ë
	`_XmbÀn
◊,b)

	)

88 #i‚de‡
USE_XWCHAR_STRING


89 
	#mbtowc
(
a
,
b
,
c
Ë
	`_Xmbtowc
◊,b,c)

	)

94 
_XmbÀn
(

95 #ifde‡
ISC


96 c⁄° *
°r
,

97 
size_t
 
Àn


99 *
°r
,

100 
Àn


106 
	#X_HAVE_UTF8_STRING
 1

	)

108 *
	tXPoöãr
;

110 
	#Boﬁ
 

	)

111 
	#Sètus
 

	)

112 
	#True
 1

	)

113 
	#FÆ£
 0

	)

115 
	#QueuedAÃódy
 0

	)

116 
	#QueuedA·îRódög
 1

	)

117 
	#QueuedA·îFlush
 2

	)

119 
	#C⁄√˘i⁄Numbî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
fd
)

	)

120 
	#RoŸWödow
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ
)

	)

121 
	#DeÁu…S¸ìn
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
deÁu…_s¸ìn
)

	)

122 
	#DeÁu…RoŸWödow
(
dpy
Ë(
	`S¸ìnOfDi•œy
(dpy,
	`DeÁu…S¸ìn
(dpy))->
roŸ
)

	)

123 
	#DeÁu…VisuÆ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_visuÆ
)

	)

124 
	#DeÁu…GC
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
deÁu…_gc
)

	)

125 
	#BœckPixñ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
bœck_pixñ
)

	)

126 
	#WhôePixñ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
whôe_pixñ
)

	)

127 
	#AŒPœ√s
 (()~0L)

	)

128 
	#QLígth
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
qÀn
)

	)

129 
	#Di•œyWidth
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
width
)

	)

130 
	#Di•œyHeight
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
height
)

	)

131 
	#Di•œyWidthMM
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
mwidth
)

	)

132 
	#Di•œyHeightMM
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
mheight
)

	)

133 
	#Di•œyPœ√s
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_dïth
)

	)

134 
	#Di•œyCñls
(
dpy
, 
s¸
Ë(
	`DeÁu…VisuÆ
(dpy,s¸)->
m≠_íåõs
)

	)

135 
	#S¸ìnCou¡
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ns¸ìns
)

	)

136 
	#SîvîVíd‹
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
víd‹
)

	)

137 
	#PrŸocﬁVîsi⁄
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
¥Ÿo_maj‹_vîsi⁄
)

	)

138 
	#PrŸocﬁRevisi⁄
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
¥Ÿo_mö‹_vîsi⁄
)

	)

139 
	#Víd‹Rñó£
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ªÀa£
)

	)

140 
	#Di•œySåög
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
di•œy_«me
)

	)

141 
	#DeÁu…Dïth
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_dïth
)

	)

142 
	#DeÁu…Cﬁ‹m≠
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
cm≠
)

	)

143 
	#Bôm≠Unô
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_unô
)

	)

144 
	#Bôm≠BôOrdî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_bô_‹dî
)

	)

145 
	#Bôm≠Pad
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_∑d
)

	)

146 
	#ImageByãOrdî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
byã_‹dî
)

	)

147 #ifde‡
CRAY


148 
	#NextReque°
(
dpy
Ë
	`XNextReque°
(dpy)

	)

150 
	#NextReque°
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ªque°
 + 1)

	)

152 
	#La°KnownReque°Pro˚s£d
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
œ°_ªque°_ªad
)

	)

155 
	#S¸ìnOfDi•œy
(
dpy
, 
s¸
)(&((
_XPrivDi•œy
)dpy)->
s¸ìns
[s¸])

	)

156 
	#DeÁu…S¸ìnOfDi•œy
(
dpy
Ë
	`S¸ìnOfDi•œy
(dpy,
	`DeÁu…S¸ìn
(dpy))

	)

157 
	#Di•œyOfS¸ìn
(
s
Ë((s)->
di•œy
)

	)

158 
	#RoŸWödowOfS¸ìn
(
s
Ë((s)->
roŸ
)

	)

159 
	#BœckPixñOfS¸ìn
(
s
Ë((s)->
bœck_pixñ
)

	)

160 
	#WhôePixñOfS¸ìn
(
s
Ë((s)->
whôe_pixñ
)

	)

161 
	#DeÁu…Cﬁ‹m≠OfS¸ìn
(
s
)((s)->
cm≠
)

	)

162 
	#DeÁu…DïthOfS¸ìn
(
s
Ë((s)->
roŸ_dïth
)

	)

163 
	#DeÁu…GCOfS¸ìn
(
s
Ë((s)->
deÁu…_gc
)

	)

164 
	#DeÁu…VisuÆOfS¸ìn
(
s
)((s)->
roŸ_visuÆ
)

	)

165 
	#WidthOfS¸ìn
(
s
Ë((s)->
width
)

	)

166 
	#HeightOfS¸ìn
(
s
Ë((s)->
height
)

	)

167 
	#WidthMMOfS¸ìn
(
s
Ë((s)->
mwidth
)

	)

168 
	#HeightMMOfS¸ìn
(
s
Ë((s)->
mheight
)

	)

169 
	#Pœ√sOfS¸ìn
(
s
Ë((s)->
roŸ_dïth
)

	)

170 
	#CñlsOfS¸ìn
(
s
Ë(
	`DeÁu…VisuÆOfS¸ìn
((s))->
m≠_íåõs
)

	)

171 
	#MöCm≠sOfS¸ìn
(
s
Ë((s)->
mö_m≠s
)

	)

172 
	#MaxCm≠sOfS¸ìn
(
s
Ë((s)->
max_m≠s
)

	)

173 
	#D€sSaveUndîs
(
s
Ë((s)->
ßve_undîs
)

	)

174 
	#D€sBackögSt‹e
(
s
Ë((s)->
backög_°‹e
)

	)

175 
	#EvítMaskOfS¸ìn
(
s
Ë((s)->
roŸ_öput_mask
)

	)

180 
	s_XExtD©a
 {

181 
	mnumbî
;

182 
_XExtD©a
 *
	m√xt
;

183 (*
	m‰ì_¥iv©e
)(

184 
_XExtD©a
 *
	mexãnsi⁄


186 
XPoöãr
 
	m¥iv©e_d©a
;

187 } 
	tXExtD©a
;

193 
	mexãnsi⁄
;

194 
	mmaj‹_›code
;

195 
	mfú°_evít
;

196 
	mfú°_îr‹
;

197 } 
	tXExtCodes
;

204 
	mdïth
;

205 
	mbôs_≥r_pixñ
;

206 
	msˇ∆öe_∑d
;

207 } 
	tXPixm≠F‹m©VÆues
;

214 
	mfun˘i⁄
;

215 
	m∂™e_mask
;

216 
	mf‹eground
;

217 
	mbackground
;

218 
	mlöe_width
;

219 
	mlöe_°yÀ
;

220 
	mˇp_°yÀ
;

222 
	mjoö_°yÀ
;

223 
	mfûl_°yÀ
;

225 
	mfûl_ruÀ
;

226 
	m¨c_mode
;

227 
Pixm≠
 
	mtûe
;

228 
Pixm≠
 
	m°ù∂e
;

229 
	mts_x_‹igö
;

230 
	mts_y_‹igö
;

231 
F⁄t
 
	mf⁄t
;

232 
	msubwödow_mode
;

233 
Boﬁ
 
	mgøphics_exposuªs
;

234 
	m˛ù_x_‹igö
;

235 
	m˛ù_y_‹igö
;

236 
Pixm≠
 
	m˛ù_mask
;

237 
	mdash_off£t
;

238 
	mdashes
;

239 } 
	tXGCVÆues
;

246 
	g_XGC


247 #ifde‡
	tXLIB_ILLEGAL_ACCESS


249 
XExtD©a
 *
	gext_d©a
;

250 
GC⁄ãxt
 
	ggid
;

254 *
	tGC
;

260 
XExtD©a
 *
	mext_d©a
;

261 
VisuÆID
 
	mvisuÆid
;

262 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

263 
	mc_˛ass
;

265 
	m˛ass
;

267 
	mªd_mask
, 
	mgªí_mask
, 
	mblue_mask
;

268 
	mbôs_≥r_rgb
;

269 
	mm≠_íåõs
;

270 } 
	tVisuÆ
;

276 
	mdïth
;

277 
	mnvisuÆs
;

278 
VisuÆ
 *
	mvisuÆs
;

279 } 
	tDïth
;

287 
	g_XDi•œy
;

290 
XExtD©a
 *
	mext_d©a
;

291 
_XDi•œy
 *
	mdi•œy
;

292 
Wödow
 
	mroŸ
;

293 
	mwidth
, 
	mheight
;

294 
	mmwidth
, 
	mmheight
;

295 
	mndïths
;

296 
Dïth
 *
	mdïths
;

297 
	mroŸ_dïth
;

298 
VisuÆ
 *
	mroŸ_visuÆ
;

299 
GC
 
	mdeÁu…_gc
;

300 
Cﬁ‹m≠
 
	mcm≠
;

301 
	mwhôe_pixñ
;

302 
	mbœck_pixñ
;

303 
	mmax_m≠s
, 
	mmö_m≠s
;

304 
	mbackög_°‹e
;

305 
Boﬁ
 
	mßve_undîs
;

306 
	mroŸ_öput_mask
;

307 } 
	tS¸ìn
;

313 
XExtD©a
 *
	mext_d©a
;

314 
	mdïth
;

315 
	mbôs_≥r_pixñ
;

316 
	msˇ∆öe_∑d
;

317 } 
	tS¸ìnF‹m©
;

323 
Pixm≠
 
	mbackground_pixm≠
;

324 
	mbackground_pixñ
;

325 
Pixm≠
 
	mb‹dî_pixm≠
;

326 
	mb‹dî_pixñ
;

327 
	mbô_gøvôy
;

328 
	mwö_gøvôy
;

329 
	mbackög_°‹e
;

330 
	mbackög_∂™es
;

331 
	mbackög_pixñ
;

332 
Boﬁ
 
	mßve_undî
;

333 
	mevít_mask
;

334 
	mdo_nŸ_¥›ag©e_mask
;

335 
Boﬁ
 
	movîride_ªdúe˘
;

336 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

337 
Curs‹
 
	mcurs‹
;

338 } 
	tXSëWödowAâribuãs
;

341 
	mx
, 
	my
;

342 
	mwidth
, 
	mheight
;

343 
	mb‹dî_width
;

344 
	mdïth
;

345 
VisuÆ
 *
	mvisuÆ
;

346 
Wödow
 
	mroŸ
;

347 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

348 
	mc_˛ass
;

350 
	m˛ass
;

352 
	mbô_gøvôy
;

353 
	mwö_gøvôy
;

354 
	mbackög_°‹e
;

355 
	mbackög_∂™es
;

356 
	mbackög_pixñ
;

357 
Boﬁ
 
	mßve_undî
;

358 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

359 
Boﬁ
 
	mm≠_ö°ÆÀd
;

360 
	mm≠_°©e
;

361 
	mÆl_evít_masks
;

362 
	myour_evít_mask
;

363 
	mdo_nŸ_¥›ag©e_mask
;

364 
Boﬁ
 
	movîride_ªdúe˘
;

365 
S¸ìn
 *
	ms¸ìn
;

366 } 
	tXWödowAâribuãs
;

374 
	mÁmûy
;

375 
	mÀngth
;

376 *
	maddªss
;

377 } 
	tXHo°Addªss
;

383 
	mty≥Àngth
;

384 
	mvÆuñígth
;

385 *
	mty≥
;

386 *
	mvÆue
;

387 } 
	tXSîvîI¡î¥ëedAddªss
;

392 
	s_XImage
 {

393 
	mwidth
, 
	mheight
;

394 
	mxoff£t
;

395 
	mf‹m©
;

396 *
	md©a
;

397 
	mbyã_‹dî
;

398 
	mbôm≠_unô
;

399 
	mbôm≠_bô_‹dî
;

400 
	mbôm≠_∑d
;

401 
	mdïth
;

402 
	mbyãs_≥r_löe
;

403 
	mbôs_≥r_pixñ
;

404 
	mªd_mask
;

405 
	mgªí_mask
;

406 
	mblue_mask
;

407 
XPoöãr
 
	mobd©a
;

408 
	sfuncs
 {

409 
	m_XImage
 *(*
	m¸óã_image
)(

410 
	m_XDi•œy
* ,

411 
	mVisuÆ
* ,

420 (*
	mde°roy_image
Ë(
	m_XImage
 *);

421 (*
	mgë_pixñ
Ë(
	m_XImage
 *, , );

422 (*
	mput_pixñ
Ë(
	m_XImage
 *, , , );

423 
	m_XImage
 *(*
	msub_image
)(_XImage *, , , , );

424 (*
	madd_pixñ
Ë(
	m_XImage
 *, );

425 } 
	mf
;

426 } 
	tXImage
;

432 
	mx
, 
	my
;

433 
	mwidth
, 
	mheight
;

434 
	mb‹dî_width
;

435 
Wödow
 
	msiblög
;

436 
	m°ack_mode
;

437 } 
	tXWödowCh™ges
;

443 
	mpixñ
;

444 
	mªd
, 
	mgªí
, 
	mblue
;

445 
	mÊags
;

446 
	m∑d
;

447 } 
	tXCﬁ‹
;

455 
	mx1
, 
	my1
, 
	mx2
, 
	my2
;

456 } 
	tXSegmít
;

459 
	mx
, 
	my
;

460 } 
	tXPoöt
;

463 
	mx
, 
	my
;

464 
	mwidth
, 
	mheight
;

465 } 
	tXRe˘™gÀ
;

468 
	mx
, 
	my
;

469 
	mwidth
, 
	mheight
;

470 
	m™gÀ1
, 
	m™gÀ2
;

471 } 
	tXArc
;

477 
	mkey_˛ick_≥r˚¡
;

478 
	mbñl_≥r˚¡
;

479 
	mbñl_pôch
;

480 
	mbñl_duøti⁄
;

481 
	mÀd
;

482 
	mÀd_mode
;

483 
	mkey
;

484 
	mauto_ª≥©_mode
;

485 } 
	tXKeybﬂrdC⁄åﬁ
;

490 
	mkey_˛ick_≥r˚¡
;

491 
	mbñl_≥r˚¡
;

492 
	mbñl_pôch
, 
	mbñl_duøti⁄
;

493 
	mÀd_mask
;

494 
	mglobÆ_auto_ª≥©
;

495 
	mauto_ª≥©s
[32];

496 } 
	tXKeybﬂrdSèã
;

501 
Time
 
	mtime
;

502 
	mx
, 
	my
;

503 } 
	tXTimeCo‹d
;

508 
	mmax_key≥rmod
;

509 
KeyCode
 *
	mmodifõrm≠
;

510 } 
	tXModifõrKeym≠
;

518 #i‚de‡
XLIB_ILLEGAL_ACCESS


519 
_XDi•œy
 
	tDi•œy
;

522 
	g_XPriv©e
;

523 
	g_XrmHashBuckëRec
;

526 #ifde‡
XLIB_ILLEGAL_ACCESS


527 
	t_XDi•œy


530 
XExtD©a
 *
	gext_d©a
;

531 
_XPriv©e
 *
	g¥iv©e1
;

532 
	gfd
;

533 
	g¥iv©e2
;

534 
	g¥Ÿo_maj‹_vîsi⁄
;

535 
	g¥Ÿo_mö‹_vîsi⁄
;

536 *
	gvíd‹
;

537 
XID
 
	g¥iv©e3
;

538 
XID
 
	g¥iv©e4
;

539 
XID
 
	g¥iv©e5
;

540 
	g¥iv©e6
;

541 
XID
 (*
ªsour˚_Æloc
)(

542 
	g_XDi•œy
*

544 
	gbyã_‹dî
;

545 
	gbôm≠_unô
;

546 
	gbôm≠_∑d
;

547 
	gbôm≠_bô_‹dî
;

548 
	gnf‹m©s
;

549 
S¸ìnF‹m©
 *
	gpixm≠_f‹m©
;

550 
	g¥iv©e8
;

551 
	gªÀa£
;

552 
_XPriv©e
 *
	g¥iv©e9
, *
	g¥iv©e10
;

553 
	gqÀn
;

554 
	gœ°_ªque°_ªad
;

555 
	gªque°
;

556 
XPoöãr
 
	g¥iv©e11
;

557 
XPoöãr
 
	g¥iv©e12
;

558 
XPoöãr
 
	g¥iv©e13
;

559 
XPoöãr
 
	g¥iv©e14
;

560 
	gmax_ªque°_size
;

561 
_XrmHashBuckëRec
 *
	gdb
;

562 (*
	g¥iv©e15
)(

563 
	g_XDi•œy
*

565 *
	gdi•œy_«me
;

566 
	gdeÁu…_s¸ìn
;

567 
	gns¸ìns
;

568 
S¸ìn
 *
	gs¸ìns
;

569 
	gmŸi⁄_buf„r
;

570 
	g¥iv©e16
;

571 
	gmö_keycode
;

572 
	gmax_keycode
;

573 
XPoöãr
 
	g¥iv©e17
;

574 
XPoöãr
 
	g¥iv©e18
;

575 
	g¥iv©e19
;

576 *
	gxdeÁu…s
;

579 #ifde‡
	tXLIB_ILLEGAL_ACCESS


580 
	tDi•œy
,

582 *
	t_XPrivDi•œy
;

584 #unde‡
_XEVENT_


585 #i‚de‡
_XEVENT_


590 
	mty≥
;

591 
	m£rül
;

592 
Boﬁ
 
	m£nd_evít
;

593 
Di•œy
 *
	mdi•œy
;

594 
Wödow
 
	mwödow
;

595 
Wödow
 
	mroŸ
;

596 
Wödow
 
	msubwödow
;

597 
Time
 
	mtime
;

598 
	mx
, 
	my
;

599 
	mx_roŸ
, 
	my_roŸ
;

600 
	m°©e
;

601 
	mkeycode
;

602 
Boﬁ
 
	mßme_s¸ìn
;

603 } 
	tXKeyEvít
;

604 
XKeyEvít
 
	tXKeyPªs£dEvít
;

605 
XKeyEvít
 
	tXKeyRñó£dEvít
;

608 
	mty≥
;

609 
	m£rül
;

610 
Boﬁ
 
	m£nd_evít
;

611 
Di•œy
 *
	mdi•œy
;

612 
Wödow
 
	mwödow
;

613 
Wödow
 
	mroŸ
;

614 
Wödow
 
	msubwödow
;

615 
Time
 
	mtime
;

616 
	mx
, 
	my
;

617 
	mx_roŸ
, 
	my_roŸ
;

618 
	m°©e
;

619 
	mbuâ⁄
;

620 
Boﬁ
 
	mßme_s¸ìn
;

621 } 
	tXBuâ⁄Evít
;

622 
XBuâ⁄Evít
 
	tXBuâ⁄Pªs£dEvít
;

623 
XBuâ⁄Evít
 
	tXBuâ⁄Rñó£dEvít
;

626 
	mty≥
;

627 
	m£rül
;

628 
Boﬁ
 
	m£nd_evít
;

629 
Di•œy
 *
	mdi•œy
;

630 
Wödow
 
	mwödow
;

631 
Wödow
 
	mroŸ
;

632 
Wödow
 
	msubwödow
;

633 
Time
 
	mtime
;

634 
	mx
, 
	my
;

635 
	mx_roŸ
, 
	my_roŸ
;

636 
	m°©e
;

637 
	mis_höt
;

638 
Boﬁ
 
	mßme_s¸ìn
;

639 } 
	tXMŸi⁄Evít
;

640 
XMŸi⁄Evít
 
	tXPoöãrMovedEvít
;

643 
	mty≥
;

644 
	m£rül
;

645 
Boﬁ
 
	m£nd_evít
;

646 
Di•œy
 *
	mdi•œy
;

647 
Wödow
 
	mwödow
;

648 
Wödow
 
	mroŸ
;

649 
Wödow
 
	msubwödow
;

650 
Time
 
	mtime
;

651 
	mx
, 
	my
;

652 
	mx_roŸ
, 
	my_roŸ
;

653 
	mmode
;

654 
	mdëaû
;

659 
Boﬁ
 
	mßme_s¸ìn
;

660 
Boﬁ
 
	mfocus
;

661 
	m°©e
;

662 } 
	tXCrossögEvít
;

663 
XCrossögEvít
 
	tXE¡îWödowEvít
;

664 
XCrossögEvít
 
	tXLóveWödowEvít
;

667 
	mty≥
;

668 
	m£rül
;

669 
Boﬁ
 
	m£nd_evít
;

670 
Di•œy
 *
	mdi•œy
;

671 
Wödow
 
	mwödow
;

672 
	mmode
;

674 
	mdëaû
;

680 } 
	tXFocusCh™geEvít
;

681 
XFocusCh™geEvít
 
	tXFocusInEvít
;

682 
XFocusCh™geEvít
 
	tXFocusOutEvít
;

686 
	mty≥
;

687 
	m£rül
;

688 
Boﬁ
 
	m£nd_evít
;

689 
Di•œy
 *
	mdi•œy
;

690 
Wödow
 
	mwödow
;

691 
	mkey_ve˘‹
[32];

692 } 
	tXKeym≠Evít
;

695 
	mty≥
;

696 
	m£rül
;

697 
Boﬁ
 
	m£nd_evít
;

698 
Di•œy
 *
	mdi•œy
;

699 
Wödow
 
	mwödow
;

700 
	mx
, 
	my
;

701 
	mwidth
, 
	mheight
;

702 
	mcou¡
;

703 } 
	tXExpo£Evít
;

706 
	mty≥
;

707 
	m£rül
;

708 
Boﬁ
 
	m£nd_evít
;

709 
Di•œy
 *
	mdi•œy
;

710 
DøwabÀ
 
	mdøwabÀ
;

711 
	mx
, 
	my
;

712 
	mwidth
, 
	mheight
;

713 
	mcou¡
;

714 
	mmaj‹_code
;

715 
	mmö‹_code
;

716 } 
	tXGøphicsExpo£Evít
;

719 
	mty≥
;

720 
	m£rül
;

721 
Boﬁ
 
	m£nd_evít
;

722 
Di•œy
 *
	mdi•œy
;

723 
DøwabÀ
 
	mdøwabÀ
;

724 
	mmaj‹_code
;

725 
	mmö‹_code
;

726 } 
	tXNoExpo£Evít
;

729 
	mty≥
;

730 
	m£rül
;

731 
Boﬁ
 
	m£nd_evít
;

732 
Di•œy
 *
	mdi•œy
;

733 
Wödow
 
	mwödow
;

734 
	m°©e
;

735 } 
	tXVisibûôyEvít
;

738 
	mty≥
;

739 
	m£rül
;

740 
Boﬁ
 
	m£nd_evít
;

741 
Di•œy
 *
	mdi•œy
;

742 
Wödow
 
	m∑ª¡
;

743 
Wödow
 
	mwödow
;

744 
	mx
, 
	my
;

745 
	mwidth
, 
	mheight
;

746 
	mb‹dî_width
;

747 
Boﬁ
 
	movîride_ªdúe˘
;

748 } 
	tXCª©eWödowEvít
;

751 
	mty≥
;

752 
	m£rül
;

753 
Boﬁ
 
	m£nd_evít
;

754 
Di•œy
 *
	mdi•œy
;

755 
Wödow
 
	mevít
;

756 
Wödow
 
	mwödow
;

757 } 
	tXDe°royWödowEvít
;

760 
	mty≥
;

761 
	m£rül
;

762 
Boﬁ
 
	m£nd_evít
;

763 
Di•œy
 *
	mdi•œy
;

764 
Wödow
 
	mevít
;

765 
Wödow
 
	mwödow
;

766 
Boﬁ
 
	m‰om_c⁄figuª
;

767 } 
	tXUnm≠Evít
;

770 
	mty≥
;

771 
	m£rül
;

772 
Boﬁ
 
	m£nd_evít
;

773 
Di•œy
 *
	mdi•œy
;

774 
Wödow
 
	mevít
;

775 
Wödow
 
	mwödow
;

776 
Boﬁ
 
	movîride_ªdúe˘
;

777 } 
	tXM≠Evít
;

780 
	mty≥
;

781 
	m£rül
;

782 
Boﬁ
 
	m£nd_evít
;

783 
Di•œy
 *
	mdi•œy
;

784 
Wödow
 
	m∑ª¡
;

785 
Wödow
 
	mwödow
;

786 } 
	tXM≠Reque°Evít
;

789 
	mty≥
;

790 
	m£rül
;

791 
Boﬁ
 
	m£nd_evít
;

792 
Di•œy
 *
	mdi•œy
;

793 
Wödow
 
	mevít
;

794 
Wödow
 
	mwödow
;

795 
Wödow
 
	m∑ª¡
;

796 
	mx
, 
	my
;

797 
Boﬁ
 
	movîride_ªdúe˘
;

798 } 
	tXRï¨ítEvít
;

801 
	mty≥
;

802 
	m£rül
;

803 
Boﬁ
 
	m£nd_evít
;

804 
Di•œy
 *
	mdi•œy
;

805 
Wödow
 
	mevít
;

806 
Wödow
 
	mwödow
;

807 
	mx
, 
	my
;

808 
	mwidth
, 
	mheight
;

809 
	mb‹dî_width
;

810 
Wödow
 
	mabove
;

811 
Boﬁ
 
	movîride_ªdúe˘
;

812 } 
	tXC⁄figuªEvít
;

815 
	mty≥
;

816 
	m£rül
;

817 
Boﬁ
 
	m£nd_evít
;

818 
Di•œy
 *
	mdi•œy
;

819 
Wödow
 
	mevít
;

820 
Wödow
 
	mwödow
;

821 
	mx
, 
	my
;

822 } 
	tXGøvôyEvít
;

825 
	mty≥
;

826 
	m£rül
;

827 
Boﬁ
 
	m£nd_evít
;

828 
Di•œy
 *
	mdi•œy
;

829 
Wödow
 
	mwödow
;

830 
	mwidth
, 
	mheight
;

831 } 
	tXResizeReque°Evít
;

834 
	mty≥
;

835 
	m£rül
;

836 
Boﬁ
 
	m£nd_evít
;

837 
Di•œy
 *
	mdi•œy
;

838 
Wödow
 
	m∑ª¡
;

839 
Wödow
 
	mwödow
;

840 
	mx
, 
	my
;

841 
	mwidth
, 
	mheight
;

842 
	mb‹dî_width
;

843 
Wödow
 
	mabove
;

844 
	mdëaû
;

845 
	mvÆue_mask
;

846 } 
	tXC⁄figuªReque°Evít
;

849 
	mty≥
;

850 
	m£rül
;

851 
Boﬁ
 
	m£nd_evít
;

852 
Di•œy
 *
	mdi•œy
;

853 
Wödow
 
	mevít
;

854 
Wödow
 
	mwödow
;

855 
	m∂a˚
;

856 } 
	tXCúcuœãEvít
;

859 
	mty≥
;

860 
	m£rül
;

861 
Boﬁ
 
	m£nd_evít
;

862 
Di•œy
 *
	mdi•œy
;

863 
Wödow
 
	m∑ª¡
;

864 
Wödow
 
	mwödow
;

865 
	m∂a˚
;

866 } 
	tXCúcuœãReque°Evít
;

869 
	mty≥
;

870 
	m£rül
;

871 
Boﬁ
 
	m£nd_evít
;

872 
Di•œy
 *
	mdi•œy
;

873 
Wödow
 
	mwödow
;

874 
Atom
 
	m©om
;

875 
Time
 
	mtime
;

876 
	m°©e
;

877 } 
	tXPr›îtyEvít
;

880 
	mty≥
;

881 
	m£rül
;

882 
Boﬁ
 
	m£nd_evít
;

883 
Di•œy
 *
	mdi•œy
;

884 
Wödow
 
	mwödow
;

885 
Atom
 
	m£À˘i⁄
;

886 
Time
 
	mtime
;

887 } 
	tXSñe˘i⁄CÀ¨Evít
;

890 
	mty≥
;

891 
	m£rül
;

892 
Boﬁ
 
	m£nd_evít
;

893 
Di•œy
 *
	mdi•œy
;

894 
Wödow
 
	mow√r
;

895 
Wödow
 
	mªque°‹
;

896 
Atom
 
	m£À˘i⁄
;

897 
Atom
 
	mèrgë
;

898 
Atom
 
	m¥›îty
;

899 
Time
 
	mtime
;

900 } 
	tXSñe˘i⁄Reque°Evít
;

903 
	mty≥
;

904 
	m£rül
;

905 
Boﬁ
 
	m£nd_evít
;

906 
Di•œy
 *
	mdi•œy
;

907 
Wödow
 
	mªque°‹
;

908 
Atom
 
	m£À˘i⁄
;

909 
Atom
 
	mèrgë
;

910 
Atom
 
	m¥›îty
;

911 
Time
 
	mtime
;

912 } 
	tXSñe˘i⁄Evít
;

915 
	mty≥
;

916 
	m£rül
;

917 
Boﬁ
 
	m£nd_evít
;

918 
Di•œy
 *
	mdi•œy
;

919 
Wödow
 
	mwödow
;

920 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

921 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

922 
Boﬁ
 
	mc_√w
;

924 
Boﬁ
 
	m√w
;

926 
	m°©e
;

927 } 
	tXCﬁ‹m≠Evít
;

930 
	mty≥
;

931 
	m£rül
;

932 
Boﬁ
 
	m£nd_evít
;

933 
Di•œy
 *
	mdi•œy
;

934 
Wödow
 
	mwödow
;

935 
Atom
 
	mmesßge_ty≥
;

936 
	mf‹m©
;

938 
	mb
[20];

939 
	ms
[10];

940 
	ml
[5];

941 } 
	md©a
;

942 } 
	tXClõ¡MesßgeEvít
;

945 
	mty≥
;

946 
	m£rül
;

947 
Boﬁ
 
	m£nd_evít
;

948 
Di•œy
 *
	mdi•œy
;

949 
Wödow
 
	mwödow
;

950 
	mªque°
;

952 
	mfú°_keycode
;

953 
	mcou¡
;

954 } 
	tXM≠pögEvít
;

957 
	mty≥
;

958 
Di•œy
 *
	mdi•œy
;

959 
XID
 
	mªsour˚id
;

960 
	m£rül
;

961 
	mîr‹_code
;

962 
	mªque°_code
;

963 
	mmö‹_code
;

964 } 
	tXEº‹Evít
;

967 
	mty≥
;

968 
	m£rül
;

969 
Boﬁ
 
	m£nd_evít
;

970 
Di•œy
 *
	mdi•œy
;

971 
Wödow
 
	mwödow
;

972 } 
	tXAnyEvít
;

978 
	u_XEvít
 {

979 
	mty≥
;

980 
XAnyEvít
 
	mx™y
;

981 
XKeyEvít
 
	mxkey
;

982 
XBuâ⁄Evít
 
	mxbuâ⁄
;

983 
XMŸi⁄Evít
 
	mxmŸi⁄
;

984 
XCrossögEvít
 
	mx¸ossög
;

985 
XFocusCh™geEvít
 
	mxfocus
;

986 
XExpo£Evít
 
	mxexpo£
;

987 
XGøphicsExpo£Evít
 
	mxgøphic£xpo£
;

988 
XNoExpo£Evít
 
	mxn€xpo£
;

989 
XVisibûôyEvít
 
	mxvisibûôy
;

990 
XCª©eWödowEvít
 
	mx¸óãwödow
;

991 
XDe°royWödowEvít
 
	mxde°roywödow
;

992 
XUnm≠Evít
 
	mxunm≠
;

993 
XM≠Evít
 
	mxm≠
;

994 
XM≠Reque°Evít
 
	mxm≠ªque°
;

995 
XRï¨ítEvít
 
	mxª∑ª¡
;

996 
XC⁄figuªEvít
 
	mxc⁄figuª
;

997 
XGøvôyEvít
 
	mxgøvôy
;

998 
XResizeReque°Evít
 
	mxªsizîeque°
;

999 
XC⁄figuªReque°Evít
 
	mxc⁄figuªªque°
;

1000 
XCúcuœãEvít
 
	mxcúcuœã
;

1001 
XCúcuœãReque°Evít
 
	mxcúcuœãªque°
;

1002 
XPr›îtyEvít
 
	mx¥›îty
;

1003 
XSñe˘i⁄CÀ¨Evít
 
	mx£À˘i⁄˛ór
;

1004 
XSñe˘i⁄Reque°Evít
 
	mx£À˘i⁄ªque°
;

1005 
XSñe˘i⁄Evít
 
	mx£À˘i⁄
;

1006 
XCﬁ‹m≠Evít
 
	mxcﬁ‹m≠
;

1007 
XClõ¡MesßgeEvít
 
	mx˛õ¡
;

1008 
XM≠pögEvít
 
	mxm≠pög
;

1009 
XEº‹Evít
 
	mxîr‹
;

1010 
XKeym≠Evít
 
	mxkeym≠
;

1011 
	m∑d
[24];

1012 } 
	tXEvít
;

1015 
	#XAŒocID
(
dpy
Ë((*((
_XPrivDi•œy
)dpy)->
ªsour˚_Æloc
)((dpy)))

	)

1021 
	mlbórög
;

1022 
	mrbórög
;

1023 
	mwidth
;

1024 
	mas˚¡
;

1025 
	mdes˚¡
;

1026 
	m©åibuãs
;

1027 } 
	tXCh¨Såu˘
;

1034 
Atom
 
	m«me
;

1035 
	mˇrd32
;

1036 } 
	tXF⁄tPr›
;

1039 
XExtD©a
 *
	mext_d©a
;

1040 
F⁄t
 
	mfid
;

1041 
	mdúe˘i⁄
;

1042 
	mmö_ch¨_‹_byã2
;

1043 
	mmax_ch¨_‹_byã2
;

1044 
	mmö_byã1
;

1045 
	mmax_byã1
;

1046 
Boﬁ
 
	mÆl_ch¨s_exi°
;

1047 
	mdeÁu…_ch¨
;

1048 
	mn_¥›îtõs
;

1049 
XF⁄tPr›
 *
	m¥›îtõs
;

1050 
XCh¨Såu˘
 
	mmö_bounds
;

1051 
XCh¨Såu˘
 
	mmax_bounds
;

1052 
XCh¨Såu˘
 *
	m≥r_ch¨
;

1053 
	mas˚¡
;

1054 
	mdes˚¡
;

1055 } 
	tXF⁄tSåu˘
;

1061 *
	mch¨s
;

1062 
	mnch¨s
;

1063 
	mdñè
;

1064 
F⁄t
 
	mf⁄t
;

1065 } 
	tXTextIãm
;

1068 
	mbyã1
;

1069 
	mbyã2
;

1070 } 
	tXCh¨2b
;

1073 
XCh¨2b
 *
	mch¨s
;

1074 
	mnch¨s
;

1075 
	mdñè
;

1076 
F⁄t
 
	mf⁄t
;

1077 } 
	tXTextIãm16
;

1080 uni⁄ { 
Di•œy
 *
	mdi•œy
;

1081 
GC
 
	mgc
;

1082 
VisuÆ
 *
	mvisuÆ
;

1083 
S¸ìn
 *
	ms¸ìn
;

1084 
S¸ìnF‹m©
 *
	mpixm≠_f‹m©
;

1085 
XF⁄tSåu˘
 *
	mf⁄t
; } 
	tXED©aObje˘
;

1088 
XRe˘™gÀ
 
	mmax_ök_exã¡
;

1089 
XRe˘™gÀ
 
	mmax_logiˇl_exã¡
;

1090 } 
	tXF⁄tSëExã¡s
;

1096 
_XOM
 *
	tXOM
;

1097 
_XOC
 *
	tXOC
, *
	tXF⁄tSë
;

1100 *
	mch¨s
;

1101 
	mnch¨s
;

1102 
	mdñè
;

1103 
XF⁄tSë
 
	mf⁄t_£t
;

1104 } 
	tXmbTextIãm
;

1107 
wch¨_t
 *
	mch¨s
;

1108 
	mnch¨s
;

1109 
	mdñè
;

1110 
XF⁄tSë
 
	mf⁄t_£t
;

1111 } 
	tXwcTextIãm
;

1113 
	#XNRequúedCh¨Së
 "ªquúedCh¨Së"

	)

1114 
	#XNQuîyOrõ¡©i⁄
 "quîyOrõ¡©i⁄"

	)

1115 
	#XNBa£F⁄tName
 "ba£F⁄tName"

	)

1116 
	#XNOMAutom©ic
 "omAutom©ic"

	)

1117 
	#XNMissögCh¨Së
 "missögCh¨Së"

	)

1118 
	#XNDeÁu…Såög
 "deÁu…Såög"

	)

1119 
	#XNOrõ¡©i⁄
 "‹õ¡©i⁄"

	)

1120 
	#XNDúe˘i⁄ÆDïídítDøwög
 "dúe˘i⁄ÆDïídítDøwög"

	)

1121 
	#XNC⁄ãxtuÆDøwög
 "c⁄ãxtuÆDøwög"

	)

1122 
	#XNF⁄tInfo
 "f⁄tInfo"

	)

1125 
	mch¨£t_cou¡
;

1126 **
	mch¨£t_li°
;

1127 } 
	tXOMCh¨SëLi°
;

1130 
	mXOMOrõ¡©i⁄_LTR_TTB
,

1131 
	mXOMOrõ¡©i⁄_RTL_TTB
,

1132 
	mXOMOrõ¡©i⁄_TTB_LTR
,

1133 
	mXOMOrõ¡©i⁄_TTB_RTL
,

1134 
	mXOMOrõ¡©i⁄_C⁄ãxt


1135 } 
	tXOrõ¡©i⁄
;

1138 
	mnum_‹õ¡©i⁄
;

1139 
XOrõ¡©i⁄
 *
	m‹õ¡©i⁄
;

1140 } 
	tXOMOrõ¡©i⁄
;

1143 
	mnum_f⁄t
;

1144 
XF⁄tSåu˘
 **
	mf⁄t_°ru˘_li°
;

1145 **
	mf⁄t_«me_li°
;

1146 } 
	tXOMF⁄tInfo
;

1148 
_XIM
 *
	tXIM
;

1149 
_XIC
 *
	tXIC
;

1151 (*
	tXIMProc
)(

1152 
	tXIM
,

1153 
	tXPoöãr
,

1154 
	tXPoöãr


1157 
	$Boﬁ
 (*
	tXICProc
)(

1158 
	tXIC
,

1159 
	tXPoöãr
,

1160 
	tXPoöãr


1163 (*
	tXIDProc
)(

1164 
	tDi•œy
*,

1165 
	tXPoöãr
,

1166 
	tXPoöãr


1169 
	tXIMStyÀ
;

1172 
cou¡_°yÀs
;

1173 
XIMStyÀ
 *
suµ‹ãd_°yÀs
;

1174 } 
	tXIMStyÀs
;

1176 
	#XIMPªedôAªa
 0x0001L

	)

1177 
	#XIMPªedôCÆlbacks
 0x0002L

	)

1178 
	#XIMPªedôPosôi⁄
 0x0004L

	)

1179 
	#XIMPªedôNŸhög
 0x0008L

	)

1180 
	#XIMPªedôN⁄e
 0x0010L

	)

1181 
	#XIMSètusAªa
 0x0100L

	)

1182 
	#XIMSètusCÆlbacks
 0x0200L

	)

1183 
	#XIMSètusNŸhög
 0x0400L

	)

1184 
	#XIMSètusN⁄e
 0x0800L

	)

1186 
	#XNVaNe°edLi°
 "XNVaNe°edLi°"

	)

1187 
	#XNQuîyI≈utStyÀ
 "quîyI≈utStyÀ"

	)

1188 
	#XNClõ¡Wödow
 "˛õ¡Wödow"

	)

1189 
	#XNI≈utStyÀ
 "öputStyÀ"

	)

1190 
	#XNFocusWödow
 "focusWödow"

	)

1191 
	#XNResour˚Name
 "ªsour˚Name"

	)

1192 
	#XNResour˚Cœss
 "ªsour˚Cœss"

	)

1193 
	#XNGeomëryCÆlback
 "geomëryCÆlback"

	)

1194 
	#XNDe°royCÆlback
 "de°royCÆlback"

	)

1195 
	#XNFûãrEvíts
 "fûãrEvíts"

	)

1196 
	#XNPªedôSèπCÆlback
 "¥ìdôSèπCÆlback"

	)

1197 
	#XNPªedôD⁄eCÆlback
 "¥ìdôD⁄eCÆlback"

	)

1198 
	#XNPªedôDøwCÆlback
 "¥ìdôDøwCÆlback"

	)

1199 
	#XNPªedôC¨ëCÆlback
 "¥ìdôC¨ëCÆlback"

	)

1200 
	#XNPªedôSèãNŸifyCÆlback
 "¥ìdôSèãNŸifyCÆlback"

	)

1201 
	#XNPªedôAâribuãs
 "¥ìdôAâribuãs"

	)

1202 
	#XNSètusSèπCÆlback
 "°©usSèπCÆlback"

	)

1203 
	#XNSètusD⁄eCÆlback
 "°©usD⁄eCÆlback"

	)

1204 
	#XNSètusDøwCÆlback
 "°©usDøwCÆlback"

	)

1205 
	#XNSètusAâribuãs
 "°©usAâribuãs"

	)

1206 
	#XNAªa
 "¨ó"

	)

1207 
	#XNAªaNìded
 "¨óNìded"

	)

1208 
	#XNSpŸLoˇti⁄
 "•ŸLoˇti⁄"

	)

1209 
	#XNCﬁ‹m≠
 "cﬁ‹M≠"

	)

1210 
	#XNStdCﬁ‹m≠
 "°dCﬁ‹M≠"

	)

1211 
	#XNF‹eground
 "f‹eground"

	)

1212 
	#XNBackground
 "background"

	)

1213 
	#XNBackgroundPixm≠
 "backgroundPixm≠"

	)

1214 
	#XNF⁄tSë
 "f⁄tSë"

	)

1215 
	#XNLöeS∑˚
 "löeS∑˚"

	)

1216 
	#XNCurs‹
 "curs‹"

	)

1218 
	#XNQuîyIMVÆuesLi°
 "quîyIMVÆuesLi°"

	)

1219 
	#XNQuîyICVÆuesLi°
 "quîyICVÆuesLi°"

	)

1220 
	#XNVisibÀPosôi⁄
 "visibÀPosôi⁄"

	)

1221 
	#XNR6PªedôCÆlback
 "r6PªedôCÆlback"

	)

1222 
	#XNSåögC⁄vîsi⁄CÆlback
 "°rögC⁄vîsi⁄CÆlback"

	)

1223 
	#XNSåögC⁄vîsi⁄
 "°rögC⁄vîsi⁄"

	)

1224 
	#XNRe£tSèã
 "ª£tSèã"

	)

1225 
	#XNHŸKey
 "hŸKey"

	)

1226 
	#XNHŸKeySèã
 "hŸKeySèã"

	)

1227 
	#XNPªedôSèã
 "¥ìdôSèã"

	)

1228 
	#XNSï¨©‹ofNe°edLi°
 "£∑øt‹ofNe°edLi°"

	)

1230 
	#XBuf„rOvîÊow
 -1

	)

1231 
	#XLookupN⁄e
 1

	)

1232 
	#XLookupCh¨s
 2

	)

1233 
	#XLookupKeySym
 3

	)

1234 
	#XLookupBŸh
 4

	)

1236 *
	tXVaNe°edLi°
;

1239 
XPoöãr
 
˛õ¡_d©a
;

1240 
XIMProc
 
ˇŒback
;

1241 } 
	tXIMCÆlback
;

1244 
XPoöãr
 
˛õ¡_d©a
;

1245 
XICProc
 
ˇŒback
;

1246 } 
	tXICCÆlback
;

1248 
	tXIMFìdback
;

1250 
	#XIMRevî£
 1L

	)

1251 
	#XIMUndîlöe
 (1L<<1)

	)

1252 
	#XIMHighlight
 (1L<<2)

	)

1253 
	#XIMPrim¨y
 (1L<<5)

	)

1254 
	#XIMSec⁄d¨y
 (1L<<6)

	)

1255 
	#XIMTîtüry
 (1L<<7)

	)

1256 
	#XIMVisibÀToF‹w¨d
 (1L<<8)

	)

1257 
	#XIMVisibÀToBackw‹d
 (1L<<9)

	)

1258 
	#XIMVisibÀToCíãr
 (1L<<10)

	)

1260 
	s_XIMText
 {

1261 
Àngth
;

1262 
XIMFìdback
 *
„edback
;

1263 
Boﬁ
 
ícodög_is_wch¨
;

1265 *
mu…i_byã
;

1266 
wch¨_t
 *
wide_ch¨
;

1267 } 
°rög
;

1268 } 
	tXIMText
;

1270 
	tXIMPªedôSèã
;

1272 
	#XIMPªedôUnKnown
 0L

	)

1273 
	#XIMPªedôE«bÀ
 1L

	)

1274 
	#XIMPªedôDißbÀ
 (1L<<1)

	)

1276 
	s_XIMPªedôSèãNŸifyCÆlbackSåu˘
 {

1277 
XIMPªedôSèã
 
°©e
;

1278 } 
	tXIMPªedôSèãNŸifyCÆlbackSåu˘
;

1280 
	tXIMRe£tSèã
;

1282 
	#XIMInôülSèã
 1L

	)

1283 
	#XIMPª£rveSèã
 (1L<<1)

	)

1285 
	tXIMSåögC⁄vîsi⁄Fìdback
;

1287 
	#XIMSåögC⁄vîsi⁄Le·Edge
 (0x00000001)

	)

1288 
	#XIMSåögC⁄vîsi⁄RightEdge
 (0x00000002)

	)

1289 
	#XIMSåögC⁄vîsi⁄T›Edge
 (0x00000004)

	)

1290 
	#XIMSåögC⁄vîsi⁄BŸtomEdge
 (0x00000008)

	)

1291 
	#XIMSåögC⁄vîsi⁄C⁄˚Æed
 (0x00000010)

	)

1292 
	#XIMSåögC⁄vîsi⁄Wøµed
 (0x00000020)

	)

1294 
	s_XIMSåögC⁄vîsi⁄Text
 {

1295 
Àngth
;

1296 
XIMSåögC⁄vîsi⁄Fìdback
 *
„edback
;

1297 
Boﬁ
 
ícodög_is_wch¨
;

1299 *
mbs
;

1300 
wch¨_t
 *
wcs
;

1301 } 
°rög
;

1302 } 
	tXIMSåögC⁄vîsi⁄Text
;

1304 
	tXIMSåögC⁄vîsi⁄Posôi⁄
;

1306 
	tXIMSåögC⁄vîsi⁄Ty≥
;

1308 
	#XIMSåögC⁄vîsi⁄Buf„r
 (0x0001)

	)

1309 
	#XIMSåögC⁄vîsi⁄Löe
 (0x0002)

	)

1310 
	#XIMSåögC⁄vîsi⁄W‹d
 (0x0003)

	)

1311 
	#XIMSåögC⁄vîsi⁄Ch¨
 (0x0004)

	)

1313 
	tXIMSåögC⁄vîsi⁄O≥øti⁄
;

1315 
	#XIMSåögC⁄vîsi⁄Sub°ôuti⁄
 (0x0001)

	)

1316 
	#XIMSåögC⁄vîsi⁄RërõvÆ
 (0x0002)

	)

1319 
XIMF‹w¨dCh¨
, 
XIMBackw¨dCh¨
,

1320 
XIMF‹w¨dW‹d
, 
XIMBackw¨dW‹d
,

1321 
XIMC¨ëUp
, 
XIMC¨ëDown
,

1322 
XIMNextLöe
, 
XIMPªviousLöe
,

1323 
XIMLöeSèπ
, 
XIMLöeEnd
,

1324 
XIMAbsﬁuãPosôi⁄
,

1325 
XIMD⁄tCh™ge


1326 } 
	tXIMC¨ëDúe˘i⁄
;

1328 
	s_XIMSåögC⁄vîsi⁄CÆlbackSåu˘
 {

1329 
XIMSåögC⁄vîsi⁄Posôi⁄
 
posôi⁄
;

1330 
XIMC¨ëDúe˘i⁄
 
dúe˘i⁄
;

1331 
XIMSåögC⁄vîsi⁄O≥øti⁄
 
›î©i⁄
;

1332 
Á˘‹
;

1333 
XIMSåögC⁄vîsi⁄Text
 *
ãxt
;

1334 } 
	tXIMSåögC⁄vîsi⁄CÆlbackSåu˘
;

1336 
	s_XIMPªedôDøwCÆlbackSåu˘
 {

1337 
ˇªt
;

1338 
chg_fú°
;

1339 
chg_Àngth
;

1340 
XIMText
 *
ãxt
;

1341 } 
	tXIMPªedôDøwCÆlbackSåu˘
;

1344 
XIMIsInvisibÀ
,

1345 
XIMIsPrim¨y
,

1346 
XIMIsSec⁄d¨y


1347 } 
	tXIMC¨ëStyÀ
;

1349 
	s_XIMPªedôC¨ëCÆlbackSåu˘
 {

1350 
posôi⁄
;

1351 
XIMC¨ëDúe˘i⁄
 
dúe˘i⁄
;

1352 
XIMC¨ëStyÀ
 
°yÀ
;

1353 } 
	tXIMPªedôC¨ëCÆlbackSåu˘
;

1356 
XIMTextTy≥
,

1357 
XIMBôm≠Ty≥


1358 } 
	tXIMSètusD©aTy≥
;

1360 
	s_XIMSètusDøwCÆlbackSåu˘
 {

1361 
XIMSètusD©aTy≥
 
ty≥
;

1363 
XIMText
 *
ãxt
;

1364 
Pixm≠
 
bôm≠
;

1365 } 
d©a
;

1366 } 
	tXIMSètusDøwCÆlbackSåu˘
;

1368 
	s_XIMHŸKeyTriggî
 {

1369 
KeySym
 
keysym
;

1370 
modifõr
;

1371 
modifõr_mask
;

1372 } 
	tXIMHŸKeyTriggî
;

1374 
	s_XIMHŸKeyTriggîs
 {

1375 
num_hŸ_key
;

1376 
XIMHŸKeyTriggî
 *
key
;

1377 } 
	tXIMHŸKeyTriggîs
;

1379 
	tXIMHŸKeySèã
;

1381 
	#XIMHŸKeySèãON
 (0x0001L)

	)

1382 
	#XIMHŸKeySèãOFF
 (0x0002L)

	)

1385 
cou¡_vÆues
;

1386 **
suµ‹ãd_vÆues
;

1387 } 
	tXIMVÆuesLi°
;

1389 
_XFUNCPROTOBEGIN


1391 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
_XLIBINT_
)

1392 
	#_Xdebug
 (*
_Xdebug_p
)

	)

1395 
_Xdebug
;

1397 
XF⁄tSåu˘
 *
	`XLﬂdQuîyF⁄t
(

1398 
Di•œy
* ,

1399 
_Xc⁄°
 *

1402 
XF⁄tSåu˘
 *
	`XQuîyF⁄t
(

1403 
Di•œy
* ,

1404 
XID


1408 
XTimeCo‹d
 *
	`XGëMŸi⁄Evíts
(

1409 
Di•œy
* ,

1410 
Wödow
 ,

1411 
Time
 ,

1412 
Time
 ,

1416 
XModifõrKeym≠
 *
	`XDñëeModifõrm≠E¡ry
(

1417 
XModifõrKeym≠
* ,

1418 #i‡
NìdWidePrŸŸy≥s


1421 
KeyCode
 ,

1426 
XModifõrKeym≠
 *
	`XGëModifõrM≠pög
(

1427 
Di•œy
*

1430 
XModifõrKeym≠
 *
	`XIn£πModifõrm≠E¡ry
(

1431 
XModifõrKeym≠
* ,

1432 #i‡
NìdWidePrŸŸy≥s


1435 
KeyCode
 ,

1440 
XModifõrKeym≠
 *
	`XNewModifõrm≠
(

1444 
XImage
 *
	`XCª©eImage
(

1445 
Di•œy
* ,

1446 
VisuÆ
* ,

1456 
Sètus
 
	`XInôImage
(

1457 
XImage
*

1459 
XImage
 *
	`XGëImage
(

1460 
Di•œy
* ,

1461 
DøwabÀ
 ,

1469 
XImage
 *
	`XGëSubImage
(

1470 
Di•œy
* ,

1471 
DøwabÀ
 ,

1478 
XImage
* ,

1486 
Di•œy
 *
	`XO≥nDi•œy
(

1487 
_Xc⁄°
 *

1490 
	`XrmInôülize
(

1494 *
	`XFëchByãs
(

1495 
Di•œy
* ,

1498 *
	`XFëchBuf„r
(

1499 
Di•œy
* ,

1503 *
	`XGëAtomName
(

1504 
Di•œy
* ,

1505 
Atom


1507 
Sètus
 
	`XGëAtomNames
(

1508 
Di•œy
* ,

1509 
Atom
* ,

1513 *
	`XGëDeÁu…
(

1514 
Di•œy
* ,

1515 
_Xc⁄°
 * ,

1516 
_Xc⁄°
 *

1518 *
	`XDi•œyName
(

1519 
_Xc⁄°
 *

1521 *
	`XKeysymToSåög
(

1522 
KeySym


1525 (*
	$XSynchr⁄ize
(

1526 
Di•œy
* ,

1527 
Boﬁ


1529 
Di•œy
*

1531 (*
	`XSëA·îFun˘i⁄
(

1532 
Di•œy
* ,

1534 
Di•œy
*

1537 
Di•œy
*

1539 
Atom
 
	`XI¡înAtom
(

1540 
Di•œy
* ,

1541 
_Xc⁄°
 * ,

1542 
Boﬁ


1544 
Sètus
 
	`XI¡înAtoms
(

1545 
Di•œy
* ,

1548 
Boﬁ
 ,

1549 
Atom
*

1551 
Cﬁ‹m≠
 
	`XC›yCﬁ‹m≠AndFªe
(

1552 
Di•œy
* ,

1553 
Cﬁ‹m≠


1555 
Cﬁ‹m≠
 
	`XCª©eCﬁ‹m≠
(

1556 
Di•œy
* ,

1557 
Wödow
 ,

1558 
VisuÆ
* ,

1561 
Curs‹
 
	`XCª©ePixm≠Curs‹
(

1562 
Di•œy
* ,

1563 
Pixm≠
 ,

1564 
Pixm≠
 ,

1565 
XCﬁ‹
* ,

1566 
XCﬁ‹
* ,

1570 
Curs‹
 
	`XCª©eGlyphCurs‹
(

1571 
Di•œy
* ,

1572 
F⁄t
 ,

1573 
F⁄t
 ,

1576 
XCﬁ‹
 
_Xc⁄°
 * ,

1577 
XCﬁ‹
 
_Xc⁄°
 *

1579 
Curs‹
 
	`XCª©eF⁄tCurs‹
(

1580 
Di•œy
* ,

1583 
F⁄t
 
	`XLﬂdF⁄t
(

1584 
Di•œy
* ,

1585 
_Xc⁄°
 *

1587 
GC
 
	`XCª©eGC
(

1588 
Di•œy
* ,

1589 
DøwabÀ
 ,

1591 
XGCVÆues
*

1593 
GC⁄ãxt
 
	`XGC⁄ãxtFromGC
(

1594 
GC


1596 
	`XFlushGC
(

1597 
Di•œy
* ,

1598 
GC


1600 
Pixm≠
 
	`XCª©ePixm≠
(

1601 
Di•œy
* ,

1602 
DøwabÀ
 ,

1607 
Pixm≠
 
	`XCª©eBôm≠FromD©a
(

1608 
Di•œy
* ,

1609 
DøwabÀ
 ,

1610 
_Xc⁄°
 * ,

1614 
Pixm≠
 
	`XCª©ePixm≠FromBôm≠D©a
(

1615 
Di•œy
* ,

1616 
DøwabÀ
 ,

1624 
Wödow
 
	`XCª©eSim∂eWödow
(

1625 
Di•œy
* ,

1626 
Wödow
 ,

1635 
Wödow
 
	`XGëSñe˘i⁄Ow√r
(

1636 
Di•œy
* ,

1637 
Atom


1639 
Wödow
 
	`XCª©eWödow
(

1640 
Di•œy
* ,

1641 
Wödow
 ,

1649 
VisuÆ
* ,

1651 
XSëWödowAâribuãs
*

1653 
Cﬁ‹m≠
 *
	`XLi°In°ÆÀdCﬁ‹m≠s
(

1654 
Di•œy
* ,

1655 
Wödow
 ,

1658 **
	`XLi°F⁄ts
(

1659 
Di•œy
* ,

1660 
_Xc⁄°
 * ,

1664 **
	`XLi°F⁄tsWôhInfo
(

1665 
Di•œy
* ,

1666 
_Xc⁄°
 * ,

1669 
XF⁄tSåu˘
**

1671 **
	`XGëF⁄tP©h
(

1672 
Di•œy
* ,

1675 **
	`XLi°Exãnsi⁄s
(

1676 
Di•œy
* ,

1679 
Atom
 *
	`XLi°Pr›îtõs
(

1680 
Di•œy
* ,

1681 
Wödow
 ,

1684 
XHo°Addªss
 *
	`XLi°Ho°s
(

1685 
Di•œy
* ,

1687 
Boﬁ
*

1689 
KeySym
 
	`XKeycodeToKeysym
(

1690 
Di•œy
* ,

1691 #i‡
NìdWidePrŸŸy≥s


1694 
KeyCode
 ,

1698 
KeySym
 
	`XLookupKeysym
(

1699 
XKeyEvít
* ,

1702 
KeySym
 *
	`XGëKeybﬂrdM≠pög
(

1703 
Di•œy
* ,

1704 #i‡
NìdWidePrŸŸy≥s


1707 
KeyCode
 ,

1712 
KeySym
 
	`XSåögToKeysym
(

1713 
_Xc⁄°
 *

1715 
	`XMaxReque°Size
(

1716 
Di•œy
*

1718 
	`XExãndedMaxReque°Size
(

1719 
Di•œy
*

1721 *
	`XResour˚M™agîSåög
(

1722 
Di•œy
*

1724 *
	`XS¸ìnResour˚Såög
(

1725 
S¸ìn
*

1727 
	`XDi•œyMŸi⁄Buf„rSize
(

1728 
Di•œy
*

1730 
VisuÆID
 
	`XVisuÆIDFromVisuÆ
(

1731 
VisuÆ
*

1736 
Sètus
 
	`XInôThªads
(

1740 
	`XLockDi•œy
(

1741 
Di•œy
*

1744 
	`XU∆ockDi•œy
(

1745 
Di•œy
*

1750 
XExtCodes
 *
	`XInôExãnsi⁄
(

1751 
Di•œy
* ,

1752 
_Xc⁄°
 *

1755 
XExtCodes
 *
	`XAddExãnsi⁄
(

1756 
Di•œy
*

1758 
XExtD©a
 *
	`XFödOnExãnsi⁄Li°
(

1759 
XExtD©a
** ,

1762 
XExtD©a
 **
	`XEHódOfExãnsi⁄Li°
(

1763 
XED©aObje˘


1767 
Wödow
 
	`XRoŸWödow
(

1768 
Di•œy
* ,

1771 
Wödow
 
	`XDeÁu…RoŸWödow
(

1772 
Di•œy
*

1774 
Wödow
 
	`XRoŸWödowOfS¸ìn
(

1775 
S¸ìn
*

1777 
VisuÆ
 *
	`XDeÁu…VisuÆ
(

1778 
Di•œy
* ,

1781 
VisuÆ
 *
	`XDeÁu…VisuÆOfS¸ìn
(

1782 
S¸ìn
*

1784 
GC
 
	`XDeÁu…GC
(

1785 
Di•œy
* ,

1788 
GC
 
	`XDeÁu…GCOfS¸ìn
(

1789 
S¸ìn
*

1791 
	`XBœckPixñ
(

1792 
Di•œy
* ,

1795 
	`XWhôePixñ
(

1796 
Di•œy
* ,

1799 
	`XAŒPœ√s
(

1802 
	`XBœckPixñOfS¸ìn
(

1803 
S¸ìn
*

1805 
	`XWhôePixñOfS¸ìn
(

1806 
S¸ìn
*

1808 
	`XNextReque°
(

1809 
Di•œy
*

1811 
	`XLa°KnownReque°Pro˚s£d
(

1812 
Di•œy
*

1814 *
	`XSîvîVíd‹
(

1815 
Di•œy
*

1817 *
	`XDi•œySåög
(

1818 
Di•œy
*

1820 
Cﬁ‹m≠
 
	`XDeÁu…Cﬁ‹m≠
(

1821 
Di•œy
* ,

1824 
Cﬁ‹m≠
 
	`XDeÁu…Cﬁ‹m≠OfS¸ìn
(

1825 
S¸ìn
*

1827 
Di•œy
 *
	`XDi•œyOfS¸ìn
(

1828 
S¸ìn
*

1830 
S¸ìn
 *
	`XS¸ìnOfDi•œy
(

1831 
Di•œy
* ,

1834 
S¸ìn
 *
	`XDeÁu…S¸ìnOfDi•œy
(

1835 
Di•œy
*

1837 
	`XEvítMaskOfS¸ìn
(

1838 
S¸ìn
*

1841 
	`XS¸ìnNumbîOfS¸ìn
(

1842 
S¸ìn
*

1845 (*
	tXEº‹H™dÀr
) (

1846 
	tDi•œy
* ,

1847 
	tXEº‹Evít
*

1850 
XEº‹H™dÀr
 
	`XSëEº‹H™dÀr
 (

1851 
XEº‹H™dÀr


1855 (*
	tXIOEº‹H™dÀr
) (

1856 
	tDi•œy
*

1859 
XIOEº‹H™dÀr
 
	`XSëIOEº‹H™dÀr
 (

1860 
XIOEº‹H™dÀr


1864 
XPixm≠F‹m©VÆues
 *
	`XLi°Pixm≠F‹m©s
(

1865 
Di•œy
* ,

1868 *
	`XLi°Dïths
(

1869 
Di•œy
* ,

1876 
Sètus
 
	`XRec⁄figuªWMWödow
(

1877 
Di•œy
* ,

1878 
Wödow
 ,

1881 
XWödowCh™ges
*

1884 
Sètus
 
	`XGëWMPrŸocﬁs
(

1885 
Di•œy
* ,

1886 
Wödow
 ,

1887 
Atom
** ,

1890 
Sètus
 
	`XSëWMPrŸocﬁs
(

1891 
Di•œy
* ,

1892 
Wödow
 ,

1893 
Atom
* ,

1896 
Sètus
 
	`XIc⁄ifyWödow
(

1897 
Di•œy
* ,

1898 
Wödow
 ,

1901 
Sètus
 
	`XWôhdøwWödow
(

1902 
Di•œy
* ,

1903 
Wödow
 ,

1906 
Sètus
 
	`XGëComm™d
(

1907 
Di•œy
* ,

1908 
Wödow
 ,

1912 
Sètus
 
	`XGëWMCﬁ‹m≠Wödows
(

1913 
Di•œy
* ,

1914 
Wödow
 ,

1915 
Wödow
** ,

1918 
Sètus
 
	`XSëWMCﬁ‹m≠Wödows
(

1919 
Di•œy
* ,

1920 
Wödow
 ,

1921 
Wödow
* ,

1924 
	`XFªeSåögLi°
(

1927 
	`XSëTønsõ¡F‹Höt
(

1928 
Di•œy
* ,

1929 
Wödow
 ,

1930 
Wödow


1935 
	`XA˘iv©eS¸ìnSavî
(

1936 
Di•œy
*

1939 
	`XAddHo°
(

1940 
Di•œy
* ,

1941 
XHo°Addªss
*

1944 
	`XAddHo°s
(

1945 
Di•œy
* ,

1946 
XHo°Addªss
* ,

1950 
	`XAddToExãnsi⁄Li°
(

1951 
_XExtD©a
** ,

1952 
XExtD©a
*

1955 
	`XAddToSaveSë
(

1956 
Di•œy
* ,

1957 
Wödow


1960 
Sètus
 
	`XAŒocCﬁ‹
(

1961 
Di•œy
* ,

1962 
Cﬁ‹m≠
 ,

1963 
XCﬁ‹
*

1966 
Sètus
 
	`XAŒocCﬁ‹Cñls
(

1967 
Di•œy
* ,

1968 
Cﬁ‹m≠
 ,

1969 
Boﬁ
 ,

1976 
Sètus
 
	`XAŒocCﬁ‹Pœ√s
(

1977 
Di•œy
* ,

1978 
Cﬁ‹m≠
 ,

1979 
Boﬁ
 ,

1990 
Sètus
 
	`XAŒocNamedCﬁ‹
(

1991 
Di•œy
* ,

1992 
Cﬁ‹m≠
 ,

1993 
_Xc⁄°
 * ,

1994 
XCﬁ‹
* ,

1995 
XCﬁ‹
*

1998 
	`XAŒowEvíts
(

1999 
Di•œy
* ,

2001 
Time


2004 
	`XAutoRïótOff
(

2005 
Di•œy
*

2008 
	`XAutoRïótOn
(

2009 
Di•œy
*

2012 
	`XBñl
(

2013 
Di•œy
* ,

2017 
	`XBôm≠BôOrdî
(

2018 
Di•œy
*

2021 
	`XBôm≠Pad
(

2022 
Di•œy
*

2025 
	`XBôm≠Unô
(

2026 
Di•œy
*

2029 
	`XCñlsOfS¸ìn
(

2030 
S¸ìn
*

2033 
	`XCh™geA˘ivePoöãrGøb
(

2034 
Di•œy
* ,

2036 
Curs‹
 ,

2037 
Time


2040 
	`XCh™geGC
(

2041 
Di•œy
* ,

2042 
GC
 ,

2044 
XGCVÆues
*

2047 
	`XCh™geKeybﬂrdC⁄åﬁ
(

2048 
Di•œy
* ,

2050 
XKeybﬂrdC⁄åﬁ
*

2053 
	`XCh™geKeybﬂrdM≠pög
(

2054 
Di•œy
* ,

2057 
KeySym
* ,

2061 
	`XCh™gePoöãrC⁄åﬁ
(

2062 
Di•œy
* ,

2063 
Boﬁ
 ,

2064 
Boﬁ
 ,

2070 
	`XCh™gePr›îty
(

2071 
Di•œy
* ,

2072 
Wödow
 ,

2073 
Atom
 ,

2074 
Atom
 ,

2077 
_Xc⁄°
 * ,

2081 
	`XCh™geSaveSë
(

2082 
Di•œy
* ,

2083 
Wödow
 ,

2087 
	`XCh™geWödowAâribuãs
(

2088 
Di•œy
* ,

2089 
Wödow
 ,

2091 
XSëWödowAâribuãs
*

2094 
Boﬁ
 
	`XCheckIfEvít
(

2095 
Di•œy
* ,

2096 
XEvít
* ,

2097 
	$Boﬁ
 (*) (

2098 
Di•œy
* ,

2099 
XEvít
* ,

2100 
XPoöãr


2102 
XPoöãr


2105 
Boﬁ
 
	`XCheckMaskEvít
(

2106 
Di•œy
* ,

2108 
XEvít
*

2111 
Boﬁ
 
	`XCheckTy≥dEvít
(

2112 
Di•œy
* ,

2114 
XEvít
*

2117 
Boﬁ
 
	`XCheckTy≥dWödowEvít
(

2118 
Di•œy
* ,

2119 
Wödow
 ,

2121 
XEvít
*

2124 
Boﬁ
 
	`XCheckWödowEvít
(

2125 
Di•œy
* ,

2126 
Wödow
 ,

2128 
XEvít
*

2131 
	`XCúcuœãSubwödows
(

2132 
Di•œy
* ,

2133 
Wödow
 ,

2137 
	`XCúcuœãSubwödowsDown
(

2138 
Di•œy
* ,

2139 
Wödow


2142 
	`XCúcuœãSubwödowsUp
(

2143 
Di•œy
* ,

2144 
Wödow


2147 
	`XCÀ¨Aªa
(

2148 
Di•œy
* ,

2149 
Wödow
 ,

2154 
Boﬁ


2157 
	`XCÀ¨Wödow
(

2158 
Di•œy
* ,

2159 
Wödow


2162 
	`XClo£Di•œy
(

2163 
Di•œy
*

2166 
	`XC⁄figuªWödow
(

2167 
Di•œy
* ,

2168 
Wödow
 ,

2170 
XWödowCh™ges
*

2173 
	`XC⁄√˘i⁄Numbî
(

2174 
Di•œy
*

2177 
	`XC⁄vîtSñe˘i⁄
(

2178 
Di•œy
* ,

2179 
Atom
 ,

2180 
Atom
 ,

2181 
Atom
 ,

2182 
Wödow
 ,

2183 
Time


2186 
	`XC›yAªa
(

2187 
Di•œy
* ,

2188 
DøwabÀ
 ,

2189 
DøwabÀ
 ,

2190 
GC
 ,

2199 
	`XC›yGC
(

2200 
Di•œy
* ,

2201 
GC
 ,

2203 
GC


2206 
	`XC›yPœ√
(

2207 
Di•œy
* ,

2208 
DøwabÀ
 ,

2209 
DøwabÀ
 ,

2210 
GC
 ,

2220 
	`XDeÁu…Dïth
(

2221 
Di•œy
* ,

2225 
	`XDeÁu…DïthOfS¸ìn
(

2226 
S¸ìn
*

2229 
	`XDeÁu…S¸ìn
(

2230 
Di•œy
*

2233 
	`XDeföeCurs‹
(

2234 
Di•œy
* ,

2235 
Wödow
 ,

2236 
Curs‹


2239 
	`XDñëePr›îty
(

2240 
Di•œy
* ,

2241 
Wödow
 ,

2242 
Atom


2245 
	`XDe°royWödow
(

2246 
Di•œy
* ,

2247 
Wödow


2250 
	`XDe°roySubwödows
(

2251 
Di•œy
* ,

2252 
Wödow


2255 
	`XD€sBackögSt‹e
(

2256 
S¸ìn
*

2259 
Boﬁ
 
	`XD€sSaveUndîs
(

2260 
S¸ìn
*

2263 
	`XDißbÀAc˚ssC⁄åﬁ
(

2264 
Di•œy
*

2268 
	`XDi•œyCñls
(

2269 
Di•œy
* ,

2273 
	`XDi•œyHeight
(

2274 
Di•œy
* ,

2278 
	`XDi•œyHeightMM
(

2279 
Di•œy
* ,

2283 
	`XDi•œyKeycodes
(

2284 
Di•œy
* ,

2289 
	`XDi•œyPœ√s
(

2290 
Di•œy
* ,

2294 
	`XDi•œyWidth
(

2295 
Di•œy
* ,

2299 
	`XDi•œyWidthMM
(

2300 
Di•œy
* ,

2304 
	`XDøwArc
(

2305 
Di•œy
* ,

2306 
DøwabÀ
 ,

2307 
GC
 ,

2316 
	`XDøwArcs
(

2317 
Di•œy
* ,

2318 
DøwabÀ
 ,

2319 
GC
 ,

2320 
XArc
* ,

2324 
	`XDøwImageSåög
(

2325 
Di•œy
* ,

2326 
DøwabÀ
 ,

2327 
GC
 ,

2330 
_Xc⁄°
 * ,

2334 
	`XDøwImageSåög16
(

2335 
Di•œy
* ,

2336 
DøwabÀ
 ,

2337 
GC
 ,

2340 
_Xc⁄°
 
XCh¨2b
* ,

2344 
	`XDøwLöe
(

2345 
Di•œy
* ,

2346 
DøwabÀ
 ,

2347 
GC
 ,

2354 
	`XDøwLöes
(

2355 
Di•œy
* ,

2356 
DøwabÀ
 ,

2357 
GC
 ,

2358 
XPoöt
* ,

2363 
	`XDøwPoöt
(

2364 
Di•œy
* ,

2365 
DøwabÀ
 ,

2366 
GC
 ,

2371 
	`XDøwPoöts
(

2372 
Di•œy
* ,

2373 
DøwabÀ
 ,

2374 
GC
 ,

2375 
XPoöt
* ,

2380 
	`XDøwRe˘™gÀ
(

2381 
Di•œy
* ,

2382 
DøwabÀ
 ,

2383 
GC
 ,

2390 
	`XDøwRe˘™gÀs
(

2391 
Di•œy
* ,

2392 
DøwabÀ
 ,

2393 
GC
 ,

2394 
XRe˘™gÀ
* ,

2398 
	`XDøwSegmíts
(

2399 
Di•œy
* ,

2400 
DøwabÀ
 ,

2401 
GC
 ,

2402 
XSegmít
* ,

2406 
	`XDøwSåög
(

2407 
Di•œy
* ,

2408 
DøwabÀ
 ,

2409 
GC
 ,

2412 
_Xc⁄°
 * ,

2416 
	`XDøwSåög16
(

2417 
Di•œy
* ,

2418 
DøwabÀ
 ,

2419 
GC
 ,

2422 
_Xc⁄°
 
XCh¨2b
* ,

2426 
	`XDøwText
(

2427 
Di•œy
* ,

2428 
DøwabÀ
 ,

2429 
GC
 ,

2432 
XTextIãm
* ,

2436 
	`XDøwText16
(

2437 
Di•œy
* ,

2438 
DøwabÀ
 ,

2439 
GC
 ,

2442 
XTextIãm16
* ,

2446 
	`XE«bÀAc˚ssC⁄åﬁ
(

2447 
Di•œy
*

2450 
	`XEvítsQueued
(

2451 
Di•œy
* ,

2455 
Sètus
 
	`XFëchName
(

2456 
Di•œy
* ,

2457 
Wödow
 ,

2461 
	`XFûlArc
(

2462 
Di•œy
* ,

2463 
DøwabÀ
 ,

2464 
GC
 ,

2473 
	`XFûlArcs
(

2474 
Di•œy
* ,

2475 
DøwabÀ
 ,

2476 
GC
 ,

2477 
XArc
* ,

2481 
	`XFûlPﬁyg⁄
(

2482 
Di•œy
* ,

2483 
DøwabÀ
 ,

2484 
GC
 ,

2485 
XPoöt
* ,

2491 
	`XFûlRe˘™gÀ
(

2492 
Di•œy
* ,

2493 
DøwabÀ
 ,

2494 
GC
 ,

2501 
	`XFûlRe˘™gÀs
(

2502 
Di•œy
* ,

2503 
DøwabÀ
 ,

2504 
GC
 ,

2505 
XRe˘™gÀ
* ,

2509 
	`XFlush
(

2510 
Di•œy
*

2513 
	`XF‹˚S¸ìnSavî
(

2514 
Di•œy
* ,

2518 
	`XFªe
(

2522 
	`XFªeCﬁ‹m≠
(

2523 
Di•œy
* ,

2524 
Cﬁ‹m≠


2527 
	`XFªeCﬁ‹s
(

2528 
Di•œy
* ,

2529 
Cﬁ‹m≠
 ,

2535 
	`XFªeCurs‹
(

2536 
Di•œy
* ,

2537 
Curs‹


2540 
	`XFªeExãnsi⁄Li°
(

2544 
	`XFªeF⁄t
(

2545 
Di•œy
* ,

2546 
XF⁄tSåu˘
*

2549 
	`XFªeF⁄tInfo
(

2551 
XF⁄tSåu˘
* ,

2555 
	`XFªeF⁄tNames
(

2559 
	`XFªeF⁄tP©h
(

2563 
	`XFªeGC
(

2564 
Di•œy
* ,

2565 
GC


2568 
	`XFªeModifõrm≠
(

2569 
XModifõrKeym≠
*

2572 
	`XFªePixm≠
(

2573 
Di•œy
* ,

2574 
Pixm≠


2577 
	`XGeomëry
(

2578 
Di•œy
* ,

2580 
_Xc⁄°
 * ,

2581 
_Xc⁄°
 * ,

2593 
	`XGëEº‹D©aba£Text
(

2594 
Di•œy
* ,

2595 
_Xc⁄°
 * ,

2596 
_Xc⁄°
 * ,

2597 
_Xc⁄°
 * ,

2602 
	`XGëEº‹Text
(

2603 
Di•œy
* ,

2609 
Boﬁ
 
	`XGëF⁄tPr›îty
(

2610 
XF⁄tSåu˘
* ,

2611 
Atom
 ,

2615 
Sètus
 
	`XGëGCVÆues
(

2616 
Di•œy
* ,

2617 
GC
 ,

2619 
XGCVÆues
*

2622 
Sètus
 
	`XGëGeomëry
(

2623 
Di•œy
* ,

2624 
DøwabÀ
 ,

2625 
Wödow
* ,

2634 
Sètus
 
	`XGëIc⁄Name
(

2635 
Di•œy
* ,

2636 
Wödow
 ,

2640 
	`XGëI≈utFocus
(

2641 
Di•œy
* ,

2642 
Wödow
* ,

2646 
	`XGëKeybﬂrdC⁄åﬁ
(

2647 
Di•œy
* ,

2648 
XKeybﬂrdSèã
*

2651 
	`XGëPoöãrC⁄åﬁ
(

2652 
Di•œy
* ,

2658 
	`XGëPoöãrM≠pög
(

2659 
Di•œy
* ,

2664 
	`XGëS¸ìnSavî
(

2665 
Di•œy
* ,

2672 
Sètus
 
	`XGëTønsõ¡F‹Höt
(

2673 
Di•œy
* ,

2674 
Wödow
 ,

2675 
Wödow
*

2678 
	`XGëWödowPr›îty
(

2679 
Di•œy
* ,

2680 
Wödow
 ,

2681 
Atom
 ,

2684 
Boﬁ
 ,

2685 
Atom
 ,

2686 
Atom
* ,

2693 
Sètus
 
	`XGëWödowAâribuãs
(

2694 
Di•œy
* ,

2695 
Wödow
 ,

2696 
XWödowAâribuãs
*

2699 
	`XGøbBuâ⁄
(

2700 
Di•œy
* ,

2703 
Wödow
 ,

2704 
Boﬁ
 ,

2708 
Wödow
 ,

2709 
Curs‹


2712 
	`XGøbKey
(

2713 
Di•œy
* ,

2716 
Wödow
 ,

2717 
Boﬁ
 ,

2722 
	`XGøbKeybﬂrd
(

2723 
Di•œy
* ,

2724 
Wödow
 ,

2725 
Boﬁ
 ,

2728 
Time


2731 
	`XGøbPoöãr
(

2732 
Di•œy
* ,

2733 
Wödow
 ,

2734 
Boﬁ
 ,

2738 
Wödow
 ,

2739 
Curs‹
 ,

2740 
Time


2743 
	`XGøbSîvî
(

2744 
Di•œy
*

2747 
	`XHeightMMOfS¸ìn
(

2748 
S¸ìn
*

2751 
	`XHeightOfS¸ìn
(

2752 
S¸ìn
*

2755 
	`XIfEvít
(

2756 
Di•œy
* ,

2757 
XEvít
* ,

2758 
	$Boﬁ
 (*) (

2759 
Di•œy
* ,

2760 
XEvít
* ,

2761 
XPoöãr


2763 
XPoöãr


2766 
	`XImageByãOrdî
(

2767 
Di•œy
*

2770 
	`XIn°ÆlCﬁ‹m≠
(

2771 
Di•œy
* ,

2772 
Cﬁ‹m≠


2775 
KeyCode
 
	`XKeysymToKeycode
(

2776 
Di•œy
* ,

2777 
KeySym


2780 
	`XKûlClõ¡
(

2781 
Di•œy
* ,

2782 
XID


2785 
Sètus
 
	`XLookupCﬁ‹
(

2786 
Di•œy
* ,

2787 
Cﬁ‹m≠
 ,

2788 
_Xc⁄°
 * ,

2789 
XCﬁ‹
* ,

2790 
XCﬁ‹
*

2793 
	`XLowîWödow
(

2794 
Di•œy
* ,

2795 
Wödow


2798 
	`XM≠Rai£d
(

2799 
Di•œy
* ,

2800 
Wödow


2803 
	`XM≠Subwödows
(

2804 
Di•œy
* ,

2805 
Wödow


2808 
	`XM≠Wödow
(

2809 
Di•œy
* ,

2810 
Wödow


2813 
	`XMaskEvít
(

2814 
Di•œy
* ,

2816 
XEvít
*

2819 
	`XMaxCm≠sOfS¸ìn
(

2820 
S¸ìn
*

2823 
	`XMöCm≠sOfS¸ìn
(

2824 
S¸ìn
*

2827 
	`XMoveResizeWödow
(

2828 
Di•œy
* ,

2829 
Wödow
 ,

2836 
	`XMoveWödow
(

2837 
Di•œy
* ,

2838 
Wödow
 ,

2843 
	`XNextEvít
(

2844 
Di•œy
* ,

2845 
XEvít
*

2848 
	`XNoOp
(

2849 
Di•œy
*

2852 
Sètus
 
	`XP¨£Cﬁ‹
(

2853 
Di•œy
* ,

2854 
Cﬁ‹m≠
 ,

2855 
_Xc⁄°
 * ,

2856 
XCﬁ‹
*

2859 
	`XP¨£Geomëry
(

2860 
_Xc⁄°
 * ,

2867 
	`XPìkEvít
(

2868 
Di•œy
* ,

2869 
XEvít
*

2872 
	`XPìkIfEvít
(

2873 
Di•œy
* ,

2874 
XEvít
* ,

2875 
	$Boﬁ
 (*) (

2876 
Di•œy
* ,

2877 
XEvít
* ,

2878 
XPoöãr


2880 
XPoöãr


2883 
	`XPídög
(

2884 
Di•œy
*

2887 
	`XPœ√sOfS¸ìn
(

2888 
S¸ìn
*

2891 
	`XPrŸocﬁRevisi⁄
(

2892 
Di•œy
*

2895 
	`XPrŸocﬁVîsi⁄
(

2896 
Di•œy
*

2900 
	`XPutBackEvít
(

2901 
Di•œy
* ,

2902 
XEvít
*

2905 
	`XPutImage
(

2906 
Di•œy
* ,

2907 
DøwabÀ
 ,

2908 
GC
 ,

2909 
XImage
* ,

2918 
	`XQLígth
(

2919 
Di•œy
*

2922 
Sètus
 
	`XQuîyBe°Curs‹
(

2923 
Di•œy
* ,

2924 
DøwabÀ
 ,

2931 
Sètus
 
	`XQuîyBe°Size
(

2932 
Di•œy
* ,

2934 
DøwabÀ
 ,

2941 
Sètus
 
	`XQuîyBe°Stù∂e
(

2942 
Di•œy
* ,

2943 
DøwabÀ
 ,

2950 
Sètus
 
	`XQuîyBe°Tûe
(

2951 
Di•œy
* ,

2952 
DøwabÀ
 ,

2959 
	`XQuîyCﬁ‹
(

2960 
Di•œy
* ,

2961 
Cﬁ‹m≠
 ,

2962 
XCﬁ‹
*

2965 
	`XQuîyCﬁ‹s
(

2966 
Di•œy
* ,

2967 
Cﬁ‹m≠
 ,

2968 
XCﬁ‹
* ,

2972 
Boﬁ
 
	`XQuîyExãnsi⁄
(

2973 
Di•œy
* ,

2974 
_Xc⁄°
 * ,

2980 
	`XQuîyKeym≠
(

2981 
Di•œy
* ,

2985 
Boﬁ
 
	`XQuîyPoöãr
(

2986 
Di•œy
* ,

2987 
Wödow
 ,

2988 
Wödow
* ,

2989 
Wödow
* ,

2997 
	`XQuîyTextExã¡s
(

2998 
Di•œy
* ,

2999 
XID
 ,

3000 
_Xc⁄°
 * ,

3005 
XCh¨Såu˘
*

3008 
	`XQuîyTextExã¡s16
(

3009 
Di•œy
* ,

3010 
XID
 ,

3011 
_Xc⁄°
 
XCh¨2b
* ,

3016 
XCh¨Såu˘
*

3019 
Sètus
 
	`XQuîyTªe
(

3020 
Di•œy
* ,

3021 
Wödow
 ,

3022 
Wödow
* ,

3023 
Wödow
* ,

3024 
Wödow
** ,

3028 
	`XRai£Wödow
(

3029 
Di•œy
* ,

3030 
Wödow


3033 
	`XRódBôm≠Fûe
(

3034 
Di•œy
* ,

3035 
DøwabÀ
 ,

3036 
_Xc⁄°
 * ,

3039 
Pixm≠
* ,

3044 
	`XRódBôm≠FûeD©a
(

3045 
_Xc⁄°
 * ,

3053 
	`XRebödKeysym
(

3054 
Di•œy
* ,

3055 
KeySym
 ,

3056 
KeySym
* ,

3058 
_Xc⁄°
 * ,

3062 
	`XRecﬁ‹Curs‹
(

3063 
Di•œy
* ,

3064 
Curs‹
 ,

3065 
XCﬁ‹
* ,

3066 
XCﬁ‹
*

3069 
	`XRe‰eshKeybﬂrdM≠pög
(

3070 
XM≠pögEvít
*

3073 
	`XRemoveFromSaveSë
(

3074 
Di•œy
* ,

3075 
Wödow


3078 
	`XRemoveHo°
(

3079 
Di•œy
* ,

3080 
XHo°Addªss
*

3083 
	`XRemoveHo°s
(

3084 
Di•œy
* ,

3085 
XHo°Addªss
* ,

3089 
	`XRï¨ítWödow
(

3090 
Di•œy
* ,

3091 
Wödow
 ,

3092 
Wödow
 ,

3097 
	`XRe£tS¸ìnSavî
(

3098 
Di•œy
*

3101 
	`XResizeWödow
(

3102 
Di•œy
* ,

3103 
Wödow
 ,

3108 
	`XRe°ackWödows
(

3109 
Di•œy
* ,

3110 
Wödow
* ,

3114 
	`XRŸ©eBuf„rs
(

3115 
Di•œy
* ,

3119 
	`XRŸ©eWödowPr›îtõs
(

3120 
Di•œy
* ,

3121 
Wödow
 ,

3122 
Atom
* ,

3127 
	`XS¸ìnCou¡
(

3128 
Di•œy
*

3131 
	`XSñe˘I≈ut
(

3132 
Di•œy
* ,

3133 
Wödow
 ,

3137 
Sètus
 
	`XSídEvít
(

3138 
Di•œy
* ,

3139 
Wödow
 ,

3140 
Boﬁ
 ,

3142 
XEvít
*

3145 
	`XSëAc˚ssC⁄åﬁ
(

3146 
Di•œy
* ,

3150 
	`XSëArcMode
(

3151 
Di•œy
* ,

3152 
GC
 ,

3156 
	`XSëBackground
(

3157 
Di•œy
* ,

3158 
GC
 ,

3162 
	`XSëClùMask
(

3163 
Di•œy
* ,

3164 
GC
 ,

3165 
Pixm≠


3168 
	`XSëClùOrigö
(

3169 
Di•œy
* ,

3170 
GC
 ,

3175 
	`XSëClùRe˘™gÀs
(

3176 
Di•œy
* ,

3177 
GC
 ,

3180 
XRe˘™gÀ
* ,

3185 
	`XSëClo£DownMode
(

3186 
Di•œy
* ,

3190 
	`XSëComm™d
(

3191 
Di•œy
* ,

3192 
Wödow
 ,

3197 
	`XSëDashes
(

3198 
Di•œy
* ,

3199 
GC
 ,

3201 
_Xc⁄°
 * ,

3205 
	`XSëFûlRuÀ
(

3206 
Di•œy
* ,

3207 
GC
 ,

3211 
	`XSëFûlStyÀ
(

3212 
Di•œy
* ,

3213 
GC
 ,

3217 
	`XSëF⁄t
(

3218 
Di•œy
* ,

3219 
GC
 ,

3220 
F⁄t


3223 
	`XSëF⁄tP©h
(

3224 
Di•œy
* ,

3229 
	`XSëF‹eground
(

3230 
Di•œy
* ,

3231 
GC
 ,

3235 
	`XSëFun˘i⁄
(

3236 
Di•œy
* ,

3237 
GC
 ,

3241 
	`XSëGøphicsExposuªs
(

3242 
Di•œy
* ,

3243 
GC
 ,

3244 
Boﬁ


3247 
	`XSëIc⁄Name
(

3248 
Di•œy
* ,

3249 
Wödow
 ,

3250 
_Xc⁄°
 *

3253 
	`XSëI≈utFocus
(

3254 
Di•œy
* ,

3255 
Wödow
 ,

3257 
Time


3260 
	`XSëLöeAâribuãs
(

3261 
Di•œy
* ,

3262 
GC
 ,

3269 
	`XSëModifõrM≠pög
(

3270 
Di•œy
* ,

3271 
XModifõrKeym≠
*

3274 
	`XSëPœ√Mask
(

3275 
Di•œy
* ,

3276 
GC
 ,

3280 
	`XSëPoöãrM≠pög
(

3281 
Di•œy
* ,

3282 
_Xc⁄°
 * ,

3286 
	`XSëS¸ìnSavî
(

3287 
Di•œy
* ,

3294 
	`XSëSñe˘i⁄Ow√r
(

3295 
Di•œy
* ,

3296 
Atom
 ,

3297 
Wödow
 ,

3298 
Time


3301 
	`XSëSèã
(

3302 
Di•œy
* ,

3303 
GC
 ,

3310 
	`XSëStù∂e
(

3311 
Di•œy
* ,

3312 
GC
 ,

3313 
Pixm≠


3316 
	`XSëSubwödowMode
(

3317 
Di•œy
* ,

3318 
GC
 ,

3322 
	`XSëTSOrigö
(

3323 
Di•œy
* ,

3324 
GC
 ,

3329 
	`XSëTûe
(

3330 
Di•œy
* ,

3331 
GC
 ,

3332 
Pixm≠


3335 
	`XSëWödowBackground
(

3336 
Di•œy
* ,

3337 
Wödow
 ,

3341 
	`XSëWödowBackgroundPixm≠
(

3342 
Di•œy
* ,

3343 
Wödow
 ,

3344 
Pixm≠


3347 
	`XSëWödowB‹dî
(

3348 
Di•œy
* ,

3349 
Wödow
 ,

3353 
	`XSëWödowB‹dîPixm≠
(

3354 
Di•œy
* ,

3355 
Wödow
 ,

3356 
Pixm≠


3359 
	`XSëWödowB‹dîWidth
(

3360 
Di•œy
* ,

3361 
Wödow
 ,

3365 
	`XSëWödowCﬁ‹m≠
(

3366 
Di•œy
* ,

3367 
Wödow
 ,

3368 
Cﬁ‹m≠


3371 
	`XSt‹eBuf„r
(

3372 
Di•œy
* ,

3373 
_Xc⁄°
 * ,

3378 
	`XSt‹eByãs
(

3379 
Di•œy
* ,

3380 
_Xc⁄°
 * ,

3384 
	`XSt‹eCﬁ‹
(

3385 
Di•œy
* ,

3386 
Cﬁ‹m≠
 ,

3387 
XCﬁ‹
*

3390 
	`XSt‹eCﬁ‹s
(

3391 
Di•œy
* ,

3392 
Cﬁ‹m≠
 ,

3393 
XCﬁ‹
* ,

3397 
	`XSt‹eName
(

3398 
Di•œy
* ,

3399 
Wödow
 ,

3400 
_Xc⁄°
 *

3403 
	`XSt‹eNamedCﬁ‹
(

3404 
Di•œy
* ,

3405 
Cﬁ‹m≠
 ,

3406 
_Xc⁄°
 * ,

3411 
	`XSync
(

3412 
Di•œy
* ,

3413 
Boﬁ


3416 
	`XTextExã¡s
(

3417 
XF⁄tSåu˘
* ,

3418 
_Xc⁄°
 * ,

3423 
XCh¨Såu˘
*

3426 
	`XTextExã¡s16
(

3427 
XF⁄tSåu˘
* ,

3428 
_Xc⁄°
 
XCh¨2b
* ,

3433 
XCh¨Såu˘
*

3436 
	`XTextWidth
(

3437 
XF⁄tSåu˘
* ,

3438 
_Xc⁄°
 * ,

3442 
	`XTextWidth16
(

3443 
XF⁄tSåu˘
* ,

3444 
_Xc⁄°
 
XCh¨2b
* ,

3448 
Boﬁ
 
	`XTøn¶©eCo‹dö©es
(

3449 
Di•œy
* ,

3450 
Wödow
 ,

3451 
Wödow
 ,

3456 
Wödow
*

3459 
	`XUndeföeCurs‹
(

3460 
Di•œy
* ,

3461 
Wödow


3464 
	`XUngøbBuâ⁄
(

3465 
Di•œy
* ,

3468 
Wödow


3471 
	`XUngøbKey
(

3472 
Di•œy
* ,

3475 
Wödow


3478 
	`XUngøbKeybﬂrd
(

3479 
Di•œy
* ,

3480 
Time


3483 
	`XUngøbPoöãr
(

3484 
Di•œy
* ,

3485 
Time


3488 
	`XUngøbSîvî
(

3489 
Di•œy
*

3492 
	`XUnö°ÆlCﬁ‹m≠
(

3493 
Di•œy
* ,

3494 
Cﬁ‹m≠


3497 
	`XU∆ﬂdF⁄t
(

3498 
Di•œy
* ,

3499 
F⁄t


3502 
	`XUnm≠Subwödows
(

3503 
Di•œy
* ,

3504 
Wödow


3507 
	`XUnm≠Wödow
(

3508 
Di•œy
* ,

3509 
Wödow


3512 
	`XVíd‹Rñó£
(

3513 
Di•œy
*

3516 
	`XW¨pPoöãr
(

3517 
Di•œy
* ,

3518 
Wödow
 ,

3519 
Wödow
 ,

3528 
	`XWidthMMOfS¸ìn
(

3529 
S¸ìn
*

3532 
	`XWidthOfS¸ìn
(

3533 
S¸ìn
*

3536 
	`XWödowEvít
(

3537 
Di•œy
* ,

3538 
Wödow
 ,

3540 
XEvít
*

3543 
	`XWrôeBôm≠Fûe
(

3544 
Di•œy
* ,

3545 
_Xc⁄°
 * ,

3546 
Pixm≠
 ,

3553 
Boﬁ
 
	`XSuµ‹tsLoˇÀ
 ();

3555 *
	`XSëLoˇÀModifõrs
(

3559 
XOM
 
	`XO≥nOM
(

3560 
Di•œy
* ,

3561 
_XrmHashBuckëRec
* ,

3562 
_Xc⁄°
 * ,

3563 
_Xc⁄°
 *

3566 
Sètus
 
	`XClo£OM
(

3567 
XOM


3570 *
	$XSëOMVÆues
(

3571 
XOM
 ,

3573 Ë
	`_X_SENTINEL
(0);

3575 *
	$XGëOMVÆues
(

3576 
XOM
 ,

3578 Ë
	`_X_SENTINEL
(0);

3580 
Di•œy
 *
	`XDi•œyOfOM
(

3581 
XOM


3584 *
	`XLoˇÀOfOM
(

3585 
XOM


3588 
XOC
 
	$XCª©eOC
(

3589 
XOM
 ,

3591 Ë
	`_X_SENTINEL
(0);

3593 
	`XDe°royOC
(

3594 
XOC


3597 
XOM
 
	`XOMOfOC
(

3598 
XOC


3601 *
	$XSëOCVÆues
(

3602 
XOC
 ,

3604 Ë
	`_X_SENTINEL
(0);

3606 *
	$XGëOCVÆues
(

3607 
XOC
 ,

3609 Ë
	`_X_SENTINEL
(0);

3611 
XF⁄tSë
 
	`XCª©eF⁄tSë
(

3612 
Di•œy
* ,

3613 
_Xc⁄°
 * ,

3619 
	`XFªeF⁄tSë
(

3620 
Di•œy
* ,

3621 
XF⁄tSë


3624 
	`XF⁄tsOfF⁄tSë
(

3625 
XF⁄tSë
 ,

3626 
XF⁄tSåu˘
*** ,

3630 *
	`XBa£F⁄tNameLi°OfF⁄tSë
(

3631 
XF⁄tSë


3634 *
	`XLoˇÀOfF⁄tSë
(

3635 
XF⁄tSë


3638 
Boﬁ
 
	`XC⁄ãxtDïídítDøwög
(

3639 
XF⁄tSë


3642 
Boﬁ
 
	`XDúe˘i⁄ÆDïídítDøwög
(

3643 
XF⁄tSë


3646 
Boﬁ
 
	`XC⁄ãxtuÆDøwög
(

3647 
XF⁄tSë


3650 
XF⁄tSëExã¡s
 *
	`XExã¡sOfF⁄tSë
(

3651 
XF⁄tSë


3654 
	`XmbTextEsˇ≥mít
(

3655 
XF⁄tSë
 ,

3656 
_Xc⁄°
 * ,

3660 
	`XwcTextEsˇ≥mít
(

3661 
XF⁄tSë
 ,

3662 
_Xc⁄°
 
wch¨_t
* ,

3666 
	`Xutf8TextEsˇ≥mít
(

3667 
XF⁄tSë
 ,

3668 
_Xc⁄°
 * ,

3672 
	`XmbTextExã¡s
(

3673 
XF⁄tSë
 ,

3674 
_Xc⁄°
 * ,

3676 
XRe˘™gÀ
* ,

3677 
XRe˘™gÀ
*

3680 
	`XwcTextExã¡s
(

3681 
XF⁄tSë
 ,

3682 
_Xc⁄°
 
wch¨_t
* ,

3684 
XRe˘™gÀ
* ,

3685 
XRe˘™gÀ
*

3688 
	`Xutf8TextExã¡s
(

3689 
XF⁄tSë
 ,

3690 
_Xc⁄°
 * ,

3692 
XRe˘™gÀ
* ,

3693 
XRe˘™gÀ
*

3696 
Sètus
 
	`XmbTextPîCh¨Exã¡s
(

3697 
XF⁄tSë
 ,

3698 
_Xc⁄°
 * ,

3700 
XRe˘™gÀ
* ,

3701 
XRe˘™gÀ
* ,

3704 
XRe˘™gÀ
* ,

3705 
XRe˘™gÀ
*

3708 
Sètus
 
	`XwcTextPîCh¨Exã¡s
(

3709 
XF⁄tSë
 ,

3710 
_Xc⁄°
 
wch¨_t
* ,

3712 
XRe˘™gÀ
* ,

3713 
XRe˘™gÀ
* ,

3716 
XRe˘™gÀ
* ,

3717 
XRe˘™gÀ
*

3720 
Sètus
 
	`Xutf8TextPîCh¨Exã¡s
(

3721 
XF⁄tSë
 ,

3722 
_Xc⁄°
 * ,

3724 
XRe˘™gÀ
* ,

3725 
XRe˘™gÀ
* ,

3728 
XRe˘™gÀ
* ,

3729 
XRe˘™gÀ
*

3732 
	`XmbDøwText
(

3733 
Di•œy
* ,

3734 
DøwabÀ
 ,

3735 
GC
 ,

3738 
XmbTextIãm
* ,

3742 
	`XwcDøwText
(

3743 
Di•œy
* ,

3744 
DøwabÀ
 ,

3745 
GC
 ,

3748 
XwcTextIãm
* ,

3752 
	`Xutf8DøwText
(

3753 
Di•œy
* ,

3754 
DøwabÀ
 ,

3755 
GC
 ,

3758 
XmbTextIãm
* ,

3762 
	`XmbDøwSåög
(

3763 
Di•œy
* ,

3764 
DøwabÀ
 ,

3765 
XF⁄tSë
 ,

3766 
GC
 ,

3769 
_Xc⁄°
 * ,

3773 
	`XwcDøwSåög
(

3774 
Di•œy
* ,

3775 
DøwabÀ
 ,

3776 
XF⁄tSë
 ,

3777 
GC
 ,

3780 
_Xc⁄°
 
wch¨_t
* ,

3784 
	`Xutf8DøwSåög
(

3785 
Di•œy
* ,

3786 
DøwabÀ
 ,

3787 
XF⁄tSë
 ,

3788 
GC
 ,

3791 
_Xc⁄°
 * ,

3795 
	`XmbDøwImageSåög
(

3796 
Di•œy
* ,

3797 
DøwabÀ
 ,

3798 
XF⁄tSë
 ,

3799 
GC
 ,

3802 
_Xc⁄°
 * ,

3806 
	`XwcDøwImageSåög
(

3807 
Di•œy
* ,

3808 
DøwabÀ
 ,

3809 
XF⁄tSë
 ,

3810 
GC
 ,

3813 
_Xc⁄°
 
wch¨_t
* ,

3817 
	`Xutf8DøwImageSåög
(

3818 
Di•œy
* ,

3819 
DøwabÀ
 ,

3820 
XF⁄tSë
 ,

3821 
GC
 ,

3824 
_Xc⁄°
 * ,

3828 
XIM
 
	`XO≥nIM
(

3829 
Di•œy
* ,

3830 
_XrmHashBuckëRec
* ,

3835 
Sètus
 
	`XClo£IM
(

3836 
XIM


3839 *
	$XGëIMVÆues
(

3840 
XIM
 , ...

3841 Ë
	`_X_SENTINEL
(0);

3843 *
	$XSëIMVÆues
(

3844 
XIM
 , ...

3845 Ë
	`_X_SENTINEL
(0);

3847 
Di•œy
 *
	`XDi•œyOfIM
(

3848 
XIM


3851 *
	`XLoˇÀOfIM
(

3852 
XIM


3855 
XIC
 
	$XCª©eIC
(

3856 
XIM
 , ...

3857 Ë
	`_X_SENTINEL
(0);

3859 
	`XDe°royIC
(

3860 
XIC


3863 
	`XSëICFocus
(

3864 
XIC


3867 
	`XUn£tICFocus
(

3868 
XIC


3871 
wch¨_t
 *
	`XwcRe£tIC
(

3872 
XIC


3875 *
	`XmbRe£tIC
(

3876 
XIC


3879 *
	`Xutf8Re£tIC
(

3880 
XIC


3883 *
	$XSëICVÆues
(

3884 
XIC
 , ...

3885 Ë
	`_X_SENTINEL
(0);

3887 *
	$XGëICVÆues
(

3888 
XIC
 , ...

3889 Ë
	`_X_SENTINEL
(0);

3891 
XIM
 
	`XIMOfIC
(

3892 
XIC


3895 
Boﬁ
 
	`XFûãrEvít
(

3896 
XEvít
* ,

3897 
Wödow


3900 
	`XmbLookupSåög
(

3901 
XIC
 ,

3902 
XKeyPªs£dEvít
* ,

3905 
KeySym
* ,

3906 
Sètus
*

3909 
	`XwcLookupSåög
(

3910 
XIC
 ,

3911 
XKeyPªs£dEvít
* ,

3912 
wch¨_t
* ,

3914 
KeySym
* ,

3915 
Sètus
*

3918 
	`Xutf8LookupSåög
(

3919 
XIC
 ,

3920 
XKeyPªs£dEvít
* ,

3923 
KeySym
* ,

3924 
Sètus
*

3927 
XVaNe°edLi°
 
	$XVaCª©eNe°edLi°
(

3929 Ë
	`_X_SENTINEL
(0);

3933 
Boﬁ
 
	`XRegi°îIMIn°™tüãCÆlback
(

3934 
Di•œy
* ,

3935 
_XrmHashBuckëRec
* ,

3938 
XIDProc
 ,

3939 
XPoöãr


3942 
Boﬁ
 
	`XUƒegi°îIMIn°™tüãCÆlback
(

3943 
Di•œy
* ,

3944 
_XrmHashBuckëRec
* ,

3947 
XIDProc
 ,

3948 
XPoöãr


3951 (*
	tXC⁄√˘i⁄W©chProc
)(

3952 
	tDi•œy
* ,

3953 
	tXPoöãr
 ,

3955 
	tBoﬁ
 ,

3956 
	tXPoöãr
*

3960 
Sètus
 
	`XI¡î«lC⁄√˘i⁄Numbîs
(

3961 
Di•œy
* ,

3966 
	`XPro˚ssI¡î«lC⁄√˘i⁄
(

3967 
Di•œy
* ,

3971 
Sètus
 
	`XAddC⁄√˘i⁄W©ch
(

3972 
Di•œy
* ,

3973 
XC⁄√˘i⁄W©chProc
 ,

3974 
XPoöãr


3977 
	`XRemoveC⁄√˘i⁄W©ch
(

3978 
Di•œy
* ,

3979 
XC⁄√˘i⁄W©chProc
 ,

3980 
XPoöãr


3983 
	`XSëAuth‹iz©i⁄
(

3990 
	`_Xmbtowc
(

3991 
wch¨_t
 * ,

3992 #ifde‡
ISC


3994 
size_t


4001 
	`_Xw˘omb
(

4003 
wch¨_t


4006 
_XFUNCPROTOEND


	@/usr/include/X11/Xutil.h

51 #i‚de‡
_XUTIL_H_


52 
	#_XUTIL_H_


	)

55 
	~<X11/Xlib.h
>

56 
	~<X11/keysym.h
>

62 
	#NoVÆue
 0x0000

	)

63 
	#XVÆue
 0x0001

	)

64 
	#YVÆue
 0x0002

	)

65 
	#WidthVÆue
 0x0004

	)

66 
	#HeightVÆue
 0x0008

	)

67 
	#AŒVÆues
 0x000F

	)

68 
	#XNeg©ive
 0x0010

	)

69 
	#YNeg©ive
 0x0020

	)

76 
	mÊags
;

77 
	mx
, 
	my
;

78 
	mwidth
, 
	mheight
;

79 
	mmö_width
, 
	mmö_height
;

80 
	mmax_width
, 
	mmax_height
;

81 
	mwidth_öc
, 
	mheight_öc
;

83 
	mx
;

84 
	my
;

85 } 
	mmö_a•e˘
, 
	mmax_a•e˘
;

86 
	mba£_width
, 
	mba£_height
;

87 
	mwö_gøvôy
;

88 } 
	tXSizeHöts
;

96 
	#USPosôi⁄
 (1L << 0Ë

	)

97 
	#USSize
 (1L << 1Ë

	)

99 
	#PPosôi⁄
 (1L << 2Ë

	)

100 
	#PSize
 (1L << 3Ë

	)

101 
	#PMöSize
 (1L << 4Ë

	)

102 
	#PMaxSize
 (1L << 5Ë

	)

103 
	#PResizeInc
 (1L << 6Ë

	)

104 
	#PA•e˘
 (1L << 7Ë

	)

105 
	#PBa£Size
 (1L << 8Ë

	)

106 
	#PWöGøvôy
 (1L << 9Ë

	)

109 
	#PAŒHöts
 (
PPosôi⁄
|
PSize
|
PMöSize
|
PMaxSize
|
PResizeInc
|
PA•e˘
)

	)

114 
	mÊags
;

115 
Boﬁ
 
	möput
;

117 
	möôül_°©e
;

118 
Pixm≠
 
	mic⁄_pixm≠
;

119 
Wödow
 
	mic⁄_wödow
;

120 
	mic⁄_x
, 
	mic⁄_y
;

121 
Pixm≠
 
	mic⁄_mask
;

122 
XID
 
	mwödow_group
;

124 } 
	tXWMHöts
;

128 
	#I≈utHöt
 (1L << 0)

	)

129 
	#SèãHöt
 (1L << 1)

	)

130 
	#Ic⁄Pixm≠Höt
 (1L << 2)

	)

131 
	#Ic⁄WödowHöt
 (1L << 3)

	)

132 
	#Ic⁄Posôi⁄Höt
 (1L << 4)

	)

133 
	#Ic⁄MaskHöt
 (1L << 5)

	)

134 
	#WödowGroupHöt
 (1L << 6)

	)

135 
	#AŒHöts
 (
I≈utHöt
|
SèãHöt
|
Ic⁄Pixm≠Höt
|
Ic⁄WödowHöt
| \

136 
Ic⁄Posôi⁄Höt
|
Ic⁄MaskHöt
|
WödowGroupHöt
)

	)

137 
	#XUrgícyHöt
 (1L << 8)

	)

140 
	#WôhdøwnSèã
 0

	)

141 
	#N‹mÆSèã
 1

	)

142 
	#Ic⁄icSèã
 3

	)

147 
	#D⁄tC¨eSèã
 0

	)

148 
	#ZoomSèã
 2

	)

149 
	#I«˘iveSèã
 4

	)

158 *
	mvÆue
;

159 
Atom
 
	mícodög
;

160 
	mf‹m©
;

161 
	mnôems
;

162 } 
	tXTextPr›îty
;

164 
	#XNoMem‹y
 -1

	)

165 
	#XLoˇÀNŸSuµ‹ãd
 -2

	)

166 
	#XC⁄vîãrNŸFound
 -3

	)

169 
	mXSåögStyÀ
,

170 
	mXCompoundTextStyÀ
,

171 
	mXTextStyÀ
,

172 
	mXStdICCTextStyÀ
,

174 
	mXUTF8SåögStyÀ


175 } 
	tXICCEncodögStyÀ
;

178 
	mmö_width
, 
	mmö_height
;

179 
	mmax_width
, 
	mmax_height
;

180 
	mwidth_öc
, 
	mheight_öc
;

181 } 
	tXIc⁄Size
;

184 *
	mªs_«me
;

185 *
	mªs_˛ass
;

186 } 
	tXCœssHöt
;

188 #ifde‡
XUTIL_DEFINE_FUNCTIONS


189 
XDe°royImage
(

190 
XImage
 *
ximage
);

191 
XGëPixñ
(

192 
XImage
 *
ximage
,

193 
x
, 
y
);

194 
XPutPixñ
(

195 
XImage
 *
ximage
,

196 
x
, 
y
,

197 
pixñ
);

198 
XImage
 *
XSubImage
(

199 
XImage
 *
ximage
,

200 
x
, 
y
,

201 
width
, 
height
);

202 
XAddPixñ
(

203 
XImage
 *
ximage
,

204 
vÆue
);

210 
	#XDe°royImage
(
ximage
) \

211 ((*((
ximage
)->
f
.
de°roy_image
))((ximage)))

	)

212 
	#XGëPixñ
(
ximage
, 
x
, 
y
) \

213 ((*((
ximage
)->
f
.
gë_pixñ
))((ximage), (
x
), (
y
)))

	)

214 
	#XPutPixñ
(
ximage
, 
x
, 
y
, 
pixñ
) \

215 ((*((
ximage
)->
f
.
put_pixñ
))((ximage), (
x
), (
y
), (
pixñ
)))

	)

216 
	#XSubImage
(
ximage
, 
x
, 
y
, 
width
, 
height
) \

217 ((*((
ximage
)->
f
.
sub_image
))((ximage), (
x
), (
y
), (
width
), (
height
)))

	)

218 
	#XAddPixñ
(
ximage
, 
vÆue
) \

219 ((*((
ximage
)->
f
.
add_pixñ
))((ximage), (
vÆue
)))

	)

225 
	s_XCompo£Sètus
 {

226 
XPoöãr
 
	mcompo£_±r
;

227 
	mch¨s_m©ched
;

228 } 
	tXCompo£Sètus
;

233 
	#IsKey∑dKey
(
keysym
) \

234 (((
KeySym
)(
keysym
Ë>
XK_KP_S∑˚
Ë&& ((KeySym)(keysymË<
XK_KP_EquÆ
))

	)

236 
	#IsPriv©eKey∑dKey
(
keysym
) \

237 (((
KeySym
)(
keysym
Ë>0x11000000Ë&& ((KeySym)(keysymË<0x1100FFFF))

	)

239 
	#IsCurs‹Key
(
keysym
) \

240 (((
KeySym
)(
keysym
Ë>
XK_Home
Ë&& ((KeySym)(keysymË< 
XK_Sñe˘
))

	)

242 
	#IsPFKey
(
keysym
) \

243 (((
KeySym
)(
keysym
Ë>
XK_KP_F1
Ë&& ((KeySym)(keysymË<
XK_KP_F4
))

	)

245 
	#IsFun˘i⁄Key
(
keysym
) \

246 (((
KeySym
)(
keysym
Ë>
XK_F1
Ë&& ((KeySym)(keysymË<
XK_F35
))

	)

248 
	#IsMiscFun˘i⁄Key
(
keysym
) \

249 (((
KeySym
)(
keysym
Ë>
XK_Sñe˘
Ë&& ((KeySym)(keysymË<
XK_Bªak
))

	)

251 #ifde‡
XK_XKB_KEYS


252 
	#IsModifõrKey
(
keysym
) \

253 ((((
KeySym
)(
keysym
Ë>
XK_Shi·_L
Ë&& ((KeySym)(keysymË<
XK_Hy≥r_R
)) \

254 || (((
KeySym
)(
keysym
Ë>
XK_ISO_Lock
) && \

255 ((
KeySym
)(
keysym
Ë<
XK_ISO_La°_Group_Lock
)) \

256 || ((
KeySym
)(
keysym
Ë=
XK_Mode_swôch
) \

257 || ((
KeySym
)(
keysym
Ë=
XK_Num_Lock
))

	)

259 
	#IsModifõrKey
(
keysym
) \

260 ((((
KeySym
)(
keysym
Ë>
XK_Shi·_L
Ë&& ((KeySym)(keysymË<
XK_Hy≥r_R
)) \

261 || ((
KeySym
)(
keysym
Ë=
XK_Mode_swôch
) \

262 || ((
KeySym
)(
keysym
Ë=
XK_Num_Lock
))

	)

267 
_XRegi⁄
 *
	tRegi⁄
;

271 
	#Re˘™gÀOut
 0

	)

272 
	#Re˘™gÀIn
 1

	)

273 
	#Re˘™gÀP¨t
 2

	)

282 
VisuÆ
 *
	mvisuÆ
;

283 
VisuÆID
 
	mvisuÆid
;

284 
	ms¸ìn
;

285 
	mdïth
;

286 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

287 
	mc_˛ass
;

289 
	m˛ass
;

291 
	mªd_mask
;

292 
	mgªí_mask
;

293 
	mblue_mask
;

294 
	mcﬁ‹m≠_size
;

295 
	mbôs_≥r_rgb
;

296 } 
	tXVisuÆInfo
;

298 
	#VisuÆNoMask
 0x0

	)

299 
	#VisuÆIDMask
 0x1

	)

300 
	#VisuÆS¸ìnMask
 0x2

	)

301 
	#VisuÆDïthMask
 0x4

	)

302 
	#VisuÆCœssMask
 0x8

	)

303 
	#VisuÆRedMaskMask
 0x10

	)

304 
	#VisuÆGªíMaskMask
 0x20

	)

305 
	#VisuÆBlueMaskMask
 0x40

	)

306 
	#VisuÆCﬁ‹m≠SizeMask
 0x80

	)

307 
	#VisuÆBôsPîRGBMask
 0x100

	)

308 
	#VisuÆAŒMask
 0x1FF

	)

315 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

316 
	mªd_max
;

317 
	mªd_mu…
;

318 
	mgªí_max
;

319 
	mgªí_mu…
;

320 
	mblue_max
;

321 
	mblue_mu…
;

322 
	mba£_pixñ
;

323 
VisuÆID
 
	mvisuÆid
;

324 
XID
 
	mkûlid
;

325 } 
	tXSènd¨dCﬁ‹m≠
;

327 
	#Rñó£ByFªeögCﬁ‹m≠
 ((
XID
Ë1LË

	)

333 
	#Bôm≠Suc˚ss
 0

	)

334 
	#Bôm≠O≥nFaûed
 1

	)

335 
	#Bôm≠FûeInvÆid
 2

	)

336 
	#Bôm≠NoMem‹y
 3

	)

347 
	#XCSUCCESS
 0

	)

348 
	#XCNOMEM
 1

	)

349 
	#XCNOENT
 2

	)

351 
	tXC⁄ãxt
;

353 
	#XUniqueC⁄ãxt
(Ë((
XC⁄ãxt
Ë
	`XrmUniqueQu¨k
())

	)

354 
	#XSåögToC⁄ãxt
(
°rög
Ë((
XC⁄ãxt
Ë
	`XrmSåögToQu¨k
(°rög))

	)

356 
_XFUNCPROTOBEGIN


360 
XCœssHöt
 *
XAŒocCœssHöt
 (

364 
XIc⁄Size
 *
XAŒocIc⁄Size
 (

368 
XSizeHöts
 *
XAŒocSizeHöts
 (

372 
XSènd¨dCﬁ‹m≠
 *
XAŒocSènd¨dCﬁ‹m≠
 (

376 
XWMHöts
 *
XAŒocWMHöts
 (

380 
XClùBox
(

381 
Regi⁄
 ,

382 
XRe˘™gÀ
*

385 
Regi⁄
 
XCª©eRegi⁄
(

389 c⁄° *
XDeÁu…Såög
 ();

391 
XDñëeC⁄ãxt
(

392 
Di•œy
* ,

393 
XID
 ,

394 
XC⁄ãxt


397 
XDe°royRegi⁄
(

398 
Regi⁄


401 
XEm±yRegi⁄
(

402 
Regi⁄


405 
XEquÆRegi⁄
(

406 
Regi⁄
 ,

407 
Regi⁄


410 
XFödC⁄ãxt
(

411 
Di•œy
* ,

412 
XID
 ,

413 
XC⁄ãxt
 ,

414 
XPoöãr
*

417 
Sètus
 
XGëCœssHöt
(

418 
Di•œy
* ,

419 
Wödow
 ,

420 
XCœssHöt
*

423 
Sètus
 
XGëIc⁄Sizes
(

424 
Di•œy
* ,

425 
Wödow
 ,

426 
XIc⁄Size
** ,

430 
Sètus
 
XGëN‹mÆHöts
(

431 
Di•œy
* ,

432 
Wödow
 ,

433 
XSizeHöts
*

436 
Sètus
 
XGëRGBCﬁ‹m≠s
(

437 
Di•œy
* ,

438 
Wödow
 ,

439 
XSènd¨dCﬁ‹m≠
** ,

441 
Atom


444 
Sètus
 
XGëSizeHöts
(

445 
Di•œy
* ,

446 
Wödow
 ,

447 
XSizeHöts
* ,

448 
Atom


451 
Sètus
 
XGëSènd¨dCﬁ‹m≠
(

452 
Di•œy
* ,

453 
Wödow
 ,

454 
XSènd¨dCﬁ‹m≠
* ,

455 
Atom


458 
Sètus
 
XGëTextPr›îty
(

459 
Di•œy
* ,

460 
Wödow
 ,

461 
XTextPr›îty
* ,

462 
Atom


465 
XVisuÆInfo
 *
XGëVisuÆInfo
(

466 
Di•œy
* ,

468 
XVisuÆInfo
* ,

472 
Sètus
 
XGëWMClõ¡Machöe
(

473 
Di•œy
* ,

474 
Wödow
 ,

475 
XTextPr›îty
*

478 
XWMHöts
 *
XGëWMHöts
(

479 
Di•œy
* ,

480 
Wödow


483 
Sètus
 
XGëWMIc⁄Name
(

484 
Di•œy
* ,

485 
Wödow
 ,

486 
XTextPr›îty
*

489 
Sètus
 
XGëWMName
(

490 
Di•œy
* ,

491 
Wödow
 ,

492 
XTextPr›îty
*

495 
Sètus
 
XGëWMN‹mÆHöts
(

496 
Di•œy
* ,

497 
Wödow
 ,

498 
XSizeHöts
* ,

502 
Sètus
 
XGëWMSizeHöts
(

503 
Di•œy
* ,

504 
Wödow
 ,

505 
XSizeHöts
* ,

507 
Atom


510 
Sètus
 
XGëZoomHöts
(

511 
Di•œy
* ,

512 
Wödow
 ,

513 
XSizeHöts
*

516 
XI¡î£˘Regi⁄
(

517 
Regi⁄
 ,

518 
Regi⁄
 ,

519 
Regi⁄


522 
XC⁄vîtCa£
(

523 
KeySym
 ,

524 
KeySym
* ,

525 
KeySym
*

528 
XLookupSåög
(

529 
XKeyEvít
* ,

532 
KeySym
* ,

533 
XCompo£Sètus
*

536 
Sètus
 
XM©chVisuÆInfo
(

537 
Di•œy
* ,

541 
XVisuÆInfo
*

544 
XOff£tRegi⁄
(

545 
Regi⁄
 ,

550 
Boﬁ
 
XPoötInRegi⁄
(

551 
Regi⁄
 ,

556 
Regi⁄
 
XPﬁyg⁄Regi⁄
(

557 
XPoöt
* ,

562 
XRe˘InRegi⁄
(

563 
Regi⁄
 ,

570 
XSaveC⁄ãxt
(

571 
Di•œy
* ,

572 
XID
 ,

573 
XC⁄ãxt
 ,

574 
_Xc⁄°
 *

577 
XSëCœssHöt
(

578 
Di•œy
* ,

579 
Wödow
 ,

580 
XCœssHöt
*

583 
XSëIc⁄Sizes
(

584 
Di•œy
* ,

585 
Wödow
 ,

586 
XIc⁄Size
* ,

590 
XSëN‹mÆHöts
(

591 
Di•œy
* ,

592 
Wödow
 ,

593 
XSizeHöts
*

596 
XSëRGBCﬁ‹m≠s
(

597 
Di•œy
* ,

598 
Wödow
 ,

599 
XSènd¨dCﬁ‹m≠
* ,

601 
Atom


604 
XSëSizeHöts
(

605 
Di•œy
* ,

606 
Wödow
 ,

607 
XSizeHöts
* ,

608 
Atom


611 
XSëSènd¨dPr›îtõs
(

612 
Di•œy
* ,

613 
Wödow
 ,

614 
_Xc⁄°
 * ,

615 
_Xc⁄°
 * ,

616 
Pixm≠
 ,

619 
XSizeHöts
*

622 
XSëTextPr›îty
(

623 
Di•œy
* ,

624 
Wödow
 ,

625 
XTextPr›îty
* ,

626 
Atom


629 
XSëWMClõ¡Machöe
(

630 
Di•œy
* ,

631 
Wödow
 ,

632 
XTextPr›îty
*

635 
XSëWMHöts
(

636 
Di•œy
* ,

637 
Wödow
 ,

638 
XWMHöts
*

641 
XSëWMIc⁄Name
(

642 
Di•œy
* ,

643 
Wödow
 ,

644 
XTextPr›îty
*

647 
XSëWMName
(

648 
Di•œy
* ,

649 
Wödow
 ,

650 
XTextPr›îty
*

653 
XSëWMN‹mÆHöts
(

654 
Di•œy
* ,

655 
Wödow
 ,

656 
XSizeHöts
*

659 
XSëWMPr›îtõs
(

660 
Di•œy
* ,

661 
Wödow
 ,

662 
XTextPr›îty
* ,

663 
XTextPr›îty
* ,

666 
XSizeHöts
* ,

667 
XWMHöts
* ,

668 
XCœssHöt
*

671 
XmbSëWMPr›îtõs
(

672 
Di•œy
* ,

673 
Wödow
 ,

674 
_Xc⁄°
 * ,

675 
_Xc⁄°
 * ,

678 
XSizeHöts
* ,

679 
XWMHöts
* ,

680 
XCœssHöt
*

683 
Xutf8SëWMPr›îtõs
(

684 
Di•œy
* ,

685 
Wödow
 ,

686 
_Xc⁄°
 * ,

687 
_Xc⁄°
 * ,

690 
XSizeHöts
* ,

691 
XWMHöts
* ,

692 
XCœssHöt
*

695 
XSëWMSizeHöts
(

696 
Di•œy
* ,

697 
Wödow
 ,

698 
XSizeHöts
* ,

699 
Atom


702 
XSëRegi⁄
(

703 
Di•œy
* ,

704 
GC
 ,

705 
Regi⁄


708 
XSëSènd¨dCﬁ‹m≠
(

709 
Di•œy
* ,

710 
Wödow
 ,

711 
XSènd¨dCﬁ‹m≠
* ,

712 
Atom


715 
XSëZoomHöts
(

716 
Di•œy
* ,

717 
Wödow
 ,

718 
XSizeHöts
*

721 
XShrökRegi⁄
(

722 
Regi⁄
 ,

727 
Sètus
 
XSåögLi°ToTextPr›îty
(

730 
XTextPr›îty
*

733 
XSubåa˘Regi⁄
(

734 
Regi⁄
 ,

735 
Regi⁄
 ,

736 
Regi⁄


739 
XmbTextLi°ToTextPr›îty
(

740 
Di•œy
* 
di•œy
,

741 ** 
li°
,

742 
cou¡
,

743 
XICCEncodögStyÀ
 
°yÀ
,

744 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


747 
XwcTextLi°ToTextPr›îty
(

748 
Di•œy
* 
di•œy
,

749 
wch¨_t
** 
li°
,

750 
cou¡
,

751 
XICCEncodögStyÀ
 
°yÀ
,

752 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


755 
Xutf8TextLi°ToTextPr›îty
(

756 
Di•œy
* 
di•œy
,

757 ** 
li°
,

758 
cou¡
,

759 
XICCEncodögStyÀ
 
°yÀ
,

760 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


763 
XwcFªeSåögLi°
(

764 
wch¨_t
** 
li°


767 
Sètus
 
XTextPr›îtyToSåögLi°
(

768 
XTextPr›îty
* ,

773 
XmbTextPr›îtyToTextLi°
(

774 
Di•œy
* 
di•œy
,

775 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

776 *** 
li°_ªtu∫
,

777 * 
cou¡_ªtu∫


780 
XwcTextPr›îtyToTextLi°
(

781 
Di•œy
* 
di•œy
,

782 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

783 
wch¨_t
*** 
li°_ªtu∫
,

784 * 
cou¡_ªtu∫


787 
Xutf8TextPr›îtyToTextLi°
(

788 
Di•œy
* 
di•œy
,

789 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

790 *** 
li°_ªtu∫
,

791 * 
cou¡_ªtu∫


794 
XUni⁄Re˘WôhRegi⁄
(

795 
XRe˘™gÀ
* ,

796 
Regi⁄
 ,

797 
Regi⁄


800 
XUni⁄Regi⁄
(

801 
Regi⁄
 ,

802 
Regi⁄
 ,

803 
Regi⁄


806 
XWMGeomëry
(

807 
Di•œy
* ,

809 
_Xc⁄°
 * ,

810 
_Xc⁄°
 * ,

812 
XSizeHöts
* ,

820 
XX‹Regi⁄
(

821 
Regi⁄
 ,

822 
Regi⁄
 ,

823 
Regi⁄


826 
	g_XFUNCPROTOEND


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_GNU


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

242 
	#__√ed_size_t


	)

243 
	~<°ddef.h
>

249 #i‚de‡
__USE_FILE_OFFSET64


250 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

251 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

252 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

253 (*
__cmp
Ë(
__c⁄°
 *, __const *))

254 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__REDIRECT


257 
	`__REDIRECT
 (
sˇndú
,

258 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

259 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

260 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

261 (*
__cmp
Ë(
__c⁄°
 *, __const *)),

262 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

264 
	#sˇndú
 
sˇndú64


	)

268 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


271 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

272 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

273 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

274 (*
__cmp
Ë(
__c⁄°
 *, __const *))

275 
	`__n⁄nuŒ
 ((1, 2));

279 #i‚de‡
__USE_FILE_OFFSET64


280 
	$Æphas‹t
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

283 #ifde‡
__REDIRECT


284 
	`__REDIRECT_NTH
 (
Æphas‹t
,

285 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
),

286 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
	#Æphas‹t
 
Æphas‹t64


	)

292 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


293 
	$Æphas‹t64
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__USE_GNU


299 #i‚de‡
__USE_FILE_OFFSET64


300 
	$vîsi⁄s‹t
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

301 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 #ifde‡
__REDIRECT


304 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

305 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
),

306 
vîsi⁄s‹t64
)

307 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

313 #ifde‡
__USE_LARGEFILE64


314 
	$vîsi⁄s‹t64
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

325 
size_t
 
__nbyãs
,

326 
__off_t
 *
__ª°ri˘
 
__ba£p
)

327 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

329 #ifde‡
__REDIRECT


330 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

331 (
__fd
, *
__ª°ri˘
 
__buf
,

332 
size_t
 
__nbyãs
,

333 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

334 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

336 
	#gëdúíåõs
 
gëdúíåõs64


	)

340 #ifde‡
__USE_LARGEFILE64


341 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

342 
size_t
 
__nbyãs
,

343 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

349 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

215 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

216 && 
deföed
 
__va_¨g_∑ck_Àn


217 
	~<bôs/f˙é2.h
>

220 
__END_DECLS


	@/usr/include/gc.h

2 
	~<gc/gc.h
>

	@/usr/include/gpm.h

23 #i‚de‡
_GPM_H_


24 
	#_GPM_H_


	)

28 
	~<∑ths.h
>

30 #ifde‡
__˝lu•lus


36 
	#GPM_XTERM_ON
 \

37 
	`¥ötf
("%c[?1001s",27), 
	`fÊush
(
°dout
), \

38 
	`¥ötf
("%c[?1000h",27), 
	`fÊush
(
°dout
Ë

	)

40 
	#GPM_XTERM_OFF
 \

41 
	`¥ötf
("%c[?1000l",27), 
	`fÊush
(
°dout
), \

42 
	`¥ötf
("%c[?1001r",27), 
	`fÊush
(
°dout
Ë

	)

48 #i‚de‡
_PATH_VARRUN


49 
	#_PATH_VARRUN
 "/v¨/run/"

	)

52 #i‚de‡
_PATH_DEV


53 
	#_PATH_DEV
 "/dev/"

	)

56 
	#GPM_NODE_DIR
 
_PATH_VARRUN


	)

62 
	#GPM_NODE_DIR_MODE
 0775

	)

64 
	#GPM_NODE_PID
 
GPM_NODE_DIR
 "gpm.pid"

	)

65 
	#GPM_NODE_DEV
 
_PATH_DEV
 "gpm˘l"

	)

71 
	#GPM_NODE_CTL
 
GPM_NODE_DEV


	)

72 
	#GPM_NODE_FIFO
 
_PATH_DEV
 "gpmd©a"

	)

76 
	#GPM_B_DOWN
 32

	)

77 
	#GPM_B_UP
 16

	)

78 
	#GPM_B_FOURTH
 8

	)

79 
	#GPM_B_LEFT
 4

	)

80 
	#GPM_B_MIDDLE
 2

	)

81 
	#GPM_B_RIGHT
 1

	)

82 
	#GPM_B_NONE
 0

	)

86 
	eGpm_Ety≥
 {

87 
GPM_MOVE
=1,

88 
GPM_DRAG
=2,

89 
GPM_DOWN
=4,

90 
GPM_UP
= 8,

92 
	#GPM_BARE_EVENTS
(
ty≥
Ë(—y≥)&(0x0f|
GPM_ENTER
|
GPM_LEAVE
))

	)

94 
GPM_SINGLE
=16,

95 
GPM_DOUBLE
=32,

96 
GPM_TRIPLE
=64,

98 
GPM_MFLAG
=128,

99 
GPM_HARD
=256,

102 
GPM_ENTER
=512,

103 
GPM_LEAVE
=1024

106 
	#Gpm_Såi˘SögÀ
(
ty≥
Ë((—y≥)&
GPM_SINGLE
Ë&& !(—y≥)&
GPM_MFLAG
))

	)

107 
	#Gpm_AnySögÀ
(
ty≥
Ë(—y≥)&
GPM_SINGLE
)

	)

108 
	#Gpm_Såi˘DoubÀ
(
ty≥
Ë((—y≥)&
GPM_DOUBLE
Ë&& !(—y≥)&
GPM_MFLAG
))

	)

109 
	#Gpm_AnyDoubÀ
(
ty≥
Ë(—y≥)&
GPM_DOUBLE
)

	)

110 
	#Gpm_Såi˘TrùÀ
(
ty≥
Ë((—y≥)&
GPM_TRIPLE
Ë&& !(—y≥)&
GPM_MFLAG
))

	)

111 
	#Gpm_AnyTrùÀ
(
ty≥
Ë(—y≥)&
GPM_TRIPLE
)

	)

115 
	eGpm_M¨gö
 {
GPM_TOP
=1, 
GPM_BOT
=2, 
GPM_LFT
=4, 
GPM_RGT
=8};

119 
	sGpm_Evít
 {

120 
buâ⁄s
, 
modifõrs
;

121 
vc
;

122 
dx
, 
dy
, 
x
, 
y
;

123 
Gpm_Ety≥
 
ty≥
;

124 
˛icks
;

125 
Gpm_M¨gö
 
m¨gö
;

126 
wdx
, 
wdy
;

127 } 
	tGpm_Evít
;

131 
	tGpm_H™dÀr
(
	tGpm_Evít
 *
	tevít
, *
	t˛õ¡d©a
);

135 
	#GPM_MAGIC
 0x47706D4C

	)

136 
	sGpm_C⁄√˘
 {

137 
evítMask
, 
deÁu…Mask
;

138 
möMod
, 
maxMod
;

139 
pid
;

140 
vc
;

141 } 
	tGpm_C⁄√˘
;

145 
	sGpm_Roi
 {

146 
xMö
,
xMax
;

147 
yMö
,
yMax
;

148 
möMod
, 
maxMod
;

149 
evítMask
;

150 
ow√d
;

151 
Gpm_H™dÀr
 *
h™dÀr
;

152 *
˛õ¡d©a
;

153 
Gpm_Roi
 *
¥ev
;

154 
Gpm_Roi
 *
√xt
;

155 } 
	tGpm_Roi
;

160 
gpm_Êag
, 
gpm_˘lfd
, 
gpm_fd
, 
gpm_hÊag
, 
gpm_m‹ekeys
;

162 
gpm_zîoba£d
;

163 
gpm_visibÀpoöãr
;

164 
gpm_mx
, 
gpm_my
;

165 
timevÆ
 
gpm_timeout
;

167 
_gpm_buf
[];

168 * 
_gpm_¨g
;

170 
Gpm_H™dÀr
 *
gpm_h™dÀr
;

171 *
gpm_d©a
;

173 
Gpm_H™dÀr
 *
gpm_roi_h™dÀr
;

174 *
gpm_roi_d©a
;

176 
Gpm_Roi
 *
gpm_roi
;

177 
Gpm_Roi
 *
gpm_cuºít_roi
;

183 
	~<°dio.h
>

184 
	~<sys/io˘l.h
>

187 
Gpm_O≥n
(
Gpm_C⁄√˘
 *, );

188 
Gpm_Clo£
();

189 
Gpm_GëEvít
(
Gpm_Evít
 *);

190 
Gpm_Ch¨sQueued
();

191 
Gpm_Gëc
(
FILE
 *);

192 
	#Gpm_Gëch¨
(Ë
	`Gpm_Gëc
(
°dö
)

	)

193 
Gpm_Rïót
(
mûli£c
);

194 
Gpm_FôVÆuesM
(*
x
, *
y
, 
m¨gö
);

195 
	#Gpm_FôVÆues
(
x
,
y
Ë
	`Gpm_FôVÆuesM
((x),(y),-1);

	)

196 
	#Gpm_FôEvít
(
ePå
) \

198 
_x
, 
_y
; \

199 i‡((
ePå
)->
m¨gö
 && (”På)->
ty≥
&(
GPM_DRAG
 | 
GPM_UP
))) \

201 
_x
 = (
ePå
)->
x
; \

202 
_y
 = (
ePå
)->
y
; \

203 
	`Gpm_FôVÆuesM
(&
_x
, &
_y
, (
ePå
)->
m¨gö
); \

204 (
ePå
)->
x
 = 
_x
; \

205 (
ePå
)->
y
 = 
_y
; \

208 

	)

212 
	#Gpm_DøwPoöãr
(
x
, 
y
, 
fd
) \

213 (
_gpm_buf
[()-1] = 2, \

214 
_gpm_¨g
[0] = _gpm_arg[2] = \

215 ()(
x
)+
gpm_zîoba£d
, \

216 
_gpm_¨g
[1] = _gpm_arg[3] = \

217 ()(
y
)+
gpm_zîoba£d
, \

218 
_gpm_¨g
[4] = ()3, \

219 
	`io˘l
(
fd
, 
TIOCLINUX
, 
_gpm_buf
+()-1))

	)

222 
gpm_c⁄sﬁefd
;

230 
	#GPM_DRAWPOINTER
(
ePå
) \

231 (
	`Gpm_DøwPoöãr
((
ePå
)->
x
,”På)->
y
,
gpm_c⁄sﬁefd
))

	)

237 
Gpm_H™dÀr
 
	gGpm_H™dÀRoi
;

238 
Gpm_Roi
 *
Gpm_PushRoi
(
x
, 
y
, 
X
, 
Y
, 
mask
,

239 
Gpm_H™dÀr
 *
fun
, *
xåad©a
);

240 
Gpm_Roi
 * 
Gpm_P›Roi
(Gpm_Roò*
which
);

241 
Gpm_Roi
 * 
Gpm_Rai£Roi
(Gpm_Roò*
which
, Gpm_Roò*
bef‹e
);

242 
Gpm_Roi
 * 
Gpm_LowîRoi
(Gpm_Roò*
which
, Gpm_Roò*
a·î
);

248 
Gpm_Wgëch
();

249 
	#Gpm_Gëch
(Ë(
	`Gpm_Wgëch
(
NULL
))

	)

252 *
Gpm_GëLibVîsi⁄
(*
whîe
);

253 *
Gpm_GëSîvîVîsi⁄
(*
whîe
);

254 
Gpm_GëS«pshŸ
(
Gpm_Evít
 *
ePå
);

257 *
Gpm_gë_c⁄sﬁe
( );

258 
Gpm_x_high_y
(
ba£
, 
pŸ_y
);

259 
Gpm_˙t_digôs
(
numbî
);

260 
gpm_o›s
(
löe
, *
fûe
, *
ãxt
, ... );

263 
gpm_ªp‹t
(
löe
, *
fûe
, 
°©
, *
ãxt
, ... );

265 #ifde‡
__˝lu•lus


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/langinfo.h

20 #i‚de‡
_LANGINFO_H


21 
	#_LANGINFO_H
 1

	)

24 
	~<∆_ty≥s.h
>

26 
	~<bôs/loˇÀ.h
>

29 
	g__BEGIN_DECLS


35 
	#_NL_ITEM
(
ˇãg‹y
, 
ödex
Ë(((ˇãg‹yË<< 16Ë| (ödex))

	)

38 
	#_NL_ITEM_CATEGORY
(
ôem
Ë((Ë(ôemË>> 16)

	)

39 
	#_NL_ITEM_INDEX
(
ôem
Ë((Ë(ôemË& 0xffff)

	)

47 
	mABDAY_1
 = 
_NL_ITEM
 (
__LC_TIME
, 0),

48 
	#ABDAY_1
 
ABDAY_1


	)

49 
	mABDAY_2
,

50 
	#ABDAY_2
 
ABDAY_2


	)

51 
	mABDAY_3
,

52 
	#ABDAY_3
 
ABDAY_3


	)

53 
	mABDAY_4
,

54 
	#ABDAY_4
 
ABDAY_4


	)

55 
	mABDAY_5
,

56 
	#ABDAY_5
 
ABDAY_5


	)

57 
	mABDAY_6
,

58 
	#ABDAY_6
 
ABDAY_6


	)

59 
	mABDAY_7
,

60 
	#ABDAY_7
 
ABDAY_7


	)

63 
	mDAY_1
,

64 
	#DAY_1
 
DAY_1


	)

65 
	mDAY_2
,

66 
	#DAY_2
 
DAY_2


	)

67 
	mDAY_3
,

68 
	#DAY_3
 
DAY_3


	)

69 
	mDAY_4
,

70 
	#DAY_4
 
DAY_4


	)

71 
	mDAY_5
,

72 
	#DAY_5
 
DAY_5


	)

73 
	mDAY_6
,

74 
	#DAY_6
 
DAY_6


	)

75 
	mDAY_7
,

76 
	#DAY_7
 
DAY_7


	)

79 
	mABMON_1
,

80 
	#ABMON_1
 
ABMON_1


	)

81 
	mABMON_2
,

82 
	#ABMON_2
 
ABMON_2


	)

83 
	mABMON_3
,

84 
	#ABMON_3
 
ABMON_3


	)

85 
	mABMON_4
,

86 
	#ABMON_4
 
ABMON_4


	)

87 
	mABMON_5
,

88 
	#ABMON_5
 
ABMON_5


	)

89 
	mABMON_6
,

90 
	#ABMON_6
 
ABMON_6


	)

91 
	mABMON_7
,

92 
	#ABMON_7
 
ABMON_7


	)

93 
	mABMON_8
,

94 
	#ABMON_8
 
ABMON_8


	)

95 
	mABMON_9
,

96 
	#ABMON_9
 
ABMON_9


	)

97 
	mABMON_10
,

98 
	#ABMON_10
 
ABMON_10


	)

99 
	mABMON_11
,

100 
	#ABMON_11
 
ABMON_11


	)

101 
	mABMON_12
,

102 
	#ABMON_12
 
ABMON_12


	)

105 
	mMON_1
,

106 
	#MON_1
 
MON_1


	)

107 
	mMON_2
,

108 
	#MON_2
 
MON_2


	)

109 
	mMON_3
,

110 
	#MON_3
 
MON_3


	)

111 
	mMON_4
,

112 
	#MON_4
 
MON_4


	)

113 
	mMON_5
,

114 
	#MON_5
 
MON_5


	)

115 
	mMON_6
,

116 
	#MON_6
 
MON_6


	)

117 
	mMON_7
,

118 
	#MON_7
 
MON_7


	)

119 
	mMON_8
,

120 
	#MON_8
 
MON_8


	)

121 
	mMON_9
,

122 
	#MON_9
 
MON_9


	)

123 
	mMON_10
,

124 
	#MON_10
 
MON_10


	)

125 
	mMON_11
,

126 
	#MON_11
 
MON_11


	)

127 
	mMON_12
,

128 
	#MON_12
 
MON_12


	)

130 
	mAM_STR
,

131 
	#AM_STR
 
AM_STR


	)

132 
	mPM_STR
,

133 
	#PM_STR
 
PM_STR


	)

135 
	mD_T_FMT
,

136 
	#D_T_FMT
 
D_T_FMT


	)

137 
	mD_FMT
,

138 
	#D_FMT
 
D_FMT


	)

139 
	mT_FMT
,

140 
	#T_FMT
 
T_FMT


	)

141 
	mT_FMT_AMPM
,

142 
	#T_FMT_AMPM
 
T_FMT_AMPM


	)

144 
	mERA
,

145 
	#ERA
 
ERA


	)

146 
	m__ERA_YEAR
,

147 #ifde‡
__USE_GNU


148 
	#ERA_YEAR
 
__ERA_YEAR


	)

150 
	mERA_D_FMT
,

151 
	#ERA_D_FMT
 
ERA_D_FMT


	)

152 
	mALT_DIGITS
,

153 
	#ALT_DIGITS
 
ALT_DIGITS


	)

154 
	mERA_D_T_FMT
,

155 
	#ERA_D_T_FMT
 
ERA_D_T_FMT


	)

156 
	mERA_T_FMT
,

157 
	#ERA_T_FMT
 
ERA_T_FMT


	)

159 
	m_NL_TIME_ERA_NUM_ENTRIES
,

160 
	m_NL_TIME_ERA_ENTRIES
,

162 
	m_NL_WABDAY_1
,

163 
	m_NL_WABDAY_2
,

164 
	m_NL_WABDAY_3
,

165 
	m_NL_WABDAY_4
,

166 
	m_NL_WABDAY_5
,

167 
	m_NL_WABDAY_6
,

168 
	m_NL_WABDAY_7
,

171 
	m_NL_WDAY_1
,

172 
	m_NL_WDAY_2
,

173 
	m_NL_WDAY_3
,

174 
	m_NL_WDAY_4
,

175 
	m_NL_WDAY_5
,

176 
	m_NL_WDAY_6
,

177 
	m_NL_WDAY_7
,

180 
	m_NL_WABMON_1
,

181 
	m_NL_WABMON_2
,

182 
	m_NL_WABMON_3
,

183 
	m_NL_WABMON_4
,

184 
	m_NL_WABMON_5
,

185 
	m_NL_WABMON_6
,

186 
	m_NL_WABMON_7
,

187 
	m_NL_WABMON_8
,

188 
	m_NL_WABMON_9
,

189 
	m_NL_WABMON_10
,

190 
	m_NL_WABMON_11
,

191 
	m_NL_WABMON_12
,

194 
	m_NL_WMON_1
,

195 
	m_NL_WMON_2
,

196 
	m_NL_WMON_3
,

197 
	m_NL_WMON_4
,

198 
	m_NL_WMON_5
,

199 
	m_NL_WMON_6
,

200 
	m_NL_WMON_7
,

201 
	m_NL_WMON_8
,

202 
	m_NL_WMON_9
,

203 
	m_NL_WMON_10
,

204 
	m_NL_WMON_11
,

205 
	m_NL_WMON_12
,

207 
	m_NL_WAM_STR
,

208 
	m_NL_WPM_STR
,

210 
	m_NL_WD_T_FMT
,

211 
	m_NL_WD_FMT
,

212 
	m_NL_WT_FMT
,

213 
	m_NL_WT_FMT_AMPM
,

215 
	m_NL_WERA_YEAR
,

216 
	m_NL_WERA_D_FMT
,

217 
	m_NL_WALT_DIGITS
,

218 
	m_NL_WERA_D_T_FMT
,

219 
	m_NL_WERA_T_FMT
,

221 
	m_NL_TIME_WEEK_NDAYS
,

222 
	m_NL_TIME_WEEK_1STDAY
,

223 
	m_NL_TIME_WEEK_1STWEEK
,

224 
	m_NL_TIME_FIRST_WEEKDAY
,

225 
	m_NL_TIME_FIRST_WORKDAY
,

226 
	m_NL_TIME_CAL_DIRECTION
,

227 
	m_NL_TIME_TIMEZONE
,

229 
	m_DATE_FMT
,

230 
	#_DATE_FMT
 
_DATE_FMT


	)

231 
	m_NL_W_DATE_FMT
,

233 
	m_NL_TIME_CODESET
,

235 
	m_NL_NUM_LC_TIME
,

240 
	m_NL_COLLATE_NRULES
 = 
_NL_ITEM
 (
__LC_COLLATE
, 0),

241 
	m_NL_COLLATE_RULESETS
,

242 
	m_NL_COLLATE_TABLEMB
,

243 
	m_NL_COLLATE_WEIGHTMB
,

244 
	m_NL_COLLATE_EXTRAMB
,

245 
	m_NL_COLLATE_INDIRECTMB
,

246 
	m_NL_COLLATE_GAP1
,

247 
	m_NL_COLLATE_GAP2
,

248 
	m_NL_COLLATE_GAP3
,

249 
	m_NL_COLLATE_TABLEWC
,

250 
	m_NL_COLLATE_WEIGHTWC
,

251 
	m_NL_COLLATE_EXTRAWC
,

252 
	m_NL_COLLATE_INDIRECTWC
,

253 
	m_NL_COLLATE_SYMB_HASH_SIZEMB
,

254 
	m_NL_COLLATE_SYMB_TABLEMB
,

255 
	m_NL_COLLATE_SYMB_EXTRAMB
,

256 
	m_NL_COLLATE_COLLSEQMB
,

257 
	m_NL_COLLATE_COLLSEQWC
,

258 
	m_NL_COLLATE_CODESET
,

259 
	m_NL_NUM_LC_COLLATE
,

264 
	m_NL_CTYPE_CLASS
 = 
_NL_ITEM
 (
__LC_CTYPE
, 0),

265 
	m_NL_CTYPE_TOUPPER
,

266 
	m_NL_CTYPE_GAP1
,

267 
	m_NL_CTYPE_TOLOWER
,

268 
	m_NL_CTYPE_GAP2
,

269 
	m_NL_CTYPE_CLASS32
,

270 
	m_NL_CTYPE_GAP3
,

271 
	m_NL_CTYPE_GAP4
,

272 
	m_NL_CTYPE_GAP5
,

273 
	m_NL_CTYPE_GAP6
,

274 
	m_NL_CTYPE_CLASS_NAMES
,

275 
	m_NL_CTYPE_MAP_NAMES
,

276 
	m_NL_CTYPE_WIDTH
,

277 
	m_NL_CTYPE_MB_CUR_MAX
,

278 
	m_NL_CTYPE_CODESET_NAME
,

279 
	mCODESET
 = 
_NL_CTYPE_CODESET_NAME
,

280 
	#CODESET
 
CODESET


	)

281 
	m_NL_CTYPE_TOUPPER32
,

282 
	m_NL_CTYPE_TOLOWER32
,

283 
	m_NL_CTYPE_CLASS_OFFSET
,

284 
	m_NL_CTYPE_MAP_OFFSET
,

285 
	m_NL_CTYPE_INDIGITS_MB_LEN
,

286 
	m_NL_CTYPE_INDIGITS0_MB
,

287 
	m_NL_CTYPE_INDIGITS1_MB
,

288 
	m_NL_CTYPE_INDIGITS2_MB
,

289 
	m_NL_CTYPE_INDIGITS3_MB
,

290 
	m_NL_CTYPE_INDIGITS4_MB
,

291 
	m_NL_CTYPE_INDIGITS5_MB
,

292 
	m_NL_CTYPE_INDIGITS6_MB
,

293 
	m_NL_CTYPE_INDIGITS7_MB
,

294 
	m_NL_CTYPE_INDIGITS8_MB
,

295 
	m_NL_CTYPE_INDIGITS9_MB
,

296 
	m_NL_CTYPE_INDIGITS_WC_LEN
,

297 
	m_NL_CTYPE_INDIGITS0_WC
,

298 
	m_NL_CTYPE_INDIGITS1_WC
,

299 
	m_NL_CTYPE_INDIGITS2_WC
,

300 
	m_NL_CTYPE_INDIGITS3_WC
,

301 
	m_NL_CTYPE_INDIGITS4_WC
,

302 
	m_NL_CTYPE_INDIGITS5_WC
,

303 
	m_NL_CTYPE_INDIGITS6_WC
,

304 
	m_NL_CTYPE_INDIGITS7_WC
,

305 
	m_NL_CTYPE_INDIGITS8_WC
,

306 
	m_NL_CTYPE_INDIGITS9_WC
,

307 
	m_NL_CTYPE_OUTDIGIT0_MB
,

308 
	m_NL_CTYPE_OUTDIGIT1_MB
,

309 
	m_NL_CTYPE_OUTDIGIT2_MB
,

310 
	m_NL_CTYPE_OUTDIGIT3_MB
,

311 
	m_NL_CTYPE_OUTDIGIT4_MB
,

312 
	m_NL_CTYPE_OUTDIGIT5_MB
,

313 
	m_NL_CTYPE_OUTDIGIT6_MB
,

314 
	m_NL_CTYPE_OUTDIGIT7_MB
,

315 
	m_NL_CTYPE_OUTDIGIT8_MB
,

316 
	m_NL_CTYPE_OUTDIGIT9_MB
,

317 
	m_NL_CTYPE_OUTDIGIT0_WC
,

318 
	m_NL_CTYPE_OUTDIGIT1_WC
,

319 
	m_NL_CTYPE_OUTDIGIT2_WC
,

320 
	m_NL_CTYPE_OUTDIGIT3_WC
,

321 
	m_NL_CTYPE_OUTDIGIT4_WC
,

322 
	m_NL_CTYPE_OUTDIGIT5_WC
,

323 
	m_NL_CTYPE_OUTDIGIT6_WC
,

324 
	m_NL_CTYPE_OUTDIGIT7_WC
,

325 
	m_NL_CTYPE_OUTDIGIT8_WC
,

326 
	m_NL_CTYPE_OUTDIGIT9_WC
,

327 
	m_NL_CTYPE_TRANSLIT_TAB_SIZE
,

328 
	m_NL_CTYPE_TRANSLIT_FROM_IDX
,

329 
	m_NL_CTYPE_TRANSLIT_FROM_TBL
,

330 
	m_NL_CTYPE_TRANSLIT_TO_IDX
,

331 
	m_NL_CTYPE_TRANSLIT_TO_TBL
,

332 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN
,

333 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING
,

334 
	m_NL_CTYPE_TRANSLIT_IGNORE_LEN
,

335 
	m_NL_CTYPE_TRANSLIT_IGNORE
,

336 
	m_NL_CTYPE_MAP_TO_NONASCII
,

337 
	m_NL_CTYPE_EXTRA_MAP_1
,

338 
	m_NL_CTYPE_EXTRA_MAP_2
,

339 
	m_NL_CTYPE_EXTRA_MAP_3
,

340 
	m_NL_CTYPE_EXTRA_MAP_4
,

341 
	m_NL_CTYPE_EXTRA_MAP_5
,

342 
	m_NL_CTYPE_EXTRA_MAP_6
,

343 
	m_NL_CTYPE_EXTRA_MAP_7
,

344 
	m_NL_CTYPE_EXTRA_MAP_8
,

345 
	m_NL_CTYPE_EXTRA_MAP_9
,

346 
	m_NL_CTYPE_EXTRA_MAP_10
,

347 
	m_NL_CTYPE_EXTRA_MAP_11
,

348 
	m_NL_CTYPE_EXTRA_MAP_12
,

349 
	m_NL_CTYPE_EXTRA_MAP_13
,

350 
	m_NL_CTYPE_EXTRA_MAP_14
,

351 
	m_NL_NUM_LC_CTYPE
,

356 
	m__INT_CURR_SYMBOL
 = 
_NL_ITEM
 (
__LC_MONETARY
, 0),

357 #ifde‡
__USE_GNU


358 
	#INT_CURR_SYMBOL
 
__INT_CURR_SYMBOL


	)

360 
	m__CURRENCY_SYMBOL
,

361 #ifde‡
__USE_GNU


362 
	#CURRENCY_SYMBOL
 
__CURRENCY_SYMBOL


	)

364 
	m__MON_DECIMAL_POINT
,

365 #ifde‡
__USE_GNU


366 
	#MON_DECIMAL_POINT
 
__MON_DECIMAL_POINT


	)

368 
	m__MON_THOUSANDS_SEP
,

369 #ifde‡
__USE_GNU


370 
	#MON_THOUSANDS_SEP
 
__MON_THOUSANDS_SEP


	)

372 
	m__MON_GROUPING
,

373 #ifde‡
__USE_GNU


374 
	#MON_GROUPING
 
__MON_GROUPING


	)

376 
	m__POSITIVE_SIGN
,

377 #ifde‡
__USE_GNU


378 
	#POSITIVE_SIGN
 
__POSITIVE_SIGN


	)

380 
	m__NEGATIVE_SIGN
,

381 #ifde‡
__USE_GNU


382 
	#NEGATIVE_SIGN
 
__NEGATIVE_SIGN


	)

384 
	m__INT_FRAC_DIGITS
,

385 #ifde‡
__USE_GNU


386 
	#INT_FRAC_DIGITS
 
__INT_FRAC_DIGITS


	)

388 
	m__FRAC_DIGITS
,

389 #ifde‡
__USE_GNU


390 
	#FRAC_DIGITS
 
__FRAC_DIGITS


	)

392 
	m__P_CS_PRECEDES
,

393 #ifde‡
__USE_GNU


394 
	#P_CS_PRECEDES
 
__P_CS_PRECEDES


	)

396 
	m__P_SEP_BY_SPACE
,

397 #ifde‡
__USE_GNU


398 
	#P_SEP_BY_SPACE
 
__P_SEP_BY_SPACE


	)

400 
	m__N_CS_PRECEDES
,

401 #ifde‡
__USE_GNU


402 
	#N_CS_PRECEDES
 
__N_CS_PRECEDES


	)

404 
	m__N_SEP_BY_SPACE
,

405 #ifde‡
__USE_GNU


406 
	#N_SEP_BY_SPACE
 
__N_SEP_BY_SPACE


	)

408 
	m__P_SIGN_POSN
,

409 #ifde‡
__USE_GNU


410 
	#P_SIGN_POSN
 
__P_SIGN_POSN


	)

412 
	m__N_SIGN_POSN
,

413 #ifde‡
__USE_GNU


414 
	#N_SIGN_POSN
 
__N_SIGN_POSN


	)

416 
	m_NL_MONETARY_CRNCYSTR
,

417 
	#CRNCYSTR
 
_NL_MONETARY_CRNCYSTR


	)

418 
	m__INT_P_CS_PRECEDES
,

419 #ifde‡
__USE_GNU


420 
	#INT_P_CS_PRECEDES
 
__INT_P_CS_PRECEDES


	)

422 
	m__INT_P_SEP_BY_SPACE
,

423 #ifde‡
__USE_GNU


424 
	#INT_P_SEP_BY_SPACE
 
__INT_P_SEP_BY_SPACE


	)

426 
	m__INT_N_CS_PRECEDES
,

427 #ifde‡
__USE_GNU


428 
	#INT_N_CS_PRECEDES
 
__INT_N_CS_PRECEDES


	)

430 
	m__INT_N_SEP_BY_SPACE
,

431 #ifde‡
__USE_GNU


432 
	#INT_N_SEP_BY_SPACE
 
__INT_N_SEP_BY_SPACE


	)

434 
	m__INT_P_SIGN_POSN
,

435 #ifde‡
__USE_GNU


436 
	#INT_P_SIGN_POSN
 
__INT_P_SIGN_POSN


	)

438 
	m__INT_N_SIGN_POSN
,

439 #ifde‡
__USE_GNU


440 
	#INT_N_SIGN_POSN
 
__INT_N_SIGN_POSN


	)

442 
	m_NL_MONETARY_DUO_INT_CURR_SYMBOL
,

443 
	m_NL_MONETARY_DUO_CURRENCY_SYMBOL
,

444 
	m_NL_MONETARY_DUO_INT_FRAC_DIGITS
,

445 
	m_NL_MONETARY_DUO_FRAC_DIGITS
,

446 
	m_NL_MONETARY_DUO_P_CS_PRECEDES
,

447 
	m_NL_MONETARY_DUO_P_SEP_BY_SPACE
,

448 
	m_NL_MONETARY_DUO_N_CS_PRECEDES
,

449 
	m_NL_MONETARY_DUO_N_SEP_BY_SPACE
,

450 
	m_NL_MONETARY_DUO_INT_P_CS_PRECEDES
,

451 
	m_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE
,

452 
	m_NL_MONETARY_DUO_INT_N_CS_PRECEDES
,

453 
	m_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE
,

454 
	m_NL_MONETARY_DUO_P_SIGN_POSN
,

455 
	m_NL_MONETARY_DUO_N_SIGN_POSN
,

456 
	m_NL_MONETARY_DUO_INT_P_SIGN_POSN
,

457 
	m_NL_MONETARY_DUO_INT_N_SIGN_POSN
,

458 
	m_NL_MONETARY_UNO_VALID_FROM
,

459 
	m_NL_MONETARY_UNO_VALID_TO
,

460 
	m_NL_MONETARY_DUO_VALID_FROM
,

461 
	m_NL_MONETARY_DUO_VALID_TO
,

462 
	m_NL_MONETARY_CONVERSION_RATE
,

463 
	m_NL_MONETARY_DECIMAL_POINT_WC
,

464 
	m_NL_MONETARY_THOUSANDS_SEP_WC
,

465 
	m_NL_MONETARY_CODESET
,

466 
	m_NL_NUM_LC_MONETARY
,

470 
	m__DECIMAL_POINT
 = 
_NL_ITEM
 (
__LC_NUMERIC
, 0),

471 #ifde‡
__USE_GNU


472 
	#DECIMAL_POINT
 
__DECIMAL_POINT


	)

474 
	mRADIXCHAR
 = 
__DECIMAL_POINT
,

475 
	#RADIXCHAR
 
RADIXCHAR


	)

476 
	m__THOUSANDS_SEP
,

477 #ifde‡
__USE_GNU


478 
	#THOUSANDS_SEP
 
__THOUSANDS_SEP


	)

480 
	mTHOUSEP
 = 
__THOUSANDS_SEP
,

481 
	#THOUSEP
 
THOUSEP


	)

482 
	m__GROUPING
,

483 #ifde‡
__USE_GNU


484 
	#GROUPING
 
__GROUPING


	)

486 
	m_NL_NUMERIC_DECIMAL_POINT_WC
,

487 
	m_NL_NUMERIC_THOUSANDS_SEP_WC
,

488 
	m_NL_NUMERIC_CODESET
,

489 
	m_NL_NUM_LC_NUMERIC
,

491 
	m__YESEXPR
 = 
_NL_ITEM
 (
__LC_MESSAGES
, 0),

492 
	#YESEXPR
 
__YESEXPR


	)

493 
	m__NOEXPR
,

494 
	#NOEXPR
 
__NOEXPR


	)

495 
	m__YESSTR
,

496 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

497 
	#YESSTR
 
__YESSTR


	)

499 
	m__NOSTR
,

500 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

501 
	#NOSTR
 
__NOSTR


	)

503 
	m_NL_MESSAGES_CODESET
,

504 
	m_NL_NUM_LC_MESSAGES
,

506 
	m_NL_PAPER_HEIGHT
 = 
_NL_ITEM
 (
__LC_PAPER
, 0),

507 
	m_NL_PAPER_WIDTH
,

508 
	m_NL_PAPER_CODESET
,

509 
	m_NL_NUM_LC_PAPER
,

511 
	m_NL_NAME_NAME_FMT
 = 
_NL_ITEM
 (
__LC_NAME
, 0),

512 
	m_NL_NAME_NAME_GEN
,

513 
	m_NL_NAME_NAME_MR
,

514 
	m_NL_NAME_NAME_MRS
,

515 
	m_NL_NAME_NAME_MISS
,

516 
	m_NL_NAME_NAME_MS
,

517 
	m_NL_NAME_CODESET
,

518 
	m_NL_NUM_LC_NAME
,

520 
	m_NL_ADDRESS_POSTAL_FMT
 = 
_NL_ITEM
 (
__LC_ADDRESS
, 0),

521 
	m_NL_ADDRESS_COUNTRY_NAME
,

522 
	m_NL_ADDRESS_COUNTRY_POST
,

523 
	m_NL_ADDRESS_COUNTRY_AB2
,

524 
	m_NL_ADDRESS_COUNTRY_AB3
,

525 
	m_NL_ADDRESS_COUNTRY_CAR
,

526 
	m_NL_ADDRESS_COUNTRY_NUM
,

527 
	m_NL_ADDRESS_COUNTRY_ISBN
,

528 
	m_NL_ADDRESS_LANG_NAME
,

529 
	m_NL_ADDRESS_LANG_AB
,

530 
	m_NL_ADDRESS_LANG_TERM
,

531 
	m_NL_ADDRESS_LANG_LIB
,

532 
	m_NL_ADDRESS_CODESET
,

533 
	m_NL_NUM_LC_ADDRESS
,

535 
	m_NL_TELEPHONE_TEL_INT_FMT
 = 
_NL_ITEM
 (
__LC_TELEPHONE
, 0),

536 
	m_NL_TELEPHONE_TEL_DOM_FMT
,

537 
	m_NL_TELEPHONE_INT_SELECT
,

538 
	m_NL_TELEPHONE_INT_PREFIX
,

539 
	m_NL_TELEPHONE_CODESET
,

540 
	m_NL_NUM_LC_TELEPHONE
,

542 
	m_NL_MEASUREMENT_MEASUREMENT
 = 
_NL_ITEM
 (
__LC_MEASUREMENT
, 0),

543 
	m_NL_MEASUREMENT_CODESET
,

544 
	m_NL_NUM_LC_MEASUREMENT
,

546 
	m_NL_IDENTIFICATION_TITLE
 = 
_NL_ITEM
 (
__LC_IDENTIFICATION
, 0),

547 
	m_NL_IDENTIFICATION_SOURCE
,

548 
	m_NL_IDENTIFICATION_ADDRESS
,

549 
	m_NL_IDENTIFICATION_CONTACT
,

550 
	m_NL_IDENTIFICATION_EMAIL
,

551 
	m_NL_IDENTIFICATION_TEL
,

552 
	m_NL_IDENTIFICATION_FAX
,

553 
	m_NL_IDENTIFICATION_LANGUAGE
,

554 
	m_NL_IDENTIFICATION_TERRITORY
,

555 
	m_NL_IDENTIFICATION_AUDIENCE
,

556 
	m_NL_IDENTIFICATION_APPLICATION
,

557 
	m_NL_IDENTIFICATION_ABBREVIATION
,

558 
	m_NL_IDENTIFICATION_REVISION
,

559 
	m_NL_IDENTIFICATION_DATE
,

560 
	m_NL_IDENTIFICATION_CATEGORY
,

561 
	m_NL_IDENTIFICATION_CODESET
,

562 
	m_NL_NUM_LC_IDENTIFICATION
,

565 
	m_NL_NUM


570 
	#_NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_ITEM
 ((ˇãg‹y), -1)

	)

571 #ifde‡
__USE_GNU


572 
	#NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_LOCALE_NAME
 (ˇãg‹y)

	)

582 *
	$∆_œngöfo
 (
∆_ôem
 
__ôem
Ë
__THROW
;

585 #ifdef 
__USE_GNU


590 
	~<xloˇÀ.h
>

593 *
	`∆_œngöfo_l
 (
∆_ôem
 
__ôem
, 
__loˇÀ_t
 
l
);

596 
__END_DECLS


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1) __attribute_format_arg__ (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2) __attribute_format_arg__ (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2) __attribute_format_arg__ (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/fb.h

1 #i‚de‡
_LINUX_FB_H


2 
	#_LINUX_FB_H


	)

4 
	~<asm/ty≥s.h
>

5 
	~<löux/i2c.h
>

7 
	gdíåy
;

11 
	#FB_MAJOR
 29

	)

12 
	#FB_MAX
 32

	)

16 
	#FBIOGET_VSCREENINFO
 0x4600

	)

17 
	#FBIOPUT_VSCREENINFO
 0x4601

	)

18 
	#FBIOGET_FSCREENINFO
 0x4602

	)

19 
	#FBIOGETCMAP
 0x4604

	)

20 
	#FBIOPUTCMAP
 0x4605

	)

21 
	#FBIOPAN_DISPLAY
 0x4606

	)

22 
	#FBIO_CURSOR
 
	`_IOWR
('F', 0x08, 
fb_curs‹
)

	)

27 
	#FBIOGET_CON2FBMAP
 0x460F

	)

28 
	#FBIOPUT_CON2FBMAP
 0x4610

	)

29 
	#FBIOBLANK
 0x4611

	)

30 
	#FBIOGET_VBLANK
 
	`_IOR
('F', 0x12, 
fb_vbœnk
)

	)

31 
	#FBIO_ALLOC
 0x4613

	)

32 
	#FBIO_FREE
 0x4614

	)

33 
	#FBIOGET_GLYPH
 0x4615

	)

34 
	#FBIOGET_HWCINFO
 0x4616

	)

35 
	#FBIOPUT_MODEINFO
 0x4617

	)

36 
	#FBIOGET_DISPINFO
 0x4618

	)

39 
	#FB_TYPE_PACKED_PIXELS
 0

	)

40 
	#FB_TYPE_PLANES
 1

	)

41 
	#FB_TYPE_INTERLEAVED_PLANES
 2

	)

42 
	#FB_TYPE_TEXT
 3

	)

43 
	#FB_TYPE_VGA_PLANES
 4

	)

45 
	#FB_AUX_TEXT_MDA
 0

	)

46 
	#FB_AUX_TEXT_CGA
 1

	)

47 
	#FB_AUX_TEXT_S3_MMIO
 2

	)

48 
	#FB_AUX_TEXT_MGA_STEP16
 3

	)

49 
	#FB_AUX_TEXT_MGA_STEP8
 4

	)

50 
	#FB_AUX_TEXT_SVGA_GROUP
 8

	)

51 
	#FB_AUX_TEXT_SVGA_MASK
 7

	)

52 
	#FB_AUX_TEXT_SVGA_STEP2
 8

	)

53 
	#FB_AUX_TEXT_SVGA_STEP4
 9

	)

54 
	#FB_AUX_TEXT_SVGA_STEP8
 10

	)

55 
	#FB_AUX_TEXT_SVGA_STEP16
 11

	)

56 
	#FB_AUX_TEXT_SVGA_LAST
 15

	)

58 
	#FB_AUX_VGA_PLANES_VGA4
 0

	)

59 
	#FB_AUX_VGA_PLANES_CFB4
 1

	)

60 
	#FB_AUX_VGA_PLANES_CFB8
 2

	)

62 
	#FB_VISUAL_MONO01
 0

	)

63 
	#FB_VISUAL_MONO10
 1

	)

64 
	#FB_VISUAL_TRUECOLOR
 2

	)

65 
	#FB_VISUAL_PSEUDOCOLOR
 3

	)

66 
	#FB_VISUAL_DIRECTCOLOR
 4

	)

67 
	#FB_VISUAL_STATIC_PSEUDOCOLOR
 5

	)

69 
	#FB_ACCEL_NONE
 0

	)

70 
	#FB_ACCEL_ATARIBLITT
 1

	)

71 
	#FB_ACCEL_AMIGABLITT
 2

	)

72 
	#FB_ACCEL_S3_TRIO64
 3

	)

73 
	#FB_ACCEL_NCR_77C32BLT
 4

	)

74 
	#FB_ACCEL_S3_VIRGE
 5

	)

75 
	#FB_ACCEL_ATI_MACH64GX
 6

	)

76 
	#FB_ACCEL_DEC_TGA
 7

	)

77 
	#FB_ACCEL_ATI_MACH64CT
 8

	)

78 
	#FB_ACCEL_ATI_MACH64VT
 9

	)

79 
	#FB_ACCEL_ATI_MACH64GT
 10

	)

80 
	#FB_ACCEL_SUN_CREATOR
 11

	)

81 
	#FB_ACCEL_SUN_CGSIX
 12

	)

82 
	#FB_ACCEL_SUN_LEO
 13

	)

83 
	#FB_ACCEL_IMS_TWINTURBO
 14

	)

84 
	#FB_ACCEL_3DLABS_PERMEDIA2
 15

	)

85 
	#FB_ACCEL_MATROX_MGA2064W
 16

	)

86 
	#FB_ACCEL_MATROX_MGA1064SG
 17

	)

87 
	#FB_ACCEL_MATROX_MGA2164W
 18

	)

88 
	#FB_ACCEL_MATROX_MGA2164W_AGP
 19

	)

89 
	#FB_ACCEL_MATROX_MGAG100
 20

	)

90 
	#FB_ACCEL_MATROX_MGAG200
 21

	)

91 
	#FB_ACCEL_SUN_CG14
 22

	)

92 
	#FB_ACCEL_SUN_BWTWO
 23

	)

93 
	#FB_ACCEL_SUN_CGTHREE
 24

	)

94 
	#FB_ACCEL_SUN_TCX
 25

	)

95 
	#FB_ACCEL_MATROX_MGAG400
 26

	)

96 
	#FB_ACCEL_NV3
 27

	)

97 
	#FB_ACCEL_NV4
 28

	)

98 
	#FB_ACCEL_NV5
 29

	)

99 
	#FB_ACCEL_CT_6555x
 30

	)

100 
	#FB_ACCEL_3DFX_BANSHEE
 31

	)

101 
	#FB_ACCEL_ATI_RAGE128
 32

	)

102 
	#FB_ACCEL_IGS_CYBER2000
 33

	)

103 
	#FB_ACCEL_IGS_CYBER2010
 34

	)

104 
	#FB_ACCEL_IGS_CYBER5000
 35

	)

105 
	#FB_ACCEL_SIS_GLAMOUR
 36

	)

106 
	#FB_ACCEL_3DLABS_PERMEDIA3
 37

	)

107 
	#FB_ACCEL_ATI_RADEON
 38

	)

108 
	#FB_ACCEL_I810
 39

	)

109 
	#FB_ACCEL_SIS_GLAMOUR_2
 40

	)

110 
	#FB_ACCEL_SIS_XABRE
 41

	)

111 
	#FB_ACCEL_I830
 42

	)

112 
	#FB_ACCEL_NV_10
 43

	)

113 
	#FB_ACCEL_NV_20
 44

	)

114 
	#FB_ACCEL_NV_30
 45

	)

115 
	#FB_ACCEL_NV_40
 46

	)

116 
	#FB_ACCEL_XGI_VOLARI_V
 47

	)

117 
	#FB_ACCEL_XGI_VOLARI_Z
 48

	)

118 
	#FB_ACCEL_OMAP1610
 49

	)

119 
	#FB_ACCEL_NEOMAGIC_NM2070
 90

	)

120 
	#FB_ACCEL_NEOMAGIC_NM2090
 91

	)

121 
	#FB_ACCEL_NEOMAGIC_NM2093
 92

	)

122 
	#FB_ACCEL_NEOMAGIC_NM2097
 93

	)

123 
	#FB_ACCEL_NEOMAGIC_NM2160
 94

	)

124 
	#FB_ACCEL_NEOMAGIC_NM2200
 95

	)

125 
	#FB_ACCEL_NEOMAGIC_NM2230
 96

	)

126 
	#FB_ACCEL_NEOMAGIC_NM2360
 97

	)

127 
	#FB_ACCEL_NEOMAGIC_NM2380
 98

	)

129 
	#FB_ACCEL_SAVAGE4
 0x80

	)

130 
	#FB_ACCEL_SAVAGE3D
 0x81

	)

131 
	#FB_ACCEL_SAVAGE3D_MV
 0x82

	)

132 
	#FB_ACCEL_SAVAGE2000
 0x83

	)

133 
	#FB_ACCEL_SAVAGE_MX_MV
 0x84

	)

134 
	#FB_ACCEL_SAVAGE_MX
 0x85

	)

135 
	#FB_ACCEL_SAVAGE_IX_MV
 0x86

	)

136 
	#FB_ACCEL_SAVAGE_IX
 0x87

	)

137 
	#FB_ACCEL_PROSAVAGE_PM
 0x88

	)

138 
	#FB_ACCEL_PROSAVAGE_KM
 0x89

	)

139 
	#FB_ACCEL_S3TWISTER_P
 0x8®

	)

140 
	#FB_ACCEL_S3TWISTER_K
 0x8b

	)

141 
	#FB_ACCEL_SUPERSAVAGE
 0x8¯

	)

142 
	#FB_ACCEL_PROSAVAGE_DDR
 0x8d

	)

143 
	#FB_ACCEL_PROSAVAGE_DDRK
 0x8ê

	)

145 
	sfb_fix_s¸ìnöfo
 {

146 
	mid
[16];

147 
	msmem_°¨t
;

149 
__u32
 
	msmem_Àn
;

150 
__u32
 
	mty≥
;

151 
__u32
 
	mty≥_aux
;

152 
__u32
 
	mvisuÆ
;

153 
__u16
 
	mx∑n°ï
;

154 
__u16
 
	my∑n°ï
;

155 
__u16
 
	mywøp°ï
;

156 
__u32
 
	mlöe_Àngth
;

157 
	mmmio_°¨t
;

159 
__u32
 
	mmmio_Àn
;

160 
__u32
 
	mac˚l
;

162 
__u16
 
	mª£rved
[3];

171 
	sfb_bôfõld
 {

172 
__u32
 
	moff£t
;

173 
__u32
 
	mÀngth
;

174 
__u32
 
	mmsb_right
;

178 
	#FB_NONSTD_HAM
 1

	)

179 
	#FB_NONSTD_REV_PIX_IN_B
 2

	)

181 
	#FB_ACTIVATE_NOW
 0

	)

182 
	#FB_ACTIVATE_NXTOPEN
 1

	)

183 
	#FB_ACTIVATE_TEST
 2

	)

184 
	#FB_ACTIVATE_MASK
 15

	)

186 
	#FB_ACTIVATE_VBL
 16

	)

187 
	#FB_CHANGE_CMAP_VBL
 32

	)

188 
	#FB_ACTIVATE_ALL
 64

	)

189 
	#FB_ACTIVATE_FORCE
 128

	)

190 
	#FB_ACTIVATE_INV_MODE
 256

	)

192 
	#FB_ACCELF_TEXT
 1

	)

194 
	#FB_SYNC_HOR_HIGH_ACT
 1

	)

195 
	#FB_SYNC_VERT_HIGH_ACT
 2

	)

196 
	#FB_SYNC_EXT
 4

	)

197 
	#FB_SYNC_COMP_HIGH_ACT
 8

	)

198 
	#FB_SYNC_BROADCAST
 16

	)

201 
	#FB_SYNC_ON_GREEN
 32

	)

203 
	#FB_VMODE_NONINTERLACED
 0

	)

204 
	#FB_VMODE_INTERLACED
 1

	)

205 
	#FB_VMODE_DOUBLE
 2

	)

206 
	#FB_VMODE_ODD_FLD_FIRST
 4

	)

207 
	#FB_VMODE_MASK
 255

	)

209 
	#FB_VMODE_YWRAP
 256

	)

210 
	#FB_VMODE_SMOOTH_XPAN
 512

	)

211 
	#FB_VMODE_CONUPDATE
 512

	)

216 
	#FB_ROTATE_UR
 0

	)

217 
	#FB_ROTATE_CW
 1

	)

218 
	#FB_ROTATE_UD
 2

	)

219 
	#FB_ROTATE_CCW
 3

	)

221 
	#PICOS2KHZ
(
a
Ë(1000000000UL/◊))

	)

222 
	#KHZ2PICOS
(
a
Ë(1000000000UL/◊))

	)

224 
	sfb_v¨_s¸ìnöfo
 {

225 
__u32
 
	mxªs
;

226 
__u32
 
	myªs
;

227 
__u32
 
	mxªs_vútuÆ
;

228 
__u32
 
	myªs_vútuÆ
;

229 
__u32
 
	mxoff£t
;

230 
__u32
 
	myoff£t
;

232 
__u32
 
	mbôs_≥r_pixñ
;

233 
__u32
 
	mgøysˇÀ
;

235 
fb_bôfõld
 
	mªd
;

236 
fb_bôfõld
 
	mgªí
;

237 
fb_bôfõld
 
	mblue
;

238 
fb_bôfõld
 
	må™•
;

240 
__u32
 
	mn⁄°d
;

242 
__u32
 
	ma˘iv©e
;

244 
__u32
 
	mheight
;

245 
__u32
 
	mwidth
;

247 
__u32
 
	mac˚l_Êags
;

250 
__u32
 
	mpix˛ock
;

251 
__u32
 
	mÀ·_m¨gö
;

252 
__u32
 
	mright_m¨gö
;

253 
__u32
 
	muµî_m¨gö
;

254 
__u32
 
	mlowî_m¨gö
;

255 
__u32
 
	mhsync_Àn
;

256 
__u32
 
	mvsync_Àn
;

257 
__u32
 
	msync
;

258 
__u32
 
	mvmode
;

259 
__u32
 
	mrŸ©e
;

260 
__u32
 
	mª£rved
[5];

263 
	sfb_cm≠
 {

264 
__u32
 
	m°¨t
;

265 
__u32
 
	mÀn
;

266 
__u16
 *
	mªd
;

267 
__u16
 *
	mgªí
;

268 
__u16
 *
	mblue
;

269 
__u16
 *
	må™•
;

272 
	sfb_c⁄2fbm≠
 {

273 
__u32
 
	mc⁄sﬁe
;

274 
__u32
 
	m‰amebuf„r
;

278 
	#VESA_NO_BLANKING
 0

	)

279 
	#VESA_VSYNC_SUSPEND
 1

	)

280 
	#VESA_HSYNC_SUSPEND
 2

	)

281 
	#VESA_POWERDOWN
 3

	)

286 
	mFB_BLANK_UNBLANK
 = 
VESA_NO_BLANKING
,

289 
	mFB_BLANK_NORMAL
 = 
VESA_NO_BLANKING
 + 1,

292 
	mFB_BLANK_VSYNC_SUSPEND
 = 
VESA_VSYNC_SUSPEND
 + 1,

295 
	mFB_BLANK_HSYNC_SUSPEND
 = 
VESA_HSYNC_SUSPEND
 + 1,

298 
	mFB_BLANK_POWERDOWN
 = 
VESA_POWERDOWN
 + 1

301 
	#FB_VBLANK_VBLANKING
 0x001

	)

302 
	#FB_VBLANK_HBLANKING
 0x002

	)

303 
	#FB_VBLANK_HAVE_VBLANK
 0x004

	)

304 
	#FB_VBLANK_HAVE_HBLANK
 0x008

	)

305 
	#FB_VBLANK_HAVE_COUNT
 0x010

	)

306 
	#FB_VBLANK_HAVE_VCOUNT
 0x020

	)

307 
	#FB_VBLANK_HAVE_HCOUNT
 0x040

	)

308 
	#FB_VBLANK_VSYNCING
 0x080

	)

309 
	#FB_VBLANK_HAVE_VSYNC
 0x100

	)

311 
	sfb_vbœnk
 {

312 
__u32
 
	mÊags
;

313 
__u32
 
	mcou¡
;

314 
__u32
 
	mvcou¡
;

315 
__u32
 
	mhcou¡
;

316 
__u32
 
	mª£rved
[4];

320 
	#ROP_COPY
 0

	)

321 
	#ROP_XOR
 1

	)

323 
	sfb_c›y¨ó
 {

324 
__u32
 
	mdx
;

325 
__u32
 
	mdy
;

326 
__u32
 
	mwidth
;

327 
__u32
 
	mheight
;

328 
__u32
 
	msx
;

329 
__u32
 
	msy
;

332 
	sfb_fûÃe˘
 {

333 
__u32
 
	mdx
;

334 
__u32
 
	mdy
;

335 
__u32
 
	mwidth
;

336 
__u32
 
	mheight
;

337 
__u32
 
	mcﬁ‹
;

338 
__u32
 
	mr›
;

341 
	sfb_image
 {

342 
__u32
 
	mdx
;

343 
__u32
 
	mdy
;

344 
__u32
 
	mwidth
;

345 
__u32
 
	mheight
;

346 
__u32
 
	mfg_cﬁ‹
;

347 
__u32
 
	mbg_cﬁ‹
;

348 
__u8
 
	mdïth
;

349 c⁄° *
	md©a
;

350 
fb_cm≠
 
	mcm≠
;

357 
	#FB_CUR_SETIMAGE
 0x01

	)

358 
	#FB_CUR_SETPOS
 0x02

	)

359 
	#FB_CUR_SETHOT
 0x04

	)

360 
	#FB_CUR_SETCMAP
 0x08

	)

361 
	#FB_CUR_SETSHAPE
 0x10

	)

362 
	#FB_CUR_SETSIZE
 0x20

	)

363 
	#FB_CUR_SETALL
 0xFF

	)

365 
	sfbcuΩos
 {

366 
__u16
 
	mx
, 
	my
;

369 
	sfb_curs‹
 {

370 
__u16
 
	m£t
;

371 
__u16
 
	míabÀ
;

372 
__u16
 
	mr›
;

373 c⁄° *
	mmask
;

374 
fbcuΩos
 
	mhŸ
;

375 
fb_image
 
	mimage
;

378 #ifde‡
CONFIG_FB_BACKLIGHT


380 
	#FB_BACKLIGHT_LEVELS
 128

	)

381 
	#FB_BACKLIGHT_MAX
 0xFF

	)

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_GNU


146 
	~<xloˇÀ.h
>

148 
__loˇÀ_t
 
	tloˇÀ_t
;

154 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

155 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

161 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

162 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

163 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

164 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

165 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

166 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

167 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

168 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

169 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

170 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

171 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

172 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

173 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

174 | 
LC_NUMERIC_MASK
 \

175 | 
LC_TIME_MASK
 \

176 | 
LC_COLLATE_MASK
 \

177 | 
LC_MONETARY_MASK
 \

178 | 
LC_MESSAGES_MASK
 \

179 | 
LC_PAPER_MASK
 \

180 | 
LC_NAME_MASK
 \

181 | 
LC_ADDRESS_MASK
 \

182 | 
LC_TELEPHONE_MASK
 \

183 | 
LC_MEASUREMENT_MASK
 \

184 | 
LC_IDENTIFICATION_MASK
 \

185 )

	)

189 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

193 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

200 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

204 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

208 
__END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	#__mÆloc_±r_t
 *

	)

29 
	#__mÆloc_size_t
 
size_t


	)

30 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

32 #ifde‡
__GNUC__


34 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

37 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

41 
	#__MALLOC_P
(
¨gs
Ë
	)
args

42 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

47 
__BEGIN_DECLS


50 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

53 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

54 
__©åibuã_mÆloc__
 
__wur
;

61 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

62 
__©åibuã_w¨n_unu£d_ªsu…__
;

65 
‰ì
 
__MALLOC_P
 ((*
__±r
));

68 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

71 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

72 
__©åibuã_mÆloc__
 
__wur
;

75 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

76 
__©åibuã_mÆloc__
 
__wur
;

80 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

81 
__©åibuã_mÆloc__
 
__wur
;

85 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

88 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

89 
__©åibuã_mÆloc__
;

93 
	smÆlöfo
 {

94 
	m¨ía
;

95 
	m‹dblks
;

96 
	msmblks
;

97 
	mhblks
;

98 
	mhblkhd
;

99 
	musmblks
;

100 
	mfsmblks
;

101 
	mu‹dblks
;

102 
	mf‹dblks
;

103 
	mkìpco°
;

107 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

110 #i‚de‡
M_MXFAST


111 
	#M_MXFAST
 1

	)

113 #i‚de‡
M_NLBLKS


114 
	#M_NLBLKS
 2

	)

116 #i‚de‡
M_GRAIN


117 
	#M_GRAIN
 3

	)

119 #i‚de‡
M_KEEP


120 
	#M_KEEP
 4

	)

124 
	#M_TRIM_THRESHOLD
 -1

	)

125 
	#M_TOP_PAD
 -2

	)

126 
	#M_MMAP_THRESHOLD
 -3

	)

127 
	#M_MMAP_MAX
 -4

	)

128 
	#M_CHECK_ACTION
 -5

	)

129 
	#M_PERTURB
 -6

	)

132 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

136 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

140 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

143 
mÆloc_°©s
 
__MALLOC_P
 (());

146 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

150 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

155 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

157 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

158 
__c⁄°
 
__mÆloc_±r_t
));

159 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

160 
__c⁄°
 
__mÆloc_±r_t
));

161 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

162 
__c⁄°
 
__mÆloc_±r_t
));

163 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

164 
size_t
 
__size
,

165 
__c⁄°
 
__mÆloc_±r_t
));

166 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

169 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

172 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

282 #ifdef 
__USE_MISC


286 
_IEEE_
 = -1,

287 
_SVID_
,

288 
_XOPEN_
,

289 
_POSIX_
,

290 
_ISOC_


291 } 
	t_LIB_VERSION_TYPE
;

296 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

300 #ifde‡
__USE_SVID


306 #ifde‡
__˝lu•lus


307 
__ex˚±i⁄


309 
ex˚±i⁄


312 
ty≥
;

313 *
«me
;

314 
¨g1
;

315 
¨g2
;

316 
ªtvÆ
;

317 
	}
};

319 #ifde‡
__˝lu•lus


320 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

322 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

325 
	#X_TLOSS
 1.41484755040568800000e+16

	)

328 
	#DOMAIN
 1

	)

329 
	#SING
 2

	)

330 
	#OVERFLOW
 3

	)

331 
	#UNDERFLOW
 4

	)

332 
	#TLOSS
 5

	)

333 
	#PLOSS
 6

	)

336 
	#HUGE
 3.40282347e+38F

	)

340 #ifde‡
__USE_XOPEN


342 
	#MAXFLOAT
 3.40282347e+38F

	)

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


350 
	#M_E
 2.7182818284590452354

	)

351 
	#M_LOG2E
 1.4426950408889634074

	)

352 
	#M_LOG10E
 0.43429448190325182765

	)

353 
	#M_LN2
 0.69314718055994530942

	)

354 
	#M_LN10
 2.30258509299404568402

	)

355 
	#M_PI
 3.14159265358979323846

	)

356 
	#M_PI_2
 1.57079632679489661923

	)

357 
	#M_PI_4
 0.78539816339744830962

	)

358 
	#M_1_PI
 0.31830988618379067154

	)

359 
	#M_2_PI
 0.63661977236758134308

	)

360 
	#M_2_SQRTPI
 1.12837916709551257390

	)

361 
	#M_SQRT2
 1.41421356237309504880

	)

362 
	#M_SQRT1_2
 0.70710678118654752440

	)

368 #ifde‡
__USE_GNU


369 
	#M_El
 2.7182818284590452353602874713526625L

	)

370 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

371 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

372 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

373 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

374 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

375 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

376 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

377 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

378 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

379 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

380 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

381 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

388 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


389 
	#__NO_MATH_INLINES
 1

	)

392 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

399 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

400 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

401 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

402 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

403 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

404 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

408 #ifde‡
__USE_EXTERN_INLINES


409 
	~<bôs/m©hölöe.h
>

412 #ifde‡
__USE_ISOC99


416 #i‚de‡
isgª©î


417 
	#isgª©î
(
x
, 
y
) \

418 (
__exãnsi⁄__
 \

419 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

420 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

424 #i‚de‡
isgª©îequÆ


425 
	#isgª©îequÆ
(
x
, 
y
) \

426 (
__exãnsi⁄__
 \

427 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

428 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

432 #i‚de‡
i¶ess


433 
	#i¶ess
(
x
, 
y
) \

434 (
__exãnsi⁄__
 \

435 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

436 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

440 #i‚de‡
i¶es£quÆ


441 
	#i¶es£quÆ
(
x
, 
y
) \

442 (
__exãnsi⁄__
 \

443 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

444 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

448 #i‚de‡
i¶essgª©î


449 
	#i¶essgª©î
(
x
, 
y
) \

450 (
__exãnsi⁄__
 \

451 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

452 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

456 #i‚de‡
isun‹dîed


457 
	#isun‹dîed
(
u
, 
v
) \

458 (
__exãnsi⁄__
 \

459 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

460 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

465 
	g__END_DECLS


	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#NETDB_INTERNAL
 -1

	)

66 
	#NETDB_SUCCESS
 0

	)

67 
	#HOST_NOT_FOUND
 1

	)

68 
	#TRY_AGAIN
 2

	)

70 
	#NO_RECOVERY
 3

	)

72 
	#NO_DATA
 4

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

76 #ifde‡
__USE_XOPEN2K


78 
	#IPPORT_RESERVED
 1024

	)

81 #ifde‡
__USE_GNU


83 
	#SCOPE_DELIMITER
 '%'

	)

88 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

91 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

96 
	sho°ít


98 *
h_«me
;

99 **
h_Æü£s
;

100 
h_addπy≥
;

101 
h_Àngth
;

102 **
h_addr_li°
;

103 
	#h_addr
 
h_addr_li°
[0]

	)

111 
	`£tho°ít
 (
__°ay_›í
);

117 
	`ídho°ít
 ();

124 
ho°ít
 *
	`gëho°ít
 ();

131 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

132 
__ty≥
);

138 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

140 #ifde‡
__USE_MISC


149 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

161 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

163 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

164 *
__ª°ri˘
 
__h_î∫›
);

166 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

167 
__ty≥
,

168 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

192 
	`£äëít
 (
__°ay_›í
);

198 
	`íd√ã¡
 ();

205 
√ã¡
 *
	`gë√ã¡
 ();

212 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

218 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

220 #ifdef 
__USE_MISC


231 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

232 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

233 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

234 *
__ª°ri˘
 
__h_î∫›
);

236 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

237 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

251 
	s£rvít


253 *
s_«me
;

254 **
s_Æü£s
;

255 
s_p‹t
;

256 *
s_¥Ÿo
;

264 
	`£t£rvít
 (
__°ay_›í
);

270 
	`íd£rvít
 ();

277 
£rvít
 *
	`gë£rvít
 ();

284 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

285 
__c⁄°
 *
__¥Ÿo
);

292 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

295 #ifdef 
__USE_MISC


303 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

304 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

305 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

307 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

308 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

309 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

310 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

311 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

313 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

321 
	s¥Ÿ€¡


323 *
p_«me
;

324 **
p_Æü£s
;

325 
p_¥Ÿo
;

333 
	`£çrŸ€¡
 (
__°ay_›í
);

339 
	`íd¥Ÿ€¡
 ();

346 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

352 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

358 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

361 #ifdef 
__USE_MISC


369 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

370 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

371 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

373 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

374 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

390 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

398 
	`íd√tgª¡
 ();

407 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

408 **
__ª°ri˘
 
__u£Ω
,

409 **
__ª°ri˘
 
__domaöp
);

418 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

419 
__c⁄°
 *
__u£r
, __c⁄° *
domaö
);

427 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

428 **
__ª°ri˘
 
__u£Ω
,

429 **
__ª°ri˘
 
__domaöp
,

430 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

434 #ifde‡
__USE_BSD


446 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

447 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

448 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

449 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

458 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

459 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

460 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

461 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

462 
ß_Ámûy_t
 
__af
);

474 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

475 
__c⁄°
 *
__ª°ri˘
 
__«me
,

476 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

477 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

486 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

487 
__c⁄°
 *
__ª°ri˘
 
__«me
,

488 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

489 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

490 
ß_Ámûy_t
 
__af
);

500 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

501 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

510 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

511 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

512 
ß_Ámûy_t
 
__af
);

522 
	`ºesvp‹t
 (*
__Æp‹t
);

531 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

536 #ifdef 
__USE_POSIX


538 
	saddröfo


540 
ai_Êags
;

541 
ai_Ámûy
;

542 
ai_sockty≥
;

543 
ai_¥Ÿocﬁ
;

544 
sockÀn_t
 
ai_addæí
;

545 
sockaddr
 *
ai_addr
;

546 *
ai_ˇn⁄«me
;

547 
addröfo
 *
ai_√xt
;

550 #ifde‡
__USE_GNU


552 
	sgaicb


554 c⁄° *
¨_«me
;

555 c⁄° *
¨_£rvi˚
;

556 c⁄° 
addröfo
 *
¨_ªque°
;

557 
addröfo
 *
¨_ªsu…
;

559 
__ªtu∫
;

560 
__unu£d
[5];

564 
	#GAI_WAIT
 0

	)

565 
	#GAI_NOWAIT
 1

	)

569 
	#AI_PASSIVE
 0x0001

	)

570 
	#AI_CANONNAME
 0x0002

	)

571 
	#AI_NUMERICHOST
 0x0004

	)

572 
	#AI_V4MAPPED
 0x0008

	)

573 
	#AI_ALL
 0x0010

	)

574 
	#AI_ADDRCONFIG
 0x0020

	)

576 #ifde‡
__USE_GNU


577 
	#AI_IDN
 0x0040

	)

580 
	#AI_CANONIDN
 0x0080

	)

581 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

583 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

586 
	#AI_NUMERICSERV
 0x0400

	)

589 
	#EAI_BADFLAGS
 -1

	)

590 
	#EAI_NONAME
 -2

	)

591 
	#EAI_AGAIN
 -3

	)

592 
	#EAI_FAIL
 -4

	)

593 
	#EAI_NODATA
 -5

	)

594 
	#EAI_FAMILY
 -6

	)

595 
	#EAI_SOCKTYPE
 -7

	)

596 
	#EAI_SERVICE
 -8

	)

597 
	#EAI_ADDRFAMILY
 -9

	)

598 
	#EAI_MEMORY
 -10

	)

599 
	#EAI_SYSTEM
 -11

	)

600 
	#EAI_OVERFLOW
 -12

	)

601 #ifde‡
__USE_GNU


602 
	#EAI_INPROGRESS
 -100

	)

603 
	#EAI_CANCELED
 -101

	)

604 
	#EAI_NOTCANCELED
 -102

	)

605 
	#EAI_ALLDONE
 -103

	)

606 
	#EAI_INTR
 -104

	)

607 
	#EAI_IDN_ENCODE
 -105

	)

610 
	#NI_MAXHOST
 1025

	)

611 
	#NI_MAXSERV
 32

	)

613 
	#NI_NUMERICHOST
 1

	)

614 
	#NI_NUMERICSERV
 2

	)

615 
	#NI_NOFQDN
 4

	)

616 
	#NI_NAMEREQD
 8

	)

617 
	#NI_DGRAM
 16

	)

618 #ifde‡
__USE_GNU


619 
	#NI_IDN
 32

	)

620 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

622 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

631 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

632 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

633 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

634 
addröfo
 **
__ª°ri˘
 
__∑i
);

637 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

640 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

646 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

647 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

648 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

649 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

652 #ifde‡
__USE_GNU


661 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

662 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

672 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

673 
__c⁄°
 
time•ec
 *
__timeout
);

676 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

679 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

682 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_IPV6
 = 41,

57 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

58 
	mIPPROTO_ROUTING
 = 43,

59 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

60 
	mIPPROTO_FRAGMENT
 = 44,

61 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

62 
	mIPPROTO_RSVP
 = 46,

63 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

64 
	mIPPROTO_GRE
 = 47,

65 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

66 
	mIPPROTO_ESP
 = 50,

67 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

68 
	mIPPROTO_AH
 = 51,

69 
	#IPPROTO_AH
 
IPPROTO_AH


	)

70 
	mIPPROTO_ICMPV6
 = 58,

71 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

72 
	mIPPROTO_NONE
 = 59,

73 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

74 
	mIPPROTO_DSTOPTS
 = 60,

75 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

76 
	mIPPROTO_MTP
 = 92,

77 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_RAW
 = 255,

87 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

88 
	mIPPROTO_MAX


93 
uöt16_t
 
	tö_p‹t_t
;

98 
	mIPPORT_ECHO
 = 7,

99 
	mIPPORT_DISCARD
 = 9,

100 
	mIPPORT_SYSTAT
 = 11,

101 
	mIPPORT_DAYTIME
 = 13,

102 
	mIPPORT_NETSTAT
 = 15,

103 
	mIPPORT_FTP
 = 21,

104 
	mIPPORT_TELNET
 = 23,

105 
	mIPPORT_SMTP
 = 25,

106 
	mIPPORT_TIMESERVER
 = 37,

107 
	mIPPORT_NAMESERVER
 = 42,

108 
	mIPPORT_WHOIS
 = 43,

109 
	mIPPORT_MTP
 = 57,

111 
	mIPPORT_TFTP
 = 69,

112 
	mIPPORT_RJE
 = 77,

113 
	mIPPORT_FINGER
 = 79,

114 
	mIPPORT_TTYLINK
 = 87,

115 
	mIPPORT_SUPDUP
 = 95,

118 
	mIPPORT_EXECSERVER
 = 512,

119 
	mIPPORT_LOGINSERVER
 = 513,

120 
	mIPPORT_CMDSERVER
 = 514,

121 
	mIPPORT_EFSSERVER
 = 520,

124 
	mIPPORT_BIFFUDP
 = 512,

125 
	mIPPORT_WHOSERVER
 = 513,

126 
	mIPPORT_ROUTESERVER
 = 520,

129 
	mIPPORT_RESERVED
 = 1024,

132 
	mIPPORT_USERRESERVED
 = 5000

137 
uöt32_t
 
	tö_addr_t
;

138 
	sö_addr


140 
ö_addr_t
 
	ms_addr
;

149 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

150 
	#IN_CLASSA_NET
 0xff000000

	)

151 
	#IN_CLASSA_NSHIFT
 24

	)

152 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

153 
	#IN_CLASSA_MAX
 128

	)

155 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

156 
	#IN_CLASSB_NET
 0xffff0000

	)

157 
	#IN_CLASSB_NSHIFT
 16

	)

158 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

159 
	#IN_CLASSB_MAX
 65536

	)

161 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

162 
	#IN_CLASSC_NET
 0xffffff00

	)

163 
	#IN_CLASSC_NSHIFT
 8

	)

164 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

166 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

167 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

169 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

170 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

173 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

175 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

177 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

180 
	#IN_LOOPBACKNET
 127

	)

182 #i‚de‡
INADDR_LOOPBACK


183 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

187 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

188 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

189 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

190 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

194 
	sö6_addr


198 
uöt8_t
 
	mu6_addr8
[16];

199 
uöt16_t
 
	mu6_addr16
[8];

200 
uöt32_t
 
	mu6_addr32
[4];

201 } 
	mö6_u
;

202 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

203 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

204 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

207 c⁄° 
ö6_addr
 
ö6addr_™y
;

208 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

209 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

210 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

212 
	#INET_ADDRSTRLEN
 16

	)

213 
	#INET6_ADDRSTRLEN
 46

	)

217 
	ssockaddr_ö


219 
__SOCKADDR_COMMON
 (
sö_
);

220 
ö_p‹t_t
 
	msö_p‹t
;

221 
ö_addr
 
	msö_addr
;

224 
	msö_zîo
[ (
sockaddr
) -

225 
__SOCKADDR_COMMON_SIZE
 -

226  (
ö_p‹t_t
) -

227  (
ö_addr
)];

231 
	ssockaddr_ö6


233 
__SOCKADDR_COMMON
 (
sö6_
);

234 
ö_p‹t_t
 
	msö6_p‹t
;

235 
uöt32_t
 
	msö6_Êowöfo
;

236 
ö6_addr
 
	msö6_addr
;

237 
uöt32_t
 
	msö6_sc›e_id
;

242 
	sù_mªq


245 
ö_addr
 
	mimr_mu…üddr
;

248 
ö_addr
 
	mimr_öãrÁ˚
;

251 
	sù_mªq_sour˚


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
ö_addr
 
	mimr_sour˚addr
;

264 
	sùv6_mªq


267 
ö6_addr
 
	mùv6mr_mu…üddr
;

270 
	mùv6mr_öãrÁ˚
;

275 
	sgroup_ªq


278 
uöt32_t
 
	mgr_öãrÁ˚
;

281 
sockaddr_°‹age
 
	mgr_group
;

284 
	sgroup_sour˚_ªq


287 
uöt32_t
 
	mg§_öãrÁ˚
;

290 
sockaddr_°‹age
 
	mg§_group
;

293 
sockaddr_°‹age
 
	mg§_sour˚
;

298 
	sù_msfûãr


301 
ö_addr
 
	mimsf_mu…üddr
;

304 
ö_addr
 
	mimsf_öãrÁ˚
;

307 
uöt32_t
 
	mimsf_fmode
;

310 
uöt32_t
 
	mimsf_num§c
;

312 
ö_addr
 
	mimsf_¶i°
[1];

315 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

316 -  (
ö_addr
) \

317 + (
num§c
Ë*  (
ö_addr
))

	)

319 
	sgroup_fûãr


322 
uöt32_t
 
	mgf_öãrÁ˚
;

325 
sockaddr_°‹age
 
	mgf_group
;

328 
uöt32_t
 
	mgf_fmode
;

331 
uöt32_t
 
	mgf_num§c
;

333 
sockaddr_°‹age
 
	mgf_¶i°
[1];

336 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

337 -  (
sockaddr_°‹age
) \

338 + ((
num§c
) \

339 *  (
sockaddr_°‹age
)))

	)

343 
	~<bôs/ö.h
>

352 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

353 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

354 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

360 
	~<ídün.h
>

363 
	~<bôs/byãsw≠.h
>

365 #ifde‡
__OPTIMIZE__


369 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


372 
	#¡ohl
(
x
Ë(x)

	)

373 
	#¡ohs
(
x
Ë(x)

	)

374 
	#ht⁄l
(
x
Ë(x)

	)

375 
	#ht⁄s
(
x
Ë(x)

	)

377 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


378 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

379 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

380 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

386 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

387 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

388 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

389 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

392 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

393 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

394 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

395 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

398 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

400 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

401 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

402 =
	`ht⁄l
 (0x„800000))

	)

404 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

405 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

406 =
	`ht⁄l
 (0x„c00000))

	)

408 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

409 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

410 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

411 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

413 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

415 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

416 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

417 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

419 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

420 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

421 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

422 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

426 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

429 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

430 
__THROW
;

433 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

434 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

435 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

437 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

438 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

439 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

441 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

442 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

443 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

445 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

446 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

447 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

449 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

450 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

451 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

454 
	sö6_pktöfo


456 
ö6_addr
 
ùi6_addr
;

457 
ùi6_ifödex
;

461 
	sù6_mtuöfo


463 
sockaddr_ö6
 
ù6m_addr
;

464 
uöt32_t
 
ù6m_mtu
;

468 #ifde‡
__USE_GNU


470 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

471 
__THROW
 
__©åibuã_dïªˇãd__
;

472 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

473 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

475 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

476 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

477 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

478 
__mu…x
, 
__∂usy
)

479 
__THROW
 
__©åibuã_dïªˇãd__
;

480 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

481 
uöt8_t
 **
__çåp
)

482 
__THROW
 
__©åibuã_dïªˇãd__
;

483 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

484 
uöt8_t
 **
__çåp
, 
__ty≥
)

485 
__THROW
 
__©åibuã_dïªˇãd__
;

489 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

490 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

491 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

492 **
__d©abuÂ
Ë
__THROW
;

493 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

494 
__THROW
;

495 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

496 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

497 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

498 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

499 **
__d©abuÂ
Ë
__THROW
;

500 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

501 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

502 **
__d©abuÂ
Ë
__THROW
;

503 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

504 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

508 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

509 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

510 
__£gmíts
Ë
__THROW
;

511 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

512 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

513 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

514 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

515 
__THROW
;

521 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

522 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

523 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

524 
__THROW
;

527 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

528 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

529 
uöt32_t
 
__num§c
,

530 
__c⁄°
 
ö_addr
 *
__¶i°
)

531 
__THROW
;

535 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

536 
__c⁄°
 
sockaddr
 *
__group
,

537 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

538 
uöt32_t
 *
__num§c
,

539 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

542 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

543 
__c⁄°
 
sockaddr
 *
__group
,

544 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

549 
__END_DECLS


	@/usr/include/openssl/bio.h

59 #i‚de‡
HEADER_BIO_H


60 
	#HEADER_BIO_H


	)

62 
	~<›ís¶/e_os2.h
>

64 #i‚de‡
OPENSSL_NO_FP_API


65 
	~<°dio.h
>

67 
	~<°d¨g.h
>

69 
	~<›ís¶/¸y±o.h
>

71 #ifde‡ 
__˝lu•lus


76 
	#BIO_TYPE_NONE
 0

	)

77 
	#BIO_TYPE_MEM
 (1|0x0400)

	)

78 
	#BIO_TYPE_FILE
 (2|0x0400)

	)

80 
	#BIO_TYPE_FD
 (4|0x0400|0x0100)

	)

81 
	#BIO_TYPE_SOCKET
 (5|0x0400|0x0100)

	)

82 
	#BIO_TYPE_NULL
 (6|0x0400)

	)

83 
	#BIO_TYPE_SSL
 (7|0x0200)

	)

84 
	#BIO_TYPE_MD
 (8|0x0200Ë

	)

85 
	#BIO_TYPE_BUFFER
 (9|0x0200Ë

	)

86 
	#BIO_TYPE_CIPHER
 (10|0x0200Ë

	)

87 
	#BIO_TYPE_BASE64
 (11|0x0200Ë

	)

88 
	#BIO_TYPE_CONNECT
 (12|0x0400|0x0100Ë

	)

89 
	#BIO_TYPE_ACCEPT
 (13|0x0400|0x0100Ë

	)

90 
	#BIO_TYPE_PROXY_CLIENT
 (14|0x0200Ë

	)

91 
	#BIO_TYPE_PROXY_SERVER
 (15|0x0200Ë

	)

92 
	#BIO_TYPE_NBIO_TEST
 (16|0x0200Ë

	)

93 
	#BIO_TYPE_NULL_FILTER
 (17|0x0200)

	)

94 
	#BIO_TYPE_BER
 (18|0x0200Ë

	)

95 
	#BIO_TYPE_BIO
 (19|0x0400Ë

	)

96 
	#BIO_TYPE_LINEBUFFER
 (20|0x0200Ë

	)

97 
	#BIO_TYPE_DGRAM
 (21|0x0400|0x0100)

	)

99 
	#BIO_TYPE_DESCRIPTOR
 0x0100

	)

100 
	#BIO_TYPE_FILTER
 0x0200

	)

101 
	#BIO_TYPE_SOURCE_SINK
 0x0400

	)

105 
	#BIO_NOCLOSE
 0x00

	)

106 
	#BIO_CLOSE
 0x01

	)

110 
	#BIO_CTRL_RESET
 1

	)

111 
	#BIO_CTRL_EOF
 2

	)

112 
	#BIO_CTRL_INFO
 3

	)

113 
	#BIO_CTRL_SET
 4

	)

114 
	#BIO_CTRL_GET
 5

	)

115 
	#BIO_CTRL_PUSH
 6

	)

116 
	#BIO_CTRL_POP
 7

	)

117 
	#BIO_CTRL_GET_CLOSE
 8

	)

118 
	#BIO_CTRL_SET_CLOSE
 9

	)

119 
	#BIO_CTRL_PENDING
 10

	)

120 
	#BIO_CTRL_FLUSH
 11

	)

121 
	#BIO_CTRL_DUP
 12

	)

122 
	#BIO_CTRL_WPENDING
 13

	)

124 
	#BIO_CTRL_SET_CALLBACK
 14

	)

125 
	#BIO_CTRL_GET_CALLBACK
 15

	)

127 
	#BIO_CTRL_SET_FILENAME
 30

	)

130 
	#BIO_CTRL_DGRAM_CONNECT
 31

	)

131 
	#BIO_CTRL_DGRAM_SET_CONNECTED
 32

	)

134 
	#BIO_CTRL_DGRAM_SET_RECV_TIMEOUT
 33

	)

135 
	#BIO_CTRL_DGRAM_GET_RECV_TIMEOUT
 34

	)

136 
	#BIO_CTRL_DGRAM_SET_SEND_TIMEOUT
 35

	)

137 
	#BIO_CTRL_DGRAM_GET_SEND_TIMEOUT
 36

	)

139 
	#BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP
 37

	)

140 
	#BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP
 38

	)

143 
	#BIO_CTRL_DGRAM_MTU_DISCOVER
 39

	)

146 
	#BIO_CTRL_DGRAM_QUERY_MTU
 40

	)

147 
	#BIO_CTRL_DGRAM_GET_MTU
 41

	)

148 
	#BIO_CTRL_DGRAM_SET_MTU
 42

	)

153 
	#BIO_CTRL_DGRAM_MTU_EXCEEDED
 43

	)

158 
	#BIO_CTRL_DGRAM_SET_PEER
 44

	)

162 
	#BIO_FP_READ
 0x02

	)

163 
	#BIO_FP_WRITE
 0x04

	)

164 
	#BIO_FP_APPEND
 0x08

	)

165 
	#BIO_FP_TEXT
 0x10

	)

167 
	#BIO_FLAGS_READ
 0x01

	)

168 
	#BIO_FLAGS_WRITE
 0x02

	)

169 
	#BIO_FLAGS_IO_SPECIAL
 0x04

	)

170 
	#BIO_FLAGS_RWS
 (
BIO_FLAGS_READ
|
BIO_FLAGS_WRITE
|
BIO_FLAGS_IO_SPECIAL
)

	)

171 
	#BIO_FLAGS_SHOULD_RETRY
 0x08

	)

172 #i‚def 
BIO_FLAGS_UPLINK


175 
	#BIO_FLAGS_UPLINK
 0

	)

179 
	#BIO_GHBN_CTRL_HITS
 1

	)

180 
	#BIO_GHBN_CTRL_MISSES
 2

	)

181 
	#BIO_GHBN_CTRL_CACHE_SIZE
 3

	)

182 
	#BIO_GHBN_CTRL_GET_ENTRY
 4

	)

183 
	#BIO_GHBN_CTRL_FLUSH
 5

	)

192 
	#BIO_FLAGS_BASE64_NO_NL
 0x100

	)

197 
	#BIO_FLAGS_MEM_RDONLY
 0x200

	)

199 
	#BIO_£t_Êags
(
b
,
f
Ë((b)->
Êags
|=(f))

	)

200 
	#BIO_gë_Êags
(
b
Ë((b)->
Êags
)

	)

201 
	#BIO_£t_ªåy_•ecül
(
b
) \

202 ((
b
)->
Êags
|=(
BIO_FLAGS_IO_SPECIAL
|
BIO_FLAGS_SHOULD_RETRY
))

	)

203 
	#BIO_£t_ªåy_ªad
(
b
) \

204 ((
b
)->
Êags
|=(
BIO_FLAGS_READ
|
BIO_FLAGS_SHOULD_RETRY
))

	)

205 
	#BIO_£t_ªåy_wrôe
(
b
) \

206 ((
b
)->
Êags
|=(
BIO_FLAGS_WRITE
|
BIO_FLAGS_SHOULD_RETRY
))

	)

209 
	#BIO_˛ór_Êags
(
b
,
f
Ë((b)->
Êags
&~(f))

	)

210 
	#BIO_˛ór_ªåy_Êags
(
b
) \

211 ((
b
)->
Êags
&~(
BIO_FLAGS_RWS
|
BIO_FLAGS_SHOULD_RETRY
))

	)

212 
	#BIO_gë_ªåy_Êags
(
b
) \

213 ((
b
)->
Êags
&(
BIO_FLAGS_RWS
|
BIO_FLAGS_SHOULD_RETRY
))

	)

216 
	#BIO_should_ªad
(
a
Ë(◊)->
Êags
 & 
BIO_FLAGS_READ
)

	)

217 
	#BIO_should_wrôe
(
a
Ë(◊)->
Êags
 & 
BIO_FLAGS_WRITE
)

	)

218 
	#BIO_should_io_•ecül
(
a
Ë(◊)->
Êags
 & 
BIO_FLAGS_IO_SPECIAL
)

	)

219 
	#BIO_ªåy_ty≥
(
a
Ë(◊)->
Êags
 & 
BIO_FLAGS_RWS
)

	)

220 
	#BIO_should_ªåy
(
a
Ë(◊)->
Êags
 & 
BIO_FLAGS_SHOULD_RETRY
)

	)

228 
	#BIO_RR_SSL_X509_LOOKUP
 0x01

	)

230 
	#BIO_RR_CONNECT
 0x02

	)

232 
	#BIO_RR_ACCEPT
 0x03

	)

235 
	#BIO_CB_FREE
 0x01

	)

236 
	#BIO_CB_READ
 0x02

	)

237 
	#BIO_CB_WRITE
 0x03

	)

238 
	#BIO_CB_PUTS
 0x04

	)

239 
	#BIO_CB_GETS
 0x05

	)

240 
	#BIO_CB_CTRL
 0x06

	)

244 
	#BIO_CB_RETURN
 0x80

	)

245 
	#BIO_CB_ªtu∫
(
a
Ë(◊)|
BIO_CB_RETURN
))

	)

246 
	#BIO_cb_¥e
(
a
Ë(!(◊)&
BIO_CB_RETURN
))

	)

247 
	#BIO_cb_po°
(
a
Ë(◊)&
BIO_CB_RETURN
)

	)

249 
	#BIO_£t_ˇŒback
(
b
,
cb
Ë((b)->
ˇŒback
=(cb))

	)

250 
	#BIO_£t_ˇŒback_¨g
(
b
,
¨g
Ë((b)->
cb_¨g
=(*)◊rg))

	)

251 
	#BIO_gë_ˇŒback_¨g
(
b
Ë((b)->
cb_¨g
)

	)

252 
	#BIO_gë_ˇŒback
(
b
Ë((b)->
ˇŒback
)

	)

253 
	#BIO_mëhod_«me
(
b
Ë((b)->
mëhod
->
«me
)

	)

254 
	#BIO_mëhod_ty≥
(
b
Ë((b)->
mëhod
->
ty≥
)

	)

256 
bio_°
 
	tBIO
;

258 
	tbio_öfo_cb
(
	tbio_°
 *, , const *, , , );

260 #i‚de‡
OPENSSL_SYS_WIN16


261 
	sbio_mëhod_°


263 
ty≥
;

264 c⁄° *
«me
;

265 (*
bwrôe
)(
BIO
 *, const *, );

266 (*
bªad
)(
BIO
 *, *, );

267 (*
bputs
)(
BIO
 *, const *);

268 (*
bgës
)(
BIO
 *, *, );

269 (*
˘æ
)(
BIO
 *, , , *);

270 (*
¸óã
)(
BIO
 *);

271 (*
de°roy
)(
BIO
 *);

272 (*
ˇŒback_˘æ
)(
BIO
 *, , 
bio_öfo_cb
 *);

273 } 
	tBIO_METHOD
;

275 
	sbio_mëhod_°


277 
ty≥
;

278 c⁄° *
«me
;

279 (
_Ár
 *
bwrôe
)();

280 (
_Ár
 *
bªad
)();

281 (
_Ár
 *
bputs
)();

282 (
_Ár
 *
bgës
)();

283 (
_Ár
 *
˘æ
)();

284 (
_Ár
 *
¸óã
)();

285 (
_Ár
 *
de°roy
)();

286 (
_Ár
 *
ˇŒback_˘æ
)();

287 } 
	tBIO_METHOD
;

290 
	sbio_°


292 
BIO_METHOD
 *
mëhod
;

294 (*
ˇŒback
)(
bio_°
 *,,const *,, ,);

295 *
cb_¨g
;

297 
öô
;

298 
shutdown
;

299 
Êags
;

300 
ªåy_ªas⁄
;

301 
num
;

302 *
±r
;

303 
bio_°
 *
√xt_bio
;

304 
bio_°
 *
¥ev_bio
;

305 
ª„ªn˚s
;

306 
num_ªad
;

307 
num_wrôe
;

309 
CRYPTO_EX_DATA
 
ex_d©a
;

312 
DECLARE_STACK_OF
(
BIO
)

314 
	sbio_f_buf„r_˘x_°ru˘


317 
ibuf_size
;

318 
obuf_size
;

320 *
ibuf
;

321 
ibuf_Àn
;

322 
ibuf_off
;

324 *
obuf
;

325 
obuf_Àn
;

326 
obuf_off
;

327 } 
	tBIO_F_BUFFER_CTX
;

330 
	#BIO_CONN_S_BEFORE
 1

	)

331 
	#BIO_CONN_S_GET_IP
 2

	)

332 
	#BIO_CONN_S_GET_PORT
 3

	)

333 
	#BIO_CONN_S_CREATE_SOCKET
 4

	)

334 
	#BIO_CONN_S_CONNECT
 5

	)

335 
	#BIO_CONN_S_OK
 6

	)

336 
	#BIO_CONN_S_BLOCKED_CONNECT
 7

	)

337 
	#BIO_CONN_S_NBIO
 8

	)

340 
	#BIO_C_SET_CONNECT
 100

	)

341 
	#BIO_C_DO_STATE_MACHINE
 101

	)

342 
	#BIO_C_SET_NBIO
 102

	)

343 
	#BIO_C_SET_PROXY_PARAM
 103

	)

344 
	#BIO_C_SET_FD
 104

	)

345 
	#BIO_C_GET_FD
 105

	)

346 
	#BIO_C_SET_FILE_PTR
 106

	)

347 
	#BIO_C_GET_FILE_PTR
 107

	)

348 
	#BIO_C_SET_FILENAME
 108

	)

349 
	#BIO_C_SET_SSL
 109

	)

350 
	#BIO_C_GET_SSL
 110

	)

351 
	#BIO_C_SET_MD
 111

	)

352 
	#BIO_C_GET_MD
 112

	)

353 
	#BIO_C_GET_CIPHER_STATUS
 113

	)

354 
	#BIO_C_SET_BUF_MEM
 114

	)

355 
	#BIO_C_GET_BUF_MEM_PTR
 115

	)

356 
	#BIO_C_GET_BUFF_NUM_LINES
 116

	)

357 
	#BIO_C_SET_BUFF_SIZE
 117

	)

358 
	#BIO_C_SET_ACCEPT
 118

	)

359 
	#BIO_C_SSL_MODE
 119

	)

360 
	#BIO_C_GET_MD_CTX
 120

	)

361 
	#BIO_C_GET_PROXY_PARAM
 121

	)

362 
	#BIO_C_SET_BUFF_READ_DATA
 122

	)

363 
	#BIO_C_GET_CONNECT
 123

	)

364 
	#BIO_C_GET_ACCEPT
 124

	)

365 
	#BIO_C_SET_SSL_RENEGOTIATE_BYTES
 125

	)

366 
	#BIO_C_GET_SSL_NUM_RENEGOTIATES
 126

	)

367 
	#BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT
 127

	)

368 
	#BIO_C_FILE_SEEK
 128

	)

369 
	#BIO_C_GET_CIPHER_CTX
 129

	)

370 
	#BIO_C_SET_BUF_MEM_EOF_RETURN
 130

	)

371 
	#BIO_C_SET_BIND_MODE
 131

	)

372 
	#BIO_C_GET_BIND_MODE
 132

	)

373 
	#BIO_C_FILE_TELL
 133

	)

374 
	#BIO_C_GET_SOCKS
 134

	)

375 
	#BIO_C_SET_SOCKS
 135

	)

377 
	#BIO_C_SET_WRITE_BUF_SIZE
 136

	)

378 
	#BIO_C_GET_WRITE_BUF_SIZE
 137

	)

379 
	#BIO_C_MAKE_BIO_PAIR
 138

	)

380 
	#BIO_C_DESTROY_BIO_PAIR
 139

	)

381 
	#BIO_C_GET_WRITE_GUARANTEE
 140

	)

382 
	#BIO_C_GET_READ_REQUEST
 141

	)

383 
	#BIO_C_SHUTDOWN_WR
 142

	)

384 
	#BIO_C_NREAD0
 143

	)

385 
	#BIO_C_NREAD
 144

	)

386 
	#BIO_C_NWRITE0
 145

	)

387 
	#BIO_C_NWRITE
 146

	)

388 
	#BIO_C_RESET_READ_REQUEST
 147

	)

391 
	#BIO_£t_≠p_d©a
(
s
,
¨g
Ë
	`BIO_£t_ex_d©a
(s,0,¨g)

	)

392 
	#BIO_gë_≠p_d©a
(
s
Ë
	`BIO_gë_ex_d©a
(s,0)

	)

395 
	#BIO_£t_c⁄n_ho°«me
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,0,(*Íame)

	)

396 
	#BIO_£t_c⁄n_p‹t
(
b
,
p‹t
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,1,(*Ì‹t)

	)

397 
	#BIO_£t_c⁄n_ù
(
b
,
ù
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,2,(*)ù)

	)

398 
	#BIO_£t_c⁄n_öt_p‹t
(
b
,
p‹t
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,3,(*Ì‹t)

	)

399 
	#BIO_gë_c⁄n_ho°«me
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,0)

	)

400 
	#BIO_gë_c⁄n_p‹t
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,1)

	)

401 
	#BIO_gë_c⁄n_ù
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,2)

	)

402 
	#BIO_gë_c⁄n_öt_p‹t
(
b
Ë
	`BIO_öt_˘æ
(b,
BIO_C_GET_CONNECT
,3)

	)

405 
	#BIO_£t_nbio
(
b
,
n
Ë
	`BIO_˘æ
(b,
BIO_C_SET_NBIO
,“),
NULL
)

	)

408 
	#BIO_£t_ac˚±_p‹t
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,0,(*Íame)

	)

409 
	#BIO_gë_ac˚±_p‹t
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_ACCEPT
,0)

	)

411 
	#BIO_£t_nbio_ac˚±
(
b
,
n
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,1,“)?"a":
NULL
)

	)

412 
	#BIO_£t_ac˚±_bios
(
b
,
bio
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,2,(*)bio)

	)

414 
	#BIO_BIND_NORMAL
 0

	)

415 
	#BIO_BIND_REUSEADDR_IF_UNUSED
 1

	)

416 
	#BIO_BIND_REUSEADDR
 2

	)

417 
	#BIO_£t_böd_mode
(
b
,
mode
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BIND_MODE
,mode,
NULL
)

	)

418 
	#BIO_gë_böd_mode
(
b
,
mode
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BIND_MODE
,0,
NULL
)

	)

420 
	#BIO_do_c⁄√˘
(
b
Ë
	`BIO_do_h™dshake
(b)

	)

421 
	#BIO_do_ac˚±
(
b
Ë
	`BIO_do_h™dshake
(b)

	)

422 
	#BIO_do_h™dshake
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_DO_STATE_MACHINE
,0,
NULL
)

	)

425 
	#BIO_£t_uæ
(
b
,
uæ
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,0,(*)(uæ))

	)

426 
	#BIO_£t_¥oxõs
(
b
,
p
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,1,(*)’))

	)

428 
	#BIO_£t_fûãr_bio
(
b
,
s
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,2,(*)(s))

	)

430 
	#BIO_£t_¥oxy_cb
(
b
,
cb
Ë
	`BIO_ˇŒback_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,3,(*(*cb)()))

	)

431 
	#BIO_£t_¥oxy_hódî
(
b
,
sk
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,4,(*)sk)

	)

432 
	#BIO_£t_no_c⁄√˘_ªtu∫
(
b
,
boﬁ
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,5,boﬁ)

	)

434 
	#BIO_gë_¥oxy_hódî
(
b
,
skp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,0,(*)skp)

	)

435 
	#BIO_gë_¥oxõs
(
b
,
pxy_p
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,1,(*)’xy_p))

	)

436 
	#BIO_gë_uæ
(
b
,
uæ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,2,(*)(uæ))

	)

437 
	#BIO_gë_no_c⁄√˘_ªtu∫
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,5,
NULL
)

	)

439 
	#BIO_£t_fd
(
b
,
fd
,
c
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_FD
,c,fd)

	)

440 
	#BIO_gë_fd
(
b
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_GET_FD
,0,(*)c)

	)

442 
	#BIO_£t_Â
(
b
,
Â
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILE_PTR
,c,(*)Â)

	)

443 
	#BIO_gë_Â
(
b
,
Âp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_FILE_PTR
,0,(*)Âp)

	)

445 
	#BIO_£ek
(
b
,
ofs
Ë()
	`BIO_˘æ
(b,
BIO_C_FILE_SEEK
,ofs,
NULL
)

	)

446 
	#BIO_ãŒ
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_FILE_TELL
,0,
NULL
)

	)

450 #ifde‡
CONST_STRICT


454 
BIO_ªad_fûíame
(
BIO
 *
b
,c⁄° *
«me
);

456 
	#BIO_ªad_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

457 
BIO_CLOSE
|
BIO_FP_READ
,(*)
«me
)

	)

459 
	#BIO_wrôe_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

460 
BIO_CLOSE
|
BIO_FP_WRITE
,
«me
)

	)

461 
	#BIO_≠≥nd_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

462 
BIO_CLOSE
|
BIO_FP_APPEND
,
«me
)

	)

463 
	#BIO_rw_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

464 
BIO_CLOSE
|
BIO_FP_READ
|
BIO_FP_WRITE
,
«me
)

	)

470 
	#BIO_£t_s¶
(
b
,
s¶
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_SSL
,c,(*)s¶)

	)

471 
	#BIO_gë_s¶
(
b
,
s¶p
Ë
	`BIO_˘æ
(b,
BIO_C_GET_SSL
,0,(*)s¶p)

	)

472 
	#BIO_£t_s¶_mode
(
b
,
˛õ¡
Ë
	`BIO_˘æ
(b,
BIO_C_SSL_MODE
,˛õ¡,
NULL
)

	)

473 
	#BIO_£t_s¶_ª√gŸüã_byãs
(
b
,
num
) \

474 
	`BIO_˘æ
(
b
,
BIO_C_SET_SSL_RENEGOTIATE_BYTES
,
num
,
NULL
);

	)

475 
	#BIO_gë_num_ª√gŸüãs
(
b
) \

476 
	`BIO_˘æ
(
b
,
BIO_C_GET_SSL_NUM_RENEGOTIATES
,0,
NULL
);

	)

477 
	#BIO_£t_s¶_ª√gŸüã_timeout
(
b
,
£c⁄ds
) \

478 
	`BIO_˘æ
(
b
,
BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT
,
£c⁄ds
,
NULL
);

	)

483 
	#BIO_gë_mem_d©a
(
b
,
µ
Ë
	`BIO_˘æ
(b,
BIO_CTRL_INFO
,0,(*Ìp)

	)

484 
	#BIO_£t_mem_buf
(
b
,
bm
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUF_MEM
,c,(*)bm)

	)

485 
	#BIO_gë_mem_±r
(
b
,
µ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BUF_MEM_PTR
,0,(*Ìp)

	)

486 
	#BIO_£t_mem_eof_ªtu∫
(
b
,
v
) \

487 
	`BIO_˘æ
(
b
,
BIO_C_SET_BUF_MEM_EOF_RETURN
,
v
,
NULL
)

	)

490 
	#BIO_gë_buf„r_num_löes
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BUFF_NUM_LINES
,0,
NULL
)

	)

491 
	#BIO_£t_buf„r_size
(
b
,
size
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,
NULL
)

	)

492 
	#BIO_£t_ªad_buf„r_size
(
b
,
size
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,0)

	)

493 
	#BIO_£t_wrôe_buf„r_size
(
b
,
size
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,1)

	)

494 
	#BIO_£t_buf„r_ªad_d©a
(
b
,
buf
,
num
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUFF_READ_DATA
,num,buf)

	)

497 
	#BIO_dup_°©e
(
b
,
ªt
Ë
	`BIO_˘æ
(b,
BIO_CTRL_DUP
,0,(*)‘ë))

	)

499 
	#BIO_ª£t
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_RESET
,0,
NULL
)

	)

500 
	#BIO_eof
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_EOF
,0,
NULL
)

	)

501 
	#BIO_£t_˛o£
(
b
,
c
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_SET_CLOSE
,(c),
NULL
)

	)

502 
	#BIO_gë_˛o£
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_GET_CLOSE
,0,
NULL
)

	)

503 
	#BIO_≥ndög
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_PENDING
,0,
NULL
)

	)

504 
	#BIO_w≥ndög
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_WPENDING
,0,
NULL
)

	)

506 
size_t
 
BIO_˘æ_≥ndög
(
BIO
 *
b
);

507 
size_t
 
BIO_˘æ_w≥ndög
(
BIO
 *
b
);

508 
	#BIO_Êush
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_FLUSH
,0,
NULL
)

	)

509 
	#BIO_gë_öfo_ˇŒback
(
b
,
cbp
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_GET_CALLBACK
,0, \

510 
cbp
)

	)

511 
	#BIO_£t_öfo_ˇŒback
(
b
,
cb
Ë()
	`BIO_ˇŒback_˘æ
(b,
BIO_CTRL_SET_CALLBACK
,cb)

	)

514 
	#BIO_buf„r_gë_num_löes
(
b
Ë
	`BIO_˘æ
(b,
BIO_CTRL_GET
,0,
NULL
)

	)

517 
	#BIO_£t_wrôe_buf_size
(
b
,
size
Ë()
	`BIO_˘æ
(b,
BIO_C_SET_WRITE_BUF_SIZE
,size,
NULL
)

	)

518 
	#BIO_gë_wrôe_buf_size
(
b
,
size
Ë(
size_t
)
	`BIO_˘æ
(b,
BIO_C_GET_WRITE_BUF_SIZE
,size,
NULL
)

	)

519 
	#BIO_make_bio_∑ú
(
b1
,
b2
Ë()
	`BIO_˘æ
(b1,
BIO_C_MAKE_BIO_PAIR
,0,b2)

	)

520 
	#BIO_de°roy_bio_∑ú
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_DESTROY_BIO_PAIR
,0,
NULL
)

	)

521 
	#BIO_shutdown_wr
(
b
Ë()
	`BIO_˘æ
(b, 
BIO_C_SHUTDOWN_WR
, 0, 
NULL
)

	)

523 
	#BIO_gë_wrôe_gu¨™ãe
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_GET_WRITE_GUARANTEE
,0,
NULL
)

	)

524 
	#BIO_gë_ªad_ªque°
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_GET_READ_REQUEST
,0,
NULL
)

	)

525 
size_t
 
BIO_˘æ_gë_wrôe_gu¨™ãe
(
BIO
 *
b
);

526 
size_t
 
BIO_˘æ_gë_ªad_ªque°
(
BIO
 *
b
);

527 
BIO_˘æ_ª£t_ªad_ªque°
(
BIO
 *
b
);

530 
	#BIO_˘æ_dgøm_c⁄√˘
(
b
,
≥î
) \

531 ()
	`BIO_˘æ
(
b
,
BIO_CTRL_DGRAM_CONNECT
,0, (*)
≥î
)

	)

532 
	#BIO_˘æ_£t_c⁄√˘ed
(
b
, 
°©e
, 
≥î
) \

533 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_SET_CONNECTED
, 
°©e
, (*)
≥î
)

	)

534 
	#BIO_dgøm_ªcv_timedout
(
b
) \

535 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP
, 0, 
NULL
)

	)

536 
	#BIO_dgøm_£nd_timedout
(
b
) \

537 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP
, 0, 
NULL
)

	)

538 
	#BIO_dgøm_£t_≥î
(
b
,
≥î
) \

539 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_SET_PEER
, 0, (*)
≥î
)

	)

544 
BIO_£t_ex_d©a
(
BIO
 *
bio
,
idx
,*
d©a
);

545 *
BIO_gë_ex_d©a
(
BIO
 *
bio
,
idx
);

546 
BIO_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

547 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

548 
BIO_numbî_ªad
(
BIO
 *
bio
);

549 
BIO_numbî_wrôãn
(
BIO
 *
bio
);

551 #i‚de‡
OPENSSL_NO_FP_API


552 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë&& deföed(
_WINDLL
)

553 
BIO_METHOD
 *
BIO_s_fûe_öã∫Æ
();

554 
BIO
 *
BIO_√w_fûe_öã∫Æ
(*
fûíame
, *
mode
);

555 
BIO
 *
BIO_√w_Â_öã∫Æ
(
FILE
 *
°ªam
, 
˛o£_Êag
);

556 
	#BIO_s_fûe
 
BIO_s_fûe_öã∫Æ


	)

557 
	#BIO_√w_fûe
 
BIO_√w_fûe_öã∫Æ


	)

558 
	#BIO_√w_Â
 
BIO_√w_Â_öã∫Æ


	)

560 
BIO_METHOD
 *
BIO_s_fûe
();

561 
BIO
 *
BIO_√w_fûe
(c⁄° *
fûíame
, c⁄° *
mode
);

562 
BIO
 *
BIO_√w_Â
(
FILE
 *
°ªam
, 
˛o£_Êag
);

563 
	#BIO_s_fûe_öã∫Æ
 
BIO_s_fûe


	)

564 
	#BIO_√w_fûe_öã∫Æ
 
BIO_√w_fûe


	)

565 
	#BIO_√w_Â_öã∫Æ
 
BIO_s_fûe


	)

568 
BIO
 * 
BIO_√w
(
BIO_METHOD
 *
ty≥
);

569 
BIO_£t
(
BIO
 *
a
,
BIO_METHOD
 *
ty≥
);

570 
BIO_‰ì
(
BIO
 *
a
);

571 
BIO_v‰ì
(
BIO
 *
a
);

572 
BIO_ªad
(
BIO
 *
b
, *
d©a
, 
Àn
);

573 
BIO_gës
(
BIO
 *
bp
,*
buf
, 
size
);

574 
BIO_wrôe
(
BIO
 *
b
, c⁄° *
d©a
, 
Àn
);

575 
BIO_puts
(
BIO
 *
bp
,c⁄° *
buf
);

576 
BIO_ödít
(
BIO
 *
b
,
ödít
,
max
);

577 
BIO_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
,*
∑rg
);

578 
BIO_ˇŒback_˘æ
(
BIO
 *
b
, 
cmd
, (*
Â
)(
bio_°
 *, , const *, , , ));

579 * 
BIO_±r_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
);

580 
BIO_öt_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
,
ürg
);

581 
BIO
 * 
BIO_push
(BIO *
b
,BIO *
≠≥nd
);

582 
BIO
 * 
BIO_p›
(BIO *
b
);

583 
BIO_‰ì_Æl
(
BIO
 *
a
);

584 
BIO
 * 
BIO_föd_ty≥
(BIO *
b
,
bio_ty≥
);

585 
BIO
 * 
BIO_√xt
(BIO *
b
);

586 
BIO
 * 
BIO_gë_ªåy_BIO
(BIO *
bio
, *
ªas⁄
);

587 
BIO_gë_ªåy_ªas⁄
(
BIO
 *
bio
);

588 
BIO
 * 
BIO_dup_chaö
(BIO *
ö
);

590 
BIO_ƒód0
(
BIO
 *
bio
, **
buf
);

591 
BIO_ƒód
(
BIO
 *
bio
, **
buf
, 
num
);

592 
BIO_nwrôe0
(
BIO
 *
bio
, **
buf
);

593 
BIO_nwrôe
(
BIO
 *
bio
, **
buf
, 
num
);

595 #i‚de‡
OPENSSL_SYS_WIN16


596 
BIO_debug_ˇŒback
(
BIO
 *
bio
,
cmd
,c⁄° *
¨gp
,
¨gi
,

597 
¨gl
,
ªt
);

599 
_Ár
 
_lﬂdds
 
BIO_debug_ˇŒback
(
BIO
 *
bio
,
cmd
,c⁄° *
¨gp
,
¨gi
,

600 
¨gl
,
ªt
);

603 
BIO_METHOD
 *
BIO_s_mem
();

604 
BIO
 *
BIO_√w_mem_buf
(*
buf
, 
Àn
);

605 
BIO_METHOD
 *
BIO_s_sockë
();

606 
BIO_METHOD
 *
BIO_s_c⁄√˘
();

607 
BIO_METHOD
 *
BIO_s_ac˚±
();

608 
BIO_METHOD
 *
BIO_s_fd
();

609 #i‚de‡
OPENSSL_SYS_OS2


610 
BIO_METHOD
 *
BIO_s_log
();

612 
BIO_METHOD
 *
BIO_s_bio
();

613 
BIO_METHOD
 *
BIO_s_nuŒ
();

614 
BIO_METHOD
 *
BIO_f_nuŒ
();

615 
BIO_METHOD
 *
BIO_f_buf„r
();

616 #ifde‡
OPENSSL_SYS_VMS


617 
BIO_METHOD
 *
BIO_f_löebuf„r
();

619 
BIO_METHOD
 *
BIO_f_nbio_ã°
();

620 #i‚de‡
OPENSSL_NO_DGRAM


621 
BIO_METHOD
 *
BIO_s_d©agøm
();

626 
BIO_sock_should_ªåy
(
i
);

627 
BIO_sock_n⁄_Áèl_îr‹
(
îr‹
);

628 
BIO_dgøm_n⁄_Áèl_îr‹
(
îr‹
);

630 
BIO_fd_should_ªåy
(
i
);

631 
BIO_fd_n⁄_Áèl_îr‹
(
îr‹
);

632 
BIO_dump_cb
((*
cb
)(c⁄° *
d©a
, 
size_t
 
Àn
, *
u
),

633 *
u
, c⁄° *
s
, 
Àn
);

634 
BIO_dump_ödít_cb
((*
cb
)(c⁄° *
d©a
, 
size_t
 
Àn
, *
u
),

635 *
u
, c⁄° *
s
, 
Àn
, 
ödít
);

636 
BIO_dump
(
BIO
 *
b
,c⁄° *
byãs
,
Àn
);

637 
BIO_dump_ödít
(
BIO
 *
b
,c⁄° *
byãs
,
Àn
,
ödít
);

638 #i‚de‡
OPENSSL_NO_FP_API


639 
BIO_dump_Â
(
FILE
 *
Â
, c⁄° *
s
, 
Àn
);

640 
BIO_dump_ödít_Â
(
FILE
 *
Â
, c⁄° *
s
, 
Àn
, 
ödít
);

642 
ho°ít
 *
BIO_gëho°by«me
(c⁄° *
«me
);

651 
BIO_sock_îr‹
(
sock
);

652 
BIO_sockë_io˘l
(
fd
, 
ty≥
, *
¨g
);

653 
BIO_sockë_nbio
(
fd
,
mode
);

654 
BIO_gë_p‹t
(c⁄° *
°r
, *
p‹t_±r
);

655 
BIO_gë_ho°_ù
(c⁄° *
°r
, *
ù
);

656 
BIO_gë_ac˚±_sockë
(*
ho°_p‹t
,
mode
);

657 
BIO_ac˚±
(
sock
,**
ù_p‹t
);

658 
BIO_sock_öô
();

659 
BIO_sock_˛ónup
();

660 
BIO_£t_t˝_ndñay
(
sock
,
tu∫_⁄
);

662 
BIO
 *
BIO_√w_sockë
(
sock
, 
˛o£_Êag
);

663 
BIO
 *
BIO_√w_dgøm
(
fd
, 
˛o£_Êag
);

664 
BIO
 *
BIO_√w_fd
(
fd
, 
˛o£_Êag
);

665 
BIO
 *
BIO_√w_c⁄√˘
(*
ho°_p‹t
);

666 
BIO
 *
BIO_√w_ac˚±
(*
ho°_p‹t
);

668 
BIO_√w_bio_∑ú
(
BIO
 **
bio1
, 
size_t
 
wrôebuf1
,

669 
BIO
 **
bio2
, 
size_t
 
wrôebuf2
);

675 
BIO_c›y_√xt_ªåy
(
BIO
 *
b
);

679 #ifde‡
__GNUC__


680 
	#__bio_h__©å__
 
__©åibuã__


	)

682 
	#__bio_h__©å__
(
x
)

	)

684 
BIO_¥ötf
(
BIO
 *
bio
, c⁄° *
f‹m©
, ...)

685 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,2,3)));

686 
BIO_v¥ötf
(
BIO
 *
bio
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

687 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,2,0)));

688 
BIO_¢¥ötf
(*
buf
, 
size_t
 
n
, c⁄° *
f‹m©
, ...)

689 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,3,4)));

690 
BIO_v¢¥ötf
(*
buf
, 
size_t
 
n
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

691 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,3,0)));

692 #unde‡
__bio_h__©å__


698 
ERR_lﬂd_BIO_°rögs
();

703 
	#BIO_F_ACPT_STATE
 100

	)

704 
	#BIO_F_BIO_ACCEPT
 101

	)

705 
	#BIO_F_BIO_BER_GET_HEADER
 102

	)

706 
	#BIO_F_BIO_CALLBACK_CTRL
 131

	)

707 
	#BIO_F_BIO_CTRL
 103

	)

708 
	#BIO_F_BIO_GETHOSTBYNAME
 120

	)

709 
	#BIO_F_BIO_GETS
 104

	)

710 
	#BIO_F_BIO_GET_ACCEPT_SOCKET
 105

	)

711 
	#BIO_F_BIO_GET_HOST_IP
 106

	)

712 
	#BIO_F_BIO_GET_PORT
 107

	)

713 
	#BIO_F_BIO_MAKE_PAIR
 121

	)

714 
	#BIO_F_BIO_NEW
 108

	)

715 
	#BIO_F_BIO_NEW_FILE
 109

	)

716 
	#BIO_F_BIO_NEW_MEM_BUF
 126

	)

717 
	#BIO_F_BIO_NREAD
 123

	)

718 
	#BIO_F_BIO_NREAD0
 124

	)

719 
	#BIO_F_BIO_NWRITE
 125

	)

720 
	#BIO_F_BIO_NWRITE0
 122

	)

721 
	#BIO_F_BIO_PUTS
 110

	)

722 
	#BIO_F_BIO_READ
 111

	)

723 
	#BIO_F_BIO_SOCK_INIT
 112

	)

724 
	#BIO_F_BIO_WRITE
 113

	)

725 
	#BIO_F_BUFFER_CTRL
 114

	)

726 
	#BIO_F_CONN_CTRL
 127

	)

727 
	#BIO_F_CONN_STATE
 115

	)

728 
	#BIO_F_FILE_CTRL
 116

	)

729 
	#BIO_F_FILE_READ
 130

	)

730 
	#BIO_F_LINEBUFFER_CTRL
 129

	)

731 
	#BIO_F_MEM_READ
 128

	)

732 
	#BIO_F_MEM_WRITE
 117

	)

733 
	#BIO_F_SSL_NEW
 118

	)

734 
	#BIO_F_WSASTARTUP
 119

	)

737 
	#BIO_R_ACCEPT_ERROR
 100

	)

738 
	#BIO_R_BAD_FOPEN_MODE
 101

	)

739 
	#BIO_R_BAD_HOSTNAME_LOOKUP
 102

	)

740 
	#BIO_R_BROKEN_PIPE
 124

	)

741 
	#BIO_R_CONNECT_ERROR
 103

	)

742 
	#BIO_R_EOF_ON_MEMORY_BIO
 127

	)

743 
	#BIO_R_ERROR_SETTING_NBIO
 104

	)

744 
	#BIO_R_ERROR_SETTING_NBIO_ON_ACCEPTED_SOCKET
 105

	)

745 
	#BIO_R_ERROR_SETTING_NBIO_ON_ACCEPT_SOCKET
 106

	)

746 
	#BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET
 107

	)

747 
	#BIO_R_INVALID_ARGUMENT
 125

	)

748 
	#BIO_R_INVALID_IP_ADDRESS
 108

	)

749 
	#BIO_R_IN_USE
 123

	)

750 
	#BIO_R_KEEPALIVE
 109

	)

751 
	#BIO_R_NBIO_CONNECT_ERROR
 110

	)

752 
	#BIO_R_NO_ACCEPT_PORT_SPECIFIED
 111

	)

753 
	#BIO_R_NO_HOSTNAME_SPECIFIED
 112

	)

754 
	#BIO_R_NO_PORT_DEFINED
 113

	)

755 
	#BIO_R_NO_PORT_SPECIFIED
 114

	)

756 
	#BIO_R_NO_SUCH_FILE
 128

	)

757 
	#BIO_R_NULL_PARAMETER
 115

	)

758 
	#BIO_R_TAG_MISMATCH
 116

	)

759 
	#BIO_R_UNABLE_TO_BIND_SOCKET
 117

	)

760 
	#BIO_R_UNABLE_TO_CREATE_SOCKET
 118

	)

761 
	#BIO_R_UNABLE_TO_LISTEN_SOCKET
 119

	)

762 
	#BIO_R_UNINITIALIZED
 120

	)

763 
	#BIO_R_UNSUPPORTED_METHOD
 121

	)

764 
	#BIO_R_WRITE_TO_READ_ONLY_BIO
 126

	)

765 
	#BIO_R_WSASTARTUP
 122

	)

767 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/crypto.h

117 #i‚de‡
HEADER_CRYPTO_H


118 
	#HEADER_CRYPTO_H


	)

120 
	~<°dlib.h
>

122 
	~<›ís¶/e_os2.h
>

124 #i‚de‡
OPENSSL_NO_FP_API


125 
	~<°dio.h
>

128 
	~<›ís¶/°ack.h
>

129 
	~<›ís¶/ß„°ack.h
>

130 
	~<›ís¶/›ís¶v.h
>

131 
	~<›ís¶/os¶_typ.h
>

133 #ifde‡
CHARSET_EBCDIC


134 
	~<›ís¶/ebcdic.h
>

139 
	~<›ís¶/symhacks.h
>

141 #ifde‡ 
__˝lu•lus


148 
	#SSLEAY_VERSION_NUMBER
 
OPENSSL_VERSION_NUMBER


	)

149 
	#SSLEAY_VERSION
 0

	)

151 
	#SSLEAY_CFLAGS
 2

	)

152 
	#SSLEAY_BUILT_ON
 3

	)

153 
	#SSLEAY_PLATFORM
 4

	)

154 
	#SSLEAY_DIR
 5

	)

158 
¸y±o_ex_d©a_°
 
	tCRYPTO_EX_DATA
;

160 
	tCRYPTO_EX_√w
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

161 
	tidx
, 
	t¨gl
, *
	t¨gp
);

163 
	tCRYPTO_EX_‰ì
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

164 
	tidx
, 
	t¨gl
, *
	t¨gp
);

166 
	tCRYPTO_EX_dup
(
	tCRYPTO_EX_DATA
 *
	tto
, CRYPTO_EX_DATA *
	t‰om
, *
	t‰om_d
,

167 
	tidx
, 
	t¨gl
, *
	t¨gp
);

171 
	s›ís¶_ôem_°


173 
code
;

174 *
vÆue
;

175 
size_t
 
vÆue_size
;

176 
size_t
 *
vÆue_Àngth
;

177 } 
	tOPENSSL_ITEM
;

184 
	#CRYPTO_LOCK_ERR
 1

	)

185 
	#CRYPTO_LOCK_EX_DATA
 2

	)

186 
	#CRYPTO_LOCK_X509
 3

	)

187 
	#CRYPTO_LOCK_X509_INFO
 4

	)

188 
	#CRYPTO_LOCK_X509_PKEY
 5

	)

189 
	#CRYPTO_LOCK_X509_CRL
 6

	)

190 
	#CRYPTO_LOCK_X509_REQ
 7

	)

191 
	#CRYPTO_LOCK_DSA
 8

	)

192 
	#CRYPTO_LOCK_RSA
 9

	)

193 
	#CRYPTO_LOCK_EVP_PKEY
 10

	)

194 
	#CRYPTO_LOCK_X509_STORE
 11

	)

195 
	#CRYPTO_LOCK_SSL_CTX
 12

	)

196 
	#CRYPTO_LOCK_SSL_CERT
 13

	)

197 
	#CRYPTO_LOCK_SSL_SESSION
 14

	)

198 
	#CRYPTO_LOCK_SSL_SESS_CERT
 15

	)

199 
	#CRYPTO_LOCK_SSL
 16

	)

200 
	#CRYPTO_LOCK_SSL_METHOD
 17

	)

201 
	#CRYPTO_LOCK_RAND
 18

	)

202 
	#CRYPTO_LOCK_RAND2
 19

	)

203 
	#CRYPTO_LOCK_MALLOC
 20

	)

204 
	#CRYPTO_LOCK_BIO
 21

	)

205 
	#CRYPTO_LOCK_GETHOSTBYNAME
 22

	)

206 
	#CRYPTO_LOCK_GETSERVBYNAME
 23

	)

207 
	#CRYPTO_LOCK_READDIR
 24

	)

208 
	#CRYPTO_LOCK_RSA_BLINDING
 25

	)

209 
	#CRYPTO_LOCK_DH
 26

	)

210 
	#CRYPTO_LOCK_MALLOC2
 27

	)

211 
	#CRYPTO_LOCK_DSO
 28

	)

212 
	#CRYPTO_LOCK_DYNLOCK
 29

	)

213 
	#CRYPTO_LOCK_ENGINE
 30

	)

214 
	#CRYPTO_LOCK_UI
 31

	)

215 
	#CRYPTO_LOCK_ECDSA
 32

	)

216 
	#CRYPTO_LOCK_EC
 33

	)

217 
	#CRYPTO_LOCK_ECDH
 34

	)

218 
	#CRYPTO_LOCK_BN
 35

	)

219 
	#CRYPTO_LOCK_EC_PRE_COMP
 36

	)

220 
	#CRYPTO_LOCK_STORE
 37

	)

221 
	#CRYPTO_LOCK_COMP
 38

	)

222 
	#CRYPTO_NUM_LOCKS
 39

	)

224 
	#CRYPTO_LOCK
 1

	)

225 
	#CRYPTO_UNLOCK
 2

	)

226 
	#CRYPTO_READ
 4

	)

227 
	#CRYPTO_WRITE
 8

	)

229 #i‚de‡
OPENSSL_NO_LOCKING


230 #i‚de‡
CRYPTO_w_lock


231 
	#CRYPTO_w_lock
(
ty≥
) \

232 
	`CRYPTO_lock
(
CRYPTO_LOCK
|
CRYPTO_WRITE
,
ty≥
,
__FILE__
,
__LINE__
)

	)

233 
	#CRYPTO_w_u∆ock
(
ty≥
) \

234 
	`CRYPTO_lock
(
CRYPTO_UNLOCK
|
CRYPTO_WRITE
,
ty≥
,
__FILE__
,
__LINE__
)

	)

235 
	#CRYPTO_r_lock
(
ty≥
) \

236 
	`CRYPTO_lock
(
CRYPTO_LOCK
|
CRYPTO_READ
,
ty≥
,
__FILE__
,
__LINE__
)

	)

237 
	#CRYPTO_r_u∆ock
(
ty≥
) \

238 
	`CRYPTO_lock
(
CRYPTO_UNLOCK
|
CRYPTO_READ
,
ty≥
,
__FILE__
,
__LINE__
)

	)

239 
	#CRYPTO_add
(
addr
,
amou¡
,
ty≥
) \

240 
	`CRYPTO_add_lock
(
addr
,
amou¡
,
ty≥
,
__FILE__
,
__LINE__
)

	)

243 
	#CRYPTO_w_lock
(
a
)

	)

244 
	#CRYPTO_w_u∆ock
(
a
)

	)

245 
	#CRYPTO_r_lock
(
a
)

	)

246 
	#CRYPTO_r_u∆ock
(
a
)

	)

247 
	#CRYPTO_add
(
a
,
b
,
c
Ë((*◊))+=(b))

	)

256 
ª„ªn˚s
;

257 
CRYPTO_dy∆ock_vÆue
 *
d©a
;

258 } 
	tCRYPTO_dy∆ock
;

264 
	#CRYPTO_MEM_CHECK_OFF
 0x0

	)

265 
	#CRYPTO_MEM_CHECK_ON
 0x1

	)

266 
	#CRYPTO_MEM_CHECK_ENABLE
 0x2

	)

267 
	#CRYPTO_MEM_CHECK_DISABLE
 0x3

	)

273 
	#V_CRYPTO_MDEBUG_TIME
 0x1

	)

275 
	#V_CRYPTO_MDEBUG_THREAD
 0x2

	)

277 
	#V_CRYPTO_MDEBUG_ALL
 (
V_CRYPTO_MDEBUG_TIME
 | 
V_CRYPTO_MDEBUG_THREAD
)

	)

281 
bio_°
 
	tBIO_dummy
;

283 
	s¸y±o_ex_d©a_°


285 
STACK
 *
sk
;

286 
dummy
;

292 
	s¸y±o_ex_d©a_func_°


294 
¨gl
;

295 *
¨gp
;

296 
CRYPTO_EX_√w
 *
√w_func
;

297 
CRYPTO_EX_‰ì
 *
‰ì_func
;

298 
CRYPTO_EX_dup
 *
dup_func
;

299 } 
	tCRYPTO_EX_DATA_FUNCS
;

301 
DECLARE_STACK_OF
(
CRYPTO_EX_DATA_FUNCS
)

307 
	#CRYPTO_EX_INDEX_BIO
 0

	)

308 
	#CRYPTO_EX_INDEX_SSL
 1

	)

309 
	#CRYPTO_EX_INDEX_SSL_CTX
 2

	)

310 
	#CRYPTO_EX_INDEX_SSL_SESSION
 3

	)

311 
	#CRYPTO_EX_INDEX_X509_STORE
 4

	)

312 
	#CRYPTO_EX_INDEX_X509_STORE_CTX
 5

	)

313 
	#CRYPTO_EX_INDEX_RSA
 6

	)

314 
	#CRYPTO_EX_INDEX_DSA
 7

	)

315 
	#CRYPTO_EX_INDEX_DH
 8

	)

316 
	#CRYPTO_EX_INDEX_ENGINE
 9

	)

317 
	#CRYPTO_EX_INDEX_X509
 10

	)

318 
	#CRYPTO_EX_INDEX_UI
 11

	)

319 
	#CRYPTO_EX_INDEX_ECDSA
 12

	)

320 
	#CRYPTO_EX_INDEX_ECDH
 13

	)

321 
	#CRYPTO_EX_INDEX_COMP
 14

	)

322 
	#CRYPTO_EX_INDEX_STORE
 15

	)

326 
	#CRYPTO_EX_INDEX_USER
 100

	)

333 
	#CRYPTO_mÆloc_öô
(Ë
	`CRYPTO_£t_mem_fun˘i⁄s
(\

334 
mÆloc
, 
ªÆloc
, 
‰ì
)

	)

336 #i‡
deföed
 
CRYPTO_MDEBUG_ALL
 || deföed 
CRYPTO_MDEBUG_TIME
 || deföed 
CRYPTO_MDEBUG_THREAD


337 #i‚de‡
CRYPTO_MDEBUG


338 
	#CRYPTO_MDEBUG


	)

344 
	#CRYPTO_mÆloc_debug_öô
() do {\

345 
	`CRYPTO_£t_mem_debug_fun˘i⁄s
(\

346 
CRYPTO_dbg_mÆloc
,\

347 
CRYPTO_dbg_ªÆloc
,\

348 
CRYPTO_dbg_‰ì
,\

349 
CRYPTO_dbg_£t_›ti⁄s
,\

350 
CRYPTO_dbg_gë_›ti⁄s
);\

351 } 0)

	)

353 
CRYPTO_mem_˘æ
(
mode
);

354 
CRYPTO_is_mem_check_⁄
();

357 
	#MemCheck_°¨t
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_ON
)

	)

358 
	#MemCheck_°›
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_OFF
)

	)

361 
	#MemCheck_⁄
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_ENABLE
)

	)

362 
	#MemCheck_off
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_DISABLE
)

	)

363 
	#is_MemCheck_⁄
(Ë
	`CRYPTO_is_mem_check_⁄
()

	)

365 
	#OPENSSL_mÆloc
(
num
Ë
	`CRYPTO_mÆloc
((Íum,
__FILE__
,
__LINE__
)

	)

366 
	#OPENSSL_ªÆloc
(
addr
,
num
) \

367 
	`CRYPTO_ªÆloc
((*)
addr
,()
num
,
__FILE__
,
__LINE__
)

	)

368 
	#OPENSSL_ªÆloc_˛ón
(
addr
,
ﬁd_num
,
num
) \

369 
	`CRYPTO_ªÆloc_˛ón
(
addr
,
ﬁd_num
,
num
,
__FILE__
,
__LINE__
)

	)

370 
	#OPENSSL_ªmÆloc
(
addr
,
num
) \

371 
	`CRYPTO_ªmÆloc
((**)
addr
,()
num
,
__FILE__
,
__LINE__
)

	)

372 
	#OPENSSL_‰ìFunc
 
CRYPTO_‰ì


	)

373 
	#OPENSSL_‰ì
(
addr
Ë
	`CRYPTO_‰ì
◊ddr)

	)

375 
	#OPENSSL_mÆloc_locked
(
num
) \

376 
	`CRYPTO_mÆloc_locked
(()
num
,
__FILE__
,
__LINE__
)

	)

377 
	#OPENSSL_‰ì_locked
(
addr
Ë
	`CRYPTO_‰ì_locked
◊ddr)

	)

380 c⁄° *
SSLóy_vîsi⁄
(
ty≥
);

381 
SSLóy
();

383 
OPENSSL_is£tugid
();

386 
°_CRYPTO_EX_DATA_IMPL
 
	tCRYPTO_EX_DATA_IMPL
;

388 c⁄° 
CRYPTO_EX_DATA_IMPL
 *
CRYPTO_gë_ex_d©a_im∂emíèti⁄
();

390 
CRYPTO_£t_ex_d©a_im∂emíèti⁄
(c⁄° 
CRYPTO_EX_DATA_IMPL
 *
i
);

392 
CRYPTO_ex_d©a_√w_˛ass
();

394 
CRYPTO_gë_ex_√w_ödex
(
˛ass_ödex
, 
¨gl
, *
¨gp
,

395 
CRYPTO_EX_√w
 *
√w_func
, 
CRYPTO_EX_dup
 *
dup_func
,

396 
CRYPTO_EX_‰ì
 *
‰ì_func
);

399 
CRYPTO_√w_ex_d©a
(
˛ass_ödex
, *
obj
, 
CRYPTO_EX_DATA
 *
ad
);

400 
CRYPTO_dup_ex_d©a
(
˛ass_ödex
, 
CRYPTO_EX_DATA
 *
to
,

401 
CRYPTO_EX_DATA
 *
‰om
);

402 
CRYPTO_‰ì_ex_d©a
(
˛ass_ödex
, *
obj
, 
CRYPTO_EX_DATA
 *
ad
);

405 
CRYPTO_£t_ex_d©a
(
CRYPTO_EX_DATA
 *
ad
, 
idx
, *
vÆ
);

406 *
CRYPTO_gë_ex_d©a
(c⁄° 
CRYPTO_EX_DATA
 *
ad
,
idx
);

409 
CRYPTO_˛ónup_Æl_ex_d©a
();

411 
CRYPTO_gë_√w_lockid
(*
«me
);

413 
CRYPTO_num_locks
();

414 
CRYPTO_lock
(
mode
, 
ty≥
,c⁄° *
fûe
,
löe
);

415 
CRYPTO_£t_lockög_ˇŒback
((*
func
)(
mode
,
ty≥
,

416 c⁄° *
fûe
,
löe
));

417 (*
CRYPTO_gë_lockög_ˇŒback
())(
mode
,
ty≥
,c⁄° *
fûe
,

418 
löe
);

419 
CRYPTO_£t_add_lock_ˇŒback
((*
func
)(*
num
,
mou¡
,
ty≥
,

420 c⁄° *
fûe
, 
löe
));

421 (*
CRYPTO_gë_add_lock_ˇŒback
())(*
num
,
mou¡
,
ty≥
,

422 c⁄° *
fûe
,
löe
);

423 
CRYPTO_£t_id_ˇŒback
((*
func
)());

424 (*
CRYPTO_gë_id_ˇŒback
())();

425 
CRYPTO_thªad_id
();

426 c⁄° *
CRYPTO_gë_lock_«me
(
ty≥
);

427 
CRYPTO_add_lock
(*
poöãr
,
amou¡
,
ty≥
, c⁄° *
fûe
,

428 
löe
);

430 
CRYPTO_gë_√w_dy∆ockid
();

431 
CRYPTO_de°roy_dy∆ockid
(
i
);

432 
CRYPTO_dy∆ock_vÆue
 *
CRYPTO_gë_dy∆ock_vÆue
(
i
);

433 
CRYPTO_£t_dy∆ock_¸óã_ˇŒback
(
CRYPTO_dy∆ock_vÆue
 *(*
dyn_¸óã_fun˘i⁄
)(c⁄° *
fûe
, 
löe
));

434 
CRYPTO_£t_dy∆ock_lock_ˇŒback
((*
dyn_lock_fun˘i⁄
)(
mode
, 
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
, 
löe
));

435 
CRYPTO_£t_dy∆ock_de°roy_ˇŒback
((*
dyn_de°roy_fun˘i⁄
)(
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
, 
löe
));

436 
CRYPTO_dy∆ock_vÆue
 *(*
CRYPTO_gë_dy∆ock_¸óã_ˇŒback
())(c⁄° *
fûe
,
löe
);

437 (*
CRYPTO_gë_dy∆ock_lock_ˇŒback
())(
mode
, 
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
,
löe
);

438 (*
CRYPTO_gë_dy∆ock_de°roy_ˇŒback
())(
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
,
löe
);

442 
CRYPTO_£t_mem_fun˘i⁄s
(*(*
m
)(
size_t
),*(*
r
)(*,size_t), (*
f
)(*));

443 
CRYPTO_£t_locked_mem_fun˘i⁄s
(*(*
m
)(
size_t
), (*
‰ì_func
)(*));

444 
CRYPTO_£t_mem_ex_fun˘i⁄s
(*(*
m
)(
size_t
,const *,),

445 *(*
r
)(*,
size_t
,const *,),

446 (*
f
)(*));

447 
CRYPTO_£t_locked_mem_ex_fun˘i⁄s
(*(*
m
)(
size_t
,const *,),

448 (*
‰ì_func
)(*));

449 
CRYPTO_£t_mem_debug_fun˘i⁄s
((*
m
)(*,,const *,,),

450 (*
r
)(*,*,,const *,,),

451 (*
f
)(*,),

452 (*
so
)(),

453 (*
go
)());

454 
CRYPTO_gë_mem_fun˘i⁄s
(*(**
m
)(
size_t
),*(**
r
)(*, size_t), (**
f
)(*));

455 
CRYPTO_gë_locked_mem_fun˘i⁄s
(*(**
m
)(
size_t
), (**
f
)(*));

456 
CRYPTO_gë_mem_ex_fun˘i⁄s
(*(**
m
)(
size_t
,const *,),

457 *(**
r
)(*, 
size_t
,const *,),

458 (**
f
)(*));

459 
CRYPTO_gë_locked_mem_ex_fun˘i⁄s
(*(**
m
)(
size_t
,const *,),

460 (**
f
)(*));

461 
CRYPTO_gë_mem_debug_fun˘i⁄s
((**
m
)(*,,const *,,),

462 (**
r
)(*,*,,const *,,),

463 (**
f
)(*,),

464 (**
so
)(),

465 (**
go
)());

467 *
CRYPTO_mÆloc_locked
(
num
, c⁄° *
fûe
, 
löe
);

468 
CRYPTO_‰ì_locked
(*);

469 *
CRYPTO_mÆloc
(
num
, c⁄° *
fûe
, 
löe
);

470 
CRYPTO_‰ì
(*);

471 *
CRYPTO_ªÆloc
(*
addr
,
num
, c⁄° *
fûe
, 
löe
);

472 *
CRYPTO_ªÆloc_˛ón
(*
addr
,
ﬁd_num
,
num
,c⁄° *
fûe
,

473 
löe
);

474 *
CRYPTO_ªmÆloc
(*
addr
,
num
, c⁄° *
fûe
, 
löe
);

476 
OPENSSL_˛ón£
(*
±r
, 
size_t
 
Àn
);

478 
CRYPTO_£t_mem_debug_›ti⁄s
(
bôs
);

479 
CRYPTO_gë_mem_debug_›ti⁄s
();

481 
	#CRYPTO_push_öfo
(
öfo
) \

482 
	`CRYPTO_push_öfo_
(
öfo
, 
__FILE__
, 
__LINE__
);

	)

483 
CRYPTO_push_öfo_
(c⁄° *
öfo
, c⁄° *
fûe
, 
löe
);

484 
CRYPTO_p›_öfo
();

485 
CRYPTO_ªmove_Æl_öfo
();

495 
CRYPTO_dbg_mÆloc
(*
addr
,
num
,c⁄° *
fûe
,
löe
,
bef‹e_p
);

496 
CRYPTO_dbg_ªÆloc
(*
addr1
,*
addr2
,
num
,c⁄° *
fûe
,
löe
,
bef‹e_p
);

497 
CRYPTO_dbg_‰ì
(*
addr
,
bef‹e_p
);

506 
CRYPTO_dbg_£t_›ti⁄s
(
bôs
);

507 
CRYPTO_dbg_gë_›ti⁄s
();

510 #i‚de‡
OPENSSL_NO_FP_API


511 
CRYPTO_mem_Àaks_Â
(
FILE
 *);

513 
CRYPTO_mem_Àaks
(
bio_°
 *
bio
);

515 *
	tCRYPTO_MEM_LEAK_CB
(, const *, , , *);

516 
CRYPTO_mem_Àaks_cb
(
CRYPTO_MEM_LEAK_CB
 *
cb
);

519 
O≥nSSLDõ
(c⁄° *
fûe
,
löe
,c⁄° *
as£πi⁄
);

520 
	#OPENSSL_as£π
(
e
Ë()(”Ë? 0 : (
	`O≥nSSLDõ
(
__FILE__
, 
__LINE__
, #e),1))

	)

522 *
OPENSSL_ü32ˇp_loc
();

523 
	#OPENSSL_ü32ˇp
 (*(
	`OPENSSL_ü32ˇp_loc
()))

	)

529 
ERR_lﬂd_CRYPTO_°rögs
();

534 
	#CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX
 100

	)

535 
	#CRYPTO_F_CRYPTO_GET_NEW_DYNLOCKID
 103

	)

536 
	#CRYPTO_F_CRYPTO_GET_NEW_LOCKID
 101

	)

537 
	#CRYPTO_F_CRYPTO_SET_EX_DATA
 102

	)

538 
	#CRYPTO_F_DEF_ADD_INDEX
 104

	)

539 
	#CRYPTO_F_DEF_GET_CLASS
 105

	)

540 
	#CRYPTO_F_INT_DUP_EX_DATA
 106

	)

541 
	#CRYPTO_F_INT_FREE_EX_DATA
 107

	)

542 
	#CRYPTO_F_INT_NEW_EX_DATA
 108

	)

545 
	#CRYPTO_R_NO_DYNLOCK_CREATE_CALLBACK
 100

	)

547 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/err.h

59 #i‚de‡
HEADER_ERR_H


60 
	#HEADER_ERR_H


	)

62 
	~<›ís¶/e_os2.h
>

64 #i‚de‡
OPENSSL_NO_FP_API


65 
	~<°dio.h
>

66 
	~<°dlib.h
>

69 
	~<›ís¶/os¶_typ.h
>

70 #i‚de‡
OPENSSL_NO_BIO


71 
	~<›ís¶/bio.h
>

73 #i‚de‡
OPENSSL_NO_LHASH


74 
	~<›ís¶/lhash.h
>

77 #ifdef 
__˝lu•lus


81 #i‚de‡
OPENSSL_NO_ERR


82 
	#ERR_PUT_îr‹
(
a
,
b
,
c
,
d
,
e
Ë
	`ERR_put_îr‹
◊,b,c,d,e)

	)

84 
	#ERR_PUT_îr‹
(
a
,
b
,
c
,
d
,
e
Ë
	`ERR_put_îr‹
◊,b,c,
NULL
,0)

	)

87 
	~<î∫o.h
>

89 
	#ERR_TXT_MALLOCED
 0x01

	)

90 
	#ERR_TXT_STRING
 0x02

	)

92 
	#ERR_FLAG_MARK
 0x01

	)

94 
	#ERR_NUM_ERRORS
 16

	)

95 
	sîr_°©e_°


97 
pid
;

98 
îr_Êags
[
ERR_NUM_ERRORS
];

99 
îr_buf„r
[
ERR_NUM_ERRORS
];

100 *
îr_d©a
[
ERR_NUM_ERRORS
];

101 
îr_d©a_Êags
[
ERR_NUM_ERRORS
];

102 c⁄° *
îr_fûe
[
ERR_NUM_ERRORS
];

103 
îr_löe
[
ERR_NUM_ERRORS
];

104 
t›
,
bŸtom
;

105 } 
	tERR_STATE
;

108 
	#ERR_LIB_NONE
 1

	)

109 
	#ERR_LIB_SYS
 2

	)

110 
	#ERR_LIB_BN
 3

	)

111 
	#ERR_LIB_RSA
 4

	)

112 
	#ERR_LIB_DH
 5

	)

113 
	#ERR_LIB_EVP
 6

	)

114 
	#ERR_LIB_BUF
 7

	)

115 
	#ERR_LIB_OBJ
 8

	)

116 
	#ERR_LIB_PEM
 9

	)

117 
	#ERR_LIB_DSA
 10

	)

118 
	#ERR_LIB_X509
 11

	)

120 
	#ERR_LIB_ASN1
 13

	)

121 
	#ERR_LIB_CONF
 14

	)

122 
	#ERR_LIB_CRYPTO
 15

	)

123 
	#ERR_LIB_EC
 16

	)

124 
	#ERR_LIB_SSL
 20

	)

130 
	#ERR_LIB_BIO
 32

	)

131 
	#ERR_LIB_PKCS7
 33

	)

132 
	#ERR_LIB_X509V3
 34

	)

133 
	#ERR_LIB_PKCS12
 35

	)

134 
	#ERR_LIB_RAND
 36

	)

135 
	#ERR_LIB_DSO
 37

	)

136 
	#ERR_LIB_ENGINE
 38

	)

137 
	#ERR_LIB_OCSP
 39

	)

138 
	#ERR_LIB_UI
 40

	)

139 
	#ERR_LIB_COMP
 41

	)

140 
	#ERR_LIB_ECDSA
 42

	)

141 
	#ERR_LIB_ECDH
 43

	)

142 
	#ERR_LIB_STORE
 44

	)

144 
	#ERR_LIB_USER
 128

	)

146 
	#SYSîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_SYS
,(f),‘),
__FILE__
,
__LINE__
)

	)

147 
	#BNîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BN
,(f),‘),
__FILE__
,
__LINE__
)

	)

148 
	#RSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_RSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

149 
	#DHîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DH
,(f),‘),
__FILE__
,
__LINE__
)

	)

150 
	#EVPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_EVP
,(f),‘),
__FILE__
,
__LINE__
)

	)

151 
	#BUFîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BUF
,(f),‘),
__FILE__
,
__LINE__
)

	)

152 
	#OBJîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_OBJ
,(f),‘),
__FILE__
,
__LINE__
)

	)

153 
	#PEMîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PEM
,(f),‘),
__FILE__
,
__LINE__
)

	)

154 
	#DSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

155 
	#X509îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_X509
,(f),‘),
__FILE__
,
__LINE__
)

	)

156 
	#ASN1îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ASN1
,(f),‘),
__FILE__
,
__LINE__
)

	)

157 
	#CONFîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_CONF
,(f),‘),
__FILE__
,
__LINE__
)

	)

158 
	#CRYPTOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_CRYPTO
,(f),‘),
__FILE__
,
__LINE__
)

	)

159 
	#ECîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_EC
,(f),‘),
__FILE__
,
__LINE__
)

	)

160 
	#SSLîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_SSL
,(f),‘),
__FILE__
,
__LINE__
)

	)

161 
	#BIOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BIO
,(f),‘),
__FILE__
,
__LINE__
)

	)

162 
	#PKCS7îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PKCS7
,(f),‘),
__FILE__
,
__LINE__
)

	)

163 
	#X509V3îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_X509V3
,(f),‘),
__FILE__
,
__LINE__
)

	)

164 
	#PKCS12îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PKCS12
,(f),‘),
__FILE__
,
__LINE__
)

	)

165 
	#RANDîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_RAND
,(f),‘),
__FILE__
,
__LINE__
)

	)

166 
	#DSOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DSO
,(f),‘),
__FILE__
,
__LINE__
)

	)

167 
	#ENGINEîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ENGINE
,(f),‘),
__FILE__
,
__LINE__
)

	)

168 
	#OCSPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_OCSP
,(f),‘),
__FILE__
,
__LINE__
)

	)

169 
	#UIîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_UI
,(f),‘),
__FILE__
,
__LINE__
)

	)

170 
	#COMPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_COMP
,(f),‘),
__FILE__
,
__LINE__
)

	)

171 
	#ECDSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ECDSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

172 
	#ECDHîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ECDH
,(f),‘),
__FILE__
,
__LINE__
)

	)

173 
	#STOREîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_STORE
,(f),‘),
__FILE__
,
__LINE__
)

	)

177 
	#ERR_PACK
(
l
,
f
,
r
) ((((()l)&0xffL)*0x1000000)| \

178 (((()
f
)&0xfffL)*0x1000)| \

179 (((()
r
)&0xfffL)))

	)

180 
	#ERR_GET_LIB
(
l
Ë()((((Ó)>>24L)&0xffL)

	)

181 
	#ERR_GET_FUNC
(
l
Ë()((((Ó)>>12L)&0xfffL)

	)

182 
	#ERR_GET_REASON
(
l
Ë()(÷)&0xfffL)

	)

183 
	#ERR_FATAL_ERROR
(
l
Ë()(÷)&
ERR_R_FATAL
)

	)

187 
	#SYS_F_FOPEN
 1

	)

188 
	#SYS_F_CONNECT
 2

	)

189 
	#SYS_F_GETSERVBYNAME
 3

	)

190 
	#SYS_F_SOCKET
 4

	)

191 
	#SYS_F_IOCTLSOCKET
 5

	)

192 
	#SYS_F_BIND
 6

	)

193 
	#SYS_F_LISTEN
 7

	)

194 
	#SYS_F_ACCEPT
 8

	)

195 
	#SYS_F_WSASTARTUP
 9

	)

196 
	#SYS_F_OPENDIR
 10

	)

197 
	#SYS_F_FREAD
 11

	)

201 
	#ERR_R_SYS_LIB
 
ERR_LIB_SYS


	)

202 
	#ERR_R_BN_LIB
 
ERR_LIB_BN


	)

203 
	#ERR_R_RSA_LIB
 
ERR_LIB_RSA


	)

204 
	#ERR_R_DH_LIB
 
ERR_LIB_DH


	)

205 
	#ERR_R_EVP_LIB
 
ERR_LIB_EVP


	)

206 
	#ERR_R_BUF_LIB
 
ERR_LIB_BUF


	)

207 
	#ERR_R_OBJ_LIB
 
ERR_LIB_OBJ


	)

208 
	#ERR_R_PEM_LIB
 
ERR_LIB_PEM


	)

209 
	#ERR_R_DSA_LIB
 
ERR_LIB_DSA


	)

210 
	#ERR_R_X509_LIB
 
ERR_LIB_X509


	)

211 
	#ERR_R_ASN1_LIB
 
ERR_LIB_ASN1


	)

212 
	#ERR_R_CONF_LIB
 
ERR_LIB_CONF


	)

213 
	#ERR_R_CRYPTO_LIB
 
ERR_LIB_CRYPTO


	)

214 
	#ERR_R_EC_LIB
 
ERR_LIB_EC


	)

215 
	#ERR_R_SSL_LIB
 
ERR_LIB_SSL


	)

216 
	#ERR_R_BIO_LIB
 
ERR_LIB_BIO


	)

217 
	#ERR_R_PKCS7_LIB
 
ERR_LIB_PKCS7


	)

218 
	#ERR_R_X509V3_LIB
 
ERR_LIB_X509V3


	)

219 
	#ERR_R_PKCS12_LIB
 
ERR_LIB_PKCS12


	)

220 
	#ERR_R_RAND_LIB
 
ERR_LIB_RAND


	)

221 
	#ERR_R_DSO_LIB
 
ERR_LIB_DSO


	)

222 
	#ERR_R_ENGINE_LIB
 
ERR_LIB_ENGINE


	)

223 
	#ERR_R_OCSP_LIB
 
ERR_LIB_OCSP


	)

224 
	#ERR_R_UI_LIB
 
ERR_LIB_UI


	)

225 
	#ERR_R_COMP_LIB
 
ERR_LIB_COMP


	)

226 
	#ERR_R_ECDSA_LIB
 
ERR_LIB_ECDSA


	)

227 
	#ERR_R_ECDH_LIB
 
ERR_LIB_ECDH


	)

228 
	#ERR_R_STORE_LIB
 
ERR_LIB_STORE


	)

230 
	#ERR_R_NESTED_ASN1_ERROR
 58

	)

231 
	#ERR_R_BAD_ASN1_OBJECT_HEADER
 59

	)

232 
	#ERR_R_BAD_GET_ASN1_OBJECT_CALL
 60

	)

233 
	#ERR_R_EXPECTING_AN_ASN1_SEQUENCE
 61

	)

234 
	#ERR_R_ASN1_LENGTH_MISMATCH
 62

	)

235 
	#ERR_R_MISSING_ASN1_EOS
 63

	)

238 
	#ERR_R_FATAL
 64

	)

239 
	#ERR_R_MALLOC_FAILURE
 (1|
ERR_R_FATAL
)

	)

240 
	#ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED
 (2|
ERR_R_FATAL
)

	)

241 
	#ERR_R_PASSED_NULL_PARAMETER
 (3|
ERR_R_FATAL
)

	)

242 
	#ERR_R_INTERNAL_ERROR
 (4|
ERR_R_FATAL
)

	)

243 
	#ERR_R_DISABLED
 (5|
ERR_R_FATAL
)

	)

249 
	sERR_°rög_d©a_°


251 
îr‹
;

252 c⁄° *
°rög
;

253 } 
	tERR_STRING_DATA
;

255 
ERR_put_îr‹
(
lib
, 
func
,
ªas⁄
,c⁄° *
fûe
,
löe
);

256 
ERR_£t_îr‹_d©a
(*
d©a
,
Êags
);

258 
ERR_gë_îr‹
();

259 
ERR_gë_îr‹_löe
(c⁄° **
fûe
,*
löe
);

260 
ERR_gë_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

261 c⁄° **
d©a
, *
Êags
);

262 
ERR_≥ek_îr‹
();

263 
ERR_≥ek_îr‹_löe
(c⁄° **
fûe
,*
löe
);

264 
ERR_≥ek_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

265 c⁄° **
d©a
,*
Êags
);

266 
ERR_≥ek_œ°_îr‹
();

267 
ERR_≥ek_œ°_îr‹_löe
(c⁄° **
fûe
,*
löe
);

268 
ERR_≥ek_œ°_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

269 c⁄° **
d©a
,*
Êags
);

270 
ERR_˛ór_îr‹
();

271 *
ERR_îr‹_°rög
(
e
,*
buf
);

272 
ERR_îr‹_°rög_n
(
e
, *
buf
, 
size_t
 
Àn
);

273 c⁄° *
ERR_lib_îr‹_°rög
(
e
);

274 c⁄° *
ERR_func_îr‹_°rög
(
e
);

275 c⁄° *
ERR_ªas⁄_îr‹_°rög
(
e
);

276 
ERR_¥öt_îr‹s_cb
((*
cb
)(c⁄° *
°r
, 
size_t
 
Àn
, *
u
),

277 *
u
);

278 #i‚de‡
OPENSSL_NO_FP_API


279 
ERR_¥öt_îr‹s_Â
(
FILE
 *
Â
);

281 #i‚de‡
OPENSSL_NO_BIO


282 
ERR_¥öt_îr‹s
(
BIO
 *
bp
);

283 
ERR_add_îr‹_d©a
(
num
, ...);

285 
ERR_lﬂd_°rögs
(
lib
,
ERR_STRING_DATA
 
°r
[]);

286 
ERR_u∆ﬂd_°rögs
(
lib
,
ERR_STRING_DATA
 
°r
[]);

287 
ERR_lﬂd_ERR_°rögs
();

288 
ERR_lﬂd_¸y±o_°rögs
();

289 
ERR_‰ì_°rögs
();

291 
ERR_ªmove_°©e
(
pid
);

292 
ERR_STATE
 *
ERR_gë_°©e
();

294 #i‚de‡
OPENSSL_NO_LHASH


295 
LHASH
 *
ERR_gë_°rög_èbÀ
();

296 
LHASH
 *
ERR_gë_îr_°©e_èbÀ
();

297 
ERR_ªÀa£_îr_°©e_èbÀ
(
LHASH
 **
hash
);

300 
ERR_gë_√xt_îr‹_libøry
();

302 
ERR_£t_m¨k
();

303 
ERR_p›_to_m¨k
();

309 c⁄° 
ERR_FNS
 *
ERR_gë_im∂emíèti⁄
();

312 
ERR_£t_im∂emíèti⁄
(c⁄° 
ERR_FNS
 *
‚s
);

314 #ifdef 
__˝lu•lus


	@/usr/include/openssl/md5.h

59 #i‚de‡
HEADER_MD5_H


60 
	#HEADER_MD5_H


	)

62 
	~<›ís¶/e_os2.h
>

64 #ifde‡ 
__˝lu•lus


68 #ifde‡
OPENSSL_NO_MD5


69 #îr‹ 
MD5
 
is
 
dißbÀd
.

79 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
__LP32__
)

80 
	#MD5_LONG
 

	)

81 #ñi‡
deföed
(
OPENSSL_SYS_CRAY
Ë|| deföed(
__ILP64__
)

82 
	#MD5_LONG
 

	)

83 
	#MD5_LONG_LOG2
 3

	)

92 
	#MD5_LONG
 

	)

95 
	#MD5_CBLOCK
 64

	)

96 
	#MD5_LBLOCK
 (
MD5_CBLOCK
/4)

	)

97 
	#MD5_DIGEST_LENGTH
 16

	)

99 
	sMD5°©e_°


101 
MD5_LONG
 
A
,
B
,
C
,
D
;

102 
MD5_LONG
 
Nl
,
Nh
;

103 
MD5_LONG
 
d©a
[
MD5_LBLOCK
];

104 
num
;

105 } 
	tMD5_CTX
;

107 
MD5_Inô
(
MD5_CTX
 *
c
);

108 
MD5_Upd©e
(
MD5_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

109 
MD5_FöÆ
(*
md
, 
MD5_CTX
 *
c
);

110 *
MD5
(c⁄° *
d
, 
size_t
 
n
, *
md
);

111 
MD5_Tønsf‹m
(
MD5_CTX
 *
c
, c⁄° *
b
);

112 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/rand.h

59 #i‚de‡
HEADER_RAND_H


60 
	#HEADER_RAND_H


	)

62 
	~<°dlib.h
>

63 
	~<›ís¶/os¶_typ.h
>

64 
	~<›ís¶/e_os2.h
>

66 #i‡
deföed
(
OPENSSL_SYS_WINDOWS
)

67 
	~<wödows.h
>

70 #ifde‡ 
__˝lu•lus


74 #i‡
deföed
(
OPENSSL_FIPS
)

75 
	#FIPS_RAND_SIZE_T
 
size_t


	)

81 
	sønd_mëh_°


83 (*
£ed
)(c⁄° *
buf
, 
num
);

84 (*
byãs
)(*
buf
, 
num
);

85 (*
˛ónup
)();

86 (*
add
)(c⁄° *
buf
, 
num
, 
íå›y
);

87 (*
p£ud‹™d
)(*
buf
, 
num
);

88 (*
°©us
)();

91 #ifde‡
BN_DEBUG


92 
ønd_¥edi˘abÀ
;

95 
RAND_£t_ønd_mëhod
(c⁄° 
RAND_METHOD
 *
mëh
);

96 c⁄° 
RAND_METHOD
 *
RAND_gë_ønd_mëhod
();

97 #i‚de‡
OPENSSL_NO_ENGINE


98 
RAND_£t_ønd_ígöe
(
ENGINE
 *
ígöe
);

100 
RAND_METHOD
 *
RAND_SSLóy
();

101 
RAND_˛ónup
();

102 
RAND_byãs
(*
buf
,
num
);

103 
RAND_p£udo_byãs
(*
buf
,
num
);

104 
RAND_£ed
(c⁄° *
buf
,
num
);

105 
RAND_add
(c⁄° *
buf
,
num
,
íå›y
);

106 
RAND_lﬂd_fûe
(c⁄° *
fûe
,
max_byãs
);

107 
RAND_wrôe_fûe
(c⁄° *
fûe
);

108 c⁄° *
RAND_fûe_«me
(*
fûe
,
size_t
 
num
);

109 
RAND_°©us
();

110 
RAND_quîy_egd_byãs
(c⁄° *
∑th
, *
buf
, 
byãs
);

111 
RAND_egd
(c⁄° *
∑th
);

112 
RAND_egd_byãs
(c⁄° *
∑th
,
byãs
);

113 
RAND_pﬁl
();

115 #i‡
deföed
(
OPENSSL_SYS_WINDOWS
Ë|| deföed(
OPENSSL_SYS_WIN32
)

117 
RAND_s¸ìn
();

118 
RAND_evít
(
UINT
, 
WPARAM
, 
LPARAM
);

126 
ERR_lﬂd_RAND_°rögs
();

131 
	#RAND_F_RAND_GET_RAND_METHOD
 101

	)

132 
	#RAND_F_SSLEAY_RAND_BYTES
 100

	)

135 
	#RAND_R_PRNG_NOT_SEEDED
 100

	)

137 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ssl.h

170 #i‚de‡
HEADER_SSL_H


171 
	#HEADER_SSL_H


	)

173 
	~<›ís¶/e_os2.h
>

175 #i‚de‡
OPENSSL_NO_COMP


176 
	~<›ís¶/comp.h
>

178 #i‚de‡
OPENSSL_NO_BIO


179 
	~<›ís¶/bio.h
>

181 #i‚de‡
OPENSSL_NO_DEPRECATED


182 #i‚de‡
OPENSSL_NO_X509


183 
	~<›ís¶/x509.h
>

185 
	~<›ís¶/¸y±o.h
>

186 
	~<›ís¶/lhash.h
>

187 
	~<›ís¶/buf„r.h
>

189 
	~<›ís¶/≥m.h
>

191 
	~<›ís¶/ks¶.h
>

192 
	~<›ís¶/ß„°ack.h
>

193 
	~<›ís¶/symhacks.h
>

195 #ifde‡ 
__˝lu•lus


203 
	#SSL_SESSION_ASN1_VERSION
 0x0001

	)

206 
	#SSL_TXT_NULL_WITH_MD5
 
SSL2_TXT_NULL_WITH_MD5


	)

207 
	#SSL_TXT_RC4_128_WITH_MD5
 
SSL2_TXT_RC4_128_WITH_MD5


	)

208 
	#SSL_TXT_RC4_128_EXPORT40_WITH_MD5
 
SSL2_TXT_RC4_128_EXPORT40_WITH_MD5


	)

209 
	#SSL_TXT_RC2_128_CBC_WITH_MD5
 
SSL2_TXT_RC2_128_CBC_WITH_MD5


	)

210 
	#SSL_TXT_RC2_128_CBC_EXPORT40_WITH_MD5
 
SSL2_TXT_RC2_128_CBC_EXPORT40_WITH_MD5


	)

211 
	#SSL_TXT_IDEA_128_CBC_WITH_MD5
 
SSL2_TXT_IDEA_128_CBC_WITH_MD5


	)

212 
	#SSL_TXT_DES_64_CBC_WITH_MD5
 
SSL2_TXT_DES_64_CBC_WITH_MD5


	)

213 
	#SSL_TXT_DES_64_CBC_WITH_SHA
 
SSL2_TXT_DES_64_CBC_WITH_SHA


	)

214 
	#SSL_TXT_DES_192_EDE3_CBC_WITH_MD5
 
SSL2_TXT_DES_192_EDE3_CBC_WITH_MD5


	)

215 
	#SSL_TXT_DES_192_EDE3_CBC_WITH_SHA
 
SSL2_TXT_DES_192_EDE3_CBC_WITH_SHA


	)

219 
	#SSL_TXT_KRB5_DES_64_CBC_SHA
 
SSL3_TXT_KRB5_DES_64_CBC_SHA


	)

220 
	#SSL_TXT_KRB5_DES_192_CBC3_SHA
 
SSL3_TXT_KRB5_DES_192_CBC3_SHA


	)

221 
	#SSL_TXT_KRB5_RC4_128_SHA
 
SSL3_TXT_KRB5_RC4_128_SHA


	)

222 
	#SSL_TXT_KRB5_IDEA_128_CBC_SHA
 
SSL3_TXT_KRB5_IDEA_128_CBC_SHA


	)

223 
	#SSL_TXT_KRB5_DES_64_CBC_MD5
 
SSL3_TXT_KRB5_DES_64_CBC_MD5


	)

224 
	#SSL_TXT_KRB5_DES_192_CBC3_MD5
 
SSL3_TXT_KRB5_DES_192_CBC3_MD5


	)

225 
	#SSL_TXT_KRB5_RC4_128_MD5
 
SSL3_TXT_KRB5_RC4_128_MD5


	)

226 
	#SSL_TXT_KRB5_IDEA_128_CBC_MD5
 
SSL3_TXT_KRB5_IDEA_128_CBC_MD5


	)

228 
	#SSL_TXT_KRB5_DES_40_CBC_SHA
 
SSL3_TXT_KRB5_DES_40_CBC_SHA


	)

229 
	#SSL_TXT_KRB5_RC2_40_CBC_SHA
 
SSL3_TXT_KRB5_RC2_40_CBC_SHA


	)

230 
	#SSL_TXT_KRB5_RC4_40_SHA
 
SSL3_TXT_KRB5_RC4_40_SHA


	)

231 
	#SSL_TXT_KRB5_DES_40_CBC_MD5
 
SSL3_TXT_KRB5_DES_40_CBC_MD5


	)

232 
	#SSL_TXT_KRB5_RC2_40_CBC_MD5
 
SSL3_TXT_KRB5_RC2_40_CBC_MD5


	)

233 
	#SSL_TXT_KRB5_RC4_40_MD5
 
SSL3_TXT_KRB5_RC4_40_MD5


	)

235 
	#SSL_TXT_KRB5_DES_40_CBC_SHA
 
SSL3_TXT_KRB5_DES_40_CBC_SHA


	)

236 
	#SSL_TXT_KRB5_DES_40_CBC_MD5
 
SSL3_TXT_KRB5_DES_40_CBC_MD5


	)

237 
	#SSL_TXT_KRB5_DES_64_CBC_SHA
 
SSL3_TXT_KRB5_DES_64_CBC_SHA


	)

238 
	#SSL_TXT_KRB5_DES_64_CBC_MD5
 
SSL3_TXT_KRB5_DES_64_CBC_MD5


	)

239 
	#SSL_TXT_KRB5_DES_192_CBC3_SHA
 
SSL3_TXT_KRB5_DES_192_CBC3_SHA


	)

240 
	#SSL_TXT_KRB5_DES_192_CBC3_MD5
 
SSL3_TXT_KRB5_DES_192_CBC3_MD5


	)

241 
	#SSL_MAX_KRB5_PRINCIPAL_LENGTH
 256

	)

243 
	#SSL_MAX_SSL_SESSION_ID_LENGTH
 32

	)

244 
	#SSL_MAX_SID_CTX_LENGTH
 32

	)

246 
	#SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES
 (512/8)

	)

247 
	#SSL_MAX_KEY_ARG_LENGTH
 8

	)

248 
	#SSL_MAX_MASTER_KEY_LENGTH
 48

	)

251 
	#SSL_TXT_LOW
 "LOW"

	)

252 
	#SSL_TXT_MEDIUM
 "MEDIUM"

	)

253 
	#SSL_TXT_HIGH
 "HIGH"

	)

254 
	#SSL_TXT_kFZA
 "kFZA"

	)

255 
	#SSL_TXT_aFZA
 "aFZA"

	)

256 
	#SSL_TXT_eFZA
 "eFZA"

	)

257 
	#SSL_TXT_FZA
 "FZA"

	)

259 
	#SSL_TXT_aNULL
 "aNULL"

	)

260 
	#SSL_TXT_eNULL
 "eNULL"

	)

261 
	#SSL_TXT_NULL
 "NULL"

	)

263 
	#SSL_TXT_kKRB5
 "kKRB5"

	)

264 
	#SSL_TXT_aKRB5
 "aKRB5"

	)

265 
	#SSL_TXT_KRB5
 "KRB5"

	)

267 
	#SSL_TXT_kRSA
 "kRSA"

	)

268 
	#SSL_TXT_kDHr
 "kDHr"

	)

269 
	#SSL_TXT_kDHd
 "kDHd"

	)

270 
	#SSL_TXT_kEDH
 "kEDH"

	)

271 
	#SSL_TXT_aRSA
 "aRSA"

	)

272 
	#SSL_TXT_aDSS
 "aDSS"

	)

273 
	#SSL_TXT_aDH
 "aDH"

	)

274 
	#SSL_TXT_DSS
 "DSS"

	)

275 
	#SSL_TXT_DH
 "DH"

	)

276 
	#SSL_TXT_EDH
 "EDH"

	)

277 
	#SSL_TXT_ADH
 "ADH"

	)

278 
	#SSL_TXT_RSA
 "RSA"

	)

279 
	#SSL_TXT_DES
 "DES"

	)

280 
	#SSL_TXT_3DES
 "3DES"

	)

281 
	#SSL_TXT_RC4
 "RC4"

	)

282 
	#SSL_TXT_RC2
 "RC2"

	)

283 
	#SSL_TXT_IDEA
 "IDEA"

	)

284 
	#SSL_TXT_AES
 "AES"

	)

285 
	#SSL_TXT_MD5
 "MD5"

	)

286 
	#SSL_TXT_SHA1
 "SHA1"

	)

287 
	#SSL_TXT_SHA
 "SHA"

	)

288 
	#SSL_TXT_EXP
 "EXP"

	)

289 
	#SSL_TXT_EXPORT
 "EXPORT"

	)

290 
	#SSL_TXT_EXP40
 "EXPORT40"

	)

291 
	#SSL_TXT_EXP56
 "EXPORT56"

	)

292 
	#SSL_TXT_SSLV2
 "SSLv2"

	)

293 
	#SSL_TXT_SSLV3
 "SSLv3"

	)

294 
	#SSL_TXT_TLSV1
 "TLSv1"

	)

295 
	#SSL_TXT_ALL
 "ALL"

	)

296 
	#SSL_TXT_ECC
 "ECCdø·"

	)

312 
	#SSL_TXT_CMPALL
 "COMPLEMENTOFALL"

	)

313 
	#SSL_TXT_CMPDEF
 "COMPLEMENTOFDEFAULT"

	)

318 
	#SSL_DEFAULT_CIPHER_LIST
 "AES:ALL:!aNULL:!eNULL:+RC4:@STRENGTH"

	)

321 
	#SSL_SENT_SHUTDOWN
 1

	)

322 
	#SSL_RECEIVED_SHUTDOWN
 2

	)

324 #ifde‡
__˝lu•lus


328 #ifde‡ 
__˝lu•lus


332 #i‡(
deföed
(
OPENSSL_NO_RSA
Ë|| deföed(
OPENSSL_NO_MD5
)Ë&& !deföed(
OPENSSL_NO_SSL2
)

333 
	#OPENSSL_NO_SSL2


	)

336 
	#SSL_FILETYPE_ASN1
 
X509_FILETYPE_ASN1


	)

337 
	#SSL_FILETYPE_PEM
 
X509_FILETYPE_PEM


	)

342 
s¶_°
 *
	ts¶_¸ock_°
;

345 
	ss¶_cùhî_°


347 
vÆid
;

348 c⁄° *
«me
;

349 
id
;

350 
Æg‹ôhms
;

351 
Ægo_°ªngth
;

352 
Æg‹ôhm2
;

353 
°ªngth_bôs
;

354 
Æg_bôs
;

355 
mask
;

356 
mask_°ªngth
;

357 } 
	tSSL_CIPHER
;

359 
DECLARE_STACK_OF
(
SSL_CIPHER
)

361 
s¶_°
 
	tSSL
;

362 
s¶_˘x_°
 
	tSSL_CTX
;

365 
	ss¶_mëhod_°


367 
vîsi⁄
;

368 (*
s¶_√w
)(
SSL
 *
s
);

369 (*
s¶_˛ór
)(
SSL
 *
s
);

370 (*
s¶_‰ì
)(
SSL
 *
s
);

371 (*
s¶_ac˚±
)(
SSL
 *
s
);

372 (*
s¶_c⁄√˘
)(
SSL
 *
s
);

373 (*
s¶_ªad
)(
SSL
 *
s
,*
buf
,
Àn
);

374 (*
s¶_≥ek
)(
SSL
 *
s
,*
buf
,
Àn
);

375 (*
s¶_wrôe
)(
SSL
 *
s
,c⁄° *
buf
,
Àn
);

376 (*
s¶_shutdown
)(
SSL
 *
s
);

377 (*
s¶_ª√gŸüã
)(
SSL
 *
s
);

378 (*
s¶_ª√gŸüã_check
)(
SSL
 *
s
);

379 (*
s¶_gë_mesßge
)(
SSL
 *
s
, 
°1
, 
°n
, 
mt
, 

380 
max
, *
ok
);

381 (*
s¶_ªad_byãs
)(
SSL
 *
s
, 
ty≥
, *
buf
, 
Àn
,

382 
≥ek
);

383 (*
s¶_wrôe_byãs
)(
SSL
 *
s
, 
ty≥
, c⁄° *
buf_
, 
Àn
);

384 (*
s¶_di•©ch_Æît
)(
SSL
 *
s
);

385 (*
s¶_˘æ
)(
SSL
 *
s
,
cmd
,
œrg
,*
∑rg
);

386 (*
s¶_˘x_˘æ
)(
SSL_CTX
 *
˘x
,
cmd
,
œrg
,*
∑rg
);

387 
SSL_CIPHER
 *(*
gë_cùhî_by_ch¨
)(c⁄° *
±r
);

388 (*
put_cùhî_by_ch¨
)(c⁄° 
SSL_CIPHER
 *
cùhî
,*
±r
);

389 (*
s¶_≥ndög
)(c⁄° 
SSL
 *
s
);

390 (*
num_cùhîs
)();

391 
SSL_CIPHER
 *(*
gë_cùhî
)(
ncùhî
);

392 
s¶_mëhod_°
 *(*
gë_s¶_mëhod
)(
vîsi⁄
);

393 (*
gë_timeout
)();

394 
s¶3_íc_mëhod
 *
s¶3_íc
;

395 (*
s¶_vîsi⁄
)();

396 (*
s¶_ˇŒback_˘æ
)(
SSL
 *
s
, 
cb_id
, (*
Â
)());

397 (*
s¶_˘x_ˇŒback_˘æ
)(
SSL_CTX
 *
s
, 
cb_id
, (*
Â
)());

398 } 
	tSSL_METHOD
;

419 
	ss¶_£ssi⁄_°


421 
s¶_vîsi⁄
;

425 
key_¨g_Àngth
;

426 
key_¨g
[
SSL_MAX_KEY_ARG_LENGTH
];

427 
ma°î_key_Àngth
;

428 
ma°î_key
[
SSL_MAX_MASTER_KEY_LENGTH
];

430 
£ssi⁄_id_Àngth
;

431 
£ssi⁄_id
[
SSL_MAX_SSL_SESSION_ID_LENGTH
];

435 
sid_˘x_Àngth
;

436 
sid_˘x
[
SSL_MAX_SID_CTX_LENGTH
];

438 #i‚de‡
OPENSSL_NO_KRB5


439 
krb5_˛õ¡_¥öc_Àn
;

440 
krb5_˛õ¡_¥öc
[
SSL_MAX_KRB5_PRINCIPAL_LENGTH
];

443 
nŸ_ªsumabÀ
;

446 
£ss_˚π_°
 *
£ss_˚π
;

452 
X509
 *
≥î
;

455 
vîify_ªsu…
;

457 
ª„ªn˚s
;

458 
timeout
;

459 
time
;

461 
com¥ess_mëh
;

463 
SSL_CIPHER
 *
cùhî
;

464 
cùhî_id
;

468 
STACK_OF
(
SSL_CIPHER
Ë*
cùhîs
;

470 
CRYPTO_EX_DATA
 
ex_d©a
;

474 
s¶_£ssi⁄_°
 *
¥ev
,*
√xt
;

475 } 
	tSSL_SESSION
;

478 
	#SSL_OP_MICROSOFT_SESS_ID_BUG
 0x00000001L

	)

479 
	#SSL_OP_NETSCAPE_CHALLENGE_BUG
 0x00000002L

	)

480 
	#SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG
 0x00000008L

	)

481 
	#SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG
 0x00000010L

	)

482 
	#SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER
 0x00000020L

	)

483 
	#SSL_OP_MSIE_SSLV2_RSA_PADDING
 0x00000040L

	)

484 
	#SSL_OP_SSLEAY_080_CLIENT_DH_BUG
 0x00000080L

	)

485 
	#SSL_OP_TLS_D5_BUG
 0x00000100L

	)

486 
	#SSL_OP_TLS_BLOCK_PADDING_BUG
 0x00000200L

	)

493 
	#SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
 0x00000800L

	)

497 
	#SSL_OP_ALL
 0x00000FF7L

	)

500 
	#SSL_OP_NO_QUERY_MTU
 0x00001000L

	)

502 
	#SSL_OP_COOKIE_EXCHANGE
 0x00002000L

	)

505 
	#SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
 0x00010000L

	)

507 
	#SSL_OP_SINGLE_ECDH_USE
 0x00080000L

	)

509 
	#SSL_OP_SINGLE_DH_USE
 0x00100000L

	)

512 
	#SSL_OP_EPHEMERAL_RSA
 0x00200000L

	)

515 
	#SSL_OP_CIPHER_SERVER_PREFERENCE
 0x00400000L

	)

520 
	#SSL_OP_TLS_ROLLBACK_BUG
 0x00800000L

	)

522 
	#SSL_OP_NO_SSLv2
 0x01000000L

	)

523 
	#SSL_OP_NO_SSLv3
 0x02000000L

	)

524 
	#SSL_OP_NO_TLSv1
 0x04000000L

	)

528 
	#SSL_OP_PKCS1_CHECK_1
 0x08000000L

	)

529 
	#SSL_OP_PKCS1_CHECK_2
 0x10000000L

	)

530 
	#SSL_OP_NETSCAPE_CA_DN_BUG
 0x20000000L

	)

531 
	#SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG
 0x40000000L

	)

536 
	#SSL_MODE_ENABLE_PARTIAL_WRITE
 0x00000001L

	)

541 
	#SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER
 0x00000002L

	)

544 
	#SSL_MODE_AUTO_RETRY
 0x00000004L

	)

546 
	#SSL_MODE_NO_AUTO_CHAIN
 0x00000008L

	)

552 
	#SSL_CTX_£t_›ti⁄s
(
˘x
,
›
) \

553 
	`SSL_CTX_˘æ
((
˘x
),
SSL_CTRL_OPTIONS
,(
›
),
NULL
)

	)

554 
	#SSL_CTX_gë_›ti⁄s
(
˘x
) \

555 
	`SSL_CTX_˘æ
((
˘x
),
SSL_CTRL_OPTIONS
,0,
NULL
)

	)

556 
	#SSL_£t_›ti⁄s
(
s¶
,
›
) \

557 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_OPTIONS
,(
›
),
NULL
)

	)

558 
	#SSL_gë_›ti⁄s
(
s¶
) \

559 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_OPTIONS
,0,
NULL
)

	)

561 
	#SSL_CTX_£t_mode
(
˘x
,
›
) \

562 
	`SSL_CTX_˘æ
((
˘x
),
SSL_CTRL_MODE
,(
›
),
NULL
)

	)

563 
	#SSL_CTX_gë_mode
(
˘x
) \

564 
	`SSL_CTX_˘æ
((
˘x
),
SSL_CTRL_MODE
,0,
NULL
)

	)

565 
	#SSL_£t_mode
(
s¶
,
›
) \

566 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_MODE
,(
›
),
NULL
)

	)

567 
	#SSL_gë_mode
(
s¶
) \

568 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_MODE
,0,
NULL
)

	)

569 
	#SSL_£t_mtu
(
s¶
, 
mtu
) \

570 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_SET_MTU
,(
mtu
),
NULL
)

	)

573 
SSL_CTX_£t_msg_ˇŒback
(
SSL_CTX
 *
˘x
, (*
cb
)(
wrôe_p
, 
vîsi⁄
, 
c⁄ã¡_ty≥
, c⁄° *
buf
, 
size_t
 
Àn
, 
SSL
 *
s¶
, *
¨g
));

574 
SSL_£t_msg_ˇŒback
(
SSL
 *
s¶
, (*
cb
)(
wrôe_p
, 
vîsi⁄
, 
c⁄ã¡_ty≥
, c⁄° *
buf
, 
size_t
 
Àn
, SSL *s¶, *
¨g
));

575 
	#SSL_CTX_£t_msg_ˇŒback_¨g
(
˘x
, 
¨g
Ë
	`SSL_CTX_˘æ
((˘x), 
SSL_CTRL_SET_MSG_CALLBACK_ARG
, 0, (¨g))

	)

576 
	#SSL_£t_msg_ˇŒback_¨g
(
s¶
, 
¨g
Ë
	`SSL_˘æ
((s¶), 
SSL_CTRL_SET_MSG_CALLBACK_ARG
, 0, (¨g))

	)

580 #i‡
deföed
(
OPENSSL_SYS_MSDOS
Ë&& !deföed(
OPENSSL_SYS_WIN32
)

581 
	#SSL_MAX_CERT_LIST_DEFAULT
 1024*30

	)

583 
	#SSL_MAX_CERT_LIST_DEFAULT
 1024*100

	)

586 
	#SSL_SESSION_CACHE_MAX_SIZE_DEFAULT
 (1024*20)

	)

601 (*
GEN_SESSION_CB
)(c⁄° 
	tSSL
 *
	ts¶
, *
	tid
,

602 *
	tid_Àn
);

604 
	ss¶_comp_°


606 
id
;

607 c⁄° *
«me
;

608 #i‚de‡
OPENSSL_NO_COMP


609 
COMP_METHOD
 *
mëhod
;

611 *
mëhod
;

613 } 
	tSSL_COMP
;

615 
DECLARE_STACK_OF
(
SSL_COMP
)

617 
	ss¶_˘x_°


619 
SSL_METHOD
 *
mëhod
;

621 
STACK_OF
(
SSL_CIPHER
Ë*
cùhî_li°
;

623 
STACK_OF
(
SSL_CIPHER
Ë*
cùhî_li°_by_id
;

625 
x509_°‹e_°
 *
˚π_°‹e
;

626 
lhash_°
 *
£ssi⁄s
;

629 
£ssi⁄_ˇche_size
;

630 
s¶_£ssi⁄_°
 *
£ssi⁄_ˇche_hód
;

631 
s¶_£ssi⁄_°
 *
£ssi⁄_ˇche_èû
;

638 
£ssi⁄_ˇche_mode
;

643 
£ssi⁄_timeout
;

653 (*
√w_£ssi⁄_cb
)(
s¶_°
 *
s¶
,
SSL_SESSION
 *
£ss
);

654 (*
ªmove_£ssi⁄_cb
)(
s¶_˘x_°
 *
˘x
,
SSL_SESSION
 *
£ss
);

655 
SSL_SESSION
 *(*
gë_£ssi⁄_cb
)(
s¶_°
 *
s¶
,

656 *
d©a
,
Àn
,*
c›y
);

660 
£ss_c⁄√˘
;

661 
£ss_c⁄√˘_ª√gŸüã
;

662 
£ss_c⁄√˘_good
;

663 
£ss_ac˚±
;

664 
£ss_ac˚±_ª√gŸüã
;

665 
£ss_ac˚±_good
;

666 
£ss_miss
;

667 
£ss_timeout
;

668 
£ss_ˇche_fuŒ
;

669 
£ss_hô
;

670 
£ss_cb_hô
;

676 } 
°©s
;

678 
ª„ªn˚s
;

681 (*
≠p_vîify_ˇŒback
)(
X509_STORE_CTX
 *, *);

682 *
≠p_vîify_¨g
;

687 
≥m_∑ssw‹d_cb
 *
deÁu…_∑sswd_ˇŒback
;

690 *
deÁu…_∑sswd_ˇŒback_u£rd©a
;

693 (*
˛õ¡_˚π_cb
)(
SSL
 *
s¶
, 
X509
 **
x509
, 
EVP_PKEY
 **
pkey
);

696 (*
≠p_gí_cookõ_cb
)(
SSL
 *
s¶
, *
cookõ
,

697 *
cookõ_Àn
);

700 (*
≠p_vîify_cookõ_cb
)(
SSL
 *
s¶
, *
cookõ
,

701 
cookõ_Àn
);

703 
CRYPTO_EX_DATA
 
ex_d©a
;

705 c⁄° 
EVP_MD
 *
rß_md5
;

706 c⁄° 
EVP_MD
 *
md5
;

707 c⁄° 
EVP_MD
 *
sha1
;

709 
STACK_OF
(
X509
Ë*
exåa_˚πs
;

710 
STACK_OF
(
SSL_COMP
Ë*
comp_mëhods
;

715 (*
öfo_ˇŒback
)(c⁄° 
SSL
 *
s¶
,
ty≥
,
vÆ
);

718 
STACK_OF
(
X509_NAME
Ë*
˛õ¡_CA
;

723 
›ti⁄s
;

724 
mode
;

725 
max_˚π_li°
;

727 
˚π_°
 *
˚π
;

728 
ªad_ahód
;

731 (*
msg_ˇŒback
)(
wrôe_p
, 
vîsi⁄
, 
c⁄ã¡_ty≥
, c⁄° *
buf
, 
size_t
 
Àn
, 
SSL
 *
s¶
, *
¨g
);

732 *
msg_ˇŒback_¨g
;

734 
vîify_mode
;

735 
sid_˘x_Àngth
;

736 
sid_˘x
[
SSL_MAX_SID_CTX_LENGTH
];

737 (*
deÁu…_vîify_ˇŒback
)(
ok
,
X509_STORE_CTX
 *
˘x
);

740 
GEN_SESSION_CB
 
gíî©e_£ssi⁄_id
;

742 
X509_VERIFY_PARAM
 *
∑øm
;

745 
puΩo£
;

746 
åu°
;

749 
quõt_shutdown
;

752 
	#SSL_SESS_CACHE_OFF
 0x0000

	)

753 
	#SSL_SESS_CACHE_CLIENT
 0x0001

	)

754 
	#SSL_SESS_CACHE_SERVER
 0x0002

	)

755 
	#SSL_SESS_CACHE_BOTH
 (
SSL_SESS_CACHE_CLIENT
|
SSL_SESS_CACHE_SERVER
)

	)

756 
	#SSL_SESS_CACHE_NO_AUTO_CLEAR
 0x0080

	)

758 
	#SSL_SESS_CACHE_NO_INTERNAL_LOOKUP
 0x0100

	)

759 
	#SSL_SESS_CACHE_NO_INTERNAL_STORE
 0x0200

	)

760 
	#SSL_SESS_CACHE_NO_INTERNAL
 \

761 (
SSL_SESS_CACHE_NO_INTERNAL_LOOKUP
|
SSL_SESS_CACHE_NO_INTERNAL_STORE
)

	)

763 
lhash_°
 *
SSL_CTX_£ssi⁄s
(
SSL_CTX
 *
˘x
);

764 
	#SSL_CTX_£ss_numbî
(
˘x
) \

765 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_NUMBER
,0,
NULL
)

	)

766 
	#SSL_CTX_£ss_c⁄√˘
(
˘x
) \

767 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_CONNECT
,0,
NULL
)

	)

768 
	#SSL_CTX_£ss_c⁄√˘_good
(
˘x
) \

769 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_CONNECT_GOOD
,0,
NULL
)

	)

770 
	#SSL_CTX_£ss_c⁄√˘_ª√gŸüã
(
˘x
) \

771 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_CONNECT_RENEGOTIATE
,0,
NULL
)

	)

772 
	#SSL_CTX_£ss_ac˚±
(
˘x
) \

773 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_ACCEPT
,0,
NULL
)

	)

774 
	#SSL_CTX_£ss_ac˚±_ª√gŸüã
(
˘x
) \

775 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_ACCEPT_RENEGOTIATE
,0,
NULL
)

	)

776 
	#SSL_CTX_£ss_ac˚±_good
(
˘x
) \

777 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_ACCEPT_GOOD
,0,
NULL
)

	)

778 
	#SSL_CTX_£ss_hôs
(
˘x
) \

779 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_HIT
,0,
NULL
)

	)

780 
	#SSL_CTX_£ss_cb_hôs
(
˘x
) \

781 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_CB_HIT
,0,
NULL
)

	)

782 
	#SSL_CTX_£ss_mis£s
(
˘x
) \

783 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_MISSES
,0,
NULL
)

	)

784 
	#SSL_CTX_£ss_timeouts
(
˘x
) \

785 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_TIMEOUTS
,0,
NULL
)

	)

786 
	#SSL_CTX_£ss_ˇche_fuŒ
(
˘x
) \

787 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SESS_CACHE_FULL
,0,
NULL
)

	)

789 
	#SSL_CTX_£ss_£t_√w_cb
(
˘x
,
cb
Ë((˘x)->
√w_£ssi⁄_cb
=(cb))

	)

790 
	#SSL_CTX_£ss_gë_√w_cb
(
˘x
Ë((˘x)->
√w_£ssi⁄_cb
)

	)

791 
	#SSL_CTX_£ss_£t_ªmove_cb
(
˘x
,
cb
Ë((˘x)->
ªmove_£ssi⁄_cb
=(cb))

	)

792 
	#SSL_CTX_£ss_gë_ªmove_cb
(
˘x
Ë((˘x)->
ªmove_£ssi⁄_cb
)

	)

793 
	#SSL_CTX_£ss_£t_gë_cb
(
˘x
,
cb
Ë((˘x)->
gë_£ssi⁄_cb
=(cb))

	)

794 
	#SSL_CTX_£ss_gë_gë_cb
(
˘x
Ë((˘x)->
gë_£ssi⁄_cb
)

	)

795 
	#SSL_CTX_£t_öfo_ˇŒback
(
˘x
,
cb
Ë((˘x)->
öfo_ˇŒback
=(cb))

	)

796 
	#SSL_CTX_gë_öfo_ˇŒback
(
˘x
Ë((˘x)->
öfo_ˇŒback
)

	)

797 
	#SSL_CTX_£t_˛õ¡_˚π_cb
(
˘x
,
cb
Ë((˘x)->
˛õ¡_˚π_cb
=(cb))

	)

798 
	#SSL_CTX_gë_˛õ¡_˚π_cb
(
˘x
Ë((˘x)->
˛õ¡_˚π_cb
)

	)

799 
	#SSL_CTX_£t_cookõ_gíî©e_cb
(
˘x
,
cb
Ë((˘x)->
≠p_gí_cookõ_cb
=(cb))

	)

800 
	#SSL_CTX_£t_cookõ_vîify_cb
(
˘x
,
cb
Ë((˘x)->
≠p_vîify_cookõ_cb
=(cb))

	)

802 
	#SSL_NOTHING
 1

	)

803 
	#SSL_WRITING
 2

	)

804 
	#SSL_READING
 3

	)

805 
	#SSL_X509_LOOKUP
 4

	)

808 
	#SSL_w™t_nŸhög
(
s
Ë(
	`SSL_w™t
(sË=
SSL_NOTHING
)

	)

809 
	#SSL_w™t_ªad
(
s
Ë(
	`SSL_w™t
(sË=
SSL_READING
)

	)

810 
	#SSL_w™t_wrôe
(
s
Ë(
	`SSL_w™t
(sË=
SSL_WRITING
)

	)

811 
	#SSL_w™t_x509_lookup
(
s
Ë(
	`SSL_w™t
(sË=
SSL_X509_LOOKUP
)

	)

813 
	ss¶_°


818 
vîsi⁄
;

819 
ty≥
;

821 
SSL_METHOD
 *
mëhod
;

827 #i‚de‡
OPENSSL_NO_BIO


828 
BIO
 *
rbio
;

829 
BIO
 *
wbio
;

830 
BIO
 *
bbio
;

833 *
rbio
;

834 *
wbio
;

835 *
bbio
;

841 
rw°©e
;

844 
ö_h™dshake
;

845 (*
h™dshake_func
)(
SSL
 *);

855 
£rvî
;

857 
√w_£ssi⁄
;

863 
quõt_shutdown
;

864 
shutdown
;

866 
°©e
;

867 
r°©e
;

869 
BUF_MEM
 *
öô_buf
;

870 *
öô_msg
;

871 
öô_num
;

872 
öô_off
;

875 *
∑ckë
;

876 
∑ckë_Àngth
;

878 
s¶2_°©e_°
 *
s2
;

879 
s¶3_°©e_°
 *
s3
;

880 
dés1_°©e_°
 *
d1
;

882 
ªad_ahód
;

886 (*
msg_ˇŒback
)(
wrôe_p
, 
vîsi⁄
, 
c⁄ã¡_ty≥
, c⁄° *
buf
, 
size_t
 
Àn
, 
SSL
 *
s¶
, *
¨g
);

887 *
msg_ˇŒback_¨g
;

889 
hô
;

891 
X509_VERIFY_PARAM
 *
∑øm
;

894 
puΩo£
;

895 
åu°
;

899 
STACK_OF
(
SSL_CIPHER
Ë*
cùhî_li°
;

900 
STACK_OF
(
SSL_CIPHER
Ë*
cùhî_li°_by_id
;

905 
EVP_CIPHER_CTX
 *
íc_ªad_˘x
;

906 c⁄° 
EVP_MD
 *
ªad_hash
;

907 #i‚de‡
OPENSSL_NO_COMP


908 
COMP_CTX
 *
ex∑nd
;

910 *
ex∑nd
;

913 
EVP_CIPHER_CTX
 *
íc_wrôe_˘x
;

914 c⁄° 
EVP_MD
 *
wrôe_hash
;

915 #i‚de‡
OPENSSL_NO_COMP


916 
COMP_CTX
 *
com¥ess
;

918 *
com¥ess
;

925 
˚π_°
 *
˚π
;

929 
sid_˘x_Àngth
;

930 
sid_˘x
[
SSL_MAX_SID_CTX_LENGTH
];

933 
SSL_SESSION
 *
£ssi⁄
;

936 
GEN_SESSION_CB
 
gíî©e_£ssi⁄_id
;

939 
vîify_mode
;

941 (*
vîify_ˇŒback
)(
ok
,
X509_STORE_CTX
 *
˘x
);

943 (*
öfo_ˇŒback
)(c⁄° 
SSL
 *
s¶
,
ty≥
,
vÆ
);

945 
îr‹
;

946 
îr‹_code
;

948 #i‚de‡
OPENSSL_NO_KRB5


949 
KSSL_CTX
 *
ks¶_˘x
;

952 
SSL_CTX
 *
˘x
;

955 
debug
;

958 
vîify_ªsu…
;

959 
CRYPTO_EX_DATA
 
ex_d©a
;

962 
STACK_OF
(
X509_NAME
Ë*
˛õ¡_CA
;

964 
ª„ªn˚s
;

965 
›ti⁄s
;

966 
mode
;

967 
max_˚π_li°
;

968 
fú°_∑ckë
;

969 
˛õ¡_vîsi⁄
;

973 #ifde‡
__˝lu•lus


977 
	~<›ís¶/s¶2.h
>

978 
	~<›ís¶/s¶3.h
>

979 
	~<›ís¶/és1.h
>

980 
	~<›ís¶/dés1.h
>

981 
	~<›ís¶/s¶23.h
>

983 #ifde‡ 
__˝lu•lus


988 
	#SSL_£t_≠p_d©a
(
s
,
¨g
Ë(
	`SSL_£t_ex_d©a
(s,0,(*Ôrg))

	)

989 
	#SSL_gë_≠p_d©a
(
s
Ë(
	`SSL_gë_ex_d©a
(s,0))

	)

990 
	#SSL_SESSION_£t_≠p_d©a
(
s
,
a
Ë(
	`SSL_SESSION_£t_ex_d©a
(s,0,(*Ô))

	)

991 
	#SSL_SESSION_gë_≠p_d©a
(
s
Ë(
	`SSL_SESSION_gë_ex_d©a
(s,0))

	)

992 
	#SSL_CTX_gë_≠p_d©a
(
˘x
Ë(
	`SSL_CTX_gë_ex_d©a
(˘x,0))

	)

993 
	#SSL_CTX_£t_≠p_d©a
(
˘x
,
¨g
Ë(
	`SSL_CTX_£t_ex_d©a
(˘x,0,(*Ôrg))

	)

1002 
	#SSL_ST_CONNECT
 0x1000

	)

1003 
	#SSL_ST_ACCEPT
 0x2000

	)

1004 
	#SSL_ST_MASK
 0x0FFF

	)

1005 
	#SSL_ST_INIT
 (
SSL_ST_CONNECT
|
SSL_ST_ACCEPT
)

	)

1006 
	#SSL_ST_BEFORE
 0x4000

	)

1007 
	#SSL_ST_OK
 0x03

	)

1008 
	#SSL_ST_RENEGOTIATE
 (0x04|
SSL_ST_INIT
)

	)

1010 
	#SSL_CB_LOOP
 0x01

	)

1011 
	#SSL_CB_EXIT
 0x02

	)

1012 
	#SSL_CB_READ
 0x04

	)

1013 
	#SSL_CB_WRITE
 0x08

	)

1014 
	#SSL_CB_ALERT
 0x4000

	)

1015 
	#SSL_CB_READ_ALERT
 (
SSL_CB_ALERT
|
SSL_CB_READ
)

	)

1016 
	#SSL_CB_WRITE_ALERT
 (
SSL_CB_ALERT
|
SSL_CB_WRITE
)

	)

1017 
	#SSL_CB_ACCEPT_LOOP
 (
SSL_ST_ACCEPT
|
SSL_CB_LOOP
)

	)

1018 
	#SSL_CB_ACCEPT_EXIT
 (
SSL_ST_ACCEPT
|
SSL_CB_EXIT
)

	)

1019 
	#SSL_CB_CONNECT_LOOP
 (
SSL_ST_CONNECT
|
SSL_CB_LOOP
)

	)

1020 
	#SSL_CB_CONNECT_EXIT
 (
SSL_ST_CONNECT
|
SSL_CB_EXIT
)

	)

1021 
	#SSL_CB_HANDSHAKE_START
 0x10

	)

1022 
	#SSL_CB_HANDSHAKE_DONE
 0x20

	)

1025 
	#SSL_gë_°©e
(
a
Ë
	`SSL_°©e
◊)

	)

1026 
	#SSL_is_öô_föished
(
a
Ë(
	`SSL_°©e
◊Ë=
SSL_ST_OK
)

	)

1027 
	#SSL_ö_öô
(
a
Ë(
	`SSL_°©e
◊)&
SSL_ST_INIT
)

	)

1028 
	#SSL_ö_bef‹e
(
a
Ë(
	`SSL_°©e
◊)&
SSL_ST_BEFORE
)

	)

1029 
	#SSL_ö_c⁄√˘_öô
(
a
Ë(
	`SSL_°©e
◊)&
SSL_ST_CONNECT
)

	)

1030 
	#SSL_ö_ac˚±_öô
(
a
Ë(
	`SSL_°©e
◊)&
SSL_ST_ACCEPT
)

	)

1034 
	#SSL_ST_READ_HEADER
 0xF0

	)

1035 
	#SSL_ST_READ_BODY
 0xF1

	)

1036 
	#SSL_ST_READ_DONE
 0xF2

	)

1042 
size_t
 
SSL_gë_föished
(c⁄° 
SSL
 *
s
, *
buf
, size_à
cou¡
);

1043 
size_t
 
SSL_gë_≥î_föished
(c⁄° 
SSL
 *
s
, *
buf
, size_à
cou¡
);

1047 
	#SSL_VERIFY_NONE
 0x00

	)

1048 
	#SSL_VERIFY_PEER
 0x01

	)

1049 
	#SSL_VERIFY_FAIL_IF_NO_PEER_CERT
 0x02

	)

1050 
	#SSL_VERIFY_CLIENT_ONCE
 0x04

	)

1052 
	#O≥nSSL_add_s¶_Æg‹ôhms
(Ë
	`SSL_libøry_öô
()

	)

1053 
	#SSLóy_add_s¶_Æg‹ôhms
(Ë
	`SSL_libøry_öô
()

	)

1057 
	#SSL_CTX_£t_deÁu…_vîify
(
a
,
b
,
c
Ë
	`SSL_CTX_£t_vîify
◊,b,c)

	)

1058 
	#SSL_£t_¥ef_cùhî
(
c
,
n
Ë
	`SSL_£t_cùhî_li°
(c,n)

	)

1059 
	#SSL_add_£ssi⁄
(
a
,
b
Ë
	`SSL_CTX_add_£ssi⁄
(◊),(b))

	)

1060 
	#SSL_ªmove_£ssi⁄
(
a
,
b
Ë
	`SSL_CTX_ªmove_£ssi⁄
(◊),(b))

	)

1061 
	#SSL_Êush_£ssi⁄s
(
a
,
b
Ë
	`SSL_CTX_Êush_£ssi⁄s
(◊),(b))

	)

1064 
	#SSL_gë_cùhî
(
s
) \

1065 
	`SSL_CIPHER_gë_«me
(
	`SSL_gë_cuºít_cùhî
(
s
))

	)

1066 
	#SSL_gë_cùhî_bôs
(
s
,
≈
) \

1067 
	`SSL_CIPHER_gë_bôs
(
	`SSL_gë_cuºít_cùhî
(
s
),
≈
)

	)

1068 
	#SSL_gë_cùhî_vîsi⁄
(
s
) \

1069 
	`SSL_CIPHER_gë_vîsi⁄
(
	`SSL_gë_cuºít_cùhî
(
s
))

	)

1070 
	#SSL_gë_cùhî_«me
(
s
) \

1071 
	`SSL_CIPHER_gë_«me
(
	`SSL_gë_cuºít_cùhî
(
s
))

	)

1072 
	#SSL_gë_time
(
a
Ë
	`SSL_SESSION_gë_time
◊)

	)

1073 
	#SSL_£t_time
(
a
,
b
Ë
	`SSL_SESSION_£t_time
(◊),(b))

	)

1074 
	#SSL_gë_timeout
(
a
Ë
	`SSL_SESSION_gë_timeout
◊)

	)

1075 
	#SSL_£t_timeout
(
a
,
b
Ë
	`SSL_SESSION_£t_timeout
(◊),(b))

	)

1078 
	#d2i_SSL_SESSION_bio
(
bp
,
s_id
Ë
	`ASN1_d2i_bio_of
(
SSL_SESSION
,
SSL_SESSION_√w
,
d2i_SSL_SESSION
,bp,s_id)

	)

1079 
	#i2d_SSL_SESSION_bio
(
bp
,
s_id
Ë
	`ASN1_i2d_bio_of
(
SSL_SESSION
,
i2d_SSL_SESSION
,bp,s_id)

	)

1080 
	#PEM_ªad_SSL_SESSION
(
Â
,
x
,
cb
,
u
Ë(
SSL_SESSION
 *)
	`PEM_ASN1_ªad
( \

1081 (*(*)())
d2i_SSL_SESSION
,
PEM_STRING_SSL_SESSION
,
Â
,(**)
x
,
cb
,
u
)

	)

1082 
	#PEM_ªad_bio_SSL_SESSION
(
bp
,
x
,
cb
,
u
Ë
	`PEM_ASN1_ªad_bio_of
(
SSL_SESSION
,
d2i_SSL_SESSION
,
PEM_STRING_SSL_SESSION
,bp,x,cb,u)

	)

1083 
	#PEM_wrôe_SSL_SESSION
(
Â
,
x
) \

1084 
	`PEM_ASN1_wrôe
(((*)())
i2d_SSL_SESSION
, \

1085 
PEM_STRING_SSL_SESSION
,
Â
, (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

1086 
	#PEM_wrôe_bio_SSL_SESSION
(
bp
,
x
) \

1087 
	`PEM_ASN1_wrôe_bio_of
(
SSL_SESSION
,
i2d_SSL_SESSION
,
PEM_STRING_SSL_SESSION
,
bp
,
x
,
NULL
,NULL,0,NULL,NULL)

	)

1090 
	#SSL_AD_REASON_OFFSET
 1000

	)

1092 
	#SSL_AD_CLOSE_NOTIFY
 
SSL3_AD_CLOSE_NOTIFY


	)

1093 
	#SSL_AD_UNEXPECTED_MESSAGE
 
SSL3_AD_UNEXPECTED_MESSAGE


	)

1094 
	#SSL_AD_BAD_RECORD_MAC
 
SSL3_AD_BAD_RECORD_MAC


	)

1095 
	#SSL_AD_DECRYPTION_FAILED
 
TLS1_AD_DECRYPTION_FAILED


	)

1096 
	#SSL_AD_RECORD_OVERFLOW
 
TLS1_AD_RECORD_OVERFLOW


	)

1097 
	#SSL_AD_DECOMPRESSION_FAILURE
 
SSL3_AD_DECOMPRESSION_FAILURE


	)

1098 
	#SSL_AD_HANDSHAKE_FAILURE
 
SSL3_AD_HANDSHAKE_FAILURE


	)

1099 
	#SSL_AD_NO_CERTIFICATE
 
SSL3_AD_NO_CERTIFICATE


	)

1100 
	#SSL_AD_BAD_CERTIFICATE
 
SSL3_AD_BAD_CERTIFICATE


	)

1101 
	#SSL_AD_UNSUPPORTED_CERTIFICATE
 
SSL3_AD_UNSUPPORTED_CERTIFICATE


	)

1102 
	#SSL_AD_CERTIFICATE_REVOKED
 
SSL3_AD_CERTIFICATE_REVOKED


	)

1103 
	#SSL_AD_CERTIFICATE_EXPIRED
 
SSL3_AD_CERTIFICATE_EXPIRED


	)

1104 
	#SSL_AD_CERTIFICATE_UNKNOWN
 
SSL3_AD_CERTIFICATE_UNKNOWN


	)

1105 
	#SSL_AD_ILLEGAL_PARAMETER
 
SSL3_AD_ILLEGAL_PARAMETER


	)

1106 
	#SSL_AD_UNKNOWN_CA
 
TLS1_AD_UNKNOWN_CA


	)

1107 
	#SSL_AD_ACCESS_DENIED
 
TLS1_AD_ACCESS_DENIED


	)

1108 
	#SSL_AD_DECODE_ERROR
 
TLS1_AD_DECODE_ERROR


	)

1109 
	#SSL_AD_DECRYPT_ERROR
 
TLS1_AD_DECRYPT_ERROR


	)

1110 
	#SSL_AD_EXPORT_RESTRICTION
 
TLS1_AD_EXPORT_RESTRICTION


	)

1111 
	#SSL_AD_PROTOCOL_VERSION
 
TLS1_AD_PROTOCOL_VERSION


	)

1112 
	#SSL_AD_INSUFFICIENT_SECURITY
 
TLS1_AD_INSUFFICIENT_SECURITY


	)

1113 
	#SSL_AD_INTERNAL_ERROR
 
TLS1_AD_INTERNAL_ERROR


	)

1114 
	#SSL_AD_USER_CANCELLED
 
TLS1_AD_USER_CANCELLED


	)

1115 
	#SSL_AD_NO_RENEGOTIATION
 
TLS1_AD_NO_RENEGOTIATION


	)

1117 
	#SSL_ERROR_NONE
 0

	)

1118 
	#SSL_ERROR_SSL
 1

	)

1119 
	#SSL_ERROR_WANT_READ
 2

	)

1120 
	#SSL_ERROR_WANT_WRITE
 3

	)

1121 
	#SSL_ERROR_WANT_X509_LOOKUP
 4

	)

1122 
	#SSL_ERROR_SYSCALL
 5

	)

1123 
	#SSL_ERROR_ZERO_RETURN
 6

	)

1124 
	#SSL_ERROR_WANT_CONNECT
 7

	)

1125 
	#SSL_ERROR_WANT_ACCEPT
 8

	)

1127 
	#SSL_CTRL_NEED_TMP_RSA
 1

	)

1128 
	#SSL_CTRL_SET_TMP_RSA
 2

	)

1129 
	#SSL_CTRL_SET_TMP_DH
 3

	)

1130 
	#SSL_CTRL_SET_TMP_ECDH
 4

	)

1131 
	#SSL_CTRL_SET_TMP_RSA_CB
 5

	)

1132 
	#SSL_CTRL_SET_TMP_DH_CB
 6

	)

1133 
	#SSL_CTRL_SET_TMP_ECDH_CB
 7

	)

1135 
	#SSL_CTRL_GET_SESSION_REUSED
 8

	)

1136 
	#SSL_CTRL_GET_CLIENT_CERT_REQUEST
 9

	)

1137 
	#SSL_CTRL_GET_NUM_RENEGOTIATIONS
 10

	)

1138 
	#SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS
 11

	)

1139 
	#SSL_CTRL_GET_TOTAL_RENEGOTIATIONS
 12

	)

1140 
	#SSL_CTRL_GET_FLAGS
 13

	)

1141 
	#SSL_CTRL_EXTRA_CHAIN_CERT
 14

	)

1143 
	#SSL_CTRL_SET_MSG_CALLBACK
 15

	)

1144 
	#SSL_CTRL_SET_MSG_CALLBACK_ARG
 16

	)

1147 
	#SSL_CTRL_SET_MTU
 17

	)

1149 
	#SSL_CTRL_SESS_NUMBER
 20

	)

1150 
	#SSL_CTRL_SESS_CONNECT
 21

	)

1151 
	#SSL_CTRL_SESS_CONNECT_GOOD
 22

	)

1152 
	#SSL_CTRL_SESS_CONNECT_RENEGOTIATE
 23

	)

1153 
	#SSL_CTRL_SESS_ACCEPT
 24

	)

1154 
	#SSL_CTRL_SESS_ACCEPT_GOOD
 25

	)

1155 
	#SSL_CTRL_SESS_ACCEPT_RENEGOTIATE
 26

	)

1156 
	#SSL_CTRL_SESS_HIT
 27

	)

1157 
	#SSL_CTRL_SESS_CB_HIT
 28

	)

1158 
	#SSL_CTRL_SESS_MISSES
 29

	)

1159 
	#SSL_CTRL_SESS_TIMEOUTS
 30

	)

1160 
	#SSL_CTRL_SESS_CACHE_FULL
 31

	)

1161 
	#SSL_CTRL_OPTIONS
 32

	)

1162 
	#SSL_CTRL_MODE
 33

	)

1164 
	#SSL_CTRL_GET_READ_AHEAD
 40

	)

1165 
	#SSL_CTRL_SET_READ_AHEAD
 41

	)

1166 
	#SSL_CTRL_SET_SESS_CACHE_SIZE
 42

	)

1167 
	#SSL_CTRL_GET_SESS_CACHE_SIZE
 43

	)

1168 
	#SSL_CTRL_SET_SESS_CACHE_MODE
 44

	)

1169 
	#SSL_CTRL_GET_SESS_CACHE_MODE
 45

	)

1171 
	#SSL_CTRL_GET_MAX_CERT_LIST
 50

	)

1172 
	#SSL_CTRL_SET_MAX_CERT_LIST
 51

	)

1174 
	#SSL_£ssi⁄_ªu£d
(
s¶
) \

1175 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_GET_SESSION_REUSED
,0,
NULL
)

	)

1176 
	#SSL_num_ª√gŸüti⁄s
(
s¶
) \

1177 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_GET_NUM_RENEGOTIATIONS
,0,
NULL
)

	)

1178 
	#SSL_˛ór_num_ª√gŸüti⁄s
(
s¶
) \

1179 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS
,0,
NULL
)

	)

1180 
	#SSL_tŸÆ_ª√gŸüti⁄s
(
s¶
) \

1181 
	`SSL_˘æ
((
s¶
),
SSL_CTRL_GET_TOTAL_RENEGOTIATIONS
,0,
NULL
)

	)

1183 
	#SSL_CTX_√ed_tmp_RSA
(
˘x
) \

1184 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_NEED_TMP_RSA
,0,
NULL
)

	)

1185 
	#SSL_CTX_£t_tmp_rß
(
˘x
,
rß
) \

1186 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_TMP_RSA
,0,(*)
rß
)

	)

1187 
	#SSL_CTX_£t_tmp_dh
(
˘x
,
dh
) \

1188 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_TMP_DH
,0,(*)
dh
)

	)

1189 
	#SSL_CTX_£t_tmp_ecdh
(
˘x
,
ecdh
) \

1190 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_TMP_ECDH
,0,(*)
ecdh
)

	)

1192 
	#SSL_√ed_tmp_RSA
(
s¶
) \

1193 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_NEED_TMP_RSA
,0,
NULL
)

	)

1194 
	#SSL_£t_tmp_rß
(
s¶
,
rß
) \

1195 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_SET_TMP_RSA
,0,(*)
rß
)

	)

1196 
	#SSL_£t_tmp_dh
(
s¶
,
dh
) \

1197 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_SET_TMP_DH
,0,(*)
dh
)

	)

1198 
	#SSL_£t_tmp_ecdh
(
s¶
,
ecdh
) \

1199 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_SET_TMP_ECDH
,0,(*)
ecdh
)

	)

1201 
	#SSL_CTX_add_exåa_chaö_˚π
(
˘x
,
x509
) \

1202 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_EXTRA_CHAIN_CERT
,0,(*)
x509
)

	)

1204 #i‚de‡
OPENSSL_NO_BIO


1205 
BIO_METHOD
 *
BIO_f_s¶
();

1206 
BIO
 *
BIO_√w_s¶
(
SSL_CTX
 *
˘x
,
˛õ¡
);

1207 
BIO
 *
BIO_√w_s¶_c⁄√˘
(
SSL_CTX
 *
˘x
);

1208 
BIO
 *
BIO_√w_buf„r_s¶_c⁄√˘
(
SSL_CTX
 *
˘x
);

1209 
BIO_s¶_c›y_£ssi⁄_id
(
BIO
 *
to
,BIO *
‰om
);

1210 
BIO_s¶_shutdown
(
BIO
 *
s¶_bio
);

1214 
SSL_CTX_£t_cùhî_li°
(
SSL_CTX
 *,c⁄° *
°r
);

1215 
SSL_CTX
 *
SSL_CTX_√w
(
SSL_METHOD
 *
mëh
);

1216 
SSL_CTX_‰ì
(
SSL_CTX
 *);

1217 
SSL_CTX_£t_timeout
(
SSL_CTX
 *
˘x
,
t
);

1218 
SSL_CTX_gë_timeout
(c⁄° 
SSL_CTX
 *
˘x
);

1219 
X509_STORE
 *
SSL_CTX_gë_˚π_°‹e
(c⁄° 
SSL_CTX
 *);

1220 
SSL_CTX_£t_˚π_°‹e
(
SSL_CTX
 *,
X509_STORE
 *);

1221 
SSL_w™t
(c⁄° 
SSL
 *
s
);

1222 
SSL_˛ór
(
SSL
 *
s
);

1224 
SSL_CTX_Êush_£ssi⁄s
(
SSL_CTX
 *
˘x
,
tm
);

1226 
SSL_CIPHER
 *
SSL_gë_cuºít_cùhî
(c⁄° 
SSL
 *
s
);

1227 
SSL_CIPHER_gë_bôs
(c⁄° 
SSL_CIPHER
 *
c
,*
Æg_bôs
);

1228 * 
SSL_CIPHER_gë_vîsi⁄
(c⁄° 
SSL_CIPHER
 *
c
);

1229 c⁄° * 
SSL_CIPHER_gë_«me
(c⁄° 
SSL_CIPHER
 *
c
);

1231 
SSL_gë_fd
(c⁄° 
SSL
 *
s
);

1232 
SSL_gë_rfd
(c⁄° 
SSL
 *
s
);

1233 
SSL_gë_wfd
(c⁄° 
SSL
 *
s
);

1234 c⁄° * 
SSL_gë_cùhî_li°
(c⁄° 
SSL
 *
s
,
n
);

1235 * 
SSL_gë_sh¨ed_cùhîs
(c⁄° 
SSL
 *
s
, *
buf
, 
Àn
);

1236 
SSL_gë_ªad_ahód
(c⁄° 
SSL
 * 
s
);

1237 
SSL_≥ndög
(c⁄° 
SSL
 *
s
);

1238 #i‚de‡
OPENSSL_NO_SOCK


1239 
SSL_£t_fd
(
SSL
 *
s
, 
fd
);

1240 
SSL_£t_rfd
(
SSL
 *
s
, 
fd
);

1241 
SSL_£t_wfd
(
SSL
 *
s
, 
fd
);

1243 #i‚de‡
OPENSSL_NO_BIO


1244 
SSL_£t_bio
(
SSL
 *
s
, 
BIO
 *
rbio
,BIO *
wbio
);

1245 
BIO
 * 
SSL_gë_rbio
(c⁄° 
SSL
 *
s
);

1246 
BIO
 * 
SSL_gë_wbio
(c⁄° 
SSL
 *
s
);

1248 
SSL_£t_cùhî_li°
(
SSL
 *
s
, c⁄° *
°r
);

1249 
SSL_£t_ªad_ahód
(
SSL
 *
s
, 
yes
);

1250 
SSL_gë_vîify_mode
(c⁄° 
SSL
 *
s
);

1251 
SSL_gë_vîify_dïth
(c⁄° 
SSL
 *
s
);

1252 (*
SSL_gë_vîify_ˇŒback
(c⁄° 
SSL
 *
s
))(,
X509_STORE_CTX
 *);

1253 
SSL_£t_vîify
(
SSL
 *
s
, 
mode
,

1254 (*
ˇŒback
)(
ok
,
X509_STORE_CTX
 *
˘x
));

1255 
SSL_£t_vîify_dïth
(
SSL
 *
s
, 
dïth
);

1256 #i‚de‡
OPENSSL_NO_RSA


1257 
SSL_u£_RSAPriv©eKey
(
SSL
 *
s¶
, 
RSA
 *
rß
);

1259 
SSL_u£_RSAPriv©eKey_ASN1
(
SSL
 *
s¶
, *
d
, 
Àn
);

1260 
SSL_u£_Priv©eKey
(
SSL
 *
s¶
, 
EVP_PKEY
 *
pkey
);

1261 
SSL_u£_Priv©eKey_ASN1
(
pk
,
SSL
 *
s¶
, c⁄° *
d
, 
Àn
);

1262 
SSL_u£_˚πifiˇã
(
SSL
 *
s¶
, 
X509
 *
x
);

1263 
SSL_u£_˚πifiˇã_ASN1
(
SSL
 *
s¶
, c⁄° *
d
, 
Àn
);

1265 #i‚de‡
OPENSSL_NO_STDIO


1266 
SSL_u£_RSAPriv©eKey_fûe
(
SSL
 *
s¶
, c⁄° *
fûe
, 
ty≥
);

1267 
SSL_u£_Priv©eKey_fûe
(
SSL
 *
s¶
, c⁄° *
fûe
, 
ty≥
);

1268 
SSL_u£_˚πifiˇã_fûe
(
SSL
 *
s¶
, c⁄° *
fûe
, 
ty≥
);

1269 
SSL_CTX_u£_RSAPriv©eKey_fûe
(
SSL_CTX
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

1270 
SSL_CTX_u£_Priv©eKey_fûe
(
SSL_CTX
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

1271 
SSL_CTX_u£_˚πifiˇã_fûe
(
SSL_CTX
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

1272 
SSL_CTX_u£_˚πifiˇã_chaö_fûe
(
SSL_CTX
 *
˘x
, c⁄° *
fûe
);

1273 
STACK_OF
(
X509_NAME
Ë*
SSL_lﬂd_˛õ¡_CA_fûe
(c⁄° *
fûe
);

1274 
SSL_add_fûe_˚π_subje˘s_to_°ack
(
STACK_OF
(
X509_NAME
Ë*
°ackCAs
,

1275 c⁄° *
fûe
);

1276 #i‚de‡
OPENSSL_SYS_VMS


1277 #i‚de‡
OPENSSL_SYS_MACINTOSH_CLASSIC


1278 
SSL_add_dú_˚π_subje˘s_to_°ack
(
STACK_OF
(
X509_NAME
Ë*
°ackCAs
,

1279 c⁄° *
dú
);

1285 
SSL_lﬂd_îr‹_°rögs
();

1286 c⁄° *
SSL_°©e_°rög
(c⁄° 
SSL
 *
s
);

1287 c⁄° *
SSL_r°©e_°rög
(c⁄° 
SSL
 *
s
);

1288 c⁄° *
SSL_°©e_°rög_l⁄g
(c⁄° 
SSL
 *
s
);

1289 c⁄° *
SSL_r°©e_°rög_l⁄g
(c⁄° 
SSL
 *
s
);

1290 
SSL_SESSION_gë_time
(c⁄° 
SSL_SESSION
 *
s
);

1291 
SSL_SESSION_£t_time
(
SSL_SESSION
 *
s
, 
t
);

1292 
SSL_SESSION_gë_timeout
(c⁄° 
SSL_SESSION
 *
s
);

1293 
SSL_SESSION_£t_timeout
(
SSL_SESSION
 *
s
, 
t
);

1294 
SSL_c›y_£ssi⁄_id
(
SSL
 *
to
,c⁄° SSL *
‰om
);

1296 
SSL_SESSION
 *
SSL_SESSION_√w
();

1297 
SSL_SESSION_hash
(c⁄° 
SSL_SESSION
 *
a
);

1298 
SSL_SESSION_cmp
(c⁄° 
SSL_SESSION
 *
a
,c⁄° SSL_SESSION *
b
);

1299 c⁄° *
SSL_SESSION_gë_id
(c⁄° 
SSL_SESSION
 *
s
, *
Àn
);

1300 #i‚de‡
OPENSSL_NO_FP_API


1301 
SSL_SESSION_¥öt_Â
(
FILE
 *
Â
,c⁄° 
SSL_SESSION
 *
£s
);

1303 #i‚de‡
OPENSSL_NO_BIO


1304 
SSL_SESSION_¥öt
(
BIO
 *
Â
,c⁄° 
SSL_SESSION
 *
£s
);

1306 
SSL_SESSION_‰ì
(
SSL_SESSION
 *
£s
);

1307 
i2d_SSL_SESSION
(
SSL_SESSION
 *
ö
,**
µ
);

1308 
SSL_£t_£ssi⁄
(
SSL
 *
to
, 
SSL_SESSION
 *
£ssi⁄
);

1309 
SSL_CTX_add_£ssi⁄
(
SSL_CTX
 *
s
, 
SSL_SESSION
 *
c
);

1310 
SSL_CTX_ªmove_£ssi⁄
(
SSL_CTX
 *,
SSL_SESSION
 *
c
);

1311 
SSL_CTX_£t_gíî©e_£ssi⁄_id
(
SSL_CTX
 *, 
GEN_SESSION_CB
);

1312 
SSL_£t_gíî©e_£ssi⁄_id
(
SSL
 *, 
GEN_SESSION_CB
);

1313 
SSL_has_m©chög_£ssi⁄_id
(c⁄° 
SSL
 *
s¶
, c⁄° *
id
,

1314 
id_Àn
);

1315 
SSL_SESSION
 *
d2i_SSL_SESSION
(SSL_SESSION **
a
,c⁄° **
µ
,

1316 
Àngth
);

1318 #ifde‡
HEADER_X509_H


1319 
X509
 * 
SSL_gë_≥î_˚πifiˇã
(c⁄° 
SSL
 *
s
);

1322 
STACK_OF
(
X509
Ë*
SSL_gë_≥î_˚π_chaö
(c⁄° 
SSL
 *
s
);

1324 
SSL_CTX_gë_vîify_mode
(c⁄° 
SSL_CTX
 *
˘x
);

1325 
SSL_CTX_gë_vîify_dïth
(c⁄° 
SSL_CTX
 *
˘x
);

1326 (*
SSL_CTX_gë_vîify_ˇŒback
(c⁄° 
SSL_CTX
 *
˘x
))(,
X509_STORE_CTX
 *);

1327 
SSL_CTX_£t_vîify
(
SSL_CTX
 *
˘x
,
mode
,

1328 (*
ˇŒback
)(, 
X509_STORE_CTX
 *));

1329 
SSL_CTX_£t_vîify_dïth
(
SSL_CTX
 *
˘x
,
dïth
);

1330 
SSL_CTX_£t_˚π_vîify_ˇŒback
(
SSL_CTX
 *
˘x
, (*
cb
)(
X509_STORE_CTX
 *,*), *
¨g
);

1331 #i‚de‡
OPENSSL_NO_RSA


1332 
SSL_CTX_u£_RSAPriv©eKey
(
SSL_CTX
 *
˘x
, 
RSA
 *
rß
);

1334 
SSL_CTX_u£_RSAPriv©eKey_ASN1
(
SSL_CTX
 *
˘x
, c⁄° *
d
, 
Àn
);

1335 
SSL_CTX_u£_Priv©eKey
(
SSL_CTX
 *
˘x
, 
EVP_PKEY
 *
pkey
);

1336 
SSL_CTX_u£_Priv©eKey_ASN1
(
pk
,
SSL_CTX
 *
˘x
,

1337 c⁄° *
d
, 
Àn
);

1338 
SSL_CTX_u£_˚πifiˇã
(
SSL_CTX
 *
˘x
, 
X509
 *
x
);

1339 
SSL_CTX_u£_˚πifiˇã_ASN1
(
SSL_CTX
 *
˘x
, 
Àn
, c⁄° *
d
);

1341 
SSL_CTX_£t_deÁu…_∑sswd_cb
(
SSL_CTX
 *
˘x
, 
≥m_∑ssw‹d_cb
 *
cb
);

1342 
SSL_CTX_£t_deÁu…_∑sswd_cb_u£rd©a
(
SSL_CTX
 *
˘x
, *
u
);

1344 
SSL_CTX_check_¥iv©e_key
(c⁄° 
SSL_CTX
 *
˘x
);

1345 
SSL_check_¥iv©e_key
(c⁄° 
SSL
 *
˘x
);

1347 
SSL_CTX_£t_£ssi⁄_id_c⁄ãxt
(
SSL_CTX
 *
˘x
,c⁄° *
sid_˘x
,

1348 
sid_˘x_Àn
);

1350 
SSL
 * 
SSL_√w
(
SSL_CTX
 *
˘x
);

1351 
SSL_£t_£ssi⁄_id_c⁄ãxt
(
SSL
 *
s¶
,c⁄° *
sid_˘x
,

1352 
sid_˘x_Àn
);

1354 
SSL_CTX_£t_puΩo£
(
SSL_CTX
 *
s
, 
puΩo£
);

1355 
SSL_£t_puΩo£
(
SSL
 *
s
, 
puΩo£
);

1356 
SSL_CTX_£t_åu°
(
SSL_CTX
 *
s
, 
åu°
);

1357 
SSL_£t_åu°
(
SSL
 *
s
, 
åu°
);

1359 
SSL_‰ì
(
SSL
 *
s¶
);

1360 
SSL_ac˚±
(
SSL
 *
s¶
);

1361 
SSL_c⁄√˘
(
SSL
 *
s¶
);

1362 
SSL_ªad
(
SSL
 *
s¶
,*
buf
,
num
);

1363 
SSL_≥ek
(
SSL
 *
s¶
,*
buf
,
num
);

1364 
SSL_wrôe
(
SSL
 *
s¶
,c⁄° *
buf
,
num
);

1365 
SSL_˘æ
(
SSL
 *
s¶
,
cmd
, 
œrg
, *
∑rg
);

1366 
SSL_ˇŒback_˘æ
(
SSL
 *, , (*)());

1367 
SSL_CTX_˘æ
(
SSL_CTX
 *
˘x
,
cmd
, 
œrg
, *
∑rg
);

1368 
SSL_CTX_ˇŒback_˘æ
(
SSL_CTX
 *, , (*)());

1370 
SSL_gë_îr‹
(c⁄° 
SSL
 *
s
,
ªt_code
);

1371 c⁄° *
SSL_gë_vîsi⁄
(c⁄° 
SSL
 *
s
);

1374 
SSL_CTX_£t_s¶_vîsi⁄
(
SSL_CTX
 *
˘x
,
SSL_METHOD
 *
mëh
);

1376 
SSL_METHOD
 *
SSLv2_mëhod
();

1377 
SSL_METHOD
 *
SSLv2_£rvî_mëhod
();

1378 
SSL_METHOD
 *
SSLv2_˛õ¡_mëhod
();

1380 
SSL_METHOD
 *
SSLv3_mëhod
();

1381 
SSL_METHOD
 *
SSLv3_£rvî_mëhod
();

1382 
SSL_METHOD
 *
SSLv3_˛õ¡_mëhod
();

1384 
SSL_METHOD
 *
SSLv23_mëhod
();

1385 
SSL_METHOD
 *
SSLv23_£rvî_mëhod
();

1386 
SSL_METHOD
 *
SSLv23_˛õ¡_mëhod
();

1388 
SSL_METHOD
 *
TLSv1_mëhod
();

1389 
SSL_METHOD
 *
TLSv1_£rvî_mëhod
();

1390 
SSL_METHOD
 *
TLSv1_˛õ¡_mëhod
();

1392 
SSL_METHOD
 *
DTLSv1_mëhod
();

1393 
SSL_METHOD
 *
DTLSv1_£rvî_mëhod
();

1394 
SSL_METHOD
 *
DTLSv1_˛õ¡_mëhod
();

1396 
STACK_OF
(
SSL_CIPHER
Ë*
SSL_gë_cùhîs
(c⁄° 
SSL
 *
s
);

1398 
SSL_do_h™dshake
(
SSL
 *
s
);

1399 
SSL_ª√gŸüã
(
SSL
 *
s
);

1400 
SSL_ª√gŸüã_≥ndög
(
SSL
 *
s
);

1401 
SSL_shutdown
(
SSL
 *
s
);

1403 
SSL_METHOD
 *
SSL_gë_s¶_mëhod
(
SSL
 *
s
);

1404 
SSL_£t_s¶_mëhod
(
SSL
 *
s
,
SSL_METHOD
 *
mëhod
);

1405 c⁄° *
SSL_Æît_ty≥_°rög_l⁄g
(
vÆue
);

1406 c⁄° *
SSL_Æît_ty≥_°rög
(
vÆue
);

1407 c⁄° *
SSL_Æît_desc_°rög_l⁄g
(
vÆue
);

1408 c⁄° *
SSL_Æît_desc_°rög
(
vÆue
);

1410 
SSL_£t_˛õ¡_CA_li°
(
SSL
 *
s
, 
STACK_OF
(
X509_NAME
Ë*
«me_li°
);

1411 
SSL_CTX_£t_˛õ¡_CA_li°
(
SSL_CTX
 *
˘x
, 
STACK_OF
(
X509_NAME
Ë*
«me_li°
);

1412 
STACK_OF
(
X509_NAME
Ë*
SSL_gë_˛õ¡_CA_li°
(c⁄° 
SSL
 *
s
);

1413 
STACK_OF
(
X509_NAME
Ë*
SSL_CTX_gë_˛õ¡_CA_li°
(c⁄° 
SSL_CTX
 *
s
);

1414 
SSL_add_˛õ¡_CA
(
SSL
 *
s¶
,
X509
 *
x
);

1415 
SSL_CTX_add_˛õ¡_CA
(
SSL_CTX
 *
˘x
,
X509
 *
x
);

1417 
SSL_£t_c⁄√˘_°©e
(
SSL
 *
s
);

1418 
SSL_£t_ac˚±_°©e
(
SSL
 *
s
);

1420 
SSL_gë_deÁu…_timeout
(c⁄° 
SSL
 *
s
);

1422 
SSL_libøry_öô
();

1424 *
SSL_CIPHER_des¸ùti⁄
(
SSL_CIPHER
 *,*
buf
,
size
);

1425 
STACK_OF
(
X509_NAME
Ë*
SSL_dup_CA_li°
(STACK_OF(X509_NAMEË*
sk
);

1427 
SSL
 *
SSL_dup
(SSL *
s¶
);

1429 
X509
 *
SSL_gë_˚πifiˇã
(c⁄° 
SSL
 *
s¶
);

1430  
evp_pkey_°
 *
SSL_gë_¥iv©ekey
(
SSL
 *
s¶
);

1432 
SSL_CTX_£t_quõt_shutdown
(
SSL_CTX
 *
˘x
,
mode
);

1433 
SSL_CTX_gë_quõt_shutdown
(c⁄° 
SSL_CTX
 *
˘x
);

1434 
SSL_£t_quõt_shutdown
(
SSL
 *
s¶
,
mode
);

1435 
SSL_gë_quõt_shutdown
(c⁄° 
SSL
 *
s¶
);

1436 
SSL_£t_shutdown
(
SSL
 *
s¶
,
mode
);

1437 
SSL_gë_shutdown
(c⁄° 
SSL
 *
s¶
);

1438 
SSL_vîsi⁄
(c⁄° 
SSL
 *
s¶
);

1439 
SSL_CTX_£t_deÁu…_vîify_∑ths
(
SSL_CTX
 *
˘x
);

1440 
SSL_CTX_lﬂd_vîify_loˇti⁄s
(
SSL_CTX
 *
˘x
, c⁄° *
CAfûe
,

1441 c⁄° *
CA∑th
);

1442 
	#SSL_gë0_£ssi⁄
 
SSL_gë_£ssi⁄


	)

1443 
SSL_SESSION
 *
SSL_gë_£ssi⁄
(c⁄° 
SSL
 *
s¶
);

1444 
SSL_SESSION
 *
SSL_gë1_£ssi⁄
(
SSL
 *
s¶
);

1445 
SSL_CTX
 *
SSL_gë_SSL_CTX
(c⁄° 
SSL
 *
s¶
);

1446 
SSL_£t_öfo_ˇŒback
(
SSL
 *
s¶
,

1447 (*
cb
)(c⁄° 
SSL
 *
s¶
,
ty≥
,
vÆ
));

1448 (*
SSL_gë_öfo_ˇŒback
(c⁄° 
SSL
 *
s¶
))(c⁄° SSL *s¶,
ty≥
,
vÆ
);

1449 
SSL_°©e
(c⁄° 
SSL
 *
s¶
);

1451 
SSL_£t_vîify_ªsu…
(
SSL
 *
s¶
,
v
);

1452 
SSL_gë_vîify_ªsu…
(c⁄° 
SSL
 *
s¶
);

1454 
SSL_£t_ex_d©a
(
SSL
 *
s¶
,
idx
,*
d©a
);

1455 *
SSL_gë_ex_d©a
(c⁄° 
SSL
 *
s¶
,
idx
);

1456 
SSL_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

1457 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

1459 
SSL_SESSION_£t_ex_d©a
(
SSL_SESSION
 *
ss
,
idx
,*
d©a
);

1460 *
SSL_SESSION_gë_ex_d©a
(c⁄° 
SSL_SESSION
 *
ss
,
idx
);

1461 
SSL_SESSION_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

1462 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

1464 
SSL_CTX_£t_ex_d©a
(
SSL_CTX
 *
s¶
,
idx
,*
d©a
);

1465 *
SSL_CTX_gë_ex_d©a
(c⁄° 
SSL_CTX
 *
s¶
,
idx
);

1466 
SSL_CTX_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

1467 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

1469 
SSL_gë_ex_d©a_X509_STORE_CTX_idx
();

1471 
	#SSL_CTX_£ss_£t_ˇche_size
(
˘x
,
t
) \

1472 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_SESS_CACHE_SIZE
,
t
,
NULL
)

	)

1473 
	#SSL_CTX_£ss_gë_ˇche_size
(
˘x
) \

1474 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_GET_SESS_CACHE_SIZE
,0,
NULL
)

	)

1475 
	#SSL_CTX_£t_£ssi⁄_ˇche_mode
(
˘x
,
m
) \

1476 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_SESS_CACHE_MODE
,
m
,
NULL
)

	)

1477 
	#SSL_CTX_gë_£ssi⁄_ˇche_mode
(
˘x
) \

1478 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_GET_SESS_CACHE_MODE
,0,
NULL
)

	)

1480 
	#SSL_CTX_gë_deÁu…_ªad_ahód
(
˘x
Ë
	`SSL_CTX_gë_ªad_ahód
(˘x)

	)

1481 
	#SSL_CTX_£t_deÁu…_ªad_ahód
(
˘x
,
m
Ë
	`SSL_CTX_£t_ªad_ahód
(˘x,m)

	)

1482 
	#SSL_CTX_gë_ªad_ahód
(
˘x
) \

1483 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_GET_READ_AHEAD
,0,
NULL
)

	)

1484 
	#SSL_CTX_£t_ªad_ahód
(
˘x
,
m
) \

1485 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_READ_AHEAD
,
m
,
NULL
)

	)

1486 
	#SSL_CTX_gë_max_˚π_li°
(
˘x
) \

1487 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_GET_MAX_CERT_LIST
,0,
NULL
)

	)

1488 
	#SSL_CTX_£t_max_˚π_li°
(
˘x
,
m
) \

1489 
	`SSL_CTX_˘æ
(
˘x
,
SSL_CTRL_SET_MAX_CERT_LIST
,
m
,
NULL
)

	)

1490 
	#SSL_gë_max_˚π_li°
(
s¶
) \

1491 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_GET_MAX_CERT_LIST
,0,
NULL
)

	)

1492 
	#SSL_£t_max_˚π_li°
(
s¶
,
m
) \

1493 
	`SSL_˘æ
(
s¶
,
SSL_CTRL_SET_MAX_CERT_LIST
,
m
,
NULL
)

	)

1496 #i‚de‡
OPENSSL_NO_RSA


1497 
SSL_CTX_£t_tmp_rß_ˇŒback
(
SSL_CTX
 *
˘x
,

1498 
RSA
 *(*
cb
)(
SSL
 *
s¶
,
is_exp‹t
,

1499 
keyÀngth
));

1501 
SSL_£t_tmp_rß_ˇŒback
(
SSL
 *
s¶
,

1502 
RSA
 *(*
cb
)(
SSL
 *
s¶
,
is_exp‹t
,

1503 
keyÀngth
));

1505 #i‚de‡
OPENSSL_NO_DH


1506 
SSL_CTX_£t_tmp_dh_ˇŒback
(
SSL_CTX
 *
˘x
,

1507 
DH
 *(*
dh
)(
SSL
 *
s¶
,
is_exp‹t
,

1508 
keyÀngth
));

1509 
SSL_£t_tmp_dh_ˇŒback
(
SSL
 *
s¶
,

1510 
DH
 *(*
dh
)(
SSL
 *
s¶
,
is_exp‹t
,

1511 
keyÀngth
));

1514 #i‚de‡
OPENSSL_NO_COMP


1515 c⁄° 
COMP_METHOD
 *
SSL_gë_cuºít_com¥essi⁄
(
SSL
 *
s
);

1516 c⁄° 
COMP_METHOD
 *
SSL_gë_cuºít_ex∑nsi⁄
(
SSL
 *
s
);

1517 c⁄° *
SSL_COMP_gë_«me
(c⁄° 
COMP_METHOD
 *
comp
);

1518 
STACK_OF
(
SSL_COMP
Ë*
SSL_COMP_gë_com¥essi⁄_mëhods
();

1519 
SSL_COMP_add_com¥essi⁄_mëhod
(
id
,
COMP_METHOD
 *
cm
);

1521 c⁄° *
SSL_gë_cuºít_com¥essi⁄
(
SSL
 *
s
);

1522 c⁄° *
SSL_gë_cuºít_ex∑nsi⁄
(
SSL
 *
s
);

1523 c⁄° *
SSL_COMP_gë_«me
(c⁄° *
comp
);

1524 *
SSL_COMP_gë_com¥essi⁄_mëhods
();

1525 
SSL_COMP_add_com¥essi⁄_mëhod
(
id
,*
cm
);

1532 
ERR_lﬂd_SSL_°rögs
();

1537 
	#SSL_F_CLIENT_CERTIFICATE
 100

	)

1538 
	#SSL_F_CLIENT_FINISHED
 167

	)

1539 
	#SSL_F_CLIENT_HELLO
 101

	)

1540 
	#SSL_F_CLIENT_MASTER_KEY
 102

	)

1541 
	#SSL_F_D2I_SSL_SESSION
 103

	)

1542 
	#SSL_F_DO_DTLS1_WRITE
 245

	)

1543 
	#SSL_F_DO_SSL3_WRITE
 104

	)

1544 
	#SSL_F_DTLS1_ACCEPT
 246

	)

1545 
	#SSL_F_DTLS1_BUFFER_RECORD
 247

	)

1546 
	#SSL_F_DTLS1_CLIENT_HELLO
 248

	)

1547 
	#SSL_F_DTLS1_CONNECT
 249

	)

1548 
	#SSL_F_DTLS1_ENC
 250

	)

1549 
	#SSL_F_DTLS1_GET_HELLO_VERIFY
 251

	)

1550 
	#SSL_F_DTLS1_GET_MESSAGE
 252

	)

1551 
	#SSL_F_DTLS1_GET_MESSAGE_FRAGMENT
 253

	)

1552 
	#SSL_F_DTLS1_GET_RECORD
 254

	)

1553 
	#SSL_F_DTLS1_OUTPUT_CERT_CHAIN
 255

	)

1554 
	#SSL_F_DTLS1_PREPROCESS_FRAGMENT
 277

	)

1555 
	#SSL_F_DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE
 256

	)

1556 
	#SSL_F_DTLS1_PROCESS_RECORD
 257

	)

1557 
	#SSL_F_DTLS1_READ_BYTES
 258

	)

1558 
	#SSL_F_DTLS1_READ_FAILED
 259

	)

1559 
	#SSL_F_DTLS1_SEND_CERTIFICATE_REQUEST
 260

	)

1560 
	#SSL_F_DTLS1_SEND_CLIENT_CERTIFICATE
 261

	)

1561 
	#SSL_F_DTLS1_SEND_CLIENT_KEY_EXCHANGE
 262

	)

1562 
	#SSL_F_DTLS1_SEND_CLIENT_VERIFY
 263

	)

1563 
	#SSL_F_DTLS1_SEND_HELLO_VERIFY_REQUEST
 264

	)

1564 
	#SSL_F_DTLS1_SEND_SERVER_CERTIFICATE
 265

	)

1565 
	#SSL_F_DTLS1_SEND_SERVER_HELLO
 266

	)

1566 
	#SSL_F_DTLS1_SEND_SERVER_KEY_EXCHANGE
 267

	)

1567 
	#SSL_F_DTLS1_WRITE_APP_DATA_BYTES
 268

	)

1568 
	#SSL_F_GET_CLIENT_FINISHED
 105

	)

1569 
	#SSL_F_GET_CLIENT_HELLO
 106

	)

1570 
	#SSL_F_GET_CLIENT_MASTER_KEY
 107

	)

1571 
	#SSL_F_GET_SERVER_FINISHED
 108

	)

1572 
	#SSL_F_GET_SERVER_HELLO
 109

	)

1573 
	#SSL_F_GET_SERVER_VERIFY
 110

	)

1574 
	#SSL_F_I2D_SSL_SESSION
 111

	)

1575 
	#SSL_F_READ_N
 112

	)

1576 
	#SSL_F_REQUEST_CERTIFICATE
 113

	)

1577 
	#SSL_F_SERVER_FINISH
 239

	)

1578 
	#SSL_F_SERVER_HELLO
 114

	)

1579 
	#SSL_F_SERVER_VERIFY
 240

	)

1580 
	#SSL_F_SSL23_ACCEPT
 115

	)

1581 
	#SSL_F_SSL23_CLIENT_HELLO
 116

	)

1582 
	#SSL_F_SSL23_CONNECT
 117

	)

1583 
	#SSL_F_SSL23_GET_CLIENT_HELLO
 118

	)

1584 
	#SSL_F_SSL23_GET_SERVER_HELLO
 119

	)

1585 
	#SSL_F_SSL23_PEEK
 237

	)

1586 
	#SSL_F_SSL23_READ
 120

	)

1587 
	#SSL_F_SSL23_WRITE
 121

	)

1588 
	#SSL_F_SSL2_ACCEPT
 122

	)

1589 
	#SSL_F_SSL2_CONNECT
 123

	)

1590 
	#SSL_F_SSL2_ENC_INIT
 124

	)

1591 
	#SSL_F_SSL2_GENERATE_KEY_MATERIAL
 241

	)

1592 
	#SSL_F_SSL2_PEEK
 234

	)

1593 
	#SSL_F_SSL2_READ
 125

	)

1594 
	#SSL_F_SSL2_READ_INTERNAL
 236

	)

1595 
	#SSL_F_SSL2_SET_CERTIFICATE
 126

	)

1596 
	#SSL_F_SSL2_WRITE
 127

	)

1597 
	#SSL_F_SSL3_ACCEPT
 128

	)

1598 
	#SSL_F_SSL3_CALLBACK_CTRL
 233

	)

1599 
	#SSL_F_SSL3_CHANGE_CIPHER_STATE
 129

	)

1600 
	#SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM
 130

	)

1601 
	#SSL_F_SSL3_CLIENT_HELLO
 131

	)

1602 
	#SSL_F_SSL3_CONNECT
 132

	)

1603 
	#SSL_F_SSL3_CTRL
 213

	)

1604 
	#SSL_F_SSL3_CTX_CTRL
 133

	)

1605 
	#SSL_F_SSL3_ENC
 134

	)

1606 
	#SSL_F_SSL3_GENERATE_KEY_BLOCK
 238

	)

1607 
	#SSL_F_SSL3_GET_CERTIFICATE_REQUEST
 135

	)

1608 
	#SSL_F_SSL3_GET_CERT_VERIFY
 136

	)

1609 
	#SSL_F_SSL3_GET_CLIENT_CERTIFICATE
 137

	)

1610 
	#SSL_F_SSL3_GET_CLIENT_HELLO
 138

	)

1611 
	#SSL_F_SSL3_GET_CLIENT_KEY_EXCHANGE
 139

	)

1612 
	#SSL_F_SSL3_GET_FINISHED
 140

	)

1613 
	#SSL_F_SSL3_GET_KEY_EXCHANGE
 141

	)

1614 
	#SSL_F_SSL3_GET_MESSAGE
 142

	)

1615 
	#SSL_F_SSL3_GET_RECORD
 143

	)

1616 
	#SSL_F_SSL3_GET_SERVER_CERTIFICATE
 144

	)

1617 
	#SSL_F_SSL3_GET_SERVER_DONE
 145

	)

1618 
	#SSL_F_SSL3_GET_SERVER_HELLO
 146

	)

1619 
	#SSL_F_SSL3_OUTPUT_CERT_CHAIN
 147

	)

1620 
	#SSL_F_SSL3_PEEK
 235

	)

1621 
	#SSL_F_SSL3_READ_BYTES
 148

	)

1622 
	#SSL_F_SSL3_READ_N
 149

	)

1623 
	#SSL_F_SSL3_SEND_CERTIFICATE_REQUEST
 150

	)

1624 
	#SSL_F_SSL3_SEND_CLIENT_CERTIFICATE
 151

	)

1625 
	#SSL_F_SSL3_SEND_CLIENT_KEY_EXCHANGE
 152

	)

1626 
	#SSL_F_SSL3_SEND_CLIENT_VERIFY
 153

	)

1627 
	#SSL_F_SSL3_SEND_SERVER_CERTIFICATE
 154

	)

1628 
	#SSL_F_SSL3_SEND_SERVER_HELLO
 242

	)

1629 
	#SSL_F_SSL3_SEND_SERVER_KEY_EXCHANGE
 155

	)

1630 
	#SSL_F_SSL3_SETUP_BUFFERS
 156

	)

1631 
	#SSL_F_SSL3_SETUP_KEY_BLOCK
 157

	)

1632 
	#SSL_F_SSL3_WRITE_BYTES
 158

	)

1633 
	#SSL_F_SSL3_WRITE_PENDING
 159

	)

1634 
	#SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK
 215

	)

1635 
	#SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK
 216

	)

1636 
	#SSL_F_SSL_BAD_METHOD
 160

	)

1637 
	#SSL_F_SSL_BYTES_TO_CIPHER_LIST
 161

	)

1638 
	#SSL_F_SSL_CERT_DUP
 221

	)

1639 
	#SSL_F_SSL_CERT_INST
 222

	)

1640 
	#SSL_F_SSL_CERT_INSTANTIATE
 214

	)

1641 
	#SSL_F_SSL_CERT_NEW
 162

	)

1642 
	#SSL_F_SSL_CHECK_PRIVATE_KEY
 163

	)

1643 
	#SSL_F_SSL_CIPHER_PROCESS_RULESTR
 230

	)

1644 
	#SSL_F_SSL_CIPHER_STRENGTH_SORT
 231

	)

1645 
	#SSL_F_SSL_CLEAR
 164

	)

1646 
	#SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD
 165

	)

1647 
	#SSL_F_SSL_CREATE_CIPHER_LIST
 166

	)

1648 
	#SSL_F_SSL_CTRL
 232

	)

1649 
	#SSL_F_SSL_CTX_CHECK_PRIVATE_KEY
 168

	)

1650 
	#SSL_F_SSL_CTX_NEW
 169

	)

1651 
	#SSL_F_SSL_CTX_SET_CIPHER_LIST
 269

	)

1652 
	#SSL_F_SSL_CTX_SET_PURPOSE
 226

	)

1653 
	#SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT
 219

	)

1654 
	#SSL_F_SSL_CTX_SET_SSL_VERSION
 170

	)

1655 
	#SSL_F_SSL_CTX_SET_TRUST
 229

	)

1656 
	#SSL_F_SSL_CTX_USE_CERTIFICATE
 171

	)

1657 
	#SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1
 172

	)

1658 
	#SSL_F_SSL_CTX_USE_CERTIFICATE_CHAIN_FILE
 220

	)

1659 
	#SSL_F_SSL_CTX_USE_CERTIFICATE_FILE
 173

	)

1660 
	#SSL_F_SSL_CTX_USE_PRIVATEKEY
 174

	)

1661 
	#SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1
 175

	)

1662 
	#SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE
 176

	)

1663 
	#SSL_F_SSL_CTX_USE_RSAPRIVATEKEY
 177

	)

1664 
	#SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1
 178

	)

1665 
	#SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE
 179

	)

1666 
	#SSL_F_SSL_DO_HANDSHAKE
 180

	)

1667 
	#SSL_F_SSL_GET_NEW_SESSION
 181

	)

1668 
	#SSL_F_SSL_GET_PREV_SESSION
 217

	)

1669 
	#SSL_F_SSL_GET_SERVER_SEND_CERT
 182

	)

1670 
	#SSL_F_SSL_GET_SIGN_PKEY
 183

	)

1671 
	#SSL_F_SSL_INIT_WBIO_BUFFER
 184

	)

1672 
	#SSL_F_SSL_LOAD_CLIENT_CA_FILE
 185

	)

1673 
	#SSL_F_SSL_NEW
 186

	)

1674 
	#SSL_F_SSL_PEEK
 270

	)

1675 
	#SSL_F_SSL_READ
 223

	)

1676 
	#SSL_F_SSL_RSA_PRIVATE_DECRYPT
 187

	)

1677 
	#SSL_F_SSL_RSA_PUBLIC_ENCRYPT
 188

	)

1678 
	#SSL_F_SSL_SESSION_NEW
 189

	)

1679 
	#SSL_F_SSL_SESSION_PRINT_FP
 190

	)

1680 
	#SSL_F_SSL_SESS_CERT_NEW
 225

	)

1681 
	#SSL_F_SSL_SET_CERT
 191

	)

1682 
	#SSL_F_SSL_SET_CIPHER_LIST
 271

	)

1683 
	#SSL_F_SSL_SET_FD
 192

	)

1684 
	#SSL_F_SSL_SET_PKEY
 193

	)

1685 
	#SSL_F_SSL_SET_PURPOSE
 227

	)

1686 
	#SSL_F_SSL_SET_RFD
 194

	)

1687 
	#SSL_F_SSL_SET_SESSION
 195

	)

1688 
	#SSL_F_SSL_SET_SESSION_ID_CONTEXT
 218

	)

1689 
	#SSL_F_SSL_SET_TRUST
 228

	)

1690 
	#SSL_F_SSL_SET_WFD
 196

	)

1691 
	#SSL_F_SSL_SHUTDOWN
 224

	)

1692 
	#SSL_F_SSL_UNDEFINED_CONST_FUNCTION
 243

	)

1693 
	#SSL_F_SSL_UNDEFINED_FUNCTION
 197

	)

1694 
	#SSL_F_SSL_UNDEFINED_VOID_FUNCTION
 244

	)

1695 
	#SSL_F_SSL_USE_CERTIFICATE
 198

	)

1696 
	#SSL_F_SSL_USE_CERTIFICATE_ASN1
 199

	)

1697 
	#SSL_F_SSL_USE_CERTIFICATE_FILE
 200

	)

1698 
	#SSL_F_SSL_USE_PRIVATEKEY
 201

	)

1699 
	#SSL_F_SSL_USE_PRIVATEKEY_ASN1
 202

	)

1700 
	#SSL_F_SSL_USE_PRIVATEKEY_FILE
 203

	)

1701 
	#SSL_F_SSL_USE_RSAPRIVATEKEY
 204

	)

1702 
	#SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1
 205

	)

1703 
	#SSL_F_SSL_USE_RSAPRIVATEKEY_FILE
 206

	)

1704 
	#SSL_F_SSL_VERIFY_CERT_CHAIN
 207

	)

1705 
	#SSL_F_SSL_WRITE
 208

	)

1706 
	#SSL_F_TLS1_CHANGE_CIPHER_STATE
 209

	)

1707 
	#SSL_F_TLS1_ENC
 210

	)

1708 
	#SSL_F_TLS1_SETUP_KEY_BLOCK
 211

	)

1709 
	#SSL_F_WRITE_PENDING
 212

	)

1712 
	#SSL_R_APP_DATA_IN_HANDSHAKE
 100

	)

1713 
	#SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT
 272

	)

1714 
	#SSL_R_BAD_ALERT_RECORD
 101

	)

1715 
	#SSL_R_BAD_AUTHENTICATION_TYPE
 102

	)

1716 
	#SSL_R_BAD_CHANGE_CIPHER_SPEC
 103

	)

1717 
	#SSL_R_BAD_CHECKSUM
 104

	)

1718 
	#SSL_R_BAD_DATA_RETURNED_BY_CALLBACK
 106

	)

1719 
	#SSL_R_BAD_DECOMPRESSION
 107

	)

1720 
	#SSL_R_BAD_DH_G_LENGTH
 108

	)

1721 
	#SSL_R_BAD_DH_PUB_KEY_LENGTH
 109

	)

1722 
	#SSL_R_BAD_DH_P_LENGTH
 110

	)

1723 
	#SSL_R_BAD_DIGEST_LENGTH
 111

	)

1724 
	#SSL_R_BAD_DSA_SIGNATURE
 112

	)

1725 
	#SSL_R_BAD_ECC_CERT
 304

	)

1726 
	#SSL_R_BAD_ECDSA_SIGNATURE
 305

	)

1727 
	#SSL_R_BAD_ECPOINT
 306

	)

1728 
	#SSL_R_BAD_HELLO_REQUEST
 105

	)

1729 
	#SSL_R_BAD_LENGTH
 271

	)

1730 
	#SSL_R_BAD_MAC_DECODE
 113

	)

1731 
	#SSL_R_BAD_MESSAGE_TYPE
 114

	)

1732 
	#SSL_R_BAD_PACKET_LENGTH
 115

	)

1733 
	#SSL_R_BAD_PROTOCOL_VERSION_NUMBER
 116

	)

1734 
	#SSL_R_BAD_RESPONSE_ARGUMENT
 117

	)

1735 
	#SSL_R_BAD_RSA_DECRYPT
 118

	)

1736 
	#SSL_R_BAD_RSA_ENCRYPT
 119

	)

1737 
	#SSL_R_BAD_RSA_E_LENGTH
 120

	)

1738 
	#SSL_R_BAD_RSA_MODULUS_LENGTH
 121

	)

1739 
	#SSL_R_BAD_RSA_SIGNATURE
 122

	)

1740 
	#SSL_R_BAD_SIGNATURE
 123

	)

1741 
	#SSL_R_BAD_SSL_FILETYPE
 124

	)

1742 
	#SSL_R_BAD_SSL_SESSION_ID_LENGTH
 125

	)

1743 
	#SSL_R_BAD_STATE
 126

	)

1744 
	#SSL_R_BAD_WRITE_RETRY
 127

	)

1745 
	#SSL_R_BIO_NOT_SET
 128

	)

1746 
	#SSL_R_BLOCK_CIPHER_PAD_IS_WRONG
 129

	)

1747 
	#SSL_R_BN_LIB
 130

	)

1748 
	#SSL_R_CA_DN_LENGTH_MISMATCH
 131

	)

1749 
	#SSL_R_CA_DN_TOO_LONG
 132

	)

1750 
	#SSL_R_CCS_RECEIVED_EARLY
 133

	)

1751 
	#SSL_R_CERTIFICATE_VERIFY_FAILED
 134

	)

1752 
	#SSL_R_CERT_LENGTH_MISMATCH
 135

	)

1753 
	#SSL_R_CHALLENGE_IS_DIFFERENT
 136

	)

1754 
	#SSL_R_CIPHER_CODE_WRONG_LENGTH
 137

	)

1755 
	#SSL_R_CIPHER_OR_HASH_UNAVAILABLE
 138

	)

1756 
	#SSL_R_CIPHER_TABLE_SRC_ERROR
 139

	)

1757 
	#SSL_R_COMPRESSED_LENGTH_TOO_LONG
 140

	)

1758 
	#SSL_R_COMPRESSION_FAILURE
 141

	)

1759 
	#SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE
 307

	)

1760 
	#SSL_R_COMPRESSION_LIBRARY_ERROR
 142

	)

1761 
	#SSL_R_CONNECTION_ID_IS_DIFFERENT
 143

	)

1762 
	#SSL_R_CONNECTION_TYPE_NOT_SET
 144

	)

1763 
	#SSL_R_COOKIE_MISMATCH
 308

	)

1764 
	#SSL_R_DATA_BETWEEN_CCS_AND_FINISHED
 145

	)

1765 
	#SSL_R_DATA_LENGTH_TOO_LONG
 146

	)

1766 
	#SSL_R_DECRYPTION_FAILED
 147

	)

1767 
	#SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC
 281

	)

1768 
	#SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG
 148

	)

1769 
	#SSL_R_DIGEST_CHECK_FAILED
 149

	)

1770 
	#SSL_R_DUPLICATE_COMPRESSION_ID
 309

	)

1771 
	#SSL_R_ECGROUP_TOO_LARGE_FOR_CIPHER
 310

	)

1772 
	#SSL_R_ENCRYPTED_LENGTH_TOO_LONG
 150

	)

1773 
	#SSL_R_ERROR_GENERATING_TMP_RSA_KEY
 282

	)

1774 
	#SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST
 151

	)

1775 
	#SSL_R_EXCESSIVE_MESSAGE_SIZE
 152

	)

1776 
	#SSL_R_EXTRA_DATA_IN_MESSAGE
 153

	)

1777 
	#SSL_R_GOT_A_FIN_BEFORE_A_CCS
 154

	)

1778 
	#SSL_R_HTTPS_PROXY_REQUEST
 155

	)

1779 
	#SSL_R_HTTP_REQUEST
 156

	)

1780 
	#SSL_R_ILLEGAL_PADDING
 283

	)

1781 
	#SSL_R_INVALID_CHALLENGE_LENGTH
 158

	)

1782 
	#SSL_R_INVALID_COMMAND
 280

	)

1783 
	#SSL_R_INVALID_PURPOSE
 278

	)

1784 
	#SSL_R_INVALID_TRUST
 279

	)

1785 
	#SSL_R_KEY_ARG_TOO_LONG
 284

	)

1786 
	#SSL_R_KRB5
 285

	)

1787 
	#SSL_R_KRB5_C_CC_PRINC
 286

	)

1788 
	#SSL_R_KRB5_C_GET_CRED
 287

	)

1789 
	#SSL_R_KRB5_C_INIT
 288

	)

1790 
	#SSL_R_KRB5_C_MK_REQ
 289

	)

1791 
	#SSL_R_KRB5_S_BAD_TICKET
 290

	)

1792 
	#SSL_R_KRB5_S_INIT
 291

	)

1793 
	#SSL_R_KRB5_S_RD_REQ
 292

	)

1794 
	#SSL_R_KRB5_S_TKT_EXPIRED
 293

	)

1795 
	#SSL_R_KRB5_S_TKT_NYV
 294

	)

1796 
	#SSL_R_KRB5_S_TKT_SKEW
 295

	)

1797 
	#SSL_R_LENGTH_MISMATCH
 159

	)

1798 
	#SSL_R_LENGTH_TOO_SHORT
 160

	)

1799 
	#SSL_R_LIBRARY_BUG
 274

	)

1800 
	#SSL_R_LIBRARY_HAS_NO_CIPHERS
 161

	)

1801 
	#SSL_R_MESSAGE_TOO_LONG
 296

	)

1802 
	#SSL_R_MISSING_DH_DSA_CERT
 162

	)

1803 
	#SSL_R_MISSING_DH_KEY
 163

	)

1804 
	#SSL_R_MISSING_DH_RSA_CERT
 164

	)

1805 
	#SSL_R_MISSING_DSA_SIGNING_CERT
 165

	)

1806 
	#SSL_R_MISSING_EXPORT_TMP_DH_KEY
 166

	)

1807 
	#SSL_R_MISSING_EXPORT_TMP_RSA_KEY
 167

	)

1808 
	#SSL_R_MISSING_RSA_CERTIFICATE
 168

	)

1809 
	#SSL_R_MISSING_RSA_ENCRYPTING_CERT
 169

	)

1810 
	#SSL_R_MISSING_RSA_SIGNING_CERT
 170

	)

1811 
	#SSL_R_MISSING_TMP_DH_KEY
 171

	)

1812 
	#SSL_R_MISSING_TMP_ECDH_KEY
 311

	)

1813 
	#SSL_R_MISSING_TMP_RSA_KEY
 172

	)

1814 
	#SSL_R_MISSING_TMP_RSA_PKEY
 173

	)

1815 
	#SSL_R_MISSING_VERIFY_MESSAGE
 174

	)

1816 
	#SSL_R_NON_SSLV2_INITIAL_PACKET
 175

	)

1817 
	#SSL_R_NO_CERTIFICATES_RETURNED
 176

	)

1818 
	#SSL_R_NO_CERTIFICATE_ASSIGNED
 177

	)

1819 
	#SSL_R_NO_CERTIFICATE_RETURNED
 178

	)

1820 
	#SSL_R_NO_CERTIFICATE_SET
 179

	)

1821 
	#SSL_R_NO_CERTIFICATE_SPECIFIED
 180

	)

1822 
	#SSL_R_NO_CIPHERS_AVAILABLE
 181

	)

1823 
	#SSL_R_NO_CIPHERS_PASSED
 182

	)

1824 
	#SSL_R_NO_CIPHERS_SPECIFIED
 183

	)

1825 
	#SSL_R_NO_CIPHER_LIST
 184

	)

1826 
	#SSL_R_NO_CIPHER_MATCH
 185

	)

1827 
	#SSL_R_NO_CLIENT_CERT_RECEIVED
 186

	)

1828 
	#SSL_R_NO_COMPRESSION_SPECIFIED
 187

	)

1829 
	#SSL_R_NO_METHOD_SPECIFIED
 188

	)

1830 
	#SSL_R_NO_PRIVATEKEY
 189

	)

1831 
	#SSL_R_NO_PRIVATE_KEY_ASSIGNED
 190

	)

1832 
	#SSL_R_NO_PROTOCOLS_AVAILABLE
 191

	)

1833 
	#SSL_R_NO_PUBLICKEY
 192

	)

1834 
	#SSL_R_NO_SHARED_CIPHER
 193

	)

1835 
	#SSL_R_NO_VERIFY_CALLBACK
 194

	)

1836 
	#SSL_R_NULL_SSL_CTX
 195

	)

1837 
	#SSL_R_NULL_SSL_METHOD_PASSED
 196

	)

1838 
	#SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED
 197

	)

1839 
	#SSL_R_ONLY_TLS_ALLOWED_IN_FIPS_MODE
 297

	)

1840 
	#SSL_R_PACKET_LENGTH_TOO_LONG
 198

	)

1841 
	#SSL_R_PATH_TOO_LONG
 270

	)

1842 
	#SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE
 199

	)

1843 
	#SSL_R_PEER_ERROR
 200

	)

1844 
	#SSL_R_PEER_ERROR_CERTIFICATE
 201

	)

1845 
	#SSL_R_PEER_ERROR_NO_CERTIFICATE
 202

	)

1846 
	#SSL_R_PEER_ERROR_NO_CIPHER
 203

	)

1847 
	#SSL_R_PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE
 204

	)

1848 
	#SSL_R_PRE_MAC_LENGTH_TOO_LONG
 205

	)

1849 
	#SSL_R_PROBLEMS_MAPPING_CIPHER_FUNCTIONS
 206

	)

1850 
	#SSL_R_PROTOCOL_IS_SHUTDOWN
 207

	)

1851 
	#SSL_R_PUBLIC_KEY_ENCRYPT_ERROR
 208

	)

1852 
	#SSL_R_PUBLIC_KEY_IS_NOT_RSA
 209

	)

1853 
	#SSL_R_PUBLIC_KEY_NOT_RSA
 210

	)

1854 
	#SSL_R_READ_BIO_NOT_SET
 211

	)

1855 
	#SSL_R_READ_TIMEOUT_EXPIRED
 312

	)

1856 
	#SSL_R_READ_WRONG_PACKET_TYPE
 212

	)

1857 
	#SSL_R_RECORD_LENGTH_MISMATCH
 213

	)

1858 
	#SSL_R_RECORD_TOO_LARGE
 214

	)

1859 
	#SSL_R_RECORD_TOO_SMALL
 298

	)

1860 
	#SSL_R_REQUIRED_CIPHER_MISSING
 215

	)

1861 
	#SSL_R_REUSE_CERT_LENGTH_NOT_ZERO
 216

	)

1862 
	#SSL_R_REUSE_CERT_TYPE_NOT_ZERO
 217

	)

1863 
	#SSL_R_REUSE_CIPHER_LIST_NOT_ZERO
 218

	)

1864 
	#SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED
 277

	)

1865 
	#SSL_R_SHORT_READ
 219

	)

1866 
	#SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE
 220

	)

1867 
	#SSL_R_SSL23_DOING_SESSION_ID_REUSE
 221

	)

1868 
	#SSL_R_SSL2_CONNECTION_ID_TOO_LONG
 299

	)

1869 
	#SSL_R_SSL3_SESSION_ID_TOO_LONG
 300

	)

1870 
	#SSL_R_SSL3_SESSION_ID_TOO_SHORT
 222

	)

1871 
	#SSL_R_SSLV3_ALERT_BAD_CERTIFICATE
 1042

	)

1872 
	#SSL_R_SSLV3_ALERT_BAD_RECORD_MAC
 1020

	)

1873 
	#SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED
 1045

	)

1874 
	#SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED
 1044

	)

1875 
	#SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN
 1046

	)

1876 
	#SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE
 1030

	)

1877 
	#SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE
 1040

	)

1878 
	#SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER
 1047

	)

1879 
	#SSL_R_SSLV3_ALERT_NO_CERTIFICATE
 1041

	)

1880 
	#SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE
 1010

	)

1881 
	#SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE
 1043

	)

1882 
	#SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION
 228

	)

1883 
	#SSL_R_SSL_HANDSHAKE_FAILURE
 229

	)

1884 
	#SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS
 230

	)

1885 
	#SSL_R_SSL_SESSION_ID_CALLBACK_FAILED
 301

	)

1886 
	#SSL_R_SSL_SESSION_ID_CONFLICT
 302

	)

1887 
	#SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG
 273

	)

1888 
	#SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH
 303

	)

1889 
	#SSL_R_SSL_SESSION_ID_IS_DIFFERENT
 231

	)

1890 
	#SSL_R_TLSV1_ALERT_ACCESS_DENIED
 1049

	)

1891 
	#SSL_R_TLSV1_ALERT_DECODE_ERROR
 1050

	)

1892 
	#SSL_R_TLSV1_ALERT_DECRYPTION_FAILED
 1021

	)

1893 
	#SSL_R_TLSV1_ALERT_DECRYPT_ERROR
 1051

	)

1894 
	#SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION
 1060

	)

1895 
	#SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY
 1071

	)

1896 
	#SSL_R_TLSV1_ALERT_INTERNAL_ERROR
 1080

	)

1897 
	#SSL_R_TLSV1_ALERT_NO_RENEGOTIATION
 1100

	)

1898 
	#SSL_R_TLSV1_ALERT_PROTOCOL_VERSION
 1070

	)

1899 
	#SSL_R_TLSV1_ALERT_RECORD_OVERFLOW
 1022

	)

1900 
	#SSL_R_TLSV1_ALERT_UNKNOWN_CA
 1048

	)

1901 
	#SSL_R_TLSV1_ALERT_USER_CANCELLED
 1090

	)

1902 
	#SSL_R_TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER
 232

	)

1903 
	#SSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST
 233

	)

1904 
	#SSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG
 234

	)

1905 
	#SSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER
 235

	)

1906 
	#SSL_R_UNABLE_TO_DECODE_DH_CERTS
 236

	)

1907 
	#SSL_R_UNABLE_TO_DECODE_ECDH_CERTS
 313

	)

1908 
	#SSL_R_UNABLE_TO_EXTRACT_PUBLIC_KEY
 237

	)

1909 
	#SSL_R_UNABLE_TO_FIND_DH_PARAMETERS
 238

	)

1910 
	#SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS
 314

	)

1911 
	#SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS
 239

	)

1912 
	#SSL_R_UNABLE_TO_FIND_SSL_METHOD
 240

	)

1913 
	#SSL_R_UNABLE_TO_LOAD_SSL2_MD5_ROUTINES
 241

	)

1914 
	#SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES
 242

	)

1915 
	#SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES
 243

	)

1916 
	#SSL_R_UNEXPECTED_MESSAGE
 244

	)

1917 
	#SSL_R_UNEXPECTED_RECORD
 245

	)

1918 
	#SSL_R_UNINITIALIZED
 276

	)

1919 
	#SSL_R_UNKNOWN_ALERT_TYPE
 246

	)

1920 
	#SSL_R_UNKNOWN_CERTIFICATE_TYPE
 247

	)

1921 
	#SSL_R_UNKNOWN_CIPHER_RETURNED
 248

	)

1922 
	#SSL_R_UNKNOWN_CIPHER_TYPE
 249

	)

1923 
	#SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE
 250

	)

1924 
	#SSL_R_UNKNOWN_PKEY_TYPE
 251

	)

1925 
	#SSL_R_UNKNOWN_PROTOCOL
 252

	)

1926 
	#SSL_R_UNKNOWN_REMOTE_ERROR_TYPE
 253

	)

1927 
	#SSL_R_UNKNOWN_SSL_VERSION
 254

	)

1928 
	#SSL_R_UNKNOWN_STATE
 255

	)

1929 
	#SSL_R_UNSUPPORTED_CIPHER
 256

	)

1930 
	#SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM
 257

	)

1931 
	#SSL_R_UNSUPPORTED_ELLIPTIC_CURVE
 315

	)

1932 
	#SSL_R_UNSUPPORTED_PROTOCOL
 258

	)

1933 
	#SSL_R_UNSUPPORTED_SSL_VERSION
 259

	)

1934 
	#SSL_R_WRITE_BIO_NOT_SET
 260

	)

1935 
	#SSL_R_WRONG_CIPHER_RETURNED
 261

	)

1936 
	#SSL_R_WRONG_MESSAGE_TYPE
 262

	)

1937 
	#SSL_R_WRONG_NUMBER_OF_KEY_BITS
 263

	)

1938 
	#SSL_R_WRONG_SIGNATURE_LENGTH
 264

	)

1939 
	#SSL_R_WRONG_SIGNATURE_SIZE
 265

	)

1940 
	#SSL_R_WRONG_SSL_VERSION
 266

	)

1941 
	#SSL_R_WRONG_VERSION_NUMBER
 267

	)

1942 
	#SSL_R_X509_LIB
 268

	)

1943 
	#SSL_R_X509_VERIFICATION_SETUP_PROBLEMS
 269

	)

1945 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/x509.h

64 #i‚de‡
HEADER_X509_H


65 
	#HEADER_X509_H


	)

67 
	~<›ís¶/e_os2.h
>

68 
	~<›ís¶/symhacks.h
>

69 #i‚de‡
OPENSSL_NO_BUFFER


70 
	~<›ís¶/buf„r.h
>

72 #i‚de‡
OPENSSL_NO_EVP


73 
	~<›ís¶/evp.h
>

75 #i‚de‡
OPENSSL_NO_BIO


76 
	~<›ís¶/bio.h
>

78 
	~<›ís¶/°ack.h
>

79 
	~<›ís¶/a¢1.h
>

80 
	~<›ís¶/ß„°ack.h
>

85 #i‚de‡
OPENSSL_NO_DEPRECATED


86 #i‚de‡
OPENSSL_NO_RSA


87 
	~<›ís¶/rß.h
>

89 #i‚de‡
OPENSSL_NO_DSA


90 
	~<›ís¶/dß.h
>

92 #i‚de‡
OPENSSL_NO_DH


93 
	~<›ís¶/dh.h
>

97 #i‚de‡
OPENSSL_NO_SHA


98 
	~<›ís¶/sha.h
>

100 
	~<›ís¶/os¶_typ.h
>

102 #ifde‡ 
__˝lu•lus


106 #ifde‡
OPENSSL_SYS_WIN32


108 #unde‡
X509_NAME


109 #unde‡
X509_CERT_PAIR


112 
	#X509_FILETYPE_PEM
 1

	)

113 
	#X509_FILETYPE_ASN1
 2

	)

114 
	#X509_FILETYPE_DEFAULT
 3

	)

116 
	#X509v3_KU_DIGITAL_SIGNATURE
 0x0080

	)

117 
	#X509v3_KU_NON_REPUDIATION
 0x0040

	)

118 
	#X509v3_KU_KEY_ENCIPHERMENT
 0x0020

	)

119 
	#X509v3_KU_DATA_ENCIPHERMENT
 0x0010

	)

120 
	#X509v3_KU_KEY_AGREEMENT
 0x0008

	)

121 
	#X509v3_KU_KEY_CERT_SIGN
 0x0004

	)

122 
	#X509v3_KU_CRL_SIGN
 0x0002

	)

123 
	#X509v3_KU_ENCIPHER_ONLY
 0x0001

	)

124 
	#X509v3_KU_DECIPHER_ONLY
 0x8000

	)

125 
	#X509v3_KU_UNDEF
 0xffff

	)

127 
	sX509_obje˘s_°


129 
nid
;

130 (*
a2i
)();

131 (*
i2a
)();

132 } 
	tX509_OBJECTS
;

134 
	sX509_Æg‹_°


136 
ASN1_OBJECT
 *
Æg‹ôhm
;

137 
ASN1_TYPE
 *
∑ømëî
;

140 
DECLARE_STACK_OF
(
X509_ALGOR
)

141 
DECLARE_ASN1_SET_OF
(
X509_ALGOR
)

143 
	sX509_vÆ_°


145 
ASN1_TIME
 *
nŸBef‹e
;

146 
ASN1_TIME
 *
nŸA·î
;

147 } 
	tX509_VAL
;

149 
	sX509_pubkey_°


151 
X509_ALGOR
 *
Æg‹
;

152 
ASN1_BIT_STRING
 *
public_key
;

153 
EVP_PKEY
 *
pkey
;

154 } 
	tX509_PUBKEY
;

156 
	sX509_sig_°


158 
X509_ALGOR
 *
Æg‹
;

159 
ASN1_OCTET_STRING
 *
dige°
;

160 } 
	tX509_SIG
;

162 
	sX509_«me_íåy_°


164 
ASN1_OBJECT
 *
obje˘
;

165 
ASN1_STRING
 *
vÆue
;

166 
£t
;

167 
size
;

168 } 
	tX509_NAME_ENTRY
;

170 
DECLARE_STACK_OF
(
X509_NAME_ENTRY
)

171 
DECLARE_ASN1_SET_OF
(
X509_NAME_ENTRY
)

174 
	sX509_«me_°


176 
STACK_OF
(
X509_NAME_ENTRY
Ë*
íåõs
;

177 
modifõd
;

178 #i‚de‡
OPENSSL_NO_BUFFER


179 
BUF_MEM
 *
byãs
;

181 *
byãs
;

183 
hash
;

186 
DECLARE_STACK_OF
(
X509_NAME
)

188 
	#X509_EX_V_NETSCAPE_HACK
 0x8000

	)

189 
	#X509_EX_V_INIT
 0x0001

	)

190 
	sX509_exãnsi⁄_°


192 
ASN1_OBJECT
 *
obje˘
;

193 
ASN1_BOOLEAN
 
¸ôiˇl
;

194 
ASN1_OCTET_STRING
 *
vÆue
;

195 } 
	tX509_EXTENSION
;

197 
DECLARE_STACK_OF
(
X509_EXTENSION
)

198 
DECLARE_ASN1_SET_OF
(
X509_EXTENSION
)

201 
	sx509_©åibuãs_°


203 
ASN1_OBJECT
 *
obje˘
;

204 
sögÀ
;

206 *
±r
;

207  
STACK_OF
(
ASN1_TYPE
Ë*
£t
;

208  
ASN1_TYPE
 *
sögÀ
;

209 } 
vÆue
;

210 } 
	tX509_ATTRIBUTE
;

212 
DECLARE_STACK_OF
(
X509_ATTRIBUTE
)

213 
DECLARE_ASN1_SET_OF
(
X509_ATTRIBUTE
)

216 
	sX509_ªq_öfo_°


218 
ASN1_ENCODING
 
íc
;

219 
ASN1_INTEGER
 *
vîsi⁄
;

220 
X509_NAME
 *
subje˘
;

221 
X509_PUBKEY
 *
pubkey
;

223 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

224 } 
	tX509_REQ_INFO
;

226 
	sX509_ªq_°


228 
X509_REQ_INFO
 *
ªq_öfo
;

229 
X509_ALGOR
 *
sig_Æg
;

230 
ASN1_BIT_STRING
 *
sig«tuª
;

231 
ª„ªn˚s
;

232 } 
	tX509_REQ
;

234 
	sx509_cöf_°


236 
ASN1_INTEGER
 *
vîsi⁄
;

237 
ASN1_INTEGER
 *
£rülNumbî
;

238 
X509_ALGOR
 *
sig«tuª
;

239 
X509_NAME
 *
issuî
;

240 
X509_VAL
 *
vÆidôy
;

241 
X509_NAME
 *
subje˘
;

242 
X509_PUBKEY
 *
key
;

243 
ASN1_BIT_STRING
 *
issuîUID
;

244 
ASN1_BIT_STRING
 *
subje˘UID
;

245 
STACK_OF
(
X509_EXTENSION
Ë*
exãnsi⁄s
;

246 } 
	tX509_CINF
;

254 
	sx509_˚π_aux_°


256 
STACK_OF
(
ASN1_OBJECT
Ë*
åu°
;

257 
STACK_OF
(
ASN1_OBJECT
Ë*
ªje˘
;

258 
ASN1_UTF8STRING
 *
Æüs
;

259 
ASN1_OCTET_STRING
 *
keyid
;

260 
STACK_OF
(
X509_ALGOR
Ë*
Ÿhî
;

261 } 
	tX509_CERT_AUX
;

263 
	sx509_°


265 
X509_CINF
 *
˚π_öfo
;

266 
X509_ALGOR
 *
sig_Æg
;

267 
ASN1_BIT_STRING
 *
sig«tuª
;

268 
vÆid
;

269 
ª„ªn˚s
;

270 *
«me
;

271 
CRYPTO_EX_DATA
 
ex_d©a
;

273 
ex_∑thÀn
;

274 
ex_p˝©hÀn
;

275 
ex_Êags
;

276 
ex_kußge
;

277 
ex_xkußge
;

278 
ex_ns˚π
;

279 
ASN1_OCTET_STRING
 *
skid
;

280 
AUTHORITY_KEYID_°
 *
akid
;

281 
X509_POLICY_CACHE
 *
pﬁicy_ˇche
;

282 #i‚de‡
OPENSSL_NO_SHA


283 
sha1_hash
[
SHA_DIGEST_LENGTH
];

285 
X509_CERT_AUX
 *
aux
;

288 
DECLARE_STACK_OF
(
X509
)

289 
DECLARE_ASN1_SET_OF
(
X509
)

293 
	sx509_åu°_°
 {

294 
åu°
;

295 
Êags
;

296 (*
check_åu°
)(
x509_åu°_°
 *, 
X509
 *, );

297 *
«me
;

298 
¨g1
;

299 *
¨g2
;

300 } 
	tX509_TRUST
;

302 
DECLARE_STACK_OF
(
X509_TRUST
)

304 
	sx509_˚π_∑ú_°
 {

305 
X509
 *
f‹w¨d
;

306 
X509
 *
ªvî£
;

307 } 
	tX509_CERT_PAIR
;

311 
	#X509_TRUST_DEFAULT
 -1

	)

313 
	#X509_TRUST_COMPAT
 1

	)

314 
	#X509_TRUST_SSL_CLIENT
 2

	)

315 
	#X509_TRUST_SSL_SERVER
 3

	)

316 
	#X509_TRUST_EMAIL
 4

	)

317 
	#X509_TRUST_OBJECT_SIGN
 5

	)

318 
	#X509_TRUST_OCSP_SIGN
 6

	)

319 
	#X509_TRUST_OCSP_REQUEST
 7

	)

322 
	#X509_TRUST_MIN
 1

	)

323 
	#X509_TRUST_MAX
 7

	)

327 
	#X509_TRUST_DYNAMIC
 1

	)

328 
	#X509_TRUST_DYNAMIC_NAME
 2

	)

332 
	#X509_TRUST_TRUSTED
 1

	)

333 
	#X509_TRUST_REJECTED
 2

	)

334 
	#X509_TRUST_UNTRUSTED
 3

	)

338 
	#X509_FLAG_COMPAT
 0

	)

339 
	#X509_FLAG_NO_HEADER
 1L

	)

340 
	#X509_FLAG_NO_VERSION
 (1L << 1)

	)

341 
	#X509_FLAG_NO_SERIAL
 (1L << 2)

	)

342 
	#X509_FLAG_NO_SIGNAME
 (1L << 3)

	)

343 
	#X509_FLAG_NO_ISSUER
 (1L << 4)

	)

344 
	#X509_FLAG_NO_VALIDITY
 (1L << 5)

	)

345 
	#X509_FLAG_NO_SUBJECT
 (1L << 6)

	)

346 
	#X509_FLAG_NO_PUBKEY
 (1L << 7)

	)

347 
	#X509_FLAG_NO_EXTENSIONS
 (1L << 8)

	)

348 
	#X509_FLAG_NO_SIGDUMP
 (1L << 9)

	)

349 
	#X509_FLAG_NO_AUX
 (1L << 10)

	)

350 
	#X509_FLAG_NO_ATTRIBUTES
 (1L << 11)

	)

356 
	#XN_FLAG_SEP_MASK
 (0x‡<< 16)

	)

358 
	#XN_FLAG_COMPAT
 0

	)

359 
	#XN_FLAG_SEP_COMMA_PLUS
 (1 << 16Ë

	)

360 
	#XN_FLAG_SEP_CPLUS_SPC
 (2 << 16Ë

	)

361 
	#XN_FLAG_SEP_SPLUS_SPC
 (3 << 16Ë

	)

362 
	#XN_FLAG_SEP_MULTILINE
 (4 << 16Ë

	)

364 
	#XN_FLAG_DN_REV
 (1 << 20Ë

	)

368 
	#XN_FLAG_FN_MASK
 (0x3 << 21)

	)

370 
	#XN_FLAG_FN_SN
 0

	)

371 
	#XN_FLAG_FN_LN
 (1 << 21Ë

	)

372 
	#XN_FLAG_FN_OID
 (2 << 21Ë

	)

373 
	#XN_FLAG_FN_NONE
 (3 << 21Ë

	)

375 
	#XN_FLAG_SPC_EQ
 (1 << 23Ë

	)

381 
	#XN_FLAG_DUMP_UNKNOWN_FIELDS
 (1 << 24)

	)

383 
	#XN_FLAG_FN_ALIGN
 (1 << 25Ë

	)

387 
	#XN_FLAG_RFC2253
 (
ASN1_STRFLGS_RFC2253
 | \

388 
XN_FLAG_SEP_COMMA_PLUS
 | \

389 
XN_FLAG_DN_REV
 | \

390 
XN_FLAG_FN_SN
 | \

391 
XN_FLAG_DUMP_UNKNOWN_FIELDS
)

	)

395 
	#XN_FLAG_ONELINE
 (
ASN1_STRFLGS_RFC2253
 | \

396 
ASN1_STRFLGS_ESC_QUOTE
 | \

397 
XN_FLAG_SEP_CPLUS_SPC
 | \

398 
XN_FLAG_SPC_EQ
 | \

399 
XN_FLAG_FN_SN
)

	)

403 
	#XN_FLAG_MULTILINE
 (
ASN1_STRFLGS_ESC_CTRL
 | \

404 
ASN1_STRFLGS_ESC_MSB
 | \

405 
XN_FLAG_SEP_MULTILINE
 | \

406 
XN_FLAG_SPC_EQ
 | \

407 
XN_FLAG_FN_LN
 | \

408 
XN_FLAG_FN_ALIGN
)

	)

410 
	sX509_ªvoked_°


412 
ASN1_INTEGER
 *
£rülNumbî
;

413 
ASN1_TIME
 *
ªvoˇti⁄D©e
;

414 
STACK_OF
(
X509_EXTENSION
Ë *
exãnsi⁄s
;

415 
£quí˚
;

416 } 
	tX509_REVOKED
;

418 
DECLARE_STACK_OF
(
X509_REVOKED
)

419 
DECLARE_ASN1_SET_OF
(
X509_REVOKED
)

421 
	sX509_¸l_öfo_°


423 
ASN1_INTEGER
 *
vîsi⁄
;

424 
X509_ALGOR
 *
sig_Æg
;

425 
X509_NAME
 *
issuî
;

426 
ASN1_TIME
 *
œ°Upd©e
;

427 
ASN1_TIME
 *
√xtUpd©e
;

428 
STACK_OF
(
X509_REVOKED
Ë*
ªvoked
;

429 
STACK_OF
(
X509_EXTENSION
Ë *
exãnsi⁄s
;

430 
ASN1_ENCODING
 
íc
;

431 } 
	tX509_CRL_INFO
;

433 
	sX509_¸l_°


436 
X509_CRL_INFO
 *
¸l
;

437 
X509_ALGOR
 *
sig_Æg
;

438 
ASN1_BIT_STRING
 *
sig«tuª
;

439 
ª„ªn˚s
;

442 
DECLARE_STACK_OF
(
X509_CRL
)

443 
DECLARE_ASN1_SET_OF
(
X509_CRL
)

445 
	s¥iv©e_key_°


447 
vîsi⁄
;

449 
X509_ALGOR
 *
íc_Æg‹
;

450 
ASN1_OCTET_STRING
 *
íc_pkey
;

453 
EVP_PKEY
 *
dec_pkey
;

456 
key_Àngth
;

457 *
key_d©a
;

458 
key_‰ì
;

461 
EVP_CIPHER_INFO
 
cùhî
;

463 
ª„ªn˚s
;

464 } 
	tX509_PKEY
;

466 #i‚de‡
OPENSSL_NO_EVP


467 
	sX509_öfo_°


469 
X509
 *
x509
;

470 
X509_CRL
 *
¸l
;

471 
X509_PKEY
 *
x_pkey
;

473 
EVP_CIPHER_INFO
 
íc_cùhî
;

474 
íc_Àn
;

475 *
íc_d©a
;

477 
ª„ªn˚s
;

478 } 
	tX509_INFO
;

480 
DECLARE_STACK_OF
(
X509_INFO
)

487 
	sNësˇ≥_•kac_°


489 
X509_PUBKEY
 *
pubkey
;

490 
ASN1_IA5STRING
 *
chÆÀnge
;

491 } 
	tNETSCAPE_SPKAC
;

493 
	sNësˇ≥_•ki_°


495 
NETSCAPE_SPKAC
 *
•kac
;

496 
X509_ALGOR
 *
sig_Æg‹
;

497 
ASN1_BIT_STRING
 *
sig«tuª
;

498 } 
	tNETSCAPE_SPKI
;

501 
	sNësˇ≥_˚πifiˇã_£quí˚


503 
ASN1_OBJECT
 *
ty≥
;

504 
STACK_OF
(
X509
Ë*
˚πs
;

505 } 
	tNETSCAPE_CERT_SEQUENCE
;

516 
	sPBEPARAM_°
 {

517 
ASN1_OCTET_STRING
 *
ß…
;

518 
ASN1_INTEGER
 *
ôî
;

519 } 
	tPBEPARAM
;

523 
	sPBE2PARAM_°
 {

524 
X509_ALGOR
 *
keyfunc
;

525 
X509_ALGOR
 *
í¸y±i⁄
;

526 } 
	tPBE2PARAM
;

528 
	sPBKDF2PARAM_°
 {

529 
ASN1_TYPE
 *
ß…
;

530 
ASN1_INTEGER
 *
ôî
;

531 
ASN1_INTEGER
 *
keyÀngth
;

532 
X509_ALGOR
 *
¥f
;

533 } 
	tPBKDF2PARAM
;

538 
	spkcs8_¥iv_key_öfo_°


540 
brokí
;

541 
	#PKCS8_OK
 0

	)

542 
	#PKCS8_NO_OCTET
 1

	)

543 
	#PKCS8_EMBEDDED_PARAM
 2

	)

544 
	#PKCS8_NS_DB
 3

	)

545 
ASN1_INTEGER
 *
vîsi⁄
;

546 
X509_ALGOR
 *
pkeyÆg
;

547 
ASN1_TYPE
 *
pkey
;

548 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

549 } 
	tPKCS8_PRIV_KEY_INFO
;

551 #ifde‡ 
__˝lu•lus


555 
	~<›ís¶/x509_vfy.h
>

556 
	~<›ís¶/pkcs7.h
>

558 #ifde‡ 
__˝lu•lus


562 #ifde‡
SSLEAY_MACROS


563 
	#X509_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_CINF
,a->
sig_Æg
,\

564 
a
->
sig«tuª
,(*Ô->
˚π_öfo
,
r
)

	)

565 
	#X509_REQ_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_REQ_INFO
, \

566 
a
->
sig_Æg
,a->
sig«tuª
,(*Ô->
ªq_öfo
,
r
)

	)

567 
	#X509_CRL_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_CRL_INFO
, \

568 
a
->
sig_Æg
,á->
sig«tuª
,(*Ô->
¸l
,
r
)

	)

570 
	#X509_sign
(
x
,
pkey
,
md
) \

571 
	`ASN1_sign
(((*)())
i2d_X509_CINF
, 
x
->
˚π_öfo
->
sig«tuª
, \

572 
x
->
sig_Æg
, x->
sig«tuª
, (*)x->
˚π_öfo
,
pkey
,
md
)

	)

573 
	#X509_REQ_sign
(
x
,
pkey
,
md
) \

574 
	`ASN1_sign
(((*)())
i2d_X509_REQ_INFO
,
x
->
sig_Æg
, 
NULL
, \

575 
x
->
sig«tuª
, (*)x->
ªq_öfo
,
pkey
,
md
)

	)

576 
	#X509_CRL_sign
(
x
,
pkey
,
md
) \

577 
	`ASN1_sign
(((*)())
i2d_X509_CRL_INFO
,
x
->
¸l
->
sig_Æg
,x->sig_alg, \

578 
x
->
sig«tuª
, (*)x->
¸l
,
pkey
,
md
)

	)

579 
	#NETSCAPE_SPKI_sign
(
x
,
pkey
,
md
) \

580 
	`ASN1_sign
(((*)())
i2d_NETSCAPE_SPKAC
, 
x
->
sig_Æg‹
,
NULL
, \

581 
x
->
sig«tuª
, (*)x->
•kac
,
pkey
,
md
)

	)

583 
	#X509_dup
(
x509
Ë(
X509
 *)
	`ASN1_dup
(((*)())
i2d_X509
, \

584 (*(*)())
d2i_X509
,(*)
x509
)

	)

585 
	#X509_ATTRIBUTE_dup
(
xa
Ë(
X509_ATTRIBUTE
 *)
	`ASN1_dup
(\

586 ((*)())
i2d_X509_ATTRIBUTE
, \

587 (*(*)())
d2i_X509_ATTRIBUTE
,(*)
xa
)

	)

588 
	#X509_EXTENSION_dup
(
ex
Ë(
X509_EXTENSION
 *)
	`ASN1_dup
( \

589 ((*)())
i2d_X509_EXTENSION
, \

590 (*(*)())
d2i_X509_EXTENSION
,(*)
ex
)

	)

591 
	#d2i_X509_Â
(
Â
,
x509
Ë(
X509
 *)
	`ASN1_d2i_Â
((*(*)())
X509_√w
, \

592 (*(*)())
d2i_X509
, (
Â
),(**)(
x509
))

	)

593 
	#i2d_X509_Â
(
Â
,
x509
Ë
	`ASN1_i2d_Â
(
i2d_X509
,Â,(*)x509)

	)

594 
	#d2i_X509_bio
(
bp
,
x509
Ë(
X509
 *)
	`ASN1_d2i_bio
((*(*)())
X509_√w
, \

595 (*(*)())
d2i_X509
, (
bp
),(**)(
x509
))

	)

596 
	#i2d_X509_bio
(
bp
,
x509
Ë
	`ASN1_i2d_bio
(
i2d_X509
,bp,(*)x509)

	)

598 
	#X509_CRL_dup
(
¸l
Ë(
X509_CRL
 *)
	`ASN1_dup
(((*)())
i2d_X509_CRL
, \

599 (*(*)())
d2i_X509_CRL
,(*)
¸l
)

	)

600 
	#d2i_X509_CRL_Â
(
Â
,
¸l
Ë(
X509_CRL
 *)
	`ASN1_d2i_Â
((*(*)()) \

601 
X509_CRL_√w
,(*(*)())
d2i_X509_CRL
, (
Â
),\

602 (**)(
¸l
))

	)

603 
	#i2d_X509_CRL_Â
(
Â
,
¸l
Ë
	`ASN1_i2d_Â
(
i2d_X509_CRL
,fp,\

604 (*)
¸l
)

	)

605 
	#d2i_X509_CRL_bio
(
bp
,
¸l
Ë(
X509_CRL
 *)
	`ASN1_d2i_bio
((*(*)()) \

606 
X509_CRL_√w
,(*(*)())
d2i_X509_CRL
, (
bp
),\

607 (**)(
¸l
))

	)

608 
	#i2d_X509_CRL_bio
(
bp
,
¸l
Ë
	`ASN1_i2d_bio
(
i2d_X509_CRL
,bp,\

609 (*)
¸l
)

	)

611 
	#PKCS7_dup
(
p7
Ë(
PKCS7
 *)
	`ASN1_dup
(((*)())
i2d_PKCS7
, \

612 (*(*)())
d2i_PKCS7
,(*)
p7
)

	)

613 
	#d2i_PKCS7_Â
(
Â
,
p7
Ë(
PKCS7
 *)
	`ASN1_d2i_Â
((*(*)()) \

614 
PKCS7_√w
,(*(*)())
d2i_PKCS7
, (
Â
),\

615 (**)(
p7
))

	)

616 
	#i2d_PKCS7_Â
(
Â
,
p7
Ë
	`ASN1_i2d_Â
(
i2d_PKCS7
,fp,\

617 (*)
p7
)

	)

618 
	#d2i_PKCS7_bio
(
bp
,
p7
Ë(
PKCS7
 *)
	`ASN1_d2i_bio
((*(*)()) \

619 
PKCS7_√w
,(*(*)())
d2i_PKCS7
, (
bp
),\

620 (**)(
p7
))

	)

621 
	#i2d_PKCS7_bio
(
bp
,
p7
Ë
	`ASN1_i2d_bio
(
i2d_PKCS7
,bp,\

622 (*)
p7
)

	)

624 
	#X509_REQ_dup
(
ªq
Ë(
X509_REQ
 *)
	`ASN1_dup
(((*)())
i2d_X509_REQ
, \

625 (*(*)())
d2i_X509_REQ
,(*)
ªq
)

	)

626 
	#d2i_X509_REQ_Â
(
Â
,
ªq
Ë(
X509_REQ
 *)
	`ASN1_d2i_Â
((*(*)())\

627 
X509_REQ_√w
, (*(*)())
d2i_X509_REQ
, (
Â
),\

628 (**)(
ªq
))

	)

629 
	#i2d_X509_REQ_Â
(
Â
,
ªq
Ë
	`ASN1_i2d_Â
(
i2d_X509_REQ
,fp,\

630 (*)
ªq
)

	)

631 
	#d2i_X509_REQ_bio
(
bp
,
ªq
Ë(
X509_REQ
 *)
	`ASN1_d2i_bio
((*(*)())\

632 
X509_REQ_√w
, (*(*)())
d2i_X509_REQ
, (
bp
),\

633 (**)(
ªq
))

	)

634 
	#i2d_X509_REQ_bio
(
bp
,
ªq
Ë
	`ASN1_i2d_bio
(
i2d_X509_REQ
,bp,\

635 (*)
ªq
)

	)

637 
	#RSAPublicKey_dup
(
rß
Ë(
RSA
 *)
	`ASN1_dup
(((*)())
i2d_RSAPublicKey
, \

638 (*(*)())
d2i_RSAPublicKey
,(*)
rß
)

	)

639 
	#RSAPriv©eKey_dup
(
rß
Ë(
RSA
 *)
	`ASN1_dup
(((*)())
i2d_RSAPriv©eKey
, \

640 (*(*)())
d2i_RSAPriv©eKey
,(*)
rß
)

	)

642 
	#d2i_RSAPriv©eKey_Â
(
Â
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_Â
((*(*)())\

643 
RSA_√w
,(*(*)())
d2i_RSAPriv©eKey
, (
Â
), \

644 (**)(
rß
))

	)

645 
	#i2d_RSAPriv©eKey_Â
(
Â
,
rß
Ë
	`ASN1_i2d_Â
(
i2d_RSAPriv©eKey
,fp, \

646 (*)
rß
)

	)

647 
	#d2i_RSAPriv©eKey_bio
(
bp
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_bio
((*(*)())\

648 
RSA_√w
,(*(*)())
d2i_RSAPriv©eKey
, (
bp
), \

649 (**)(
rß
))

	)

650 
	#i2d_RSAPriv©eKey_bio
(
bp
,
rß
Ë
	`ASN1_i2d_bio
(
i2d_RSAPriv©eKey
,bp, \

651 (*)
rß
)

	)

653 
	#d2i_RSAPublicKey_Â
(
Â
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_Â
((*(*)())\

654 
RSA_√w
,(*(*)())
d2i_RSAPublicKey
, (
Â
), \

655 (**)(
rß
))

	)

656 
	#i2d_RSAPublicKey_Â
(
Â
,
rß
Ë
	`ASN1_i2d_Â
(
i2d_RSAPublicKey
,fp, \

657 (*)
rß
)

	)

658 
	#d2i_RSAPublicKey_bio
(
bp
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_bio
((*(*)())\

659 
RSA_√w
,(*(*)())
d2i_RSAPublicKey
, (
bp
), \

660 (**)(
rß
))

	)

661 
	#i2d_RSAPublicKey_bio
(
bp
,
rß
Ë
	`ASN1_i2d_bio
(
i2d_RSAPublicKey
,bp, \

662 (*)
rß
)

	)

664 
	#d2i_DSAPriv©eKey_Â
(
Â
,
dß
Ë(
DSA
 *)
	`ASN1_d2i_Â
((*(*)())\

665 
DSA_√w
,(*(*)())
d2i_DSAPriv©eKey
, (
Â
), \

666 (**)(
dß
))

	)

667 
	#i2d_DSAPriv©eKey_Â
(
Â
,
dß
Ë
	`ASN1_i2d_Â
(
i2d_DSAPriv©eKey
,fp, \

668 (*)
dß
)

	)

669 
	#d2i_DSAPriv©eKey_bio
(
bp
,
dß
Ë(
DSA
 *)
	`ASN1_d2i_bio
((*(*)())\

670 
DSA_√w
,(*(*)())
d2i_DSAPriv©eKey
, (
bp
), \

671 (**)(
dß
))

	)

672 
	#i2d_DSAPriv©eKey_bio
(
bp
,
dß
Ë
	`ASN1_i2d_bio
(
i2d_DSAPriv©eKey
,bp, \

673 (*)
dß
)

	)

675 
	#d2i_ECPriv©eKey_Â
(
Â
,
ecdß
Ë(
EC_KEY
 *)
	`ASN1_d2i_Â
((*(*)())\

676 
EC_KEY_√w
,(*(*)())
d2i_ECPriv©eKey
, (
Â
), \

677 (**)(
ecdß
))

	)

678 
	#i2d_ECPriv©eKey_Â
(
Â
,
ecdß
Ë
	`ASN1_i2d_Â
(
i2d_ECPriv©eKey
,fp, \

679 (*)
ecdß
)

	)

680 
	#d2i_ECPriv©eKey_bio
(
bp
,
ecdß
Ë(
EC_KEY
 *)
	`ASN1_d2i_bio
((*(*)())\

681 
EC_KEY_√w
,(*(*)())
d2i_ECPriv©eKey
, (
bp
), \

682 (**)(
ecdß
))

	)

683 
	#i2d_ECPriv©eKey_bio
(
bp
,
ecdß
Ë
	`ASN1_i2d_bio
(
i2d_ECPriv©eKey
,bp, \

684 (*)
ecdß
)

	)

686 
	#X509_ALGOR_dup
(
xn
Ë(
X509_ALGOR
 *)
	`ASN1_dup
(((*)())
i2d_X509_ALGOR
,\

687 (*(*)())
d2i_X509_ALGOR
,(*)
xn
)

	)

689 
	#X509_NAME_dup
(
xn
Ë(
X509_NAME
 *)
	`ASN1_dup
(((*)())
i2d_X509_NAME
, \

690 (*(*)())
d2i_X509_NAME
,(*)
xn
)

	)

691 
	#X509_NAME_ENTRY_dup
(
√
Ë(
X509_NAME_ENTRY
 *)
	`ASN1_dup
( \

692 ((*)())
i2d_X509_NAME_ENTRY
, \

693 (*(*)())
d2i_X509_NAME_ENTRY
,\

694 (*)
√
)

	)

696 
	#X509_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

697 
	`ASN1_dige°
(((*)())
i2d_X509
,
ty≥
,(*)
d©a
,
md
,
Àn
)

	)

698 
	#X509_NAME_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

699 
	`ASN1_dige°
(((*)())
i2d_X509_NAME
,
ty≥
,(*)
d©a
,
md
,
Àn
)

	)

700 #i‚de‡
PKCS7_ISSUER_AND_SERIAL_dige°


701 
	#PKCS7_ISSUER_AND_SERIAL_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

702 
	`ASN1_dige°
(((*)())
i2d_PKCS7_ISSUER_AND_SERIAL
,
ty≥
,\

703 (*)
d©a
,
md
,
Àn
)

	)

707 
	#X509_EXT_PACK_UNKNOWN
 1

	)

708 
	#X509_EXT_PACK_STRING
 2

	)

710 
	#X509_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
˚π_öfo
->
vîsi⁄
)

	)

712 
	#X509_gë_nŸBef‹e
(
x
Ë((x)->
˚π_öfo
->
vÆidôy
->
nŸBef‹e
)

	)

713 
	#X509_gë_nŸA·î
(
x
Ë((x)->
˚π_öfo
->
vÆidôy
->
nŸA·î
)

	)

714 
	#X509_exåa˘_key
(
x
Ë
	`X509_gë_pubkey
(xË

	)

715 
	#X509_REQ_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
ªq_öfo
->
vîsi⁄
)

	)

716 
	#X509_REQ_gë_subje˘_«me
(
x
Ë((x)->
ªq_öfo
->
subje˘
)

	)

717 
	#X509_REQ_exåa˘_key
(
a
Ë
	`X509_REQ_gë_pubkey
◊)

	)

718 
	#X509_«me_cmp
(
a
,
b
Ë
	`X509_NAME_cmp
(◊),(b))

	)

719 
	#X509_gë_sig«tuª_ty≥
(
x
Ë
	`EVP_PKEY_ty≥
(
	`OBJ_obj2nid
((x)->
sig_Æg
->
Æg‹ôhm
))

	)

721 
	#X509_CRL_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
¸l
->
vîsi⁄
)

	)

722 
	#X509_CRL_gë_œ°Upd©e
(
x
Ë((x)->
¸l
->
œ°Upd©e
)

	)

723 
	#X509_CRL_gë_√xtUpd©e
(
x
Ë((x)->
¸l
->
√xtUpd©e
)

	)

724 
	#X509_CRL_gë_issuî
(
x
Ë((x)->
¸l
->
issuî
)

	)

725 
	#X509_CRL_gë_REVOKED
(
x
Ë((x)->
¸l
->
ªvoked
)

	)

729 
	#X509_gë_X509_PUBKEY
(
x
Ë((x)->
˚π_öfo
->
key
)

	)

732 c⁄° *
X509_vîify_˚π_îr‹_°rög
(
n
);

734 #i‚de‡
SSLEAY_MACROS


735 #i‚de‡
OPENSSL_NO_EVP


736 
X509_vîify
(
X509
 *
a
, 
EVP_PKEY
 *
r
);

738 
X509_REQ_vîify
(
X509_REQ
 *
a
, 
EVP_PKEY
 *
r
);

739 
X509_CRL_vîify
(
X509_CRL
 *
a
, 
EVP_PKEY
 *
r
);

740 
NETSCAPE_SPKI_vîify
(
NETSCAPE_SPKI
 *
a
, 
EVP_PKEY
 *
r
);

742 
NETSCAPE_SPKI
 * 
NETSCAPE_SPKI_b64_decode
(c⁄° *
°r
, 
Àn
);

743 * 
NETSCAPE_SPKI_b64_ícode
(
NETSCAPE_SPKI
 *
x
);

744 
EVP_PKEY
 *
NETSCAPE_SPKI_gë_pubkey
(
NETSCAPE_SPKI
 *
x
);

745 
NETSCAPE_SPKI_£t_pubkey
(
NETSCAPE_SPKI
 *
x
, 
EVP_PKEY
 *
pkey
);

747 
NETSCAPE_SPKI_¥öt
(
BIO
 *
out
, 
NETSCAPE_SPKI
 *
•ki
);

749 
X509_sig«tuª_¥öt
(
BIO
 *
bp
,
X509_ALGOR
 *
Æg
, 
ASN1_STRING
 *
sig
);

751 
X509_sign
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
);

752 
X509_REQ_sign
(
X509_REQ
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
);

753 
X509_CRL_sign
(
X509_CRL
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
);

754 
NETSCAPE_SPKI_sign
(
NETSCAPE_SPKI
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
);

756 
X509_pubkey_dige°
(c⁄° 
X509
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

757 *
md
, *
Àn
);

758 
X509_dige°
(c⁄° 
X509
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

759 *
md
, *
Àn
);

760 
X509_CRL_dige°
(c⁄° 
X509_CRL
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

761 *
md
, *
Àn
);

762 
X509_REQ_dige°
(c⁄° 
X509_REQ
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

763 *
md
, *
Àn
);

764 
X509_NAME_dige°
(c⁄° 
X509_NAME
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

765 *
md
, *
Àn
);

768 #i‚de‡
OPENSSL_NO_FP_API


769 
X509
 *
d2i_X509_Â
(
FILE
 *
Â
, X509 **
x509
);

770 
i2d_X509_Â
(
FILE
 *
Â
,
X509
 *
x509
);

771 
X509_CRL
 *
d2i_X509_CRL_Â
(
FILE
 *
Â
,X509_CRL **
¸l
);

772 
i2d_X509_CRL_Â
(
FILE
 *
Â
,
X509_CRL
 *
¸l
);

773 
X509_REQ
 *
d2i_X509_REQ_Â
(
FILE
 *
Â
,X509_REQ **
ªq
);

774 
i2d_X509_REQ_Â
(
FILE
 *
Â
,
X509_REQ
 *
ªq
);

775 #i‚de‡
OPENSSL_NO_RSA


776 
RSA
 *
d2i_RSAPriv©eKey_Â
(
FILE
 *
Â
,RSA **
rß
);

777 
i2d_RSAPriv©eKey_Â
(
FILE
 *
Â
,
RSA
 *
rß
);

778 
RSA
 *
d2i_RSAPublicKey_Â
(
FILE
 *
Â
,RSA **
rß
);

779 
i2d_RSAPublicKey_Â
(
FILE
 *
Â
,
RSA
 *
rß
);

780 
RSA
 *
d2i_RSA_PUBKEY_Â
(
FILE
 *
Â
,RSA **
rß
);

781 
i2d_RSA_PUBKEY_Â
(
FILE
 *
Â
,
RSA
 *
rß
);

783 #i‚de‡
OPENSSL_NO_DSA


784 
DSA
 *
d2i_DSA_PUBKEY_Â
(
FILE
 *
Â
, DSA **
dß
);

785 
i2d_DSA_PUBKEY_Â
(
FILE
 *
Â
, 
DSA
 *
dß
);

786 
DSA
 *
d2i_DSAPriv©eKey_Â
(
FILE
 *
Â
, DSA **
dß
);

787 
i2d_DSAPriv©eKey_Â
(
FILE
 *
Â
, 
DSA
 *
dß
);

789 
X509_SIG
 *
d2i_PKCS8_Â
(
FILE
 *
Â
,X509_SIG **
p8
);

790 
i2d_PKCS8_Â
(
FILE
 *
Â
,
X509_SIG
 *
p8
);

791 
PKCS8_PRIV_KEY_INFO
 *
d2i_PKCS8_PRIV_KEY_INFO_Â
(
FILE
 *
Â
,

792 
PKCS8_PRIV_KEY_INFO
 **
p8öf
);

793 
i2d_PKCS8_PRIV_KEY_INFO_Â
(
FILE
 *
Â
,
PKCS8_PRIV_KEY_INFO
 *
p8öf
);

794 
i2d_PKCS8Priv©eKeyInfo_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
key
);

795 
i2d_Priv©eKey_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
pkey
);

796 
EVP_PKEY
 *
d2i_Priv©eKey_Â
(
FILE
 *
Â
, EVP_PKEY **
a
);

797 
i2d_PUBKEY_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
pkey
);

798 
EVP_PKEY
 *
d2i_PUBKEY_Â
(
FILE
 *
Â
, EVP_PKEY **
a
);

801 #i‚de‡
OPENSSL_NO_BIO


802 
X509
 *
d2i_X509_bio
(
BIO
 *
bp
,X509 **
x509
);

803 
i2d_X509_bio
(
BIO
 *
bp
,
X509
 *
x509
);

804 
X509_CRL
 *
d2i_X509_CRL_bio
(
BIO
 *
bp
,X509_CRL **
¸l
);

805 
i2d_X509_CRL_bio
(
BIO
 *
bp
,
X509_CRL
 *
¸l
);

806 
X509_REQ
 *
d2i_X509_REQ_bio
(
BIO
 *
bp
,X509_REQ **
ªq
);

807 
i2d_X509_REQ_bio
(
BIO
 *
bp
,
X509_REQ
 *
ªq
);

808 #i‚de‡
OPENSSL_NO_RSA


809 
RSA
 *
d2i_RSAPriv©eKey_bio
(
BIO
 *
bp
,RSA **
rß
);

810 
i2d_RSAPriv©eKey_bio
(
BIO
 *
bp
,
RSA
 *
rß
);

811 
RSA
 *
d2i_RSAPublicKey_bio
(
BIO
 *
bp
,RSA **
rß
);

812 
i2d_RSAPublicKey_bio
(
BIO
 *
bp
,
RSA
 *
rß
);

813 
RSA
 *
d2i_RSA_PUBKEY_bio
(
BIO
 *
bp
,RSA **
rß
);

814 
i2d_RSA_PUBKEY_bio
(
BIO
 *
bp
,
RSA
 *
rß
);

816 #i‚de‡
OPENSSL_NO_DSA


817 
DSA
 *
d2i_DSA_PUBKEY_bio
(
BIO
 *
bp
, DSA **
dß
);

818 
i2d_DSA_PUBKEY_bio
(
BIO
 *
bp
, 
DSA
 *
dß
);

819 
DSA
 *
d2i_DSAPriv©eKey_bio
(
BIO
 *
bp
, DSA **
dß
);

820 
i2d_DSAPriv©eKey_bio
(
BIO
 *
bp
, 
DSA
 *
dß
);

822 
X509_SIG
 *
d2i_PKCS8_bio
(
BIO
 *
bp
,X509_SIG **
p8
);

823 
i2d_PKCS8_bio
(
BIO
 *
bp
,
X509_SIG
 *
p8
);

824 
PKCS8_PRIV_KEY_INFO
 *
d2i_PKCS8_PRIV_KEY_INFO_bio
(
BIO
 *
bp
,

825 
PKCS8_PRIV_KEY_INFO
 **
p8öf
);

826 
i2d_PKCS8_PRIV_KEY_INFO_bio
(
BIO
 *
bp
,
PKCS8_PRIV_KEY_INFO
 *
p8öf
);

827 
i2d_PKCS8Priv©eKeyInfo_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
key
);

828 
i2d_Priv©eKey_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
pkey
);

829 
EVP_PKEY
 *
d2i_Priv©eKey_bio
(
BIO
 *
bp
, EVP_PKEY **
a
);

830 
i2d_PUBKEY_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
pkey
);

831 
EVP_PKEY
 *
d2i_PUBKEY_bio
(
BIO
 *
bp
, EVP_PKEY **
a
);

834 
X509
 *
X509_dup
(X509 *
x509
);

835 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_dup
(X509_ATTRIBUTE *
xa
);

836 
X509_EXTENSION
 *
X509_EXTENSION_dup
(X509_EXTENSION *
ex
);

837 
X509_CRL
 *
X509_CRL_dup
(X509_CRL *
¸l
);

838 
X509_REQ
 *
X509_REQ_dup
(X509_REQ *
ªq
);

839 
X509_ALGOR
 *
X509_ALGOR_dup
(X509_ALGOR *
xn
);

840 
X509_NAME
 *
X509_NAME_dup
(X509_NAME *
xn
);

841 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_dup
(X509_NAME_ENTRY *
√
);

845 
X509_cmp_time
(
ASN1_TIME
 *
s
, 
time_t
 *
t
);

846 
X509_cmp_cuºít_time
(
ASN1_TIME
 *
s
);

847 
ASN1_TIME
 * 
X509_time_adj
(ASN1_TIME *
s
, 
adj
, 
time_t
 *
t
);

848 
ASN1_TIME
 * 
X509_gmtime_adj
(ASN1_TIME *
s
, 
adj
);

850 c⁄° * 
X509_gë_deÁu…_˚π_¨ó
();

851 c⁄° * 
X509_gë_deÁu…_˚π_dú
();

852 c⁄° * 
X509_gë_deÁu…_˚π_fûe
();

853 c⁄° * 
X509_gë_deÁu…_˚π_dú_ív
();

854 c⁄° * 
X509_gë_deÁu…_˚π_fûe_ív
();

855 c⁄° * 
X509_gë_deÁu…_¥iv©e_dú
();

857 
X509_REQ
 * 
X509_to_X509_REQ
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
);

858 
X509
 * 
X509_REQ_to_X509
(
X509_REQ
 *
r
, 
days
,
EVP_PKEY
 *
pkey
);

860 
DECLARE_ASN1_FUNCTIONS
(
X509_ALGOR
)

861 
DECLARE_ASN1_FUNCTIONS
(
X509_VAL
)

863 
DECLARE_ASN1_FUNCTIONS
(
X509_PUBKEY
)

865 
X509_PUBKEY_£t
(
X509_PUBKEY
 **
x
, 
EVP_PKEY
 *
pkey
);

866 
EVP_PKEY
 * 
X509_PUBKEY_gë
(
X509_PUBKEY
 *
key
);

867 
X509_gë_pubkey_∑ømëîs
(
EVP_PKEY
 *
pkey
,

868 
STACK_OF
(
X509
Ë*
chaö
);

869 
i2d_PUBKEY
(
EVP_PKEY
 *
a
,**
µ
);

870 
EVP_PKEY
 * 
d2i_PUBKEY
(EVP_PKEY **
a
,c⁄° **
µ
,

871 
Àngth
);

872 #i‚de‡
OPENSSL_NO_RSA


873 
i2d_RSA_PUBKEY
(
RSA
 *
a
,**
µ
);

874 
RSA
 * 
d2i_RSA_PUBKEY
(RSA **
a
,c⁄° **
µ
,

875 
Àngth
);

877 #i‚de‡
OPENSSL_NO_DSA


878 
i2d_DSA_PUBKEY
(
DSA
 *
a
,**
µ
);

879 
DSA
 * 
d2i_DSA_PUBKEY
(DSA **
a
,c⁄° **
µ
,

880 
Àngth
);

883 
DECLARE_ASN1_FUNCTIONS
(
X509_SIG
)

884 
DECLARE_ASN1_FUNCTIONS
(
X509_REQ_INFO
)

885 
DECLARE_ASN1_FUNCTIONS
(
X509_REQ
)

887 
DECLARE_ASN1_FUNCTIONS
(
X509_ATTRIBUTE
)

888 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã
(
nid
, 
©πy≥
, *
vÆue
);

890 
DECLARE_ASN1_FUNCTIONS
(
X509_EXTENSION
)

892 
DECLARE_ASN1_FUNCTIONS
(
X509_NAME_ENTRY
)

894 
DECLARE_ASN1_FUNCTIONS
(
X509_NAME
)

896 
X509_NAME_£t
(
X509_NAME
 **
xn
, X509_NAME *
«me
);

898 
DECLARE_ASN1_FUNCTIONS
(
X509_CINF
)

900 
DECLARE_ASN1_FUNCTIONS
(
X509
)

901 
DECLARE_ASN1_FUNCTIONS
(
X509_CERT_AUX
)

903 
DECLARE_ASN1_FUNCTIONS
(
X509_CERT_PAIR
)

905 
X509_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

906 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

907 
X509_£t_ex_d©a
(
X509
 *
r
, 
idx
, *
¨g
);

908 *
X509_gë_ex_d©a
(
X509
 *
r
, 
idx
);

909 
i2d_X509_AUX
(
X509
 *
a
,**
µ
);

910 
X509
 * 
d2i_X509_AUX
(X509 **
a
,c⁄° **
µ
,
Àngth
);

912 
X509_Æüs_£t1
(
X509
 *
x
, *
«me
, 
Àn
);

913 
X509_keyid_£t1
(
X509
 *
x
, *
id
, 
Àn
);

914 * 
X509_Æüs_gë0
(
X509
 *
x
, *
Àn
);

915 * 
X509_keyid_gë0
(
X509
 *
x
, *
Àn
);

916 (*
X509_TRUST_£t_deÁu…
((*
åu°
)(, 
X509
 *, )))(, X509 *, );

917 
X509_TRUST_£t
(*
t
, 
åu°
);

918 
X509_add1_åu°_obje˘
(
X509
 *
x
, 
ASN1_OBJECT
 *
obj
);

919 
X509_add1_ªje˘_obje˘
(
X509
 *
x
, 
ASN1_OBJECT
 *
obj
);

920 
X509_åu°_˛ór
(
X509
 *
x
);

921 
X509_ªje˘_˛ór
(
X509
 *
x
);

923 
DECLARE_ASN1_FUNCTIONS
(
X509_REVOKED
)

924 
DECLARE_ASN1_FUNCTIONS
(
X509_CRL_INFO
)

925 
DECLARE_ASN1_FUNCTIONS
(
X509_CRL
)

927 
X509_CRL_add0_ªvoked
(
X509_CRL
 *
¸l
, 
X509_REVOKED
 *
ªv
);

929 
X509_PKEY
 * 
X509_PKEY_√w
();

930 
X509_PKEY_‰ì
(
X509_PKEY
 *
a
);

931 
i2d_X509_PKEY
(
X509_PKEY
 *
a
,**
µ
);

932 
X509_PKEY
 * 
d2i_X509_PKEY
(X509_PKEY **
a
,c⁄° **
µ
,
Àngth
);

934 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_SPKI
)

935 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_SPKAC
)

936 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_CERT_SEQUENCE
)

938 #i‚de‡
OPENSSL_NO_EVP


939 
X509_INFO
 * 
X509_INFO_√w
();

940 
X509_INFO_‰ì
(
X509_INFO
 *
a
);

941 * 
X509_NAME_⁄ñöe
(
X509_NAME
 *
a
,*
buf
,
size
);

943 
ASN1_vîify
(
i2d_of_void
 *
i2d
, 
X509_ALGOR
 *
Æg‹1
,

944 
ASN1_BIT_STRING
 *
sig«tuª
,*
d©a
,
EVP_PKEY
 *
pkey
);

946 
ASN1_dige°
(
i2d_of_void
 *
i2d
,c⁄° 
EVP_MD
 *
ty≥
,*
d©a
,

947 *
md
,*
Àn
);

949 
ASN1_sign
(
i2d_of_void
 *
i2d
, 
X509_ALGOR
 *
Æg‹1
,

950 
X509_ALGOR
 *
Æg‹2
, 
ASN1_BIT_STRING
 *
sig«tuª
,

951 *
d©a
,
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
ty≥
);

953 
ASN1_ôem_dige°
(c⁄° 
ASN1_ITEM
 *
ô
,c⁄° 
EVP_MD
 *
ty≥
,*
d©a
,

954 *
md
,*
Àn
);

956 
ASN1_ôem_vîify
(c⁄° 
ASN1_ITEM
 *
ô
, 
X509_ALGOR
 *
Æg‹1
,

957 
ASN1_BIT_STRING
 *
sig«tuª
,*
d©a
,
EVP_PKEY
 *
pkey
);

959 
ASN1_ôem_sign
(c⁄° 
ASN1_ITEM
 *
ô
, 
X509_ALGOR
 *
Æg‹1
, X509_ALGOR *
Æg‹2
,

960 
ASN1_BIT_STRING
 *
sig«tuª
,

961 *
d©a
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
ty≥
);

964 
X509_£t_vîsi⁄
(
X509
 *
x
,
vîsi⁄
);

965 
X509_£t_£rülNumbî
(
X509
 *
x
, 
ASN1_INTEGER
 *
£rül
);

966 
ASN1_INTEGER
 * 
X509_gë_£rülNumbî
(
X509
 *
x
);

967 
X509_£t_issuî_«me
(
X509
 *
x
, 
X509_NAME
 *
«me
);

968 
X509_NAME
 * 
X509_gë_issuî_«me
(
X509
 *
a
);

969 
X509_£t_subje˘_«me
(
X509
 *
x
, 
X509_NAME
 *
«me
);

970 
X509_NAME
 * 
X509_gë_subje˘_«me
(
X509
 *
a
);

971 
X509_£t_nŸBef‹e
(
X509
 *
x
, 
ASN1_TIME
 *
tm
);

972 
X509_£t_nŸA·î
(
X509
 *
x
, 
ASN1_TIME
 *
tm
);

973 
X509_£t_pubkey
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
);

974 
EVP_PKEY
 * 
X509_gë_pubkey
(
X509
 *
x
);

975 
ASN1_BIT_STRING
 * 
X509_gë0_pubkey_bô°r
(c⁄° 
X509
 *
x
);

976 
X509_˚πifiˇã_ty≥
(
X509
 *
x
,
EVP_PKEY
 *
pubkey
 );

978 
X509_REQ_£t_vîsi⁄
(
X509_REQ
 *
x
,
vîsi⁄
);

979 
X509_REQ_£t_subje˘_«me
(
X509_REQ
 *
ªq
,
X509_NAME
 *
«me
);

980 
X509_REQ_£t_pubkey
(
X509_REQ
 *
x
, 
EVP_PKEY
 *
pkey
);

981 
EVP_PKEY
 * 
X509_REQ_gë_pubkey
(
X509_REQ
 *
ªq
);

982 
X509_REQ_exãnsi⁄_nid
(
nid
);

983 * 
X509_REQ_gë_exãnsi⁄_nids
();

984 
X509_REQ_£t_exãnsi⁄_nids
(*
nids
);

985 
STACK_OF
(
X509_EXTENSION
Ë*
X509_REQ_gë_exãnsi⁄s
(
X509_REQ
 *
ªq
);

986 
X509_REQ_add_exãnsi⁄s_nid
(
X509_REQ
 *
ªq
, 
STACK_OF
(
X509_EXTENSION
Ë*
exts
,

987 
nid
);

988 
X509_REQ_add_exãnsi⁄s
(
X509_REQ
 *
ªq
, 
STACK_OF
(
X509_EXTENSION
Ë*
exts
);

989 
X509_REQ_gë_©å_cou¡
(c⁄° 
X509_REQ
 *
ªq
);

990 
X509_REQ_gë_©å_by_NID
(c⁄° 
X509_REQ
 *
ªq
, 
nid
,

991 
œ°pos
);

992 
X509_REQ_gë_©å_by_OBJ
(c⁄° 
X509_REQ
 *
ªq
, 
ASN1_OBJECT
 *
obj
,

993 
œ°pos
);

994 
X509_ATTRIBUTE
 *
X509_REQ_gë_©å
(c⁄° 
X509_REQ
 *
ªq
, 
loc
);

995 
X509_ATTRIBUTE
 *
X509_REQ_dñëe_©å
(
X509_REQ
 *
ªq
, 
loc
);

996 
X509_REQ_add1_©å
(
X509_REQ
 *
ªq
, 
X509_ATTRIBUTE
 *
©å
);

997 
X509_REQ_add1_©å_by_OBJ
(
X509_REQ
 *
ªq
,

998 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

999 c⁄° *
byãs
, 
Àn
);

1000 
X509_REQ_add1_©å_by_NID
(
X509_REQ
 *
ªq
,

1001 
nid
, 
ty≥
,

1002 c⁄° *
byãs
, 
Àn
);

1003 
X509_REQ_add1_©å_by_txt
(
X509_REQ
 *
ªq
,

1004 c⁄° *
©å«me
, 
ty≥
,

1005 c⁄° *
byãs
, 
Àn
);

1007 
X509_CRL_£t_vîsi⁄
(
X509_CRL
 *
x
, 
vîsi⁄
);

1008 
X509_CRL_£t_issuî_«me
(
X509_CRL
 *
x
, 
X509_NAME
 *
«me
);

1009 
X509_CRL_£t_œ°Upd©e
(
X509_CRL
 *
x
, 
ASN1_TIME
 *
tm
);

1010 
X509_CRL_£t_√xtUpd©e
(
X509_CRL
 *
x
, 
ASN1_TIME
 *
tm
);

1011 
X509_CRL_s‹t
(
X509_CRL
 *
¸l
);

1013 
X509_REVOKED_£t_£rülNumbî
(
X509_REVOKED
 *
x
, 
ASN1_INTEGER
 *
£rül
);

1014 
X509_REVOKED_£t_ªvoˇti⁄D©e
(
X509_REVOKED
 *
r
, 
ASN1_TIME
 *
tm
);

1016 
X509_REQ_check_¥iv©e_key
(
X509_REQ
 *
x509
,
EVP_PKEY
 *
pkey
);

1018 
X509_check_¥iv©e_key
(
X509
 *
x509
,
EVP_PKEY
 *
pkey
);

1020 
X509_issuî_™d_£rül_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
);

1021 
X509_issuî_™d_£rül_hash
(
X509
 *
a
);

1023 
X509_issuî_«me_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
);

1024 
X509_issuî_«me_hash
(
X509
 *
a
);

1026 
X509_subje˘_«me_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
);

1027 
X509_subje˘_«me_hash
(
X509
 *
x
);

1029 
X509_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
);

1030 
X509_NAME_cmp
(c⁄° 
X509_NAME
 *
a
, c⁄° X509_NAME *
b
);

1031 
X509_NAME_hash
(
X509_NAME
 *
x
);

1033 
X509_CRL_cmp
(c⁄° 
X509_CRL
 *
a
, c⁄° X509_CRL *
b
);

1034 #i‚de‡
OPENSSL_NO_FP_API


1035 
X509_¥öt_ex_Â
(
FILE
 *
bp
,
X509
 *
x
, 
nmÊag
, 
cÊag
);

1036 
X509_¥öt_Â
(
FILE
 *
bp
,
X509
 *
x
);

1037 
X509_CRL_¥öt_Â
(
FILE
 *
bp
,
X509_CRL
 *
x
);

1038 
X509_REQ_¥öt_Â
(
FILE
 *
bp
,
X509_REQ
 *
ªq
);

1039 
X509_NAME_¥öt_ex_Â
(
FILE
 *
Â
, 
X509_NAME
 *
nm
, 
ödít
, 
Êags
);

1042 #i‚de‡
OPENSSL_NO_BIO


1043 
X509_NAME_¥öt
(
BIO
 *
bp
, 
X509_NAME
 *
«me
, 
oba£
);

1044 
X509_NAME_¥öt_ex
(
BIO
 *
out
, 
X509_NAME
 *
nm
, 
ödít
, 
Êags
);

1045 
X509_¥öt_ex
(
BIO
 *
bp
,
X509
 *
x
, 
nmÊag
, 
cÊag
);

1046 
X509_¥öt
(
BIO
 *
bp
,
X509
 *
x
);

1047 
X509_oc•id_¥öt
(
BIO
 *
bp
,
X509
 *
x
);

1048 
X509_CERT_AUX_¥öt
(
BIO
 *
bp
,
X509_CERT_AUX
 *
x
, 
ödít
);

1049 
X509_CRL_¥öt
(
BIO
 *
bp
,
X509_CRL
 *
x
);

1050 
X509_REQ_¥öt_ex
(
BIO
 *
bp
, 
X509_REQ
 *
x
, 
nmÊag
, 
cÊag
);

1051 
X509_REQ_¥öt
(
BIO
 *
bp
,
X509_REQ
 *
ªq
);

1054 
X509_NAME_íåy_cou¡
(
X509_NAME
 *
«me
);

1055 
X509_NAME_gë_ãxt_by_NID
(
X509_NAME
 *
«me
, 
nid
,

1056 *
buf
,
Àn
);

1057 
X509_NAME_gë_ãxt_by_OBJ
(
X509_NAME
 *
«me
, 
ASN1_OBJECT
 *
obj
,

1058 *
buf
,
Àn
);

1062 
X509_NAME_gë_ödex_by_NID
(
X509_NAME
 *
«me
,
nid
,
œ°pos
);

1063 
X509_NAME_gë_ödex_by_OBJ
(
X509_NAME
 *
«me
,
ASN1_OBJECT
 *
obj
,

1064 
œ°pos
);

1065 
X509_NAME_ENTRY
 *
X509_NAME_gë_íåy
(
X509_NAME
 *
«me
, 
loc
);

1066 
X509_NAME_ENTRY
 *
X509_NAME_dñëe_íåy
(
X509_NAME
 *
«me
, 
loc
);

1067 
X509_NAME_add_íåy
(
X509_NAME
 *
«me
,
X509_NAME_ENTRY
 *
√
,

1068 
loc
, 
£t
);

1069 
X509_NAME_add_íåy_by_OBJ
(
X509_NAME
 *
«me
, 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1070 *
byãs
, 
Àn
, 
loc
, 
£t
);

1071 
X509_NAME_add_íåy_by_NID
(
X509_NAME
 *
«me
, 
nid
, 
ty≥
,

1072 *
byãs
, 
Àn
, 
loc
, 
£t
);

1073 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_txt
(X509_NAME_ENTRY **
√
,

1074 c⁄° *
fõld
, 
ty≥
, c⁄° *
byãs
, 
Àn
);

1075 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_NID
(X509_NAME_ENTRY **
√
, 
nid
,

1076 
ty≥
,*
byãs
, 
Àn
);

1077 
X509_NAME_add_íåy_by_txt
(
X509_NAME
 *
«me
, c⁄° *
fõld
, 
ty≥
,

1078 c⁄° *
byãs
, 
Àn
, 
loc
, 
£t
);

1079 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_OBJ
(X509_NAME_ENTRY **
√
,

1080 
ASN1_OBJECT
 *
obj
, 
ty≥
,c⁄° *
byãs
,

1081 
Àn
);

1082 
X509_NAME_ENTRY_£t_obje˘
(
X509_NAME_ENTRY
 *
√
,

1083 
ASN1_OBJECT
 *
obj
);

1084 
X509_NAME_ENTRY_£t_d©a
(
X509_NAME_ENTRY
 *
√
, 
ty≥
,

1085 c⁄° *
byãs
, 
Àn
);

1086 
ASN1_OBJECT
 * 
X509_NAME_ENTRY_gë_obje˘
(
X509_NAME_ENTRY
 *
√
);

1087 
ASN1_STRING
 * 
X509_NAME_ENTRY_gë_d©a
(
X509_NAME_ENTRY
 *
√
);

1089 
X509v3_gë_ext_cou¡
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
);

1090 
X509v3_gë_ext_by_NID
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1091 
nid
, 
œ°pos
);

1092 
X509v3_gë_ext_by_OBJ
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1093 
ASN1_OBJECT
 *
obj
,
œ°pos
);

1094 
X509v3_gë_ext_by_¸ôiˇl
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1095 
¸ô
, 
œ°pos
);

1096 
X509_EXTENSION
 *
X509v3_gë_ext
(c⁄° 
STACK_OF
(X509_EXTENSIONË*
x
, 
loc
);

1097 
X509_EXTENSION
 *
X509v3_dñëe_ext
(
STACK_OF
(X509_EXTENSIONË*
x
, 
loc
);

1098 
STACK_OF
(
X509_EXTENSION
Ë*
X509v3_add_ext
(STACK_OF(X509_EXTENSIONË**
x
,

1099 
X509_EXTENSION
 *
ex
, 
loc
);

1101 
X509_gë_ext_cou¡
(
X509
 *
x
);

1102 
X509_gë_ext_by_NID
(
X509
 *
x
, 
nid
, 
œ°pos
);

1103 
X509_gë_ext_by_OBJ
(
X509
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
);

1104 
X509_gë_ext_by_¸ôiˇl
(
X509
 *
x
, 
¸ô
, 
œ°pos
);

1105 
X509_EXTENSION
 *
X509_gë_ext
(
X509
 *
x
, 
loc
);

1106 
X509_EXTENSION
 *
X509_dñëe_ext
(
X509
 *
x
, 
loc
);

1107 
X509_add_ext
(
X509
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
);

1108 * 
X509_gë_ext_d2i
(
X509
 *
x
, 
nid
, *
¸ô
, *
idx
);

1109 
X509_add1_ext_i2d
(
X509
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1110 
Êags
);

1112 
X509_CRL_gë_ext_cou¡
(
X509_CRL
 *
x
);

1113 
X509_CRL_gë_ext_by_NID
(
X509_CRL
 *
x
, 
nid
, 
œ°pos
);

1114 
X509_CRL_gë_ext_by_OBJ
(
X509_CRL
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
);

1115 
X509_CRL_gë_ext_by_¸ôiˇl
(
X509_CRL
 *
x
, 
¸ô
, 
œ°pos
);

1116 
X509_EXTENSION
 *
X509_CRL_gë_ext
(
X509_CRL
 *
x
, 
loc
);

1117 
X509_EXTENSION
 *
X509_CRL_dñëe_ext
(
X509_CRL
 *
x
, 
loc
);

1118 
X509_CRL_add_ext
(
X509_CRL
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
);

1119 * 
X509_CRL_gë_ext_d2i
(
X509_CRL
 *
x
, 
nid
, *
¸ô
, *
idx
);

1120 
X509_CRL_add1_ext_i2d
(
X509_CRL
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1121 
Êags
);

1123 
X509_REVOKED_gë_ext_cou¡
(
X509_REVOKED
 *
x
);

1124 
X509_REVOKED_gë_ext_by_NID
(
X509_REVOKED
 *
x
, 
nid
, 
œ°pos
);

1125 
X509_REVOKED_gë_ext_by_OBJ
(
X509_REVOKED
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
);

1126 
X509_REVOKED_gë_ext_by_¸ôiˇl
(
X509_REVOKED
 *
x
, 
¸ô
, 
œ°pos
);

1127 
X509_EXTENSION
 *
X509_REVOKED_gë_ext
(
X509_REVOKED
 *
x
, 
loc
);

1128 
X509_EXTENSION
 *
X509_REVOKED_dñëe_ext
(
X509_REVOKED
 *
x
, 
loc
);

1129 
X509_REVOKED_add_ext
(
X509_REVOKED
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
);

1130 * 
X509_REVOKED_gë_ext_d2i
(
X509_REVOKED
 *
x
, 
nid
, *
¸ô
, *
idx
);

1131 
X509_REVOKED_add1_ext_i2d
(
X509_REVOKED
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1132 
Êags
);

1134 
X509_EXTENSION
 *
X509_EXTENSION_¸óã_by_NID
(X509_EXTENSION **
ex
,

1135 
nid
, 
¸ô
, 
ASN1_OCTET_STRING
 *
d©a
);

1136 
X509_EXTENSION
 *
X509_EXTENSION_¸óã_by_OBJ
(X509_EXTENSION **
ex
,

1137 
ASN1_OBJECT
 *
obj
,
¸ô
,
ASN1_OCTET_STRING
 *
d©a
);

1138 
X509_EXTENSION_£t_obje˘
(
X509_EXTENSION
 *
ex
,
ASN1_OBJECT
 *
obj
);

1139 
X509_EXTENSION_£t_¸ôiˇl
(
X509_EXTENSION
 *
ex
, 
¸ô
);

1140 
X509_EXTENSION_£t_d©a
(
X509_EXTENSION
 *
ex
,

1141 
ASN1_OCTET_STRING
 *
d©a
);

1142 
ASN1_OBJECT
 * 
X509_EXTENSION_gë_obje˘
(
X509_EXTENSION
 *
ex
);

1143 
ASN1_OCTET_STRING
 *
X509_EXTENSION_gë_d©a
(
X509_EXTENSION
 *
√
);

1144 
X509_EXTENSION_gë_¸ôiˇl
(
X509_EXTENSION
 *
ex
);

1146 
X509©_gë_©å_cou¡
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
x
);

1147 
X509©_gë_©å_by_NID
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
x
, 
nid
,

1148 
œ°pos
);

1149 
X509©_gë_©å_by_OBJ
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
, 
ASN1_OBJECT
 *
obj
,

1150 
œ°pos
);

1151 
X509_ATTRIBUTE
 *
X509©_gë_©å
(c⁄° 
STACK_OF
(X509_ATTRIBUTEË*
x
, 
loc
);

1152 
X509_ATTRIBUTE
 *
X509©_dñëe_©å
(
STACK_OF
(X509_ATTRIBUTEË*
x
, 
loc
);

1153 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å
(STACK_OF(X509_ATTRIBUTEË**
x
,

1154 
X509_ATTRIBUTE
 *
©å
);

1155 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_OBJ
(STACK_OF(X509_ATTRIBUTEË**
x
,

1156 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1157 c⁄° *
byãs
, 
Àn
);

1158 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_NID
(STACK_OF(X509_ATTRIBUTEË**
x
,

1159 
nid
, 
ty≥
,

1160 c⁄° *
byãs
, 
Àn
);

1161 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_txt
(STACK_OF(X509_ATTRIBUTEË**
x
,

1162 c⁄° *
©å«me
, 
ty≥
,

1163 c⁄° *
byãs
, 
Àn
);

1164 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_NID
(X509_ATTRIBUTE **
©å
, 
nid
,

1165 
©πy≥
, c⁄° *
d©a
, 
Àn
);

1166 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_OBJ
(X509_ATTRIBUTE **
©å
,

1167 c⁄° 
ASN1_OBJECT
 *
obj
, 
©πy≥
, c⁄° *
d©a
, 
Àn
);

1168 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_txt
(X509_ATTRIBUTE **
©å
,

1169 c⁄° *
©∫ame
, 
ty≥
, c⁄° *
byãs
, 
Àn
);

1170 
X509_ATTRIBUTE_£t1_obje˘
(
X509_ATTRIBUTE
 *
©å
, c⁄° 
ASN1_OBJECT
 *
obj
);

1171 
X509_ATTRIBUTE_£t1_d©a
(
X509_ATTRIBUTE
 *
©å
, 
©åty≥
, c⁄° *
d©a
, 
Àn
);

1172 *
X509_ATTRIBUTE_gë0_d©a
(
X509_ATTRIBUTE
 *
©å
, 
idx
,

1173 
©πy≥
, *
d©a
);

1174 
X509_ATTRIBUTE_cou¡
(
X509_ATTRIBUTE
 *
©å
);

1175 
ASN1_OBJECT
 *
X509_ATTRIBUTE_gë0_obje˘
(
X509_ATTRIBUTE
 *
©å
);

1176 
ASN1_TYPE
 *
X509_ATTRIBUTE_gë0_ty≥
(
X509_ATTRIBUTE
 *
©å
, 
idx
);

1178 
EVP_PKEY_gë_©å_cou¡
(c⁄° 
EVP_PKEY
 *
key
);

1179 
EVP_PKEY_gë_©å_by_NID
(c⁄° 
EVP_PKEY
 *
key
, 
nid
,

1180 
œ°pos
);

1181 
EVP_PKEY_gë_©å_by_OBJ
(c⁄° 
EVP_PKEY
 *
key
, 
ASN1_OBJECT
 *
obj
,

1182 
œ°pos
);

1183 
X509_ATTRIBUTE
 *
EVP_PKEY_gë_©å
(c⁄° 
EVP_PKEY
 *
key
, 
loc
);

1184 
X509_ATTRIBUTE
 *
EVP_PKEY_dñëe_©å
(
EVP_PKEY
 *
key
, 
loc
);

1185 
EVP_PKEY_add1_©å
(
EVP_PKEY
 *
key
, 
X509_ATTRIBUTE
 *
©å
);

1186 
EVP_PKEY_add1_©å_by_OBJ
(
EVP_PKEY
 *
key
,

1187 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1188 c⁄° *
byãs
, 
Àn
);

1189 
EVP_PKEY_add1_©å_by_NID
(
EVP_PKEY
 *
key
,

1190 
nid
, 
ty≥
,

1191 c⁄° *
byãs
, 
Àn
);

1192 
EVP_PKEY_add1_©å_by_txt
(
EVP_PKEY
 *
key
,

1193 c⁄° *
©å«me
, 
ty≥
,

1194 c⁄° *
byãs
, 
Àn
);

1196 
X509_vîify_˚π
(
X509_STORE_CTX
 *
˘x
);

1199 
X509
 *
X509_föd_by_issuî_™d_£rül
(
STACK_OF
(X509Ë*
sk
,
X509_NAME
 *
«me
,

1200 
ASN1_INTEGER
 *
£rül
);

1201 
X509
 *
X509_föd_by_subje˘
(
STACK_OF
(X509Ë*
sk
,
X509_NAME
 *
«me
);

1203 
DECLARE_ASN1_FUNCTIONS
(
PBEPARAM
)

1204 
DECLARE_ASN1_FUNCTIONS
(
PBE2PARAM
)

1205 
DECLARE_ASN1_FUNCTIONS
(
PBKDF2PARAM
)

1207 
X509_ALGOR
 *
PKCS5_pbe_£t
(
Æg
, 
ôî
, *
ß…
, 
ß…Àn
);

1208 
X509_ALGOR
 *
PKCS5_pbe2_£t
(c⁄° 
EVP_CIPHER
 *
cùhî
, 
ôî
,

1209 *
ß…
, 
ß…Àn
);

1213 
DECLARE_ASN1_FUNCTIONS
(
PKCS8_PRIV_KEY_INFO
)

1215 
EVP_PKEY
 *
EVP_PKCS82PKEY
(
PKCS8_PRIV_KEY_INFO
 *
p8
);

1216 
PKCS8_PRIV_KEY_INFO
 *
EVP_PKEY2PKCS8
(
EVP_PKEY
 *
pkey
);

1217 
PKCS8_PRIV_KEY_INFO
 *
EVP_PKEY2PKCS8_brokí
(
EVP_PKEY
 *
pkey
, 
brokí
);

1218 
PKCS8_PRIV_KEY_INFO
 *
PKCS8_£t_brokí
(PKCS8_PRIV_KEY_INFO *
p8
, 
brokí
);

1220 
X509_check_åu°
(
X509
 *
x
, 
id
, 
Êags
);

1221 
X509_TRUST_gë_cou¡
();

1222 
X509_TRUST
 * 
X509_TRUST_gë0
(
idx
);

1223 
X509_TRUST_gë_by_id
(
id
);

1224 
X509_TRUST_add
(
id
, 
Êags
, (*
ck
)(
X509_TRUST
 *, 
X509
 *, ),

1225 *
«me
, 
¨g1
, *
¨g2
);

1226 
X509_TRUST_˛ónup
();

1227 
X509_TRUST_gë_Êags
(
X509_TRUST
 *
xp
);

1228 *
X509_TRUST_gë0_«me
(
X509_TRUST
 *
xp
);

1229 
X509_TRUST_gë_åu°
(
X509_TRUST
 *
xp
);

1235 
ERR_lﬂd_X509_°rögs
();

1240 
	#X509_F_ADD_CERT_DIR
 100

	)

1241 
	#X509_F_BY_FILE_CTRL
 101

	)

1242 
	#X509_F_CHECK_POLICY
 145

	)

1243 
	#X509_F_DIR_CTRL
 102

	)

1244 
	#X509_F_GET_CERT_BY_SUBJECT
 103

	)

1245 
	#X509_F_NETSCAPE_SPKI_B64_DECODE
 129

	)

1246 
	#X509_F_NETSCAPE_SPKI_B64_ENCODE
 130

	)

1247 
	#X509_F_X509AT_ADD1_ATTR
 135

	)

1248 
	#X509_F_X509V3_ADD_EXT
 104

	)

1249 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_NID
 136

	)

1250 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ
 137

	)

1251 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_TXT
 140

	)

1252 
	#X509_F_X509_ATTRIBUTE_GET0_DATA
 139

	)

1253 
	#X509_F_X509_ATTRIBUTE_SET1_DATA
 138

	)

1254 
	#X509_F_X509_CHECK_PRIVATE_KEY
 128

	)

1255 
	#X509_F_X509_CRL_PRINT_FP
 147

	)

1256 
	#X509_F_X509_EXTENSION_CREATE_BY_NID
 108

	)

1257 
	#X509_F_X509_EXTENSION_CREATE_BY_OBJ
 109

	)

1258 
	#X509_F_X509_GET_PUBKEY_PARAMETERS
 110

	)

1259 
	#X509_F_X509_LOAD_CERT_CRL_FILE
 132

	)

1260 
	#X509_F_X509_LOAD_CERT_FILE
 111

	)

1261 
	#X509_F_X509_LOAD_CRL_FILE
 112

	)

1262 
	#X509_F_X509_NAME_ADD_ENTRY
 113

	)

1263 
	#X509_F_X509_NAME_ENTRY_CREATE_BY_NID
 114

	)

1264 
	#X509_F_X509_NAME_ENTRY_CREATE_BY_TXT
 131

	)

1265 
	#X509_F_X509_NAME_ENTRY_SET_OBJECT
 115

	)

1266 
	#X509_F_X509_NAME_ONELINE
 116

	)

1267 
	#X509_F_X509_NAME_PRINT
 117

	)

1268 
	#X509_F_X509_PRINT_EX_FP
 118

	)

1269 
	#X509_F_X509_PUBKEY_GET
 119

	)

1270 
	#X509_F_X509_PUBKEY_SET
 120

	)

1271 
	#X509_F_X509_REQ_CHECK_PRIVATE_KEY
 144

	)

1272 
	#X509_F_X509_REQ_PRINT_EX
 121

	)

1273 
	#X509_F_X509_REQ_PRINT_FP
 122

	)

1274 
	#X509_F_X509_REQ_TO_X509
 123

	)

1275 
	#X509_F_X509_STORE_ADD_CERT
 124

	)

1276 
	#X509_F_X509_STORE_ADD_CRL
 125

	)

1277 
	#X509_F_X509_STORE_CTX_GET1_ISSUER
 146

	)

1278 
	#X509_F_X509_STORE_CTX_INIT
 143

	)

1279 
	#X509_F_X509_STORE_CTX_NEW
 142

	)

1280 
	#X509_F_X509_STORE_CTX_PURPOSE_INHERIT
 134

	)

1281 
	#X509_F_X509_TO_X509_REQ
 126

	)

1282 
	#X509_F_X509_TRUST_ADD
 133

	)

1283 
	#X509_F_X509_TRUST_SET
 141

	)

1284 
	#X509_F_X509_VERIFY_CERT
 127

	)

1287 
	#X509_R_BAD_X509_FILETYPE
 100

	)

1288 
	#X509_R_BASE64_DECODE_ERROR
 118

	)

1289 
	#X509_R_CANT_CHECK_DH_KEY
 114

	)

1290 
	#X509_R_CERT_ALREADY_IN_HASH_TABLE
 101

	)

1291 
	#X509_R_ERR_ASN1_LIB
 102

	)

1292 
	#X509_R_INVALID_DIRECTORY
 113

	)

1293 
	#X509_R_INVALID_FIELD_NAME
 119

	)

1294 
	#X509_R_INVALID_TRUST
 123

	)

1295 
	#X509_R_KEY_TYPE_MISMATCH
 115

	)

1296 
	#X509_R_KEY_VALUES_MISMATCH
 116

	)

1297 
	#X509_R_LOADING_CERT_DIR
 103

	)

1298 
	#X509_R_LOADING_DEFAULTS
 104

	)

1299 
	#X509_R_NO_CERT_SET_FOR_US_TO_VERIFY
 105

	)

1300 
	#X509_R_SHOULD_RETRY
 106

	)

1301 
	#X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN
 107

	)

1302 
	#X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY
 108

	)

1303 
	#X509_R_UNKNOWN_KEY_TYPE
 117

	)

1304 
	#X509_R_UNKNOWN_NID
 109

	)

1305 
	#X509_R_UNKNOWN_PURPOSE_ID
 121

	)

1306 
	#X509_R_UNKNOWN_TRUST_ID
 120

	)

1307 
	#X509_R_UNSUPPORTED_ALGORITHM
 111

	)

1308 
	#X509_R_WRONG_LOOKUP_TYPE
 112

	)

1309 
	#X509_R_WRONG_TYPE
 122

	)

1311 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/x509v3.h

58 #i‚de‡
HEADER_X509V3_H


59 
	#HEADER_X509V3_H


	)

61 
	~<›ís¶/bio.h
>

62 
	~<›ís¶/x509.h
>

63 
	~<›ís¶/c⁄f.h
>

65 #ifde‡
__˝lu•lus


70 
v3_ext_mëhod
;

71 
v3_ext_˘x
;

75 * (*
	tX509V3_EXT_NEW
)();

76 (*
X509V3_EXT_FREE
)(*);

77 * (*
	tX509V3_EXT_D2I
)(*, const ** , );

78 (*
X509V3_EXT_I2D
)(*, **);

79 
STACK_OF
(
	tCONF_VALUE
Ë* (*
	tX509V3_EXT_I2V
)(
	tv3_ext_mëhod
 *
	tmëhod
, *
	text
, 
	tSTACK_OF
(CONF_VALUEË*
	texéi°
);

80 * (*
	tX509V3_EXT_V2I
)(
	tv3_ext_mëhod
 *
	tmëhod
, 
	tv3_ext_˘x
 *
	t˘x
, 
	tSTACK_OF
(
	tCONF_VALUE
Ë*
	tvÆues
);

81 * (*
	tX509V3_EXT_I2S
)(
	tv3_ext_mëhod
 *
	tmëhod
, *
	text
);

82 * (*
	tX509V3_EXT_S2I
)(
	tv3_ext_mëhod
 *
	tmëhod
, 
	tv3_ext_˘x
 *
	t˘x
, c⁄° *
	t°r
);

83 (*
X509V3_EXT_I2R
)(
	tv3_ext_mëhod
 *
	tmëhod
, *
	text
, 
	tBIO
 *
	tout
, 
	tödít
);

84 * (*
	tX509V3_EXT_R2I
)(
	tv3_ext_mëhod
 *
	tmëhod
, 
	tv3_ext_˘x
 *
	t˘x
, c⁄° *
	t°r
);

88 
	sv3_ext_mëhod
 {

89 
ext_nid
;

90 
ext_Êags
;

92 
ASN1_ITEM_EXP
 *
ô
;

94 
X509V3_EXT_NEW
 
ext_√w
;

95 
X509V3_EXT_FREE
 
ext_‰ì
;

96 
X509V3_EXT_D2I
 
d2i
;

97 
X509V3_EXT_I2D
 
i2d
;

100 
X509V3_EXT_I2S
 
i2s
;

101 
X509V3_EXT_S2I
 
s2i
;

104 
X509V3_EXT_I2V
 
i2v
;

105 
X509V3_EXT_V2I
 
v2i
;

108 
X509V3_EXT_I2R
 
i2r
;

109 
X509V3_EXT_R2I
 
r2i
;

111 *
u§_d©a
;

114 
	sX509V3_CONF_METHOD_°
 {

115 * (*
gë_°rög
)(*
db
, *
£˘i⁄
, *
vÆue
);

116 
STACK_OF
(
CONF_VALUE
Ë* (*
gë_£˘i⁄
)(*
db
, *
£˘i⁄
);

117 (*
‰ì_°rög
)(*
db
, * 
°rög
);

118 (*
‰ì_£˘i⁄
)(*
db
, 
STACK_OF
(
CONF_VALUE
Ë*
£˘i⁄
);

119 } 
	tX509V3_CONF_METHOD
;

122 
	sv3_ext_˘x
 {

123 
	#CTX_TEST
 0x1

	)

124 
Êags
;

125 
X509
 *
issuî_˚π
;

126 
X509
 *
subje˘_˚π
;

127 
X509_REQ
 *
subje˘_ªq
;

128 
X509_CRL
 *
¸l
;

129 
X509V3_CONF_METHOD
 *
db_mëh
;

130 *
db
;

134 
v3_ext_mëhod
 
	tX509V3_EXT_METHOD
;

136 
DECLARE_STACK_OF
(
X509V3_EXT_METHOD
)

139 
	#X509V3_EXT_DYNAMIC
 0x1

	)

140 
	#X509V3_EXT_CTX_DEP
 0x2

	)

141 
	#X509V3_EXT_MULTILINE
 0x4

	)

143 
BIT_STRING_BITNAME
 
	tENUMERATED_NAMES
;

145 
	sBASIC_CONSTRAINTS_°
 {

146 
ˇ
;

147 
ASN1_INTEGER
 *
∑thÀn
;

148 } 
	tBASIC_CONSTRAINTS
;

151 
	sPKEY_USAGE_PERIOD_°
 {

152 
ASN1_GENERALIZEDTIME
 *
nŸBef‹e
;

153 
ASN1_GENERALIZEDTIME
 *
nŸA·î
;

154 } 
	tPKEY_USAGE_PERIOD
;

156 
	sŸhîName_°
 {

157 
ASN1_OBJECT
 *
ty≥_id
;

158 
ASN1_TYPE
 *
vÆue
;

159 } 
	tOTHERNAME
;

161 
	sEDIP¨tyName_°
 {

162 
ASN1_STRING
 *
«meAssig√r
;

163 
ASN1_STRING
 *
∑πyName
;

164 } 
	tEDIPARTYNAME
;

166 
	sGENERAL_NAME_°
 {

168 
	#GEN_OTHERNAME
 0

	)

169 
	#GEN_EMAIL
 1

	)

170 
	#GEN_DNS
 2

	)

171 
	#GEN_X400
 3

	)

172 
	#GEN_DIRNAME
 4

	)

173 
	#GEN_EDIPARTY
 5

	)

174 
	#GEN_URI
 6

	)

175 
	#GEN_IPADD
 7

	)

176 
	#GEN_RID
 8

	)

178 
ty≥
;

180 *
±r
;

181 
OTHERNAME
 *
ŸhîName
;

182 
ASN1_IA5STRING
 *
rfc822Name
;

183 
ASN1_IA5STRING
 *
dNSName
;

184 
ASN1_TYPE
 *
x400Addªss
;

185 
X509_NAME
 *
dúe˘‹yName
;

186 
EDIPARTYNAME
 *
ediP¨tyName
;

187 
ASN1_IA5STRING
 *
unif‹mResour˚Idítifõr
;

188 
ASN1_OCTET_STRING
 *
iPAddªss
;

189 
ASN1_OBJECT
 *
ªgi°îedID
;

192 
ASN1_OCTET_STRING
 *
ù
;

193 
X509_NAME
 *
dún
;

194 
ASN1_IA5STRING
 *
ü5
;

195 
ASN1_OBJECT
 *
rid
;

196 
ASN1_TYPE
 *
Ÿhî
;

197 } 
d
;

198 } 
	tGENERAL_NAME
;

200 
STACK_OF
(
	tGENERAL_NAME
Ë
	tGENERAL_NAMES
;

202 
	sACCESS_DESCRIPTION_°
 {

203 
ASN1_OBJECT
 *
mëhod
;

204 
GENERAL_NAME
 *
loˇti⁄
;

205 } 
	tACCESS_DESCRIPTION
;

207 
STACK_OF
(
	tACCESS_DESCRIPTION
Ë
	tAUTHORITY_INFO_ACCESS
;

209 
STACK_OF
(
	tASN1_OBJECT
Ë
	tEXTENDED_KEY_USAGE
;

211 
DECLARE_STACK_OF
(
GENERAL_NAME
)

212 
DECLARE_ASN1_SET_OF
(
GENERAL_NAME
)

214 
DECLARE_STACK_OF
(
ACCESS_DESCRIPTION
)

215 
DECLARE_ASN1_SET_OF
(
ACCESS_DESCRIPTION
)

217 
	sDIST_POINT_NAME_°
 {

218 
ty≥
;

220 
GENERAL_NAMES
 *
fuŒ«me
;

221 
STACK_OF
(
X509_NAME_ENTRY
Ë*
ªœtivíame
;

222 } 
«me
;

223 } 
	tDIST_POINT_NAME
;

225 
	sDIST_POINT_°
 {

226 
DIST_POINT_NAME
 *
di°poöt
;

227 
ASN1_BIT_STRING
 *
ªas⁄s
;

228 
GENERAL_NAMES
 *
CRLissuî
;

229 } 
	tDIST_POINT
;

231 
STACK_OF
(
	tDIST_POINT
Ë
	tCRL_DIST_POINTS
;

233 
DECLARE_STACK_OF
(
DIST_POINT
)

234 
DECLARE_ASN1_SET_OF
(
DIST_POINT
)

236 
	sAUTHORITY_KEYID_°
 {

237 
ASN1_OCTET_STRING
 *
keyid
;

238 
GENERAL_NAMES
 *
issuî
;

239 
ASN1_INTEGER
 *
£rül
;

240 } 
	tAUTHORITY_KEYID
;

244 
	sSXNET_ID_°
 {

245 
ASN1_INTEGER
 *
z⁄e
;

246 
ASN1_OCTET_STRING
 *
u£r
;

247 } 
	tSXNETID
;

249 
DECLARE_STACK_OF
(
SXNETID
)

250 
DECLARE_ASN1_SET_OF
(
SXNETID
)

252 
	sSXNET_°
 {

253 
ASN1_INTEGER
 *
vîsi⁄
;

254 
STACK_OF
(
SXNETID
Ë*
ids
;

255 } 
	tSXNET
;

257 
	sNOTICEREF_°
 {

258 
ASN1_STRING
 *
‹g™iz©i⁄
;

259 
STACK_OF
(
ASN1_INTEGER
Ë*
nŸi˚nos
;

260 } 
	tNOTICEREF
;

262 
	sUSERNOTICE_°
 {

263 
NOTICEREF
 *
nŸi˚ªf
;

264 
ASN1_STRING
 *
ex±ext
;

265 } 
	tUSERNOTICE
;

267 
	sPOLICYQUALINFO_°
 {

268 
ASN1_OBJECT
 *
pquÆid
;

270 
ASN1_IA5STRING
 *
˝suri
;

271 
USERNOTICE
 *
u£∫Ÿi˚
;

272 
ASN1_TYPE
 *
Ÿhî
;

273 } 
d
;

274 } 
	tPOLICYQUALINFO
;

276 
DECLARE_STACK_OF
(
POLICYQUALINFO
)

277 
DECLARE_ASN1_SET_OF
(
POLICYQUALINFO
)

279 
	sPOLICYINFO_°
 {

280 
ASN1_OBJECT
 *
pﬁicyid
;

281 
STACK_OF
(
POLICYQUALINFO
Ë*
quÆifõrs
;

282 } 
	tPOLICYINFO
;

284 
STACK_OF
(
	tPOLICYINFO
Ë
	tCERTIFICATEPOLICIES
;

286 
DECLARE_STACK_OF
(
POLICYINFO
)

287 
DECLARE_ASN1_SET_OF
(
POLICYINFO
)

289 
	sPOLICY_MAPPING_°
 {

290 
ASN1_OBJECT
 *
issuîDomaöPﬁicy
;

291 
ASN1_OBJECT
 *
subje˘DomaöPﬁicy
;

292 } 
	tPOLICY_MAPPING
;

294 
DECLARE_STACK_OF
(
POLICY_MAPPING
)

296 
STACK_OF
(
	tPOLICY_MAPPING
Ë
	tPOLICY_MAPPINGS
;

298 
	sGENERAL_SUBTREE_°
 {

299 
GENERAL_NAME
 *
ba£
;

300 
ASN1_INTEGER
 *
möimum
;

301 
ASN1_INTEGER
 *
maximum
;

302 } 
	tGENERAL_SUBTREE
;

304 
DECLARE_STACK_OF
(
GENERAL_SUBTREE
)

306 
	sNAME_CONSTRAINTS_°
 {

307 
STACK_OF
(
GENERAL_SUBTREE
Ë*
≥rmôãdSubåìs
;

308 
STACK_OF
(
GENERAL_SUBTREE
Ë*
ex˛udedSubåìs
;

309 } 
	tNAME_CONSTRAINTS
;

311 
	sPOLICY_CONSTRAINTS_°
 {

312 
ASN1_INTEGER
 *
ªquúeEx∂icôPﬁicy
;

313 
ASN1_INTEGER
 *
öhibôPﬁicyM≠pög
;

314 } 
	tPOLICY_CONSTRAINTS
;

317 
	sPROXY_POLICY_°


319 
ASN1_OBJECT
 *
pﬁicyL™guage
;

320 
ASN1_OCTET_STRING
 *
pﬁicy
;

321 } 
	tPROXY_POLICY
;

323 
	sPROXY_CERT_INFO_EXTENSION_°


325 
ASN1_INTEGER
 *
pcP©hLígthC⁄°øöt
;

326 
PROXY_POLICY
 *
¥oxyPﬁicy
;

327 } 
	tPROXY_CERT_INFO_EXTENSION
;

329 
DECLARE_ASN1_FUNCTIONS
(
PROXY_POLICY
)

330 
DECLARE_ASN1_FUNCTIONS
(
PROXY_CERT_INFO_EXTENSION
)

333 
	#X509V3_c⁄f_îr
(
vÆ
Ë
	`ERR_add_îr‹_d©a
(6, "£˘i⁄:", vÆ->
£˘i⁄
, \

334 ",«me:", 
vÆ
->
«me
, ",vÆue:", vÆ->
vÆue
);

	)

336 
	#X509V3_£t_˘x_ã°
(
˘x
) \

337 
	`X509V3_£t_˘x
(
˘x
, 
NULL
, NULL, NULL, NULL, 
CTX_TEST
)

	)

338 
	#X509V3_£t_˘x_nodb
(
˘x
Ë(˘x)->
db
 = 
NULL
;

	)

340 
	#EXT_BITSTRING
(
nid
, 
èbÀ
Ë{Çid, 0, 
	`ASN1_ITEM_ªf
(
ASN1_BIT_STRING
), \

343 (
X509V3_EXT_I2V
)
i2v_ASN1_BIT_STRING
, \

344 (
X509V3_EXT_V2I
)
v2i_ASN1_BIT_STRING
, \

345 
NULL
, NULL, \

346 
èbÀ
}

	)

348 
	#EXT_IA5STRING
(
nid
Ë{Çid, 0, 
	`ASN1_ITEM_ªf
(
ASN1_IA5STRING
), \

350 (
X509V3_EXT_I2S
)
i2s_ASN1_IA5STRING
, \

351 (
X509V3_EXT_S2I
)
s2i_ASN1_IA5STRING
, \

353 
NULL
}

	)

355 
	#EXT_END
 { -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

	)

360 
	#EXFLAG_BCONS
 0x1

	)

361 
	#EXFLAG_KUSAGE
 0x2

	)

362 
	#EXFLAG_XKUSAGE
 0x4

	)

363 
	#EXFLAG_NSCERT
 0x8

	)

365 
	#EXFLAG_CA
 0x10

	)

366 
	#EXFLAG_SS
 0x20

	)

367 
	#EXFLAG_V1
 0x40

	)

368 
	#EXFLAG_INVALID
 0x80

	)

369 
	#EXFLAG_SET
 0x100

	)

370 
	#EXFLAG_CRITICAL
 0x200

	)

371 
	#EXFLAG_PROXY
 0x400

	)

373 
	#EXFLAG_INVALID_POLICY
 0x400

	)

375 
	#KU_DIGITAL_SIGNATURE
 0x0080

	)

376 
	#KU_NON_REPUDIATION
 0x0040

	)

377 
	#KU_KEY_ENCIPHERMENT
 0x0020

	)

378 
	#KU_DATA_ENCIPHERMENT
 0x0010

	)

379 
	#KU_KEY_AGREEMENT
 0x0008

	)

380 
	#KU_KEY_CERT_SIGN
 0x0004

	)

381 
	#KU_CRL_SIGN
 0x0002

	)

382 
	#KU_ENCIPHER_ONLY
 0x0001

	)

383 
	#KU_DECIPHER_ONLY
 0x8000

	)

385 
	#NS_SSL_CLIENT
 0x80

	)

386 
	#NS_SSL_SERVER
 0x40

	)

387 
	#NS_SMIME
 0x20

	)

388 
	#NS_OBJSIGN
 0x10

	)

389 
	#NS_SSL_CA
 0x04

	)

390 
	#NS_SMIME_CA
 0x02

	)

391 
	#NS_OBJSIGN_CA
 0x01

	)

392 
	#NS_ANY_CA
 (
NS_SSL_CA
|
NS_SMIME_CA
|
NS_OBJSIGN_CA
)

	)

394 
	#XKU_SSL_SERVER
 0x1

	)

395 
	#XKU_SSL_CLIENT
 0x2

	)

396 
	#XKU_SMIME
 0x4

	)

397 
	#XKU_CODE_SIGN
 0x8

	)

398 
	#XKU_SGC
 0x10

	)

399 
	#XKU_OCSP_SIGN
 0x20

	)

400 
	#XKU_TIMESTAMP
 0x40

	)

401 
	#XKU_DVCS
 0x80

	)

403 
	#X509_PURPOSE_DYNAMIC
 0x1

	)

404 
	#X509_PURPOSE_DYNAMIC_NAME
 0x2

	)

406 
	sx509_puΩo£_°
 {

407 
puΩo£
;

408 
åu°
;

409 
Êags
;

410 (*
check_puΩo£
)(c⁄° 
x509_puΩo£_°
 *,

411 c⁄° 
X509
 *, );

412 *
«me
;

413 *
¢ame
;

414 *
u§_d©a
;

415 } 
	tX509_PURPOSE
;

417 
	#X509_PURPOSE_SSL_CLIENT
 1

	)

418 
	#X509_PURPOSE_SSL_SERVER
 2

	)

419 
	#X509_PURPOSE_NS_SSL_SERVER
 3

	)

420 
	#X509_PURPOSE_SMIME_SIGN
 4

	)

421 
	#X509_PURPOSE_SMIME_ENCRYPT
 5

	)

422 
	#X509_PURPOSE_CRL_SIGN
 6

	)

423 
	#X509_PURPOSE_ANY
 7

	)

424 
	#X509_PURPOSE_OCSP_HELPER
 8

	)

426 
	#X509_PURPOSE_MIN
 1

	)

427 
	#X509_PURPOSE_MAX
 8

	)

431 
	#X509V3_EXT_UNKNOWN_MASK
 (0xfL << 16)

	)

433 
	#X509V3_EXT_DEFAULT
 0

	)

435 
	#X509V3_EXT_ERROR_UNKNOWN
 (1L << 16)

	)

437 
	#X509V3_EXT_PARSE_UNKNOWN
 (2L << 16)

	)

439 
	#X509V3_EXT_DUMP_UNKNOWN
 (3L << 16)

	)

443 
	#X509V3_ADD_OP_MASK
 0xfL

	)

444 
	#X509V3_ADD_DEFAULT
 0L

	)

445 
	#X509V3_ADD_APPEND
 1L

	)

446 
	#X509V3_ADD_REPLACE
 2L

	)

447 
	#X509V3_ADD_REPLACE_EXISTING
 3L

	)

448 
	#X509V3_ADD_KEEP_EXISTING
 4L

	)

449 
	#X509V3_ADD_DELETE
 5L

	)

450 
	#X509V3_ADD_SILENT
 0x10

	)

452 
DECLARE_STACK_OF
(
X509_PURPOSE
)

454 
DECLARE_ASN1_FUNCTIONS
(
BASIC_CONSTRAINTS
)

456 
DECLARE_ASN1_FUNCTIONS
(
SXNET
)

457 
DECLARE_ASN1_FUNCTIONS
(
SXNETID
)

459 
SXNET_add_id_asc
(
SXNET
 **
psx
, *
z⁄e
, *
u£r
, 
u£æí
);

460 
SXNET_add_id_ul⁄g
(
SXNET
 **
psx
, 
lz⁄e
, *
u£r
, 
u£æí
);

461 
SXNET_add_id_INTEGER
(
SXNET
 **
psx
, 
ASN1_INTEGER
 *
iz⁄e
, *
u£r
, 
u£æí
);

463 
ASN1_OCTET_STRING
 *
SXNET_gë_id_asc
(
SXNET
 *
sx
, *
z⁄e
);

464 
ASN1_OCTET_STRING
 *
SXNET_gë_id_ul⁄g
(
SXNET
 *
sx
, 
lz⁄e
);

465 
ASN1_OCTET_STRING
 *
SXNET_gë_id_INTEGER
(
SXNET
 *
sx
, 
ASN1_INTEGER
 *
z⁄e
);

467 
DECLARE_ASN1_FUNCTIONS
(
AUTHORITY_KEYID
)

469 
DECLARE_ASN1_FUNCTIONS
(
PKEY_USAGE_PERIOD
)

471 
DECLARE_ASN1_FUNCTIONS
(
GENERAL_NAME
)

474 
ASN1_BIT_STRING
 *
v2i_ASN1_BIT_STRING
(
X509V3_EXT_METHOD
 *
mëhod
,

475 
X509V3_CTX
 *
˘x
, 
STACK_OF
(
CONF_VALUE
Ë*
nvÆ
);

476 
STACK_OF
(
CONF_VALUE
Ë*
i2v_ASN1_BIT_STRING
(
X509V3_EXT_METHOD
 *
mëhod
,

477 
ASN1_BIT_STRING
 *
bôs
,

478 
STACK_OF
(
CONF_VALUE
Ë*
exéi°
);

480 
STACK_OF
(
CONF_VALUE
Ë*
i2v_GENERAL_NAME
(
X509V3_EXT_METHOD
 *
mëhod
, 
GENERAL_NAME
 *
gí
, STACK_OF(CONF_VALUEË*
ªt
);

481 
GENERAL_NAME_¥öt
(
BIO
 *
out
, 
GENERAL_NAME
 *
gí
);

483 
DECLARE_ASN1_FUNCTIONS
(
GENERAL_NAMES
)

485 
STACK_OF
(
CONF_VALUE
Ë*
i2v_GENERAL_NAMES
(
X509V3_EXT_METHOD
 *
mëhod
,

486 
GENERAL_NAMES
 *
gí
, 
STACK_OF
(
CONF_VALUE
Ë*
exéi°
);

487 
GENERAL_NAMES
 *
v2i_GENERAL_NAMES
(
X509V3_EXT_METHOD
 *
mëhod
,

488 
X509V3_CTX
 *
˘x
, 
STACK_OF
(
CONF_VALUE
Ë*
nvÆ
);

490 
DECLARE_ASN1_FUNCTIONS
(
OTHERNAME
)

491 
DECLARE_ASN1_FUNCTIONS
(
EDIPARTYNAME
)

493 *
i2s_ASN1_OCTET_STRING
(
X509V3_EXT_METHOD
 *
mëhod
, 
ASN1_OCTET_STRING
 *
ü5
);

494 
ASN1_OCTET_STRING
 *
s2i_ASN1_OCTET_STRING
(
X509V3_EXT_METHOD
 *
mëhod
, 
X509V3_CTX
 *
˘x
, *
°r
);

496 
DECLARE_ASN1_FUNCTIONS
(
EXTENDED_KEY_USAGE
)

497 
i2a_ACCESS_DESCRIPTION
(
BIO
 *
bp
, 
ACCESS_DESCRIPTION
* 
a
);

499 
DECLARE_ASN1_FUNCTIONS
(
CERTIFICATEPOLICIES
)

500 
DECLARE_ASN1_FUNCTIONS
(
POLICYINFO
)

501 
DECLARE_ASN1_FUNCTIONS
(
POLICYQUALINFO
)

502 
DECLARE_ASN1_FUNCTIONS
(
USERNOTICE
)

503 
DECLARE_ASN1_FUNCTIONS
(
NOTICEREF
)

505 
DECLARE_ASN1_FUNCTIONS
(
CRL_DIST_POINTS
)

506 
DECLARE_ASN1_FUNCTIONS
(
DIST_POINT
)

507 
DECLARE_ASN1_FUNCTIONS
(
DIST_POINT_NAME
)

509 
DECLARE_ASN1_FUNCTIONS
(
ACCESS_DESCRIPTION
)

510 
DECLARE_ASN1_FUNCTIONS
(
AUTHORITY_INFO_ACCESS
)

512 
DECLARE_ASN1_ITEM
(
POLICY_MAPPING
)

513 
DECLARE_ASN1_ALLOC_FUNCTIONS
(
POLICY_MAPPING
)

514 
DECLARE_ASN1_ITEM
(
POLICY_MAPPINGS
)

516 
DECLARE_ASN1_ITEM
(
GENERAL_SUBTREE
)

517 
DECLARE_ASN1_ALLOC_FUNCTIONS
(
GENERAL_SUBTREE
)

519 
DECLARE_ASN1_ITEM
(
NAME_CONSTRAINTS
)

520 
DECLARE_ASN1_ALLOC_FUNCTIONS
(
NAME_CONSTRAINTS
)

522 
DECLARE_ASN1_ALLOC_FUNCTIONS
(
POLICY_CONSTRAINTS
)

523 
DECLARE_ASN1_ITEM
(
POLICY_CONSTRAINTS
)

525 #ifde‡
HEADER_CONF_H


526 
GENERAL_NAME
 *
v2i_GENERAL_NAME
(
X509V3_EXT_METHOD
 *
mëhod
, 
X509V3_CTX
 *
˘x
,

527 
CONF_VALUE
 *
˙f
);

528 
GENERAL_NAME
 *
v2i_GENERAL_NAME_ex
(GENERAL_NAME *
out
, 
X509V3_EXT_METHOD
 *
mëhod
,

529 
X509V3_CTX
 *
˘x
, 
CONF_VALUE
 *
˙f
, 
is_nc
);

530 
X509V3_c⁄f_‰ì
(
CONF_VALUE
 *
vÆ
);

532 
X509_EXTENSION
 *
X509V3_EXT_nc⁄f_nid
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, 
ext_nid
, *
vÆue
);

533 
X509_EXTENSION
 *
X509V3_EXT_nc⁄f
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
«me
, *
vÆue
);

534 
X509V3_EXT_add_nc⁄f_sk
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
STACK_OF
(
X509_EXTENSION
Ë**
sk
);

535 
X509V3_EXT_add_nc⁄f
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509
 *
˚π
);

536 
X509V3_EXT_REQ_add_nc⁄f
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509_REQ
 *
ªq
);

537 
X509V3_EXT_CRL_add_nc⁄f
(
CONF
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509_CRL
 *
¸l
);

539 
X509_EXTENSION
 *
X509V3_EXT_c⁄f_nid
(
LHASH
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, 
ext_nid
, *
vÆue
);

540 
X509_EXTENSION
 *
X509V3_EXT_c⁄f
(
LHASH
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
«me
, *
vÆue
);

541 
X509V3_EXT_add_c⁄f
(
LHASH
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509
 *
˚π
);

542 
X509V3_EXT_REQ_add_c⁄f
(
LHASH
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509_REQ
 *
ªq
);

543 
X509V3_EXT_CRL_add_c⁄f
(
LHASH
 *
c⁄f
, 
X509V3_CTX
 *
˘x
, *
£˘i⁄
, 
X509_CRL
 *
¸l
);

545 
X509V3_add_vÆue_boﬁ_nf
(*
«me
, 
a¢1_boﬁ
,

546 
STACK_OF
(
CONF_VALUE
Ë**
exéi°
);

547 
X509V3_gë_vÆue_boﬁ
(
CONF_VALUE
 *
vÆue
, *
a¢1_boﬁ
);

548 
X509V3_gë_vÆue_öt
(
CONF_VALUE
 *
vÆue
, 
ASN1_INTEGER
 **
aöt
);

549 
X509V3_£t_nc⁄f
(
X509V3_CTX
 *
˘x
, 
CONF
 *
c⁄f
);

550 
X509V3_£t_c⁄f_lhash
(
X509V3_CTX
 *
˘x
, 
LHASH
 *
lhash
);

553 * 
X509V3_gë_°rög
(
X509V3_CTX
 *
˘x
, *
«me
, *
£˘i⁄
);

554 
STACK_OF
(
CONF_VALUE
Ë* 
X509V3_gë_£˘i⁄
(
X509V3_CTX
 *
˘x
, *
£˘i⁄
);

555 
X509V3_°rög_‰ì
(
X509V3_CTX
 *
˘x
, *
°r
);

556 
X509V3_£˘i⁄_‰ì
–
X509V3_CTX
 *
˘x
, 
STACK_OF
(
CONF_VALUE
Ë*
£˘i⁄
);

557 
X509V3_£t_˘x
(
X509V3_CTX
 *
˘x
, 
X509
 *
issuî
, X509 *
subje˘
,

558 
X509_REQ
 *
ªq
, 
X509_CRL
 *
¸l
, 
Êags
);

560 
X509V3_add_vÆue
(c⁄° *
«me
, c⁄° *
vÆue
,

561 
STACK_OF
(
CONF_VALUE
Ë**
exéi°
);

562 
X509V3_add_vÆue_uch¨
(c⁄° *
«me
, c⁄° *
vÆue
,

563 
STACK_OF
(
CONF_VALUE
Ë**
exéi°
);

564 
X509V3_add_vÆue_boﬁ
(c⁄° *
«me
, 
a¢1_boﬁ
,

565 
STACK_OF
(
CONF_VALUE
Ë**
exéi°
);

566 
X509V3_add_vÆue_öt
(c⁄° *
«me
, 
ASN1_INTEGER
 *
aöt
,

567 
STACK_OF
(
CONF_VALUE
Ë**
exéi°
);

568 * 
i2s_ASN1_INTEGER
(
X509V3_EXT_METHOD
 *
mëh
, 
ASN1_INTEGER
 *
aöt
);

569 
ASN1_INTEGER
 * 
s2i_ASN1_INTEGER
(
X509V3_EXT_METHOD
 *
mëh
, *
vÆue
);

570 * 
i2s_ASN1_ENUMERATED
(
X509V3_EXT_METHOD
 *
mëh
, 
ASN1_ENUMERATED
 *
aöt
);

571 * 
i2s_ASN1_ENUMERATED_TABLE
(
X509V3_EXT_METHOD
 *
mëh
, 
ASN1_ENUMERATED
 *
aöt
);

572 
X509V3_EXT_add
(
X509V3_EXT_METHOD
 *
ext
);

573 
X509V3_EXT_add_li°
(
X509V3_EXT_METHOD
 *
exéi°
);

574 
X509V3_EXT_add_Æüs
(
nid_to
, 
nid_‰om
);

575 
X509V3_EXT_˛ónup
();

577 
X509V3_EXT_METHOD
 *
X509V3_EXT_gë
(
X509_EXTENSION
 *
ext
);

578 
X509V3_EXT_METHOD
 *
X509V3_EXT_gë_nid
(
nid
);

579 
X509V3_add_°™d¨d_exãnsi⁄s
();

580 
STACK_OF
(
CONF_VALUE
Ë*
X509V3_∑r£_li°
(c⁄° *
löe
);

581 *
X509V3_EXT_d2i
(
X509_EXTENSION
 *
ext
);

582 *
X509V3_gë_d2i
(
STACK_OF
(
X509_EXTENSION
Ë*
x
, 
nid
, *
¸ô
, *
idx
);

585 
X509_EXTENSION
 *
X509V3_EXT_i2d
(
ext_nid
, 
¸ô
, *
ext_°ruc
);

586 
X509V3_add1_i2d
(
STACK_OF
(
X509_EXTENSION
Ë**
x
, 
nid
, *
vÆue
, 
¸ô
, 
Êags
);

588 *
hex_to_°rög
(*
buf„r
, 
Àn
);

589 *
°rög_to_hex
(*
°r
, *
Àn
);

590 
«me_cmp
(c⁄° *
«me
, c⁄° *
cmp
);

592 
X509V3_EXT_vÆ_¥n
(
BIO
 *
out
, 
STACK_OF
(
CONF_VALUE
Ë*
vÆ
, 
ödít
,

593 
ml
);

594 
X509V3_EXT_¥öt
(
BIO
 *
out
, 
X509_EXTENSION
 *
ext
, 
Êag
, 
ödít
);

595 
X509V3_EXT_¥öt_Â
(
FILE
 *
out
, 
X509_EXTENSION
 *
ext
, 
Êag
, 
ödít
);

597 
X509V3_exãnsi⁄s_¥öt
(
BIO
 *
out
, *
tôÀ
, 
STACK_OF
(
X509_EXTENSION
Ë*
exts
, 
Êag
, 
ödít
);

599 
X509_check_ˇ
(
X509
 *
x
);

600 
X509_check_puΩo£
(
X509
 *
x
, 
id
, 
ˇ
);

601 
X509_suµ‹ãd_exãnsi⁄
(
X509_EXTENSION
 *
ex
);

602 
X509_PURPOSE_£t
(*
p
, 
puΩo£
);

603 
X509_check_issued
(
X509
 *
issuî
, X509 *
subje˘
);

604 
X509_PURPOSE_gë_cou¡
();

605 
X509_PURPOSE
 * 
X509_PURPOSE_gë0
(
idx
);

606 
X509_PURPOSE_gë_by_¢ame
(*
¢ame
);

607 
X509_PURPOSE_gë_by_id
(
id
);

608 
X509_PURPOSE_add
(
id
, 
åu°
, 
Êags
,

609 (*
ck
)(c⁄° 
X509_PURPOSE
 *, c⁄° 
X509
 *, ),

610 *
«me
, *
¢ame
, *
¨g
);

611 *
X509_PURPOSE_gë0_«me
(
X509_PURPOSE
 *
xp
);

612 *
X509_PURPOSE_gë0_¢ame
(
X509_PURPOSE
 *
xp
);

613 
X509_PURPOSE_gë_åu°
(
X509_PURPOSE
 *
xp
);

614 
X509_PURPOSE_˛ónup
();

615 
X509_PURPOSE_gë_id
(
X509_PURPOSE
 *);

617 
STACK
 *
X509_gë1_emaû
(
X509
 *
x
);

618 
STACK
 *
X509_REQ_gë1_emaû
(
X509_REQ
 *
x
);

619 
X509_emaû_‰ì
(
STACK
 *
sk
);

621 
ASN1_OCTET_STRING
 *
a2i_IPADDRESS
(c⁄° *
ùasc
);

622 
ASN1_OCTET_STRING
 *
a2i_IPADDRESS_NC
(c⁄° *
ùasc
);

623 
X509V3_NAME_‰om_£˘i⁄
(
X509_NAME
 *
nm
, 
STACK_OF
(
CONF_VALUE
)*
dn_sk
,

624 
chty≥
);

626 
X509_POLICY_NODE_¥öt
(
BIO
 *
out
, 
X509_POLICY_NODE
 *
node
, 
ödít
);

632 
ERR_lﬂd_X509V3_°rögs
();

637 
	#X509V3_F_COPY_EMAIL
 122

	)

638 
	#X509V3_F_COPY_ISSUER
 123

	)

639 
	#X509V3_F_DO_DIRNAME
 144

	)

640 
	#X509V3_F_DO_EXT_CONF
 124

	)

641 
	#X509V3_F_DO_EXT_I2D
 135

	)

642 
	#X509V3_F_DO_EXT_NCONF
 151

	)

643 
	#X509V3_F_DO_I2V_NAME_CONSTRAINTS
 148

	)

644 
	#X509V3_F_HEX_TO_STRING
 111

	)

645 
	#X509V3_F_I2S_ASN1_ENUMERATED
 121

	)

646 
	#X509V3_F_I2S_ASN1_IA5STRING
 149

	)

647 
	#X509V3_F_I2S_ASN1_INTEGER
 120

	)

648 
	#X509V3_F_I2V_AUTHORITY_INFO_ACCESS
 138

	)

649 
	#X509V3_F_NOTICE_SECTION
 132

	)

650 
	#X509V3_F_NREF_NOS
 133

	)

651 
	#X509V3_F_POLICY_SECTION
 131

	)

652 
	#X509V3_F_PROCESS_PCI_VALUE
 150

	)

653 
	#X509V3_F_R2I_CERTPOL
 130

	)

654 
	#X509V3_F_R2I_PCI
 155

	)

655 
	#X509V3_F_S2I_ASN1_IA5STRING
 100

	)

656 
	#X509V3_F_S2I_ASN1_INTEGER
 108

	)

657 
	#X509V3_F_S2I_ASN1_OCTET_STRING
 112

	)

658 
	#X509V3_F_S2I_ASN1_SKEY_ID
 114

	)

659 
	#X509V3_F_S2I_SKEY_ID
 115

	)

660 
	#X509V3_F_STRING_TO_HEX
 113

	)

661 
	#X509V3_F_SXNET_ADD_ID_ASC
 125

	)

662 
	#X509V3_F_SXNET_ADD_ID_INTEGER
 126

	)

663 
	#X509V3_F_SXNET_ADD_ID_ULONG
 127

	)

664 
	#X509V3_F_SXNET_GET_ID_ASC
 128

	)

665 
	#X509V3_F_SXNET_GET_ID_ULONG
 129

	)

666 
	#X509V3_F_V2I_ASN1_BIT_STRING
 101

	)

667 
	#X509V3_F_V2I_AUTHORITY_INFO_ACCESS
 139

	)

668 
	#X509V3_F_V2I_AUTHORITY_KEYID
 119

	)

669 
	#X509V3_F_V2I_BASIC_CONSTRAINTS
 102

	)

670 
	#X509V3_F_V2I_CRLD
 134

	)

671 
	#X509V3_F_V2I_EXTENDED_KEY_USAGE
 103

	)

672 
	#X509V3_F_V2I_GENERAL_NAMES
 118

	)

673 
	#X509V3_F_V2I_GENERAL_NAME_EX
 117

	)

674 
	#X509V3_F_V2I_ISSUER_ALT
 153

	)

675 
	#X509V3_F_V2I_NAME_CONSTRAINTS
 147

	)

676 
	#X509V3_F_V2I_POLICY_CONSTRAINTS
 146

	)

677 
	#X509V3_F_V2I_POLICY_MAPPINGS
 145

	)

678 
	#X509V3_F_V2I_SUBJECT_ALT
 154

	)

679 
	#X509V3_F_V3_GENERIC_EXTENSION
 116

	)

680 
	#X509V3_F_X509V3_ADD1_I2D
 140

	)

681 
	#X509V3_F_X509V3_ADD_VALUE
 105

	)

682 
	#X509V3_F_X509V3_EXT_ADD
 104

	)

683 
	#X509V3_F_X509V3_EXT_ADD_ALIAS
 106

	)

684 
	#X509V3_F_X509V3_EXT_CONF
 107

	)

685 
	#X509V3_F_X509V3_EXT_I2D
 136

	)

686 
	#X509V3_F_X509V3_EXT_NCONF
 152

	)

687 
	#X509V3_F_X509V3_GET_SECTION
 142

	)

688 
	#X509V3_F_X509V3_GET_STRING
 143

	)

689 
	#X509V3_F_X509V3_GET_VALUE_BOOL
 110

	)

690 
	#X509V3_F_X509V3_PARSE_LIST
 109

	)

691 
	#X509V3_F_X509_PURPOSE_ADD
 137

	)

692 
	#X509V3_F_X509_PURPOSE_SET
 141

	)

695 
	#X509V3_R_BAD_IP_ADDRESS
 118

	)

696 
	#X509V3_R_BAD_OBJECT
 119

	)

697 
	#X509V3_R_BN_DEC2BN_ERROR
 100

	)

698 
	#X509V3_R_BN_TO_ASN1_INTEGER_ERROR
 101

	)

699 
	#X509V3_R_DIRNAME_ERROR
 149

	)

700 
	#X509V3_R_DUPLICATE_ZONE_ID
 133

	)

701 
	#X509V3_R_ERROR_CONVERTING_ZONE
 131

	)

702 
	#X509V3_R_ERROR_CREATING_EXTENSION
 144

	)

703 
	#X509V3_R_ERROR_IN_EXTENSION
 128

	)

704 
	#X509V3_R_EXPECTED_A_SECTION_NAME
 137

	)

705 
	#X509V3_R_EXTENSION_EXISTS
 145

	)

706 
	#X509V3_R_EXTENSION_NAME_ERROR
 115

	)

707 
	#X509V3_R_EXTENSION_NOT_FOUND
 102

	)

708 
	#X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED
 103

	)

709 
	#X509V3_R_EXTENSION_VALUE_ERROR
 116

	)

710 
	#X509V3_R_ILLEGAL_EMPTY_EXTENSION
 151

	)

711 
	#X509V3_R_ILLEGAL_HEX_DIGIT
 113

	)

712 
	#X509V3_R_INCORRECT_POLICY_SYNTAX_TAG
 152

	)

713 
	#X509V3_R_INVALID_BOOLEAN_STRING
 104

	)

714 
	#X509V3_R_INVALID_EXTENSION_STRING
 105

	)

715 
	#X509V3_R_INVALID_NAME
 106

	)

716 
	#X509V3_R_INVALID_NULL_ARGUMENT
 107

	)

717 
	#X509V3_R_INVALID_NULL_NAME
 108

	)

718 
	#X509V3_R_INVALID_NULL_VALUE
 109

	)

719 
	#X509V3_R_INVALID_NUMBER
 140

	)

720 
	#X509V3_R_INVALID_NUMBERS
 141

	)

721 
	#X509V3_R_INVALID_OBJECT_IDENTIFIER
 110

	)

722 
	#X509V3_R_INVALID_OPTION
 138

	)

723 
	#X509V3_R_INVALID_POLICY_IDENTIFIER
 134

	)

724 
	#X509V3_R_INVALID_PROXY_POLICY_SETTING
 153

	)

725 
	#X509V3_R_INVALID_PURPOSE
 146

	)

726 
	#X509V3_R_INVALID_SECTION
 135

	)

727 
	#X509V3_R_INVALID_SYNTAX
 143

	)

728 
	#X509V3_R_ISSUER_DECODE_ERROR
 126

	)

729 
	#X509V3_R_MISSING_VALUE
 124

	)

730 
	#X509V3_R_NEED_ORGANIZATION_AND_NUMBERS
 142

	)

731 
	#X509V3_R_NO_CONFIG_DATABASE
 136

	)

732 
	#X509V3_R_NO_ISSUER_CERTIFICATE
 121

	)

733 
	#X509V3_R_NO_ISSUER_DETAILS
 127

	)

734 
	#X509V3_R_NO_POLICY_IDENTIFIER
 139

	)

735 
	#X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED
 154

	)

736 
	#X509V3_R_NO_PUBLIC_KEY
 114

	)

737 
	#X509V3_R_NO_SUBJECT_DETAILS
 125

	)

738 
	#X509V3_R_ODD_NUMBER_OF_DIGITS
 112

	)

739 
	#X509V3_R_OPERATION_NOT_DEFINED
 148

	)

740 
	#X509V3_R_OTHERNAME_ERROR
 147

	)

741 
	#X509V3_R_POLICY_LANGUAGE_ALREADTY_DEFINED
 155

	)

742 
	#X509V3_R_POLICY_PATH_LENGTH
 156

	)

743 
	#X509V3_R_POLICY_PATH_LENGTH_ALREADTY_DEFINED
 157

	)

744 
	#X509V3_R_POLICY_SYNTAX_NOT_CURRENTLY_SUPPORTED
 158

	)

745 
	#X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY
 159

	)

746 
	#X509V3_R_SECTION_NOT_FOUND
 150

	)

747 
	#X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS
 122

	)

748 
	#X509V3_R_UNABLE_TO_GET_ISSUER_KEYID
 123

	)

749 
	#X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT
 111

	)

750 
	#X509V3_R_UNKNOWN_EXTENSION
 129

	)

751 
	#X509V3_R_UNKNOWN_EXTENSION_NAME
 130

	)

752 
	#X509V3_R_UNKNOWN_OPTION
 120

	)

753 
	#X509V3_R_UNSUPPORTED_OPTION
 117

	)

754 
	#X509V3_R_USER_TOO_LONG
 132

	)

756 #ifde‡ 
__˝lu•lus


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/readline/readline.h

23 #i‡!
deföed
 (
_READLINE_H_
)

24 
	#_READLINE_H_


	)

26 #ifde‡
__˝lu•lus


30 #i‡
deföed
 (
READLINE_LIBRARY
)

31 
	~"æ°dc.h
"

32 
	~"æty≥defs.h
"

33 
	~"keym≠s.h
"

34 
	~"tûde.h
"

36 
	~<ªadlöe/æ°dc.h
>

37 
	~<ªadlöe/æty≥defs.h
>

38 
	~<ªadlöe/keym≠s.h
>

39 
	~<ªadlöe/tûde.h
>

43 
	#RL_READLINE_VERSION
 0x0502

	)

44 
	#RL_VERSION_MAJOR
 5

	)

45 
	#RL_VERSION_MINOR
 2

	)

55 
	eundo_code
 { 
UNDO_DELETE
, 
UNDO_INSERT
, 
UNDO_BEGIN
, 
UNDO_END
 };

58 
	sundo_li°
 {

59 
undo_li°
 *
√xt
;

60 
°¨t
, 
íd
;

61 *
ãxt
;

62 
undo_code
 
wh©
;

63 } 
	tUNDO_LIST
;

66 
UNDO_LIST
 *
æ_undo_li°
;

69 
	s_funm≠
 {

70 c⁄° *
	g«me
;

71 
æ_comm™d_func_t
 *
	gfun˘i⁄
;

72 } 
	tFUNMAP
;

74 
FUNMAP
 **
funm≠
;

83 
æ_digô_¨gumít
 
PARAMS
((, ));

84 
æ_univîßl_¨gumít
 
PARAMS
((, ));

87 
æ_f‹w¨d_byã
 
PARAMS
((, ));

88 
æ_f‹w¨d_ch¨
 
PARAMS
((, ));

89 
æ_f‹w¨d
 
PARAMS
((, ));

90 
æ_backw¨d_byã
 
PARAMS
((, ));

91 
æ_backw¨d_ch¨
 
PARAMS
((, ));

92 
æ_backw¨d
 
PARAMS
((, ));

93 
æ_beg_of_löe
 
PARAMS
((, ));

94 
æ_íd_of_löe
 
PARAMS
((, ));

95 
æ_f‹w¨d_w‹d
 
PARAMS
((, ));

96 
æ_backw¨d_w‹d
 
PARAMS
((, ));

97 
æ_ª‰esh_löe
 
PARAMS
((, ));

98 
æ_˛ór_s¸ìn
 
PARAMS
((, ));

99 
æ_¨row_keys
 
PARAMS
((, ));

102 
æ_ö£π
 
PARAMS
((, ));

103 
æ_quŸed_ö£π
 
PARAMS
((, ));

104 
æ_èb_ö£π
 
PARAMS
((, ));

105 
æ_√wlöe
 
PARAMS
((, ));

106 
æ_do_lowîˇ£_vîsi⁄
 
PARAMS
((, ));

107 
æ_rubout
 
PARAMS
((, ));

108 
æ_dñëe
 
PARAMS
((, ));

109 
æ_rubout_‹_dñëe
 
PARAMS
((, ));

110 
æ_dñëe_h‹iz⁄èl_•a˚
 
PARAMS
((, ));

111 
æ_dñëe_‹_show_com∂ëi⁄s
 
PARAMS
((, ));

112 
æ_ö£π_commít
 
PARAMS
((, ));

115 
æ_upˇ£_w‹d
 
PARAMS
((, ));

116 
æ_downˇ£_w‹d
 
PARAMS
((, ));

117 
æ_ˇpôÆize_w‹d
 
PARAMS
((, ));

120 
æ_å™•o£_w‹ds
 
PARAMS
((, ));

121 
æ_å™•o£_ch¨s
 
PARAMS
((, ));

124 
æ_ch¨_£¨ch
 
PARAMS
((, ));

125 
æ_backw¨d_ch¨_£¨ch
 
PARAMS
((, ));

128 
æ_begönög_of_hi°‹y
 
PARAMS
((, ));

129 
æ_íd_of_hi°‹y
 
PARAMS
((, ));

130 
æ_gë_√xt_hi°‹y
 
PARAMS
((, ));

131 
æ_gë_¥evious_hi°‹y
 
PARAMS
((, ));

134 
æ_£t_m¨k
 
PARAMS
((, ));

135 
æ_exch™ge_poöt_™d_m¨k
 
PARAMS
((, ));

138 
æ_vi_edôög_mode
 
PARAMS
((, ));

139 
æ_emacs_edôög_mode
 
PARAMS
((, ));

142 
æ_ovîwrôe_mode
 
PARAMS
((, ));

145 
æ_ª_ªad_öô_fûe
 
PARAMS
((, ));

146 
æ_dump_fun˘i⁄s
 
PARAMS
((, ));

147 
æ_dump_ma¸os
 
PARAMS
((, ));

148 
æ_dump_v¨übÀs
 
PARAMS
((, ));

151 
æ_com∂ëe
 
PARAMS
((, ));

152 
æ_possibÀ_com∂ëi⁄s
 
PARAMS
((, ));

153 
æ_ö£π_com∂ëi⁄s
 
PARAMS
((, ));

154 
æ_míu_com∂ëe
 
PARAMS
((, ));

157 
æ_kûl_w‹d
 
PARAMS
((, ));

158 
æ_backw¨d_kûl_w‹d
 
PARAMS
((, ));

159 
æ_kûl_löe
 
PARAMS
((, ));

160 
æ_backw¨d_kûl_löe
 
PARAMS
((, ));

161 
æ_kûl_fuŒ_löe
 
PARAMS
((, ));

162 
æ_unix_w‹d_rubout
 
PARAMS
((, ));

163 
æ_unix_fûíame_rubout
 
PARAMS
((, ));

164 
æ_unix_löe_disˇrd
 
PARAMS
((, ));

165 
æ_c›y_ªgi⁄_to_kûl
 
PARAMS
((, ));

166 
æ_kûl_ªgi⁄
 
PARAMS
((, ));

167 
æ_c›y_f‹w¨d_w‹d
 
PARAMS
((, ));

168 
æ_c›y_backw¨d_w‹d
 
PARAMS
((, ));

169 
æ_y™k
 
PARAMS
((, ));

170 
æ_y™k_p›
 
PARAMS
((, ));

171 
æ_y™k_¡h_¨g
 
PARAMS
((, ));

172 
æ_y™k_œ°_¨g
 
PARAMS
((, ));

174 #ifde‡
__CYGWIN__


175 
æ_∑°e_‰om_˛ùbﬂrd
 
PARAMS
((, ));

179 
æ_ªvî£_£¨ch_hi°‹y
 
PARAMS
((, ));

180 
æ_f‹w¨d_£¨ch_hi°‹y
 
PARAMS
((, ));

183 
æ_°¨t_kbd_ma¸o
 
PARAMS
((, ));

184 
æ_íd_kbd_ma¸o
 
PARAMS
((, ));

185 
æ_ˇŒ_œ°_kbd_ma¸o
 
PARAMS
((, ));

188 
æ_ªvît_löe
 
PARAMS
((, ));

189 
æ_undo_comm™d
 
PARAMS
((, ));

192 
æ_tûde_ex∑nd
 
PARAMS
((, ));

195 
æ_ª°¨t_ouçut
 
PARAMS
((, ));

196 
æ_°›_ouçut
 
PARAMS
((, ));

199 
æ_ab‹t
 
PARAMS
((, ));

200 
æ_ây_°©us
 
PARAMS
((, ));

203 
æ_hi°‹y_£¨ch_f‹w¨d
 
PARAMS
((, ));

204 
æ_hi°‹y_£¨ch_backw¨d
 
PARAMS
((, ));

205 
æ_n⁄öc_f‹w¨d_£¨ch
 
PARAMS
((, ));

206 
æ_n⁄öc_ªvî£_£¨ch
 
PARAMS
((, ));

207 
æ_n⁄öc_f‹w¨d_£¨ch_agaö
 
PARAMS
((, ));

208 
æ_n⁄öc_ªvî£_£¨ch_agaö
 
PARAMS
((, ));

211 
æ_ö£π_˛o£
 
PARAMS
((, ));

214 
æ_ˇŒback_h™dÀr_ö°Æl
 
PARAMS
((c⁄° *, 
æ_v˝func_t
 *));

215 
æ_ˇŒback_ªad_ch¨
 
PARAMS
(());

216 
æ_ˇŒback_h™dÀr_ªmove
 
PARAMS
(());

220 
æ_vi_ªdo
 
PARAMS
((, ));

221 
æ_vi_undo
 
PARAMS
((, ));

222 
æ_vi_y™k_¨g
 
PARAMS
((, ));

223 
æ_vi_„tch_hi°‹y
 
PARAMS
((, ));

224 
æ_vi_£¨ch_agaö
 
PARAMS
((, ));

225 
æ_vi_£¨ch
 
PARAMS
((, ));

226 
æ_vi_com∂ëe
 
PARAMS
((, ));

227 
æ_vi_tûde_ex∑nd
 
PARAMS
((, ));

228 
æ_vi_¥ev_w‹d
 
PARAMS
((, ));

229 
æ_vi_√xt_w‹d
 
PARAMS
((, ));

230 
æ_vi_íd_w‹d
 
PARAMS
((, ));

231 
æ_vi_ö£π_beg
 
PARAMS
((, ));

232 
æ_vi_≠≥nd_mode
 
PARAMS
((, ));

233 
æ_vi_≠≥nd_eﬁ
 
PARAMS
((, ));

234 
æ_vi_eof_maybe
 
PARAMS
((, ));

235 
æ_vi_ö£πi⁄_mode
 
PARAMS
((, ));

236 
æ_vi_movemít_mode
 
PARAMS
((, ));

237 
æ_vi_¨g_digô
 
PARAMS
((, ));

238 
æ_vi_ch™ge_ˇ£
 
PARAMS
((, ));

239 
æ_vi_put
 
PARAMS
((, ));

240 
æ_vi_cﬁumn
 
PARAMS
((, ));

241 
æ_vi_dñëe_to
 
PARAMS
((, ));

242 
æ_vi_ch™ge_to
 
PARAMS
((, ));

243 
æ_vi_y™k_to
 
PARAMS
((, ));

244 
æ_vi_rubout
 
PARAMS
((, ));

245 
æ_vi_dñëe
 
PARAMS
((, ));

246 
æ_vi_back_to_ödít
 
PARAMS
((, ));

247 
æ_vi_fú°_¥öt
 
PARAMS
((, ));

248 
æ_vi_ch¨_£¨ch
 
PARAMS
((, ));

249 
æ_vi_m©ch
 
PARAMS
((, ));

250 
æ_vi_ch™ge_ch¨
 
PARAMS
((, ));

251 
æ_vi_sub°
 
PARAMS
((, ));

252 
æ_vi_ovî°rike
 
PARAMS
((, ));

253 
æ_vi_ovî°rike_dñëe
 
PARAMS
((, ));

254 
æ_vi_ª∂a˚
 
PARAMS
((, ));

255 
æ_vi_£t_m¨k
 
PARAMS
((, ));

256 
æ_vi_gŸo_m¨k
 
PARAMS
((, ));

259 
æ_vi_check
 
PARAMS
(());

260 
æ_vi_domove
 
PARAMS
((, *));

261 
æ_vi_bøckty≥
 
PARAMS
(());

263 
æ_vi_°¨t_ö£πög
 
PARAMS
((, , ));

266 
æ_vi_fW‹d
 
PARAMS
((, ));

267 
æ_vi_bW‹d
 
PARAMS
((, ));

268 
æ_vi_eW‹d
 
PARAMS
((, ));

269 
æ_vi_fw‹d
 
PARAMS
((, ));

270 
æ_vi_bw‹d
 
PARAMS
((, ));

271 
æ_vi_ew‹d
 
PARAMS
((, ));

281 *
ªadlöe
 
PARAMS
((const *));

283 
æ_£t_¥om±
 
PARAMS
((const *));

284 
æ_ex∑nd_¥om±
 
PARAMS
((*));

286 
æ_öôülize
 
PARAMS
(());

289 
æ_disˇrd_¨gumít
 
PARAMS
(());

292 
æ_add_defun
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, ));

293 
æ_böd_key
 
PARAMS
((, 
æ_comm™d_func_t
 *));

294 
æ_böd_key_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

295 
æ_unböd_key
 
PARAMS
(());

296 
æ_unböd_key_ö_m≠
 
PARAMS
((, 
Keym≠
));

297 
æ_böd_key_if_unbound
 
PARAMS
((, 
æ_comm™d_func_t
 *));

298 
æ_böd_key_if_unbound_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

299 
æ_unböd_fun˘i⁄_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

300 
æ_unböd_comm™d_ö_m≠
 
PARAMS
((c⁄° *, 
Keym≠
));

301 
æ_böd_key£q
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

302 
æ_böd_key£q_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

303 
æ_böd_key£q_if_unbound
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

304 
æ_böd_key£q_if_unbound_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

305 
æ_gíîic_böd
 
PARAMS
((, c⁄° *, *, 
Keym≠
));

307 *
æ_v¨übÀ_vÆue
 
PARAMS
((const *));

308 
æ_v¨übÀ_böd
 
PARAMS
((const *, const *));

311 
æ_£t_key
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

314 
æ_ma¸o_böd
 
PARAMS
((c⁄° *, c⁄° *, 
Keym≠
));

317 
æ_å™¶©e_key£q
 
PARAMS
((const *, *, *));

318 *
æ_u¡øn¶©e_key£q
 
PARAMS
(());

320 
æ_comm™d_func_t
 *
æ_«med_fun˘i⁄
 
PARAMS
((const *));

321 
æ_comm™d_func_t
 *
æ_fun˘i⁄_of_key£q
 
PARAMS
((c⁄° *, 
Keym≠
, *));

323 
æ_li°_funm≠_«mes
 
PARAMS
(());

324 **
æ_övokög_key£qs_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

325 **
æ_övokög_key£qs
 
PARAMS
((
æ_comm™d_func_t
 *));

327 
æ_fun˘i⁄_dum≥r
 
PARAMS
(());

328 
æ_ma¸o_dum≥r
 
PARAMS
(());

329 
æ_v¨übÀ_dum≥r
 
PARAMS
(());

331 
æ_ªad_öô_fûe
 
PARAMS
((const *));

332 
æ_∑r£_™d_böd
 
PARAMS
((*));

335 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

336 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

337 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

338 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

340 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

341 *
æ_gë_keym≠_«me
 
PARAMS
((
Keym≠
));

342 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

343 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

345 
æ_£t_keym≠_‰om_edô_mode
 
PARAMS
(());

346 *
æ_gë_keym≠_«me_‰om_edô_mode
 
PARAMS
(());

349 
æ_add_funm≠_íåy
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

350 c⁄° **
æ_funm≠_«mes
 
PARAMS
(());

353 
æ_öôülize_funm≠
 
PARAMS
(());

356 
æ_push_ma¸o_öput
 
PARAMS
((*));

359 
æ_add_undo
 
PARAMS
((
undo_code
, , , *));

360 
æ_‰ì_undo_li°
 
PARAMS
(());

361 
æ_do_undo
 
PARAMS
(());

362 
æ_begö_undo_group
 
PARAMS
(());

363 
æ_íd_undo_group
 
PARAMS
(());

364 
æ_modifyög
 
PARAMS
((, ));

367 
æ_ªdi•œy
 
PARAMS
(());

368 
æ_⁄_√w_löe
 
PARAMS
(());

369 
æ_⁄_√w_löe_wôh_¥om±
 
PARAMS
(());

370 
æ_f‹˚d_upd©e_di•œy
 
PARAMS
(());

371 
æ_˛ór_mesßge
 
PARAMS
(());

372 
æ_ª£t_löe_°©e
 
PARAMS
(());

373 
æ_¸lf
 
PARAMS
(());

375 #i‡
deföed
 (
USE_VARARGS
Ë&& deföed (
PREFER_STDARG
)

376 
æ_mesßge
 (c⁄° *, ...Ë
__©åibuã__
((
__f‹m©__
 (
¥ötf
, 1, 2)));

378 
æ_mesßge
 ();

381 
æ_show_ch¨
 
PARAMS
(());

384 
æ_ch¨a˘î_Àn
 
PARAMS
((, ));

387 
æ_ßve_¥om±
 
PARAMS
(());

388 
æ_ª°‹e_¥om±
 
PARAMS
(());

391 
æ_ª∂a˚_löe
 
PARAMS
((const *, ));

392 
æ_ö£π_ãxt
 
PARAMS
((const *));

393 
æ_dñëe_ãxt
 
PARAMS
((, ));

394 
æ_kûl_ãxt
 
PARAMS
((, ));

395 *
æ_c›y_ãxt
 
PARAMS
((, ));

398 
æ_¥ï_ãrmöÆ
 
PARAMS
(());

399 
æ_dïªp_ãrmöÆ
 
PARAMS
(());

400 
æ_ây_£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

401 
æ_ây_un£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

403 
æ_ª£t_ãrmöÆ
 
PARAMS
((const *));

404 
æ_ªsize_ãrmöÆ
 
PARAMS
(());

405 
æ_£t_s¸ìn_size
 
PARAMS
((, ));

406 
æ_gë_s¸ìn_size
 
PARAMS
((*, *));

407 
æ_ª£t_s¸ìn_size
 
PARAMS
(());

409 *
æ_gë_ãrmˇp
 
PARAMS
((const *));

412 
æ_°uff_ch¨
 
PARAMS
(());

413 
æ_execuã_√xt
 
PARAMS
(());

414 
æ_˛ór_≥ndög_öput
 
PARAMS
(());

415 
æ_ªad_key
 
PARAMS
(());

416 
æ_gëc
 
PARAMS
((
FILE
 *));

417 
æ_£t_keybﬂrd_öput_timeout
 
PARAMS
(());

420 
æ_exãnd_löe_buf„r
 
PARAMS
(());

421 
æ_dög
 
PARAMS
(());

422 
æ_Æphabëic
 
PARAMS
(());

425 
æ_£t_sig«ls
 
PARAMS
(());

426 
æ_˛ór_sig«ls
 
PARAMS
(());

427 
æ_˛ónup_a·î_sig«l
 
PARAMS
(());

428 
æ_ª£t_a·î_sig«l
 
PARAMS
(());

429 
æ_‰ì_löe_°©e
 
PARAMS
(());

431 
æ_£t_∑ªn_blök_timeout
 
PARAMS
(());

434 
æ_maybe_ßve_löe
 
PARAMS
(());

435 
æ_maybe_unßve_löe
 
PARAMS
(());

436 
æ_maybe_ª∂a˚_löe
 
PARAMS
(());

439 
æ_com∂ëe_öã∫Æ
 
PARAMS
(());

440 
æ_di•œy_m©ch_li°
 
PARAMS
((**, , ));

442 **
æ_com∂ëi⁄_m©ches
 
PARAMS
((c⁄° *, 
æ_com≥¡ry_func_t
 *));

443 *
æ_u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

444 *
æ_fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

446 
æ_com∂ëi⁄_mode
 
PARAMS
((
æ_comm™d_func_t
 *));

450 
‰ì_undo_li°
 
PARAMS
(());

451 
maybe_ßve_löe
 
PARAMS
(());

452 
maybe_unßve_löe
 
PARAMS
(());

453 
maybe_ª∂a˚_löe
 
PARAMS
(());

455 
dög
 
PARAMS
(());

456 
Æphabëic
 
PARAMS
(());

457 
¸lf
 
PARAMS
(());

459 **
com∂ëi⁄_m©ches
 
PARAMS
((*, 
æ_com≥¡ry_func_t
 *));

460 *
u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

461 *
fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

471 c⁄° *
æ_libøry_vîsi⁄
;

472 
æ_ªadlöe_vîsi⁄
;

475 
æ_gnu_ªadlöe_p
;

478 
æ_ªadlöe_°©e
;

482 
æ_edôög_mode
;

486 
æ_ö£π_mode
;

490 c⁄° *
æ_ªadlöe_«me
;

494 *
æ_¥om±
;

497 *
æ_löe_buf„r
;

500 
æ_poöt
;

501 
æ_íd
;

504 
æ_m¨k
;

508 
æ_d⁄e
;

511 
æ_≥ndög_öput
;

516 
æ_di•©chög
;

520 
æ_ex∂icô_¨g
;

523 
æ_numîic_¨g
;

526 
æ_comm™d_func_t
 *
æ_œ°_func
;

529 c⁄° *
æ_ãrmöÆ_«me
;

532 
FILE
 *
æ_ö°ªam
;

533 
FILE
 *
æ_out°ªam
;

538 
æ_¥e„r_ív_wösize
;

542 
æ_hook_func_t
 *
æ_°¨tup_hook
;

547 
æ_hook_func_t
 *
æ_¥e_öput_hook
;

551 
æ_hook_func_t
 *
æ_evít_hook
;

555 
æ_gëc_func_t
 *
æ_gëc_fun˘i⁄
;

557 
æ_voidfunc_t
 *
æ_ªdi•œy_fun˘i⁄
;

559 
æ_vötfunc_t
 *
æ_¥ï_ãrm_fun˘i⁄
;

560 
æ_voidfunc_t
 *
æ_dïªp_ãrm_fun˘i⁄
;

563 
Keym≠
 
æ_executög_keym≠
;

564 
Keym≠
 
æ_bödög_keym≠
;

570 
æ_îa£_em±y_löe
;

575 
æ_Æªady_¥om±ed
;

579 
æ_num_ch¨s_to_ªad
;

582 *
æ_executög_ma¸o
;

587 
æ_ˇtch_sig«ls
;

594 
æ_ˇtch_sigwöch
;

600 
æ_com≥¡ry_func_t
 *
æ_com∂ëi⁄_íåy_fun˘i⁄
;

608 
æ_compign‹e_func_t
 *
æ_ign‹e_some_com∂ëi⁄s_fun˘i⁄
;

617 
æ_com∂ëi⁄_func_t
 *
æ_©ãm±ed_com∂ëi⁄_fun˘i⁄
;

622 c⁄° *
æ_basic_w‹d_bªak_ch¨a˘îs
;

627 *
æ_com∂ëî_w‹d_bªak_ch¨a˘îs
;

632 
æ_˝vfunc_t
 *
æ_com∂ëi⁄_w‹d_bªak_hook
;

638 c⁄° *
æ_com∂ëî_quŸe_ch¨a˘îs
;

641 c⁄° *
æ_basic_quŸe_ch¨a˘îs
;

644 c⁄° *
æ_fûíame_quŸe_ch¨a˘îs
;

649 c⁄° *
æ_•ecül_¥efixes
;

656 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_com∂ëi⁄_hook
;

665 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_ªwrôe_hook
;

668 
	#æ_symbﬁic_lök_hook
 
æ_dúe˘‹y_com∂ëi⁄_hook


	)

677 
æ_compdi•_func_t
 *
æ_com∂ëi⁄_di•œy_m©ches_hook
;

682 
æ_fûíame_com∂ëi⁄_desúed
;

689 
æ_fûíame_quŸög_desúed
;

695 
æ_quŸe_func_t
 *
æ_fûíame_quŸög_fun˘i⁄
;

700 
æ_dequŸe_func_t
 *
æ_fûíame_dequŸög_fun˘i⁄
;

705 
æ_löebuf_func_t
 *
æ_ch¨_is_quŸed_p
;

709 
æ_©ãm±ed_com∂ëi⁄_ovî
;

714 
æ_com∂ëi⁄_ty≥
;

719 
æ_com∂ëi⁄_quîy_ôems
;

723 
æ_com∂ëi⁄_≠≥nd_ch¨a˘î
;

727 
æ_com∂ëi⁄_suµªss_≠≥nd
;

731 
æ_com∂ëi⁄_quŸe_ch¨a˘î
;

735 
æ_com∂ëi⁄_found_quŸe
;

740 
æ_com∂ëi⁄_suµªss_quŸe
;

751 
æ_com∂ëi⁄_m¨k_symlök_dús
;

754 
æ_ign‹e_com∂ëi⁄_du∂iˇãs
;

758 
æ_öhibô_com∂ëi⁄
;

762 
	#READERR
 (-2)

	)

765 
	#RL_PROMPT_START_IGNORE
 '\001'

	)

766 
	#RL_PROMPT_END_IGNORE
 '\002'

	)

770 
	#NO_MATCH
 0

	)

771 
	#SINGLE_MATCH
 1

	)

772 
	#MULT_MATCH
 2

	)

775 
	#RL_STATE_NONE
 0x000000

	)

777 
	#RL_STATE_INITIALIZING
 0x000001

	)

778 
	#RL_STATE_INITIALIZED
 0x000002

	)

779 
	#RL_STATE_TERMPREPPED
 0x000004

	)

780 
	#RL_STATE_READCMD
 0x000008

	)

781 
	#RL_STATE_METANEXT
 0x000010

	)

782 
	#RL_STATE_DISPATCHING
 0x000020

	)

783 
	#RL_STATE_MOREINPUT
 0x000040

	)

784 
	#RL_STATE_ISEARCH
 0x000080

	)

785 
	#RL_STATE_NSEARCH
 0x000100

	)

786 
	#RL_STATE_SEARCH
 0x000200

	)

787 
	#RL_STATE_NUMERICARG
 0x000400

	)

788 
	#RL_STATE_MACROINPUT
 0x000800

	)

789 
	#RL_STATE_MACRODEF
 0x001000

	)

790 
	#RL_STATE_OVERWRITE
 0x002000

	)

791 
	#RL_STATE_COMPLETING
 0x004000

	)

792 
	#RL_STATE_SIGHANDLER
 0x008000

	)

793 
	#RL_STATE_UNDOING
 0x010000

	)

794 
	#RL_STATE_INPUTPENDING
 0x020000

	)

795 
	#RL_STATE_TTYCSAVED
 0x040000

	)

796 
	#RL_STATE_CALLBACK
 0x080000

	)

797 
	#RL_STATE_VIMOTION
 0x100000

	)

798 
	#RL_STATE_MULTIKEY
 0x200000

	)

799 
	#RL_STATE_VICMDONCE
 0x400000

	)

801 
	#RL_STATE_DONE
 0x800000

	)

803 
	#RL_SETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 |(x))

	)

804 
	#RL_UNSETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 &~(x))

	)

805 
	#RL_ISSTATE
(
x
Ë(
æ_ªadlöe_°©e
 & (x))

	)

807 
	sªadlöe_°©e
 {

809 
	gpoöt
;

810 
	gíd
;

811 
	gm¨k
;

812 *
	gbuf„r
;

813 
	gbuÊí
;

814 
UNDO_LIST
 *
	gul
;

815 *
	g¥om±
;

818 
	gæ°©e
;

819 
	gd⁄e
;

820 
Keym≠
 
	gkm≠
;

823 
æ_comm™d_func_t
 *
	gœ°func
;

824 
	gösmode
;

825 
	gedmode
;

826 
	gk£qÀn
;

827 
FILE
 *
	göf
;

828 
FILE
 *
	goutf
;

829 
	g≥ndögö
;

830 *
	gma¸o
;

833 
	gˇtchsigs
;

834 
	gˇtchsigwöch
;

843 
	gª£rved
[64];

846 
æ_ßve_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

847 
æ_ª°‹e_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

849 #ifde‡
__˝lu•lus


	@/usr/include/search.h

20 #i‚de‡
_SEARCH_H


21 
	#_SEARCH_H
 1

	)

23 
	~<„©uªs.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 
	g__BEGIN_DECLS


30 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_GNU


35 
	sqñem


37 
qñem
 *
	mq_f‹w
;

38 
qñem
 *
	mq_back
;

39 
	mq_d©a
[1];

45 
	$ösque
 (*
__ñem
, *
__¥ev
Ë
__THROW
;

48 
	$ªmque
 (*
__ñem
Ë
__THROW
;

53 #i‚de‡
__COMPAR_FN_T


54 
	#__COMPAR_FN_T


	)

55 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

57 #ifdef 
__USE_GNU


58 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

65 
FIND
,

66 
ENTER


68 
	tACTION
;

70 
	síåy


72 *
key
;

73 *
d©a
;

75 
	tENTRY
;

78 
_ENTRY
;

88 
ENTRY
 *
	$h£¨ch
 (
ENTRY
 
__ôem
, 
ACTION
 
__a˘i⁄
Ë
__THROW
;

91 
	$h¸óã
 (
size_t
 
__√l
Ë
__THROW
;

94 
	$hde°roy
 (Ë
__THROW
;

96 #ifde‡
__USE_GNU


98 
	sh£¨ch_d©a


100 
_ENTRY
 *
èbÀ
;

101 
size
;

102 
fûÀd
;

107 
	$h£¨ch_r
 (
ENTRY
 
__ôem
, 
ACTION
 
__a˘i⁄
, ENTRY **
__ªtvÆ
,

108 
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

109 
	$h¸óã_r
 (
size_t
 
__√l
, 
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

110 
	$hde°roy_r
 (
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

121 
¥e‹dî
,

122 
po°‹dî
,

123 
íd‹dî
,

124 
Àaf


126 
	tVISIT
;

130 *
	`t£¨ch
 (
__c⁄°
 *
__key
, **
__roŸp
,

131 
__com∑r_‚_t
 
__com∑r
);

135 *
	`tföd
 (
__c⁄°
 *
__key
, *__c⁄° *
__roŸp
,

136 
__com∑r_‚_t
 
__com∑r
);

139 *
	`tdñëe
 (
__c⁄°
 *
__ª°ri˘
 
__key
,

140 **
__ª°ri˘
 
__roŸp
,

141 
__com∑r_‚_t
 
__com∑r
);

143 #i‚de‡
__ACTION_FN_T


144 
	#__ACTION_FN_T


	)

145 (*
	t__a˘i⁄_‚_t
Ë(
	t__c⁄°
 *
	t__nodï
, 
	tVISIT
 
	t__vÆue
,

146 
	t__Àvñ
);

151 
	`twÆk
 (
__c⁄°
 *
__roŸ
, 
__a˘i⁄_‚_t
 
__a˘i⁄
);

153 #ifde‡
__USE_GNU


156 (*
	t__‰ì_‚_t
Ë(*
	t__nodï
);

159 
	`tde°roy
 (*
__roŸ
, 
__‰ì_‚_t
 
__‰ìf˘
);

165 *
	`lföd
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

166 
size_t
 *
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

170 *
	`l£¨ch
 (
__c⁄°
 *
__key
, *
__ba£
,

171 
size_t
 *
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

173 
__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	`__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	`_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	`l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	`_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

114 
__END_DECLS


	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

148 #ifde‡
__STDC__


150 
	#°dö
 
°dö


	)

151 
	#°dout
 
°dout


	)

152 
	#°dîr
 
°dîr


	)

155 
__BEGIN_NAMESPACE_STD


157 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

159 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_ATFILE


164 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

165 
__c⁄°
 *
__√w
Ë
__THROW
;

168 
__BEGIN_NAMESPACE_STD


173 #i‚de‡
__USE_FILE_OFFSET64


174 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

176 #ifde‡
__REDIRECT


177 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

179 
	#tmpfûe
 
tmpfûe64


	)

183 #ifde‡
__USE_LARGEFILE64


184 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

188 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 
__END_NAMESPACE_STD


191 #ifde‡
__USE_MISC


194 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

198 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


206 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

207 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

211 
__BEGIN_NAMESPACE_STD


216 
	`f˛o£
 (
FILE
 *
__°ªam
);

221 
	`fÊush
 (
FILE
 *
__°ªam
);

222 
__END_NAMESPACE_STD


224 #ifde‡
__USE_MISC


231 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

234 #ifde‡
__USE_GNU


241 
	`f˛o£Æl
 ();

245 
__BEGIN_NAMESPACE_STD


246 #i‚de‡
__USE_FILE_OFFSET64


251 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

252 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

257 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

258 
__c⁄°
 *
__ª°ri˘
 
__modes
,

259 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 #ifde‡
__REDIRECT


262 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

263 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

264 
__wur
;

265 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

266 
__c⁄°
 *
__ª°ri˘
 
__modes
,

267 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

268 
__wur
;

270 
	#f›í
 
f›í64


	)

271 
	#‰e›í
 
‰e›í64


	)

274 
__END_NAMESPACE_STD


275 #ifde‡
__USE_LARGEFILE64


276 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

279 
__c⁄°
 *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifdef 
__USE_POSIX


285 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

288 #ifdef 
__USE_GNU


291 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

292 
__c⁄°
 *
__ª°ri˘
 
__modes
,

293 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

392 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

393 
_G_va_li°
 
__¨g
)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

395 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

400 
__BEGIN_NAMESPACE_STD


405 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

406 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

414 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

416 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

417 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

418 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

419 #ifde‡
__REDIRECT


423 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

424 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_fsˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_sˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

429 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

430 
__isoc99_ssˇnf
Ë
__THROW
;

432 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

433 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

434 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

437 
	#fsˇnf
 
__isoc99_fsˇnf


	)

438 
	#sˇnf
 
__isoc99_sˇnf


	)

439 
	#ssˇnf
 
__isoc99_ssˇnf


	)

443 
__END_NAMESPACE_STD


445 #ifdef 
__USE_ISOC99


446 
__BEGIN_NAMESPACE_C99


451 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

452 
_G_va_li°
 
__¨g
)

453 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

459 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

460 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

463 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

464 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

465 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

467 #i‡!
deföed
 
__USE_GNU
 \

468 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

469 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

470 #ifde‡
__REDIRECT


474 
	`__REDIRECT
 (
vfsˇnf
,

475 (
FILE
 *
__ª°ri˘
 
__s
,

476 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

477 
__isoc99_vfsˇnf
)

478 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

480 
_G_va_li°
 
__¨g
), 
__isoc99_vfsˇnf
)

481 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

482 
	`__REDIRECT
 (
vssˇnf
,

483 (
__c⁄°
 *
__ª°ri˘
 
__s
,

484 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

485 
__isoc99_vssˇnf
)

486 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

488 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

489 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

494 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

495 
_G_va_li°
 
__¨g
Ë
__THROW
;

496 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

497 
	#vsˇnf
 
__isoc99_vssˇnf


	)

498 
	#vssˇnf
 
__isoc99_vssˇnf


	)

502 
__END_NAMESPACE_C99


506 
__BEGIN_NAMESPACE_STD


511 
	`fgëc
 (
FILE
 *
__°ªam
);

512 
	`gëc
 (
FILE
 *
__°ªam
);

518 
	`gëch¨
 ();

519 
__END_NAMESPACE_STD


523 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

525 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


530 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

531 
	`gëch¨_u∆ocked
 ();

534 #ifde‡
__USE_MISC


541 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

545 
__BEGIN_NAMESPACE_STD


553 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

554 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

560 
	`putch¨
 (
__c
);

561 
__END_NAMESPACE_STD


565 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

567 #ifde‡
__USE_MISC


574 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

577 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


582 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

583 
	`putch¨_u∆ocked
 (
__c
);

587 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

588 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

590 
	`gëw
 (
FILE
 *
__°ªam
);

593 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

597 
__BEGIN_NAMESPACE_STD


602 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

603 
__wur
;

610 *
	$gës
 (*
__s
Ë
__wur
;

611 
__END_NAMESPACE_STD


613 #ifde‡
__USE_GNU


620 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

621 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

625 #ifdef 
__USE_GNU


636 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

637 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

638 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

639 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

640 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

641 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

650 
size_t
 *
__ª°ri˘
 
__n
,

651 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

655 
__BEGIN_NAMESPACE_STD


660 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

666 
	`puts
 (
__c⁄°
 *
__s
);

673 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

680 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

681 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

686 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

687 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

688 
__END_NAMESPACE_STD


690 #ifde‡
__USE_GNU


697 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

698 
FILE
 *
__ª°ri˘
 
__°ªam
);

701 #ifde‡
__USE_MISC


708 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
__BEGIN_NAMESPACE_STD


720 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

725 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

730 
	`ªwöd
 (
FILE
 *
__°ªam
);

731 
__END_NAMESPACE_STD


738 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


739 #i‚de‡
__USE_FILE_OFFSET64


744 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

749 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

751 #ifde‡
__REDIRECT


752 
	`__REDIRECT
 (
f£eko
,

753 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

754 
f£eko64
);

755 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

757 
	#f£eko
 
f£eko64


	)

758 
	#·ñlo
 
·ñlo64


	)

763 
__BEGIN_NAMESPACE_STD


764 #i‚de‡
__USE_FILE_OFFSET64


769 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

774 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

776 #ifde‡
__REDIRECT


777 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

778 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

779 
	`__REDIRECT
 (
f£ços
,

780 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

782 
	#fgëpos
 
fgëpos64


	)

783 
	#f£ços
 
f£ços64


	)

786 
__END_NAMESPACE_STD


788 #ifde‡
__USE_LARGEFILE64


789 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

790 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

791 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

792 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

795 
__BEGIN_NAMESPACE_STD


797 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

799 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

801 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

802 
__END_NAMESPACE_STD


804 #ifde‡
__USE_MISC


806 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

807 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

808 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

812 
__BEGIN_NAMESPACE_STD


817 
	`≥º‹
 (
__c⁄°
 *
__s
);

818 
__END_NAMESPACE_STD


824 
	~<bôs/sys_îæi°.h
>

827 #ifdef 
__USE_POSIX


829 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 #ifde‡
__USE_MISC


834 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

839 
deföed
 
__USE_MISC
)

844 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

850 
	`p˛o£
 (
FILE
 *
__°ªam
);

854 #ifdef 
__USE_POSIX


856 *
	$˘îmid
 (*
__s
Ë
__THROW
;

860 #ifde‡
__USE_XOPEN


862 *
	`cu£rid
 (*
__s
);

866 #ifdef 
__USE_GNU


867 
ob°ack
;

870 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

871 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

872 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

873 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

874 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

875 
_G_va_li°
 
__¨gs
)

876 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

880 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


884 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

888 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

891 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

894 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


898 
	#__√ed_gë›t


	)

899 
	~<gë›t.h
>

904 #ifde‡
__USE_EXTERN_INLINES


905 
	~<bôs/°dio.h
>

907 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


908 
	~<bôs/°dio2.h
>

910 #ifde‡
__LDBL_COMPAT


911 
	~<bôs/°dio-ldbl.h
>

914 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	`î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	`ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	`jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	`£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	`î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	`ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	`jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	`£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	`lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

677 
__BEGIN_NAMESPACE_STD


680 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

681 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

682 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

686 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

687 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

692 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

693 
__END_NAMESPACE_STD


695 #ifde‡
__USE_ISOC99


696 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

697 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__BEGIN_NAMESPACE_STD


705 
div_t
 
	$div
 (
__numî
, 
__díom
)

706 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

707 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

708 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_ISOC99


712 
__BEGIN_NAMESPACE_C99


713 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

714 
__díom
)

715 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

716 
__END_NAMESPACE_C99


720 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


727 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

728 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

733 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

734 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

739 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

740 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

743 #ifde‡
__USE_MISC


745 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

746 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

747 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

748 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

749 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

750 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

751 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

752 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

757 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

758 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

759 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

760 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

761 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

762 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

764 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

765 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

766 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

767 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

769 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

770 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

771 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
__BEGIN_NAMESPACE_STD


779 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

782 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

783 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

786 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

790 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

793 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

794 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

795 
__THROW
;

796 
__END_NAMESPACE_STD


799 #ifde‡
__USE_SVID


804 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

808 #ifde‡
__USE_XOPEN_EXTENDED


815 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

816 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

817 **
__ª°ri˘
 
__vÆuï
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

822 #ifde‡
__USE_XOPEN


824 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_XOPEN2K


832 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

835 #ifde‡
__USE_XOPEN


840 
	$gø¡±
 (
__fd
Ë
__THROW
;

844 
	$u∆ock±
 (
__fd
Ë
__THROW
;

849 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

852 #ifde‡
__USE_GNU


856 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

857 
__THROW
 
	`__n⁄nuŒ
 ((2));

860 
	`gë±
 ();

863 #ifde‡
__USE_BSD


867 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


874 
	~<bôs/°dlib.h
>

876 #ifde‡
__LDBL_COMPAT


877 
	~<bôs/°dlib-ldbl.h
>

881 #unde‡
__√ed_mÆloc_™d_ˇŒoc


883 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
__BEGIN_DECLS


34 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
;

38 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

41 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

45 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

48 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

51 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

54 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

55 
__THROW
 
__©åibuã_puª__
;

58 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

59 
__THROW
 
__©åibuã_puª__
;

61 
__END_DECLS


	@/usr/include/sys/dir.h

19 #i‚def 
_SYS_DIR_H


20 
	#_SYS_DIR_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<dúít.h
>

26 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	~<limôs.h
>

23 
	~<löux/limôs.h
>

24 
	~<löux/∑øm.h
>

28 
	#NBBY
 
CHAR_BIT


	)

29 #i‚def 
NGROUPS


30 
	#NGROUPS
 
NGROUPS_MAX


	)

32 
	#MAXSYMLINKS
 20

	)

33 
	#CANBSIZ
 
MAX_CANON


	)

34 
	#NCARGS
 
ARG_MAX


	)

35 
	#MAXPATHLEN
 
PATH_MAX


	)

39 
	#NOFILE
 256

	)

42 
	~<sys/ty≥s.h
>

45 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

46 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

47 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

48 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

51 #i‚de‡
howm™y


52 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

54 #ifde‡
__GNUC__


55 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

56 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

57 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

59 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

61 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

64 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

65 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

69 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

36 
	~<bôs/sockë.h
>

38 #ifde‡
__USE_BSD


41 
	sosockaddr


43 
	mß_Ámûy
;

44 
	mß_d©a
[14];

52 
	mSHUT_RD
 = 0,

53 
	#SHUT_RD
 
SHUT_RD


	)

54 
	mSHUT_WR
,

55 
	#SHUT_WR
 
SHUT_WR


	)

56 
	mSHUT_RDWR


57 
	#SHUT_RDWR
 
SHUT_RDWR


	)

66 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


67 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

68 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

72 
	#__SOCKADDR_ALLTYPES
 \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

87 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

88 uni⁄ { 
	m__SOCKADDR_ALLTYPES


89 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

90 #unde‡
__SOCKADDR_ONETYPE


91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


101 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

107 
	`sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

108 
__fds
[2]Ë
__THROW
;

111 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

112 
__THROW
;

115 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

116 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

125 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

129 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

130 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

144 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

151 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

152 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

153 
sockÀn_t
 
__addr_Àn
);

162 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

163 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

164 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

172 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

173 
__Êags
);

180 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

186 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

187 *
__ª°ri˘
 
__›tvÆ
,

188 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

193 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

194 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

200 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

210 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

211 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

219 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

222 #ifde‡
__USE_XOPEN2K


224 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

228 #ifde‡
__USE_MISC


232 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

237 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


238 
	~<bôs/sockë2.h
>

241 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

253 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

254 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

257 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


258 #i‚de‡
__USE_FILE_OFFSET64


261 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

262 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

264 #ifde‡
__REDIRECT_NTH


265 
	`__REDIRECT_NTH
 (
l°©
,

266 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

267 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

268 
	`__n⁄nuŒ
 ((1, 2));

270 
	#l°©
 
l°©64


	)

273 #ifde‡
__USE_LARGEFILE64


274 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

275 
°©64
 *
__ª°ri˘
 
__buf
)

276 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

282 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 #ifde‡
__USE_BSD


289 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


295 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

298 #ifde‡
__USE_ATFILE


301 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
mode
, 
__Êag
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

309 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

311 #ifdef 
__USE_GNU


314 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

318 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1));

321 #ifde‡
__USE_ATFILE


325 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

326 
__THROW
 
	`__n⁄nuŒ
 ((2));

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


333 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 #ifde‡
__USE_ATFILE


341 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

342 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

347 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1));

350 #ifde‡
__USE_ATFILE


354 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2));

358 #ifde‡
__USE_ATFILE


361 
	`utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

362 
__c⁄°
 
time•ec
 
__times
[2],

363 
__Êags
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

367 #ifde‡
__USE_GNU


370 
	`futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

388 #i‚de‡
_STAT_VER


389 
	#_STAT_VER
 0

	)

391 #i‚de‡
_MKNOD_VER


392 
	#_MKNOD_VER
 0

	)

396 #i‚de‡
__USE_FILE_OFFSET64


397 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

398 
__THROW
 
	`__n⁄nuŒ
 ((3));

399 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
, 
__Êag
)

405 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

407 #ifde‡
__REDIRECT_NTH


408 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

409 
°©
 *
__°©_buf
), 
__fx°©64
)

410 
	`__n⁄nuŒ
 ((3));

411 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

412 
°©
 *
__°©_buf
), 
__x°©64
)

413 
	`__n⁄nuŒ
 ((2, 3));

414 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__lx°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

418 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
, 
__Êag
),

420 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

423 
	#__fx°©
 
__fx°©64


	)

424 
	#__x°©
 
__x°©64


	)

425 
	#__lx°©
 
__lx°©64


	)

429 #ifde‡
__USE_LARGEFILE64


430 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

432 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
, 
__Êag
)

438 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

440 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

441 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

443 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

444 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

445 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

447 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


450 
__exã∫_ölöe
 

451 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

453  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

454 
	}
}

456 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


457 
__exã∫_ölöe
 

458 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

460  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

461 
	}
}

464 
__exã∫_ölöe
 

465 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

467  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

468 
	}
}

470 #ifde‡
__USE_ATFILE


471 
__exã∫_ölöe
 

472 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

473 
__Êag
))

475  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

476 
	}
}

479 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


480 
__exã∫_ölöe
 

481 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

483  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

484 
	}
}

487 #ifde‡
__USE_ATFILE


488 
__exã∫_ölöe
 

489 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

490 
__dev_t
 
__dev
))

492  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

493 
	}
}

496 #i‡
deföed
 
__USE_LARGEFILE64
 \

497 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

498 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

499 
__exã∫_ölöe
 

500 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

502  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

503 
	}
}

505 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


506 
__exã∫_ölöe
 

507 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

509  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

510 
	}
}

513 
__exã∫_ölöe
 

514 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

516  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

517 
	}
}

519 #ifde‡
__USE_GNU


520 
__exã∫_ölöe
 

521 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

522 
__Êag
))

524  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

525 
	}
}

532 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	`utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	`lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	`futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_ATFILE


156 
	`futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
(
	`__WAIT_INT
(°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
‘ë, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
(sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	`pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

393 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

405 
	`¶ìp
 (
__£c⁄ds
);

407 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


412 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

413 
__THROW
;

420 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

429 
	`∑u£
 ();

433 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

434 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

443 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

448 #ifde‡
__USE_ATFILE


451 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

452 
__gid_t
 
__group
, 
__Êag
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

457 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

471 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

473 #ifdef 
__USE_GNU


477 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

480 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


484 *
	$gëwd
 (*
__buf
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

490 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

493 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

496 **
__ívú⁄
;

497 #ifde‡
__USE_GNU


498 **
ívú⁄
;

504 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

505 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 #ifde‡
__USE_GNU


510 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

511 
__THROW
;

516 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

517 
__THROW
 
	`__n⁄nuŒ
 ((1));

521 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

522 
__THROW
 
	`__n⁄nuŒ
 ((1));

526 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

527 
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

532 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

538 
__THROW
 
	`__n⁄nuŒ
 ((1));

541 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


543 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

548 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
	~<bôs/c⁄‚ame.h
>

557 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1));

561 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

564 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

566 #ifdef 
__USE_POSIX2


568 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

573 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

576 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

580 #i‚de‡
__FAVOR_BSD


581 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

583 #ifde‡
__REDIRECT_NTH


584 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

586 
	#gëpgΩ
 
__gëpgid


	)

591 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

592 #ifde‡
__USE_XOPEN_EXTENDED


593 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

600 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

602 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


613 #i‚de‡
__FAVOR_BSD


617 
	$£çgΩ
 (Ë
__THROW
;

622 #ifde‡
__REDIRECT_NTH


623 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

625 
	#£çgΩ
 
£çgid


	)

634 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

636 #ifde‡
__USE_XOPEN_EXTENDED


638 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

645 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

648 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

651 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

656 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

658 #ifdef 
__USE_GNU


660 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

667 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

669 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


677 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

684 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

686 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


689 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


694 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

697 #ifde‡
__USE_GNU


700 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

701 
__THROW
;

705 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

706 
__THROW
;

710 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

711 
__THROW
;

715 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

716 
__THROW
;

723 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


730 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

736 *
	$ây«me
 (
__fd
Ë
__THROW
;

740 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

741 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

745 
	$ißây
 (
__fd
Ë
__THROW
;

747 #i‡
deföed
 
__USE_BSD
 \

748 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

751 
	$ây¶Ÿ
 (Ë
__THROW
;

756 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

759 #ifde‡
__USE_ATFILE


762 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

763 
__c⁄°
 *
__to
, 
__Êags
)

764 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

767 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


769 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

775 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

776 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

780 #ifde‡
__USE_ATFILE


782 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

783 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

786 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

787 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

788 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

792 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_ATFILE


796 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2));

801 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

808 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

815 *
	`gëlogö
 ();

816 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


823 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

826 #ifdef 
__USE_BSD


828 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

832 #ifdef 
__USE_POSIX2


836 
	#__√ed_gë›t


	)

837 
	~<gë›t.h
>

841 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


845 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

849 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

852 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

857 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

863 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

865 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

872 
	$vh™gup
 (Ë
__THROW
;

875 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

884 
size_t
 
__off£t
, 
__sˇÀ
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

895 *
	$gëu£rshñl
 (Ë
__THROW
;

896 
	$ídu£rshñl
 (Ë
__THROW
;

897 
	$£tu£rshñl
 (Ë
__THROW
;

903 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

907 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

910 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

918 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


923 
	`fsync
 (
__fd
);

927 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


930 
	`gëho°id
 ();

933 
	$sync
 (Ë
__THROW
;

938 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

943 
	$gëdèbÀsize
 (Ë
__THROW
;

947 #i‚de‡
__USE_FILE_OFFSET64


948 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #ifde‡
__REDIRECT_NTH


952 
	`__REDIRECT_NTH
 (
åunˇã
,

953 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

954 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

956 
	#åunˇã
 
åunˇã64


	)

959 #ifde‡
__USE_LARGEFILE64


960 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


969 #i‚de‡
__USE_FILE_OFFSET64


970 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

972 #ifde‡
__REDIRECT_NTH


973 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

974 
·runˇã64
Ë
__wur
;

976 
	#·runˇã
 
·runˇã64


	)

979 #ifde‡
__USE_LARGEFILE64


980 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


990 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

996 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1000 #ifde‡
__USE_MISC


1011 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1016 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1028 
	#F_ULOCK
 0

	)

1029 
	#F_LOCK
 1

	)

1030 
	#F_TLOCK
 2

	)

1031 
	#F_TEST
 3

	)

1033 #i‚de‡
__USE_FILE_OFFSET64


1034 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1036 #ifde‡
__REDIRECT


1037 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1038 
lockf64
Ë
__wur
;

1040 
	#lockf
 
lockf64


	)

1043 #ifde‡
__USE_LARGEFILE64


1044 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1049 #ifde‡
__USE_GNU


1054 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1055 (
__exãnsi⁄__
 \

1056 ({ 
__ªsu…
; \

1057 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1058 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1059 
__ªsu…
; 
	}
}))

	)

1062 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1065 
fd©async
 (
__fûdes
);

1071 #ifdef 
__USE_XOPEN


1073 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1074 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1078 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1086 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 #ifde‡
__USE_XOPEN


1094 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1099 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1100 
	~<bôs/uni°d.h
>

1103 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.3"

	)

41 
	#ZLIB_VERNUM
 0x1230

	)

77 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

78 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

80 
öã∫Æ_°©e
;

82 
	sz_°ªam_s
 {

83 
Byãf
 *
√xt_ö
;

84 
uI¡
 
avaû_ö
;

85 
uL⁄g
 
tŸÆ_ö
;

87 
Byãf
 *
√xt_out
;

88 
uI¡
 
avaû_out
;

89 
uL⁄g
 
tŸÆ_out
;

91 *
msg
;

92 
öã∫Æ_°©e
 
FAR
 *
°©e
;

94 
Æloc_func
 
zÆloc
;

95 
‰ì_func
 
z‰ì
;

96 
voidpf
 
›aque
;

98 
d©a_ty≥
;

99 
uL⁄g
 
adÀr
;

100 
uL⁄g
 
ª£rved
;

101 } 
	tz_°ªam
;

103 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

109 
	sgz_hódî_s
 {

110 
ãxt
;

111 
uL⁄g
 
time
;

112 
xÊags
;

113 
os
;

114 
Byãf
 *
exåa
;

115 
uI¡
 
exåa_Àn
;

116 
uI¡
 
exåa_max
;

117 
Byãf
 *
«me
;

118 
uI¡
 
«me_max
;

119 
Byãf
 *
commít
;

120 
uI¡
 
comm_max
;

121 
h¸c
;

122 
d⁄e
;

124 } 
	tgz_hódî
;

126 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

162 
	#Z_NO_FLUSH
 0

	)

163 
	#Z_PARTIAL_FLUSH
 1

	)

164 
	#Z_SYNC_FLUSH
 2

	)

165 
	#Z_FULL_FLUSH
 3

	)

166 
	#Z_FINISH
 4

	)

167 
	#Z_BLOCK
 5

	)

170 
	#Z_OK
 0

	)

171 
	#Z_STREAM_END
 1

	)

172 
	#Z_NEED_DICT
 2

	)

173 
	#Z_ERRNO
 (-1)

	)

174 
	#Z_STREAM_ERROR
 (-2)

	)

175 
	#Z_DATA_ERROR
 (-3)

	)

176 
	#Z_MEM_ERROR
 (-4)

	)

177 
	#Z_BUF_ERROR
 (-5)

	)

178 
	#Z_VERSION_ERROR
 (-6)

	)

183 
	#Z_NO_COMPRESSION
 0

	)

184 
	#Z_BEST_SPEED
 1

	)

185 
	#Z_BEST_COMPRESSION
 9

	)

186 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

189 
	#Z_FILTERED
 1

	)

190 
	#Z_HUFFMAN_ONLY
 2

	)

191 
	#Z_RLE
 3

	)

192 
	#Z_FIXED
 4

	)

193 
	#Z_DEFAULT_STRATEGY
 0

	)

196 
	#Z_BINARY
 0

	)

197 
	#Z_TEXT
 1

	)

198 
	#Z_ASCII
 
Z_TEXT


	)

199 
	#Z_UNKNOWN
 2

	)

202 
	#Z_DEFLATED
 8

	)

205 
	#Z_NULL
 0

	)

207 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

212 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

242 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

328 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

363 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

462 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

538 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

539 c⁄° 
Byãf
 *
di˘i⁄¨y
,

540 
uI¡
 
di˘Lígth
));

577 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

578 
z_°ªamp
 
sour˚
));

595 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

606 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

607 
Àvñ
,

608 
°øãgy
));

627 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

628 
good_Àngth
,

629 
max_œzy
,

630 
ni˚_Àngth
,

631 
max_chaö
));

644 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

645 
uL⁄g
 
sour˚Lí
));

653 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

654 
bôs
,

655 
vÆue
));

669 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

670 
gz_hódîp
 
hód
));

736 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

737 c⁄° 
Byãf
 *
di˘i⁄¨y
,

738 
uI¡
 
di˘Lígth
));

758 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

773 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

774 
z_°ªamp
 
sour˚
));

789 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

799 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

800 
bôs
,

801 
vÆue
));

815 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

816 
gz_hódîp
 
hód
));

877 (*
ö_func
Ë
	tOF
((
	tFAR
 *, FAR * FAR *));

878 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

880 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

881 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

882 
out_func
 
out
, 
FAR
 *
out_desc
));

949 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

957 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1009 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1010 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1024 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1025 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1026 
Àvñ
));

1040 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1047 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1048 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1066 
voidp
 
	tgzFûe
;

1068 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((c⁄° *
∑th
, c⁄° *
mode
));

1085 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1098 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1106 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1114 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1115 
voidpc
 
buf
, 
Àn
));

1122 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
OF
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1135 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1142 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1151 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1157 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1163 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1173 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1183 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
 
fûe
,

1184 
z_off_t
 
off£t
, 
whí˚
));

1201 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1208 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
 
fûe
));

1217 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1223 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1229 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1236 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1245 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1260 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1276 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g 
adÀr1
, uL⁄g 
adÀr2
,

1277 
z_off_t
 
Àn2
));

1285 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1301 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g 
¸c1
, uL⁄g 
¸c2
, 
z_off_t
 
Àn2
));

1317 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1318 c⁄° *
vîsi⁄
, 
°ªam_size
));

1319 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1320 c⁄° *
vîsi⁄
, 
°ªam_size
));

1321 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1322 
wödowBôs
, 
memLevñ
,

1323 
°øãgy
, c⁄° *
vîsi⁄
,

1324 
°ªam_size
));

1325 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1326 c⁄° *
vîsi⁄
, 
°ªam_size
));

1327 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1328 
FAR
 *
wödow
,

1329 c⁄° *
vîsi⁄
,

1330 
°ªam_size
));

1331 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1332 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1333 
	#öÊ©eInô
(
°rm
) \

1334 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1335 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1336 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1337 (
°øãgy
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1338 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1339 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1340 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1341 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1342 
ZLIB_VERSION
, (
z_°ªam
))

	)

1345 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1346 
	söã∫Æ_°©e
 {
dummy
;};

1349 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1350 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
 
z
));

1351 
ZEXTERN
 c⁄° 
uL⁄gf
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1353 #ifde‡
__˝lu•lus


	@Symbols/alt.sym

1 *
	gÆt_symbﬁ
[] = {

11 
NULL


13 #ifde‡
USE_M17N


14 *
	gÆt2_symbﬁ
[] = {

24 
NULL


	@Symbols/big5.sym

1 *
	gbig5_symbﬁ
[] = {

11 
NULL


	@Symbols/cp850.sym

1 *
	g˝850_symbﬁ
[] = {

11 
NULL


	@Symbols/euccn.sym

1 *
	geuc˙_symbﬁ
[] = {

11 
NULL


	@Symbols/eucjp.sym

1 *
	geucjp_symbﬁ
[] = {

11 
NULL


	@Symbols/euckr.sym

1 *
	geuckr_symbﬁ
[] = {

11 
NULL


	@Symbols/euctw.sym

1 *
	geu˘w_symbﬁ
[] = {

11 
NULL


	@Symbols/graph.sym

1 *
	ggøph_symbﬁ
[] = {

8 #ifde‡
USE_M17N


9 *
	ggøph2_symbﬁ
[] = {

	@Symbols/utf8.sym

1 *
	gutf8_symbﬁ
[] = {

11 
NULL


	@/usr/include/Imlib_types.h

1 
	~<X11/Xlib.h
>

2 
	~<X11/Xutû.h
>

3 
	~<X11/X©om.h
>

4 
	~<X11/Xos.h
>

5 #ifde‡
HAVE_XSHM_H


6 
	~<X11/exãnsi⁄s/XShm.h
>

8 
	~<X11/exãnsi⁄s/sh≠e.h
>

9 
	~<°dio.h
>

10 
	~<uni°d.h
>

11 
	~<°dlib.h
>

12 
	~<m©h.h
>

13 
	~<˘y≥.h
>

14 
	~<time.h
>

15 
	~<√töë/ö.h
>

16 #ifde‡
HAVE_IPC_H


17 
	~<sys/ùc.h
>

19 #ifde‡
HAVE_SHM_H


20 
	~<sys/shm.h
>

22 
	~<sys/time.h
>

23 
	~<sys/ty≥s.h
>

25 #ifde‡
_HAVE_STRING_H


26 
	~<°rög.h
>

27 #ñi‡
_HAVE_STRINGS_H


28 
	~<°rögs.h
>

31 #i‚de‡
SYSTEM_IMRC


32 
	#SYSTEM_IMRC
 "/ëc/imrc"

	)

35 
_ImlibB‹dî
 
	tImlibB‹dî
;

36 
_ImlibCﬁ‹
 
	tImlibCﬁ‹
;

37 
_ImlibCﬁ‹Modifõr
 
	tImlibCﬁ‹Modifõr
;

38 
_ImlibImage
 
	tImlibImage
;

39 
_xd©a
 
	tXd©a
;

40 
_ImlibD©a
 
	tImlibD©a
;

41 
_ImlibSaveInfo
 
	tImlibSaveInfo
;

42 
_ImlibInôP¨ams
 
	tImlibInôP¨ams
;

44 
	s_ImlibB‹dî


46 
	mÀ·
, 
	mright
;

47 
	mt›
, 
	mbŸtom
;

50 
	s_ImlibCﬁ‹


52 
	mr
, 
	mg
, 
	mb
;

53 
	mpixñ
;

56 
	s_ImlibCﬁ‹Modifõr


58 
	mgamma
;

59 
	mbrighäess
;

60 
	mc⁄åa°
;

63 
	s_ImlibImage


65 
	mrgb_width
, 
	mrgb_height
;

66 *
	mrgb_d©a
;

67 *
	mÆpha_d©a
;

68 *
	mfûíame
;

70 
	mwidth
, 
	mheight
;

71 
ImlibCﬁ‹
 
	msh≠e_cﬁ‹
;

72 
ImlibB‹dî
 
	mb‹dî
;

73 
Pixm≠
 
	mpixm≠
;

74 
Pixm≠
 
	msh≠e_mask
;

75 
	mˇche
;

76 
ImlibCﬁ‹Modifõr
 
	mmod
, 
	mrmod
, 
	mgmod
, 
	mbmod
;

77 
	mrm≠
[256], 
	mgm≠
[256], 
	mbm≠
[256];

80 
	s_xd©a


82 
Di•œy
 *
	mdi•
;

83 
	ms¸ìn
;

84 
Wödow
 
	mroŸ
;

85 
VisuÆ
 *
	mvisuÆ
;

86 
	mdïth
;

87 
	mªndî_dïth
;

88 
Cﬁ‹m≠
 
	mroŸ_cm≠
;

89 
	mshm
;

90 
	mshmp
;

91 
	mshm_evít
;

92 
XImage
 *
	mœ°_xim
;

93 
XImage
 *
	mœ°_sxim
;

94 #ifde‡
HAVE_XSHM_H


95 
XShmSegmítInfo
 
	mœ°_shmöfo
;

96 
XShmSegmítInfo
 
	mœ°_sshmöfo
;

98 
Wödow
 
	mba£_wödow
;

99 
	mbyã_‹dî
, 
	mbô_‹dî
;

102 
	s_ImlibD©a


104 
	mnum_cﬁ‹s
;

105 
ImlibCﬁ‹
 *
	m∑Àâe
;

106 
ImlibCﬁ‹
 *
	m∑Àâe_‹ig
;

107 *
	mÁ°_rgb
;

108 *
	mÁ°_îr
;

109 *
	mÁ°_îg
;

110 *
	mÁ°_îb
;

111 
	mªndî_ty≥
;

112 
	mmax_shm
;

113 
Xd©a
 
	mx
;

114 
	mbyã_‹dî
;

115 
	s_ˇche


117 
	m⁄_image
;

118 
	msize_image
;

119 
	mnum_image
;

120 
	mu£d_image
;

121 
image_ˇche
 *
	mimage
;

122 
	m⁄_pixm≠
;

123 
	msize_pixm≠
;

124 
	mnum_pixm≠
;

125 
	mu£d_pixm≠
;

126 
pixm≠_ˇche
 *
	mpixm≠
;

128 
	mˇche
;

129 
	mÁ°ªnd
;

130 
	mhiq
;

131 
ImlibCﬁ‹Modifõr
 
	mmod
, 
	mrmod
, 
	mgmod
, 
	mbmod
;

132 
	mrm≠
[256], 
	mgm≠
[256], 
	mbm≠
[256];

133 
	mÁŒback
;

134 
	m‹dîed_dôhî
;

137 
	s_ImlibSaveInfo


139 
	mquÆôy
;

140 
	msˇlög
;

141 
	mxju°ifiˇti⁄
;

142 
	myju°ifiˇti⁄
;

143 
	m∑ge_size
;

144 
	mcﬁ‹
;

147 
	s_ImlibInôP¨ams


149 
	mÊags
;

150 
	mvisuÆid
;

151 *
	m∑Àâefûe
;

152 
	msh¨edmem
;

153 
	msh¨edpixm≠s
;

154 
	m∑Àâeovîride
;

155 
	mªm≠
;

156 
	mÁ°ªndî
;

157 
	mhiquÆôy
;

158 
	mdôhî
;

159 
	mimageˇchesize
;

160 
	mpixm≠ˇchesize
;

161 
Cﬁ‹m≠
 
	mcm≠
;

164 
	#PARAMS_VISUALID
 1<<0

	)

165 
	#PARAMS_PALETTEFILE
 1<<1

	)

166 
	#PARAMS_SHAREDMEM
 1<<2

	)

167 
	#PARAMS_SHAREDPIXMAPS
 1<<3

	)

168 
	#PARAMS_PALETTEOVERRIDE
 1<<4

	)

169 
	#PARAMS_REMAP
 1<<5

	)

170 
	#PARAMS_FASTRENDER
 1<<6

	)

171 
	#PARAMS_HIQUALITY
 1<<7

	)

172 
	#PARAMS_DITHER
 1<<8

	)

173 
	#PARAMS_IMAGECACHESIZE
 1<<9

	)

174 
	#PARAMS_PIXMAPCACHESIZE
 1<<10

	)

175 
	#PARAMS_COLORMAP
 1<<11

	)

177 
	#PAGE_SIZE_EXECUTIVE
 0

	)

178 
	#PAGE_SIZE_LETTER
 1

	)

179 
	#PAGE_SIZE_LEGAL
 2

	)

180 
	#PAGE_SIZE_A4
 3

	)

181 
	#PAGE_SIZE_A3
 4

	)

182 
	#PAGE_SIZE_A5
 5

	)

183 
	#PAGE_SIZE_FOLIO
 6

	)

185 
	#RT_PLAIN_PALETTE
 0

	)

186 
	#RT_PLAIN_PALETTE_FAST
 1

	)

187 
	#RT_DITHER_PALETTE
 2

	)

188 
	#RT_DITHER_PALETTE_FAST
 3

	)

189 
	#RT_PLAIN_TRUECOL
 4

	)

191 
	#RT_DITHER_TRUECOL
 5

	)

	@/usr/include/X11/X.h

7 #i‚de‡
X_H


8 
	#X_H


	)

58 
	#X_PROTOCOL
 11

	)

59 
	#X_PROTOCOL_REVISION
 0

	)

68 #i‚de‡
_XSERVER64


69 #i‚de‡
_XTYPEDEF_XID


70 
	#_XTYPEDEF_XID


	)

71 
	tXID
;

73 #i‚de‡
_XTYPEDEF_MASK


74 
	#_XTYPEDEF_MASK


	)

75 
	tMask
;

77 #i‚de‡
_XTYPEDEF_ATOM


78 
	#_XTYPEDEF_ATOM


	)

79 
	tAtom
;

81 
	tVisuÆID
;

82 
	tTime
;

84 
	~<X11/Xmd.h
>

85 #i‚de‡
_XTYPEDEF_XID


86 
	#_XTYPEDEF_XID


	)

87 
CARD32
 
	tXID
;

89 #i‚de‡
_XTYPEDEF_MASK


90 
	#_XTYPEDEF_MASK


	)

91 
CARD32
 
	tMask
;

93 #i‚de‡
_XTYPEDEF_ATOM


94 
	#_XTYPEDEF_ATOM


	)

95 
CARD32
 
	tAtom
;

97 
CARD32
 
	tVisuÆID
;

98 
CARD32
 
	tTime
;

101 
XID
 
	tWödow
;

102 
XID
 
	tDøwabÀ
;

103 #i‚de‡
_XTYPEDEF_FONT


104 
	#_XTYPEDEF_FONT


	)

105 
XID
 
	tF⁄t
;

107 
XID
 
	tPixm≠
;

108 
XID
 
	tCurs‹
;

109 
XID
 
	tCﬁ‹m≠
;

110 
XID
 
	tGC⁄ãxt
;

111 
XID
 
	tKeySym
;

113 
	tKeyCode
;

119 #i‚de‡
N⁄e


120 
	#N⁄e
 0L

	)

123 
	#P¨ítRñ©ive
 1L

	)

126 
	#C›yFromP¨ít
 0L

	)

131 
	#PoöãrWödow
 0L

	)

132 
	#I≈utFocus
 1L

	)

134 
	#PoöãrRoŸ
 1L

	)

136 
	#AnyPr›îtyTy≥
 0L

	)

138 
	#AnyKey
 0L

	)

140 
	#AnyBuâ⁄
 0L

	)

142 
	#AŒTemp‹¨y
 0L

	)

144 
	#CuºítTime
 0L

	)

146 
	#NoSymbﬁ
 0L

	)

155 
	#NoEvítMask
 0L

	)

156 
	#KeyPªssMask
 (1L<<0)

	)

157 
	#KeyRñó£Mask
 (1L<<1)

	)

158 
	#Buâ⁄PªssMask
 (1L<<2)

	)

159 
	#Buâ⁄Rñó£Mask
 (1L<<3)

	)

160 
	#E¡îWödowMask
 (1L<<4)

	)

161 
	#LóveWödowMask
 (1L<<5)

	)

162 
	#PoöãrMŸi⁄Mask
 (1L<<6)

	)

163 
	#PoöãrMŸi⁄HötMask
 (1L<<7)

	)

164 
	#Buâ⁄1MŸi⁄Mask
 (1L<<8)

	)

165 
	#Buâ⁄2MŸi⁄Mask
 (1L<<9)

	)

166 
	#Buâ⁄3MŸi⁄Mask
 (1L<<10)

	)

167 
	#Buâ⁄4MŸi⁄Mask
 (1L<<11)

	)

168 
	#Buâ⁄5MŸi⁄Mask
 (1L<<12)

	)

169 
	#Buâ⁄MŸi⁄Mask
 (1L<<13)

	)

170 
	#Keym≠SèãMask
 (1L<<14)

	)

171 
	#ExposuªMask
 (1L<<15)

	)

172 
	#VisibûôyCh™geMask
 (1L<<16)

	)

173 
	#Såu˘uªNŸifyMask
 (1L<<17)

	)

174 
	#ResizeRedúe˘Mask
 (1L<<18)

	)

175 
	#Sub°ru˘uªNŸifyMask
 (1L<<19)

	)

176 
	#Sub°ru˘uªRedúe˘Mask
 (1L<<20)

	)

177 
	#FocusCh™geMask
 (1L<<21)

	)

178 
	#Pr›îtyCh™geMask
 (1L<<22)

	)

179 
	#Cﬁ‹m≠Ch™geMask
 (1L<<23)

	)

180 
	#Ow√rGøbBuâ⁄Mask
 (1L<<24)

	)

186 
	#KeyPªss
 2

	)

187 
	#KeyRñó£
 3

	)

188 
	#Buâ⁄Pªss
 4

	)

189 
	#Buâ⁄Rñó£
 5

	)

190 
	#MŸi⁄NŸify
 6

	)

191 
	#E¡îNŸify
 7

	)

192 
	#LóveNŸify
 8

	)

193 
	#FocusIn
 9

	)

194 
	#FocusOut
 10

	)

195 
	#Keym≠NŸify
 11

	)

196 
	#Expo£
 12

	)

197 
	#GøphicsExpo£
 13

	)

198 
	#NoExpo£
 14

	)

199 
	#VisibûôyNŸify
 15

	)

200 
	#Cª©eNŸify
 16

	)

201 
	#De°royNŸify
 17

	)

202 
	#Unm≠NŸify
 18

	)

203 
	#M≠NŸify
 19

	)

204 
	#M≠Reque°
 20

	)

205 
	#Rï¨ítNŸify
 21

	)

206 
	#C⁄figuªNŸify
 22

	)

207 
	#C⁄figuªReque°
 23

	)

208 
	#GøvôyNŸify
 24

	)

209 
	#ResizeReque°
 25

	)

210 
	#CúcuœãNŸify
 26

	)

211 
	#CúcuœãReque°
 27

	)

212 
	#Pr›îtyNŸify
 28

	)

213 
	#Sñe˘i⁄CÀ¨
 29

	)

214 
	#Sñe˘i⁄Reque°
 30

	)

215 
	#Sñe˘i⁄NŸify
 31

	)

216 
	#Cﬁ‹m≠NŸify
 32

	)

217 
	#Clõ¡Mesßge
 33

	)

218 
	#M≠pögNŸify
 34

	)

219 
	#LASTEvít
 35

	)

225 
	#Shi·Mask
 (1<<0)

	)

226 
	#LockMask
 (1<<1)

	)

227 
	#C⁄åﬁMask
 (1<<2)

	)

228 
	#Mod1Mask
 (1<<3)

	)

229 
	#Mod2Mask
 (1<<4)

	)

230 
	#Mod3Mask
 (1<<5)

	)

231 
	#Mod4Mask
 (1<<6)

	)

232 
	#Mod5Mask
 (1<<7)

	)

237 
	#Shi·M≠Index
 0

	)

238 
	#LockM≠Index
 1

	)

239 
	#C⁄åﬁM≠Index
 2

	)

240 
	#Mod1M≠Index
 3

	)

241 
	#Mod2M≠Index
 4

	)

242 
	#Mod3M≠Index
 5

	)

243 
	#Mod4M≠Index
 6

	)

244 
	#Mod5M≠Index
 7

	)

250 
	#Buâ⁄1Mask
 (1<<8)

	)

251 
	#Buâ⁄2Mask
 (1<<9)

	)

252 
	#Buâ⁄3Mask
 (1<<10)

	)

253 
	#Buâ⁄4Mask
 (1<<11)

	)

254 
	#Buâ⁄5Mask
 (1<<12)

	)

256 
	#AnyModifõr
 (1<<15Ë

	)

263 
	#Buâ⁄1
 1

	)

264 
	#Buâ⁄2
 2

	)

265 
	#Buâ⁄3
 3

	)

266 
	#Buâ⁄4
 4

	)

267 
	#Buâ⁄5
 5

	)

271 
	#NŸifyN‹mÆ
 0

	)

272 
	#NŸifyGøb
 1

	)

273 
	#NŸifyUngøb
 2

	)

274 
	#NŸifyWhûeGøbbed
 3

	)

276 
	#NŸifyHöt
 1

	)

280 
	#NŸifyAn˚°‹
 0

	)

281 
	#NŸifyVútuÆ
 1

	)

282 
	#NŸifyIn„ri‹
 2

	)

283 
	#NŸifyN⁄löór
 3

	)

284 
	#NŸifyN⁄löórVútuÆ
 4

	)

285 
	#NŸifyPoöãr
 5

	)

286 
	#NŸifyPoöãrRoŸ
 6

	)

287 
	#NŸifyDëaûN⁄e
 7

	)

291 
	#VisibûôyUnobscuªd
 0

	)

292 
	#VisibûôyP¨tüŒyObscuªd
 1

	)

293 
	#VisibûôyFuŒyObscuªd
 2

	)

297 
	#Pœ˚OnT›
 0

	)

298 
	#Pœ˚OnBŸtom
 1

	)

302 
	#FamûyI¡î√t
 0

	)

303 
	#FamûyDEC√t
 1

	)

304 
	#FamûyChaos
 2

	)

305 
	#FamûyI¡î√t6
 6

	)

308 
	#FamûySîvîI¡î¥ëed
 5

	)

312 
	#Pr›îtyNewVÆue
 0

	)

313 
	#Pr›îtyDñëe
 1

	)

317 
	#Cﬁ‹m≠Unö°ÆÀd
 0

	)

318 
	#Cﬁ‹m≠In°ÆÀd
 1

	)

322 
	#GøbModeSync
 0

	)

323 
	#GøbModeAsync
 1

	)

327 
	#GøbSuc˚ss
 0

	)

328 
	#AÃódyGøbbed
 1

	)

329 
	#GøbInvÆidTime
 2

	)

330 
	#GøbNŸVõwabÀ
 3

	)

331 
	#GøbFrozí
 4

	)

335 
	#AsyncPoöãr
 0

	)

336 
	#SyncPoöãr
 1

	)

337 
	#RïœyPoöãr
 2

	)

338 
	#AsyncKeybﬂrd
 3

	)

339 
	#SyncKeybﬂrd
 4

	)

340 
	#RïœyKeybﬂrd
 5

	)

341 
	#AsyncBŸh
 6

	)

342 
	#SyncBŸh
 7

	)

346 
	#RevîtToN⁄e
 ()
N⁄e


	)

347 
	#RevîtToPoöãrRoŸ
 ()
PoöãrRoŸ


	)

348 
	#RevîtToP¨ít
 2

	)

354 
	#Suc˚ss
 0

	)

355 
	#BadReque°
 1

	)

356 
	#BadVÆue
 2

	)

357 
	#BadWödow
 3

	)

358 
	#BadPixm≠
 4

	)

359 
	#BadAtom
 5

	)

360 
	#BadCurs‹
 6

	)

361 
	#BadF⁄t
 7

	)

362 
	#BadM©ch
 8

	)

363 
	#BadDøwabÀ
 9

	)

364 
	#BadAc˚ss
 10

	)

373 
	#BadAŒoc
 11

	)

374 
	#BadCﬁ‹
 12

	)

375 
	#BadGC
 13

	)

376 
	#BadIDChoi˚
 14

	)

377 
	#BadName
 15

	)

378 
	#BadLígth
 16

	)

379 
	#BadIm∂emíèti⁄
 17

	)

381 
	#Fú°Exãnsi⁄Eº‹
 128

	)

382 
	#La°Exãnsi⁄Eº‹
 255

	)

391 
	#I≈utOuçut
 1

	)

392 
	#I≈utO∆y
 2

	)

396 
	#CWBackPixm≠
 (1L<<0)

	)

397 
	#CWBackPixñ
 (1L<<1)

	)

398 
	#CWB‹dîPixm≠
 (1L<<2)

	)

399 
	#CWB‹dîPixñ
 (1L<<3)

	)

400 
	#CWBôGøvôy
 (1L<<4)

	)

401 
	#CWWöGøvôy
 (1L<<5)

	)

402 
	#CWBackögSt‹e
 (1L<<6)

	)

403 
	#CWBackögPœ√s
 (1L<<7)

	)

404 
	#CWBackögPixñ
 (1L<<8)

	)

405 
	#CWOvîrideRedúe˘
 (1L<<9)

	)

406 
	#CWSaveUndî
 (1L<<10)

	)

407 
	#CWEvítMask
 (1L<<11)

	)

408 
	#CWD⁄tPr›ag©e
 (1L<<12)

	)

409 
	#CWCﬁ‹m≠
 (1L<<13)

	)

410 
	#CWCurs‹
 (1L<<14)

	)

414 
	#CWX
 (1<<0)

	)

415 
	#CWY
 (1<<1)

	)

416 
	#CWWidth
 (1<<2)

	)

417 
	#CWHeight
 (1<<3)

	)

418 
	#CWB‹dîWidth
 (1<<4)

	)

419 
	#CWSiblög
 (1<<5)

	)

420 
	#CWSèckMode
 (1<<6)

	)

425 
	#F‹gëGøvôy
 0

	)

426 
	#N‹thWe°Gøvôy
 1

	)

427 
	#N‹thGøvôy
 2

	)

428 
	#N‹thEa°Gøvôy
 3

	)

429 
	#We°Gøvôy
 4

	)

430 
	#CíãrGøvôy
 5

	)

431 
	#Ea°Gøvôy
 6

	)

432 
	#SouthWe°Gøvôy
 7

	)

433 
	#SouthGøvôy
 8

	)

434 
	#SouthEa°Gøvôy
 9

	)

435 
	#SèticGøvôy
 10

	)

439 
	#Unm≠Gøvôy
 0

	)

443 
	#NŸU£ful
 0

	)

444 
	#WhíM≠≥d
 1

	)

445 
	#Always
 2

	)

449 
	#IsUnm≠≥d
 0

	)

450 
	#IsUnvõwabÀ
 1

	)

451 
	#IsVõwabÀ
 2

	)

455 
	#SëModeIn£π
 0

	)

456 
	#SëModeDñëe
 1

	)

460 
	#De°royAŒ
 0

	)

461 
	#RëaöPîm™ít
 1

	)

462 
	#RëaöTemp‹¨y
 2

	)

466 
	#Above
 0

	)

467 
	#Bñow
 1

	)

468 
	#T›If
 2

	)

469 
	#BŸtomIf
 3

	)

470 
	#Oµosôe
 4

	)

474 
	#Rai£Lowe°
 0

	)

475 
	#LowîHighe°
 1

	)

479 
	#Pr›ModeRïœ˚
 0

	)

480 
	#Pr›ModePª≥nd
 1

	)

481 
	#Pr›ModeAµíd
 2

	)

489 
	#GX˛ór
 0x0

	)

490 
	#GX™d
 0x1

	)

491 
	#GX™dRevî£
 0x2

	)

492 
	#GXc›y
 0x3

	)

493 
	#GX™dInvîãd
 0x4

	)

494 
	#GXno›
 0x5

	)

495 
	#GXx‹
 0x6

	)

496 
	#GX‹
 0x7

	)

497 
	#GXn‹
 0x8

	)

498 
	#GXequiv
 0x9

	)

499 
	#GXövît
 0x®

	)

500 
	#GX‹Revî£
 0xb

	)

501 
	#GXc›yInvîãd
 0x¯

	)

502 
	#GX‹Invîãd
 0xd

	)

503 
	#GX«nd
 0xê

	)

504 
	#GX£t
 0x‡

	)

508 
	#LöeSﬁid
 0

	)

509 
	#LöeOnOffDash
 1

	)

510 
	#LöeDoubÀDash
 2

	)

514 
	#C≠NŸLa°
 0

	)

515 
	#C≠Buâ
 1

	)

516 
	#C≠Round
 2

	)

517 
	#C≠Proje˘ög
 3

	)

521 
	#JoöMôî
 0

	)

522 
	#JoöRound
 1

	)

523 
	#JoöBevñ
 2

	)

527 
	#FûlSﬁid
 0

	)

528 
	#FûlTûed
 1

	)

529 
	#FûlStù∂ed
 2

	)

530 
	#FûlO∑queStù∂ed
 3

	)

534 
	#EvíOddRuÀ
 0

	)

535 
	#WödögRuÀ
 1

	)

539 
	#ClùByChûdªn
 0

	)

540 
	#In˛udeIn„ri‹s
 1

	)

544 
	#Uns‹ãd
 0

	)

545 
	#YS‹ãd
 1

	)

546 
	#YXS‹ãd
 2

	)

547 
	#YXB™ded
 3

	)

551 
	#Co‹dModeOrigö
 0

	)

552 
	#Co‹dModePªvious
 1

	)

556 
	#Com∂ex
 0

	)

557 
	#N⁄c⁄vex
 1

	)

558 
	#C⁄vex
 2

	)

562 
	#ArcCh‹d
 0

	)

563 
	#ArcPõSli˚
 1

	)

568 
	#GCFun˘i⁄
 (1L<<0)

	)

569 
	#GCPœ√Mask
 (1L<<1)

	)

570 
	#GCF‹eground
 (1L<<2)

	)

571 
	#GCBackground
 (1L<<3)

	)

572 
	#GCLöeWidth
 (1L<<4)

	)

573 
	#GCLöeStyÀ
 (1L<<5)

	)

574 
	#GCC≠StyÀ
 (1L<<6)

	)

575 
	#GCJoöStyÀ
 (1L<<7)

	)

576 
	#GCFûlStyÀ
 (1L<<8)

	)

577 
	#GCFûlRuÀ
 (1L<<9)

	)

578 
	#GCTûe
 (1L<<10)

	)

579 
	#GCStù∂e
 (1L<<11)

	)

580 
	#GCTûeStùXOrigö
 (1L<<12)

	)

581 
	#GCTûeStùYOrigö
 (1L<<13)

	)

582 
	#GCF⁄t
 (1L<<14)

	)

583 
	#GCSubwödowMode
 (1L<<15)

	)

584 
	#GCGøphicsExposuªs
 (1L<<16)

	)

585 
	#GCClùXOrigö
 (1L<<17)

	)

586 
	#GCClùYOrigö
 (1L<<18)

	)

587 
	#GCClùMask
 (1L<<19)

	)

588 
	#GCDashOff£t
 (1L<<20)

	)

589 
	#GCDashLi°
 (1L<<21)

	)

590 
	#GCArcMode
 (1L<<22)

	)

592 
	#GCLa°Bô
 22

	)

599 
	#F⁄tLe·ToRight
 0

	)

600 
	#F⁄tRightToLe·
 1

	)

602 
	#F⁄tCh™ge
 255

	)

610 
	#XYBôm≠
 0

	)

611 
	#XYPixm≠
 1

	)

612 
	#ZPixm≠
 2

	)

620 
	#AŒocN⁄e
 0

	)

621 
	#AŒocAŒ
 1

	)

626 
	#DoRed
 (1<<0)

	)

627 
	#DoGªí
 (1<<1)

	)

628 
	#DoBlue
 (1<<2)

	)

636 
	#Curs‹Sh≠e
 0

	)

637 
	#TûeSh≠e
 1

	)

638 
	#Stù∂eSh≠e
 2

	)

644 
	#AutoRïótModeOff
 0

	)

645 
	#AutoRïótModeOn
 1

	)

646 
	#AutoRïótModeDeÁu…
 2

	)

648 
	#LedModeOff
 0

	)

649 
	#LedModeOn
 1

	)

653 
	#KBKeyClickPî˚¡
 (1L<<0)

	)

654 
	#KBBñlPî˚¡
 (1L<<1)

	)

655 
	#KBBñlPôch
 (1L<<2)

	)

656 
	#KBBñlDuøti⁄
 (1L<<3)

	)

657 
	#KBLed
 (1L<<4)

	)

658 
	#KBLedMode
 (1L<<5)

	)

659 
	#KBKey
 (1L<<6)

	)

660 
	#KBAutoRïótMode
 (1L<<7)

	)

662 
	#M≠pögSuc˚ss
 0

	)

663 
	#M≠pögBusy
 1

	)

664 
	#M≠pögFaûed
 2

	)

666 
	#M≠pögModifõr
 0

	)

667 
	#M≠pögKeybﬂrd
 1

	)

668 
	#M≠pögPoöãr
 2

	)

674 
	#D⁄tPª„rBœnkög
 0

	)

675 
	#Pª„rBœnkög
 1

	)

676 
	#DeÁu…Bœnkög
 2

	)

678 
	#DißbÀS¸ìnSavî
 0

	)

679 
	#DißbÀS¸ìnI¡îvÆ
 0

	)

681 
	#D⁄tAŒowExposuªs
 0

	)

682 
	#AŒowExposuªs
 1

	)

683 
	#DeÁu…Exposuªs
 2

	)

687 
	#S¸ìnSavîRe£t
 0

	)

688 
	#S¸ìnSavîA˘ive
 1

	)

696 
	#Ho°In£π
 0

	)

697 
	#Ho°Dñëe
 1

	)

701 
	#E«bÀAc˚ss
 1

	)

702 
	#DißbÀAc˚ss
 0

	)

708 
	#SèticGøy
 0

	)

709 
	#GøySˇÀ
 1

	)

710 
	#SèticCﬁ‹
 2

	)

711 
	#P£udoCﬁ‹
 3

	)

712 
	#TrueCﬁ‹
 4

	)

713 
	#Dúe˘Cﬁ‹
 5

	)

718 
	#LSBFú°
 0

	)

719 
	#MSBFú°
 1

	)

	@/usr/include/X11/Xfuncproto.h

32 #i‚de‡
_XFUNCPROTO_H_


33 
	#_XFUNCPROTO_H_


	)

35 #i‚de‡
NìdFun˘i⁄PrŸŸy≥s


36 
	#NìdFun˘i⁄PrŸŸy≥s
 1

	)

39 #i‚de‡
NìdV¨¨gsPrŸŸy≥s


40 
	#NìdV¨¨gsPrŸŸy≥s
 1

	)

43 #i‡
NìdFun˘i⁄PrŸŸy≥s


45 #i‚de‡
NìdNe°edPrŸŸy≥s


46 
	#NìdNe°edPrŸŸy≥s
 1

	)

49 #i‚de‡
_Xc⁄°


50 
	#_Xc⁄°
 c⁄°

	)

54 #i‚de‡
NARROWPROTO


55 
	#NARROWPROTO


	)

57 #i‚de‡
FUNCPROTO


58 
	#FUNCPROTO
 15

	)

61 #i‚de‡
NìdWidePrŸŸy≥s


62 #ifde‡
NARROWPROTO


63 
	#NìdWidePrŸŸy≥s
 0

	)

65 
	#NìdWidePrŸŸy≥s
 1

	)

71 #i‚de‡
_XFUNCPROTOBEGIN


72 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

73 
	#_XFUNCPROTOBEGIN
 "C" {

	)

74 
	#_XFUNCPROTOEND
 }

	)

76 
	#_XFUNCPROTOBEGIN


	)

77 
	#_XFUNCPROTOEND


	)

81 #i‡
deföed
(
__GNUC__
) && (__GNUC__ >= 4)

82 
	#_X_SENTINEL
(
x
Ë
	`__©åibuã__
 ((
	`__£¡öñ__
(x)))

	)

83 
	#_X_ATTRIBUTE_PRINTF
(
x
,
y
Ë
	`__©åibuã__
((
	`__f‹m©__
(
__¥ötf__
,x,y)))

	)

85 
	#_X_SENTINEL
(
x
)

	)

86 
	#_X_ATTRIBUTE_PRINTF
(
x
,
y
)

	)

89 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 303)

90 
	#_X_EXPORT
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

91 
	#_X_HIDDEN
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

92 
	#_X_INTERNAL
 
	`__©åibuã__
((
	`visibûôy
("öã∫Æ")))

	)

93 
	#_X_LIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

94 
	#_X_UNLIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

95 
	#_X_INLINE
 
ölöe


	)

96 #ñi‡
deföed
(
__SUNPRO_C
) && (__SUNPRO_C >= 0x550)

97 
	#_X_EXPORT
 
__globÆ


	)

98 
	#_X_HIDDEN
 
__hiddí


	)

99 
	#_X_INTERNAL
 
__hiddí


	)

100 
	#_X_LIKELY
(
x
Ë(x)

	)

101 
	#_X_UNLIKELY
(
x
Ë(x)

	)

102 
	#_X_INLINE
 
ölöe


	)

104 
	#_X_EXPORT


	)

105 
	#_X_HIDDEN


	)

106 
	#_X_INTERNAL


	)

107 
	#_X_LIKELY
(
x
Ë(x)

	)

108 
	#_X_UNLIKELY
(
x
Ë(x)

	)

109 
	#_X_INLINE


	)

112 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 301)

113 
	#_X_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

115 
	#_X_DEPRECATED


	)

	@/usr/include/X11/Xosdefs.h

31 #i‚de‡
_XOSDEFS_H_


32 
	#_XOSDEFS_H_


	)

43 #ifde‡
NOSTDHDRS


44 
	#X_NOT_POSIX


	)

45 
	#X_NOT_STDC_ENV


	)

48 #ifde‡
s⁄y


49 #i‡!
deföed
(
SYSTYPE_SYSV
Ë&& !deföed(
_SYSTYPE_SYSV
)

50 
	#X_NOT_POSIX


	)

54 #ifde‡
UTEK


55 
	#X_NOT_POSIX


	)

56 
	#X_NOT_STDC_ENV


	)

59 #ifde‡
vax


60 #i‚de‡
u…rix


61 
	#X_NOT_POSIX


	)

62 
	#X_NOT_STDC_ENV


	)

66 #ifde‡
lu«


67 
	#X_NOT_POSIX


	)

68 
	#X_NOT_STDC_ENV


	)

71 #ifde‡
Mùs


72 
	#X_NOT_POSIX


	)

73 
	#X_NOT_STDC_ENV


	)

76 #ifde‡
USL


77 #ifde‡
SYSV


78 
	#X_NOT_POSIX


	)

79 
	#X_NOT_STDC_ENV


	)

83 #ifde‡
_SCO_DS


84 #i‚de‡
__SCO__


85 
	#__SCO__


	)

89 #ifde‡
i386


90 #ifde‡
SYSV


91 #i‡!
deföed
(
ISC
Ë&& !deföed(
__SCO__
Ë&& !deföed(
_SEQUENT_
) && \

92 !
deföed
(
__UNIXWARE__
Ë&& !
	$deföed
(
sun
)

93 #i‡!
	`deföed
(
_POSIX_SOURCE
)

94 
	#X_NOT_POSIX


	)

96 
	#X_NOT_STDC_ENV


	)

101 #ifde‡
MOTOROLA


102 #ifde‡
SYSV


103 
	#X_NOT_STDC_ENV


	)

107 #ifde‡
sun


111 #i‡
	`deföed
(
__SVR4
Ë&& !deföed(
SVR4
)

112 
	#SVR4
 1

	)

114 #ifde‡
SVR4


116 
	#X_POSIX_C_SOURCE
 199300L

	)

120 #ifde‡
WIN32


121 #i‚de‡
_POSIX_


122 
	#X_NOT_POSIX


	)

126 #i‡
	`deföed
(
√c_ews_svr2
Ë|| deföed(
SX
Ë|| deföed(
PC_UX
)

127 
	#X_NOT_POSIX


	)

128 
	#X_NOT_STDC_ENV


	)

131 #ifde‡
__UNIXOS2__


132 
	#USGISH


	)

133 
	#NULL_NOT_ZERO


	)

136 #ifde‡
__DARWIN__


137 
	#NULL_NOT_ZERO


	)

140 #ifde‡
__GNU__


141 #i‚de‡
PATH_MAX


142 
	#PATH_MAX
 4096

	)

144 #i‚de‡
MAXPATHLEN


145 
	#MAXPATHLEN
 4096

	)

149 #i‡
	`deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

150 #i‚de‡
PATH_MAX


151 
	#PATH_MAX
 1024

	)

153 #i‚de‡
MAXPATHLEN


154 
	#MAXPATHLEN
 1024

	)

158 #i‡
	`deföed
(
__O≥nBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__FªeBSD__
) \

159 || 
	`deföed
(
__D¨wö__
Ë|| 
	$deföed
(
__Døg⁄Fly__
)

160 #i‚de‡
CSRG_BASED


161 
	#CSRG_BASED


	)

	@/usr/include/X11/keysym.h

52 
	#XK_MISCELLANY


	)

53 
	#XK_XKB_KEYS


	)

54 
	#XK_LATIN1


	)

55 
	#XK_LATIN2


	)

56 
	#XK_LATIN3


	)

57 
	#XK_LATIN4


	)

58 
	#XK_LATIN8


	)

59 
	#XK_LATIN9


	)

60 
	#XK_CAUCASUS


	)

61 
	#XK_GREEK


	)

62 
	#XK_KATAKANA


	)

63 
	#XK_ARABIC


	)

64 
	#XK_CYRILLIC


	)

65 
	#XK_HEBREW


	)

66 
	#XK_THAI


	)

67 
	#XK_KOREAN


	)

68 
	#XK_ARMENIAN


	)

69 
	#XK_GEORGIAN


	)

70 
	#XK_VIETNAMESE


	)

71 
	#XK_CURRENCY


	)

72 
	#XK_MATHEMATICAL


	)

73 
	#XK_BRAILLE


	)

75 
	~<X11/keysymdef.h
>

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/öt-Œ64.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	tumode_t
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

29 
	#__bsw≠_c⁄°™t_16
(
x
) \

30 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

32 #ifde‡
__GNUC__


33 #i‡
__GNUC__
 >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

52 
__ölöe
 

53 
	$__bsw≠_16
 (
__bsx
)

55  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

56 
	}
}

60 
	#__bsw≠_c⁄°™t_32
(
x
) \

61 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

62 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

64 #ifde‡
__GNUC__


65 #i‡
__GNUC__
 >= 2

68 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

69 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

70 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

71 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


72 
	#__bsw≠_32
(
x
) \

73 (
__exãnsi⁄__
 \

74 ({ 
__v
, 
__x
 = (
x
); \

75 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

76 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

78 
	`__asm__
 ("rorw $8, %w0;" \

81 : "Ù" (
__v
) \

82 : "0" (
__x
) \

84 
__v
; }))

	)

86 
	#__bsw≠_32
(
x
) \

87 (
__exãnsi⁄__
 \

88 ({ 
__v
, 
__x
 = (
x
); \

89 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

90 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

92 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

93 
__v
; }))

	)

96 
	#__bsw≠_32
(
x
) \

97 (
__exãnsi⁄__
 \

98 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

101 
__ölöe
 

102 
	$__bsw≠_32
 (
__bsx
)

104  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

105 
	}
}

109 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

111 
	#__bsw≠_c⁄°™t_64
(
x
) \

112 ((((
x
) & 0xff00000000000000ull) >> 56) \

113 | (((
x
) & 0x00ff000000000000ull) >> 40) \

114 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

115 | (((
x
) & 0x000000ff00000000ull) >> 8) \

116 | (((
x
) & 0x00000000ff000000ull) << 8) \

117 | (((
x
) & 0x0000000000ff0000ull) << 24) \

118 | (((
x
) & 0x000000000000ff00ull) << 40) \

119 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

513 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

515 
	m_CS_GNU_LIBC_VERSION
,

516 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

517 
	m_CS_GNU_LIBPTHREAD_VERSION
,

518 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

520 
	m_CS_LFS_CFLAGS
 = 1000,

521 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

522 
	m_CS_LFS_LDFLAGS
,

523 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

524 
	m_CS_LFS_LIBS
,

525 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

526 
	m_CS_LFS_LINTFLAGS
,

527 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

528 
	m_CS_LFS64_CFLAGS
,

529 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

530 
	m_CS_LFS64_LDFLAGS
,

531 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

532 
	m_CS_LFS64_LIBS
,

533 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

534 
	m_CS_LFS64_LINTFLAGS
,

535 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

537 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

538 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

539 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

540 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

541 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

542 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

543 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

544 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

545 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

546 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

547 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

548 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

549 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

550 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

551 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

552 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

553 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

554 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

555 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

556 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

557 
	m_CS_XBS5_LP64_OFF64_LIBS
,

558 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

559 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

560 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

561 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

562 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

563 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

564 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

565 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

566 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

567 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

568 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

570 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

571 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

572 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

573 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

574 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

575 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

576 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

577 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

578 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

579 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

580 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

581 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

582 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

583 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

584 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

585 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

586 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

587 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

588 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

589 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

590 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

591 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

592 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

593 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

594 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

595 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

596 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

597 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

598 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

599 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

600 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


601 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


41 
	#_POSIX_V6_ILP32_OFF32
 1

	)

42 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

43 
	#_XBS5_ILP32_OFF32
 1

	)

44 
	#_XBS5_ILP32_OFFBIG
 1

	)

57 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

58 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

59 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

60 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

61 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

62 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	#O_LARGEFILE
 0100000

	)

69 
	#F_DUPFD
 0

	)

70 
	#F_GETFD
 1

	)

71 
	#F_SETFD
 2

	)

72 
	#F_GETFL
 3

	)

73 
	#F_SETFL
 4

	)

74 #i‚de‡
__USE_FILE_OFFSET64


75 
	#F_GETLK
 5

	)

76 
	#F_SETLK
 6

	)

77 
	#F_SETLKW
 7

	)

79 
	#F_GETLK
 
F_GETLK64


	)

80 
	#F_SETLK
 
F_SETLK64


	)

81 
	#F_SETLKW
 
F_SETLKW64


	)

83 
	#F_GETLK64
 12

	)

84 
	#F_SETLK64
 13

	)

85 
	#F_SETLKW64
 14

	)

87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


88 
	#F_SETOWN
 8

	)

89 
	#F_GETOWN
 9

	)

92 #ifde‡
__USE_GNU


93 
	#F_SETSIG
 10

	)

94 
	#F_GETSIG
 11

	)

97 #ifde‡
__USE_GNU


98 
	#F_SETLEASE
 1024

	)

99 
	#F_GETLEASE
 1025

	)

100 
	#F_NOTIFY
 1026

	)

101 
	#F_DUPFD_CLOEXEC
 1030

	)

106 
	#FD_CLOEXEC
 1

	)

109 
	#F_RDLCK
 0

	)

110 
	#F_WRLCK
 1

	)

111 
	#F_UNLCK
 2

	)

114 
	#F_EXLCK
 4

	)

115 
	#F_SHLCK
 8

	)

117 #ifde‡
__USE_BSD


119 
	#LOCK_SH
 1

	)

120 
	#LOCK_EX
 2

	)

121 
	#LOCK_NB
 4

	)

123 
	#LOCK_UN
 8

	)

126 #ifde‡
__USE_GNU


127 
	#LOCK_MAND
 32

	)

128 
	#LOCK_READ
 64

	)

129 
	#LOCK_WRITE
 128

	)

130 
	#LOCK_RW
 192

	)

133 #ifde‡
__USE_GNU


135 
	#DN_ACCESS
 0x00000001

	)

136 
	#DN_MODIFY
 0x00000002

	)

137 
	#DN_CREATE
 0x00000004

	)

138 
	#DN_DELETE
 0x00000008

	)

139 
	#DN_RENAME
 0x00000010

	)

140 
	#DN_ATTRIB
 0x00000020

	)

141 
	#DN_MULTISHOT
 0x80000000

	)

144 
	sÊock


146 
	ml_ty≥
;

147 
	ml_whí˚
;

148 #i‚de‡
__USE_FILE_OFFSET64


149 
__off_t
 
	ml_°¨t
;

150 
__off_t
 
	ml_Àn
;

152 
__off64_t
 
	ml_°¨t
;

153 
__off64_t
 
	ml_Àn
;

155 
__pid_t
 
	ml_pid
;

158 #ifde‡
__USE_LARGEFILE64


159 
	sÊock64


161 
	ml_ty≥
;

162 
	ml_whí˚
;

163 
__off64_t
 
	ml_°¨t
;

164 
__off64_t
 
	ml_Àn
;

165 
__pid_t
 
	ml_pid
;

171 #ifdef 
__USE_BSD


172 
	#FAPPEND
 
O_APPEND


	)

173 
	#FFSYNC
 
O_FSYNC


	)

174 
	#FASYNC
 
O_ASYNC


	)

175 
	#FNONBLOCK
 
O_NONBLOCK


	)

176 
	#FNDELAY
 
O_NDELAY


	)

180 #ifde‡
__USE_XOPEN2K


181 
	#POSIX_FADV_NORMAL
 0

	)

182 
	#POSIX_FADV_RANDOM
 1

	)

183 
	#POSIX_FADV_SEQUENTIAL
 2

	)

184 
	#POSIX_FADV_WILLNEED
 3

	)

185 
	#POSIX_FADV_DONTNEED
 4

	)

186 
	#POSIX_FADV_NOREUSE
 5

	)

190 #ifde‡
__USE_GNU


192 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

195 
	#SYNC_FILE_RANGE_WRITE
 2

	)

198 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

203 
	#SPLICE_F_MOVE
 1

	)

204 
	#SPLICE_F_NONBLOCK
 2

	)

207 
	#SPLICE_F_MORE
 4

	)

208 
	#SPLICE_F_GIFT
 8

	)

211 
	g__BEGIN_DECLS


213 #ifde‡
__USE_GNU


216 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

217 
__THROW
;

221 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

222 
__Êags
);

226 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

227 
size_t
 
__cou¡
, 
__Êags
);

230 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

231 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

232 
__Êags
);

235 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

236 
__Êags
);

240 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

22 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

32 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

34 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

35 #ifde‡
__GNUC__


36 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

37 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

39 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

40 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 #i‡
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0

29 
	tÊﬂt_t
;

30 
	tdoubÀ_t
;

36 
	tÊﬂt_t
;

38 
	tdoubÀ_t
;

43 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

44 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

22 #i‚de‡
_MATH_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

33 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

35 #i‡!
__GNUC_PREREQ
 (2,97)

40 #unde‡
isgª©î


41 #unde‡
isgª©îequÆ


42 #unde‡
i¶ess


43 #unde‡
i¶es£quÆ


44 #unde‡
i¶essgª©î


45 #unde‡
isun‹dîed


46 #ifde‡
__i686__


49 
	#isgª©î
(
x
, 
y
) \

50 ({ 
__ªsu…
; \

51 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

52 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

53 
__ªsu…
; })

	)

54 
	#isgª©îequÆ
(
x
, 
y
) \

55 ({ 
__ªsu…
; \

56 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

57 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

58 
__ªsu…
; })

	)

60 
	#i¶ess
(
x
, 
y
) \

61 ({ 
__ªsu…
; \

62 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

63 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

64 
__ªsu…
; })

	)

66 
	#i¶es£quÆ
(
x
, 
y
) \

67 ({ 
__ªsu…
; \

68 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

69 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

70 
__ªsu…
; })

	)

72 
	#i¶essgª©î
(
x
, 
y
) \

73 ({ 
__ªsu…
; \

74 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

75 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

76 
__ªsu…
; })

	)

78 
	#isun‹dîed
(
x
, 
y
) \

79 ({ 
__ªsu…
; \

80 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

81 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

82 
__ªsu…
; })

	)

85 
	#isgª©î
(
x
, 
y
) \

86 ({ 
__ªsu…
; \

87 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

88 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

89 
__ªsu…
; })

	)

91 
	#isgª©îequÆ
(
x
, 
y
) \

92 ({ 
__ªsu…
; \

93 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

94 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

95 
__ªsu…
; })

	)

97 
	#i¶ess
(
x
, 
y
) \

98 ({ 
__ªsu…
; \

99 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

100 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

101 
__ªsu…
; })

	)

103 
	#i¶es£quÆ
(
x
, 
y
) \

104 ({ 
__ªsu…
; \

105 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

106 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

107 
__ªsu…
; })

	)

109 
	#i¶essgª©î
(
x
, 
y
) \

110 ({ 
__ªsu…
; \

111 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

112 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

113 
__ªsu…
; })

	)

115 
	#isun‹dîed
(
x
, 
y
) \

116 ({ 
__ªsu…
; \

117 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

118 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

119 
__ªsu…
; })

	)

125 #i‡
__GNUC_PREREQ
 (2, 8)

127 
__MATH_INLINE
 

128 
__NTH
 (
	$__signbôf
 (
__x
))

130 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

131  
__u
.
__i
 < 0;

132 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$__signbô
 (
__x
))

136 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

137  
__u
.
__i
[1] < 0;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$__signbôl
 (
__x
))

142 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

143  (
__u
.
__i
[2] & 0x8000) != 0;

144 
	}
}

151 #i‡
__GNUC_PREREQ
 (2, 8)

153 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

154 && 
deföed
 
	g__OPTIMIZE__
)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


164 
	#__ölöe_m©h›
(
func
, 
›
) \

165 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

166 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

167 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

168 
	#__ölöe_m©h›NP
(
func
, 
›
) \

169 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

170 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

171 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

173 
	#__ölöe_m©h›
(
func
, 
›
) \

174 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

175 
	#__ölöe_m©h›NP
(
func
, 
›
) \

176 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

179 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

180 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

181 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

182 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

185 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


186 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

187 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

188 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

189 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

190 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

191 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

192 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

193 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

195 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

196 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

197 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

198 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

201 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

202 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

203 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

205 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

206 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

208 
Êﬂt_ty≥
 
__ªsu…
; \

209 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

210  
__ªsu…
; \

211 }

	)

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

216 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

217 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

218 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

219 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

220 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

221 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

222 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

223 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

224 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

225 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

226 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

227 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

228 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

229 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

230 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

231 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

232 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

233 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

234 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

235 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

236 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

237 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

238 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

240 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

241 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

242 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

243 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

244 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

245 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

246 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

247 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

248 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

249 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

250 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

251 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

254 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

255 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

256 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

258 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

259 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

261 
code
; \

262 }

	)

265 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

266 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

267 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

269 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

270 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

272 
code
; \

273 }

	)

275 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

276 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

277 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

279 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

280 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

281 
Êﬂt_ty≥
 
¨g3
)) \

283 
code
; \

284 }

	)

288 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


291 
__ölöe_m©hcode
 (
__sgn
, 
__x
, \

292  
__x
 == 0.0 ? 0.0 : (__x > 0.0 ? 1.0 : -1.0))

295 #ifde‡
__FAST_MATH__


296 
__ölöe_m©hcode
 (
__pow2
, 
__x
, \

297 
__vÆue
; \

298 
__exp⁄ít
; \

299 
__exãnsi⁄__
 
__p
 = (Ë
__x
; \

300 i‡(
__x
 =(Ë
__p
) \

302 
__asm
 
__vﬁ©ûe__
 \

304 : "Ò" (
__vÆue
Ë: "0" (1.0), "u" (
__x
)); \

305  
__vÆue
; \

307 
__asm
 
__vﬁ©ûe__
 \

313 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

314 
__vÆue
 += 1.0; \

315 
__asm
 
__vﬁ©ûe__
 \

317 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

318  
__vÆue
)

320 #ifde‡
__USE_GNU


321 
	#__söcos_code
 \

322 
__co§
; \

323 
__sör
; \

324 
__asm
 
__vﬁ©ûe__
 \

339 : "Ò" (
__co§
), "=u" (
__sör
Ë: "0" (
__x
)); \

340 *
__söx
 = 
__sör
; \

341 *
__cosx
 = 
__co§


	)

343 
__MATH_INLINE
 

344 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

346 
__söcos_code
;

347 
	}
}

349 
__MATH_INLINE
 

350 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

352 
__söcos_code
;

353 
	}
}

355 
__MATH_INLINE
 

356 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

358 
__söcos_code
;

359 
	}
}

366 #i‡
__GNUC_PREREQ
 (3, 5)

367 
	#__expm1_code
 \

368 
__ãmp
; \

369 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

370  
__ãmp
 ? __ãm∞: 
__x


	)

372 
	#__expm1_code
 \

373 
__vÆue
; \

374 
__exp⁄ít
; \

375 
__ãmp
; \

376 
__asm
 
__vﬁ©ûe__
 \

385 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

386 
__asm
 
__vﬁ©ûe__
 \

388 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

389 
__ãmp
 -= 1.0; \

390 
__ãmp
 +
__vÆue
; \

391  
__ãmp
 ? __ãm∞: 
__x


	)

393 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

395 #i‡
	`__GNUC_PREREQ
 (3, 4)

396 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

398 
	#__exp_code
 \

399 
__vÆue
; \

400 
__exp⁄ít
; \

401 
__asm
 
__vﬁ©ûe__
 \

409 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

410 
__vÆue
 += 1.0; \

411 
__asm
 
__vﬁ©ûe__
 \

413 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

414  
__vÆue


	)

415 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

416 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

420 #i‡!
	`__GNUC_PREREQ
 (3, 5)

421 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

422 
__vÆue
; \

423 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

424 
__asm
 
__vﬁ©ûe__
 \

426 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

427  
__vÆue
)

432 #i‡
	`__GNUC_PREREQ
 (3, 4)

433 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

434  
	$__buûtö_©™2l
 (
__y
, 
__x
))

436 
	#__©™2_code
 \

437 
__vÆue
; \

438 
__asm
 
__vﬁ©ûe__
 \

440 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

441  
__vÆue


	)

442 #ifde‡
__FAST_MATH__


443 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

445 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

449 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

450 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

451 
__vÆue
; \

452 
__asm
 
__vﬁ©ûe__
 \

457 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

458  
__vÆue
)

462 #ifde‡
__FAST_MATH__


463 #i‡!
	`__GNUC_PREREQ
 (3,3)

464 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

465 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

466 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

468 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

472 #i‡
	`__GNUC_PREREQ
 (2, 8)

473 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

474 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


475 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

476 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

478 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

480 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

481 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

484 #ifde‡
__FAST_MATH__


485 #i‡!
	`__GNUC_PREREQ
 (3, 4)

487 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

489 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

491 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

494 #i‡!
	`__GNUC_PREREQ
 (3, 5)

495 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

497 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

498 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

501 #i‡!
	`__GNUC_PREREQ
 (3, 4)

502 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

506 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

507 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

508 { 
__xld
: 
__x
 
	}
}; \

509 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

510 
	g__n
.
	g__xi
[1] = 0x80000000; \

511 
	g__n
.
	g__xi
[0] = 0; \

512  
	g__n
.
	g__xld
)

515 #ifde‡
__FAST_MATH__


517 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

518 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

519  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

521 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

522 
__ex
 = 
	`__ex∂
 (
__x
); \

523  0.5 * (
__ex
 + 1.0 / __ex))

525 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

526 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

527  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

530 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

531 
__vÆue
; \

532 
__ign‹e
; \

533 
__cw
; \

534 
__cwtmp
; \

535 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

543 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

544 "=m" (
__cw
) \

545 : "0" (
__x
)); \

546  
__vÆue
)

548 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

549 
__vÆue
; \

550 
__ign‹e
; \

551 
__cw
; \

552 
__cwtmp
; \

553 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

561 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

562 "=m" (
__cw
) \

563 : "0" (
__x
)); \

564  
__vÆue
)

566 #ifde‡
__FAST_MATH__


567 
	#__ldexp_code
 \

568 
__vÆue
; \

569 
__asm
 
__vﬁ©ûe__
 \

571 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

572  
__vÆue


	)

574 
__MATH_INLINE
 

575 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

577 
__ldexp_code
;

578 
	}
}

583 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


585 #ifde‡
__FAST_MATH__


586 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

590 
	#__M_SQRT2
 1.41421356237309504880L

	)

592 #i‡!
	`__GNUC_PREREQ
 (3, 5)

593 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

594 
__vÆue
; \

595 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

596 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

598 
__asm
 
__vﬁ©ûe__
 \

602 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

603  
__vÆue
)

608 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

609 
__y
 = 
	`__Áb¶
 (
__x
); \

610  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

611 * 
	$__sgn1l
 (
__x
)))

613 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

614  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

616 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

617 
__y
 = 
	`__Áb¶
 (
__x
); \

618  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

621 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

622  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

624 #i‡!
	`__GNUC_PREREQ
 (3, 5)

625 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

626 
__vÆue
; \

627 
__junk
; \

628 
__asm
 
__vﬁ©ûe__
 \

630 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

631  
__vÆue
)

637 #ifde‡
__USE_ISOC99


638 #ifde‡
__FAST_MATH__


640 #i‡!
	`__GNUC_PREREQ
 (3, 5)

641 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

644 
__MATH_INLINE
 

645 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

647 
__ldexp_code
;

648 
	}
}

650 
__MATH_INLINE
 

651 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

653 
__ldexp_code
;

654 
	}
}

656 
__ölöe_m©hcodeNP3
 (
fma
, 
__x
, 
__y
, 
__z
,  (__x * __y) + __z)

658 
__ölöe_m©h›NP
 (
röt
, "frndint")

661 
	#__Ãöt_code
 \

662 
__Ãöåes
; \

663 
__asm__
 
__vﬁ©ûe__
 \

665 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

666  
__Ãöåes


	)

667 
__MATH_INLINE
 

668 
__NTH
 (
	$Ãötf
 (
__x
))

670 
__Ãöt_code
;

671 
	}
}

672 
__MATH_INLINE
 

673 
__NTH
 (
	$Ãöt
 (
__x
))

675 
__Ãöt_code
;

676 
	}
}

677 
__MATH_INLINE
 

678 
__NTH
 (
	$Ãöé
 (
__x
))

680 
__Ãöt_code
;

681 
	}
}

682 #unde‡
__Ãöt_code


684 
	#__Œröt_code
 \

685 
__Œröåes
; \

686 
__asm__
 
__vﬁ©ûe__
 \

688 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

689  
__Œröåes


	)

690 
__MATH_INLINE
 

691 
__NTH
 (
	$Œrötf
 (
__x
))

693 
__Œröt_code
;

694 
	}
}

695 
__MATH_INLINE
 

696 
__NTH
 (
	$Œröt
 (
__x
))

698 
__Œröt_code
;

699 
	}
}

700 
__MATH_INLINE
 

701 
__NTH
 (
	$Œröé
 (
__x
))

703 
__Œröt_code
;

704 
	}
}

705 #unde‡
__Œröt_code


710 #ifde‡
__USE_MISC


712 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

713 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

714 
__vÆue
; \

715 
__˛obbîed
; \

716 
__asm
 
__vﬁ©ûe__
 \

721 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

722  
__vÆue
)

727 
__MATH_INLINE
 

728 
__NTH
 (
	$__föôe
 (
__x
))

730  (
__exãnsi⁄__


731 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

733 
	}
}

736 #ifde‡
__FAST_MATH__


737 
__ölöe_m©hcode
 (
__coshm1
, 
__x
, \

738 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

739  0.5 * (
__exm1
 / (__exm1 + 1.0)) * __exm1)

741 
__ölöe_m©hcode
 (
__acosh1p
, 
__x
, \

742  
log1∂
 (
__x
 + 
__libc_sqπl
 (__x) * __libc_sqrtl (__x + 2.0)))

748 #unde‡
__©™2_code


749 #ifde‡
__FAST_MATH__


750 #unde‡
__expm1_code


751 #unde‡
__exp_code


752 #unde‡
__söcos_code


759 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


760 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

761 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

762 
__vÆue
;

763 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

764 : "Ò" (
__vÆue
)

765 : "0" (
__x
), "u" (
__y
) : "st(1)");

766  
__vÆue
;)

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x02000

	)

63 
	#MAP_NORESERVE
 0x04000

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

69 
	#MS_ASYNC
 1

	)

70 
	#MS_SYNC
 4

	)

71 
	#MS_INVALIDATE
 2

	)

74 
	#MCL_CURRENT
 1

	)

75 
	#MCL_FUTURE
 2

	)

79 #ifde‡
__USE_GNU


80 
	#MREMAP_MAYMOVE
 1

	)

81 
	#MREMAP_FIXED
 2

	)

85 #ifde‡
__USE_BSD


86 
	#MADV_NORMAL
 0

	)

87 
	#MADV_RANDOM
 1

	)

88 
	#MADV_SEQUENTIAL
 2

	)

89 
	#MADV_WILLNEED
 3

	)

90 
	#MADV_DONTNEED
 4

	)

91 
	#MADV_REMOVE
 9

	)

92 
	#MADV_DONTFORK
 10

	)

93 
	#MADV_DOFORK
 11

	)

97 #ifde‡
__USE_XOPEN2K


98 
	#POSIX_MADV_NORMAL
 0

	)

99 
	#POSIX_MADV_RANDOM
 1

	)

100 
	#POSIX_MADV_SEQUENTIAL
 2

	)

101 
	#POSIX_MADV_WILLNEED
 3

	)

102 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	#__√ed_NULL


	)

30 
	~<°ddef.h
>

32 
	~<limôs.h
>

33 
	~<sys/ty≥s.h
>

36 #i‚de‡
__sockÀn_t_deföed


37 
__sockÀn_t
 
	tsockÀn_t
;

38 
	#__sockÀn_t_deföed


	)

42 
	e__sockë_ty≥


44 
	mSOCK_STREAM
 = 1,

46 
	#SOCK_STREAM
 
SOCK_STREAM


	)

47 
	mSOCK_DGRAM
 = 2,

49 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

50 
	mSOCK_RAW
 = 3,

51 
	#SOCK_RAW
 
SOCK_RAW


	)

52 
	mSOCK_RDM
 = 4,

53 
	#SOCK_RDM
 
SOCK_RDM


	)

54 
	mSOCK_SEQPACKET
 = 5,

56 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

57 
	mSOCK_PACKET
 = 10

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

64 
	#PF_UNSPEC
 0

	)

65 
	#PF_LOCAL
 1

	)

66 
	#PF_UNIX
 
PF_LOCAL


	)

67 
	#PF_FILE
 
PF_LOCAL


	)

68 
	#PF_INET
 2

	)

69 
	#PF_AX25
 3

	)

70 
	#PF_IPX
 4

	)

71 
	#PF_APPLETALK
 5

	)

72 
	#PF_NETROM
 6

	)

73 
	#PF_BRIDGE
 7

	)

74 
	#PF_ATMPVC
 8

	)

75 
	#PF_X25
 9

	)

76 
	#PF_INET6
 10

	)

77 
	#PF_ROSE
 11

	)

78 
	#PF_DEC√t
 12

	)

79 
	#PF_NETBEUI
 13

	)

80 
	#PF_SECURITY
 14

	)

81 
	#PF_KEY
 15

	)

82 
	#PF_NETLINK
 16

	)

83 
	#PF_ROUTE
 
PF_NETLINK


	)

84 
	#PF_PACKET
 17

	)

85 
	#PF_ASH
 18

	)

86 
	#PF_ECONET
 19

	)

87 
	#PF_ATMSVC
 20

	)

88 
	#PF_SNA
 22

	)

89 
	#PF_IRDA
 23

	)

90 
	#PF_PPPOX
 24

	)

91 
	#PF_WANPIPE
 25

	)

92 
	#PF_BLUETOOTH
 31

	)

93 
	#PF_IUCV
 32

	)

94 
	#PF_RXRPC
 33

	)

95 
	#PF_MAX
 34

	)

98 
	#AF_UNSPEC
 
PF_UNSPEC


	)

99 
	#AF_LOCAL
 
PF_LOCAL


	)

100 
	#AF_UNIX
 
PF_UNIX


	)

101 
	#AF_FILE
 
PF_FILE


	)

102 
	#AF_INET
 
PF_INET


	)

103 
	#AF_AX25
 
PF_AX25


	)

104 
	#AF_IPX
 
PF_IPX


	)

105 
	#AF_APPLETALK
 
PF_APPLETALK


	)

106 
	#AF_NETROM
 
PF_NETROM


	)

107 
	#AF_BRIDGE
 
PF_BRIDGE


	)

108 
	#AF_ATMPVC
 
PF_ATMPVC


	)

109 
	#AF_X25
 
PF_X25


	)

110 
	#AF_INET6
 
PF_INET6


	)

111 
	#AF_ROSE
 
PF_ROSE


	)

112 
	#AF_DEC√t
 
PF_DEC√t


	)

113 
	#AF_NETBEUI
 
PF_NETBEUI


	)

114 
	#AF_SECURITY
 
PF_SECURITY


	)

115 
	#AF_KEY
 
PF_KEY


	)

116 
	#AF_NETLINK
 
PF_NETLINK


	)

117 
	#AF_ROUTE
 
PF_ROUTE


	)

118 
	#AF_PACKET
 
PF_PACKET


	)

119 
	#AF_ASH
 
PF_ASH


	)

120 
	#AF_ECONET
 
PF_ECONET


	)

121 
	#AF_ATMSVC
 
PF_ATMSVC


	)

122 
	#AF_SNA
 
PF_SNA


	)

123 
	#AF_IRDA
 
PF_IRDA


	)

124 
	#AF_PPPOX
 
PF_PPPOX


	)

125 
	#AF_WANPIPE
 
PF_WANPIPE


	)

126 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

127 
	#AF_IUCV
 
PF_IUCV


	)

128 
	#AF_RXRPC
 
PF_RXRPC


	)

129 
	#AF_MAX
 
PF_MAX


	)

135 
	#SOL_RAW
 255

	)

136 
	#SOL_DECNET
 261

	)

137 
	#SOL_X25
 262

	)

138 
	#SOL_PACKET
 263

	)

139 
	#SOL_ATM
 264

	)

140 
	#SOL_AAL
 265

	)

141 
	#SOL_IRDA
 266

	)

144 
	#SOMAXCONN
 128

	)

147 
	~<bôs/sockaddr.h
>

150 
	ssockaddr


152 
__SOCKADDR_COMMON
 (
ß_
);

153 
	mß_d©a
[14];

159 #i‡
ULONG_MAX
 > 0xffffffff

160 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

162 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

164 
	#_SS_SIZE
 128

	)

165 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

167 
	ssockaddr_°‹age


169 
__SOCKADDR_COMMON
 (
ss_
);

170 
__ss_Æig¡y≥
 
	m__ss_Æign
;

171 
	m__ss_∑ddög
[
_SS_PADSIZE
];

178 
	mMSG_OOB
 = 0x01,

179 
	#MSG_OOB
 
MSG_OOB


	)

180 
	mMSG_PEEK
 = 0x02,

181 
	#MSG_PEEK
 
MSG_PEEK


	)

182 
	mMSG_DONTROUTE
 = 0x04,

183 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

184 #ifde‡
__USE_GNU


186 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

187 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

189 
	mMSG_CTRUNC
 = 0x08,

190 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

191 
	mMSG_PROXY
 = 0x10,

192 
	#MSG_PROXY
 
MSG_PROXY


	)

193 
	mMSG_TRUNC
 = 0x20,

194 
	#MSG_TRUNC
 
MSG_TRUNC


	)

195 
	mMSG_DONTWAIT
 = 0x40,

196 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

197 
	mMSG_EOR
 = 0x80,

198 
	#MSG_EOR
 
MSG_EOR


	)

199 
	mMSG_WAITALL
 = 0x100,

200 
	#MSG_WAITALL
 
MSG_WAITALL


	)

201 
	mMSG_FIN
 = 0x200,

202 
	#MSG_FIN
 
MSG_FIN


	)

203 
	mMSG_SYN
 = 0x400,

204 
	#MSG_SYN
 
MSG_SYN


	)

205 
	mMSG_CONFIRM
 = 0x800,

206 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

207 
	mMSG_RST
 = 0x1000,

208 
	#MSG_RST
 
MSG_RST


	)

209 
	mMSG_ERRQUEUE
 = 0x2000,

210 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

211 
	mMSG_NOSIGNAL
 = 0x4000,

212 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

213 
	mMSG_MORE
 = 0x8000,

214 
	#MSG_MORE
 
MSG_MORE


	)

216 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

219 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

225 
	smsghdr


227 *
	mmsg_«me
;

228 
sockÀn_t
 
	mmsg_«mñí
;

230 
iovec
 *
	mmsg_iov
;

231 
size_t
 
	mmsg_iovÀn
;

233 *
	mmsg_c⁄åﬁ
;

234 
size_t
 
	mmsg_c⁄åﬁÀn
;

239 
	mmsg_Êags
;

243 
	scmsghdr


245 
size_t
 
	mcmsg_Àn
;

250 
	mcmsg_Àvñ
;

251 
	mcmsg_ty≥
;

252 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

253 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

258 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

259 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

261 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

263 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

264 
	#CMSG_FIRSTHDR
(
mhdr
) \

265 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

266 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

267 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

268 & (
size_t
Ë~( (size_tË- 1))

	)

269 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

270 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

271 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

273 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

274 
cmsghdr
 *
__cmsg
Ë
__THROW
;

275 #ifde‡
__USE_EXTERN_INLINES


276 #i‚de‡
_EXTERN_INLINE


277 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

279 
_EXTERN_INLINE
 
cmsghdr
 *

280 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

282 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

286 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

287 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

288 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


289 + 
__mhdr
->
msg_c⁄åﬁÀn
)

290 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

291 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

294  
__cmsg
;

295 
	}
}

302 
	mSCM_RIGHTS
 = 0x01

303 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

304 #ifde‡
__USE_BSD


305 , 
	mSCM_CREDENTIALS
 = 0x02

306 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

312 
	su¸ed


314 
pid_t
 
	mpid
;

315 
uid_t
 
	muid
;

316 
gid_t
 
	mgid
;

320 
	~<asm/sockë.h
>

324 
	slögî


326 
	ml_⁄off
;

327 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 #ifde‡
__USE_MISC


70 
time•ec
 
	m°_©im
;

71 
time•ec
 
	m°_mtim
;

72 
time•ec
 
	m°_˘im
;

73 
	#°_©ime
 
°_©im
.
tv_£c


	)

74 
	#°_mtime
 
°_mtim
.
tv_£c


	)

75 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

77 
__time_t
 
	m°_©ime
;

78 
	m°_©imí£c
;

79 
__time_t
 
	m°_mtime
;

80 
	m°_mtimí£c
;

81 
__time_t
 
	m°_˘ime
;

82 
	m°_˘imí£c
;

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	m__unu£d4
;

86 
	m__unu£d5
;

88 
__öo64_t
 
	m°_öo
;

92 #ifde‡
__USE_LARGEFILE64


93 
	s°©64


95 
__dev_t
 
	m°_dev
;

96 
	m__∑d1
;

98 
__öo_t
 
	m__°_öo
;

99 
__mode_t
 
	m°_mode
;

100 
__∆ök_t
 
	m°_∆ök
;

101 
__uid_t
 
	m°_uid
;

102 
__gid_t
 
	m°_gid
;

103 
__dev_t
 
	m°_rdev
;

104 
	m__∑d2
;

105 
__off64_t
 
	m°_size
;

106 
__blksize_t
 
	m°_blksize
;

108 
__blk˙t64_t
 
	m°_blocks
;

109 #ifde‡
__USE_MISC


116 
time•ec
 
	m°_©im
;

117 
time•ec
 
	m°_mtim
;

118 
time•ec
 
	m°_˘im
;

120 
__time_t
 
	m°_©ime
;

121 
	m°_©imí£c
;

122 
__time_t
 
	m°_mtime
;

123 
	m°_mtimí£c
;

124 
__time_t
 
	m°_˘ime
;

125 
	m°_˘imí£c
;

127 
__öo64_t
 
	m°_öo
;

132 
	#_STATBUF_ST_BLKSIZE


	)

133 
	#_STATBUF_ST_RDEV


	)

135 
	#_STATBUF_ST_NSEC


	)

139 
	#__S_IFMT
 0170000

	)

142 
	#__S_IFDIR
 0040000

	)

143 
	#__S_IFCHR
 0020000

	)

144 
	#__S_IFBLK
 0060000

	)

145 
	#__S_IFREG
 0100000

	)

146 
	#__S_IFIFO
 0010000

	)

147 
	#__S_IFLNK
 0120000

	)

148 
	#__S_IFSOCK
 0140000

	)

152 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

153 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

154 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

158 
	#__S_ISUID
 04000

	)

159 
	#__S_ISGID
 02000

	)

160 
	#__S_ISVTX
 01000

	)

161 
	#__S_IREAD
 0400

	)

162 
	#__S_IWRITE
 0200

	)

163 
	#__S_IEXEC
 0100

	)

165 #i‡
deföed
 
__USE_ATFILE
 || deföed 
__USE_GNU


167 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

168 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

133 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

134 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

135 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

138 
__exã∫_Æways_ölöe
 
__wur
 *

139 
	$gës
 (*
__°r
)

141 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

142  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

143  
	`__gës_w¨n
 (
__°r
);

144 
	}
}

146 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

147 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

148 *
	`__REDIRECT
 (
__fgës_Æüs
,

149 (*
__ª°ri˘
 
__s
, 
__n
,

150 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

151 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

152 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

153 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

154 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

157 
__exã∫_Æways_ölöe
 
__wur
 *

158 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

160 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

162 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

163  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

165 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

166  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

168  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

169 
	}
}

171 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

172 
size_t
 
__size
, size_à
__n
,

173 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

174 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

175 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

176 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

177 
‰ód
Ë
__wur
;

178 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

179 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

180 
size_t
 
__size
, size_à
__n
,

181 
FILE
 *
__ª°ri˘
 
__°ªam
),

182 
__‰ód_chk
)

183 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

186 
__exã∫_Æways_ölöe
 
__wur
 
size_t


187 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

188 
FILE
 *
__ª°ri˘
 
__°ªam
)

190 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

192 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

193 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

194 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

195  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

197 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

198  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

200  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

201 
	}
}

203 #ifde‡
__USE_GNU


204 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

205 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

206 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

207 (*
__ª°ri˘
 
__s
, 
__n
,

208 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

209 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

210 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

211 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

212 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

215 
__exã∫_Æways_ölöe
 
__wur
 *

216 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

218 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

220 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

221  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

223 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

224  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

226  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

227 
	}
}

230 #ifde‡
__USE_MISC


231 #unde‡
‰ód_u∆ocked


232 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

233 
size_t
 
__size
, size_à
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

236 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

237 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

238 
‰ód_u∆ocked
Ë
__wur
;

239 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

240 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

241 
size_t
 
__size
, size_à
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
),

243 
__‰ód_u∆ocked_chk
)

244 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

247 
__exã∫_Æways_ölöe
 
__wur
 
size_t


248 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
)

251 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

253 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

254 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

255 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

256  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

257 
__°ªam
);

259 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

260  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

261 
__°ªam
);

264 #ifde‡
__USE_EXTERN_INLINES


265 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

266 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

267 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

268 && 
__size
 * 
__n
 <= 8)

270 
size_t
 
__˙t
 = 
__size
 * 
__n
;

271 *
__˝å
 = (*Ë
__±r
;

272 i‡(
__˙t
 == 0)

275 ; 
__˙t
 > 0; --__cnt)

277 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

278 i‡(
__c
 =
EOF
)

280 *
__˝å
++ = 
__c
;

282  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

285  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

286 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #i‚de‡
__exã∫_ölöe


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
__STRING_INLINE
 *

149 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

151 
__d0
, 
__d1
, 
__d2
;

152 *
__tmp
 = 
__de°
;

153 i‡(
__de°
 < 
__§c
)

154 
__asm__
 
__vﬁ©ûe__


157 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

158 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

159 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

160 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

162 
__asm__
 
__vﬁ©ûe__


166 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

167 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

168 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

169 "2" (
__n
 - 1 + (*Ë
__tmp
),

170 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

171  
__de°
;

172 
	}
}

176 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

177 #i‚de‡
_FORCE_INLINES


178 #i‚de‡
__PIC__


180 
__STRING_INLINE
 

181 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

183 
__d0
, 
__d1
, 
__d2
;

184 
__ªs
;

185 
__asm__
 
__vﬁ©ûe__


193 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

194 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

195 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

196 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

198  
__ªs
;

199 
	}
}

204 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

205 
	#_USE_STRING_ARCH_mem£t
 1

	)

206 
	#mem£t
(
s
, 
c
, 
n
) \

207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

208 ? ((
n
) == 1 \

209 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

210 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

211 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

212 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

213 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

214 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

215 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

216 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

217 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

219 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

220 *((*Ë
__s
Ë(Ë(
c
); \

221 
__s
; })

	)

223 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

224 ({ *
__s
 = (
s
); \

226 
__ui
; \

227 
__usi
; \

228 
__uc
; \

229 } *
__u
 = 
__s
; \

230 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

236 i‡((
n
) == 3 || (n) >= 5) \

237 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

240 
n
) \

243 
__u
->
__ui
 = 
__c
; \

244 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

246 
__u
->
__ui
 = 
__c
; \

247 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

249 
__u
->
__ui
 = 
__c
; \

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

252 
__u
->
__usi
 = (Ë
__c
; \

253 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

254 
__u
->
__uc
 = (Ë
__c
; \

258 
__u
->
__ui
 = 
__c
; \

259 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

261 
__u
->
__ui
 = 
__c
; \

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__usi
 = (Ë
__c
; \

271 
__u
->
__ui
 = 
__c
; \

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__uc
 = (Ë
__c
; \

284 
__u
->
__ui
 = 
__c
; \

285 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

298 
__s
; })

	)

300 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

301 (((
n
) % 4 == 0) \

302 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

303 
n
) \

304 : (((
n
) % 2 == 0) \

305 ? 
	`__mem£t_c˙_by2
 (
s
, \

306 ((Ë((Ë(
c
))) * 0x01010101,\

307 
n
) \

308 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

310 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

311 
size_t
 
__n
);

313 
__STRING_INLINE
 *

314 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

316 *
__tmp
 = 
__s
;

317 
__d0
;

318 #ifde‡
__i686__


319 
__asm__
 
__vﬁ©ûe__


322 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

323 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

324 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

327 
__asm__
 
__vﬁ©ûe__


333 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338  
__s
;

339 
	}
}

341 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

342 
size_t
 
__n
);

344 
__STRING_INLINE
 *

345 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

347 
__d0
, 
__d1
;

348 *
__tmp
 = 
__s
;

349 #ifde‡
__i686__


350 
__asm__
 
__vﬁ©ûe__


354 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359 
__asm__
 
__vﬁ©ûe__


365 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370  
__s
;

371 
	}
}

373 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

374 (((
n
) % 4 == 0) \

375 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

376 : (((
n
) % 2 == 0) \

377 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

378 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

380 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

382 
__STRING_INLINE
 *

383 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

385 *
__tmp
 = 
__s
;

386 
__d0
;

387 
__asm__
 
__vﬁ©ûe__


397 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

398 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

399 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

401  
__s
;

402 
	}
}

404 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

406 
__STRING_INLINE
 *

407 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

409 
__d0
, 
__d1
;

410 *
__tmp
 = 
__s
;

411 
__asm__
 
__vﬁ©ûe__


422 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

423 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

424 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

426  
__s
;

427 
	}
}

431 
	#_HAVE_STRING_ARCH_memchr
 1

	)

432 #i‚de‡
_FORCE_INLINES


433 
__STRING_INLINE
 *

434 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

436 
__d0
;

437 #ifde‡
__i686__


438 
__d1
;

440 *
__ªs
;

441 i‡(
__n
 == 0)

442  
NULL
;

443 #ifde‡
__i686__


444 
__asm__
 
__vﬁ©ûe__


448 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

449 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

450 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

453 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464  
__ªs
 - 1;

465 
	}
}

468 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

469 #i‚de‡
_FORCE_INLINES


470 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

472 
__STRING_INLINE
 *

473 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

475 
__d0
;

476 #ifde‡
__i686__


477 
__d1
;

479 *
__ªs
;

480 i‡(
__n
 == 0)

481  
NULL
;

482 #ifde‡
__i686__


483 
__asm__
 
__vﬁ©ûe__


489 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

490 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

491 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

494 
__asm__
 
__vﬁ©ûe__


501 : "=D" (
__ªs
), "=&c" (
__d0
)

502 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

503 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

506  
__ªs
;

507 
	}
}

508 #ifde‡
__USE_GNU


509 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

514 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

515 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

517 #i‚de‡
_FORCE_INLINES


518 
__STRING_INLINE
 *

519 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

521 
__d0
;

522 *
__ªs
;

523 
__asm__
 
__vﬁ©ûe__


526 : "=D" (
__ªs
), "=&c" (
__d0
)

527 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

528 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

530  
__ªs
 - 1;

531 
	}
}

532 #ifde‡
__USE_GNU


533 
__STRING_INLINE
 *

534 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

536  
	`__øwmemchr
 (
__s
, 
__c
);

537 
	}
}

543 
	#_HAVE_STRING_ARCH_°æí
 1

	)

544 
	#°æí
(
°r
) \

545 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

546 ? 
	`__buûtö_°æí
 (
°r
) \

547 : 
	`__°æí_g
 (
°r
)))

	)

548 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

550 
__STRING_INLINE
 
size_t


551 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

553 
__dummy
;

554 
__c⁄°
 *
__tmp
 = 
__°r
;

555 
__asm__
 
__vﬁ©ûe__


561 : "Ù" (
__tmp
), "=&q" (
__dummy
)

562 : "0" (
__°r
),

563 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

565  
__tmp
 - 
__°r
 - 1;

566 
	}
}

570 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

571 
	#°r˝y
(
de°
, 
§c
) \

572 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

573 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

574 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

575 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

576 (
__c⁄°
 *Ë(
§c
), \

577 
	`°æí
 (
§c
) + 1)) \

578 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

580 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

581 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

583 
__ui
; \

584 
__usi
; \

585 
__uc
; \

586 
__c
; \

587 } *
__u
 = (*Ë
__de°
; \

588 
§˛í
) \

591 
__u
->
__uc
 = '\0'; \

594 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

597 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

598 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

599 
__u
->
__uc
 = '\0'; \

602 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

605 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

606 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

619 
__u
->
__uc
 = '\0'; \

622 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

624 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

627 (*Ë
__de°
; }))

	)

629 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

631 
__STRING_INLINE
 *

632 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

634 *
__tmp
 = 
__de°
;

635 
__dummy
;

636 
__asm__
 
__vﬁ©ûe__


645 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

646 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

647 : "0" (
__§c
), "1" (
__tmp
),

648 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

650  
__de°
;

651 
	}
}

654 #ifde‡
__USE_GNU


655 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

657 
	#__°p˝y
(
de°
, 
§c
) \

658 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

659 ? (
	`°æí
 (
§c
) + 1 <= 8 \

660 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

661 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

662 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

663 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

664 ((
§˛í
) % 4 == 0 \

665 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

666 : ((
§˛í
) % 2 == 0 \

667 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

668 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

671 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

673 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

674 (
	`__exãnsi⁄__
 ({ union { \

675 
__ui
; \

676 
__usi
; \

677 
__uc
; \

678 
__c
; \

679 } *
__u
 = (*Ë(
de°
); \

680 
§˛í
) \

683 
__u
->
__uc
 = '\0'; \

686 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

687 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

690 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

691 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

692 
__u
->
__uc
 = '\0'; \

695 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

699 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

700 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

701 
__u
->
__uc
 = '\0'; \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

713 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

714 
__u
->
__uc
 = '\0'; \

717 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

719 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

720 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

723 (*Ë
__u
; }))

	)

725 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

726 
size_t
 
__§˛í
);

728 
__STRING_INLINE
 *

729 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

731 *
__tmp
 = 
__de°
;

732 
__d0
, 
__d1
;

733 
__asm__
 
__vﬁ©ûe__


741 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

742 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

744  
__tmp
;

745 
	}
}

747 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

748 
size_t
 
__§˛í
);

750 
__STRING_INLINE
 *

751 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

753 *
__tmp
 = 
__de°
;

754 
__d0
, 
__d1
;

755 
__asm__
 
__vﬁ©ûe__


768 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

769 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

770 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

771 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

773  
__tmp
 + 2;

774 
	}
}

776 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

777 
size_t
 
__§˛í
);

779 
__STRING_INLINE
 *

780 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

782 
__d0
, 
__d1
;

783 *
__tmp
 = 
__de°
;

784 
__asm__
 
__vﬁ©ûe__


795 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

796 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

797 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

798 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

800  
__tmp
;

801 
	}
}

803 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

805 
__STRING_INLINE
 *

806 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

808 *
__tmp
 = 
__de°
;

809 
__dummy
;

810 
__asm__
 
__vﬁ©ûe__


819 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

820 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

821 : "0" (
__§c
), "1" (
__tmp
),

822 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

824  
__tmp
 - 1;

825 
	}
}

830 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

831 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

832 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

833 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

834 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

835 (
__c⁄°
 *Ë(
§c
), 
n
) \

836 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

837 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

838 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

839 (((
§˛í
) % 4 == 0) \

840 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

841 : (((
§˛í
) % 2 == 0) \

842 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

843 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

845 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

846 
size_t
 
__§˛í
, size_à
__n
);

848 
__STRING_INLINE
 *

849 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

851 *
__tmp
 = 
__de°
;

852 
__dummy1
, 
__dummy2
;

853 
__asm__
 
__vﬁ©ûe__


861 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

862 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

863 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

864 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

866 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

867  
__de°
;

868 
	}
}

870 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

871 
size_t
 
__§˛í
, size_à
__n
);

873 
__STRING_INLINE
 *

874 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

876 *
__tmp
 = 
__de°
;

877 
__dummy1
, 
__dummy2
;

878 
__asm__
 
__vﬁ©ûe__


891 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

892 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

893 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

894 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

896 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

897  
__de°
;

898 
	}
}

900 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

901 
size_t
 
__§˛í
, size_à
__n
);

903 
__STRING_INLINE
 *

904 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

906 
__d0
, 
__d1
;

907 *
__tmp
 = 
__de°
;

908 
__asm__
 
__vﬁ©ûe__


919 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

920 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

921 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

922 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

924 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

925  
__de°
;

926 
	}
}

928 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

929 
size_t
 
__n
);

931 
__STRING_INLINE
 *

932 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

934 *
__tmp
 = 
__de°
;

935 
__dummy
;

936 i‡(
__n
 > 0)

937 
__asm__
 
__vﬁ©ûe__


953 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

954 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

957  
__de°
;

958 
	}
}

962 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

963 
	#°rˇt
(
de°
, 
§c
) \

964 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

965 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

966 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

968 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

969 
size_t
 
__§˛í
);

971 
__STRING_INLINE
 *

972 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

974 #ifde‡
__i686__


975 
__d0
;

976 *
__tmp
;

977 
__asm__
 
__vﬁ©ûe__


979 : "=D" (
__tmp
), "=&c" (
__d0
),

980 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

981 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

982 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

984 --
__tmp
;

986 *
__tmp
 = 
__de°
 - 1;

987 
__asm__
 
__vﬁ©ûe__


992 : "Ù" (
__tmp
),

993 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

994 : "0" (
__tmp
),

995 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

998 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

999  
__de°
;

1000 
	}
}

1002 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1004 
__STRING_INLINE
 *

1005 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1007 *
__tmp
 = 
__de°
 - 1;

1008 
__dummy
;

1009 
__asm__
 
__vﬁ©ûe__


1021 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1022 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1023 : "1" (
__tmp
), "2" (
__§c
),

1024 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1026  
__de°
;

1027 
	}
}

1031 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1032 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1033 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1034 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1035 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1036 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1037 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1038 (
__c⁄°
 *Ë(
§c
), \

1039 (
n
)Ë0, 
__de°
)) \

1040 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1042 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1043 
size_t
 
__n
);

1045 
__STRING_INLINE
 *

1046 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1048 *
__tmp
 = 
__de°
;

1049 
__dummy
;

1050 #ifde‡
__i686__


1051 
__asm__
 
__vﬁ©ûe__


1065 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1066 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1069 --
__tmp
;

1070 
__asm__
 
__vﬁ©ûe__


1087 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1088 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1091  
__de°
;

1092 
	}
}

1096 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1097 
	#°rcmp
(
s1
, 
s2
) \

1098 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1099 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1100 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1101 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1102 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1103 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1104 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1105 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1106 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1107 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1108 (
__c⁄°
 *Ë(
s2
), \

1109 
	`°æí
 (
s1
)) \

1110 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1111 (
__c⁄°
 *Ë(
s2
), \

1112 
	`°æí
 (
s1
))) \

1113 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1114 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1115 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1116 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1117 (
__c⁄°
 *Ë(
s2
), \

1118 
	`°æí
 (
s2
)) \

1119 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1120 (
__c⁄°
 *Ë(
s2
), \

1121 
	`°æí
 (
s2
))) \

1122 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1124 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1125 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1126 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1128 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1129 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1131 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1132 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1136 
__ªsu…
; }))

	)

1138 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1139 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1140 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1141 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1143 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1144 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1146 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1147 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1151 
__ªsu…
; }))

	)

1153 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1154 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1155 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1156 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1158 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1159 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1161 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1162 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1166 
__ªsu…
; }))

	)

1168 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1170 
__STRING_INLINE
 

1171 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1173 
__ªs
;

1174 
__asm__
 
__vﬁ©ûe__


1190 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1191 : "1" (
__s1
), "2" (
__s2
),

1192 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1193 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1195  
__ªs
;

1196 
	}
}

1200 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1201 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1202 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1203 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1204 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1205 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1206 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1208 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1209 
size_t
 
__n
);

1211 
__STRING_INLINE
 

1212 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1214 
__ªs
;

1215 
__asm__
 
__vﬁ©ûe__


1234 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1235 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1236 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1237 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1239  
__ªs
;

1240 
	}
}

1244 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1245 
	#_USE_STRING_ARCH_°rchr
 1

	)

1246 
	#°rchr
(
s
, 
c
) \

1247 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1248 ? ((
c
) == '\0' \

1249 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1250 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1251 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1253 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1255 
__STRING_INLINE
 *

1256 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1258 
__d0
;

1259 *
__ªs
;

1260 
__asm__
 
__vﬁ©ûe__


1270 : "Ù" (
__ªs
), "=&a" (
__d0
)

1271 : "0" (
__s
), "1" (
__c
),

1272 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1274  
__ªs
;

1275 
	}
}

1277 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1279 
__STRING_INLINE
 *

1280 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1282 
__d0
;

1283 *
__ªs
;

1284 
__asm__
 
__vﬁ©ûe__


1295 : "Ù" (
__ªs
), "=&a" (
__d0
)

1296 : "0" (
__s
), "1" (
__c
),

1297 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1299  
__ªs
;

1300 
	}
}

1304 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1305 
	#__°rch∫ul
(
s
, 
c
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1307 ? ((
c
) == '\0' \

1308 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1309 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1310 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1312 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1314 
__STRING_INLINE
 *

1315 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1317 
__d0
;

1318 *
__ªs
;

1319 
__asm__
 
__vﬁ©ûe__


1329 : "Ù" (
__ªs
), "=&a" (
__d0
)

1330 : "0" (
__s
), "1" (
__c
),

1331 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1333  
__ªs
;

1334 
	}
}

1336 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1338 
__STRING_INLINE
 *

1339 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1341 
__d0
;

1342 *
__ªs
;

1343 
__asm__
 
__vﬁ©ûe__


1354 : "Ù" (
__ªs
), "=&a" (
__d0
)

1355 : "0" (
__s
), "1" (
__c
),

1356 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1358  
__ªs
;

1359 
	}
}

1360 #ifde‡
__USE_GNU


1361 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1365 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1367 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1368 
	#ödex
(
s
, 
c
) \

1369 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1370 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1371 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1376 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1377 
	#°ºchr
(
s
, 
c
) \

1378 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1379 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1380 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1382 #ifde‡
__i686__


1383 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1385 
__STRING_INLINE
 *

1386 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1388 
__d0
, 
__d1
;

1389 *
__ªs
;

1390 
__asm__
 
__vﬁ©ûe__


1398 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1399 : "0" (1), "1" (
__s
), "2" (
__c
),

1400 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1402  
__ªs
 - 1;

1403 
	}
}

1405 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1445 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1446 : "0" (0), "1" (
__s
), "2" (
__c
),

1447 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1449  
__ªs
;

1450 
	}
}

1452 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1454 
__STRING_INLINE
 *

1455 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1457 
__d0
, 
__d1
;

1458 *
__ªs
;

1459 
__asm__
 
__vﬁ©ûe__


1470 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1471 : "0" (0), "1" (
__s
), "2" (
__c
),

1472 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1474  
__ªs
;

1475 
	}
}

1479 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1481 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1482 
	#rödex
(
s
, 
c
) \

1483 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1484 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1485 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1491 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1492 
	#°rc•n
(
s
, 
ªje˘
) \

1493 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1494 ? ((
ªje˘
)[0] == '\0' \

1495 ? 
	`°æí
 (
s
) \

1496 : ((
ªje˘
)[1] == '\0' \

1497 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1498 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1499 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1501 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1503 #i‚de‡
_FORCE_INLINES


1504 
__STRING_INLINE
 
size_t


1505 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1507 
__d0
;

1508 *
__ªs
;

1509 
__asm__
 
__vﬁ©ûe__


1518 : "Ù" (
__ªs
), "=&a" (
__d0
)

1519 : "0" (
__s
), "1" (
__ªje˘
),

1520 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1522  (
__ªs
 - 1Ë- 
__s
;

1523 
	}
}

1526 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1527 
size_t
 
__ªje˘_Àn
);

1529 
__STRING_INLINE
 
size_t


1530 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1532 
__d0
, 
__d1
, 
__d2
;

1533 
__c⁄°
 *
__ªs
;

1534 
__asm__
 
__vﬁ©ûe__


1545 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1546 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1548  (
__ªs
 - 1Ë- 
__s
;

1549 
	}
}

1551 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1552 #ifde‡
__PIC__


1554 
__STRING_INLINE
 
size_t


1555 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1557 
__d0
, 
__d1
, 
__d2
;

1558 
__c⁄°
 *
__ªs
;

1559 
__asm__
 
__vﬁ©ûe__


1576 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1577 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1579  (
__ªs
 - 1Ë- 
__s
;

1580 
	}
}

1582 
__STRING_INLINE
 
size_t


1583 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1585 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1586 
__c⁄°
 *
__ªs
;

1587 
__asm__
 
__vﬁ©ûe__


1601 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1602 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1605  (
__ªs
 - 1Ë- 
__s
;

1606 
	}
}

1612 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1613 
	#°r•n
(
s
, 
ac˚±
) \

1614 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1615 ? ((
ac˚±
)[0] == '\0' \

1616 ? ((Ë(
s
), 0) \

1617 : ((
ac˚±
)[1] == '\0' \

1618 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1619 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1620 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1622 #i‚de‡
_FORCE_INLINES


1623 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1625 
__STRING_INLINE
 
size_t


1626 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1628 
__d0
;

1629 *
__ªs
;

1631 
__asm__
 
__vﬁ©ûe__


1637 : "Ù" (
__ªs
), "=&q" (
__d0
)

1638 : "0" (
__s
), "1" (
__ac˚±
),

1639 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1641  (
__ªs
 - 1Ë- 
__s
;

1642 
	}
}

1645 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1646 
size_t
 
__ac˚±_Àn
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1651 
__d0
, 
__d1
, 
__d2
;

1652 
__c⁄°
 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1664 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1665 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1668 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1669 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1671  (
__ªs
 - 1Ë- 
__s
;

1672 
	}
}

1674 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1675 #ifde‡
__PIC__


1677 
__STRING_INLINE
 
size_t


1678 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1680 
__d0
, 
__d1
, 
__d2
;

1681 
__c⁄°
 *
__ªs
;

1682 
__asm__
 
__vﬁ©ûe__


1698 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1699 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1701  (
__ªs
 - 1Ë- 
__s
;

1702 
	}
}

1704 
__STRING_INLINE
 
size_t


1705 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1707 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1708 
__c⁄°
 *
__ªs
;

1709 
__asm__
 
__vﬁ©ûe__


1723 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1724 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1726  (
__ªs
 - 1Ë- 
__s
;

1727 
	}
}

1732 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1733 
	#°Ωbrk
(
s
, 
ac˚±
) \

1734 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1735 ? ((
ac˚±
)[0] == '\0' \

1736 ? ((Ë(
s
), (*) 0) \

1737 : ((
ac˚±
)[1] == '\0' \

1738 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1739 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1740 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1742 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1743 
size_t
 
__ac˚±_Àn
);

1745 
__STRING_INLINE
 *

1746 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1748 
__d0
, 
__d1
, 
__d2
;

1749 *
__ªs
;

1750 
__asm__
 
__vﬁ©ûe__


1765 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1766 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1768  
__ªs
;

1769 
	}
}

1771 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1772 #ifde‡
__PIC__


1774 
__STRING_INLINE
 *

1775 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1777 
__d0
, 
__d1
, 
__d2
;

1778 *
__ªs
;

1779 
__asm__
 
__vﬁ©ûe__


1800 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1801 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1803  
__ªs
;

1804 
	}
}

1806 
__STRING_INLINE
 *

1807 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1809 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1810 *
__ªs
;

1811 
__asm__
 
__vﬁ©ûe__


1830 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1831 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1833  
__ªs
;

1834 
	}
}

1839 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1840 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1841 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1842 ? ((
√edÀ
)[0] == '\0' \

1843 ? (
hay°ack
) \

1844 : ((
√edÀ
)[1] == '\0' \

1845 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1846 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1847 
	`°æí
 (
√edÀ
)))) \

1848 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1852 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1853 
size_t
 
__√edÀ_Àn
);

1855 
__STRING_INLINE
 *

1856 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1857 
size_t
 
__√edÀ_Àn
)

1859 
__d0
, 
__d1
, 
__d2
;

1860 *
__ªs
;

1861 
__asm__
 
__vﬁ©ûe__


1874 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1875 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1877  
__ªs
;

1878 
	}
}

1880 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1881 #ifde‡
__PIC__


1883 
__STRING_INLINE
 *

1884 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1886 
__d0
, 
__d1
, 
__d2
;

1887 *
__ªs
;

1888 
__asm__
 
__vﬁ©ûe__


1907 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1908 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1909 "d" (
__√edÀ
)

1911  
__ªs
;

1912 
	}
}

1914 
__STRING_INLINE
 *

1915 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1917 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1918 *
__ªs
;

1919 
__asm__
 
__vﬁ©ûe__


1936 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1937 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1938 "b" (
__√edÀ
)

1940  
__ªs
;

1941 
	}
}

1947 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1948 #ifde‡
__i686__


1949 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1950 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1951 ? 
	`__buûtö_ffs
 (
w‹d
) \

1952 : ({ 
__˙t
, 
__tmp
; \

1953 
__asm__
 
__vﬁ©ûe__
 \

1956 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1957 : "rm" (
w‹d
), "1" (-1)); \

1958 
__˙t
 + 1; }))

	)

1960 #i‚de‡
ff¶


1961 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1966 #i‚de‡
_FORCE_INLINES


1967 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡!
__GNUC_PREREQ
 (4, 1)

287 #ifde‡
__GNUC_RH_RELEASE__


288 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


290 
	#__USE_FORTIFY_LEVEL
 0

	)

291 #ñi‡
_FORTIFY_SOURCE
 > 1

292 
	#__USE_FORTIFY_LEVEL
 2

	)

294 
	#__USE_FORTIFY_LEVEL
 1

	)

297 
	#__USE_FORTIFY_LEVEL
 0

	)

301 
	#__STDC_IEC_559__
 1

	)

302 
	#__STDC_IEC_559_COMPLEX__
 1

	)

305 
	#__STDC_ISO_10646__
 200009L

	)

313 #unde‡
__GNU_LIBRARY__


314 
	#__GNU_LIBRARY__
 6

	)

318 
	#__GLIBC__
 2

	)

319 
	#__GLIBC_MINOR__
 7

	)

321 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

322 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

325 #i‡
deföed
 
__GNUC__
 \

326 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

327 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

328 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

329 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

333 #i‚de‡
__ASSEMBLER__


334 #i‚de‡
_SYS_CDEFS_H


335 
	~<sys/cdefs.h
>

340 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


341 
	#__USE_LARGEFILE
 1

	)

342 
	#__USE_LARGEFILE64
 1

	)

348 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

349 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

350 && 
deföed
 
	g__exã∫_ölöe


351 
	#__USE_EXTERN_INLINES
 1

	)

359 
	~<gnu/°ubs.h
>

	@/usr/include/gc/gc.h

30 #i‚de‡
_GC_H


32 
	#_GC_H


	)

34 
	~"gc_c⁄fig_ma¸os.h
"

36 #ifde‡
__˝lu•lus


48 #i‚de‡
_WIN64


49 
	tGC_w‹d
;

50 
	tGC_sig√d_w‹d
;

55 
	tGC_w‹d
;

56 
	tGC_sig√d_w‹d
;

61 
GC_API
 
GC_w‹d
 
	gGC_gc_no
;

64 
GC_API
 
	gGC_∑øŒñ
;

77 
GC_API
 * (*
	gGC_oom_‚
Ë(
size_t
 
	gbyãs_ªque°ed
);

86 
GC_API
 
	gGC_föd_Àak
;

92 
GC_API
 
	gGC_Æl_öãri‹_poöãrs
;

104 
GC_API
 
	gGC_föÆize_⁄_dem™d
;

111 
GC_API
 
	gGC_java_föÆiz©i⁄
;

120 
GC_API
 (* 
	gGC_föÆizî_nŸifõr
)();

129 
GC_API
 
	gGC_d⁄t_gc
;

138 
GC_API
 
	gGC_d⁄t_ex∑nd
;

142 
GC_API
 
	gGC_u£_ítúe_hóp
;

153 
GC_API
 
	gGC_fuŒ_‰eq
;

163 
GC_API
 
GC_w‹d
 
	gGC_n⁄_gc_byãs
;

169 
GC_API
 
	gGC_no_dls
;

177 
GC_API
 
GC_w‹d
 
	gGC_‰ì_•a˚_divis‹
;

191 
GC_API
 
GC_w‹d
 
	gGC_max_ªåõs
;

197 
GC_API
 *
	gGC_°ackbŸtom
;

209 
GC_API
 
	gGC_d⁄t_¥ecﬁÀ˘
;

217 
GC_API
 
	gGC_time_limô
;

226 
	#GC_TIME_UNLIMITED
 999999

	)

239 
GC_API
 
GC_öô
();

257 
GC_API
 * 
GC_mÆloc
(
size_t
 
size_ö_byãs
);

258 
GC_API
 * 
GC_mÆloc_©omic
(
size_t
 
size_ö_byãs
);

259 
GC_API
 * 
GC_°rdup
 (c⁄° *
°r
);

260 
GC_API
 * 
GC_mÆloc_uncﬁÀ˘abÀ
(
size_t
 
size_ö_byãs
);

261 
GC_API
 * 
GC_mÆloc_°ubb‹n
(
size_t
 
size_ö_byãs
);

265 
GC_API
 * 
GC_mÆloc_©omic_uncﬁÀ˘abÀ
(
size_t
 
size_ö_byãs
);

273 
GC_API
 
GC_‰ì
(* 
obje˘_addr
);

290 
GC_API
 
GC_ch™ge_°ubb‹n
(*);

291 
GC_API
 
GC_íd_°ubb‹n_ch™ge
(*);

304 
GC_API
 * 
GC_ba£
(* 
di•œ˚d_poöãr
);

309 
GC_API
 
size_t
 
GC_size
(* 
obje˘_addr
);

319 
GC_API
 * 
GC_ªÆloc
(* 
ﬁd_obje˘
, 
size_t
 
√w_size_ö_byãs
);

323 
GC_API
 
GC_ex∑nd_hp
(
size_t
 
numbî_of_byãs
);

328 
GC_API
 
GC_£t_max_hóp_size
(
GC_w‹d
 
n
);

335 
GC_API
 
GC_ex˛ude_°©ic_roŸs
(* 
low_addªss
,

336 * 
high_addªss_∂us_1
);

339 
GC_API
 
GC_˛ór_roŸs
();

342 
GC_API
 
GC_add_roŸs
(* 
low_addªss
, * 
high_addªss_∂us_1
);

345 
GC_API
 
GC_ªmove_roŸs
(* 
low_addªss
, * 
high_addªss_∂us_1
);

359 
GC_API
 
GC_ªgi°î_di•œ˚mít
(
size_t
 
n
);

363 
GC_API
 
GC_debug_ªgi°î_di•œ˚mít
(
size_t
 
n
);

366 
GC_API
 
GC_gcﬁÀ˘
();

377 (* 
	gGC_°›_func
)();

378 
GC_API
 
GC_åy_to_cﬁÀ˘
(
GC_°›_func
 
°›_func
);

383 
GC_API
 
size_t
 
GC_gë_hóp_size
();

386 
GC_API
 
size_t
 
GC_gë_‰ì_byãs
();

389 
GC_API
 
size_t
 
GC_gë_byãs_sö˚_gc
();

393 
GC_API
 
size_t
 
GC_gë_tŸÆ_byãs
();

397 
GC_API
 
GC_dißbÀ
();

402 
GC_API
 
GC_íabÀ
();

419 
GC_API
 
GC_íabÀ_ö¸emíèl
();

423 
	#GC_PROTECTS_POINTER_HEAP
 1

	)

424 
	#GC_PROTECTS_PTRFREE_HEAP
 2

	)

425 
	#GC_PROTECTS_STATIC_DATA
 4

	)

426 
	#GC_PROTECTS_STACK
 8

	)

428 
	#GC_PROTECTS_NONE
 0

	)

429 
GC_API
 
GC_ö¸emíèl_¥Ÿe˘i⁄_√eds
();

438 
GC_API
 
GC_cﬁÀ˘_a_lôée
();

454 
GC_API
 * 
GC_mÆloc_ign‹e_off_∑ge
(
size_t
 
lb
);

455 
GC_API
 * 
GC_mÆloc_©omic_ign‹e_off_∑ge
(
size_t
 
lb
);

457 #i‡
deföed
(
__sgi
Ë&& !deföed(
__GNUC__
Ë&& 
_COMPILER_VERSION
 >= 720

458 
	#GC_ADD_CALLER


	)

459 
	#GC_RETURN_ADDR
 (
GC_w‹d
)
__ªtu∫_addªss


	)

462 #i‡
deföed
(
__löux__
Ë|| deföed(
__GLIBC__
)

463 
	~<„©uªs.h
>

464 #i‡(
__GLIBC__
 =2 && 
__GLIBC_MINOR__
 >= 1 || __GLIBC__ > 2) \

465 && !
deföed
(
__ü64__
)

466 #i‚de‡
GC_HAVE_BUILTIN_BACKTRACE


467 
	#GC_HAVE_BUILTIN_BACKTRACE


	)

470 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

471 
	#GC_CAN_SAVE_CALL_STACKS


	)

475 #i‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200 \

476 && !
deföed
(
_AMD64_
)

477 #i‚de‡
GC_HAVE_NO_BUILTIN_BACKTRACE


478 
	#GC_HAVE_BUILTIN_BACKTRACE


	)

482 #i‡
deföed
(
GC_HAVE_BUILTIN_BACKTRACE
Ë&& !deföed(
GC_CAN_SAVE_CALL_STACKS
)

483 
	#GC_CAN_SAVE_CALL_STACKS


	)

486 #i‡
deföed
(
__•¨c__
)

487 
	#GC_CAN_SAVE_CALL_STACKS


	)

497 #i‡(
deföed
(
__löux__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__O≥nBSD__
) \

498 || 
deföed
(
__FªeBSD__
Ë|| deföed(
__Døg⁄Fly__
)Ë& !deföed(
GC_CAN_SAVE_CALL_STACKS
)

499 
	#GC_ADD_CALLER


	)

500 #i‡
__GNUC__
 >3 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 95)

503 
	#GC_RETURN_ADDR
 (
GC_w‹d
)
	`__buûtö_ªtu∫_addªss
(0)

	)

506 
	#GC_RETURN_ADDR
 0

	)

510 #ifde‡
GC_ADD_CALLER


511 
	#GC_EXTRAS
 
GC_RETURN_ADDR
, 
__FILE__
, 
__LINE__


	)

512 
	#GC_EXTRA_PARAMS
 
GC_w‹d
 
ø
, c⁄° * 
s
, 
i


	)

514 
	#GC_EXTRAS
 
__FILE__
, 
__LINE__


	)

515 
	#GC_EXTRA_PARAMS
 c⁄° * 
s
, 
i


	)

520 
GC_API
 * 
GC_debug_mÆloc
(
size_t
 
size_ö_byãs
, 
GC_EXTRA_PARAMS
);

521 
GC_API
 * 
GC_debug_mÆloc_©omic
(
size_t
 
size_ö_byãs
, 
GC_EXTRA_PARAMS
);

522 
GC_API
 * 
GC_debug_°rdup
(c⁄° *
°r
, 
GC_EXTRA_PARAMS
);

523 
GC_API
 * 
	gGC_debug_mÆloc_uncﬁÀ˘abÀ


524 (
size_t
 
	gsize_ö_byãs
, 
	gGC_EXTRA_PARAMS
);

525 
GC_API
 * 
	gGC_debug_mÆloc_°ubb‹n


526 (
size_t
 
	gsize_ö_byãs
, 
	gGC_EXTRA_PARAMS
);

527 
GC_API
 * 
	gGC_debug_mÆloc_ign‹e_off_∑ge


528 (
size_t
 
	gsize_ö_byãs
, 
	gGC_EXTRA_PARAMS
);

529 
GC_API
 * 
	gGC_debug_mÆloc_©omic_ign‹e_off_∑ge


530 (
size_t
 
	gsize_ö_byãs
, 
	gGC_EXTRA_PARAMS
);

531 
GC_API
 
GC_debug_‰ì
 (* 
obje˘_addr
);

532 
GC_API
 * 
	gGC_debug_ªÆloc


533 (* 
	gﬁd_obje˘
, 
size_t
 
	g√w_size_ö_byãs
, 
	gGC_EXTRA_PARAMS
);

534 
GC_API
 
GC_debug_ch™ge_°ubb‹n
(*);

535 
GC_API
 
GC_debug_íd_°ubb‹n_ch™ge
(*);

549 
GC_API
 * 
GC_debug_mÆloc_ª∂a˚mít
 (
size_t
 
size_ö_byãs
);

550 
GC_API
 * 
	gGC_debug_ªÆloc_ª∂a˚mít


551 (* 
	gobje˘_addr
, 
size_t
 
	gsize_ö_byãs
);

553 #ifde‡
GC_DEBUG


554 
	#GC_MALLOC
(
sz
Ë
	`GC_debug_mÆloc
(sz, 
GC_EXTRAS
)

	)

555 
	#GC_MALLOC_ATOMIC
(
sz
Ë
	`GC_debug_mÆloc_©omic
(sz, 
GC_EXTRAS
)

	)

556 
	#GC_STRDUP
(
s
Ë
	`GC_debug_°rdup
((s), 
GC_EXTRAS
)

	)

557 
	#GC_MALLOC_UNCOLLECTABLE
(
sz
) \

558 
	`GC_debug_mÆloc_uncﬁÀ˘abÀ
(
sz
, 
GC_EXTRAS
)

	)

559 
	#GC_MALLOC_IGNORE_OFF_PAGE
(
sz
) \

560 
	`GC_debug_mÆloc_ign‹e_off_∑ge
(
sz
, 
GC_EXTRAS
)

	)

561 
	#GC_MALLOC_ATOMIC_IGNORE_OFF_PAGE
(
sz
) \

562 
	`GC_debug_mÆloc_©omic_ign‹e_off_∑ge
(
sz
, 
GC_EXTRAS
)

	)

563 
	#GC_REALLOC
(
ﬁd
, 
sz
Ë
	`GC_debug_ªÆloc
(ﬁd, sz, 
GC_EXTRAS
)

	)

564 
	#GC_FREE
(
p
Ë
	`GC_debug_‰ì
’)

	)

565 
	#GC_REGISTER_FINALIZER
(
p
, 
f
, 
d
, 
of
, 
od
) \

566 
	`GC_debug_ªgi°î_föÆizî
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

567 
	#GC_REGISTER_FINALIZER_IGNORE_SELF
(
p
, 
f
, 
d
, 
of
, 
od
) \

568 
	`GC_debug_ªgi°î_föÆizî_ign‹e_£lf
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

569 
	#GC_REGISTER_FINALIZER_NO_ORDER
(
p
, 
f
, 
d
, 
of
, 
od
) \

570 
	`GC_debug_ªgi°î_föÆizî_no_‹dî
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

571 
	#GC_REGISTER_FINALIZER_UNREACHABLE
(
p
, 
f
, 
d
, 
of
, 
od
) \

572 
	`GC_debug_ªgi°î_föÆizî_uƒóchabÀ
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

573 
	#GC_MALLOC_STUBBORN
(
sz
Ë
	`GC_debug_mÆloc_°ubb‹n
(sz, 
GC_EXTRAS
);

	)

574 
	#GC_CHANGE_STUBBORN
(
p
Ë
	`GC_debug_ch™ge_°ubb‹n
’)

	)

575 
	#GC_END_STUBBORN_CHANGE
(
p
Ë
	`GC_debug_íd_°ubb‹n_ch™ge
’)

	)

576 
	#GC_GENERAL_REGISTER_DISAPPEARING_LINK
(
lök
, 
obj
) \

577 
	`GC_gíîÆ_ªgi°î_dißµórög_lök
(
lök
, 
	`GC_ba£
(
obj
))

	)

578 
	#GC_REGISTER_DISPLACEMENT
(
n
Ë
	`GC_debug_ªgi°î_di•œ˚mít
“)

	)

580 
	#GC_MALLOC
(
sz
Ë
	`GC_mÆloc
(sz)

	)

581 
	#GC_MALLOC_ATOMIC
(
sz
Ë
	`GC_mÆloc_©omic
(sz)

	)

582 
	#GC_STRDUP
(
s
Ë
	`GC_°rdup
(s)

	)

583 
	#GC_MALLOC_UNCOLLECTABLE
(
sz
Ë
	`GC_mÆloc_uncﬁÀ˘abÀ
(sz)

	)

584 
	#GC_MALLOC_IGNORE_OFF_PAGE
(
sz
) \

585 
	`GC_mÆloc_ign‹e_off_∑ge
(
sz
)

	)

586 
	#GC_MALLOC_ATOMIC_IGNORE_OFF_PAGE
(
sz
) \

587 
	`GC_mÆloc_©omic_ign‹e_off_∑ge
(
sz
)

	)

588 
	#GC_REALLOC
(
ﬁd
, 
sz
Ë
	`GC_ªÆloc
(ﬁd, sz)

	)

589 
	#GC_FREE
(
p
Ë
	`GC_‰ì
’)

	)

590 
	#GC_REGISTER_FINALIZER
(
p
, 
f
, 
d
, 
of
, 
od
) \

591 
	`GC_ªgi°î_föÆizî
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

592 
	#GC_REGISTER_FINALIZER_IGNORE_SELF
(
p
, 
f
, 
d
, 
of
, 
od
) \

593 
	`GC_ªgi°î_föÆizî_ign‹e_£lf
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

594 
	#GC_REGISTER_FINALIZER_NO_ORDER
(
p
, 
f
, 
d
, 
of
, 
od
) \

595 
	`GC_ªgi°î_föÆizî_no_‹dî
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

596 
	#GC_REGISTER_FINALIZER_UNREACHABLE
(
p
, 
f
, 
d
, 
of
, 
od
) \

597 
	`GC_ªgi°î_föÆizî_uƒóchabÀ
(
p
, 
f
, 
d
, 
of
, 
od
)

	)

598 
	#GC_MALLOC_STUBBORN
(
sz
Ë
	`GC_mÆloc_°ubb‹n
(sz)

	)

599 
	#GC_CHANGE_STUBBORN
(
p
Ë
	`GC_ch™ge_°ubb‹n
’)

	)

600 
	#GC_END_STUBBORN_CHANGE
(
p
Ë
	`GC_íd_°ubb‹n_ch™ge
’)

	)

601 
	#GC_GENERAL_REGISTER_DISAPPEARING_LINK
(
lök
, 
obj
) \

602 
	`GC_gíîÆ_ªgi°î_dißµórög_lök
(
lök
, 
obj
)

	)

603 
	#GC_REGISTER_DISPLACEMENT
(
n
Ë
	`GC_ªgi°î_di•œ˚mít
“)

	)

609 
	#GC_NEW
(
t
Ë— *)
	`GC_MALLOC
( (t))

	)

610 
	#GC_NEW_ATOMIC
(
t
Ë— *)
	`GC_MALLOC_ATOMIC
( (t))

	)

611 
	#GC_NEW_STUBBORN
(
t
Ë— *)
	`GC_MALLOC_STUBBORN
( (t))

	)

612 
	#GC_NEW_UNCOLLECTABLE
(
t
Ë— *)
	`GC_MALLOC_UNCOLLECTABLE
( (t))

	)

621 (*
	gGC_föÆiz©i⁄_¥oc
Ë(* 
	tobj
, * 
	t˛õ¡_d©a
);

623 
GC_API
 
GC_ªgi°î_föÆizî
(* 
obj
, 
GC_föÆiz©i⁄_¥oc
 
‚
,

624 * 
cd
, 
GC_föÆiz©i⁄_¥oc
 *
o‚
,

625 * *
ocd
);

626 
GC_API
 
	gGC_debug_ªgi°î_föÆizî


627 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

628 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

671 
GC_API
 
	gGC_ªgi°î_föÆizî_ign‹e_£lf


672 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

673 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

674 
GC_API
 
	gGC_debug_ªgi°î_föÆizî_ign‹e_£lf


675 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

676 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

682 
GC_API
 
	gGC_ªgi°î_föÆizî_no_‹dî


683 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

684 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

685 
GC_API
 
	gGC_debug_ªgi°î_föÆizî_no_‹dî


686 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

687 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

705 
GC_API
 
	gGC_ªgi°î_föÆizî_uƒóchabÀ


706 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

707 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

708 
GC_API
 
	gGC_debug_ªgi°î_föÆizî_uƒóchabÀ


709 (* 
	gobj
, 
GC_föÆiz©i⁄_¥oc
 
	g‚
, * 
	gcd
,

710 
GC_föÆiz©i⁄_¥oc
 *
	go‚
, * *
	gocd
);

719 
GC_API
 
GC_ªgi°î_dißµórög_lök
(* * 
lök
 );

739 
GC_API
 
GC_gíîÆ_ªgi°î_dißµórög_lök
 (* * 
lök
, * 
obj
);

766 
GC_API
 
GC_uƒegi°î_dißµórög_lök
 (* * 
lök
);

772 
GC_API
 
GC_should_övoke_föÆizîs
();

774 
GC_API
 
GC_övoke_föÆizîs
();

791 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__INTEL_COMPILER
)

792 
	#GC_ªachabÀ_hîe
(
±r
) \

793 
__asm__
 vﬁ©ûe(" " : : "X"(
±r
Ë: "mem‹y");

	)

795 
GC_API
 
GC_no›1
(
GC_w‹d
 
x
);

796 
	#GC_ªachabÀ_hîe
(
±r
Ë
	`GC_no›1
((
GC_w‹d
)’å));

	)

801 (*
	gGC_w¨n_¥oc
Ë(*
	tmsg
, 
	tGC_w‹d
 
	t¨g
);

802 
GC_API
 
GC_w¨n_¥oc
 
GC_£t_w¨n_¥oc
(GC_w¨n_¥o¯
p
);

805 
GC_API
 
GC_w‹d
 
GC_£t_‰ì_•a˚_divis‹
(GC_w‹d 
vÆue
);

817 #i‡
deföed
(
I_HIDE_POINTERS
Ë|| deföed(
GC_I_HIDE_POINTERS
)

818 
GC_w‹d
 
	tGC_hiddí_poöãr
;

819 
	#HIDE_POINTER
(
p
Ë(~(
GC_hiddí_poöãr
)’))

	)

820 
	#REVEAL_POINTER
(
p
Ë((*)(
	`HIDE_POINTER
’)))

	)

826 * (*
	tGC_‚_ty≥
Ë(* 
	t˛õ¡_d©a
);

827 
GC_API
 * 
GC_ˇŒ_wôh_Æloc_lock
 (
GC_‚_ty≥
 
‚
, * 
˛õ¡_d©a
);

841 
	sGC_°ack_ba£
 {

842 * 
	gmem_ba£
;

843 #i‡
deföed
(
__ü64
Ë|| deföed(
__ü64__
)

844 * 
	gªg_ba£
;

848 * (*
	tGC_°ack_ba£_func
)(
	tGC_°ack_ba£
 *
	tsb
, *
	t¨g
);

854 * 
GC_ˇŒ_wôh_°ack_ba£
(
GC_°ack_ba£_func
 
‚
, *
¨g
);

863 
	#GC_SUCCESS
 0

	)

864 
	#GC_DUPLICATE
 1

	)

865 
	#GC_NO_THREADS
 2

	)

866 
	#GC_UNIMPLEMENTED
 3

	)

867 
GC_ªgi°î_my_thªad
(
GC_°ack_ba£
 *);

876 
GC_uƒegi°î_my_thªad
();

884 
GC_gë_°ack_ba£
(
GC_°ack_ba£
 *);

895 
GC_API
 * 
GC_ßme_obj
 (* 
p
, * 
q
);

901 
GC_API
 * 
GC_¥e_ö¸
 (* *
p
, 
size_t
 
how_much
);

902 
GC_API
 * 
GC_po°_ö¸
 (* *
p
, 
size_t
 
how_much
);

912 
GC_API
 * 
GC_is_visibÀ
 (* 
p
);

919 
GC_API
 * 
GC_is_vÆid_di•œ˚mít
 (* 
p
);

924 
GC_dump
();

928 #ifde‡
GC_DEBUG


929 
	#GC_PTR_ADD3
(
x
, 
n
, 
ty≥_of_ªsu…
) \

930 ((
ty≥_of_ªsu…
)
	`GC_ßme_obj
((
x
)+(
n
), (x)))

	)

931 
	#GC_PRE_INCR3
(
x
, 
n
, 
ty≥_of_ªsu…
) \

932 ((
ty≥_of_ªsu…
)
	`GC_¥e_ö¸
(&(
x
), (
n
)*(*x))

	)

933 
	#GC_POST_INCR2
(
x
, 
ty≥_of_ªsu…
) \

934 ((
ty≥_of_ªsu…
)
	`GC_po°_ö¸
(&(
x
), (*x))

	)

935 #ifde‡
__GNUC__


936 
	#GC_PTR_ADD
(
x
, 
n
) \

937 
	`GC_PTR_ADD3
(
x
, 
n
, 
	`ty≥of
(x))

	)

938 
	#GC_PRE_INCR
(
x
, 
n
) \

939 
	`GC_PRE_INCR3
(
x
, 
n
, 
	`ty≥of
(x))

	)

940 
	#GC_POST_INCR
(
x
, 
n
) \

941 
	`GC_POST_INCR3
(
x
, 
	`ty≥of
(x))

	)

947 
	#GC_PTR_ADD
(
x
, 
n
Ë((x)+“))

	)

950 
	#GC_PTR_ADD3
(
x
, 
n
, 
ty≥_of_ªsu…
Ë((x)+“))

	)

951 
	#GC_PTR_ADD
(
x
, 
n
Ë((x)+“))

	)

952 
	#GC_PRE_INCR3
(
x
, 
n
, 
ty≥_of_ªsu…
Ë((xË+“))

	)

953 
	#GC_PRE_INCR
(
x
, 
n
Ë((xË+“))

	)

954 
	#GC_POST_INCR2
(
x
, 
n
, 
ty≥_of_ªsu…
Ë((x)++)

	)

955 
	#GC_POST_INCR
(
x
, 
n
Ë((x)++)

	)

959 #ifde‡
GC_DEBUG


960 
	#GC_PTR_STORE
(
p
, 
q
) \

961 (*(**)
	`GC_is_visibÀ
(
p
Ë
	`GC_is_vÆid_di•œ˚mít
(
q
))

	)

963 
	#GC_PTR_STORE
(
p
, 
q
Ë*(’Ë(q))

	)

967 
GC_API
 (*
	gGC_ßme_obj_¥öt_¥oc
Ë(* 
	gp
, * 
	gq
);

969 
GC_API
 (*
	gGC_is_vÆid_di•œ˚mít_¥öt_¥oc
Ë(* 
	gp
);

971 
GC_API
 (*
	gGC_is_visibÀ_¥öt_¥oc
Ë(* 
	gp
);

977 #i‡!
deföed
(
GC_USE_LD_WRAP
) && \

978 (
deföed
(
GC_PTHREADS
Ë|| deföed(
GC_SOLARIS_THREADS
))

979 
	~"gc_±hªad_ªdúe˘s.h
"

982 #i‡
deföed
(
PCR
Ë|| deföed(
GC_SOLARIS_THREADS
) || \

983 
deföed
(
GC_PTHREADS
Ë|| deföed(
GC_WIN32_THREADS
)

990 * 
GC_mÆloc_m™y
(
size_t
 
lb
);

991 
	#GC_NEXT
(
p
Ë(*(* *)’)Ë

	)

993 
GC_thr_öô
();

1002 
GC_API
 

1003 
	gGC_ªgi°î_has_°©ic_roŸs_ˇŒback


1004 ((*
	gˇŒback
)(c⁄° *, *, 
	gsize_t
));

1007 #i‡
deföed
(
GC_WIN32_THREADS
Ë&& !deföed(
__CYGWIN32__
) \

1008 && !
deföed
(
__CYGWIN__
) \

1009 && !
deföed
(
GC_PTHREADS
)

1011 #ifde‡
__˝lu•lus


1015 
	~<wödows.h
>

1017 #ifde‡
__˝lu•lus


1035 
GC_API
 
HANDLE
 
WINAPI
 
GC_Cª©eThªad
(

1036 
LPSECURITY_ATTRIBUTES
 
ÕThªadAâribuãs
,

1037 
DWORD
 
dwSèckSize
, 
LPTHREAD_START_ROUTINE
 
ÕSèπAddªss
,

1038 
LPVOID
 
ÕP¨amëî
, 
DWORD
 
dwCª©i⁄Fœgs
, 
LPDWORD
 
ÕThªadId
 );

1041 
GC_API
 
uöçå_t
 
GC_begöthªadex
(

1042 *
£curôy
, 
°ack_size
,

1043 –
__°dˇŒ
 *
°¨t_addªss
 )( * ),

1044 *
¨gli°
, 
öôÊag
, *
thrdaddr
);

1046 
GC_API
 
GC_ídthªadex
(
ªtvÆ
);

1048 
GC_API
 
WINAPI
 
GC_ExôThªad
(
DWORD
 
dwExôCode
);

1050 #i‡
deföed
(
_WIN32_WCE
)

1055 
GC_API
 
WINAPI
 
GC_WöMaö
(

1056 
HINSTANCE
 
hIn°™˚
,

1057 
HINSTANCE
 
hPªvIn°™˚
,

1058 
LPWSTR
 
ÕCmdLöe
,

1059 
nCmdShow
 );

1060 #i‚de‡
GC_BUILD


1061 
	#WöMaö
 
GC_WöMaö


	)

1068 
GC_API
 
GC_u£_DŒMaö
();

1070 
	#Cª©eThªad
 
GC_Cª©eThªad


	)

1071 
	#ExôThªad
 
GC_ExôThªad


	)

1072 
	#_begöthªadex
 
GC_begöthªadex


	)

1073 
	#_ídthªadex
 
GC_ídthªadex


	)

1074 
	#_begöthªad
 { > "PÀa£ u£ _begöthªadex in°ód o‡_begöthªad" < }

	)

1086 #i‡
deföed
(
__CYGWIN32__
Ë|| deföed (
_AIX
)

1091 #ifde‡
__CYGWIN32__


1092 
_d©a_°¨t__
[];

1093 
_d©a_íd__
[];

1094 
_bss_°¨t__
[];

1095 
_bss_íd__
[];

1096 
	#GC_MAX
(
x
,
y
Ë((xË> (yË? (xË: (y))

	)

1097 
	#GC_MIN
(
x
,
y
Ë((xË< (yË? (xË: (y))

	)

1098 
	#GC_DATASTART
 ((*Ë
	`GC_MIN
(
_d©a_°¨t__
, 
_bss_°¨t__
))

	)

1099 
	#GC_DATAEND
 ((*Ë
	`GC_MAX
(
_d©a_íd__
, 
_bss_íd__
))

	)

1100 #i‡
deföed
(
GC_DLL
)

1101 
	#GC_INIT
(Ë{ 
	`GC_add_roŸs
(
GC_DATASTART
, 
GC_DATAEND
); \

1102 
	`GC_gcﬁÀ˘
(); }

	)

1105 
	#GC_INIT
(Ë{ 
	`GC_öô
(); }

	)

1108 #i‡
deföed
(
_AIX
)

1109 
_d©a
[], 
_íd
[];

1110 
	#GC_DATASTART
 ((*)((
ul⁄g
)
_d©a
))

	)

1111 
	#GC_DATAEND
 ((*)((
ul⁄g
)
_íd
))

	)

1112 
	#GC_INIT
(Ë{ 
	`GC_add_roŸs
(
GC_DATASTART
, 
GC_DATAEND
); }

	)

1115 
	#GC_INIT
(Ë{ 
	`GC_öô
(); }

	)

1118 #i‡!
deföed
(
_WIN32_WCE
) \

1119 && ((
deföed
(
_MSDOS
Ë|| deföed(
_MSC_VER
)Ë&& (
	g_M_IX86
 >= 300) \

1120 || 
deföed
(
_WIN32
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
__CYGWIN__
))

1123 
GC_API
 
GC_wö32_‰ì_hóp
 ();

1126 #i‡–
deföed
(
_AMIGA
Ë&& !deföed(
GC_AMIGA_MAKINGLIB
) )

1128 
	~"gc_amiga_ªdúe˘s.h
"

1131 #i‡
deföed
(
GC_REDIRECT_TO_LOCAL
Ë&& !deföed(
GC_LOCAL_ALLOC_H
)

1132 
	~"gc_loˇl_Æloc.h
"

1135 #ifde‡
__˝lu•lus


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/linux/i2c.h

26 #i‚de‡
_LINUX_I2C_H


27 
	#_LINUX_I2C_H


	)

29 
	~<löux/ty≥s.h
>

67 
	si2c_msg
 {

68 
__u16
 
	maddr
;

69 
__u16
 
	mÊags
;

70 
	#I2C_M_TEN
 0x0010

	)

71 
	#I2C_M_RD
 0x0001

	)

72 
	#I2C_M_NOSTART
 0x4000

	)

73 
	#I2C_M_REV_DIR_ADDR
 0x2000

	)

74 
	#I2C_M_IGNORE_NAK
 0x1000

	)

75 
	#I2C_M_NO_RD_ACK
 0x0800

	)

76 
	#I2C_M_RECV_LEN
 0x0400

	)

77 
__u16
 
	mÀn
;

78 
__u8
 *
	mbuf
;

83 
	#I2C_FUNC_I2C
 0x00000001

	)

84 
	#I2C_FUNC_10BIT_ADDR
 0x00000002

	)

85 
	#I2C_FUNC_PROTOCOL_MANGLING
 0x00000004

	)

86 
	#I2C_FUNC_SMBUS_PEC
 0x00000008

	)

87 
	#I2C_FUNC_SMBUS_BLOCK_PROC_CALL
 0x00008000

	)

88 
	#I2C_FUNC_SMBUS_QUICK
 0x00010000

	)

89 
	#I2C_FUNC_SMBUS_READ_BYTE
 0x00020000

	)

90 
	#I2C_FUNC_SMBUS_WRITE_BYTE
 0x00040000

	)

91 
	#I2C_FUNC_SMBUS_READ_BYTE_DATA
 0x00080000

	)

92 
	#I2C_FUNC_SMBUS_WRITE_BYTE_DATA
 0x00100000

	)

93 
	#I2C_FUNC_SMBUS_READ_WORD_DATA
 0x00200000

	)

94 
	#I2C_FUNC_SMBUS_WRITE_WORD_DATA
 0x00400000

	)

95 
	#I2C_FUNC_SMBUS_PROC_CALL
 0x00800000

	)

96 
	#I2C_FUNC_SMBUS_READ_BLOCK_DATA
 0x01000000

	)

97 
	#I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 0x02000000

	)

98 
	#I2C_FUNC_SMBUS_READ_I2C_BLOCK
 0x04000000

	)

99 
	#I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
 0x08000000

	)

100 
	#I2C_FUNC_SMBUS_READ_I2C_BLOCK_2
 0x10000000

	)

101 
	#I2C_FUNC_SMBUS_WRITE_I2C_BLOCK_2
 0x20000000

	)

103 
	#I2C_FUNC_SMBUS_BYTE
 (
I2C_FUNC_SMBUS_READ_BYTE
 | \

104 
I2C_FUNC_SMBUS_WRITE_BYTE
)

	)

105 
	#I2C_FUNC_SMBUS_BYTE_DATA
 (
I2C_FUNC_SMBUS_READ_BYTE_DATA
 | \

106 
I2C_FUNC_SMBUS_WRITE_BYTE_DATA
)

	)

107 
	#I2C_FUNC_SMBUS_WORD_DATA
 (
I2C_FUNC_SMBUS_READ_WORD_DATA
 | \

108 
I2C_FUNC_SMBUS_WRITE_WORD_DATA
)

	)

109 
	#I2C_FUNC_SMBUS_BLOCK_DATA
 (
I2C_FUNC_SMBUS_READ_BLOCK_DATA
 | \

110 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
)

	)

111 
	#I2C_FUNC_SMBUS_I2C_BLOCK
 (
I2C_FUNC_SMBUS_READ_I2C_BLOCK
 | \

112 
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
)

	)

113 
	#I2C_FUNC_SMBUS_I2C_BLOCK_2
 (
I2C_FUNC_SMBUS_READ_I2C_BLOCK_2
 | \

114 
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK_2
)

	)

116 
	#I2C_FUNC_SMBUS_EMUL
 (
I2C_FUNC_SMBUS_QUICK
 | \

117 
I2C_FUNC_SMBUS_BYTE
 | \

118 
I2C_FUNC_SMBUS_BYTE_DATA
 | \

119 
I2C_FUNC_SMBUS_WORD_DATA
 | \

120 
I2C_FUNC_SMBUS_PROC_CALL
 | \

121 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 | \

122 
I2C_FUNC_SMBUS_I2C_BLOCK
 | \

123 
I2C_FUNC_SMBUS_PEC
)

	)

128 
	#I2C_SMBUS_BLOCK_MAX
 32

	)

129 
	ui2c_smbus_d©a
 {

130 
__u8
 
	mbyã
;

131 
__u16
 
	mw‹d
;

132 
__u8
 
	mblock
[
I2C_SMBUS_BLOCK_MAX
 + 2];

137 
	#I2C_SMBUS_READ
 1

	)

138 
	#I2C_SMBUS_WRITE
 0

	)

142 
	#I2C_SMBUS_QUICK
 0

	)

143 
	#I2C_SMBUS_BYTE
 1

	)

144 
	#I2C_SMBUS_BYTE_DATA
 2

	)

145 
	#I2C_SMBUS_WORD_DATA
 3

	)

146 
	#I2C_SMBUS_PROC_CALL
 4

	)

147 
	#I2C_SMBUS_BLOCK_DATA
 5

	)

148 
	#I2C_SMBUS_I2C_BLOCK_BROKEN
 6

	)

149 
	#I2C_SMBUS_BLOCK_PROC_CALL
 7

	)

150 
	#I2C_SMBUS_I2C_BLOCK_DATA
 8

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/nl_types.h

19 #i‚de‡
_NL_TYPES_H


20 
	#_NL_TYPES_H
 1

	)

22 
	~<„©uªs.h
>

25 
	#NL_SETD
 1

	)

28 
	#NL_CAT_LOCALE
 1

	)

31 
__BEGIN_DECLS


34 *
	t∆_ˇtd
;

37 
	t∆_ôem
;

43 
∆_ˇtd
 
	$ˇt›í
 (
__c⁄°
 *
__ˇt_«me
, 
__Êag
Ë
	`__n⁄nuŒ
 ((1));

47 *
	$ˇtgës
 (
∆_ˇtd
 
__ˇèlog
, 
__£t
, 
__numbî
,

48 
__c⁄°
 *
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

51 
	$ˇt˛o£
 (
∆_ˇtd
 
__ˇèlog
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

53 
__END_DECLS


	@/usr/include/openssl/asn1.h

59 #i‚de‡
HEADER_ASN1_H


60 
	#HEADER_ASN1_H


	)

62 
	~<time.h
>

63 
	~<›ís¶/e_os2.h
>

64 #i‚de‡
OPENSSL_NO_BIO


65 
	~<›ís¶/bio.h
>

67 
	~<›ís¶/°ack.h
>

68 
	~<›ís¶/ß„°ack.h
>

70 
	~<›ís¶/symhacks.h
>

72 
	~<›ís¶/os¶_typ.h
>

73 #i‚de‡
OPENSSL_NO_DEPRECATED


74 
	~<›ís¶/bn.h
>

77 #ifde‡
OPENSSL_BUILD_SHLIBCRYPTO


78 #unde‡
OPENSSL_EXTERN


79 
	#OPENSSL_EXTERN
 
OPENSSL_EXPORT


	)

82 #ifde‡ 
__˝lu•lus


86 
	#V_ASN1_UNIVERSAL
 0x00

	)

87 
	#V_ASN1_APPLICATION
 0x40

	)

88 
	#V_ASN1_CONTEXT_SPECIFIC
 0x80

	)

89 
	#V_ASN1_PRIVATE
 0xc0

	)

91 
	#V_ASN1_CONSTRUCTED
 0x20

	)

92 
	#V_ASN1_PRIMITIVE_TAG
 0x1f

	)

93 
	#V_ASN1_PRIMATIVE_TAG
 0x1f

	)

95 
	#V_ASN1_APP_CHOOSE
 -2

	)

96 
	#V_ASN1_OTHER
 -3

	)

97 
	#V_ASN1_ANY
 -4

	)

99 
	#V_ASN1_NEG
 0x100

	)

101 
	#V_ASN1_UNDEF
 -1

	)

102 
	#V_ASN1_EOC
 0

	)

103 
	#V_ASN1_BOOLEAN
 1

	)

104 
	#V_ASN1_INTEGER
 2

	)

105 
	#V_ASN1_NEG_INTEGER
 (2 | 
V_ASN1_NEG
)

	)

106 
	#V_ASN1_BIT_STRING
 3

	)

107 
	#V_ASN1_OCTET_STRING
 4

	)

108 
	#V_ASN1_NULL
 5

	)

109 
	#V_ASN1_OBJECT
 6

	)

110 
	#V_ASN1_OBJECT_DESCRIPTOR
 7

	)

111 
	#V_ASN1_EXTERNAL
 8

	)

112 
	#V_ASN1_REAL
 9

	)

113 
	#V_ASN1_ENUMERATED
 10

	)

114 
	#V_ASN1_NEG_ENUMERATED
 (10 | 
V_ASN1_NEG
)

	)

115 
	#V_ASN1_UTF8STRING
 12

	)

116 
	#V_ASN1_SEQUENCE
 16

	)

117 
	#V_ASN1_SET
 17

	)

118 
	#V_ASN1_NUMERICSTRING
 18

	)

119 
	#V_ASN1_PRINTABLESTRING
 19

	)

120 
	#V_ASN1_T61STRING
 20

	)

121 
	#V_ASN1_TELETEXSTRING
 20

	)

122 
	#V_ASN1_VIDEOTEXSTRING
 21

	)

123 
	#V_ASN1_IA5STRING
 22

	)

124 
	#V_ASN1_UTCTIME
 23

	)

125 
	#V_ASN1_GENERALIZEDTIME
 24

	)

126 
	#V_ASN1_GRAPHICSTRING
 25

	)

127 
	#V_ASN1_ISO64STRING
 26

	)

128 
	#V_ASN1_VISIBLESTRING
 26

	)

129 
	#V_ASN1_GENERALSTRING
 27

	)

130 
	#V_ASN1_UNIVERSALSTRING
 28

	)

131 
	#V_ASN1_BMPSTRING
 30

	)

134 
	#B_ASN1_NUMERICSTRING
 0x0001

	)

135 
	#B_ASN1_PRINTABLESTRING
 0x0002

	)

136 
	#B_ASN1_T61STRING
 0x0004

	)

137 
	#B_ASN1_TELETEXSTRING
 0x0004

	)

138 
	#B_ASN1_VIDEOTEXSTRING
 0x0008

	)

139 
	#B_ASN1_IA5STRING
 0x0010

	)

140 
	#B_ASN1_GRAPHICSTRING
 0x0020

	)

141 
	#B_ASN1_ISO64STRING
 0x0040

	)

142 
	#B_ASN1_VISIBLESTRING
 0x0040

	)

143 
	#B_ASN1_GENERALSTRING
 0x0080

	)

144 
	#B_ASN1_UNIVERSALSTRING
 0x0100

	)

145 
	#B_ASN1_OCTET_STRING
 0x0200

	)

146 
	#B_ASN1_BIT_STRING
 0x0400

	)

147 
	#B_ASN1_BMPSTRING
 0x0800

	)

148 
	#B_ASN1_UNKNOWN
 0x1000

	)

149 
	#B_ASN1_UTF8STRING
 0x2000

	)

150 
	#B_ASN1_UTCTIME
 0x4000

	)

151 
	#B_ASN1_GENERALIZEDTIME
 0x8000

	)

152 
	#B_ASN1_SEQUENCE
 0x10000

	)

155 
	#MBSTRING_FLAG
 0x1000

	)

156 
	#MBSTRING_UTF8
 (
MBSTRING_FLAG
)

	)

157 
	#MBSTRING_ASC
 (
MBSTRING_FLAG
|1)

	)

158 
	#MBSTRING_BMP
 (
MBSTRING_FLAG
|2)

	)

159 
	#MBSTRING_UNIV
 (
MBSTRING_FLAG
|4)

	)

161 
X509_Æg‹_°
;

163 
	#DECLARE_ASN1_SET_OF
(
ty≥
Ë

	)

164 
	#IMPLEMENT_ASN1_SET_OF
(
ty≥
Ë

	)

170 
	sa¢1_˘x_°


172 *
p
;

173 
eos
;

174 
îr‹
;

175 
öf
;

176 
èg
;

177 
x˛ass
;

178 
¶í
;

179 *
max
;

180 *
q
;

181 **
µ
;

182 
löe
;

183 } 
	tASN1_CTX
;

185 
	sa¢1_c⁄°_˘x_°


187 c⁄° *
p
;

188 
eos
;

189 
îr‹
;

190 
öf
;

191 
èg
;

192 
x˛ass
;

193 
¶í
;

194 c⁄° *
max
;

195 c⁄° *
q
;

196 c⁄° **
µ
;

197 
löe
;

198 } 
	tASN1_c⁄°_CTX
;

202 
	#ASN1_OBJECT_FLAG_DYNAMIC
 0x01

	)

203 
	#ASN1_OBJECT_FLAG_CRITICAL
 0x02

	)

204 
	#ASN1_OBJECT_FLAG_DYNAMIC_STRINGS
 0x04

	)

205 
	#ASN1_OBJECT_FLAG_DYNAMIC_DATA
 0x08

	)

206 
	sa¢1_obje˘_°


208 c⁄° *
¢
,*
 
;

209 
nid
;

210 
Àngth
;

211 *
d©a
;

212 
Êags
;

213 } 
	tASN1_OBJECT
;

215 
	#ASN1_STRING_FLAG_BITS_LEFT
 0x08

	)

220 
	#ASN1_STRING_FLAG_NDEF
 0x010

	)

222 
	sa¢1_°rög_°


224 
Àngth
;

225 
ty≥
;

226 *
d©a
;

231 
Êags
;

232 } 
	tASN1_STRING
;

239 
	sASN1_ENCODING_°


241 *
íc
;

242 
Àn
;

243 
modifõd
;

244 } 
	tASN1_ENCODING
;

247 
	#ASN1_LONG_UNDEF
 0x7fffffffL

	)

249 
	#STABLE_FLAGS_MALLOC
 0x01

	)

250 
	#STABLE_NO_MASK
 0x02

	)

251 
	#DIRSTRING_TYPE
 \

252 (
B_ASN1_PRINTABLESTRING
|
B_ASN1_T61STRING
|
B_ASN1_BMPSTRING
|
B_ASN1_UTF8STRING
)

	)

253 
	#PKCS9STRING_TYPE
 (
DIRSTRING_TYPE
|
B_ASN1_IA5STRING
)

	)

255 
	sa¢1_°rög_èbÀ_°
 {

256 
nid
;

257 
mösize
;

258 
maxsize
;

259 
mask
;

260 
Êags
;

261 } 
	tASN1_STRING_TABLE
;

263 
DECLARE_STACK_OF
(
ASN1_STRING_TABLE
)

267 
	#ub_«me
 32768

	)

268 
	#ub_comm⁄_«me
 64

	)

269 
	#ub_loˇlôy_«me
 128

	)

270 
	#ub_°©e_«me
 128

	)

271 
	#ub_‹g™iz©i⁄_«me
 64

	)

272 
	#ub_‹g™iz©i⁄_unô_«me
 64

	)

273 
	#ub_tôÀ
 64

	)

274 
	#ub_emaû_addªss
 128

	)

279 
ASN1_TEMPLATE_°
 
	tASN1_TEMPLATE
;

280 
ASN1_ITEM_°
 
	tASN1_ITEM
;

281 
ASN1_TLC_°
 
	tASN1_TLC
;

283 
ASN1_VALUE_°
 
	tASN1_VALUE
;

287 
	#DECLARE_ASN1_FUNCTIONS
(
ty≥
Ë
	`DECLARE_ASN1_FUNCTIONS_«me
—y≥,Åy≥)

	)

289 
	#DECLARE_ASN1_ALLOC_FUNCTIONS
(
ty≥
) \

290 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
,Åy≥)

	)

292 
	#DECLARE_ASN1_FUNCTIONS_«me
(
ty≥
, 
«me
) \

293 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

294 
	`DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
«me
,Çame)

	)

296 
	#DECLARE_ASN1_FUNCTIONS_‚ame
(
ty≥
, 
ô«me
, 
«me
) \

297 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

298 
	`DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
ô«me
, 
«me
)

	)

300 
	#DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
ô«me
, 
«me
) \

301 
ty≥
 *
d2i_
##
	`«me
—y≥ **
a
, c⁄° **
ö
, 
Àn
); \

302 
i2d_
##
	`«me
(
ty≥
 *
a
, **
out
); \

303 
	`DECLARE_ASN1_ITEM
(
ô«me
)

	)

305 
	#DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
ty≥
, 
«me
) \

306 
ty≥
 *
d2i_
##
	`«me
—y≥ **
a
, c⁄° **
ö
, 
Àn
); \

307 
i2d_
##
	`«me
(c⁄° 
ty≥
 *
a
, **
out
); \

308 
	`DECLARE_ASN1_ITEM
(
«me
)

	)

310 
	#DECLARE_ASN1_NDEF_FUNCTION
(
«me
) \

311 
i2d_
##
«me
##
	`_NDEF
“amê*
a
, **
out
);

	)

313 
	#DECLARE_ASN1_FUNCTIONS_c⁄°
(
«me
) \

314 
«me
 *«me##
	`_√w
(); \

315 
«me
##
	`_‰ì
“amê*
a
);

	)

317 
	#DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

318 
ty≥
 *
«me
##
	`_√w
(); \

319 
«me
##
	`_‰ì
(
ty≥
 *
a
);

	)

321 
	#D2I_OF
(
ty≥
Ëty≥ *(*)—y≥ **,c⁄° **,)

	)

322 
	#I2D_OF
(
ty≥
Ë(*)—y≥ *,**)

	)

323 
	#I2D_OF_c⁄°
(
ty≥
Ë(*)(c⁄°Åy≥ *,**)

	)

325 
	#TYPEDEF_D2I_OF
(
ty≥
Ëty≥ *
	td2i_of_
##
	tty≥
—y≥ **,c⁄° **,)

	)

326 
	tTYPEDEF_I2D_OF
(
	tty≥
Ë
	ti2d_of_
##ty≥—y≥ *,**)

	)

327 
	tTYPEDEF_D2I2D_OF
(
	tty≥
Ë
	tTYPEDEF_D2I_OF
—y≥); 
	`TYPEDEF_I2D_OF
(
ty≥
)

	)

329 
TYPEDEF_D2I2D_OF
();

366 #i‚de‡
OPENSSL_EXPORT_VAR_AS_FUNCTION


369 c⁄° 
	tASN1_ITEM
 
	tASN1_ITEM_EXP
;

372 
	#ASN1_ITEM_±r
(
ùå
Ë(ùå)

	)

375 
	#ASN1_ITEM_ªf
(
ùå
Ë(&(ùå##
_ô
))

	)

377 
	#ASN1_ITEM_Ωå
(
ªf
Ë(&‘ef##
_ô
))

	)

379 
	#DECLARE_ASN1_ITEM
(
«me
) \

380 
OPENSSL_EXTERN
 c⁄° 
ASN1_ITEM
 
«me
##
_ô
;

	)

389 c⁄° 
	tASN1_ITEM
 * 
	tASN1_ITEM_EXP
();

392 
	#ASN1_ITEM_±r
(
ùå
Ë(
	`ùå
())

	)

395 
	#ASN1_ITEM_ªf
(
ùå
Ë(ùå##
_ô
)

	)

397 
	#ASN1_ITEM_Ωå
(
ªf
Ë‘ef##
	`_ô
())

	)

399 
	#DECLARE_ASN1_ITEM
(
«me
) \

400 c⁄° 
ASN1_ITEM
 * 
«me
##
	`_ô
();

	)

411 
	#ASN1_STRFLGS_ESC_2253
 1

	)

412 
	#ASN1_STRFLGS_ESC_CTRL
 2

	)

413 
	#ASN1_STRFLGS_ESC_MSB
 4

	)

421 
	#ASN1_STRFLGS_ESC_QUOTE
 8

	)

427 
	#CHARTYPE_PRINTABLESTRING
 0x10

	)

429 
	#CHARTYPE_FIRST_ESC_2253
 0x20

	)

431 
	#CHARTYPE_LAST_ESC_2253
 0x40

	)

441 
	#ASN1_STRFLGS_UTF8_CONVERT
 0x10

	)

448 
	#ASN1_STRFLGS_IGNORE_TYPE
 0x20

	)

451 
	#ASN1_STRFLGS_SHOW_TYPE
 0x40

	)

461 
	#ASN1_STRFLGS_DUMP_ALL
 0x80

	)

462 
	#ASN1_STRFLGS_DUMP_UNKNOWN
 0x100

	)

469 
	#ASN1_STRFLGS_DUMP_DER
 0x200

	)

476 
	#ASN1_STRFLGS_RFC2253
 (
ASN1_STRFLGS_ESC_2253
 | \

477 
ASN1_STRFLGS_ESC_CTRL
 | \

478 
ASN1_STRFLGS_ESC_MSB
 | \

479 
ASN1_STRFLGS_UTF8_CONVERT
 | \

480 
ASN1_STRFLGS_DUMP_UNKNOWN
 | \

481 
ASN1_STRFLGS_DUMP_DER
)

	)

483 
DECLARE_STACK_OF
(
ASN1_INTEGER
)

484 
DECLARE_ASN1_SET_OF
(
ASN1_INTEGER
)

486 
DECLARE_STACK_OF
(
ASN1_GENERALSTRING
)

488 
	sa¢1_ty≥_°


490 
ty≥
;

492 *
±r
;

493 
ASN1_BOOLEAN
 
boﬁón
;

494 
ASN1_STRING
 * 
a¢1_°rög
;

495 
ASN1_OBJECT
 * 
obje˘
;

496 
ASN1_INTEGER
 * 
öãgî
;

497 
ASN1_ENUMERATED
 * 
íumî©ed
;

498 
ASN1_BIT_STRING
 * 
bô_°rög
;

499 
ASN1_OCTET_STRING
 * 
o˘ë_°rög
;

500 
ASN1_PRINTABLESTRING
 * 
¥öèbÀ°rög
;

501 
ASN1_T61STRING
 * 
t61°rög
;

502 
ASN1_IA5STRING
 * 
ü5°rög
;

503 
ASN1_GENERALSTRING
 * 
gíîÆ°rög
;

504 
ASN1_BMPSTRING
 * 
bmp°rög
;

505 
ASN1_UNIVERSALSTRING
 * 
univîßl°rög
;

506 
ASN1_UTCTIME
 * 
ut˘ime
;

507 
ASN1_GENERALIZEDTIME
 * 
gíîÆizedtime
;

508 
ASN1_VISIBLESTRING
 * 
visibÀ°rög
;

509 
ASN1_UTF8STRING
 * 
utf8°rög
;

512 
ASN1_STRING
 * 
£t
;

513 
ASN1_STRING
 * 
£quí˚
;

514 } 
vÆue
;

515 } 
	tASN1_TYPE
;

517 
DECLARE_STACK_OF
(
ASN1_TYPE
)

518 
DECLARE_ASN1_SET_OF
(
ASN1_TYPE
)

520 
	sa¢1_mëhod_°


522 
i2d_of_void
 *
i2d
;

523 
d2i_of_void
 *
d2i
;

524 *(*
¸óã
)();

525 (*
de°roy
)(*);

526 } 
	tASN1_METHOD
;

529 
	sa¢1_hódî_°


531 
ASN1_OCTET_STRING
 *
hódî
;

532 *
d©a
;

533 
ASN1_METHOD
 *
mëh
;

534 } 
	tASN1_HEADER
;

537 
	sBIT_STRING_BITNAME_°
 {

538 
bônum
;

539 c⁄° *
 ame
;

540 c⁄° *
¢ame
;

541 } 
	tBIT_STRING_BITNAME
;

544 
	#M_ASN1_STRING_Àngth
(
x
Ë((x)->
Àngth
)

	)

545 
	#M_ASN1_STRING_Àngth_£t
(
x
, 
n
Ë((x)->
Àngth
 = (n))

	)

546 
	#M_ASN1_STRING_ty≥
(
x
Ë((x)->
ty≥
)

	)

547 
	#M_ASN1_STRING_d©a
(
x
Ë((x)->
d©a
)

	)

550 
	#M_ASN1_BIT_STRING_√w
(Ë(
ASN1_BIT_STRING
 *)\

551 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_BIT_STRING
)

	)

552 
	#M_ASN1_BIT_STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

553 
	#M_ASN1_BIT_STRING_dup
(
a
Ë(
ASN1_BIT_STRING
 *)\

554 
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

555 
	#M_ASN1_BIT_STRING_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

556 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

557 
	#M_ASN1_BIT_STRING_£t
(
a
,
b
,
c
Ë
	`ASN1_STRING_£t
((
ASN1_STRING
 *Ô,b,c)

	)

559 
	#M_ASN1_INTEGER_√w
(Ë(
ASN1_INTEGER
 *)\

560 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_INTEGER
)

	)

561 
	#M_ASN1_INTEGER_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

562 
	#M_ASN1_INTEGER_dup
(
a
Ë(
ASN1_INTEGER
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

563 
	#M_ASN1_INTEGER_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

564 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

566 
	#M_ASN1_ENUMERATED_√w
(Ë(
ASN1_ENUMERATED
 *)\

567 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_ENUMERATED
)

	)

568 
	#M_ASN1_ENUMERATED_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

569 
	#M_ASN1_ENUMERATED_dup
(
a
Ë(
ASN1_ENUMERATED
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

570 
	#M_ASN1_ENUMERATED_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

571 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

573 
	#M_ASN1_OCTET_STRING_√w
(Ë(
ASN1_OCTET_STRING
 *)\

574 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_OCTET_STRING
)

	)

575 
	#M_ASN1_OCTET_STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

576 
	#M_ASN1_OCTET_STRING_dup
(
a
Ë(
ASN1_OCTET_STRING
 *)\

577 
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

578 
	#M_ASN1_OCTET_STRING_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

579 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

580 
	#M_ASN1_OCTET_STRING_£t
(
a
,
b
,
c
Ë
	`ASN1_STRING_£t
((
ASN1_STRING
 *Ô,b,c)

	)

581 
	#M_ASN1_OCTET_STRING_¥öt
(
a
,
b
Ë
	`ASN1_STRING_¥öt
◊,(
ASN1_STRING
 *)b)

	)

582 
	#M_i2d_ASN1_OCTET_STRING
(
a
,
µ
) \

583 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_OCTET_STRING
,\

584 
V_ASN1_UNIVERSAL
)

	)

586 
	#B_ASN1_TIME
 \

587 
B_ASN1_UTCTIME
 | \

588 
B_ASN1_GENERALIZEDTIME


	)

590 
	#B_ASN1_PRINTABLE
 \

591 
B_ASN1_PRINTABLESTRING
| \

592 
B_ASN1_T61STRING
| \

593 
B_ASN1_IA5STRING
| \

594 
B_ASN1_BIT_STRING
| \

595 
B_ASN1_UNIVERSALSTRING
|\

596 
B_ASN1_BMPSTRING
|\

597 
B_ASN1_UTF8STRING
|\

598 
B_ASN1_SEQUENCE
|\

599 
B_ASN1_UNKNOWN


	)

601 
	#B_ASN1_DIRECTORYSTRING
 \

602 
B_ASN1_PRINTABLESTRING
| \

603 
B_ASN1_TELETEXSTRING
|\

604 
B_ASN1_BMPSTRING
|\

605 
B_ASN1_UNIVERSALSTRING
|\

606 
B_ASN1_UTF8STRING


	)

608 
	#B_ASN1_DISPLAYTEXT
 \

609 
B_ASN1_IA5STRING
| \

610 
B_ASN1_VISIBLESTRING
| \

611 
B_ASN1_BMPSTRING
|\

612 
B_ASN1_UTF8STRING


	)

614 
	#M_ASN1_PRINTABLE_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_T61STRING
)

	)

615 
	#M_ASN1_PRINTABLE_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

616 
	#M_i2d_ASN1_PRINTABLE
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

617 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

618 
	#M_d2i_ASN1_PRINTABLE
(
a
,
µ
,
l
) \

619 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

620 
B_ASN1_PRINTABLE
)

	)

622 
	#M_DIRECTORYSTRING_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_PRINTABLESTRING
)

	)

623 
	#M_DIRECTORYSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

624 
	#M_i2d_DIRECTORYSTRING
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

625 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

626 
	#M_d2i_DIRECTORYSTRING
(
a
,
µ
,
l
) \

627 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

628 
B_ASN1_DIRECTORYSTRING
)

	)

630 
	#M_DISPLAYTEXT_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_VISIBLESTRING
)

	)

631 
	#M_DISPLAYTEXT_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

632 
	#M_i2d_DISPLAYTEXT
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

633 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

634 
	#M_d2i_DISPLAYTEXT
(
a
,
µ
,
l
) \

635 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

636 
B_ASN1_DISPLAYTEXT
)

	)

638 
	#M_ASN1_PRINTABLESTRING_√w
(Ë(
ASN1_PRINTABLESTRING
 *)\

639 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_PRINTABLESTRING
)

	)

640 
	#M_ASN1_PRINTABLESTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

641 
	#M_i2d_ASN1_PRINTABLESTRING
(
a
,
µ
) \

642 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_PRINTABLESTRING
,\

643 
V_ASN1_UNIVERSAL
)

	)

644 
	#M_d2i_ASN1_PRINTABLESTRING
(
a
,
µ
,
l
) \

645 (
ASN1_PRINTABLESTRING
 *)
d2i_ASN1_ty≥_byãs
\

646 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_PRINTABLESTRING
)

	)

648 
	#M_ASN1_T61STRING_√w
(Ë(
ASN1_T61STRING
 *)\

649 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_T61STRING
)

	)

650 
	#M_ASN1_T61STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

651 
	#M_i2d_ASN1_T61STRING
(
a
,
µ
) \

652 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_T61STRING
,\

653 
V_ASN1_UNIVERSAL
)

	)

654 
	#M_d2i_ASN1_T61STRING
(
a
,
µ
,
l
) \

655 (
ASN1_T61STRING
 *)
d2i_ASN1_ty≥_byãs
\

656 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_T61STRING
)

	)

658 
	#M_ASN1_IA5STRING_√w
(Ë(
ASN1_IA5STRING
 *)\

659 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_IA5STRING
)

	)

660 
	#M_ASN1_IA5STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

661 
	#M_ASN1_IA5STRING_dup
(
a
) \

662 (
ASN1_IA5STRING
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

663 
	#M_i2d_ASN1_IA5STRING
(
a
,
µ
) \

664 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_IA5STRING
,\

665 
V_ASN1_UNIVERSAL
)

	)

666 
	#M_d2i_ASN1_IA5STRING
(
a
,
µ
,
l
) \

667 (
ASN1_IA5STRING
 *)
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
,\

668 
B_ASN1_IA5STRING
)

	)

670 
	#M_ASN1_UTCTIME_√w
(Ë(
ASN1_UTCTIME
 *)\

671 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTCTIME
)

	)

672 
	#M_ASN1_UTCTIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

673 
	#M_ASN1_UTCTIME_dup
(
a
Ë(
ASN1_UTCTIME
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

675 
	#M_ASN1_GENERALIZEDTIME_√w
(Ë(
ASN1_GENERALIZEDTIME
 *)\

676 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_GENERALIZEDTIME
)

	)

677 
	#M_ASN1_GENERALIZEDTIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

678 
	#M_ASN1_GENERALIZEDTIME_dup
(
a
Ë(
ASN1_GENERALIZEDTIME
 *)
	`ASN1_STRING_dup
(\

679 (
ASN1_STRING
 *)
a
)

	)

681 
	#M_ASN1_TIME_√w
(Ë(
ASN1_TIME
 *)\

682 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTCTIME
)

	)

683 
	#M_ASN1_TIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

684 
	#M_ASN1_TIME_dup
(
a
Ë(
ASN1_TIME
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

686 
	#M_ASN1_GENERALSTRING_√w
(Ë(
ASN1_GENERALSTRING
 *)\

687 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_GENERALSTRING
)

	)

688 
	#M_ASN1_GENERALSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

689 
	#M_i2d_ASN1_GENERALSTRING
(
a
,
µ
) \

690 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_GENERALSTRING
,\

691 
V_ASN1_UNIVERSAL
)

	)

692 
	#M_d2i_ASN1_GENERALSTRING
(
a
,
µ
,
l
) \

693 (
ASN1_GENERALSTRING
 *)
d2i_ASN1_ty≥_byãs
\

694 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_GENERALSTRING
)

	)

696 
	#M_ASN1_UNIVERSALSTRING_√w
(Ë(
ASN1_UNIVERSALSTRING
 *)\

697 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UNIVERSALSTRING
)

	)

698 
	#M_ASN1_UNIVERSALSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

699 
	#M_i2d_ASN1_UNIVERSALSTRING
(
a
,
µ
) \

700 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_UNIVERSALSTRING
,\

701 
V_ASN1_UNIVERSAL
)

	)

702 
	#M_d2i_ASN1_UNIVERSALSTRING
(
a
,
µ
,
l
) \

703 (
ASN1_UNIVERSALSTRING
 *)
d2i_ASN1_ty≥_byãs
\

704 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_UNIVERSALSTRING
)

	)

706 
	#M_ASN1_BMPSTRING_√w
(Ë(
ASN1_BMPSTRING
 *)\

707 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_BMPSTRING
)

	)

708 
	#M_ASN1_BMPSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

709 
	#M_i2d_ASN1_BMPSTRING
(
a
,
µ
) \

710 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_BMPSTRING
,\

711 
V_ASN1_UNIVERSAL
)

	)

712 
	#M_d2i_ASN1_BMPSTRING
(
a
,
µ
,
l
) \

713 (
ASN1_BMPSTRING
 *)
d2i_ASN1_ty≥_byãs
\

714 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_BMPSTRING
)

	)

716 
	#M_ASN1_VISIBLESTRING_√w
(Ë(
ASN1_VISIBLESTRING
 *)\

717 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_VISIBLESTRING
)

	)

718 
	#M_ASN1_VISIBLESTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

719 
	#M_i2d_ASN1_VISIBLESTRING
(
a
,
µ
) \

720 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_VISIBLESTRING
,\

721 
V_ASN1_UNIVERSAL
)

	)

722 
	#M_d2i_ASN1_VISIBLESTRING
(
a
,
µ
,
l
) \

723 (
ASN1_VISIBLESTRING
 *)
d2i_ASN1_ty≥_byãs
\

724 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_VISIBLESTRING
)

	)

726 
	#M_ASN1_UTF8STRING_√w
(Ë(
ASN1_UTF8STRING
 *)\

727 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTF8STRING
)

	)

728 
	#M_ASN1_UTF8STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

729 
	#M_i2d_ASN1_UTF8STRING
(
a
,
µ
) \

730 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_UTF8STRING
,\

731 
V_ASN1_UNIVERSAL
)

	)

732 
	#M_d2i_ASN1_UTF8STRING
(
a
,
µ
,
l
) \

733 (
ASN1_UTF8STRING
 *)
d2i_ASN1_ty≥_byãs
\

734 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_UTF8STRING
)

	)

737 
	#IS_SEQUENCE
 0

	)

738 
	#IS_SET
 1

	)

740 
DECLARE_ASN1_FUNCTIONS_‚ame
(
ASN1_TYPE
, 
ASN1_ANY
, ASN1_TYPE)

742 
ASN1_TYPE_gë
(
ASN1_TYPE
 *
a
);

743 
ASN1_TYPE_£t
(
ASN1_TYPE
 *
a
, 
ty≥
, *
vÆue
);

745 
ASN1_OBJECT
 * 
ASN1_OBJECT_√w
();

746 
ASN1_OBJECT_‰ì
(
ASN1_OBJECT
 *
a
);

747 
i2d_ASN1_OBJECT
(
ASN1_OBJECT
 *
a
,**
µ
);

748 
ASN1_OBJECT
 * 
c2i_ASN1_OBJECT
(ASN1_OBJECT **
a
,c⁄° **
µ
,

749 
Àngth
);

750 
ASN1_OBJECT
 * 
d2i_ASN1_OBJECT
(ASN1_OBJECT **
a
,c⁄° **
µ
,

751 
Àngth
);

753 
DECLARE_ASN1_ITEM
(
ASN1_OBJECT
)

755 
DECLARE_STACK_OF
(
ASN1_OBJECT
)

756 
DECLARE_ASN1_SET_OF
(
ASN1_OBJECT
)

758 
ASN1_STRING
 * 
ASN1_STRING_√w
();

759 
ASN1_STRING_‰ì
(
ASN1_STRING
 *
a
);

760 
ASN1_STRING
 * 
ASN1_STRING_dup
(ASN1_STRING *
a
);

761 
ASN1_STRING
 * 
ASN1_STRING_ty≥_√w
(
ty≥
 );

762 
ASN1_STRING_cmp
(
ASN1_STRING
 *
a
, ASN1_STRING *
b
);

765 
ASN1_STRING_£t
(
ASN1_STRING
 *
°r
, c⁄° *
d©a
, 
Àn
);

766 
ASN1_STRING_Àngth
(
ASN1_STRING
 *
x
);

767 
ASN1_STRING_Àngth_£t
(
ASN1_STRING
 *
x
, 
n
);

768 
ASN1_STRING_ty≥
(
ASN1_STRING
 *
x
);

769 * 
ASN1_STRING_d©a
(
ASN1_STRING
 *
x
);

771 
DECLARE_ASN1_FUNCTIONS
(
ASN1_BIT_STRING
)

772 
i2c_ASN1_BIT_STRING
(
ASN1_BIT_STRING
 *
a
,**
µ
);

773 
ASN1_BIT_STRING
 *
c2i_ASN1_BIT_STRING
(ASN1_BIT_STRING **
a
,c⁄° **
µ
,

774 
Àngth
);

775 
ASN1_BIT_STRING_£t
(
ASN1_BIT_STRING
 *
a
, *
d
,

776 
Àngth
 );

777 
ASN1_BIT_STRING_£t_bô
(
ASN1_BIT_STRING
 *
a
, 
n
, 
vÆue
);

778 
ASN1_BIT_STRING_gë_bô
(
ASN1_BIT_STRING
 *
a
, 
n
);

780 #i‚de‡
OPENSSL_NO_BIO


781 
ASN1_BIT_STRING_«me_¥öt
(
BIO
 *
out
, 
ASN1_BIT_STRING
 *
bs
,

782 
BIT_STRING_BITNAME
 *
tbl
, 
ödít
);

784 
ASN1_BIT_STRING_num_asc
(*
«me
, 
BIT_STRING_BITNAME
 *
tbl
);

785 
ASN1_BIT_STRING_£t_asc
(
ASN1_BIT_STRING
 *
bs
, *
«me
, 
vÆue
,

786 
BIT_STRING_BITNAME
 *
tbl
);

788 
i2d_ASN1_BOOLEAN
(
a
,**
µ
);

789 
d2i_ASN1_BOOLEAN
(*
a
,c⁄° **
µ
,
Àngth
);

791 
DECLARE_ASN1_FUNCTIONS
(
ASN1_INTEGER
)

792 
i2c_ASN1_INTEGER
(
ASN1_INTEGER
 *
a
,**
µ
);

793 
ASN1_INTEGER
 *
c2i_ASN1_INTEGER
(ASN1_INTEGER **
a
,c⁄° **
µ
,

794 
Àngth
);

795 
ASN1_INTEGER
 *
d2i_ASN1_UINTEGER
(ASN1_INTEGER **
a
,c⁄° **
µ
,

796 
Àngth
);

797 
ASN1_INTEGER
 * 
ASN1_INTEGER_dup
(ASN1_INTEGER *
x
);

798 
ASN1_INTEGER_cmp
(
ASN1_INTEGER
 *
x
, ASN1_INTEGER *
y
);

800 
DECLARE_ASN1_FUNCTIONS
(
ASN1_ENUMERATED
)

802 
ASN1_UTCTIME_check
(
ASN1_UTCTIME
 *
a
);

803 
ASN1_UTCTIME
 *
ASN1_UTCTIME_£t
(ASN1_UTCTIME *
s
,
time_t
 
t
);

804 
ASN1_UTCTIME_£t_°rög
(
ASN1_UTCTIME
 *
s
, c⁄° *
°r
);

805 
ASN1_UTCTIME_cmp_time_t
(c⁄° 
ASN1_UTCTIME
 *
s
, 
time_t
 
t
);

807 
time_t
 
ASN1_UTCTIME_gë
(c⁄° 
ASN1_UTCTIME
 *
s
);

810 
ASN1_GENERALIZEDTIME_check
(
ASN1_GENERALIZEDTIME
 *
a
);

811 
ASN1_GENERALIZEDTIME
 *
ASN1_GENERALIZEDTIME_£t
(ASN1_GENERALIZEDTIME *
s
,
time_t
 
t
);

812 
ASN1_GENERALIZEDTIME_£t_°rög
(
ASN1_GENERALIZEDTIME
 *
s
, c⁄° *
°r
);

814 
DECLARE_ASN1_FUNCTIONS
(
ASN1_OCTET_STRING
)

815 
ASN1_OCTET_STRING
 * 
ASN1_OCTET_STRING_dup
(ASN1_OCTET_STRING *
a
);

816 
ASN1_OCTET_STRING_cmp
(
ASN1_OCTET_STRING
 *
a
, ASN1_OCTET_STRING *
b
);

817 
ASN1_OCTET_STRING_£t
(
ASN1_OCTET_STRING
 *
°r
, c⁄° *
d©a
, 
Àn
);

819 
DECLARE_ASN1_FUNCTIONS
(
ASN1_VISIBLESTRING
)

820 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UNIVERSALSTRING
)

821 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UTF8STRING
)

822 
DECLARE_ASN1_FUNCTIONS
(
ASN1_NULL
)

823 
DECLARE_ASN1_FUNCTIONS
(
ASN1_BMPSTRING
)

825 
UTF8_gëc
(c⁄° *
°r
, 
Àn
, *
vÆ
);

826 
UTF8_putc
(*
°r
, 
Àn
, 
vÆue
);

828 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
ASN1_PRINTABLE
)

830 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
DIRECTORYSTRING
)

831 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
DISPLAYTEXT
)

832 
DECLARE_ASN1_FUNCTIONS
(
ASN1_PRINTABLESTRING
)

833 
DECLARE_ASN1_FUNCTIONS
(
ASN1_T61STRING
)

834 
DECLARE_ASN1_FUNCTIONS
(
ASN1_IA5STRING
)

835 
DECLARE_ASN1_FUNCTIONS
(
ASN1_GENERALSTRING
)

836 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UTCTIME
)

837 
DECLARE_ASN1_FUNCTIONS
(
ASN1_GENERALIZEDTIME
)

838 
DECLARE_ASN1_FUNCTIONS
(
ASN1_TIME
)

840 
DECLARE_ASN1_ITEM
(
ASN1_OCTET_STRING_NDEF
)

842 
ASN1_TIME
 *
ASN1_TIME_£t
(ASN1_TIME *
s
,
time_t
 
t
);

843 
ASN1_TIME_check
(
ASN1_TIME
 *
t
);

844 
ASN1_GENERALIZEDTIME
 *
ASN1_TIME_to_gíîÆizedtime
(
ASN1_TIME
 *
t
, ASN1_GENERALIZEDTIME **
out
);

846 
i2d_ASN1_SET
(
STACK
 *
a
, **
µ
,

847 
i2d_of_void
 *
i2d
, 
ex_èg
, 
ex_˛ass
, 
is_£t
);

848 
STACK
 * 
d2i_ASN1_SET
(STACK **
a
, c⁄° **
µ
, 
Àngth
,

849 
d2i_of_void
 *
d2i
, (*
‰ì_func
)(*),

850 
ex_èg
, 
ex_˛ass
);

852 #i‚de‡
OPENSSL_NO_BIO


853 
i2a_ASN1_INTEGER
(
BIO
 *
bp
, 
ASN1_INTEGER
 *
a
);

854 
a2i_ASN1_INTEGER
(
BIO
 *
bp
,
ASN1_INTEGER
 *
bs
,*
buf
,
size
);

855 
i2a_ASN1_ENUMERATED
(
BIO
 *
bp
, 
ASN1_ENUMERATED
 *
a
);

856 
a2i_ASN1_ENUMERATED
(
BIO
 *
bp
,
ASN1_ENUMERATED
 *
bs
,*
buf
,
size
);

857 
i2a_ASN1_OBJECT
(
BIO
 *
bp
,
ASN1_OBJECT
 *
a
);

858 
a2i_ASN1_STRING
(
BIO
 *
bp
,
ASN1_STRING
 *
bs
,*
buf
,
size
);

859 
i2a_ASN1_STRING
(
BIO
 *
bp
, 
ASN1_STRING
 *
a
, 
ty≥
);

861 
i2t_ASN1_OBJECT
(*
buf
,
buf_Àn
,
ASN1_OBJECT
 *
a
);

863 
a2d_ASN1_OBJECT
(*
out
,
ﬁí
, c⁄° *
buf
, 
num
);

864 
ASN1_OBJECT
 *
ASN1_OBJECT_¸óã
(
nid
, *
d©a
,
Àn
,

865 c⁄° *
¢
, c⁄° *
 
);

867 
ASN1_INTEGER_£t
(
ASN1_INTEGER
 *
a
, 
v
);

868 
ASN1_INTEGER_gë
(
ASN1_INTEGER
 *
a
);

869 
ASN1_INTEGER
 *
BN_to_ASN1_INTEGER
(
BIGNUM
 *
bn
, ASN1_INTEGER *
ai
);

870 
BIGNUM
 *
ASN1_INTEGER_to_BN
(
ASN1_INTEGER
 *
ai
,BIGNUM *
bn
);

872 
ASN1_ENUMERATED_£t
(
ASN1_ENUMERATED
 *
a
, 
v
);

873 
ASN1_ENUMERATED_gë
(
ASN1_ENUMERATED
 *
a
);

874 
ASN1_ENUMERATED
 *
BN_to_ASN1_ENUMERATED
(
BIGNUM
 *
bn
, ASN1_ENUMERATED *
ai
);

875 
BIGNUM
 *
ASN1_ENUMERATED_to_BN
(
ASN1_ENUMERATED
 *
ai
,BIGNUM *
bn
);

879 
ASN1_PRINTABLE_ty≥
(c⁄° *
s
, 
max
);

881 
i2d_ASN1_byãs
(
ASN1_STRING
 *
a
, **
µ
, 
èg
, 
x˛ass
);

882 
ASN1_STRING
 *
d2i_ASN1_byãs
(ASN1_STRING **
a
, c⁄° **
µ
,

883 
Àngth
, 
Pèg
, 
P˛ass
);

884 
ASN1_èg2bô
(
èg
);

886 
ASN1_STRING
 *
d2i_ASN1_ty≥_byãs
(ASN1_STRING **
a
,c⁄° **
µ
,

887 
Àngth
,
ty≥
);

890 
a¢1_Föish
(
ASN1_CTX
 *
c
);

891 
a¢1_c⁄°_Föish
(
ASN1_c⁄°_CTX
 *
c
);

894 
ASN1_gë_obje˘
(c⁄° **
µ
, *
∂ígth
, *
±ag
,

895 *
p˛ass
, 
omax
);

896 
ASN1_check_öföôe_íd
(**
p
,
Àn
);

897 
ASN1_c⁄°_check_öföôe_íd
(c⁄° **
p
,
Àn
);

898 
ASN1_put_obje˘
(**
µ
, 
c⁄°ru˘ed
, 
Àngth
,

899 
èg
, 
x˛ass
);

900 
ASN1_put_eoc
(**
µ
);

901 
ASN1_obje˘_size
(
c⁄°ru˘ed
, 
Àngth
, 
èg
);

904 *
ASN1_dup
(
i2d_of_void
 *
i2d
, 
d2i_of_void
 *
d2i
, *
x
);

905 
	#ASN1_dup_of
(
ty≥
,
i2d
,
d2i
,
x
) \

906 ((
ty≥
 *(*)(
	`I2D_OF
—y≥),
	`D2I_OF
—y≥),ty≥ *))
	`›ís¶_fˇ°
(
ASN1_dup
))(
i2d
,
d2i
,
x
)

	)

907 
	#ASN1_dup_of_c⁄°
(
ty≥
,
i2d
,
d2i
,
x
) \

908 ((
ty≥
 *(*)(
	`I2D_OF_c⁄°
—y≥),
	`D2I_OF
—y≥),ty≥ *))
	`›ís¶_fˇ°
(
ASN1_dup
))(
i2d
,
d2i
,
x
)

	)

910 *
ASN1_ôem_dup
(c⁄° 
ASN1_ITEM
 *
ô
, *
x
);

912 #i‚de‡
OPENSSL_NO_FP_API


913 *
ASN1_d2i_Â
(*(*
x√w
)(), 
d2i_of_void
 *
d2i
, 
FILE
 *
ö
, **
x
);

914 
	#ASN1_d2i_Â_of
(
ty≥
,
x√w
,
d2i
,
ö
,
x
) \

915 ((
ty≥
 *(*)—y≥ *(*)(),
	`D2I_OF
—y≥),
FILE
 *,ty≥ **))
	`›ís¶_fˇ°
(
ASN1_d2i_Â
))(
x√w
,
d2i
,
ö
,
x
)

	)

916 *
ASN1_ôem_d2i_Â
(c⁄° 
ASN1_ITEM
 *
ô
, 
FILE
 *
ö
, *
x
);

917 
ASN1_i2d_Â
(
i2d_of_void
 *
i2d
,
FILE
 *
out
,*
x
);

918 
	#ASN1_i2d_Â_of
(
ty≥
,
i2d
,
out
,
x
) \

919 (((*)(
	`I2D_OF
(
ty≥
),
FILE
 *,ty≥ *))
	`›ís¶_fˇ°
(
ASN1_i2d_Â
))(
i2d
,
out
,
x
)

	)

920 
	#ASN1_i2d_Â_of_c⁄°
(
ty≥
,
i2d
,
out
,
x
) \

921 (((*)(
	`I2D_OF_c⁄°
(
ty≥
),
FILE
 *,ty≥ *))
	`›ís¶_fˇ°
(
ASN1_i2d_Â
))(
i2d
,
out
,
x
)

	)

922 
ASN1_ôem_i2d_Â
(c⁄° 
ASN1_ITEM
 *
ô
, 
FILE
 *
out
, *
x
);

923 
ASN1_STRING_¥öt_ex_Â
(
FILE
 *
Â
, 
ASN1_STRING
 *
°r
, 
Êags
);

926 
ASN1_STRING_to_UTF8
(**
out
, 
ASN1_STRING
 *
ö
);

928 #i‚de‡
OPENSSL_NO_BIO


929 *
ASN1_d2i_bio
(*(*
x√w
)(), 
d2i_of_void
 *
d2i
, 
BIO
 *
ö
, **
x
);

930 
	#ASN1_d2i_bio_of
(
ty≥
,
x√w
,
d2i
,
ö
,
x
) \

931 ((
ty≥
 *(*)—y≥ *(*)(),
	`D2I_OF
—y≥),
BIO
 *,ty≥ **))
	`›ís¶_fˇ°
(
ASN1_d2i_bio
))(
x√w
,
d2i
,
ö
,
x
)

	)

932 *
ASN1_ôem_d2i_bio
(c⁄° 
ASN1_ITEM
 *
ô
, 
BIO
 *
ö
, *
x
);

933 
ASN1_i2d_bio
(
i2d_of_void
 *
i2d
,
BIO
 *
out
, *
x
);

934 
	#ASN1_i2d_bio_of
(
ty≥
,
i2d
,
out
,
x
) \

935 (((*)(
	`I2D_OF
(
ty≥
),
BIO
 *,ty≥ *))
	`›ís¶_fˇ°
(
ASN1_i2d_bio
))(
i2d
,
out
,
x
)

	)

936 
	#ASN1_i2d_bio_of_c⁄°
(
ty≥
,
i2d
,
out
,
x
) \

937 (((*)(
	`I2D_OF_c⁄°
(
ty≥
),
BIO
 *,c⁄°Åy≥ *))
	`›ís¶_fˇ°
(
ASN1_i2d_bio
))(
i2d
,
out
,
x
)

	)

938 
ASN1_ôem_i2d_bio
(c⁄° 
ASN1_ITEM
 *
ô
, 
BIO
 *
out
, *
x
);

939 
ASN1_UTCTIME_¥öt
(
BIO
 *
Â
,
ASN1_UTCTIME
 *
a
);

940 
ASN1_GENERALIZEDTIME_¥öt
(
BIO
 *
Â
,
ASN1_GENERALIZEDTIME
 *
a
);

941 
ASN1_TIME_¥öt
(
BIO
 *
Â
,
ASN1_TIME
 *
a
);

942 
ASN1_STRING_¥öt
(
BIO
 *
bp
,
ASN1_STRING
 *
v
);

943 
ASN1_STRING_¥öt_ex
(
BIO
 *
out
, 
ASN1_STRING
 *
°r
, 
Êags
);

944 
ASN1_∑r£
(
BIO
 *
bp
,c⁄° *
µ
,
Àn
,
ödít
);

945 
ASN1_∑r£_dump
(
BIO
 *
bp
,c⁄° *
µ
,
Àn
,
ödít
,
dump
);

947 c⁄° *
ASN1_èg2°r
(
èg
);

950 
i2d_ASN1_HEADER
(
ASN1_HEADER
 *
a
,**
µ
);

951 
ASN1_HEADER
 *
d2i_ASN1_HEADER
(ASN1_HEADER **
a
,c⁄° **
µ
, 
Àngth
);

952 
ASN1_HEADER
 *
ASN1_HEADER_√w
();

953 
ASN1_HEADER_‰ì
(
ASN1_HEADER
 *
a
);

955 
ASN1_UNIVERSALSTRING_to_°rög
(
ASN1_UNIVERSALSTRING
 *
s
);

958 
ASN1_METHOD
 *
X509_a¢1_mëh
();

959 
ASN1_METHOD
 *
RSAPriv©eKey_a¢1_mëh
();

960 
ASN1_METHOD
 *
ASN1_IA5STRING_a¢1_mëh
();

961 
ASN1_METHOD
 *
ASN1_BIT_STRING_a¢1_mëh
();

963 
ASN1_TYPE_£t_o˘ë°rög
(
ASN1_TYPE
 *
a
,

964 *
d©a
, 
Àn
);

965 
ASN1_TYPE_gë_o˘ë°rög
(
ASN1_TYPE
 *
a
,

966 *
d©a
, 
max_Àn
);

967 
ASN1_TYPE_£t_öt_o˘ë°rög
(
ASN1_TYPE
 *
a
, 
num
,

968 *
d©a
, 
Àn
);

969 
ASN1_TYPE_gë_öt_o˘ë°rög
(
ASN1_TYPE
 *
a
,*
num
,

970 *
d©a
, 
max_Àn
);

972 
STACK
 *
ASN1_£q_u≈ack
(c⁄° *
buf
, 
Àn
,

973 
d2i_of_void
 *
d2i
, (*
‰ì_func
)(*));

974 *
ASN1_£q_∑ck
(
STACK
 *
ß„s
, 
i2d_of_void
 *
i2d
,

975 **
buf
, *
Àn
 );

976 *
ASN1_u≈ack_°rög
(
ASN1_STRING
 *
o˘
, 
d2i_of_void
 *
d2i
);

977 *
ASN1_ôem_u≈ack
(
ASN1_STRING
 *
o˘
, c⁄° 
ASN1_ITEM
 *
ô
);

978 
ASN1_STRING
 *
ASN1_∑ck_°rög
(*
obj
, 
i2d_of_void
 *
i2d
,

979 
ASN1_OCTET_STRING
 **
o˘
);

980 
	#ASN1_∑ck_°rög_of
(
ty≥
,
obj
,
i2d
,
o˘
) \

981 ((
ASN1_STRING
 *(*)(
ty≥
 *,
	`I2D_OF
—y≥),
ASN1_OCTET_STRING
 **))
	`›ís¶_fˇ°
(
ASN1_∑ck_°rög
))(
obj
,
i2d
,
o˘
)

	)

982 
ASN1_STRING
 *
ASN1_ôem_∑ck
(*
obj
, c⁄° 
ASN1_ITEM
 *
ô
, 
ASN1_OCTET_STRING
 **
o˘
);

984 
ASN1_STRING_£t_deÁu…_mask
(
mask
);

985 
ASN1_STRING_£t_deÁu…_mask_asc
(*
p
);

986 
ASN1_STRING_gë_deÁu…_mask
();

987 
ASN1_mb°rög_c›y
(
ASN1_STRING
 **
out
, c⁄° *
ö
, 
Àn
,

988 
öf‹m
, 
mask
);

989 
ASN1_mb°rög_nc›y
(
ASN1_STRING
 **
out
, c⁄° *
ö
, 
Àn
,

990 
öf‹m
, 
mask
,

991 
mösize
, 
maxsize
);

993 
ASN1_STRING
 *
ASN1_STRING_£t_by_NID
(ASN1_STRING **
out
,

994 c⁄° *
ö
, 
öÀn
, 
öf‹m
, 
nid
);

995 
ASN1_STRING_TABLE
 *
ASN1_STRING_TABLE_gë
(
nid
);

996 
ASN1_STRING_TABLE_add
(, , , , );

997 
ASN1_STRING_TABLE_˛ónup
();

1002 
ASN1_VALUE
 *
ASN1_ôem_√w
(c⁄° 
ASN1_ITEM
 *
ô
);

1003 
ASN1_ôem_‰ì
(
ASN1_VALUE
 *
vÆ
, c⁄° 
ASN1_ITEM
 *
ô
);

1004 
ASN1_VALUE
 * 
ASN1_ôem_d2i
(ASN1_VALUE **
vÆ
, c⁄° **
ö
, 
Àn
, c⁄° 
ASN1_ITEM
 *
ô
);

1005 
ASN1_ôem_i2d
(
ASN1_VALUE
 *
vÆ
, **
out
, c⁄° 
ASN1_ITEM
 *
ô
);

1006 
ASN1_ôem_ndef_i2d
(
ASN1_VALUE
 *
vÆ
, **
out
, c⁄° 
ASN1_ITEM
 *
ô
);

1008 
ASN1_add_oid_moduÀ
();

1010 
ASN1_TYPE
 *
ASN1_gíî©e_nc⁄f
(*
°r
, 
CONF
 *
nc⁄f
);

1011 
ASN1_TYPE
 *
ASN1_gíî©e_v3
(*
°r
, 
X509V3_CTX
 *
˙f
);

1017 
ERR_lﬂd_ASN1_°rögs
();

1022 
	#ASN1_F_A2D_ASN1_OBJECT
 100

	)

1023 
	#ASN1_F_A2I_ASN1_ENUMERATED
 101

	)

1024 
	#ASN1_F_A2I_ASN1_INTEGER
 102

	)

1025 
	#ASN1_F_A2I_ASN1_STRING
 103

	)

1026 
	#ASN1_F_APPEND_EXP
 176

	)

1027 
	#ASN1_F_ASN1_BIT_STRING_SET_BIT
 183

	)

1028 
	#ASN1_F_ASN1_CB
 177

	)

1029 
	#ASN1_F_ASN1_CHECK_TLEN
 104

	)

1030 
	#ASN1_F_ASN1_COLLATE_PRIMITIVE
 105

	)

1031 
	#ASN1_F_ASN1_COLLECT
 106

	)

1032 
	#ASN1_F_ASN1_D2I_EX_PRIMITIVE
 108

	)

1033 
	#ASN1_F_ASN1_D2I_FP
 109

	)

1034 
	#ASN1_F_ASN1_D2I_READ_BIO
 107

	)

1035 
	#ASN1_F_ASN1_DIGEST
 184

	)

1036 
	#ASN1_F_ASN1_DO_ADB
 110

	)

1037 
	#ASN1_F_ASN1_DUP
 111

	)

1038 
	#ASN1_F_ASN1_ENUMERATED_SET
 112

	)

1039 
	#ASN1_F_ASN1_ENUMERATED_TO_BN
 113

	)

1040 
	#ASN1_F_ASN1_EX_C2I
 204

	)

1041 
	#ASN1_F_ASN1_FIND_END
 190

	)

1042 
	#ASN1_F_ASN1_GENERALIZEDTIME_SET
 185

	)

1043 
	#ASN1_F_ASN1_GENERATE_V3
 178

	)

1044 
	#ASN1_F_ASN1_GET_OBJECT
 114

	)

1045 
	#ASN1_F_ASN1_HEADER_NEW
 115

	)

1046 
	#ASN1_F_ASN1_I2D_BIO
 116

	)

1047 
	#ASN1_F_ASN1_I2D_FP
 117

	)

1048 
	#ASN1_F_ASN1_INTEGER_SET
 118

	)

1049 
	#ASN1_F_ASN1_INTEGER_TO_BN
 119

	)

1050 
	#ASN1_F_ASN1_ITEM_D2I_FP
 206

	)

1051 
	#ASN1_F_ASN1_ITEM_DUP
 191

	)

1052 
	#ASN1_F_ASN1_ITEM_EX_COMBINE_NEW
 121

	)

1053 
	#ASN1_F_ASN1_ITEM_EX_D2I
 120

	)

1054 
	#ASN1_F_ASN1_ITEM_I2D_BIO
 192

	)

1055 
	#ASN1_F_ASN1_ITEM_I2D_FP
 193

	)

1056 
	#ASN1_F_ASN1_ITEM_PACK
 198

	)

1057 
	#ASN1_F_ASN1_ITEM_SIGN
 195

	)

1058 
	#ASN1_F_ASN1_ITEM_UNPACK
 199

	)

1059 
	#ASN1_F_ASN1_ITEM_VERIFY
 197

	)

1060 
	#ASN1_F_ASN1_MBSTRING_NCOPY
 122

	)

1061 
	#ASN1_F_ASN1_OBJECT_NEW
 123

	)

1062 
	#ASN1_F_ASN1_PACK_STRING
 124

	)

1063 
	#ASN1_F_ASN1_PCTX_NEW
 205

	)

1064 
	#ASN1_F_ASN1_PKCS5_PBE_SET
 125

	)

1065 
	#ASN1_F_ASN1_SEQ_PACK
 126

	)

1066 
	#ASN1_F_ASN1_SEQ_UNPACK
 127

	)

1067 
	#ASN1_F_ASN1_SIGN
 128

	)

1068 
	#ASN1_F_ASN1_STR2TYPE
 179

	)

1069 
	#ASN1_F_ASN1_STRING_SET
 186

	)

1070 
	#ASN1_F_ASN1_STRING_TABLE_ADD
 129

	)

1071 
	#ASN1_F_ASN1_STRING_TYPE_NEW
 130

	)

1072 
	#ASN1_F_ASN1_TEMPLATE_EX_D2I
 132

	)

1073 
	#ASN1_F_ASN1_TEMPLATE_NEW
 133

	)

1074 
	#ASN1_F_ASN1_TEMPLATE_NOEXP_D2I
 131

	)

1075 
	#ASN1_F_ASN1_TIME_SET
 175

	)

1076 
	#ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING
 134

	)

1077 
	#ASN1_F_ASN1_TYPE_GET_OCTETSTRING
 135

	)

1078 
	#ASN1_F_ASN1_UNPACK_STRING
 136

	)

1079 
	#ASN1_F_ASN1_UTCTIME_SET
 187

	)

1080 
	#ASN1_F_ASN1_VERIFY
 137

	)

1081 
	#ASN1_F_BITSTR_CB
 180

	)

1082 
	#ASN1_F_BN_TO_ASN1_ENUMERATED
 138

	)

1083 
	#ASN1_F_BN_TO_ASN1_INTEGER
 139

	)

1084 
	#ASN1_F_C2I_ASN1_BIT_STRING
 189

	)

1085 
	#ASN1_F_C2I_ASN1_INTEGER
 194

	)

1086 
	#ASN1_F_C2I_ASN1_OBJECT
 196

	)

1087 
	#ASN1_F_COLLECT_DATA
 140

	)

1088 
	#ASN1_F_D2I_ASN1_BIT_STRING
 141

	)

1089 
	#ASN1_F_D2I_ASN1_BOOLEAN
 142

	)

1090 
	#ASN1_F_D2I_ASN1_BYTES
 143

	)

1091 
	#ASN1_F_D2I_ASN1_GENERALIZEDTIME
 144

	)

1092 
	#ASN1_F_D2I_ASN1_HEADER
 145

	)

1093 
	#ASN1_F_D2I_ASN1_INTEGER
 146

	)

1094 
	#ASN1_F_D2I_ASN1_OBJECT
 147

	)

1095 
	#ASN1_F_D2I_ASN1_SET
 148

	)

1096 
	#ASN1_F_D2I_ASN1_TYPE_BYTES
 149

	)

1097 
	#ASN1_F_D2I_ASN1_UINTEGER
 150

	)

1098 
	#ASN1_F_D2I_ASN1_UTCTIME
 151

	)

1099 
	#ASN1_F_D2I_NETSCAPE_RSA
 152

	)

1100 
	#ASN1_F_D2I_NETSCAPE_RSA_2
 153

	)

1101 
	#ASN1_F_D2I_PRIVATEKEY
 154

	)

1102 
	#ASN1_F_D2I_PUBLICKEY
 155

	)

1103 
	#ASN1_F_D2I_RSA_NET
 200

	)

1104 
	#ASN1_F_D2I_RSA_NET_2
 201

	)

1105 
	#ASN1_F_D2I_X509
 156

	)

1106 
	#ASN1_F_D2I_X509_CINF
 157

	)

1107 
	#ASN1_F_D2I_X509_PKEY
 159

	)

1108 
	#ASN1_F_I2D_ASN1_SET
 188

	)

1109 
	#ASN1_F_I2D_ASN1_TIME
 160

	)

1110 
	#ASN1_F_I2D_DSA_PUBKEY
 161

	)

1111 
	#ASN1_F_I2D_EC_PUBKEY
 181

	)

1112 
	#ASN1_F_I2D_PRIVATEKEY
 163

	)

1113 
	#ASN1_F_I2D_PUBLICKEY
 164

	)

1114 
	#ASN1_F_I2D_RSA_NET
 162

	)

1115 
	#ASN1_F_I2D_RSA_PUBKEY
 165

	)

1116 
	#ASN1_F_LONG_C2I
 166

	)

1117 
	#ASN1_F_OID_MODULE_INIT
 174

	)

1118 
	#ASN1_F_PARSE_TAGGING
 182

	)

1119 
	#ASN1_F_PKCS5_PBE2_SET
 167

	)

1120 
	#ASN1_F_PKCS5_PBE_SET
 202

	)

1121 
	#ASN1_F_X509_CINF_NEW
 168

	)

1122 
	#ASN1_F_X509_CRL_ADD0_REVOKED
 169

	)

1123 
	#ASN1_F_X509_INFO_NEW
 170

	)

1124 
	#ASN1_F_X509_NAME_ENCODE
 203

	)

1125 
	#ASN1_F_X509_NAME_EX_D2I
 158

	)

1126 
	#ASN1_F_X509_NAME_EX_NEW
 171

	)

1127 
	#ASN1_F_X509_NEW
 172

	)

1128 
	#ASN1_F_X509_PKEY_NEW
 173

	)

1131 
	#ASN1_R_ADDING_OBJECT
 171

	)

1132 
	#ASN1_R_AUX_ERROR
 100

	)

1133 
	#ASN1_R_BAD_CLASS
 101

	)

1134 
	#ASN1_R_BAD_OBJECT_HEADER
 102

	)

1135 
	#ASN1_R_BAD_PASSWORD_READ
 103

	)

1136 
	#ASN1_R_BAD_TAG
 104

	)

1137 
	#ASN1_R_BN_LIB
 105

	)

1138 
	#ASN1_R_BOOLEAN_IS_WRONG_LENGTH
 106

	)

1139 
	#ASN1_R_BUFFER_TOO_SMALL
 107

	)

1140 
	#ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER
 108

	)

1141 
	#ASN1_R_DATA_IS_WRONG
 109

	)

1142 
	#ASN1_R_DECODE_ERROR
 110

	)

1143 
	#ASN1_R_DECODING_ERROR
 111

	)

1144 
	#ASN1_R_DEPTH_EXCEEDED
 174

	)

1145 
	#ASN1_R_ENCODE_ERROR
 112

	)

1146 
	#ASN1_R_ERROR_GETTING_TIME
 173

	)

1147 
	#ASN1_R_ERROR_LOADING_SECTION
 172

	)

1148 
	#ASN1_R_ERROR_PARSING_SET_ELEMENT
 113

	)

1149 
	#ASN1_R_ERROR_SETTING_CIPHER_PARAMS
 114

	)

1150 
	#ASN1_R_EXPECTING_AN_INTEGER
 115

	)

1151 
	#ASN1_R_EXPECTING_AN_OBJECT
 116

	)

1152 
	#ASN1_R_EXPECTING_A_BOOLEAN
 117

	)

1153 
	#ASN1_R_EXPECTING_A_TIME
 118

	)

1154 
	#ASN1_R_EXPLICIT_LENGTH_MISMATCH
 119

	)

1155 
	#ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED
 120

	)

1156 
	#ASN1_R_FIELD_MISSING
 121

	)

1157 
	#ASN1_R_FIRST_NUM_TOO_LARGE
 122

	)

1158 
	#ASN1_R_HEADER_TOO_LONG
 123

	)

1159 
	#ASN1_R_ILLEGAL_BITSTRING_FORMAT
 175

	)

1160 
	#ASN1_R_ILLEGAL_BOOLEAN
 176

	)

1161 
	#ASN1_R_ILLEGAL_CHARACTERS
 124

	)

1162 
	#ASN1_R_ILLEGAL_FORMAT
 177

	)

1163 
	#ASN1_R_ILLEGAL_HEX
 178

	)

1164 
	#ASN1_R_ILLEGAL_IMPLICIT_TAG
 179

	)

1165 
	#ASN1_R_ILLEGAL_INTEGER
 180

	)

1166 
	#ASN1_R_ILLEGAL_NESTED_TAGGING
 181

	)

1167 
	#ASN1_R_ILLEGAL_NULL
 125

	)

1168 
	#ASN1_R_ILLEGAL_NULL_VALUE
 182

	)

1169 
	#ASN1_R_ILLEGAL_OBJECT
 183

	)

1170 
	#ASN1_R_ILLEGAL_OPTIONAL_ANY
 126

	)

1171 
	#ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE
 170

	)

1172 
	#ASN1_R_ILLEGAL_TAGGED_ANY
 127

	)

1173 
	#ASN1_R_ILLEGAL_TIME_VALUE
 184

	)

1174 
	#ASN1_R_INTEGER_NOT_ASCII_FORMAT
 185

	)

1175 
	#ASN1_R_INTEGER_TOO_LARGE_FOR_LONG
 128

	)

1176 
	#ASN1_R_INVALID_BMPSTRING_LENGTH
 129

	)

1177 
	#ASN1_R_INVALID_DIGIT
 130

	)

1178 
	#ASN1_R_INVALID_MODIFIER
 186

	)

1179 
	#ASN1_R_INVALID_NUMBER
 187

	)

1180 
	#ASN1_R_INVALID_SEPARATOR
 131

	)

1181 
	#ASN1_R_INVALID_TIME_FORMAT
 132

	)

1182 
	#ASN1_R_INVALID_UNIVERSALSTRING_LENGTH
 133

	)

1183 
	#ASN1_R_INVALID_UTF8STRING
 134

	)

1184 
	#ASN1_R_IV_TOO_LARGE
 135

	)

1185 
	#ASN1_R_LENGTH_ERROR
 136

	)

1186 
	#ASN1_R_LIST_ERROR
 188

	)

1187 
	#ASN1_R_MISSING_EOC
 137

	)

1188 
	#ASN1_R_MISSING_SECOND_NUMBER
 138

	)

1189 
	#ASN1_R_MISSING_VALUE
 189

	)

1190 
	#ASN1_R_MSTRING_NOT_UNIVERSAL
 139

	)

1191 
	#ASN1_R_MSTRING_WRONG_TAG
 140

	)

1192 
	#ASN1_R_NESTED_ASN1_STRING
 197

	)

1193 
	#ASN1_R_NON_HEX_CHARACTERS
 141

	)

1194 
	#ASN1_R_NOT_ASCII_FORMAT
 190

	)

1195 
	#ASN1_R_NOT_ENOUGH_DATA
 142

	)

1196 
	#ASN1_R_NO_MATCHING_CHOICE_TYPE
 143

	)

1197 
	#ASN1_R_NULL_IS_WRONG_LENGTH
 144

	)

1198 
	#ASN1_R_OBJECT_NOT_ASCII_FORMAT
 191

	)

1199 
	#ASN1_R_ODD_NUMBER_OF_CHARS
 145

	)

1200 
	#ASN1_R_PRIVATE_KEY_HEADER_MISSING
 146

	)

1201 
	#ASN1_R_SECOND_NUMBER_TOO_LARGE
 147

	)

1202 
	#ASN1_R_SEQUENCE_LENGTH_MISMATCH
 148

	)

1203 
	#ASN1_R_SEQUENCE_NOT_CONSTRUCTED
 149

	)

1204 
	#ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG
 192

	)

1205 
	#ASN1_R_SHORT_LINE
 150

	)

1206 
	#ASN1_R_STRING_TOO_LONG
 151

	)

1207 
	#ASN1_R_STRING_TOO_SHORT
 152

	)

1208 
	#ASN1_R_TAG_VALUE_TOO_HIGH
 153

	)

1209 
	#ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD
 154

	)

1210 
	#ASN1_R_TIME_NOT_ASCII_FORMAT
 193

	)

1211 
	#ASN1_R_TOO_LONG
 155

	)

1212 
	#ASN1_R_TYPE_NOT_CONSTRUCTED
 156

	)

1213 
	#ASN1_R_UNABLE_TO_DECODE_RSA_KEY
 157

	)

1214 
	#ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY
 158

	)

1215 
	#ASN1_R_UNEXPECTED_EOC
 159

	)

1216 
	#ASN1_R_UNKNOWN_FORMAT
 160

	)

1217 
	#ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM
 161

	)

1218 
	#ASN1_R_UNKNOWN_OBJECT_TYPE
 162

	)

1219 
	#ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE
 163

	)

1220 
	#ASN1_R_UNKNOWN_TAG
 194

	)

1221 
	#ASN1_R_UNKOWN_FORMAT
 195

	)

1222 
	#ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE
 164

	)

1223 
	#ASN1_R_UNSUPPORTED_CIPHER
 165

	)

1224 
	#ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM
 166

	)

1225 
	#ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE
 167

	)

1226 
	#ASN1_R_UNSUPPORTED_TYPE
 196

	)

1227 
	#ASN1_R_WRONG_TAG
 168

	)

1228 
	#ASN1_R_WRONG_TYPE
 169

	)

1230 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/buffer.h

59 #i‚de‡
HEADER_BUFFER_H


60 
	#HEADER_BUFFER_H


	)

62 
	~<›ís¶/os¶_typ.h
>

64 #ifde‡ 
__˝lu•lus


68 
	~<°ddef.h
>

70 #i‡!
deföed
(
NO_SYS_TYPES_H
)

71 
	~<sys/ty≥s.h
>

77 
	sbuf_mem_°


79 
Àngth
;

80 *
d©a
;

81 
max
;

84 
BUF_MEM
 *
BUF_MEM_√w
();

85 
BUF_MEM_‰ì
(
BUF_MEM
 *
a
);

86 
BUF_MEM_grow
(
BUF_MEM
 *
°r
, 
Àn
);

87 
BUF_MEM_grow_˛ón
(
BUF_MEM
 *
°r
, 
Àn
);

88 * 
BUF_°rdup
(c⁄° *
°r
);

89 * 
BUF_°∫dup
(c⁄° *
°r
, 
size_t
 
siz
);

90 * 
BUF_memdup
(c⁄° *
d©a
, 
size_t
 
siz
);

93 
size_t
 
BUF_°æ˝y
(*
d°
,c⁄° *
§c
,size_à
siz
);

94 
size_t
 
BUF_°æˇt
(*
d°
,c⁄° *
§c
,size_à
siz
);

101 
ERR_lﬂd_BUF_°rögs
();

106 
	#BUF_F_BUF_MEMDUP
 103

	)

107 
	#BUF_F_BUF_MEM_GROW
 100

	)

108 
	#BUF_F_BUF_MEM_GROW_CLEAN
 105

	)

109 
	#BUF_F_BUF_MEM_NEW
 101

	)

110 
	#BUF_F_BUF_STRDUP
 102

	)

111 
	#BUF_F_BUF_STRNDUP
 104

	)

115 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/comp.h

2 #i‚de‡
HEADER_COMP_H


3 
	#HEADER_COMP_H


	)

5 
	~<›ís¶/¸y±o.h
>

7 #ifde‡ 
__˝lu•lus


11 
comp_˘x_°
 
	tCOMP_CTX
;

13 
	scomp_mëhod_°


15 
ty≥
;

16 c⁄° *
«me
;

17 (*
öô
)(
COMP_CTX
 *
˘x
);

18 (*
föish
)(
COMP_CTX
 *
˘x
);

19 (*
com¥ess
)(
COMP_CTX
 *
˘x
,

20 *
out
, 
ﬁí
,

21 *
ö
, 
ûí
);

22 (*
ex∑nd
)(
COMP_CTX
 *
˘x
,

23 *
out
, 
ﬁí
,

24 *
ö
, 
ûí
);

26 (*
˘æ
)();

27 (*
ˇŒback_˘æ
)();

28 } 
	tCOMP_METHOD
;

30 
	scomp_˘x_°


32 
COMP_METHOD
 *
mëh
;

33 
com¥ess_ö
;

34 
com¥ess_out
;

35 
ex∑nd_ö
;

36 
ex∑nd_out
;

38 
CRYPTO_EX_DATA
 
ex_d©a
;

42 
COMP_CTX
 *
COMP_CTX_√w
(
COMP_METHOD
 *
mëh
);

43 
COMP_CTX_‰ì
(
COMP_CTX
 *
˘x
);

44 
COMP_com¥ess_block
(
COMP_CTX
 *
˘x
, *
out
, 
ﬁí
,

45 *
ö
, 
ûí
);

46 
COMP_ex∑nd_block
(
COMP_CTX
 *
˘x
, *
out
, 
ﬁí
,

47 *
ö
, 
ûí
);

48 
COMP_METHOD
 *
COMP_æe
();

49 
COMP_METHOD
 *
COMP_zlib
();

55 
ERR_lﬂd_COMP_°rögs
();

63 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/conf.h

59 #i‚de‡ 
HEADER_CONF_H


60 
	#HEADER_CONF_H


	)

62 
	~<›ís¶/bio.h
>

63 
	~<›ís¶/lhash.h
>

64 
	~<›ís¶/°ack.h
>

65 
	~<›ís¶/ß„°ack.h
>

66 
	~<›ís¶/e_os2.h
>

68 
	~<›ís¶/os¶_typ.h
>

70 #ifde‡ 
__˝lu•lus


76 *
£˘i⁄
;

77 *
«me
;

78 *
vÆue
;

79 } 
	tCONF_VALUE
;

81 
DECLARE_STACK_OF
(
CONF_VALUE
)

82 
DECLARE_STACK_OF
(
CONF_MODULE
)

83 
DECLARE_STACK_OF
(
CONF_IMODULE
)

85 
c⁄f_°
;

86 
c⁄f_mëhod_°
;

87 
c⁄f_mëhod_°
 
	tCONF_METHOD
;

89 
	sc⁄f_mëhod_°


91 c⁄° *
«me
;

92 
CONF
 *(*
¸óã
)(
CONF_METHOD
 *
mëh
);

93 (*
öô
)(
CONF
 *
c⁄f
);

94 (*
de°roy
)(
CONF
 *
c⁄f
);

95 (*
de°roy_d©a
)(
CONF
 *
c⁄f
);

96 (*
lﬂd_bio
)(
CONF
 *
c⁄f
, 
BIO
 *
bp
, *
ñöe
);

97 (*
dump
)(c⁄° 
CONF
 *
c⁄f
, 
BIO
 *
bp
);

98 (*
is_numbî
)(c⁄° 
CONF
 *
c⁄f
, 
c
);

99 (*
to_öt
)(c⁄° 
CONF
 *
c⁄f
, 
c
);

100 (*
lﬂd
)(
CONF
 *
c⁄f
, c⁄° *
«me
, *
ñöe
);

105 
c⁄f_imoduÀ_°
 
	tCONF_IMODULE
;

106 
c⁄f_moduÀ_°
 
	tCONF_MODULE
;

109 
	tc⁄f_öô_func
(
	tCONF_IMODULE
 *
	tmd
, c⁄° 
	tCONF
 *
	t˙f
);

110 
	tc⁄f_föish_func
(
	tCONF_IMODULE
 *
	tmd
);

112 
	#CONF_MFLAGS_IGNORE_ERRORS
 0x1

	)

113 
	#CONF_MFLAGS_IGNORE_RETURN_CODES
 0x2

	)

114 
	#CONF_MFLAGS_SILENT
 0x4

	)

115 
	#CONF_MFLAGS_NO_DSO
 0x8

	)

116 
	#CONF_MFLAGS_IGNORE_MISSING_FILE
 0x10

	)

118 
CONF_£t_deÁu…_mëhod
(
CONF_METHOD
 *
mëh
);

119 
CONF_£t_nc⁄f
(
CONF
 *
c⁄f
,
LHASH
 *
hash
);

120 
LHASH
 *
CONF_lﬂd
(LHASH *
c⁄f
,c⁄° *
fûe
,*
ñöe
);

121 #i‚de‡
OPENSSL_NO_FP_API


122 
LHASH
 *
CONF_lﬂd_Â
(LHASH *
c⁄f
, 
FILE
 *
Â
,*
ñöe
);

124 
LHASH
 *
CONF_lﬂd_bio
(LHASH *
c⁄f
, 
BIO
 *
bp
,*
ñöe
);

125 
STACK_OF
(
CONF_VALUE
Ë*
CONF_gë_£˘i⁄
(
LHASH
 *
c⁄f
,c⁄° *
£˘i⁄
);

126 *
CONF_gë_°rög
(
LHASH
 *
c⁄f
,c⁄° *
group
,c⁄° *
«me
);

127 
CONF_gë_numbî
(
LHASH
 *
c⁄f
,c⁄° *
group
,c⁄° *
«me
);

128 
CONF_‰ì
(
LHASH
 *
c⁄f
);

129 
CONF_dump_Â
(
LHASH
 *
c⁄f
, 
FILE
 *
out
);

130 
CONF_dump_bio
(
LHASH
 *
c⁄f
, 
BIO
 *
out
);

132 
OPENSSL_c⁄fig
(c⁄° *
c⁄fig_«me
);

133 
OPENSSL_no_c⁄fig
();

138 
	sc⁄f_°


140 
CONF_METHOD
 *
mëh
;

141 *
mëh_d©a
;

142 
LHASH
 *
d©a
;

145 
CONF
 *
NCONF_√w
(
CONF_METHOD
 *
mëh
);

146 
CONF_METHOD
 *
NCONF_deÁu…
();

147 
CONF_METHOD
 *
NCONF_WIN32
();

149 
CONF_METHOD
 *
NCONF_XML
();

151 
NCONF_‰ì
(
CONF
 *
c⁄f
);

152 
NCONF_‰ì_d©a
(
CONF
 *
c⁄f
);

154 
NCONF_lﬂd
(
CONF
 *
c⁄f
,c⁄° *
fûe
,*
ñöe
);

155 #i‚de‡
OPENSSL_NO_FP_API


156 
NCONF_lﬂd_Â
(
CONF
 *
c⁄f
, 
FILE
 *
Â
,*
ñöe
);

158 
NCONF_lﬂd_bio
(
CONF
 *
c⁄f
, 
BIO
 *
bp
,*
ñöe
);

159 
STACK_OF
(
CONF_VALUE
Ë*
NCONF_gë_£˘i⁄
(c⁄° 
CONF
 *
c⁄f
,c⁄° *
£˘i⁄
);

160 *
NCONF_gë_°rög
(c⁄° 
CONF
 *
c⁄f
,c⁄° *
group
,c⁄° *
«me
);

161 
NCONF_gë_numbî_e
(c⁄° 
CONF
 *
c⁄f
,c⁄° *
group
,c⁄° *
«me
,

162 *
ªsu…
);

163 
NCONF_dump_Â
(c⁄° 
CONF
 *
c⁄f
, 
FILE
 *
out
);

164 
NCONF_dump_bio
(c⁄° 
CONF
 *
c⁄f
, 
BIO
 *
out
);

168 
NCONF_gë_numbî
(
CONF
 *
c⁄f
,*
group
,*
«me
);

170 
	#NCONF_gë_numbî
(
c
,
g
,
n
,
r
Ë
	`NCONF_gë_numbî_e
(c,g,n,r)

	)

175 
CONF_moduÀs_lﬂd
(c⁄° 
CONF
 *
˙f
, c⁄° *
≠≤ame
,

176 
Êags
);

177 
CONF_moduÀs_lﬂd_fûe
(c⁄° *
fûíame
, c⁄° *
≠≤ame
,

178 
Êags
);

179 
CONF_moduÀs_u∆ﬂd
(
Æl
);

180 
CONF_moduÀs_föish
();

181 
CONF_moduÀs_‰ì
();

182 
CONF_moduÀ_add
(c⁄° *
«me
, 
c⁄f_öô_func
 *
ifunc
,

183 
c⁄f_föish_func
 *
ffunc
);

185 c⁄° *
CONF_imoduÀ_gë_«me
(c⁄° 
CONF_IMODULE
 *
md
);

186 c⁄° *
CONF_imoduÀ_gë_vÆue
(c⁄° 
CONF_IMODULE
 *
md
);

187 *
CONF_imoduÀ_gë_u§_d©a
(c⁄° 
CONF_IMODULE
 *
md
);

188 
CONF_imoduÀ_£t_u§_d©a
(
CONF_IMODULE
 *
md
, *
u§_d©a
);

189 
CONF_MODULE
 *
CONF_imoduÀ_gë_moduÀ
(c⁄° 
CONF_IMODULE
 *
md
);

190 
CONF_imoduÀ_gë_Êags
(c⁄° 
CONF_IMODULE
 *
md
);

191 
CONF_imoduÀ_£t_Êags
(
CONF_IMODULE
 *
md
, 
Êags
);

192 *
CONF_moduÀ_gë_u§_d©a
(
CONF_MODULE
 *
pmod
);

193 
CONF_moduÀ_£t_u§_d©a
(
CONF_MODULE
 *
pmod
, *
u§_d©a
);

195 *
CONF_gë1_deÁu…_c⁄fig_fûe
();

197 
CONF_∑r£_li°
(c⁄° *
li°
, 
£p
, 
no•c
,

198 (*
li°_cb
)(c⁄° *
ñem
, 
Àn
, *
u§
), *
¨g
);

200 
OPENSSL_lﬂd_buûtö_moduÀs
();

206 
ERR_lﬂd_CONF_°rögs
();

211 
	#CONF_F_CONF_DUMP_FP
 104

	)

212 
	#CONF_F_CONF_LOAD
 100

	)

213 
	#CONF_F_CONF_LOAD_BIO
 102

	)

214 
	#CONF_F_CONF_LOAD_FP
 103

	)

215 
	#CONF_F_CONF_MODULES_LOAD
 116

	)

216 
	#CONF_F_DEF_LOAD
 120

	)

217 
	#CONF_F_DEF_LOAD_BIO
 121

	)

218 
	#CONF_F_MODULE_INIT
 115

	)

219 
	#CONF_F_MODULE_LOAD_DSO
 117

	)

220 
	#CONF_F_MODULE_RUN
 118

	)

221 
	#CONF_F_NCONF_DUMP_BIO
 105

	)

222 
	#CONF_F_NCONF_DUMP_FP
 106

	)

223 
	#CONF_F_NCONF_GET_NUMBER
 107

	)

224 
	#CONF_F_NCONF_GET_NUMBER_E
 112

	)

225 
	#CONF_F_NCONF_GET_SECTION
 108

	)

226 
	#CONF_F_NCONF_GET_STRING
 109

	)

227 
	#CONF_F_NCONF_LOAD
 113

	)

228 
	#CONF_F_NCONF_LOAD_BIO
 110

	)

229 
	#CONF_F_NCONF_LOAD_FP
 114

	)

230 
	#CONF_F_NCONF_NEW
 111

	)

231 
	#CONF_F_STR_COPY
 101

	)

234 
	#CONF_R_ERROR_LOADING_DSO
 110

	)

235 
	#CONF_R_MISSING_CLOSE_SQUARE_BRACKET
 100

	)

236 
	#CONF_R_MISSING_EQUAL_SIGN
 101

	)

237 
	#CONF_R_MISSING_FINISH_FUNCTION
 111

	)

238 
	#CONF_R_MISSING_INIT_FUNCTION
 112

	)

239 
	#CONF_R_MODULE_INITIALIZATION_ERROR
 109

	)

240 
	#CONF_R_NO_CLOSE_BRACE
 102

	)

241 
	#CONF_R_NO_CONF
 105

	)

242 
	#CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE
 106

	)

243 
	#CONF_R_NO_SECTION
 107

	)

244 
	#CONF_R_NO_SUCH_FILE
 114

	)

245 
	#CONF_R_NO_VALUE
 108

	)

246 
	#CONF_R_UNABLE_TO_CREATE_NEW_SECTION
 103

	)

247 
	#CONF_R_UNKNOWN_MODULE_NAME
 113

	)

248 
	#CONF_R_VARIABLE_HAS_NO_VALUE
 104

	)

250 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/dh.h

59 #i‚de‡
HEADER_DH_H


60 
	#HEADER_DH_H


	)

62 
	~<›ís¶/e_os2.h
>

64 #ifde‡
OPENSSL_NO_DH


65 #îr‹ 
DH
 
is
 
dißbÀd
.

68 #i‚de‡
OPENSSL_NO_BIO


69 
	~<›ís¶/bio.h
>

71 
	~<›ís¶/os¶_typ.h
>

72 #i‚de‡
OPENSSL_NO_DEPRECATED


73 
	~<›ís¶/bn.h
>

76 
	#OPENSSL_DH_MAX_MODULUS_BITS
 10000

	)

78 
	#DH_FLAG_CACHE_MONT_P
 0x01

	)

79 
	#DH_FLAG_NO_EXP_CONSTTIME
 0x02

	)

87 #ifde‡ 
__˝lu•lus


95 
	sdh_mëhod


97 c⁄° *
«me
;

99 (*
gíî©e_key
)(
DH
 *
dh
);

100 (*
compuã_key
)(*
key
,c⁄° 
BIGNUM
 *
pub_key
,
DH
 *
dh
);

101 (*
bn_mod_exp
)(c⁄° 
DH
 *
dh
, 
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

102 c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
,

103 
BN_MONT_CTX
 *
m_˘x
);

105 (*
öô
)(
DH
 *
dh
);

106 (*
föish
)(
DH
 *
dh
);

107 
Êags
;

108 *
≠p_d©a
;

110 (*
gíî©e_∑øms
)(
DH
 *
dh
, 
¥ime_Àn
, 
gíî©‹
, 
BN_GENCB
 *
cb
);

113 
	sdh_°


117 
∑d
;

118 
vîsi⁄
;

119 
BIGNUM
 *
p
;

120 
BIGNUM
 *
g
;

121 
Àngth
;

122 
BIGNUM
 *
pub_key
;

123 
BIGNUM
 *
¥iv_key
;

125 
Êags
;

126 
BN_MONT_CTX
 *
mëhod_m⁄t_p
;

128 
BIGNUM
 *
q
;

129 
BIGNUM
 *
j
;

130 *
£ed
;

131 
£edÀn
;

132 
BIGNUM
 *
cou¡î
;

134 
ª„ªn˚s
;

135 
CRYPTO_EX_DATA
 
ex_d©a
;

136 c⁄° 
DH_METHOD
 *
mëh
;

137 
ENGINE
 *
ígöe
;

140 
	#DH_GENERATOR_2
 2

	)

142 
	#DH_GENERATOR_5
 5

	)

145 
	#DH_CHECK_P_NOT_PRIME
 0x01

	)

146 
	#DH_CHECK_P_NOT_SAFE_PRIME
 0x02

	)

147 
	#DH_UNABLE_TO_CHECK_GENERATOR
 0x04

	)

148 
	#DH_NOT_SUITABLE_GENERATOR
 0x08

	)

151 
	#DH_CHECK_PUBKEY_TOO_SMALL
 0x01

	)

152 
	#DH_CHECK_PUBKEY_TOO_LARGE
 0x02

	)

156 
	#DH_CHECK_P_NOT_STRONG_PRIME
 
DH_CHECK_P_NOT_SAFE_PRIME


	)

158 
	#DH∑øms_dup
(
x
Ë
	`ASN1_dup_of_c⁄°
(
DH
,
i2d_DH∑øms
,
d2i_DH∑øms
,x)

	)

159 
	#d2i_DH∑øms_Â
(
Â
,
x
Ë(
DH
 *)
	`ASN1_d2i_Â
((*(*)())
DH_√w
, \

160 (*(*)())
d2i_DH∑øms
,(
Â
),(**)(
x
))

	)

161 
	#i2d_DH∑øms_Â
(
Â
,
x
Ë
	`ASN1_i2d_Â
(
i2d_DH∑øms
,(fp), \

162 (*)(
x
))

	)

163 
	#d2i_DH∑øms_bio
(
bp
,
x
Ë
	`ASN1_d2i_bio_of
(
DH
,
DH_√w
,
d2i_DH∑øms
,bp,x)

	)

164 
	#i2d_DH∑øms_bio
(
bp
,
x
Ë
	`ASN1_i2d_bio_of_c⁄°
(
DH
,
i2d_DH∑øms
,bp,x)

	)

166 c⁄° 
DH_METHOD
 *
DH_O≥nSSL
();

168 
DH_£t_deÁu…_mëhod
(c⁄° 
DH_METHOD
 *
mëh
);

169 c⁄° 
DH_METHOD
 *
DH_gë_deÁu…_mëhod
();

170 
DH_£t_mëhod
(
DH
 *
dh
, c⁄° 
DH_METHOD
 *
mëh
);

171 
DH
 *
DH_√w_mëhod
(
ENGINE
 *
ígöe
);

173 
DH
 * 
DH_√w
();

174 
DH_‰ì
(
DH
 *
dh
);

175 
DH_up_ªf
(
DH
 *
dh
);

176 
DH_size
(c⁄° 
DH
 *
dh
);

177 
DH_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

178 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

179 
DH_£t_ex_d©a
(
DH
 *
d
, 
idx
, *
¨g
);

180 *
DH_gë_ex_d©a
(
DH
 *
d
, 
idx
);

183 #i‚de‡
OPENSSL_NO_DEPRECATED


184 
DH
 * 
DH_gíî©e_∑ømëîs
(
¥ime_Àn
,
gíî©‹
,

185 (*
ˇŒback
)(,,*),*
cb_¨g
);

189 
DH_gíî©e_∑ømëîs_ex
(
DH
 *
dh
, 
¥ime_Àn
,
gíî©‹
, 
BN_GENCB
 *
cb
);

191 
DH_check
(c⁄° 
DH
 *
dh
,*
codes
);

192 
DH_check_pub_key
(c⁄° 
DH
 *
dh
,c⁄° 
BIGNUM
 *
pub_key
, *
codes
);

193 
DH_gíî©e_key
(
DH
 *
dh
);

194 
DH_compuã_key
(*
key
,c⁄° 
BIGNUM
 *
pub_key
,
DH
 *
dh
);

195 
DH
 * 
d2i_DH∑øms
(DH **
a
,c⁄° **
µ
, 
Àngth
);

196 
i2d_DH∑øms
(c⁄° 
DH
 *
a
,**
µ
);

197 #i‚de‡
OPENSSL_NO_FP_API


198 
DH∑øms_¥öt_Â
(
FILE
 *
Â
, c⁄° 
DH
 *
x
);

200 #i‚de‡
OPENSSL_NO_BIO


201 
DH∑øms_¥öt
(
BIO
 *
bp
, c⁄° 
DH
 *
x
);

203 
DH∑øms_¥öt
(*
bp
, c⁄° 
DH
 *
x
);

210 
ERR_lﬂd_DH_°rögs
();

215 
	#DH_F_COMPUTE_KEY
 102

	)

216 
	#DH_F_DHPARAMS_PRINT
 100

	)

217 
	#DH_F_DHPARAMS_PRINT_FP
 101

	)

218 
	#DH_F_DH_BUILTIN_GENPARAMS
 106

	)

219 
	#DH_F_DH_NEW_METHOD
 105

	)

220 
	#DH_F_GENERATE_KEY
 103

	)

221 
	#DH_F_GENERATE_PARAMETERS
 104

	)

224 
	#DH_R_BAD_GENERATOR
 101

	)

225 
	#DH_R_INVALID_PUBKEY
 102

	)

226 
	#DH_R_MODULUS_TOO_LARGE
 103

	)

227 
	#DH_R_NO_PRIVATE_VALUE
 100

	)

229 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/dsa.h

65 #i‚de‡
HEADER_DSA_H


66 
	#HEADER_DSA_H


	)

68 
	~<›ís¶/e_os2.h
>

70 #ifde‡
OPENSSL_NO_DSA


71 #îr‹ 
DSA
 
is
 
dißbÀd
.

74 #i‚de‡
OPENSSL_NO_BIO


75 
	~<›ís¶/bio.h
>

77 
	~<›ís¶/¸y±o.h
>

78 
	~<›ís¶/os¶_typ.h
>

80 #i‚de‡
OPENSSL_NO_DEPRECATED


81 
	~<›ís¶/bn.h
>

82 #i‚de‡
OPENSSL_NO_DH


83 
	~<›ís¶/dh.h
>

87 
	#OPENSSL_DSA_MAX_MODULUS_BITS
 10000

	)

89 
	#DSA_FLAG_CACHE_MONT_P
 0x01

	)

90 
	#DSA_FLAG_NO_EXP_CONSTTIME
 0x02

	)

98 #ifde‡ 
__˝lu•lus


106 
	sDSA_SIG_°


108 
BIGNUM
 *
r
;

109 
BIGNUM
 *
s
;

110 } 
	tDSA_SIG
;

112 
	sdß_mëhod


114 c⁄° *
«me
;

115 
DSA_SIG
 * (*
dß_do_sign
)(c⁄° *
dg°
, 
dÀn
, 
DSA
 *
dß
);

116 (*
dß_sign_£tup
)(
DSA
 *
dß
, 
BN_CTX
 *
˘x_ö
, 
BIGNUM
 **
kövp
,

117 
BIGNUM
 **
Ω
);

118 (*
dß_do_vîify
)(c⁄° *
dg°
, 
dg°_Àn
,

119 
DSA_SIG
 *
sig
, 
DSA
 *
dß
);

120 (*
dß_mod_exp
)(
DSA
 *
dß
, 
BIGNUM
 *
º
, BIGNUM *
a1
, BIGNUM *
p1
,

121 
BIGNUM
 *
a2
, BIGNUM *
p2
, BIGNUM *
m
, 
BN_CTX
 *
˘x
,

122 
BN_MONT_CTX
 *
ö_m⁄t
);

123 (*
bn_mod_exp
)(
DSA
 *
dß
, 
BIGNUM
 *
r
, BIGNUM *
a
, c⁄° BIGNUM *
p
,

124 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
,

125 
BN_MONT_CTX
 *
m_˘x
);

126 (*
öô
)(
DSA
 *
dß
);

127 (*
föish
)(
DSA
 *
dß
);

128 
Êags
;

129 *
≠p_d©a
;

131 (*
dß_∑ømgí
)(
DSA
 *
dß
, 
bôs
,

132 *
£ed
, 
£ed_Àn
,

133 *
cou¡î_ªt
, *
h_ªt
,

134 
BN_GENCB
 *
cb
);

136 (*
dß_keygí
)(
DSA
 *
dß
);

139 
	sdß_°


143 
∑d
;

144 
vîsi⁄
;

145 
wrôe_∑øms
;

146 
BIGNUM
 *
p
;

147 
BIGNUM
 *
q
;

148 
BIGNUM
 *
g
;

150 
BIGNUM
 *
pub_key
;

151 
BIGNUM
 *
¥iv_key
;

153 
BIGNUM
 *
köv
;

154 
BIGNUM
 *
r
;

156 
Êags
;

158 
BN_MONT_CTX
 *
mëhod_m⁄t_p
;

159 
ª„ªn˚s
;

160 
CRYPTO_EX_DATA
 
ex_d©a
;

161 c⁄° 
DSA_METHOD
 *
mëh
;

163 
ENGINE
 *
ígöe
;

166 
	#DSA∑øms_dup
(
x
Ë
	`ASN1_dup_of_c⁄°
(
DSA
,
i2d_DSA∑øms
,
d2i_DSA∑øms
,x)

	)

167 
	#d2i_DSA∑øms_Â
(
Â
,
x
Ë(
DSA
 *)
	`ASN1_d2i_Â
((*(*)())
DSA_√w
, \

168 (*(*)())
d2i_DSA∑øms
,(
Â
),(**)(
x
))

	)

169 
	#i2d_DSA∑øms_Â
(
Â
,
x
Ë
	`ASN1_i2d_Â
(
i2d_DSA∑øms
,(fp), \

170 (*)(
x
))

	)

171 
	#d2i_DSA∑øms_bio
(
bp
,
x
Ë
	`ASN1_d2i_bio_of
(
DSA
,
DSA_√w
,
d2i_DSA∑øms
,bp,x)

	)

172 
	#i2d_DSA∑øms_bio
(
bp
,
x
Ë
	`ASN1_i2d_bio_of_c⁄°
(
DSA
,
i2d_DSA∑øms
,bp,x)

	)

175 
DSA_SIG
 * 
DSA_SIG_√w
();

176 
DSA_SIG_‰ì
(
DSA_SIG
 *
a
);

177 
i2d_DSA_SIG
(c⁄° 
DSA_SIG
 *
a
, **
µ
);

178 
DSA_SIG
 * 
d2i_DSA_SIG
(DSA_SIG **
v
, c⁄° **
µ
, 
Àngth
);

180 
DSA_SIG
 * 
DSA_do_sign
(c⁄° *
dg°
,
dÀn
,
DSA
 *
dß
);

181 
DSA_do_vîify
(c⁄° *
dg°
,
dg°_Àn
,

182 
DSA_SIG
 *
sig
,
DSA
 *
dß
);

184 c⁄° 
DSA_METHOD
 *
DSA_O≥nSSL
();

186 
DSA_£t_deÁu…_mëhod
(c⁄° 
DSA_METHOD
 *);

187 c⁄° 
DSA_METHOD
 *
DSA_gë_deÁu…_mëhod
();

188 
DSA_£t_mëhod
(
DSA
 *
dß
, c⁄° 
DSA_METHOD
 *);

190 
DSA
 * 
DSA_√w
();

191 
DSA
 * 
DSA_√w_mëhod
(
ENGINE
 *
ígöe
);

192 
DSA_‰ì
 (
DSA
 *
r
);

194 
DSA_up_ªf
(
DSA
 *
r
);

195 
DSA_size
(c⁄° 
DSA
 *);

197 
DSA_sign_£tup
–
DSA
 *
dß
,
BN_CTX
 *
˘x_ö
,
BIGNUM
 **
kövp
,BIGNUM **
Ω
);

198 
DSA_sign
(
ty≥
,c⁄° *
dg°
,
dÀn
,

199 *
sig
, *
sigÀn
, 
DSA
 *
dß
);

200 
DSA_vîify
(
ty≥
,c⁄° *
dg°
,
dg°_Àn
,

201 c⁄° *
sigbuf
, 
sigÀn
, 
DSA
 *
dß
);

202 
DSA_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

203 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

204 
DSA_£t_ex_d©a
(
DSA
 *
d
, 
idx
, *
¨g
);

205 *
DSA_gë_ex_d©a
(
DSA
 *
d
, 
idx
);

207 
DSA
 * 
d2i_DSAPublicKey
(DSA **
a
, c⁄° **
µ
, 
Àngth
);

208 
DSA
 * 
d2i_DSAPriv©eKey
(DSA **
a
, c⁄° **
µ
, 
Àngth
);

209 
DSA
 * 
d2i_DSA∑øms
(DSA **
a
, c⁄° **
µ
, 
Àngth
);

212 #i‚de‡
OPENSSL_NO_DEPRECATED


213 
DSA
 * 
DSA_gíî©e_∑ømëîs
(
bôs
,

214 *
£ed
,
£ed_Àn
,

215 *
cou¡î_ªt
, *
h_ªt
,

216 (*
ˇŒback
)(, , *),*
cb_¨g
);

220 
DSA_gíî©e_∑ømëîs_ex
(
DSA
 *
dß
, 
bôs
,

221 *
£ed
,
£ed_Àn
,

222 *
cou¡î_ªt
, *
h_ªt
, 
BN_GENCB
 *
cb
);

224 
DSA_gíî©e_key
(
DSA
 *
a
);

225 
i2d_DSAPublicKey
(c⁄° 
DSA
 *
a
, **
µ
);

226 
i2d_DSAPriv©eKey
(c⁄° 
DSA
 *
a
, **
µ
);

227 
i2d_DSA∑øms
(c⁄° 
DSA
 *
a
,**
µ
);

229 #i‚de‡
OPENSSL_NO_BIO


230 
DSA∑øms_¥öt
(
BIO
 *
bp
, c⁄° 
DSA
 *
x
);

231 
DSA_¥öt
(
BIO
 *
bp
, c⁄° 
DSA
 *
x
, 
off
);

233 #i‚de‡
OPENSSL_NO_FP_API


234 
DSA∑øms_¥öt_Â
(
FILE
 *
Â
, c⁄° 
DSA
 *
x
);

235 
DSA_¥öt_Â
(
FILE
 *
bp
, c⁄° 
DSA
 *
x
, 
off
);

238 
	#DSS_¥ime_checks
 50

	)

241 
	#DSA_is_¥ime
(
n
, 
ˇŒback
, 
cb_¨g
) \

242 
	`BN_is_¥ime
(
n
, 
DSS_¥ime_checks
, 
ˇŒback
, 
NULL
, 
cb_¨g
)

	)

244 #i‚de‡
OPENSSL_NO_DH


247 
DH
 *
DSA_dup_DH
(c⁄° 
DSA
 *
r
);

254 
ERR_lﬂd_DSA_°rögs
();

259 
	#DSA_F_D2I_DSA_SIG
 110

	)

260 
	#DSA_F_DSAPARAMS_PRINT
 100

	)

261 
	#DSA_F_DSAPARAMS_PRINT_FP
 101

	)

262 
	#DSA_F_DSA_DO_SIGN
 112

	)

263 
	#DSA_F_DSA_DO_VERIFY
 113

	)

264 
	#DSA_F_DSA_NEW_METHOD
 103

	)

265 
	#DSA_F_DSA_PRINT
 104

	)

266 
	#DSA_F_DSA_PRINT_FP
 105

	)

267 
	#DSA_F_DSA_SIGN
 106

	)

268 
	#DSA_F_DSA_SIGN_SETUP
 107

	)

269 
	#DSA_F_DSA_SIG_NEW
 109

	)

270 
	#DSA_F_DSA_VERIFY
 108

	)

271 
	#DSA_F_I2D_DSA_SIG
 111

	)

272 
	#DSA_F_SIG_CB
 114

	)

275 
	#DSA_R_BAD_Q_VALUE
 102

	)

276 
	#DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE
 100

	)

277 
	#DSA_R_MISSING_PARAMETERS
 101

	)

278 
	#DSA_R_MODULUS_TOO_LARGE
 103

	)

280 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/dtls1.h

60 #i‚de‡
HEADER_DTLS1_H


61 
	#HEADER_DTLS1_H


	)

63 
	~<›ís¶/buf„r.h
>

64 
	~<›ís¶/pqueue.h
>

66 #ifde‡ 
__˝lu•lus


70 
	#DTLS1_VERSION
 0xFEFF

	)

71 
	#DTLS1_BAD_VER
 0x0100

	)

73 
	#DTLS1_AD_MISSING_HANDSHAKE_MESSAGE
 110

	)

76 
	#DTLS1_COOKIE_LENGTH
 32

	)

78 
	#DTLS1_RT_HEADER_LENGTH
 13

	)

80 
	#DTLS1_HM_HEADER_LENGTH
 12

	)

82 
	#DTLS1_HM_BAD_FRAGMENT
 -2

	)

83 
	#DTLS1_HM_FRAGMENT_RETRY
 -3

	)

85 
	#DTLS1_CCS_HEADER_LENGTH
 1

	)

87 
	#DTLS1_AL_HEADER_LENGTH
 7

	)

90 
	sdés1_bôm≠_°


92 
PQ_64BIT
 
m≠
;

93 
Àngth
;

94 
PQ_64BIT
 
max_£q_num
;

95 } 
	tDTLS1_BITMAP
;

97 
	shm_hódî_°


99 
ty≥
;

100 
msg_Àn
;

101 
£q
;

102 
‰ag_off
;

103 
‰ag_Àn
;

104 
is_ccs
;

107 
	sccs_hódî_°


109 
ty≥
;

110 
£q
;

113 
	sdés1_timeout_°


116 
ªad_timeouts
;

119 
wrôe_timeouts
;

122 
num_Æîts
;

125 
	sªc‹d_pqueue_°


127 
ïoch
;

128 
pqueue
 
q
;

129 } 
	tªc‹d_pqueue
;

131 
	shm_‰agmít_°


133 
hm_hódî_°
 
msg_hódî
;

134 *
‰agmít
;

135 } 
	thm_‰agmít
;

137 
	sdés1_°©e_°


139 
£nd_cookõ
;

140 
cookõ
[
DTLS1_COOKIE_LENGTH
];

141 
rcvd_cookõ
[
DTLS1_COOKIE_LENGTH
];

142 
cookõ_Àn
;

149 
r_ïoch
;

150 
w_ïoch
;

153 
DTLS1_BITMAP
 
bôm≠
;

156 
DTLS1_BITMAP
 
√xt_bôm≠
;

159 
h™dshake_wrôe_£q
;

160 
√xt_h™dshake_wrôe_£q
;

162 
h™dshake_ªad_£q
;

165 
ªc‹d_pqueue
 
u≈ro˚s£d_rcds
;

166 
ªc‹d_pqueue
 
¥o˚s£d_rcds
;

169 
pqueue
 
buf„ªd_mesßges
;

172 
pqueue
 
£¡_mesßges
;

174 
mtu
;

176 
hm_hódî_°
 
w_msg_hdr
;

177 
hm_hódî_°
 
r_msg_hdr
;

179 
dés1_timeout_°
 
timeout
;

183 
Æît_‰agmít
[
DTLS1_AL_HEADER_LENGTH
];

184 
Æît_‰agmít_Àn
;

185 
h™dshake_‰agmít
[
DTLS1_HM_HEADER_LENGTH
];

186 
h™dshake_‰agmít_Àn
;

188 
ªå™smôtög
;

190 } 
	tDTLS1_STATE
;

192 
	sdés1_ªc‹d_d©a_°


194 *
∑ckë
;

195 
∑ckë_Àngth
;

196 
SSL3_BUFFER
 
rbuf
;

197 
SSL3_RECORD
 
ºec
;

198 } 
	tDTLS1_RECORD_DATA
;

202 
	#DTLS1_TMO_READ_COUNT
 2

	)

203 
	#DTLS1_TMO_WRITE_COUNT
 2

	)

205 
	#DTLS1_TMO_ALERT_COUNT
 12

	)

207 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/e_os2.h

56 
	~<›ís¶/›ís¶c⁄f.h
>

58 #i‚de‡
HEADER_E_OS2_H


59 
	#HEADER_E_OS2_H


	)

61 #ifde‡ 
__˝lu•lus


71 
	#OPENSSL_SYS_UNIX


	)

74 #i‡
deföed
(
__MWERKS__
Ë&& deföed(
macötosh
Ë|| deföed(
OPENSSL_SYSNAME_MAC
)

75 #unde‡
OPENSSL_SYS_UNIX


76 
	#OPENSSL_SYS_MACINTOSH_CLASSIC


	)

80 #i‡
deföed
(
NETWARE
Ë|| deföed(
OPENSSL_SYSNAME_NETWARE
)

81 #unde‡
OPENSSL_SYS_UNIX


82 
	#OPENSSL_SYS_NETWARE


	)

89 #i‡
deföed
(
OPENSSL_SYSNAME_MSDOS
)

90 #unde‡
OPENSSL_SYS_UNIX


91 
	#OPENSSL_SYS_MSDOS


	)

96 #i‡
deföed
(
OPENSSL_SYSNAME_UWIN
)

97 #unde‡
OPENSSL_SYS_UNIX


98 
	#OPENSSL_SYS_WIN32_UWIN


	)

100 #i‡
deföed
(
__CYGWIN32__
Ë|| deföed(
OPENSSL_SYSNAME_CYGWIN32
)

101 #unde‡
OPENSSL_SYS_UNIX


102 
	#OPENSSL_SYS_WIN32_CYGWIN


	)

104 #i‡
deföed
(
_WIN32
Ë|| deföed(
OPENSSL_SYSNAME_WIN32
)

105 #unde‡
OPENSSL_SYS_UNIX


106 
	#OPENSSL_SYS_WIN32


	)

108 #i‡
deföed
(
OPENSSL_SYSNAME_WINNT
)

109 #unde‡
OPENSSL_SYS_UNIX


110 
	#OPENSSL_SYS_WINNT


	)

112 #i‡
deföed
(
OPENSSL_SYSNAME_WINCE
)

113 #unde‡
OPENSSL_SYS_UNIX


114 
	#OPENSSL_SYS_WINCE


	)

120 #i‡
deföed
(
OPENSSL_SYS_WIN32
Ë|| deföed(
OPENSSL_SYS_WINNT
Ë|| deföed(
OPENSSL_SYS_WINCE
)

121 #unde‡
OPENSSL_SYS_UNIX


122 
	#OPENSSL_SYS_WINDOWS


	)

123 #i‚de‡
OPENSSL_SYS_MSDOS


124 
	#OPENSSL_SYS_MSDOS


	)

131 #ifde‡
OPENSSL_SYS_WINDOWS


132 #i‚de‡
OPENSSL_OPT_WINDLL


133 #i‡
deföed
(
_WINDLL
)

135 
	#OPENSSL_OPT_WINDLL


	)

141 #i‡
deföed
(
__VMS
Ë|| deföed(
VMS
Ë|| deföed(
OPENSSL_SYSNAME_VMS
)

142 #unde‡
OPENSSL_SYS_UNIX


143 
	#OPENSSL_SYS_VMS


	)

144 #i‡
deföed
(
__DECC
)

145 
	#OPENSSL_SYS_VMS_DECC


	)

146 #ñi‡
deföed
(
__DECCXX
)

147 
	#OPENSSL_SYS_VMS_DECC


	)

148 
	#OPENSSL_SYS_VMS_DECCXX


	)

150 
	#OPENSSL_SYS_VMS_NODECC


	)

155 #i‡
deföed
(
__EMX__
Ë|| deföed(
__OS2__
)

156 #unde‡
OPENSSL_SYS_UNIX


157 
	#OPENSSL_SYS_OS2


	)

161 #ifde‡
OPENSSL_SYS_UNIX


162 #i‡
deföed
(
löux
Ë|| deföed(
__löux__
Ë|| deföed(
OPENSSL_SYSNAME_LINUX
)

163 
	#OPENSSL_SYS_LINUX


	)

165 #ifde‡
OPENSSL_SYSNAME_MPE


166 
	#OPENSSL_SYS_MPE


	)

168 #ifde‡
OPENSSL_SYSNAME_SNI


169 
	#OPENSSL_SYS_SNI


	)

171 #ifde‡
OPENSSL_SYSNAME_ULTRASPARC


172 
	#OPENSSL_SYS_ULTRASPARC


	)

174 #ifde‡
OPENSSL_SYSNAME_NEWS4


175 
	#OPENSSL_SYS_NEWS4


	)

177 #ifde‡
OPENSSL_SYSNAME_MACOSX


178 
	#OPENSSL_SYS_MACOSX


	)

180 #ifde‡
OPENSSL_SYSNAME_MACOSX_RHAPSODY


181 
	#OPENSSL_SYS_MACOSX_RHAPSODY


	)

182 
	#OPENSSL_SYS_MACOSX


	)

184 #ifde‡
OPENSSL_SYSNAME_SUNOS


185 
	#OPENSSL_SYS_SUNOS


	)

187 #i‡
deföed
(
_CRAY
Ë|| deföed(
OPENSSL_SYSNAME_CRAY
)

188 
	#OPENSSL_SYS_CRAY


	)

190 #i‡
deföed
(
_AIX
Ë|| deföed(
OPENSSL_SYSNAME_AIX
)

191 
	#OPENSSL_SYS_AIX


	)

196 #ifde‡
OPENSSL_SYSNAME_VOS


197 
	#OPENSSL_SYS_VOS


	)

201 #ifde‡
OPENSSL_SYSNAME_VXWORKS


202 
	#OPENSSL_SYS_VXWORKS


	)

211 #ifde‡
OPENSSL_SYS_MSDOS


212 
	#OPENSSL_UNISTD_IO
 <
io
.
h
>

	)

213 
	#OPENSSL_DECLARE_EXIT
 
	`exô
();

	)

215 
	#OPENSSL_UNISTD_IO
 
OPENSSL_UNISTD


	)

216 
	#OPENSSL_DECLARE_EXIT


	)

238 #i‡
deföed
(
OPENSSL_SYS_VMS_NODECC
)

239 
	#OPENSSL_EXPORT
 
globÆªf


	)

240 
	#OPENSSL_IMPORT
 
globÆªf


	)

241 
	#OPENSSL_GLOBAL
 
globÆdef


	)

242 #ñi‡
deföed
(
OPENSSL_SYS_WINDOWS
Ë&& deföed(
OPENSSL_OPT_WINDLL
)

243 
	#OPENSSL_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

244 
	#OPENSSL_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

245 
	#OPENSSL_GLOBAL


	)

247 
	#OPENSSL_EXPORT
 

	)

248 
	#OPENSSL_IMPORT
 

	)

249 
	#OPENSSL_GLOBAL


	)

251 
	#OPENSSL_EXTERN
 
OPENSSL_IMPORT


	)

263 #ifde‡
OPENSSL_EXPORT_VAR_AS_FUNCTION


264 
	#OPENSSL_IMPLEMENT_GLOBAL
(
ty≥
,
«me
) \

265 
ty≥
 
_hide_
##
«me
; \

266 
ty≥
 *
_shadow_
##
	`«me
(Ë{  &
_hide_
##
«me
; } \

267 
ty≥
 
_hide_
##
«me


	)

268 
	#OPENSSL_DECLARE_GLOBAL
(
ty≥
,
«me
Ëty≥ *
_shadow_
##
	`«me
()

	)

269 
	#OPENSSL_GLOBAL_REF
(
«me
Ë(*(
_shadow_
##
	`«me
()))

	)

271 
	#OPENSSL_IMPLEMENT_GLOBAL
(
ty≥
,
«me
Ë
OPENSSL_GLOBAL
Åy≥ 
_shadow_
##
	)
name

272 
	#OPENSSL_DECLARE_GLOBAL
(
ty≥
,
«me
Ë
OPENSSL_EXPORT
Åy≥ 
_shadow_
##
	)
name

273 
	#OPENSSL_GLOBAL_REF
(
«me
Ë
_shadow_
##
	)
name

276 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ebcdic.h

3 #i‚de‡
HEADER_EBCDIC_H


4 
	#HEADER_EBCDIC_H


	)

6 
	~<sys/ty≥s.h
>

9 
	#os_tﬂscii
 
_›ís¶_os_tﬂscii


	)

10 
	#os_t€bcdic
 
_›ís¶_os_t€bcdic


	)

11 
	#ebcdic2ascii
 
_›ís¶_ebcdic2ascii


	)

12 
	#ascii2ebcdic
 
_›ís¶_ascii2ebcdic


	)

14 c⁄° 
os_tﬂscii
[256];

15 c⁄° 
os_t€bcdic
[256];

16 *
ebcdic2ascii
(*
de°
, c⁄° *
§˚
, 
size_t
 
cou¡
);

17 *
ascii2ebcdic
(*
de°
, c⁄° *
§˚
, 
size_t
 
cou¡
);

	@/usr/include/openssl/evp.h

59 #i‚de‡
HEADER_ENVELOPE_H


60 
	#HEADER_ENVELOPE_H


	)

62 #ifde‡
OPENSSL_ALGORITHM_DEFINES


63 
	~<›ís¶/›ís¶c⁄f.h
>

65 
	#OPENSSL_ALGORITHM_DEFINES


	)

66 
	~<›ís¶/›ís¶c⁄f.h
>

67 #unde‡
OPENSSL_ALGORITHM_DEFINES


70 
	~<›ís¶/os¶_typ.h
>

72 
	~<›ís¶/symhacks.h
>

74 #i‚de‡
OPENSSL_NO_BIO


75 
	~<›ís¶/bio.h
>

85 
	#EVP_MAX_MD_SIZE
 64

	)

86 
	#EVP_MAX_KEY_LENGTH
 32

	)

87 
	#EVP_MAX_IV_LENGTH
 16

	)

88 
	#EVP_MAX_BLOCK_LENGTH
 32

	)

90 
	#PKCS5_SALT_LEN
 8

	)

92 
	#PKCS5_DEFAULT_ITER
 2048

	)

94 
	~<›ís¶/obje˘s.h
>

96 
	#EVP_PK_RSA
 0x0001

	)

97 
	#EVP_PK_DSA
 0x0002

	)

98 
	#EVP_PK_DH
 0x0004

	)

99 
	#EVP_PK_EC
 0x0008

	)

100 
	#EVP_PKT_SIGN
 0x0010

	)

101 
	#EVP_PKT_ENC
 0x0020

	)

102 
	#EVP_PKT_EXCH
 0x0040

	)

103 
	#EVP_PKS_RSA
 0x0100

	)

104 
	#EVP_PKS_DSA
 0x0200

	)

105 
	#EVP_PKS_EC
 0x0400

	)

106 
	#EVP_PKT_EXP
 0x1000

	)

108 
	#EVP_PKEY_NONE
 
NID_undef


	)

109 
	#EVP_PKEY_RSA
 
NID_rßEn¸y±i⁄


	)

110 
	#EVP_PKEY_RSA2
 
NID_rß


	)

111 
	#EVP_PKEY_DSA
 
NID_dß


	)

112 
	#EVP_PKEY_DSA1
 
NID_dß_2


	)

113 
	#EVP_PKEY_DSA2
 
NID_dßWôhSHA


	)

114 
	#EVP_PKEY_DSA3
 
NID_dßWôhSHA1


	)

115 
	#EVP_PKEY_DSA4
 
NID_dßWôhSHA1_2


	)

116 
	#EVP_PKEY_DH
 
NID_dhKeyAgªemít


	)

117 
	#EVP_PKEY_EC
 
NID_X9_62_id_ecPublicKey


	)

119 #ifdef 
__˝lu•lus


126 
	sevp_pkey_°


128 
ty≥
;

129 
ßve_ty≥
;

130 
ª„ªn˚s
;

132 *
±r
;

133 #i‚de‡
OPENSSL_NO_RSA


134 
rß_°
 *
rß
;

136 #i‚de‡
OPENSSL_NO_DSA


137 
dß_°
 *
dß
;

139 #i‚de‡
OPENSSL_NO_DH


140 
dh_°
 *
dh
;

142 } 
pkey
;

143 
ßve_∑ømëîs
;

144 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

147 
	#EVP_PKEY_MO_SIGN
 0x0001

	)

148 
	#EVP_PKEY_MO_VERIFY
 0x0002

	)

149 
	#EVP_PKEY_MO_ENCRYPT
 0x0004

	)

150 
	#EVP_PKEY_MO_DECRYPT
 0x0008

	)

163 
	sevp_pkey_md_°


165 
oid
;

166 
EVP_MD
 *
md
;

167 
EVP_PKEY_METHOD
 *
pkey
;

168 } 
	tEVP_PKEY_MD
;

170 
	#EVP_rß_md2
() \

171 
	`EVP_PKEY_MD_add
(
NID_md2WôhRSAEn¸y±i⁄
,\

172 
	`EVP_rß_pkcs1
(),
	`EVP_md2
())

	)

173 
	#EVP_rß_md5
() \

174 
	`EVP_PKEY_MD_add
(
NID_md5WôhRSAEn¸y±i⁄
,\

175 
	`EVP_rß_pkcs1
(),
	`EVP_md5
())

	)

176 
	#EVP_rß_sha0
() \

177 
	`EVP_PKEY_MD_add
(
NID_shaWôhRSAEn¸y±i⁄
,\

178 
	`EVP_rß_pkcs1
(),
	`EVP_sha
())

	)

179 
	#EVP_rß_sha1
() \

180 
	`EVP_PKEY_MD_add
(
NID_sha1WôhRSAEn¸y±i⁄
,\

181 
	`EVP_rß_pkcs1
(),
	`EVP_sha1
())

	)

182 
	#EVP_rß_rùemd160
() \

183 
	`EVP_PKEY_MD_add
(
NID_rùemd160WôhRSA
,\

184 
	`EVP_rß_pkcs1
(),
	`EVP_rùemd160
())

	)

185 
	#EVP_rß_mdc2
() \

186 
	`EVP_PKEY_MD_add
(
NID_mdc2WôhRSA
,\

187 
	`EVP_rß_o˘ë_°rög
(),
	`EVP_mdc2
())

	)

188 
	#EVP_dß_sha
() \

189 
	`EVP_PKEY_MD_add
(
NID_dßWôhSHA
,\

190 
	`EVP_dß
(),
	`EVP_sha
())

	)

191 
	#EVP_dß_sha1
() \

192 
	`EVP_PKEY_MD_add
(
NID_dßWôhSHA1
,\

193 
	`EVP_dß
(),
	`EVP_sha1
())

	)

195 
	sevp_pkey_mëhod_°


197 *
«me
;

198 
Êags
;

199 
ty≥
;

200 
oid
;

201 
í¸y±_oid
;

203 (*
sign
)();

204 (*
vîify
)();

206 (*
£t
)();

207 (*
gë
)();

208 (*
í¸y±
)();

209 (*
de¸y±
)();

210 (*
i2d
)();

211 (*
d2i
)();

212 (*
dup
)();

213 } 
pub
,
¥iv
;

214 (*
£t_a¢1_∑ømëîs
)();

215 (*
gë_a¢1_∑ømëîs
)();

216 } 
	tEVP_PKEY_METHOD
;

219 #i‚de‡
EVP_MD


220 
	sív_md_°


222 
ty≥
;

223 
pkey_ty≥
;

224 
md_size
;

225 
Êags
;

226 (*
öô
)(
EVP_MD_CTX
 *
˘x
);

227 (*
upd©e
)(
EVP_MD_CTX
 *
˘x
,c⁄° *
d©a
,
size_t
 
cou¡
);

228 (*
föÆ
)(
EVP_MD_CTX
 *
˘x
,*
md
);

229 (*
c›y
)(
EVP_MD_CTX
 *
to
,c⁄° EVP_MD_CTX *
‰om
);

230 (*
˛ónup
)(
EVP_MD_CTX
 *
˘x
);

233 (*
sign
)(
ty≥
, c⁄° *
m
, 
m_Àngth
,

234 *
sigªt
, *
sigÀn
, *
key
);

235 (*
vîify
)(
ty≥
, c⁄° *
m
, 
m_Àngth
,

236 c⁄° *
sigbuf
, 
sigÀn
,

237 *
key
);

238 
ªquúed_pkey_ty≥
[5];

239 
block_size
;

240 
˘x_size
;

243 
	tevp_sign_mëhod
(
	tty≥
,c⁄° *
	tm
,

244 
	tm_Àngth
,*
	tsigªt
,

245 *
	tsigÀn
, *
	tkey
);

246 
	tevp_vîify_mëhod
(
	tty≥
,c⁄° *
	tm
,

247 
	tm_Àngth
,c⁄° *
	tsigbuf
,

248 
	tsigÀn
, *
	tkey
);

250 
	#EVP_MD_FLAG_ONESHOT
 0x0001

	)

253 
	#EVP_PKEY_NULL_mëhod
 
NULL
,NULL,{0,0,0,0}

	)

255 #i‚de‡
OPENSSL_NO_DSA


256 
	#EVP_PKEY_DSA_mëhod
 (
evp_sign_mëhod
 *)
DSA_sign
, \

257 (
evp_vîify_mëhod
 *)
DSA_vîify
, \

258 {
EVP_PKEY_DSA
,
EVP_PKEY_DSA2
,
EVP_PKEY_DSA3
, \

259 
EVP_PKEY_DSA4
,0}

	)

261 
	#EVP_PKEY_DSA_mëhod
 
EVP_PKEY_NULL_mëhod


	)

265 #i‚de‡
OPENSSL_NO_RSA


266 
	#EVP_PKEY_RSA_mëhod
 (
evp_sign_mëhod
 *)
RSA_sign
, \

267 (
evp_vîify_mëhod
 *)
RSA_vîify
, \

268 {
EVP_PKEY_RSA
,
EVP_PKEY_RSA2
,0,0}

	)

269 
	#EVP_PKEY_RSA_ASN1_OCTET_STRING_mëhod
 \

270 (
evp_sign_mëhod
 *)
RSA_sign_ASN1_OCTET_STRING
, \

271 (
evp_vîify_mëhod
 *)
RSA_vîify_ASN1_OCTET_STRING
, \

272 {
EVP_PKEY_RSA
,
EVP_PKEY_RSA2
,0,0}

	)

274 
	#EVP_PKEY_RSA_mëhod
 
EVP_PKEY_NULL_mëhod


	)

275 
	#EVP_PKEY_RSA_ASN1_OCTET_STRING_mëhod
 
EVP_PKEY_NULL_mëhod


	)

280 
	sív_md_˘x_°


282 c⁄° 
EVP_MD
 *
dige°
;

283 
ENGINE
 *
ígöe
;

284 
Êags
;

285 *
md_d©a
;

290 
	#EVP_MD_CTX_FLAG_ONESHOT
 0x0001

	)

292 
	#EVP_MD_CTX_FLAG_CLEANED
 0x0002

	)

294 
	#EVP_MD_CTX_FLAG_REUSE
 0x0004

	)

297 
	sevp_cùhî_°


299 
nid
;

300 
block_size
;

301 
key_Àn
;

302 
iv_Àn
;

303 
Êags
;

304 (*
öô
)(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
key
,

305 c⁄° *
iv
, 
íc
);

306 (*
do_cùhî
)(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

307 c⁄° *
ö
, 
öl
);

308 (*
˛ónup
)(
EVP_CIPHER_CTX
 *);

309 
˘x_size
;

310 (*
£t_a¢1_∑ømëîs
)(
EVP_CIPHER_CTX
 *, 
ASN1_TYPE
 *);

311 (*
gë_a¢1_∑ømëîs
)(
EVP_CIPHER_CTX
 *, 
ASN1_TYPE
 *);

312 (*
˘æ
)(
EVP_CIPHER_CTX
 *, 
ty≥
, 
¨g
, *
±r
);

313 *
≠p_d©a
;

320 
	#EVP_CIPH_STREAM_CIPHER
 0x0

	)

321 
	#EVP_CIPH_ECB_MODE
 0x1

	)

322 
	#EVP_CIPH_CBC_MODE
 0x2

	)

323 
	#EVP_CIPH_CFB_MODE
 0x3

	)

324 
	#EVP_CIPH_OFB_MODE
 0x4

	)

325 
	#EVP_CIPH_MODE
 0x7

	)

327 
	#EVP_CIPH_VARIABLE_LENGTH
 0x8

	)

329 
	#EVP_CIPH_CUSTOM_IV
 0x10

	)

331 
	#EVP_CIPH_ALWAYS_CALL_INIT
 0x20

	)

333 
	#EVP_CIPH_CTRL_INIT
 0x40

	)

335 
	#EVP_CIPH_CUSTOM_KEY_LENGTH
 0x80

	)

337 
	#EVP_CIPH_NO_PADDING
 0x100

	)

339 
	#EVP_CIPH_RAND_KEY
 0x200

	)

343 
	#EVP_CTRL_INIT
 0x0

	)

344 
	#EVP_CTRL_SET_KEY_LENGTH
 0x1

	)

345 
	#EVP_CTRL_GET_RC2_KEY_BITS
 0x2

	)

346 
	#EVP_CTRL_SET_RC2_KEY_BITS
 0x3

	)

347 
	#EVP_CTRL_GET_RC5_ROUNDS
 0x4

	)

348 
	#EVP_CTRL_SET_RC5_ROUNDS
 0x5

	)

349 
	#EVP_CTRL_RAND_KEY
 0x6

	)

351 
	sevp_cùhî_öfo_°


353 c⁄° 
EVP_CIPHER
 *
cùhî
;

354 
iv
[
EVP_MAX_IV_LENGTH
];

355 } 
	tEVP_CIPHER_INFO
;

357 
	sevp_cùhî_˘x_°


359 c⁄° 
EVP_CIPHER
 *
cùhî
;

360 
ENGINE
 *
ígöe
;

361 
í¸y±
;

362 
buf_Àn
;

364 
oiv
[
EVP_MAX_IV_LENGTH
];

365 
iv
[
EVP_MAX_IV_LENGTH
];

366 
buf
[
EVP_MAX_BLOCK_LENGTH
];

367 
num
;

369 *
≠p_d©a
;

370 
key_Àn
;

371 
Êags
;

372 *
cùhî_d©a
;

373 
föÆ_u£d
;

374 
block_mask
;

375 
föÆ
[
EVP_MAX_BLOCK_LENGTH
];

378 
	sevp_Encode_Ctx_°


380 
num
;

381 
Àngth
;

386 
íc_d©a
[80];

387 
löe_num
;

388 
ex≥˘_∆
;

389 } 
	tEVP_ENCODE_CTX
;

392 (
EVP_PBE_KEYGEN
)(
	tEVP_CIPHER_CTX
 *
	t˘x
, c⁄° *
	t∑ss
, 
	t∑s¶í
,

393 
	tASN1_TYPE
 *
	t∑øm
, c⁄° 
	tEVP_CIPHER
 *
	tcùhî
,

394 c⁄° 
	tEVP_MD
 *
	tmd
, 
	tí_de
);

396 #i‚de‡
OPENSSL_NO_RSA


397 
	#EVP_PKEY_assign_RSA
(
pkey
,
rß
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_RSA
,\

398 (*)(
rß
))

	)

401 #i‚de‡
OPENSSL_NO_DSA


402 
	#EVP_PKEY_assign_DSA
(
pkey
,
dß
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_DSA
,\

403 (*)(
dß
))

	)

406 #i‚de‡
OPENSSL_NO_DH


407 
	#EVP_PKEY_assign_DH
(
pkey
,
dh
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_DH
,\

408 (*)(
dh
))

	)

413 
	#EVP_gë_dige°bynid
(
a
Ë
	`EVP_gë_dige°by«me
(
	`OBJ_nid2¢
◊))

	)

414 
	#EVP_gë_dige°byobj
(
a
Ë
	`EVP_gë_dige°bynid
(
	`OBJ_obj2nid
◊))

	)

415 
	#EVP_gë_cùhîbynid
(
a
Ë
	`EVP_gë_cùhîby«me
(
	`OBJ_nid2¢
◊))

	)

416 
	#EVP_gë_cùhîbyobj
(
a
Ë
	`EVP_gë_cùhîbynid
(
	`OBJ_obj2nid
◊))

	)

418 
	#EVP_MD_ty≥
(
e
Ë(”)->
ty≥
)

	)

419 
	#EVP_MD_nid
(
e
Ë
	`EVP_MD_ty≥
”)

	)

420 
	#EVP_MD_«me
(
e
Ë
	`OBJ_nid2¢
(
	`EVP_MD_nid
”))

	)

421 
	#EVP_MD_pkey_ty≥
(
e
Ë(”)->
pkey_ty≥
)

	)

422 
	#EVP_MD_size
(
e
Ë(”)->
md_size
)

	)

423 
	#EVP_MD_block_size
(
e
Ë(”)->
block_size
)

	)

425 
	#EVP_MD_CTX_md
(
e
Ë(”)->
dige°
)

	)

426 
	#EVP_MD_CTX_size
(
e
Ë
	`EVP_MD_size
(”)->
dige°
)

	)

427 
	#EVP_MD_CTX_block_size
(
e
Ë
	`EVP_MD_block_size
(”)->
dige°
)

	)

428 
	#EVP_MD_CTX_ty≥
(
e
Ë
	`EVP_MD_ty≥
(”)->
dige°
)

	)

430 
	#EVP_CIPHER_nid
(
e
Ë(”)->
nid
)

	)

431 
	#EVP_CIPHER_«me
(
e
Ë
	`OBJ_nid2¢
(
	`EVP_CIPHER_nid
”))

	)

432 
	#EVP_CIPHER_block_size
(
e
Ë(”)->
block_size
)

	)

433 
	#EVP_CIPHER_key_Àngth
(
e
Ë(”)->
key_Àn
)

	)

434 
	#EVP_CIPHER_iv_Àngth
(
e
Ë(”)->
iv_Àn
)

	)

435 
	#EVP_CIPHER_Êags
(
e
Ë(”)->
Êags
)

	)

436 
	#EVP_CIPHER_mode
(
e
Ë((”)->
Êags
Ë& 
EVP_CIPH_MODE
)

	)

438 
	#EVP_CIPHER_CTX_cùhî
(
e
Ë(”)->
cùhî
)

	)

439 
	#EVP_CIPHER_CTX_nid
(
e
Ë(”)->
cùhî
->
nid
)

	)

440 
	#EVP_CIPHER_CTX_block_size
(
e
Ë(”)->
cùhî
->
block_size
)

	)

441 
	#EVP_CIPHER_CTX_key_Àngth
(
e
Ë(”)->
key_Àn
)

	)

442 
	#EVP_CIPHER_CTX_iv_Àngth
(
e
Ë(”)->
cùhî
->
iv_Àn
)

	)

443 
	#EVP_CIPHER_CTX_gë_≠p_d©a
(
e
Ë(”)->
≠p_d©a
)

	)

444 
	#EVP_CIPHER_CTX_£t_≠p_d©a
(
e
,
d
Ë(”)->
≠p_d©a
=(*)(d))

	)

445 
	#EVP_CIPHER_CTX_ty≥
(
c
Ë
	`EVP_CIPHER_ty≥
(
	`EVP_CIPHER_CTX_cùhî
(c))

	)

446 
	#EVP_CIPHER_CTX_Êags
(
e
Ë(”)->
cùhî
->
Êags
)

	)

447 
	#EVP_CIPHER_CTX_mode
(
e
Ë(”)->
cùhî
->
Êags
 & 
EVP_CIPH_MODE
)

	)

449 
	#EVP_ENCODE_LENGTH
(
l
Ë((÷+2)/3*4)+÷/48+1)*2+80)

	)

450 
	#EVP_DECODE_LENGTH
(
l
Ë(÷+3)/4*3+80)

	)

452 
	#EVP_SignInô_ex
(
a
,
b
,
c
Ë
	`EVP_Dige°Inô_ex
◊,b,c)

	)

453 
	#EVP_SignInô
(
a
,
b
Ë
	`EVP_Dige°Inô
◊,b)

	)

454 
	#EVP_SignUpd©e
(
a
,
b
,
c
Ë
	`EVP_Dige°Upd©e
◊,b,c)

	)

455 
	#EVP_VîifyInô_ex
(
a
,
b
,
c
Ë
	`EVP_Dige°Inô_ex
◊,b,c)

	)

456 
	#EVP_VîifyInô
(
a
,
b
Ë
	`EVP_Dige°Inô
◊,b)

	)

457 
	#EVP_VîifyUpd©e
(
a
,
b
,
c
Ë
	`EVP_Dige°Upd©e
◊,b,c)

	)

458 
	#EVP_O≥nUpd©e
(
a
,
b
,
c
,
d
,
e
Ë
	`EVP_De¸y±Upd©e
◊,b,c,d,e)

	)

459 
	#EVP_SólUpd©e
(
a
,
b
,
c
,
d
,
e
Ë
	`EVP_En¸y±Upd©e
◊,b,c,d,e)

	)

461 #ifde‡
CONST_STRICT


462 
BIO_£t_md
(
BIO
 *,c⁄° 
EVP_MD
 *
md
);

464 
	#BIO_£t_md
(
b
,
md
Ë
	`BIO_˘æ
(b,
BIO_C_SET_MD
,0,(*)md)

	)

466 
	#BIO_gë_md
(
b
,
mdp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_MD
,0,(*)mdp)

	)

467 
	#BIO_gë_md_˘x
(
b
,
md˝
Ë
	`BIO_˘æ
(b,
BIO_C_GET_MD_CTX
,0,(*)md˝)

	)

468 
	#BIO_gë_cùhî_°©us
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_CIPHER_STATUS
,0,
NULL
)

	)

469 
	#BIO_gë_cùhî_˘x
(
b
,
c_µ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_CIPHER_CTX
,0,(*)c_µ)

	)

471 
	#EVP_Cùhî
(
c
,
o
,
i
,
l
Ë(c)->
cùhî
->
	`do_cùhî
((c),(o),(i),÷))

	)

473 
	#EVP_add_cùhî_Æüs
(
n
,
Æüs
) \

474 
	`OBJ_NAME_add
((
Æüs
),
OBJ_NAME_TYPE_CIPHER_METH
|
OBJ_NAME_ALIAS
,(
n
))

	)

475 
	#EVP_add_dige°_Æüs
(
n
,
Æüs
) \

476 
	`OBJ_NAME_add
((
Æüs
),
OBJ_NAME_TYPE_MD_METH
|
OBJ_NAME_ALIAS
,(
n
))

	)

477 
	#EVP_dñëe_cùhî_Æüs
(
Æüs
) \

478 
	`OBJ_NAME_ªmove
(
Æüs
,
OBJ_NAME_TYPE_CIPHER_METH
|
OBJ_NAME_ALIAS
);

	)

479 
	#EVP_dñëe_dige°_Æüs
(
Æüs
) \

480 
	`OBJ_NAME_ªmove
(
Æüs
,
OBJ_NAME_TYPE_MD_METH
|
OBJ_NAME_ALIAS
);

	)

482 
EVP_MD_CTX_öô
(
EVP_MD_CTX
 *
˘x
);

483 
EVP_MD_CTX_˛ónup
(
EVP_MD_CTX
 *
˘x
);

484 
EVP_MD_CTX
 *
EVP_MD_CTX_¸óã
();

485 
EVP_MD_CTX_de°roy
(
EVP_MD_CTX
 *
˘x
);

486 
EVP_MD_CTX_c›y_ex
(
EVP_MD_CTX
 *
out
,c⁄° EVP_MD_CTX *
ö
);

487 
	#EVP_MD_CTX_£t_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
|=(Êgs))

	)

488 
	#EVP_MD_CTX_˛ór_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
&=~(Êgs))

	)

489 
	#EVP_MD_CTX_ã°_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
&(Êgs))

	)

490 
EVP_Dige°Inô_ex
(
EVP_MD_CTX
 *
˘x
, c⁄° 
EVP_MD
 *
ty≥
, 
ENGINE
 *
im∂
);

491 
EVP_Dige°Upd©e
(
EVP_MD_CTX
 *
˘x
,c⁄° *
d
,

492 
size_t
 
˙t
);

493 
EVP_Dige°FöÆ_ex
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
);

494 
EVP_Dige°
(c⁄° *
d©a
, 
size_t
 
cou¡
,

495 *
md
, *
size
, c⁄° 
EVP_MD
 *
ty≥
, 
ENGINE
 *
im∂
);

497 
EVP_MD_CTX_c›y
(
EVP_MD_CTX
 *
out
,c⁄° EVP_MD_CTX *
ö
);

498 
EVP_Dige°Inô
(
EVP_MD_CTX
 *
˘x
, c⁄° 
EVP_MD
 *
ty≥
);

499 
EVP_Dige°FöÆ
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
);

501 
EVP_ªad_pw_°rög
(*
buf
,
Àngth
,c⁄° *
¥om±
,
vîify
);

502 
EVP_£t_pw_¥om±
(c⁄° *
¥om±
);

503 * 
EVP_gë_pw_¥om±
();

505 
EVP_ByãsToKey
(c⁄° 
EVP_CIPHER
 *
ty≥
,c⁄° 
EVP_MD
 *
md
,

506 c⁄° *
ß…
, c⁄° *
d©a
,

507 
d©Æ
, 
cou¡
, *
key
,*
iv
);

509 
EVP_En¸y±Inô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

510 c⁄° *
key
, c⁄° *
iv
);

511 
EVP_En¸y±Inô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

512 c⁄° *
key
, c⁄° *
iv
);

513 
EVP_En¸y±Upd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

514 *
oué
, c⁄° *
ö
, 
öl
);

515 
EVP_En¸y±FöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
);

516 
EVP_En¸y±FöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
);

518 
EVP_De¸y±Inô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

519 c⁄° *
key
, c⁄° *
iv
);

520 
EVP_De¸y±Inô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

521 c⁄° *
key
, c⁄° *
iv
);

522 
EVP_De¸y±Upd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

523 *
oué
, c⁄° *
ö
, 
öl
);

524 
EVP_De¸y±FöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
);

525 
EVP_De¸y±FöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
);

527 
EVP_CùhîInô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

528 c⁄° *
key
,c⁄° *
iv
,

529 
íc
);

530 
EVP_CùhîInô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

531 c⁄° *
key
,c⁄° *
iv
,

532 
íc
);

533 
EVP_CùhîUpd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

534 *
oué
, c⁄° *
ö
, 
öl
);

535 
EVP_CùhîFöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
);

536 
EVP_CùhîFöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
);

538 
EVP_SignFöÆ
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
,

539 
EVP_PKEY
 *
pkey
);

541 
EVP_VîifyFöÆ
(
EVP_MD_CTX
 *
˘x
,c⁄° *
sigbuf
,

542 
sigÀn
,
EVP_PKEY
 *
pkey
);

544 
EVP_O≥nInô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
ty≥
,

545 c⁄° *
ek
, 
ekl
, c⁄° *
iv
,

546 
EVP_PKEY
 *
¥iv
);

547 
EVP_O≥nFöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
);

549 
EVP_SólInô
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° 
EVP_CIPHER
 *
ty≥
,

550 **
ek
, *
ekl
, *
iv
,

551 
EVP_PKEY
 **
pubk
, 
≈ubk
);

552 
EVP_SólFöÆ
(
EVP_CIPHER_CTX
 *
˘x
,*
out
,*
oué
);

554 
EVP_EncodeInô
(
EVP_ENCODE_CTX
 *
˘x
);

555 
EVP_EncodeUpd©e
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
,

556 c⁄° *
ö
,
öl
);

557 
EVP_EncodeFöÆ
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
);

558 
EVP_EncodeBlock
(*
t
, c⁄° *
f
, 
n
);

560 
EVP_DecodeInô
(
EVP_ENCODE_CTX
 *
˘x
);

561 
EVP_DecodeUpd©e
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
,

562 c⁄° *
ö
, 
öl
);

563 
EVP_DecodeFöÆ
(
EVP_ENCODE_CTX
 *
˘x
, 

564 *
out
, *
oué
);

565 
EVP_DecodeBlock
(*
t
, c⁄° *
f
, 
n
);

567 
EVP_CIPHER_CTX_öô
(
EVP_CIPHER_CTX
 *
a
);

568 
EVP_CIPHER_CTX_˛ónup
(
EVP_CIPHER_CTX
 *
a
);

569 
EVP_CIPHER_CTX
 *
EVP_CIPHER_CTX_√w
();

570 
EVP_CIPHER_CTX_‰ì
(
EVP_CIPHER_CTX
 *
a
);

571 
EVP_CIPHER_CTX_£t_key_Àngth
(
EVP_CIPHER_CTX
 *
x
, 
keyÀn
);

572 
EVP_CIPHER_CTX_£t_∑ddög
(
EVP_CIPHER_CTX
 *
c
, 
∑d
);

573 
EVP_CIPHER_CTX_˘æ
(
EVP_CIPHER_CTX
 *
˘x
, 
ty≥
, 
¨g
, *
±r
);

574 
EVP_CIPHER_CTX_ønd_key
(
EVP_CIPHER_CTX
 *
˘x
, *
key
);

576 #i‚de‡
OPENSSL_NO_BIO


577 
BIO_METHOD
 *
BIO_f_md
();

578 
BIO_METHOD
 *
BIO_f_ba£64
();

579 
BIO_METHOD
 *
BIO_f_cùhî
();

580 
BIO_METHOD
 *
BIO_f_ªlübÀ
();

581 
BIO_£t_cùhî
(
BIO
 *
b
,c⁄° 
EVP_CIPHER
 *
c
,c⁄° *
k
,

582 c⁄° *
i
, 
íc
);

585 c⁄° 
EVP_MD
 *
EVP_md_nuŒ
();

586 #i‚de‡
OPENSSL_NO_MD2


587 c⁄° 
EVP_MD
 *
EVP_md2
();

589 #i‚de‡
OPENSSL_NO_MD4


590 c⁄° 
EVP_MD
 *
EVP_md4
();

592 #i‚de‡
OPENSSL_NO_MD5


593 c⁄° 
EVP_MD
 *
EVP_md5
();

595 #i‚de‡
OPENSSL_NO_SHA


596 c⁄° 
EVP_MD
 *
EVP_sha
();

597 c⁄° 
EVP_MD
 *
EVP_sha1
();

598 c⁄° 
EVP_MD
 *
EVP_dss
();

599 c⁄° 
EVP_MD
 *
EVP_dss1
();

600 c⁄° 
EVP_MD
 *
EVP_ecdß
();

602 #i‚de‡
OPENSSL_NO_SHA256


603 c⁄° 
EVP_MD
 *
EVP_sha224
();

604 c⁄° 
EVP_MD
 *
EVP_sha256
();

606 #i‚de‡
OPENSSL_NO_SHA512


607 c⁄° 
EVP_MD
 *
EVP_sha384
();

608 c⁄° 
EVP_MD
 *
EVP_sha512
();

610 #i‚de‡
OPENSSL_NO_RIPEMD


611 c⁄° 
EVP_MD
 *
EVP_rùemd160
();

613 c⁄° 
EVP_CIPHER
 *
EVP_íc_nuŒ
();

614 #i‚de‡
OPENSSL_NO_DES


615 c⁄° 
EVP_CIPHER
 *
EVP_des_ecb
();

616 c⁄° 
EVP_CIPHER
 *
EVP_des_ede
();

617 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3
();

618 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_ecb
();

619 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_ecb
();

620 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb64
();

621 
	#EVP_des_cfb
 
EVP_des_cfb64


	)

622 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb1
();

623 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb8
();

624 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb64
();

625 
	#EVP_des_ede_cfb
 
EVP_des_ede_cfb64


	)

627 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb1
();

628 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb8
();

630 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb64
();

631 
	#EVP_des_ede3_cfb
 
EVP_des_ede3_cfb64


	)

632 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb1
();

633 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb8
();

634 c⁄° 
EVP_CIPHER
 *
EVP_des_ofb
();

635 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_ofb
();

636 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_ofb
();

637 c⁄° 
EVP_CIPHER
 *
EVP_des_cbc
();

638 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cbc
();

639 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cbc
();

640 c⁄° 
EVP_CIPHER
 *
EVP_desx_cbc
();

644 #ifde‡
OPENSSL_OPENBSD_DEV_CRYPTO


645 c⁄° 
EVP_CIPHER
 *
EVP_dev_¸y±o_des_ede3_cbc
();

646 c⁄° 
EVP_CIPHER
 *
EVP_dev_¸y±o_rc4
();

647 c⁄° 
EVP_MD
 *
EVP_dev_¸y±o_md5
();

651 #i‚de‡
OPENSSL_NO_RC4


652 c⁄° 
EVP_CIPHER
 *
EVP_rc4
();

653 c⁄° 
EVP_CIPHER
 *
EVP_rc4_40
();

655 #i‚de‡
OPENSSL_NO_RC2


656 c⁄° 
EVP_CIPHER
 *
EVP_rc2_ecb
();

657 c⁄° 
EVP_CIPHER
 *
EVP_rc2_cbc
();

658 c⁄° 
EVP_CIPHER
 *
EVP_rc2_40_cbc
();

659 c⁄° 
EVP_CIPHER
 *
EVP_rc2_64_cbc
();

660 c⁄° 
EVP_CIPHER
 *
EVP_rc2_cfb64
();

661 
	#EVP_rc2_cfb
 
EVP_rc2_cfb64


	)

662 c⁄° 
EVP_CIPHER
 *
EVP_rc2_ofb
();

664 #i‚de‡
OPENSSL_NO_BF


665 c⁄° 
EVP_CIPHER
 *
EVP_bf_ecb
();

666 c⁄° 
EVP_CIPHER
 *
EVP_bf_cbc
();

667 c⁄° 
EVP_CIPHER
 *
EVP_bf_cfb64
();

668 
	#EVP_bf_cfb
 
EVP_bf_cfb64


	)

669 c⁄° 
EVP_CIPHER
 *
EVP_bf_ofb
();

671 #i‚de‡
OPENSSL_NO_CAST


672 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_ecb
();

673 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_cbc
();

674 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_cfb64
();

675 
	#EVP_ˇ°5_cfb
 
EVP_ˇ°5_cfb64


	)

676 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_ofb
();

678 #i‚de‡
OPENSSL_NO_AES


679 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_ecb
();

680 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cbc
();

681 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb1
();

682 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb8
();

683 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb128
();

684 
	#EVP_´s_128_cfb
 
EVP_´s_128_cfb128


	)

685 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_ofb
();

687 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_˘r
();

689 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_ecb
();

690 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cbc
();

691 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb1
();

692 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb8
();

693 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb128
();

694 
	#EVP_´s_192_cfb
 
EVP_´s_192_cfb128


	)

695 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_ofb
();

697 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_˘r
();

699 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_ecb
();

700 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cbc
();

701 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb1
();

702 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb8
();

703 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb128
();

704 
	#EVP_´s_256_cfb
 
EVP_´s_256_cfb128


	)

705 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_ofb
();

707 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_˘r
();

711 
OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
();

712 
OPENSSL_add_Æl_Æg‹ôhms_c⁄f
();

714 #ifde‡
OPENSSL_LOAD_CONF


715 
	#O≥nSSL_add_Æl_Æg‹ôhms
() \

716 
	`OPENSSL_add_Æl_Æg‹ôhms_c⁄f
()

	)

718 
	#O≥nSSL_add_Æl_Æg‹ôhms
() \

719 
	`OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
()

	)

722 
O≥nSSL_add_Æl_cùhîs
();

723 
O≥nSSL_add_Æl_dige°s
();

724 
	#SSLóy_add_Æl_Æg‹ôhms
(Ë
	`O≥nSSL_add_Æl_Æg‹ôhms
()

	)

725 
	#SSLóy_add_Æl_cùhîs
(Ë
	`O≥nSSL_add_Æl_cùhîs
()

	)

726 
	#SSLóy_add_Æl_dige°s
(Ë
	`O≥nSSL_add_Æl_dige°s
()

	)

728 
EVP_add_cùhî
(c⁄° 
EVP_CIPHER
 *
cùhî
);

729 
EVP_add_dige°
(c⁄° 
EVP_MD
 *
dige°
);

731 c⁄° 
EVP_CIPHER
 *
EVP_gë_cùhîby«me
(c⁄° *
«me
);

732 c⁄° 
EVP_MD
 *
EVP_gë_dige°by«me
(c⁄° *
«me
);

733 
EVP_˛ónup
();

735 
EVP_PKEY_de¸y±
(*
dec_key
,

736 c⁄° *
íc_key
,
íc_key_Àn
,

737 
EVP_PKEY
 *
¥iv©e_key
);

738 
EVP_PKEY_í¸y±
(*
íc_key
,

739 c⁄° *
key
,
key_Àn
,

740 
EVP_PKEY
 *
pub_key
);

741 
EVP_PKEY_ty≥
(
ty≥
);

742 
EVP_PKEY_bôs
(
EVP_PKEY
 *
pkey
);

743 
EVP_PKEY_size
(
EVP_PKEY
 *
pkey
);

744 
EVP_PKEY_assign
(
EVP_PKEY
 *
pkey
,
ty≥
,*
key
);

746 #i‚de‡
OPENSSL_NO_RSA


747 
rß_°
;

748 
EVP_PKEY_£t1_RSA
(
EVP_PKEY
 *
pkey
,
rß_°
 *
key
);

749 
rß_°
 *
EVP_PKEY_gë1_RSA
(
EVP_PKEY
 *
pkey
);

751 #i‚de‡
OPENSSL_NO_DSA


752 
dß_°
;

753 
EVP_PKEY_£t1_DSA
(
EVP_PKEY
 *
pkey
,
dß_°
 *
key
);

754 
dß_°
 *
EVP_PKEY_gë1_DSA
(
EVP_PKEY
 *
pkey
);

756 #i‚de‡
OPENSSL_NO_DH


757 
dh_°
;

758 
EVP_PKEY_£t1_DH
(
EVP_PKEY
 *
pkey
,
dh_°
 *
key
);

759 
dh_°
 *
EVP_PKEY_gë1_DH
(
EVP_PKEY
 *
pkey
);

762 
EVP_PKEY
 * 
EVP_PKEY_√w
();

763 
EVP_PKEY_‰ì
(
EVP_PKEY
 *
pkey
);

765 
EVP_PKEY
 * 
d2i_PublicKey
(
ty≥
,EVP_PKEY **
a
, c⁄° **
µ
,

766 
Àngth
);

767 
i2d_PublicKey
(
EVP_PKEY
 *
a
, **
µ
);

769 
EVP_PKEY
 * 
d2i_Priv©eKey
(
ty≥
,EVP_PKEY **
a
, c⁄° **
µ
,

770 
Àngth
);

771 
EVP_PKEY
 * 
d2i_AutoPriv©eKey
(EVP_PKEY **
a
, c⁄° **
µ
,

772 
Àngth
);

773 
i2d_Priv©eKey
(
EVP_PKEY
 *
a
, **
µ
);

775 
EVP_PKEY_c›y_∑ømëîs
(
EVP_PKEY
 *
to
, c⁄° EVP_PKEY *
‰om
);

776 
EVP_PKEY_missög_∑ømëîs
(c⁄° 
EVP_PKEY
 *
pkey
);

777 
EVP_PKEY_ßve_∑ømëîs
(
EVP_PKEY
 *
pkey
,
mode
);

778 
EVP_PKEY_cmp_∑ømëîs
(c⁄° 
EVP_PKEY
 *
a
, c⁄° EVP_PKEY *
b
);

780 
EVP_PKEY_cmp
(c⁄° 
EVP_PKEY
 *
a
, c⁄° EVP_PKEY *
b
);

782 
EVP_CIPHER_ty≥
(c⁄° 
EVP_CIPHER
 *
˘x
);

785 
EVP_CIPHER_∑øm_to_a¢1
(
EVP_CIPHER_CTX
 *
c
, 
ASN1_TYPE
 *
ty≥
);

786 
EVP_CIPHER_a¢1_to_∑øm
(
EVP_CIPHER_CTX
 *
c
, 
ASN1_TYPE
 *
ty≥
);

789 
EVP_CIPHER_£t_a¢1_iv
(
EVP_CIPHER_CTX
 *
c
,
ASN1_TYPE
 *
ty≥
);

790 
EVP_CIPHER_gë_a¢1_iv
(
EVP_CIPHER_CTX
 *
c
,
ASN1_TYPE
 *
ty≥
);

793 
PKCS5_PBE_keyivgí
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
∑ss
, 
∑s¶í
,

794 
ASN1_TYPE
 *
∑øm
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

795 
í_de
);

796 
PKCS5_PBKDF2_HMAC_SHA1
(c⁄° *
∑ss
, 
∑s¶í
,

797 c⁄° *
ß…
, 
ß…Àn
, 
ôî
,

798 
keyÀn
, *
out
);

799 
PKCS5_v2_PBE_keyivgí
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
∑ss
, 
∑s¶í
,

800 
ASN1_TYPE
 *
∑øm
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

801 
í_de
);

803 
PKCS5_PBE_add
();

805 
EVP_PBE_CùhîInô
 (
ASN1_OBJECT
 *
pbe_obj
, c⁄° *
∑ss
, 
∑s¶í
,

806 
ASN1_TYPE
 *
∑øm
, 
EVP_CIPHER_CTX
 *
˘x
, 
í_de
);

807 
EVP_PBE_Æg_add
(
nid
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

808 
EVP_PBE_KEYGEN
 *
keygí
);

809 
EVP_PBE_˛ónup
();

815 
ERR_lﬂd_EVP_°rögs
();

820 
	#EVP_F_AES_INIT_KEY
 133

	)

821 
	#EVP_F_D2I_PKEY
 100

	)

822 
	#EVP_F_DSAPKEY2PKCS8
 134

	)

823 
	#EVP_F_DSA_PKEY2PKCS8
 135

	)

824 
	#EVP_F_ECDSA_PKEY2PKCS8
 129

	)

825 
	#EVP_F_ECKEY_PKEY2PKCS8
 132

	)

826 
	#EVP_F_EVP_CIPHERINIT_EX
 123

	)

827 
	#EVP_F_EVP_CIPHER_CTX_CTRL
 124

	)

828 
	#EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH
 122

	)

829 
	#EVP_F_EVP_DECRYPTFINAL_EX
 101

	)

830 
	#EVP_F_EVP_DIGESTINIT_EX
 128

	)

831 
	#EVP_F_EVP_ENCRYPTFINAL_EX
 127

	)

832 
	#EVP_F_EVP_MD_CTX_COPY_EX
 110

	)

833 
	#EVP_F_EVP_OPENINIT
 102

	)

834 
	#EVP_F_EVP_PBE_ALG_ADD
 115

	)

835 
	#EVP_F_EVP_PBE_CIPHERINIT
 116

	)

836 
	#EVP_F_EVP_PKCS82PKEY
 111

	)

837 
	#EVP_F_EVP_PKEY2PKCS8_BROKEN
 113

	)

838 
	#EVP_F_EVP_PKEY_COPY_PARAMETERS
 103

	)

839 
	#EVP_F_EVP_PKEY_DECRYPT
 104

	)

840 
	#EVP_F_EVP_PKEY_ENCRYPT
 105

	)

841 
	#EVP_F_EVP_PKEY_GET1_DH
 119

	)

842 
	#EVP_F_EVP_PKEY_GET1_DSA
 120

	)

843 
	#EVP_F_EVP_PKEY_GET1_ECDSA
 130

	)

844 
	#EVP_F_EVP_PKEY_GET1_EC_KEY
 131

	)

845 
	#EVP_F_EVP_PKEY_GET1_RSA
 121

	)

846 
	#EVP_F_EVP_PKEY_NEW
 106

	)

847 
	#EVP_F_EVP_RIJNDAEL
 126

	)

848 
	#EVP_F_EVP_SIGNFINAL
 107

	)

849 
	#EVP_F_EVP_VERIFYFINAL
 108

	)

850 
	#EVP_F_PKCS5_PBE_KEYIVGEN
 117

	)

851 
	#EVP_F_PKCS5_V2_PBE_KEYIVGEN
 118

	)

852 
	#EVP_F_PKCS8_SET_BROKEN
 112

	)

853 
	#EVP_F_RC2_MAGIC_TO_METH
 109

	)

854 
	#EVP_F_RC5_CTRL
 125

	)

857 
	#EVP_R_AES_KEY_SETUP_FAILED
 143

	)

858 
	#EVP_R_ASN1_LIB
 140

	)

859 
	#EVP_R_BAD_BLOCK_LENGTH
 136

	)

860 
	#EVP_R_BAD_DECRYPT
 100

	)

861 
	#EVP_R_BAD_KEY_LENGTH
 137

	)

862 
	#EVP_R_BN_DECODE_ERROR
 112

	)

863 
	#EVP_R_BN_PUBKEY_ERROR
 113

	)

864 
	#EVP_R_CIPHER_PARAMETER_ERROR
 122

	)

865 
	#EVP_R_CTRL_NOT_IMPLEMENTED
 132

	)

866 
	#EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED
 133

	)

867 
	#EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH
 138

	)

868 
	#EVP_R_DECODE_ERROR
 114

	)

869 
	#EVP_R_DIFFERENT_KEY_TYPES
 101

	)

870 
	#EVP_R_ENCODE_ERROR
 115

	)

871 
	#EVP_R_EVP_PBE_CIPHERINIT_ERROR
 119

	)

872 
	#EVP_R_EXPECTING_AN_RSA_KEY
 127

	)

873 
	#EVP_R_EXPECTING_A_DH_KEY
 128

	)

874 
	#EVP_R_EXPECTING_A_DSA_KEY
 129

	)

875 
	#EVP_R_EXPECTING_A_ECDSA_KEY
 141

	)

876 
	#EVP_R_EXPECTING_A_EC_KEY
 142

	)

877 
	#EVP_R_INITIALIZATION_ERROR
 134

	)

878 
	#EVP_R_INPUT_NOT_INITIALIZED
 111

	)

879 
	#EVP_R_INVALID_KEY_LENGTH
 130

	)

880 
	#EVP_R_IV_TOO_LARGE
 102

	)

881 
	#EVP_R_KEYGEN_FAILURE
 120

	)

882 
	#EVP_R_MISSING_PARAMETERS
 103

	)

883 
	#EVP_R_NO_CIPHER_SET
 131

	)

884 
	#EVP_R_NO_DIGEST_SET
 139

	)

885 
	#EVP_R_NO_DSA_PARAMETERS
 116

	)

886 
	#EVP_R_NO_SIGN_FUNCTION_CONFIGURED
 104

	)

887 
	#EVP_R_NO_VERIFY_FUNCTION_CONFIGURED
 105

	)

888 
	#EVP_R_PKCS8_UNKNOWN_BROKEN_TYPE
 117

	)

889 
	#EVP_R_PUBLIC_KEY_NOT_RSA
 106

	)

890 
	#EVP_R_UNKNOWN_PBE_ALGORITHM
 121

	)

891 
	#EVP_R_UNSUPORTED_NUMBER_OF_ROUNDS
 135

	)

892 
	#EVP_R_UNSUPPORTED_CIPHER
 107

	)

893 
	#EVP_R_UNSUPPORTED_KEYLENGTH
 123

	)

894 
	#EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION
 124

	)

895 
	#EVP_R_UNSUPPORTED_KEY_SIZE
 108

	)

896 
	#EVP_R_UNSUPPORTED_PRF
 125

	)

897 
	#EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM
 118

	)

898 
	#EVP_R_UNSUPPORTED_SALT_TYPE
 126

	)

899 
	#EVP_R_WRONG_FINAL_BLOCK_LENGTH
 109

	)

900 
	#EVP_R_WRONG_PUBLIC_KEY_TYPE
 110

	)

902 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/kssl.h

63 #i‚def 
KSSL_H


64 
	#KSSL_H


	)

66 
	~<›ís¶/›ís¶c⁄f.h
>

68 #i‚de‡
OPENSSL_NO_KRB5


70 
	~<°dio.h
>

71 
	~<˘y≥.h
>

72 
	~<krb5.h
>

74 #ifde‡ 
__˝lu•lus


82 #ifde‡
KRB5_HEIMDAL


83 
	tkrb5_o˘ë
;

84 
	#FAR


	)

87 #i‚de‡
FAR


88 
	#FAR


	)

99 #i‚def 
KRB5SVC


100 
	#KRB5SVC
 "ho°"

	)

103 #i‚def 
KRB5KEYTAB


104 
	#KRB5KEYTAB
 "/ëc/krb5.keyèb"

	)

107 #i‚de‡
KRB5SENDAUTH


108 
	#KRB5SENDAUTH
 1

	)

111 #i‚de‡
KRB5CHECKAUTH


112 
	#KRB5CHECKAUTH
 1

	)

115 #i‚de‡
KSSL_CLOCKSKEW


116 
	#KSSL_CLOCKSKEW
 300;

	)

119 
	#KSSL_ERR_MAX
 255

	)

120 
	sks¶_îr_°
 {

121 
	gªas⁄
;

122 
	gãxt
[
KSSL_ERR_MAX
+1];

123 } 
	tKSSL_ERR
;

130 
	sks¶_˘x_°


133 *
	g£rvi˚_«me
;

134 *
	g£rvi˚_ho°
;

135 *
	g˛õ¡_¥öc
;

136 *
	gkeyèb_fûe
;

137 *
	g¸ed_ˇche
;

138 
krb5_í˘y≥
 
	gí˘y≥
;

139 
	gÀngth
;

140 
krb5_o˘ë
 
FAR
 *
	gkey
;

141 } 
	tKSSL_CTX
;

143 
	#KSSL_CLIENT
 1

	)

144 
	#KSSL_SERVER
 2

	)

145 
	#KSSL_SERVICE
 3

	)

146 
	#KSSL_KEYTAB
 4

	)

148 
	#KSSL_CTX_OK
 0

	)

149 
	#KSSL_CTX_ERR
 1

	)

150 
	#KSSL_NOMEM
 2

	)

153 
krb5_îr‹_code
 
ks¶_˘x_£t°rög
(
KSSL_CTX
 *
ks¶_˘x
, 
which
, *
ãxt
);

154 
KSSL_CTX
 *
ks¶_˘x_√w
();

155 
KSSL_CTX
 *
ks¶_˘x_‰ì
(KSSL_CTX *
ks¶_˘x
);

156 
ks¶_˘x_show
(
KSSL_CTX
 *
ks¶_˘x
);

157 
krb5_îr‹_code
 
ks¶_˘x_£çröc
(
KSSL_CTX
 *
ks¶_˘x
, 
which
,

158 
krb5_d©a
 *
ªÆm
, krb5_d©®*
ítôy
, 
√¡ôõs
);

159 
krb5_îr‹_code
 
ks¶_cgë_tkt
(
KSSL_CTX
 *
ks¶_˘x
, 
krb5_d©a
 **
íc_tkç
,

160 
krb5_d©a
 *
authíp
, 
KSSL_ERR
 *
ks¶_îr
);

161 
krb5_îr‹_code
 
ks¶_sgë_tkt
(
KSSL_CTX
 *
ks¶_˘x
, 
krb5_d©a
 *
öd©a
,

162 
krb5_tickë_times
 *
âimes
, 
KSSL_ERR
 *
ks¶_îr
);

163 
krb5_îr‹_code
 
ks¶_˘x_£tkey
(
KSSL_CTX
 *
ks¶_˘x
, 
krb5_keyblock
 *
£ssi⁄
);

164 
ks¶_îr_£t
(
KSSL_ERR
 *
ks¶_îr
, 
ªas⁄
, *
ãxt
);

165 
ks¶_krb5_‰ì_d©a_c⁄ã¡s
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_d©a
 *
d©a
);

166 
krb5_îr‹_code
 
ks¶_buûd_¥öcùÆ_2
(
krb5_c⁄ãxt
 
c⁄ãxt
,

167 
krb5_¥öcùÆ
 *
¥öc
, 
æí
, c⁄° *
ªÆm
,

168 
¶í
, c⁄° *
svc
, 
hÀn
, c⁄° *
ho°
);

169 
krb5_îr‹_code
 
ks¶_vÆid©e_times
(
krb5_time°amp
 
©ime
,

170 
krb5_tickë_times
 *
âimes
);

171 
krb5_îr‹_code
 
ks¶_check_authít
(
KSSL_CTX
 *
ks¶_˘x
, 
krb5_d©a
 *
authíç
,

172 
krb5_time°amp
 *
©imï
, 
KSSL_ERR
 *
ks¶_îr
);

173 *
ks¶_skù_c⁄found
(
krb5_í˘y≥
 
í˘y≥
, *
authn
);

175 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/lhash.h

63 #i‚de‡
HEADER_LHASH_H


64 
	#HEADER_LHASH_H


	)

66 
	~<›ís¶/e_os2.h
>

67 #i‚de‡
OPENSSL_NO_FP_API


68 
	~<°dio.h
>

71 #i‚de‡
OPENSSL_NO_BIO


72 
	~<›ís¶/bio.h
>

75 #ifde‡ 
__˝lu•lus


79 
	slhash_node_°


81 *
d©a
;

82 
lhash_node_°
 *
√xt
;

83 #i‚de‡
OPENSSL_NO_HASH_COMP


84 
hash
;

86 } 
	tLHASH_NODE
;

88 (*
LHASH_COMP_FN_TYPE
)(const *, const *);

89 (*
	tLHASH_HASH_FN_TYPE
)(const *);

90 (*
LHASH_DOALL_FN_TYPE
)(*);

91 (*
LHASH_DOALL_ARG_FN_TYPE
)(*, *);

101 
	#DECLARE_LHASH_HASH_FN
(
f_«me
,
o_ty≥
) \

102 
f_«me
##
	`_LHASH_HASH
(c⁄° *);

	)

103 
	#IMPLEMENT_LHASH_HASH_FN
(
f_«me
,
o_ty≥
) \

104 
f_«me
##
	`_LHASH_HASH
(c⁄° *
¨g
) { \

105 
o_ty≥
 
a
 = (o_ty≥)
¨g
; \

106  
	`f_«me
(
a
); }

	)

107 
	#LHASH_HASH_FN
(
f_«me
Ëf_«me##
_LHASH_HASH


	)

110 
	#DECLARE_LHASH_COMP_FN
(
f_«me
,
o_ty≥
) \

111 
f_«me
##
	`_LHASH_COMP
(c⁄° *, c⁄° *);

	)

112 
	#IMPLEMENT_LHASH_COMP_FN
(
f_«me
,
o_ty≥
) \

113 
f_«me
##
	`_LHASH_COMP
(c⁄° *
¨g1
, c⁄° *
¨g2
) { \

114 
o_ty≥
 
a
 = (o_ty≥)
¨g1
; \

115 
o_ty≥
 
b
 = (o_ty≥)
¨g2
; \

116  
	`f_«me
(
a
,
b
); }

	)

117 
	#LHASH_COMP_FN
(
f_«me
Ëf_«me##
_LHASH_COMP


	)

120 
	#DECLARE_LHASH_DOALL_FN
(
f_«me
,
o_ty≥
) \

121 
f_«me
##
	`_LHASH_DOALL
(*);

	)

122 
	#IMPLEMENT_LHASH_DOALL_FN
(
f_«me
,
o_ty≥
) \

123 
f_«me
##
	`_LHASH_DOALL
(*
¨g
) { \

124 
o_ty≥
 
a
 = (o_ty≥)
¨g
; \

125 
	`f_«me
(
a
); }

	)

126 
	#LHASH_DOALL_FN
(
f_«me
Ëf_«me##
_LHASH_DOALL


	)

129 
	#DECLARE_LHASH_DOALL_ARG_FN
(
f_«me
,
o_ty≥
,
a_ty≥
) \

130 
f_«me
##
	`_LHASH_DOALL_ARG
(*, *);

	)

131 
	#IMPLEMENT_LHASH_DOALL_ARG_FN
(
f_«me
,
o_ty≥
,
a_ty≥
) \

132 
f_«me
##
	`_LHASH_DOALL_ARG
(*
¨g1
, *
¨g2
) { \

133 
o_ty≥
 
a
 = (o_ty≥)
¨g1
; \

134 
a_ty≥
 
b
 = (a_ty≥)
¨g2
; \

135 
	`f_«me
(
a
,
b
); }

	)

136 
	#LHASH_DOALL_ARG_FN
(
f_«me
Ëf_«me##
_LHASH_DOALL_ARG


	)

138 
	slhash_°


140 
LHASH_NODE
 **
b
;

141 
LHASH_COMP_FN_TYPE
 
comp
;

142 
LHASH_HASH_FN_TYPE
 
hash
;

143 
num_nodes
;

144 
num_Æloc_nodes
;

145 
p
;

146 
pmax
;

147 
up_lﬂd
;

148 
down_lﬂd
;

149 
num_ôems
;

151 
num_ex∑nds
;

152 
num_ex∑nd_ªÆlocs
;

153 
num_c⁄åa˘s
;

154 
num_c⁄åa˘_ªÆlocs
;

155 
num_hash_ˇŒs
;

156 
num_comp_ˇŒs
;

157 
num_ö£π
;

158 
num_ª∂a˚
;

159 
num_dñëe
;

160 
num_no_dñëe
;

161 
num_ªåõve
;

162 
num_ªåõve_miss
;

163 
num_hash_comps
;

165 
îr‹
;

166 } 
	tLHASH
;

168 
	#LH_LOAD_MULT
 256

	)

172 
	#lh_îr‹
(
lh
Ë(÷h)->
îr‹
)

	)

174 
LHASH
 *
lh_√w
(
LHASH_HASH_FN_TYPE
 
h
, 
LHASH_COMP_FN_TYPE
 
c
);

175 
lh_‰ì
(
LHASH
 *
lh
);

176 *
lh_ö£π
(
LHASH
 *
lh
, *
d©a
);

177 *
lh_dñëe
(
LHASH
 *
lh
, c⁄° *
d©a
);

178 *
lh_ªåõve
(
LHASH
 *
lh
, c⁄° *
d©a
);

179 
lh_dﬂŒ
(
LHASH
 *
lh
, 
LHASH_DOALL_FN_TYPE
 
func
);

180 
lh_dﬂŒ_¨g
(
LHASH
 *
lh
, 
LHASH_DOALL_ARG_FN_TYPE
 
func
, *
¨g
);

181 
lh_°rhash
(c⁄° *
c
);

182 
lh_num_ôems
(c⁄° 
LHASH
 *
lh
);

184 #i‚de‡
OPENSSL_NO_FP_API


185 
lh_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
);

186 
lh_node_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
);

187 
lh_node_ußge_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
);

190 #i‚de‡
OPENSSL_NO_BIO


191 
lh_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
);

192 
lh_node_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
);

193 
lh_node_ußge_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
);

195 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/opensslv.h

1 #i‚de‡
HEADER_OPENSSLV_H


2 
	#HEADER_OPENSSLV_H


	)

28 
	#OPENSSL_VERSION_NUMBER
 0x0090802fL

	)

29 #ifde‡
OPENSSL_FIPS


30 
	#OPENSSL_VERSION_TEXT
 "O≥nSSL 0.9.8b-fù†04 May 2006"

	)

32 
	#OPENSSL_VERSION_TEXT
 "O≥nSSL 0.9.8b 04 May 2006"

	)

34 
	#OPENSSL_VERSION_PTEXT
 "Ö¨ào‡" 
OPENSSL_VERSION_TEXT


	)

85 
	#SHLIB_VERSION_HISTORY
 ""

	)

86 
	#SHLIB_VERSION_NUMBER
 "0.9.8"

	)

	@/usr/include/openssl/ossl_typ.h

55 #i‚de‡
HEADER_OPENSSL_TYPES_H


56 
	#HEADER_OPENSSL_TYPES_H


	)

58 
	~<›ís¶/e_os2.h
>

60 #ifde‡
NO_ASN1_TYPEDEFS


61 
	#ASN1_INTEGER
 
ASN1_STRING


	)

62 
	#ASN1_ENUMERATED
 
ASN1_STRING


	)

63 
	#ASN1_BIT_STRING
 
ASN1_STRING


	)

64 
	#ASN1_OCTET_STRING
 
ASN1_STRING


	)

65 
	#ASN1_PRINTABLESTRING
 
ASN1_STRING


	)

66 
	#ASN1_T61STRING
 
ASN1_STRING


	)

67 
	#ASN1_IA5STRING
 
ASN1_STRING


	)

68 
	#ASN1_UTCTIME
 
ASN1_STRING


	)

69 
	#ASN1_GENERALIZEDTIME
 
ASN1_STRING


	)

70 
	#ASN1_TIME
 
ASN1_STRING


	)

71 
	#ASN1_GENERALSTRING
 
ASN1_STRING


	)

72 
	#ASN1_UNIVERSALSTRING
 
ASN1_STRING


	)

73 
	#ASN1_BMPSTRING
 
ASN1_STRING


	)

74 
	#ASN1_VISIBLESTRING
 
ASN1_STRING


	)

75 
	#ASN1_UTF8STRING
 
ASN1_STRING


	)

76 
	#ASN1_BOOLEAN
 

	)

77 
	#ASN1_NULL
 

	)

79 
a¢1_°rög_°
 
	tASN1_INTEGER
;

80 
a¢1_°rög_°
 
	tASN1_ENUMERATED
;

81 
a¢1_°rög_°
 
	tASN1_BIT_STRING
;

82 
a¢1_°rög_°
 
	tASN1_OCTET_STRING
;

83 
a¢1_°rög_°
 
	tASN1_PRINTABLESTRING
;

84 
a¢1_°rög_°
 
	tASN1_T61STRING
;

85 
a¢1_°rög_°
 
	tASN1_IA5STRING
;

86 
a¢1_°rög_°
 
	tASN1_GENERALSTRING
;

87 
a¢1_°rög_°
 
	tASN1_UNIVERSALSTRING
;

88 
a¢1_°rög_°
 
	tASN1_BMPSTRING
;

89 
a¢1_°rög_°
 
	tASN1_UTCTIME
;

90 
a¢1_°rög_°
 
	tASN1_TIME
;

91 
a¢1_°rög_°
 
	tASN1_GENERALIZEDTIME
;

92 
a¢1_°rög_°
 
	tASN1_VISIBLESTRING
;

93 
a¢1_°rög_°
 
	tASN1_UTF8STRING
;

94 
	tASN1_BOOLEAN
;

95 
	tASN1_NULL
;

98 #ifde‡
OPENSSL_SYS_WIN32


99 #unde‡
X509_NAME


100 #unde‡
X509_CERT_PAIR


101 #unde‡
PKCS7_ISSUER_AND_SERIAL


104 #ifde‡
BIGNUM


105 #unde‡
BIGNUM


107 
bignum_°
 
	tBIGNUM
;

108 
bignum_˘x
 
	tBN_CTX
;

109 
bn_blödög_°
 
	tBN_BLINDING
;

110 
bn_m⁄t_˘x_°
 
	tBN_MONT_CTX
;

111 
bn_ª˝_˘x_°
 
	tBN_RECP_CTX
;

112 
bn_gícb_°
 
	tBN_GENCB
;

114 
buf_mem_°
 
	tBUF_MEM
;

116 
evp_cùhî_°
 
	tEVP_CIPHER
;

117 
evp_cùhî_˘x_°
 
	tEVP_CIPHER_CTX
;

118 
ív_md_°
 
	tEVP_MD
;

119 
ív_md_˘x_°
 
	tEVP_MD_CTX
;

120 
evp_pkey_°
 
	tEVP_PKEY
;

122 
dh_°
 
	tDH
;

123 
dh_mëhod
 
	tDH_METHOD
;

125 
dß_°
 
	tDSA
;

126 
dß_mëhod
 
	tDSA_METHOD
;

128 
rß_°
 
	tRSA
;

129 
rß_mëh_°
 
	tRSA_METHOD
;

131 
ønd_mëh_°
 
	tRAND_METHOD
;

133 
ecdh_mëhod
 
	tECDH_METHOD
;

134 
ecdß_mëhod
 
	tECDSA_METHOD
;

136 
x509_°
 
	tX509
;

137 
X509_Æg‹_°
 
	tX509_ALGOR
;

138 
X509_¸l_°
 
	tX509_CRL
;

139 
X509_«me_°
 
	tX509_NAME
;

140 
x509_°‹e_°
 
	tX509_STORE
;

141 
x509_°‹e_˘x_°
 
	tX509_STORE_CTX
;

143 
v3_ext_˘x
 
	tX509V3_CTX
;

144 
c⁄f_°
 
	tCONF
;

146 
°‹e_°
 
	tSTORE
;

147 
°‹e_mëhod_°
 
	tSTORE_METHOD
;

149 
ui_°
 
	tUI
;

150 
ui_mëhod_°
 
	tUI_METHOD
;

152 
°_ERR_FNS
 
	tERR_FNS
;

154 
ígöe_°
 
	tENGINE
;

156 
X509_POLICY_NODE_°
 
	tX509_POLICY_NODE
;

157 
X509_POLICY_LEVEL_°
 
	tX509_POLICY_LEVEL
;

158 
X509_POLICY_TREE_°
 
	tX509_POLICY_TREE
;

159 
X509_POLICY_CACHE_°
 
	tX509_POLICY_CACHE
;

162 
	#DECLARE_PKCS12_STACK_OF
(
ty≥
Ë

	)

163 
	#IMPLEMENT_PKCS12_STACK_OF
(
ty≥
Ë

	)

165 
¸y±o_ex_d©a_°
 
	tCRYPTO_EX_DATA
;

167 
	tCRYPTO_EX_√w
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

168 
	tidx
, 
	t¨gl
, *
	t¨gp
);

169 
	tCRYPTO_EX_‰ì
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

170 
	tidx
, 
	t¨gl
, *
	t¨gp
);

171 
	tCRYPTO_EX_dup
(
	tCRYPTO_EX_DATA
 *
	tto
, CRYPTO_EX_DATA *
	t‰om
, *
	t‰om_d
,

172 
	tidx
, 
	t¨gl
, *
	t¨gp
);

	@/usr/include/openssl/pem.h

59 #i‚de‡
HEADER_PEM_H


60 
	#HEADER_PEM_H


	)

62 
	~<›ís¶/e_os2.h
>

63 #i‚de‡
OPENSSL_NO_BIO


64 
	~<›ís¶/bio.h
>

66 #i‚de‡
OPENSSL_NO_STACK


67 
	~<›ís¶/°ack.h
>

69 
	~<›ís¶/evp.h
>

70 
	~<›ís¶/x509.h
>

71 
	~<›ís¶/≥m2.h
>

73 #ifde‡ 
__˝lu•lus


77 
	#PEM_BUFSIZE
 1024

	)

79 
	#PEM_OBJ_UNDEF
 0

	)

80 
	#PEM_OBJ_X509
 1

	)

81 
	#PEM_OBJ_X509_REQ
 2

	)

82 
	#PEM_OBJ_CRL
 3

	)

83 
	#PEM_OBJ_SSL_SESSION
 4

	)

84 
	#PEM_OBJ_PRIV_KEY
 10

	)

85 
	#PEM_OBJ_PRIV_RSA
 11

	)

86 
	#PEM_OBJ_PRIV_DSA
 12

	)

87 
	#PEM_OBJ_PRIV_DH
 13

	)

88 
	#PEM_OBJ_PUB_RSA
 14

	)

89 
	#PEM_OBJ_PUB_DSA
 15

	)

90 
	#PEM_OBJ_PUB_DH
 16

	)

91 
	#PEM_OBJ_DHPARAMS
 17

	)

92 
	#PEM_OBJ_DSAPARAMS
 18

	)

93 
	#PEM_OBJ_PRIV_RSA_PUBLIC
 19

	)

94 
	#PEM_OBJ_PRIV_ECDSA
 20

	)

95 
	#PEM_OBJ_PUB_ECDSA
 21

	)

96 
	#PEM_OBJ_ECPARAMETERS
 22

	)

98 
	#PEM_ERROR
 30

	)

99 
	#PEM_DEK_DES_CBC
 40

	)

100 
	#PEM_DEK_IDEA_CBC
 45

	)

101 
	#PEM_DEK_DES_EDE
 50

	)

102 
	#PEM_DEK_DES_ECB
 60

	)

103 
	#PEM_DEK_RSA
 70

	)

104 
	#PEM_DEK_RSA_MD2
 80

	)

105 
	#PEM_DEK_RSA_MD5
 90

	)

107 
	#PEM_MD_MD2
 
NID_md2


	)

108 
	#PEM_MD_MD5
 
NID_md5


	)

109 
	#PEM_MD_SHA
 
NID_sha


	)

110 
	#PEM_MD_MD2_RSA
 
NID_md2WôhRSAEn¸y±i⁄


	)

111 
	#PEM_MD_MD5_RSA
 
NID_md5WôhRSAEn¸y±i⁄


	)

112 
	#PEM_MD_SHA_RSA
 
NID_sha1WôhRSAEn¸y±i⁄


	)

114 
	#PEM_STRING_X509_OLD
 "X509 CERTIFICATE"

	)

115 
	#PEM_STRING_X509
 "CERTIFICATE"

	)

116 
	#PEM_STRING_X509_PAIR
 "CERTIFICATE PAIR"

	)

117 
	#PEM_STRING_X509_TRUSTED
 "TRUSTED CERTIFICATE"

	)

118 
	#PEM_STRING_X509_REQ_OLD
 "NEW CERTIFICATE REQUEST"

	)

119 
	#PEM_STRING_X509_REQ
 "CERTIFICATE REQUEST"

	)

120 
	#PEM_STRING_X509_CRL
 "X509 CRL"

	)

121 
	#PEM_STRING_EVP_PKEY
 "ANY PRIVATE KEY"

	)

122 
	#PEM_STRING_PUBLIC
 "PUBLIC KEY"

	)

123 
	#PEM_STRING_RSA
 "RSA PRIVATE KEY"

	)

124 
	#PEM_STRING_RSA_PUBLIC
 "RSA PUBLIC KEY"

	)

125 
	#PEM_STRING_DSA
 "DSA PRIVATE KEY"

	)

126 
	#PEM_STRING_DSA_PUBLIC
 "DSA PUBLIC KEY"

	)

127 
	#PEM_STRING_PKCS7
 "PKCS7"

	)

128 
	#PEM_STRING_PKCS8
 "ENCRYPTED PRIVATE KEY"

	)

129 
	#PEM_STRING_PKCS8INF
 "PRIVATE KEY"

	)

130 
	#PEM_STRING_DHPARAMS
 "DH PARAMETERS"

	)

131 
	#PEM_STRING_SSL_SESSION
 "SSL SESSION PARAMETERS"

	)

132 
	#PEM_STRING_DSAPARAMS
 "DSA PARAMETERS"

	)

133 
	#PEM_STRING_ECDSA_PUBLIC
 "ECDSA PUBLIC KEY"

	)

134 
	#PEM_STRING_ECPARAMETERS
 "EC PARAMETERS"

	)

135 
	#PEM_STRING_ECPRIVATEKEY
 "EC PRIVATE KEY"

	)

139 
	sPEM_Encode_Sól_°


141 
EVP_ENCODE_CTX
 
ícode
;

142 
EVP_MD_CTX
 
md
;

143 
EVP_CIPHER_CTX
 
cùhî
;

144 } 
	tPEM_ENCODE_SEAL_CTX
;

147 
	#PEM_TYPE_ENCRYPTED
 10

	)

148 
	#PEM_TYPE_MIC_ONLY
 20

	)

149 
	#PEM_TYPE_MIC_CLEAR
 30

	)

150 
	#PEM_TYPE_CLEAR
 40

	)

152 
	s≥m_ªcù_°


154 *
«me
;

155 
X509_NAME
 *
dn
;

157 
cùhî
;

158 
key_íc
;

160 } 
	tPEM_USER
;

162 
	s≥m_˘x_°


164 
ty≥
;

167 
vîsi⁄
;

168 
mode
;

169 } 
¥oc_ty≥
;

171 *
domaö
;

174 
cùhî
;

177 } 
DEK_öfo
;

179 
PEM_USER
 *
‹igö©‹
;

181 
num_ªcùõ¡
;

182 
PEM_USER
 **
ªcùõ¡
;

184 #i‚de‡
OPENSSL_NO_STACK


185 
STACK
 *
x509_chaö
;

187 *
x509_chaö
;

189 
EVP_MD
 *
md
;

191 
md_íc
;

192 
md_Àn
;

193 *
md_d©a
;

195 
EVP_CIPHER
 *
dec
;

196 
key_Àn
;

197 *
key
;

202 
d©a_íc
;

203 
d©a_Àn
;

204 *
d©a
;

205 } 
	tPEM_CTX
;

212 #ifde‡
OPENSSL_NO_FP_API


214 
	#IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

215 
	#IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

216 
	#IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

220 
	#IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

221 
ty≥
 *
PEM_ªad_
##
	`«me
(
FILE
 *
Â
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
)\

223 (((
ty≥
 *(*)(
	`D2I_OF
—y≥),*,
FILE
 *,ty≥ **,
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_ªad
))(
d2i_
##
a¢1
, 
°r
,
Â
,
x
,
cb
,
u
)); \

225 

	)

226 
	#IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

227 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
) \

229 ((((*)(
	`I2D_OF
(
ty≥
),c⁄° *,
FILE
 *,ty≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe
))(
i2d_
##
a¢1
,
°r
,
Â
,
x
,
NULL
,NULL,0,NULL,NULL)); \

230 }

	)

232 
	#IMPLEMENT_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

233 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, c⁄° 
ty≥
 *
x
) \

235 ((((*)(
	`I2D_OF_c⁄°
(
ty≥
),c⁄° *,
FILE
 *, c⁄°Åy≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe
))(
i2d_
##
a¢1
,
°r
,
Â
,
x
,
NULL
,NULL,0,NULL,NULL)); \

236 }

	)

238 
	#IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

239 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

240 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, \

241 *
u
) \

243 ((((*)(
	`I2D_OF
(
ty≥
),c⁄° *,
FILE
 *,ty≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe
))(
i2d_
##
a¢1
,
°r
,
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)); \

244 }

	)

246 
	#IMPLEMENT_PEM_wrôe_cb_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

247 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

248 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, \

249 *
u
) \

251 ((((*)(
	`I2D_OF_c⁄°
(
ty≥
),c⁄° *,
FILE
 *,ty≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe
))(
i2d_
##
a¢1
,
°r
,
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)); \

252 }

	)

256 
	#IMPLEMENT_PEM_ªad_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

257 
ty≥
 *
PEM_ªad_bio_
##
	`«me
(
BIO
 *
bp
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
)\

259 (((
ty≥
 *(*)(
	`D2I_OF
—y≥),c⁄° *,
BIO
 *,ty≥ **,
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_ªad_bio
))(
d2i_
##
a¢1
, 
°r
,
bp
,
x
,
cb
,
u
)); \

260 }

	)

262 
	#IMPLEMENT_PEM_wrôe_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

263 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
) \

265 ((((*)(
	`I2D_OF
(
ty≥
),c⁄° *,
BIO
 *,ty≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe_bio
))(
i2d_
##
a¢1
,
°r
,
bp
,
x
,
NULL
,NULL,0,NULL,NULL)); \

266 }

	)

268 
	#IMPLEMENT_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

269 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, c⁄° 
ty≥
 *
x
) \

271 ((((*)(
	`I2D_OF_c⁄°
(
ty≥
),c⁄° *,
BIO
 *,c⁄°Åy≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe_bio
))(
i2d_
##
a¢1
,
°r
,
bp
,
x
,
NULL
,NULL,0,NULL,NULL)); \

272 }

	)

274 
	#IMPLEMENT_PEM_wrôe_cb_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

275 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

276 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
) \

278 ((((*)(
	`I2D_OF
(
ty≥
),c⁄° *,
BIO
 *,ty≥ *,c⁄° 
EVP_CIPHER
 *,*,,
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe_bio
))(
i2d_
##
a¢1
,
°r
,
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)); \

279 }

	)

281 
	#IMPLEMENT_PEM_wrôe_cb_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

282 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

283 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
) \

285 ((((*)(
	`I2D_OF_c⁄°
(
ty≥
),c⁄° *,
BIO
 *,ty≥ *,c⁄° 
EVP_CIPHER
 *,*,,
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe_bio
))(
i2d_
##
a¢1
,
°r
,
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)); \

286 }

	)

288 
	#IMPLEMENT_PEM_wrôe
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

289 
	`IMPLEMENT_PEM_wrôe_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

290 
	`IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

292 
	#IMPLEMENT_PEM_wrôe_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

293 
	`IMPLEMENT_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

294 
	`IMPLEMENT_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

296 
	#IMPLEMENT_PEM_wrôe_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

297 
	`IMPLEMENT_PEM_wrôe_cb_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

298 
	`IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

300 
	#IMPLEMENT_PEM_wrôe_cb_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

301 
	`IMPLEMENT_PEM_wrôe_cb_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

302 
	`IMPLEMENT_PEM_wrôe_cb_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

304 
	#IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

305 
	`IMPLEMENT_PEM_ªad_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

306 
	`IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

308 
	#IMPLEMENT_PEM_rw
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

309 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

310 
	`IMPLEMENT_PEM_wrôe
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

312 
	#IMPLEMENT_PEM_rw_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

313 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

314 
	`IMPLEMENT_PEM_wrôe_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

316 
	#IMPLEMENT_PEM_rw_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

317 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

318 
	`IMPLEMENT_PEM_wrôe_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

322 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
OPENSSL_NO_FP_API
)

324 
	#DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
Ë

	)

325 
	#DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
Ë

	)

326 
	#DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
Ë

	)

330 
	#DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
) \

331 
ty≥
 *
PEM_ªad_
##
	`«me
(
FILE
 *
Â
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

333 
	#DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
) \

334 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
);

	)

336 
	#DECLARE_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
) \

337 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, c⁄° 
ty≥
 *
x
);

	)

339 
	#DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
) \

340 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

341 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

345 #i‚de‡
OPENSSL_NO_BIO


346 
	#DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
) \

347 
ty≥
 *
PEM_ªad_bio_
##
	`«me
(
BIO
 *
bp
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

349 
	#DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
) \

350 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
);

	)

352 
	#DECLARE_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
) \

353 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, c⁄° 
ty≥
 *
x
);

	)

355 
	#DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
) \

356 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

357 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

361 
	#DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
Ë

	)

362 
	#DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
Ë

	)

363 
	#DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
Ë

	)

367 
	#DECLARE_PEM_wrôe
(
«me
, 
ty≥
) \

368 
	`DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
) \

369 
	`DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
)

	)

371 
	#DECLARE_PEM_wrôe_c⁄°
(
«me
, 
ty≥
) \

372 
	`DECLARE_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
) \

373 
	`DECLARE_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
)

	)

375 
	#DECLARE_PEM_wrôe_cb
(
«me
, 
ty≥
) \

376 
	`DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
) \

377 
	`DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
)

	)

379 
	#DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

380 
	`DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
) \

381 
	`DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
)

	)

383 
	#DECLARE_PEM_rw
(
«me
, 
ty≥
) \

384 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

385 
	`DECLARE_PEM_wrôe
(
«me
, 
ty≥
)

	)

387 
	#DECLARE_PEM_rw_c⁄°
(
«me
, 
ty≥
) \

388 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

389 
	`DECLARE_PEM_wrôe_c⁄°
(
«me
, 
ty≥
)

	)

391 
	#DECLARE_PEM_rw_cb
(
«me
, 
ty≥
) \

392 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

393 
	`DECLARE_PEM_wrôe_cb
(
«me
, 
ty≥
)

	)

395 #ifde‡
SSLEAY_MACROS


397 
	#PEM_wrôe_SSL_SESSION
(
Â
,
x
) \

398 
	`PEM_ASN1_wrôe
(((*)())
i2d_SSL_SESSION
, \

399 
PEM_STRING_SSL_SESSION
,
Â
, (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

400 
	#PEM_wrôe_X509
(
Â
,
x
) \

401 
	`PEM_ASN1_wrôe
(((*)())
i2d_X509
,
PEM_STRING_X509
,
Â
, \

402 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

403 
	#PEM_wrôe_X509_REQ
(
Â
,
x
Ë
	`PEM_ASN1_wrôe
( \

404 ((*)())
i2d_X509_REQ
,
PEM_STRING_X509_REQ
,
Â
,(*)
x
, \

405 
NULL
,NULL,0,NULL,NULL)

	)

406 
	#PEM_wrôe_X509_CRL
(
Â
,
x
) \

407 
	`PEM_ASN1_wrôe
(((*)())
i2d_X509_CRL
,
PEM_STRING_X509_CRL
, \

408 
Â
,(*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

409 
	#PEM_wrôe_RSAPriv©eKey
(
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

410 
	`PEM_ASN1_wrôe
(((*)())
i2d_RSAPriv©eKey
,
PEM_STRING_RSA
,
Â
,\

411 (*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

412 
	#PEM_wrôe_RSAPublicKey
(
Â
,
x
) \

413 
	`PEM_ASN1_wrôe
(((*)())
i2d_RSAPublicKey
,\

414 
PEM_STRING_RSA_PUBLIC
,
Â
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

415 
	#PEM_wrôe_DSAPriv©eKey
(
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

416 
	`PEM_ASN1_wrôe
(((*)())
i2d_DSAPriv©eKey
,
PEM_STRING_DSA
,
Â
,\

417 (*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

418 
	#PEM_wrôe_Priv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

419 
	`PEM_ASN1_wrôe
(((*)())
i2d_Priv©eKey
,\

420 (((
x
)->
ty≥
 =
EVP_PKEY_DSA
)?
PEM_STRING_DSA
:
PEM_STRING_RSA
),\

421 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

422 
	#PEM_wrôe_PKCS7
(
Â
,
x
) \

423 
	`PEM_ASN1_wrôe
(((*)())
i2d_PKCS7
,
PEM_STRING_PKCS7
,
Â
, \

424 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

425 
	#PEM_wrôe_DH∑øms
(
Â
,
x
) \

426 
	`PEM_ASN1_wrôe
(((*)())
i2d_DH∑øms
,
PEM_STRING_DHPARAMS
,
Â
,\

427 (*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

429 
	#PEM_wrôe_NETSCAPE_CERT_SEQUENCE
(
Â
,
x
) \

430 
	`PEM_ASN1_wrôe
(((*)())
i2d_NETSCAPE_CERT_SEQUENCE
, \

431 
PEM_STRING_X509
,
Â
, \

432 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

434 
	#PEM_ªad_SSL_SESSION
(
Â
,
x
,
cb
,
u
Ë(
SSL_SESSION
 *)
	`PEM_ASN1_ªad
( \

435 (*(*)())
d2i_SSL_SESSION
,
PEM_STRING_SSL_SESSION
,
Â
,(**)
x
,
cb
,
u
)

	)

436 
	#PEM_ªad_X509
(
Â
,
x
,
cb
,
u
Ë(
X509
 *)
	`PEM_ASN1_ªad
( \

437 (*(*)())
d2i_X509
,
PEM_STRING_X509
,
Â
,(**)
x
,
cb
,
u
)

	)

438 
	#PEM_ªad_X509_REQ
(
Â
,
x
,
cb
,
u
Ë(
X509_REQ
 *)
	`PEM_ASN1_ªad
( \

439 (*(*)())
d2i_X509_REQ
,
PEM_STRING_X509_REQ
,
Â
,(**)
x
,
cb
,
u
)

	)

440 
	#PEM_ªad_X509_CRL
(
Â
,
x
,
cb
,
u
Ë(
X509_CRL
 *)
	`PEM_ASN1_ªad
( \

441 (*(*)())
d2i_X509_CRL
,
PEM_STRING_X509_CRL
,
Â
,(**)
x
,
cb
,
u
)

	)

442 
	#PEM_ªad_RSAPriv©eKey
(
Â
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad
( \

443 (*(*)())
d2i_RSAPriv©eKey
,
PEM_STRING_RSA
,
Â
,(**)
x
,
cb
,
u
)

	)

444 
	#PEM_ªad_RSAPublicKey
(
Â
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad
( \

445 (*(*)())
d2i_RSAPublicKey
,
PEM_STRING_RSA_PUBLIC
,
Â
,(**)
x
,
cb
,
u
)

	)

446 
	#PEM_ªad_DSAPriv©eKey
(
Â
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad
( \

447 (*(*)())
d2i_DSAPriv©eKey
,
PEM_STRING_DSA
,
Â
,(**)
x
,
cb
,
u
)

	)

448 
	#PEM_ªad_Priv©eKey
(
Â
,
x
,
cb
,
u
Ë(
EVP_PKEY
 *)
	`PEM_ASN1_ªad
( \

449 (*(*)())
d2i_Priv©eKey
,
PEM_STRING_EVP_PKEY
,
Â
,(**)
x
,
cb
,
u
)

	)

450 
	#PEM_ªad_PKCS7
(
Â
,
x
,
cb
,
u
Ë(
PKCS7
 *)
	`PEM_ASN1_ªad
( \

451 (*(*)())
d2i_PKCS7
,
PEM_STRING_PKCS7
,
Â
,(**)
x
,
cb
,
u
)

	)

452 
	#PEM_ªad_DH∑øms
(
Â
,
x
,
cb
,
u
Ë(
DH
 *)
	`PEM_ASN1_ªad
( \

453 (*(*)())
d2i_DH∑øms
,
PEM_STRING_DHPARAMS
,
Â
,(**)
x
,
cb
,
u
)

	)

455 
	#PEM_ªad_NETSCAPE_CERT_SEQUENCE
(
Â
,
x
,
cb
,
u
) \

456 (
NETSCAPE_CERT_SEQUENCE
 *)
	`PEM_ASN1_ªad
( \

457 (*(*)())
d2i_NETSCAPE_CERT_SEQUENCE
,
PEM_STRING_X509
,
Â
,\

458 (**)
x
,
cb
,
u
)

	)

460 
	#PEM_wrôe_bio_X509
(
bp
,
x
) \

461 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_X509
,
PEM_STRING_X509
,
bp
, \

462 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

463 
	#PEM_wrôe_bio_X509_REQ
(
bp
,
x
Ë
	`PEM_ASN1_wrôe_bio
( \

464 ((*)())
i2d_X509_REQ
,
PEM_STRING_X509_REQ
,
bp
,(*)
x
, \

465 
NULL
,NULL,0,NULL,NULL)

	)

466 
	#PEM_wrôe_bio_X509_CRL
(
bp
,
x
) \

467 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_X509_CRL
,
PEM_STRING_X509_CRL
,\

468 
bp
,(*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

469 
	#PEM_wrôe_bio_RSAPriv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

470 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_RSAPriv©eKey
,
PEM_STRING_RSA
,\

471 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

472 
	#PEM_wrôe_bio_RSAPublicKey
(
bp
,
x
) \

473 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_RSAPublicKey
, \

474 
PEM_STRING_RSA_PUBLIC
,\

475 
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

476 
	#PEM_wrôe_bio_DSAPriv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

477 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DSAPriv©eKey
,
PEM_STRING_DSA
,\

478 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

479 
	#PEM_wrôe_bio_Priv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

480 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_Priv©eKey
,\

481 (((
x
)->
ty≥
 =
EVP_PKEY_DSA
)?
PEM_STRING_DSA
:
PEM_STRING_RSA
),\

482 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

483 
	#PEM_wrôe_bio_PKCS7
(
bp
,
x
) \

484 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_PKCS7
,
PEM_STRING_PKCS7
,
bp
, \

485 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

486 
	#PEM_wrôe_bio_DH∑øms
(
bp
,
x
) \

487 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DH∑øms
,
PEM_STRING_DHPARAMS
,\

488 
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

489 
	#PEM_wrôe_bio_DSA∑øms
(
bp
,
x
) \

490 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DSA∑øms
, \

491 
PEM_STRING_DSAPARAMS
,
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

493 
	#PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE
(
bp
,
x
) \

494 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_NETSCAPE_CERT_SEQUENCE
, \

495 
PEM_STRING_X509
,
bp
, \

496 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

498 
	#PEM_ªad_bio_X509
(
bp
,
x
,
cb
,
u
Ë(
X509
 *)
	`PEM_ASN1_ªad_bio
( \

499 (*(*)())
d2i_X509
,
PEM_STRING_X509
,
bp
,(**)
x
,
cb
,
u
)

	)

500 
	#PEM_ªad_bio_X509_REQ
(
bp
,
x
,
cb
,
u
Ë(
X509_REQ
 *)
	`PEM_ASN1_ªad_bio
( \

501 (*(*)())
d2i_X509_REQ
,
PEM_STRING_X509_REQ
,
bp
,(**)
x
,
cb
,
u
)

	)

502 
	#PEM_ªad_bio_X509_CRL
(
bp
,
x
,
cb
,
u
Ë(
X509_CRL
 *)
	`PEM_ASN1_ªad_bio
( \

503 (*(*)())
d2i_X509_CRL
,
PEM_STRING_X509_CRL
,
bp
,(**)
x
,
cb
,
u
)

	)

504 
	#PEM_ªad_bio_RSAPriv©eKey
(
bp
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad_bio
( \

505 (*(*)())
d2i_RSAPriv©eKey
,
PEM_STRING_RSA
,
bp
,(**)
x
,
cb
,
u
)

	)

506 
	#PEM_ªad_bio_RSAPublicKey
(
bp
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad_bio
( \

507 (*(*)())
d2i_RSAPublicKey
,
PEM_STRING_RSA_PUBLIC
,
bp
,(**)
x
,
cb
,
u
)

	)

508 
	#PEM_ªad_bio_DSAPriv©eKey
(
bp
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad_bio
( \

509 (*(*)())
d2i_DSAPriv©eKey
,
PEM_STRING_DSA
,
bp
,(**)
x
,
cb
,
u
)

	)

510 
	#PEM_ªad_bio_Priv©eKey
(
bp
,
x
,
cb
,
u
Ë(
EVP_PKEY
 *)
	`PEM_ASN1_ªad_bio
( \

511 (*(*)())
d2i_Priv©eKey
,
PEM_STRING_EVP_PKEY
,
bp
,(**)
x
,
cb
,
u
)

	)

513 
	#PEM_ªad_bio_PKCS7
(
bp
,
x
,
cb
,
u
Ë(
PKCS7
 *)
	`PEM_ASN1_ªad_bio
( \

514 (*(*)())
d2i_PKCS7
,
PEM_STRING_PKCS7
,
bp
,(**)
x
,
cb
,
u
)

	)

515 
	#PEM_ªad_bio_DH∑øms
(
bp
,
x
,
cb
,
u
Ë(
DH
 *)
	`PEM_ASN1_ªad_bio
( \

516 (*(*)())
d2i_DH∑øms
,
PEM_STRING_DHPARAMS
,
bp
,(**)
x
,
cb
,
u
)

	)

517 
	#PEM_ªad_bio_DSA∑øms
(
bp
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad_bio
( \

518 (*(*)())
d2i_DSA∑øms
,
PEM_STRING_DSAPARAMS
,
bp
,(**)
x
,
cb
,
u
)

	)

520 
	#PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE
(
bp
,
x
,
cb
,
u
) \

521 (
NETSCAPE_CERT_SEQUENCE
 *)
	`PEM_ASN1_ªad_bio
( \

522 (*(*)())
d2i_NETSCAPE_CERT_SEQUENCE
,
PEM_STRING_X509
,
bp
,\

523 (**)
x
,
cb
,
u
)

	)

529 
	t≥m_∑ssw‹d_cb
(*
	tbuf
, 
	tsize
, 
	trwÊag
, *
	tu£rd©a
);

532 
	t≥m_∑ssw‹d_cb
(*
	tbuf
, 
	tsize
, 
	trwÊag
);

535 
PEM_gë_EVP_CIPHER_INFO
(*
hódî
, 
EVP_CIPHER_INFO
 *
cùhî
);

536 
PEM_do_hódî
 (
EVP_CIPHER_INFO
 *
cùhî
, *
d©a
,*
Àn
,

537 
≥m_∑ssw‹d_cb
 *
ˇŒback
,*
u
);

539 #i‚de‡
OPENSSL_NO_BIO


540 
PEM_ªad_bio
(
BIO
 *
bp
, **
«me
, **
hódî
,

541 **
d©a
,*
Àn
);

542 
PEM_wrôe_bio
(
BIO
 *
bp
,c⁄° *
«me
,*
hdr
,*
d©a
,

543 
Àn
);

544 
PEM_byãs_ªad_bio
(**
pd©a
, *
∂í
, **
≤m
, c⁄° *
«me
, 
BIO
 *
bp
,

545 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

546 * 
PEM_ASN1_ªad_bio
(
d2i_of_void
 *
d2i
, c⁄° *
«me
, 
BIO
 *
bp
,

547 **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

548 
	#PEM_ASN1_ªad_bio_of
(
ty≥
,
d2i
,
«me
,
bp
,
x
,
cb
,
u
) \

549 ((
ty≥
 *(*)(
	`D2I_OF
—y≥),c⁄° *,
BIO
 *,ty≥ **,
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_ªad_bio
))(
d2i
,
«me
,
bp
,
x
,
cb
,
u
)

	)

550 
PEM_ASN1_wrôe_bio
(
i2d_of_void
 *
i2d
,c⁄° *
«me
,
BIO
 *
bp
,*
x
,

551 c⁄° 
EVP_CIPHER
 *
íc
,*
k°r
,
kÀn
,

552 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

553 
	#PEM_ASN1_wrôe_bio_of
(
ty≥
,
i2d
,
«me
,
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

554 (((*)(
	`I2D_OF
(
ty≥
),c⁄° *,
BIO
 *,ty≥ *, c⁄° 
EVP_CIPHER
 *,*,, 
≥m_∑ssw‹d_cb
 *,*))
	`›ís¶_fˇ°
(
PEM_ASN1_wrôe_bio
))(
i2d
,
«me
,
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

556 
STACK_OF
(
X509_INFO
Ë* 
PEM_X509_INFO_ªad_bio
(
BIO
 *
bp
, STACK_OF(X509_INFOË*
sk
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

557 
PEM_X509_INFO_wrôe_bio
(
BIO
 *
bp
,
X509_INFO
 *
xi
, 
EVP_CIPHER
 *
íc
,

558 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cd
, *
u
);

561 #i‚de‡
OPENSSL_SYS_WIN16


562 
PEM_ªad
(
FILE
 *
Â
, **
«me
, **
hódî
,

563 **
d©a
,*
Àn
);

564 
PEM_wrôe
(
FILE
 *
Â
,*
«me
,*
hdr
,*
d©a
,
Àn
);

565 * 
PEM_ASN1_ªad
(
d2i_of_void
 *
d2i
, c⁄° *
«me
, 
FILE
 *
Â
, **
x
,

566 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

567 
PEM_ASN1_wrôe
(
i2d_of_void
 *
i2d
,c⁄° *
«me
,
FILE
 *
Â
,

568 *
x
,c⁄° 
EVP_CIPHER
 *
íc
,*
k°r
,

569 
kÀn
,
≥m_∑ssw‹d_cb
 *
ˇŒback
, *
u
);

570 
STACK_OF
(
X509_INFO
Ë* 
PEM_X509_INFO_ªad
(
FILE
 *
Â
, STACK_OF(X509_INFOË*
sk
,

571 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

574 
PEM_SólInô
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, 
EVP_CIPHER
 *
ty≥
,

575 
EVP_MD
 *
md_ty≥
, **
ek
, *
ekl
,

576 *
iv
, 
EVP_PKEY
 **
pubk
, 
≈ubk
);

577 
PEM_SólUpd©e
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, *
out
, *
oué
,

578 *
ö
, 
öl
);

579 
PEM_SólFöÆ
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, *
sig
,*
sigl
,

580 *
out
, *
oué
, 
EVP_PKEY
 *
¥iv
);

582 
PEM_SignInô
(
EVP_MD_CTX
 *
˘x
, 
EVP_MD
 *
ty≥
);

583 
PEM_SignUpd©e
(
EVP_MD_CTX
 *
˘x
,*
d
,
˙t
);

584 
PEM_SignFöÆ
(
EVP_MD_CTX
 *
˘x
, *
sigªt
,

585 *
sigÀn
, 
EVP_PKEY
 *
pkey
);

587 
PEM_def_ˇŒback
(*
buf
, 
num
, 
w
, *
key
);

588 
PEM_¥oc_ty≥
(*
buf
, 
ty≥
);

589 
PEM_dek_öfo
(*
buf
, c⁄° *
ty≥
, 
Àn
, *
°r
);

591 #i‚de‡
SSLEAY_MACROS


593 
	~<›ís¶/symhacks.h
>

595 
DECLARE_PEM_rw
(
X509
, X509)

597 
DECLARE_PEM_rw
(
X509_AUX
, 
X509
)

599 
DECLARE_PEM_rw
(
X509_CERT_PAIR
, X509_CERT_PAIR)

601 
DECLARE_PEM_rw
(
X509_REQ
, X509_REQ)

602 
DECLARE_PEM_wrôe
(
X509_REQ_NEW
, 
X509_REQ
)

604 
DECLARE_PEM_rw
(
X509_CRL
, X509_CRL)

606 
DECLARE_PEM_rw
(
PKCS7
, PKCS7)

608 
DECLARE_PEM_rw
(
NETSCAPE_CERT_SEQUENCE
, NETSCAPE_CERT_SEQUENCE)

610 
DECLARE_PEM_rw
(
PKCS8
, 
X509_SIG
)

612 
DECLARE_PEM_rw
(
PKCS8_PRIV_KEY_INFO
, PKCS8_PRIV_KEY_INFO)

614 #i‚de‡
OPENSSL_NO_RSA


616 
DECLARE_PEM_rw_cb
(
RSAPriv©eKey
, 
RSA
)

618 
DECLARE_PEM_rw_c⁄°
(
RSAPublicKey
, 
RSA
)

619 
DECLARE_PEM_rw
(
RSA_PUBKEY
, 
RSA
)

623 #i‚de‡
OPENSSL_NO_DSA


625 
DECLARE_PEM_rw_cb
(
DSAPriv©eKey
, 
DSA
)

627 
DECLARE_PEM_rw
(
DSA_PUBKEY
, 
DSA
)

629 
DECLARE_PEM_rw_c⁄°
(
DSA∑øms
, 
DSA
)

634 #i‚de‡
OPENSSL_NO_DH


636 
DECLARE_PEM_rw_c⁄°
(
DH∑øms
, 
DH
)

640 
DECLARE_PEM_rw_cb
(
Priv©eKey
, 
EVP_PKEY
)

642 
DECLARE_PEM_rw
(
PUBKEY
, 
EVP_PKEY
)

644 
PEM_wrôe_bio_PKCS8Priv©eKey_nid
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, 
nid
,

645 *
k°r
, 
kÀn
,

646 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

647 
PEM_wrôe_bio_PKCS8Priv©eKey
(
BIO
 *, 
EVP_PKEY
 *, c⁄° 
EVP_CIPHER
 *,

648 *, , 
≥m_∑ssw‹d_cb
 *, *);

649 
i2d_PKCS8Priv©eKey_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
,

650 *
k°r
, 
kÀn
,

651 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

652 
i2d_PKCS8Priv©eKey_nid_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, 
nid
,

653 *
k°r
, 
kÀn
,

654 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

655 
EVP_PKEY
 *
d2i_PKCS8Priv©eKey_bio
(
BIO
 *
bp
, EVP_PKEY **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

657 
i2d_PKCS8Priv©eKey_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
,

658 *
k°r
, 
kÀn
,

659 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

660 
i2d_PKCS8Priv©eKey_nid_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, 
nid
,

661 *
k°r
, 
kÀn
,

662 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

663 
PEM_wrôe_PKCS8Priv©eKey_nid
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, 
nid
,

664 *
k°r
, 
kÀn
,

665 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

667 
EVP_PKEY
 *
d2i_PKCS8Priv©eKey_Â
(
FILE
 *
Â
, EVP_PKEY **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

669 
PEM_wrôe_PKCS8Priv©eKey
(
FILE
 *
Â
,
EVP_PKEY
 *
x
,c⁄° 
EVP_CIPHER
 *
íc
,

670 *
k°r
,
kÀn
, 
≥m_∑ssw‹d_cb
 *
cd
, *
u
);

679 
ERR_lﬂd_PEM_°rögs
();

684 
	#PEM_F_D2I_PKCS8PRIVATEKEY_BIO
 120

	)

685 
	#PEM_F_D2I_PKCS8PRIVATEKEY_FP
 121

	)

686 
	#PEM_F_DO_PK8PKEY
 126

	)

687 
	#PEM_F_DO_PK8PKEY_FP
 125

	)

688 
	#PEM_F_LOAD_IV
 101

	)

689 
	#PEM_F_PEM_ASN1_READ
 102

	)

690 
	#PEM_F_PEM_ASN1_READ_BIO
 103

	)

691 
	#PEM_F_PEM_ASN1_WRITE
 104

	)

692 
	#PEM_F_PEM_ASN1_WRITE_BIO
 105

	)

693 
	#PEM_F_PEM_DEF_CALLBACK
 100

	)

694 
	#PEM_F_PEM_DO_HEADER
 106

	)

695 
	#PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY
 118

	)

696 
	#PEM_F_PEM_GET_EVP_CIPHER_INFO
 107

	)

697 
	#PEM_F_PEM_PK8PKEY
 119

	)

698 
	#PEM_F_PEM_READ
 108

	)

699 
	#PEM_F_PEM_READ_BIO
 109

	)

700 
	#PEM_F_PEM_READ_BIO_PRIVATEKEY
 123

	)

701 
	#PEM_F_PEM_READ_PRIVATEKEY
 124

	)

702 
	#PEM_F_PEM_SEALFINAL
 110

	)

703 
	#PEM_F_PEM_SEALINIT
 111

	)

704 
	#PEM_F_PEM_SIGNFINAL
 112

	)

705 
	#PEM_F_PEM_WRITE
 113

	)

706 
	#PEM_F_PEM_WRITE_BIO
 114

	)

707 
	#PEM_F_PEM_X509_INFO_READ
 115

	)

708 
	#PEM_F_PEM_X509_INFO_READ_BIO
 116

	)

709 
	#PEM_F_PEM_X509_INFO_WRITE_BIO
 117

	)

712 
	#PEM_R_BAD_BASE64_DECODE
 100

	)

713 
	#PEM_R_BAD_DECRYPT
 101

	)

714 
	#PEM_R_BAD_END_LINE
 102

	)

715 
	#PEM_R_BAD_IV_CHARS
 103

	)

716 
	#PEM_R_BAD_PASSWORD_READ
 104

	)

717 
	#PEM_R_ERROR_CONVERTING_PRIVATE_KEY
 115

	)

718 
	#PEM_R_NOT_DEK_INFO
 105

	)

719 
	#PEM_R_NOT_ENCRYPTED
 106

	)

720 
	#PEM_R_NOT_PROC_TYPE
 107

	)

721 
	#PEM_R_NO_START_LINE
 108

	)

722 
	#PEM_R_PROBLEMS_GETTING_PASSWORD
 109

	)

723 
	#PEM_R_PUBLIC_KEY_NO_RSA
 110

	)

724 
	#PEM_R_READ_KEY
 111

	)

725 
	#PEM_R_SHORT_HEADER
 112

	)

726 
	#PEM_R_UNSUPPORTED_CIPHER
 113

	)

727 
	#PEM_R_UNSUPPORTED_ENCRYPTION
 114

	)

729 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/pkcs7.h

59 #i‚de‡
HEADER_PKCS7_H


60 
	#HEADER_PKCS7_H


	)

62 
	~<›ís¶/a¢1.h
>

63 
	~<›ís¶/bio.h
>

64 
	~<›ís¶/e_os2.h
>

66 
	~<›ís¶/symhacks.h
>

67 
	~<›ís¶/os¶_typ.h
>

69 #ifde‡ 
__˝lu•lus


73 #ifde‡
OPENSSL_SYS_WIN32


75 #unde‡
PKCS7_ISSUER_AND_SERIAL


76 #unde‡
PKCS7_SIGNER_INFO


86 
	spkcs7_issuî_™d_£rül_°


88 
X509_NAME
 *
issuî
;

89 
ASN1_INTEGER
 *
£rül
;

90 } 
	tPKCS7_ISSUER_AND_SERIAL
;

92 
	spkcs7_sig√r_öfo_°


94 
ASN1_INTEGER
 *
vîsi⁄
;

95 
PKCS7_ISSUER_AND_SERIAL
 *
issuî_™d_£rül
;

96 
X509_ALGOR
 *
dige°_Æg
;

97 
STACK_OF
(
X509_ATTRIBUTE
Ë*
auth_©å
;

98 
X509_ALGOR
 *
dige°_íc_Æg
;

99 
ASN1_OCTET_STRING
 *
íc_dige°
;

100 
STACK_OF
(
X509_ATTRIBUTE
Ë*
u«uth_©å
;

103 
EVP_PKEY
 *
pkey
;

104 } 
	tPKCS7_SIGNER_INFO
;

106 
DECLARE_STACK_OF
(
PKCS7_SIGNER_INFO
)

107 
DECLARE_ASN1_SET_OF
(
PKCS7_SIGNER_INFO
)

109 
	spkcs7_ªcù_öfo_°


111 
ASN1_INTEGER
 *
vîsi⁄
;

112 
PKCS7_ISSUER_AND_SERIAL
 *
issuî_™d_£rül
;

113 
X509_ALGOR
 *
key_íc_Æg‹
;

114 
ASN1_OCTET_STRING
 *
íc_key
;

115 
X509
 *
˚π
;

116 } 
	tPKCS7_RECIP_INFO
;

118 
DECLARE_STACK_OF
(
PKCS7_RECIP_INFO
)

119 
DECLARE_ASN1_SET_OF
(
PKCS7_RECIP_INFO
)

121 
	spkcs7_sig√d_°


123 
ASN1_INTEGER
 *
vîsi⁄
;

124 
STACK_OF
(
X509_ALGOR
Ë*
md_Ægs
;

125 
STACK_OF
(
X509
Ë*
˚π
;

126 
STACK_OF
(
X509_CRL
Ë*
¸l
;

127 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
sig√r_öfo
;

129 
pkcs7_°
 *
c⁄ã¡s
;

130 } 
	tPKCS7_SIGNED
;

134 
	spkcs7_íc_c⁄ã¡_°


136 
ASN1_OBJECT
 *
c⁄ã¡_ty≥
;

137 
X509_ALGOR
 *
Æg‹ôhm
;

138 
ASN1_OCTET_STRING
 *
íc_d©a
;

139 c⁄° 
EVP_CIPHER
 *
cùhî
;

140 } 
	tPKCS7_ENC_CONTENT
;

142 
	spkcs7_ívñ›ed_°


144 
ASN1_INTEGER
 *
vîsi⁄
;

145 
STACK_OF
(
PKCS7_RECIP_INFO
Ë*
ªcùõ¡öfo
;

146 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

147 } 
	tPKCS7_ENVELOPE
;

149 
	spkcs7_sig√d™dívñ›ed_°


151 
ASN1_INTEGER
 *
vîsi⁄
;

152 
STACK_OF
(
X509_ALGOR
Ë*
md_Ægs
;

153 
STACK_OF
(
X509
Ë*
˚π
;

154 
STACK_OF
(
X509_CRL
Ë*
¸l
;

155 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
sig√r_öfo
;

157 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

158 
STACK_OF
(
PKCS7_RECIP_INFO
Ë*
ªcùõ¡öfo
;

159 } 
	tPKCS7_SIGN_ENVELOPE
;

161 
	spkcs7_dige°_°


163 
ASN1_INTEGER
 *
vîsi⁄
;

164 
X509_ALGOR
 *
md
;

165 
pkcs7_°
 *
c⁄ã¡s
;

166 
ASN1_OCTET_STRING
 *
dige°
;

167 } 
	tPKCS7_DIGEST
;

169 
	spkcs7_í¸y±ed_°


171 
ASN1_INTEGER
 *
vîsi⁄
;

172 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

173 } 
	tPKCS7_ENCRYPT
;

175 
	spkcs7_°


179 *
a¢1
;

180 
Àngth
;

182 
	#PKCS7_S_HEADER
 0

	)

183 
	#PKCS7_S_BODY
 1

	)

184 
	#PKCS7_S_TAIL
 2

	)

185 
°©e
;

187 
dëached
;

189 
ASN1_OBJECT
 *
ty≥
;

194 *
±r
;

197 
ASN1_OCTET_STRING
 *
d©a
;

200 
PKCS7_SIGNED
 *
sign
;

203 
PKCS7_ENVELOPE
 *
ívñ›ed
;

206 
PKCS7_SIGN_ENVELOPE
 *
sig√d_™d_ívñ›ed
;

209 
PKCS7_DIGEST
 *
dige°
;

212 
PKCS7_ENCRYPT
 *
í¸y±ed
;

215 
ASN1_TYPE
 *
Ÿhî
;

216 } 
d
;

217 } 
	tPKCS7
;

219 
DECLARE_STACK_OF
(
PKCS7
)

220 
DECLARE_ASN1_SET_OF
(
PKCS7
)

221 
DECLARE_PKCS12_STACK_OF
(
PKCS7
)

223 
	#PKCS7_OP_SET_DETACHED_SIGNATURE
 1

	)

224 
	#PKCS7_OP_GET_DETACHED_SIGNATURE
 2

	)

226 
	#PKCS7_gë_sig√d_©åibuãs
(
si
Ë((si)->
auth_©å
)

	)

227 
	#PKCS7_gë_©åibuãs
(
si
Ë((si)->
u«uth_©å
)

	)

229 
	#PKCS7_ty≥_is_sig√d
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_sig√d
)

	)

230 
	#PKCS7_ty≥_is_í¸y±ed
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_í¸y±ed
)

	)

231 
	#PKCS7_ty≥_is_ívñ›ed
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_ívñ›ed
)

	)

232 
	#PKCS7_ty≥_is_sig√dAndEnvñ›ed
(
a
) \

233 (
	`OBJ_obj2nid
((
a
)->
ty≥
Ë=
NID_pkcs7_sig√dAndEnvñ›ed
)

	)

234 
	#PKCS7_ty≥_is_d©a
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_d©a
)

	)

236 
	#PKCS7_ty≥_is_dige°
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_dige°
)

	)

238 
	#PKCS7_£t_dëached
(
p
,
v
) \

239 
	`PKCS7_˘æ
(
p
,
PKCS7_OP_SET_DETACHED_SIGNATURE
,
v
,
NULL
)

	)

240 
	#PKCS7_gë_dëached
(
p
) \

241 
	`PKCS7_˘æ
(
p
,
PKCS7_OP_GET_DETACHED_SIGNATURE
,0,
NULL
)

	)

243 
	#PKCS7_is_dëached
(
p7
Ë(
	`PKCS7_ty≥_is_sig√d
’7Ë&& 
	`PKCS7_gë_dëached
’7))

	)

245 #ifde‡
SSLEAY_MACROS


246 #i‚de‡
PKCS7_ISSUER_AND_SERIAL_dige°


247 
	#PKCS7_ISSUER_AND_SERIAL_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

248 
	`ASN1_dige°
(((*)())
i2d_PKCS7_ISSUER_AND_SERIAL
,
ty≥
,\

249 (*)
d©a
,
md
,
Àn
)

	)

255 
	#PKCS7_TEXT
 0x1

	)

256 
	#PKCS7_NOCERTS
 0x2

	)

257 
	#PKCS7_NOSIGS
 0x4

	)

258 
	#PKCS7_NOCHAIN
 0x8

	)

259 
	#PKCS7_NOINTERN
 0x10

	)

260 
	#PKCS7_NOVERIFY
 0x20

	)

261 
	#PKCS7_DETACHED
 0x40

	)

262 
	#PKCS7_BINARY
 0x80

	)

263 
	#PKCS7_NOATTR
 0x100

	)

264 
	#PKCS7_NOSMIMECAP
 0x200

	)

265 
	#PKCS7_NOOLDMIMETYPE
 0x400

	)

266 
	#PKCS7_CRLFEOL
 0x800

	)

267 
	#PKCS7_STREAM
 0x1000

	)

268 
	#PKCS7_NOCRL
 0x2000

	)

272 
	#SMIME_TEXT
 
PKCS7_TEXT


	)

273 
	#SMIME_NOCERTS
 
PKCS7_NOCERTS


	)

274 
	#SMIME_NOSIGS
 
PKCS7_NOSIGS


	)

275 
	#SMIME_NOCHAIN
 
PKCS7_NOCHAIN


	)

276 
	#SMIME_NOINTERN
 
PKCS7_NOINTERN


	)

277 
	#SMIME_NOVERIFY
 
PKCS7_NOVERIFY


	)

278 
	#SMIME_DETACHED
 
PKCS7_DETACHED


	)

279 
	#SMIME_BINARY
 
PKCS7_BINARY


	)

280 
	#SMIME_NOATTR
 
PKCS7_NOATTR


	)

282 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ISSUER_AND_SERIAL
)

284 #i‚de‡
SSLEAY_MACROS


285 
PKCS7_ISSUER_AND_SERIAL_dige°
(
PKCS7_ISSUER_AND_SERIAL
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

286 *
md
,*
Àn
);

287 #i‚de‡
OPENSSL_NO_FP_API


288 
PKCS7
 *
d2i_PKCS7_Â
(
FILE
 *
Â
,PKCS7 **
p7
);

289 
i2d_PKCS7_Â
(
FILE
 *
Â
,
PKCS7
 *
p7
);

291 
PKCS7
 *
PKCS7_dup
(PKCS7 *
p7
);

292 
PKCS7
 *
d2i_PKCS7_bio
(
BIO
 *
bp
,PKCS7 **
p7
);

293 
i2d_PKCS7_bio
(
BIO
 *
bp
,
PKCS7
 *
p7
);

296 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGNER_INFO
)

297 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_RECIP_INFO
)

298 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGNED
)

299 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENC_CONTENT
)

300 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENVELOPE
)

301 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGN_ENVELOPE
)

302 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_DIGEST
)

303 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENCRYPT
)

304 
DECLARE_ASN1_FUNCTIONS
(
PKCS7
)

306 
DECLARE_ASN1_ITEM
(
PKCS7_ATTR_SIGN
)

307 
DECLARE_ASN1_ITEM
(
PKCS7_ATTR_VERIFY
)

309 
DECLARE_ASN1_NDEF_FUNCTION
(
PKCS7
)

311 
PKCS7_˘æ
(
PKCS7
 *
p7
, 
cmd
, 
œrg
, *
∑rg
);

313 
PKCS7_£t_ty≥
(
PKCS7
 *
p7
, 
ty≥
);

314 
PKCS7_£t0_ty≥_Ÿhî
(
PKCS7
 *
p7
, 
ty≥
, 
ASN1_TYPE
 *
Ÿhî
);

315 
PKCS7_£t_c⁄ã¡
(
PKCS7
 *
p7
, PKCS7 *
p7_d©a
);

316 
PKCS7_SIGNER_INFO_£t
(
PKCS7_SIGNER_INFO
 *
p7i
, 
X509
 *
x509
, 
EVP_PKEY
 *
pkey
,

317 c⁄° 
EVP_MD
 *
dg°
);

318 
PKCS7_add_sig√r
(
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
p7i
);

319 
PKCS7_add_˚πifiˇã
(
PKCS7
 *
p7
, 
X509
 *
x509
);

320 
PKCS7_add_¸l
(
PKCS7
 *
p7
, 
X509_CRL
 *
x509
);

321 
PKCS7_c⁄ã¡_√w
(
PKCS7
 *
p7
, 
nid
);

322 
PKCS7_d©aVîify
(
X509_STORE
 *
˚π_°‹e
, 
X509_STORE_CTX
 *
˘x
,

323 
BIO
 *
bio
, 
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
);

324 
PKCS7_sig«tuªVîify
(
BIO
 *
bio
, 
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
,

325 
X509
 *
x509
);

327 
BIO
 *
PKCS7_d©aInô
(
PKCS7
 *
p7
, BIO *
bio
);

328 
PKCS7_d©aFöÆ
(
PKCS7
 *
p7
, 
BIO
 *
bio
);

329 
BIO
 *
PKCS7_d©aDecode
(
PKCS7
 *
p7
, 
EVP_PKEY
 *
pkey
, BIO *
ö_bio
, 
X509
 *
p˚π
);

332 
PKCS7_SIGNER_INFO
 *
PKCS7_add_sig«tuª
(
PKCS7
 *
p7
, 
X509
 *
x509
,

333 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
dg°
);

334 
X509
 *
PKCS7_˚π_‰om_sig√r_öfo
(
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
);

335 
PKCS7_£t_dige°
(
PKCS7
 *
p7
, c⁄° 
EVP_MD
 *
md
);

336 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
PKCS7_gë_sig√r_öfo
(
PKCS7
 *
p7
);

338 
PKCS7_RECIP_INFO
 *
PKCS7_add_ªcùõ¡
(
PKCS7
 *
p7
, 
X509
 *
x509
);

339 
PKCS7_add_ªcùõ¡_öfo
(
PKCS7
 *
p7
, 
PKCS7_RECIP_INFO
 *
ri
);

340 
PKCS7_RECIP_INFO_£t
(
PKCS7_RECIP_INFO
 *
p7i
, 
X509
 *
x509
);

341 
PKCS7_£t_cùhî
(
PKCS7
 *
p7
, c⁄° 
EVP_CIPHER
 *
cùhî
);

343 
PKCS7_ISSUER_AND_SERIAL
 *
PKCS7_gë_issuî_™d_£rül
(
PKCS7
 *
p7
, 
idx
);

344 
ASN1_OCTET_STRING
 *
PKCS7_dige°_‰om_©åibuãs
(
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
);

345 
PKCS7_add_sig√d_©åibuã
(
PKCS7_SIGNER_INFO
 *
p7si
,
nid
,
ty≥
,

346 *
d©a
);

347 
PKCS7_add_©åibuã
 (
PKCS7_SIGNER_INFO
 *
p7si
, 
nid
, 
©πy≥
,

348 *
vÆue
);

349 
ASN1_TYPE
 *
PKCS7_gë_©åibuã
(
PKCS7_SIGNER_INFO
 *
si
, 
nid
);

350 
ASN1_TYPE
 *
PKCS7_gë_sig√d_©åibuã
(
PKCS7_SIGNER_INFO
 *
si
, 
nid
);

351 
PKCS7_£t_sig√d_©åibuãs
(
PKCS7_SIGNER_INFO
 *
p7si
,

352 
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
);

353 
PKCS7_£t_©åibuãs
(
PKCS7_SIGNER_INFO
 *
p7si
,
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
);

356 
PKCS7
 *
PKCS7_sign
(
X509
 *
sign˚π
, 
EVP_PKEY
 *
pkey
, 
STACK_OF
(X509Ë*
˚πs
,

357 
BIO
 *
d©a
, 
Êags
);

358 
PKCS7_vîify
(
PKCS7
 *
p7
, 
STACK_OF
(
X509
Ë*
˚πs
, 
X509_STORE
 *
°‹e
,

359 
BIO
 *
öd©a
, BIO *
out
, 
Êags
);

360 
STACK_OF
(
X509
Ë*
PKCS7_gë0_sig√rs
(
PKCS7
 *
p7
, STACK_OF(X509Ë*
˚πs
, 
Êags
);

361 
PKCS7
 *
PKCS7_í¸y±
(
STACK_OF
(
X509
Ë*
˚πs
, 
BIO
 *
ö
, c⁄° 
EVP_CIPHER
 *
cùhî
,

362 
Êags
);

363 
PKCS7_de¸y±
(
PKCS7
 *
p7
, 
EVP_PKEY
 *
pkey
, 
X509
 *
˚π
, 
BIO
 *
d©a
, 
Êags
);

365 
PKCS7_add_©åib_smimeˇp
(
PKCS7_SIGNER_INFO
 *
si
,

366 
STACK_OF
(
X509_ALGOR
Ë*
ˇp
);

367 
STACK_OF
(
X509_ALGOR
Ë*
PKCS7_gë_smimeˇp
(
PKCS7_SIGNER_INFO
 *
si
);

368 
PKCS7_sim∂e_smimeˇp
(
STACK_OF
(
X509_ALGOR
Ë*
sk
, 
nid
, 
¨g
);

370 
SMIME_wrôe_PKCS7
(
BIO
 *
bio
, 
PKCS7
 *
p7
, BIO *
d©a
, 
Êags
);

371 
PKCS7
 *
SMIME_ªad_PKCS7
(
BIO
 *
bio
, BIO **
bc⁄t
);

372 
SMIME_¸lf_c›y
(
BIO
 *
ö
, BIO *
out
, 
Êags
);

373 
SMIME_ãxt
(
BIO
 *
ö
, BIO *
out
);

379 
ERR_lﬂd_PKCS7_°rögs
();

384 
	#PKCS7_F_B64_READ_PKCS7
 120

	)

385 
	#PKCS7_F_B64_WRITE_PKCS7
 121

	)

386 
	#PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP
 118

	)

387 
	#PKCS7_F_PKCS7_ADD_CERTIFICATE
 100

	)

388 
	#PKCS7_F_PKCS7_ADD_CRL
 101

	)

389 
	#PKCS7_F_PKCS7_ADD_RECIPIENT_INFO
 102

	)

390 
	#PKCS7_F_PKCS7_ADD_SIGNER
 103

	)

391 
	#PKCS7_F_PKCS7_BIO_ADD_DIGEST
 125

	)

392 
	#PKCS7_F_PKCS7_CTRL
 104

	)

393 
	#PKCS7_F_PKCS7_DATADECODE
 112

	)

394 
	#PKCS7_F_PKCS7_DATAFINAL
 128

	)

395 
	#PKCS7_F_PKCS7_DATAINIT
 105

	)

396 
	#PKCS7_F_PKCS7_DATASIGN
 106

	)

397 
	#PKCS7_F_PKCS7_DATAVERIFY
 107

	)

398 
	#PKCS7_F_PKCS7_DECRYPT
 114

	)

399 
	#PKCS7_F_PKCS7_ENCRYPT
 115

	)

400 
	#PKCS7_F_PKCS7_FIND_DIGEST
 127

	)

401 
	#PKCS7_F_PKCS7_GET0_SIGNERS
 124

	)

402 
	#PKCS7_F_PKCS7_SET_CIPHER
 108

	)

403 
	#PKCS7_F_PKCS7_SET_CONTENT
 109

	)

404 
	#PKCS7_F_PKCS7_SET_DIGEST
 126

	)

405 
	#PKCS7_F_PKCS7_SET_TYPE
 110

	)

406 
	#PKCS7_F_PKCS7_SIGN
 116

	)

407 
	#PKCS7_F_PKCS7_SIGNATUREVERIFY
 113

	)

408 
	#PKCS7_F_PKCS7_SIMPLE_SMIMECAP
 119

	)

409 
	#PKCS7_F_PKCS7_VERIFY
 117

	)

410 
	#PKCS7_F_SMIME_READ_PKCS7
 122

	)

411 
	#PKCS7_F_SMIME_TEXT
 123

	)

414 
	#PKCS7_R_CERTIFICATE_VERIFY_ERROR
 117

	)

415 
	#PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER
 144

	)

416 
	#PKCS7_R_CIPHER_NOT_INITIALIZED
 116

	)

417 
	#PKCS7_R_CONTENT_AND_DATA_PRESENT
 118

	)

418 
	#PKCS7_R_DECODE_ERROR
 130

	)

419 
	#PKCS7_R_DECRYPTED_KEY_IS_WRONG_LENGTH
 100

	)

420 
	#PKCS7_R_DECRYPT_ERROR
 119

	)

421 
	#PKCS7_R_DIGEST_FAILURE
 101

	)

422 
	#PKCS7_R_ERROR_ADDING_RECIPIENT
 120

	)

423 
	#PKCS7_R_ERROR_SETTING_CIPHER
 121

	)

424 
	#PKCS7_R_INVALID_MIME_TYPE
 131

	)

425 
	#PKCS7_R_INVALID_NULL_POINTER
 143

	)

426 
	#PKCS7_R_MIME_NO_CONTENT_TYPE
 132

	)

427 
	#PKCS7_R_MIME_PARSE_ERROR
 133

	)

428 
	#PKCS7_R_MIME_SIG_PARSE_ERROR
 134

	)

429 
	#PKCS7_R_MISSING_CERIPEND_INFO
 103

	)

430 
	#PKCS7_R_NO_CONTENT
 122

	)

431 
	#PKCS7_R_NO_CONTENT_TYPE
 135

	)

432 
	#PKCS7_R_NO_MULTIPART_BODY_FAILURE
 136

	)

433 
	#PKCS7_R_NO_MULTIPART_BOUNDARY
 137

	)

434 
	#PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE
 115

	)

435 
	#PKCS7_R_NO_RECIPIENT_MATCHES_KEY
 146

	)

436 
	#PKCS7_R_NO_SIGNATURES_ON_DATA
 123

	)

437 
	#PKCS7_R_NO_SIGNERS
 142

	)

438 
	#PKCS7_R_NO_SIG_CONTENT_TYPE
 138

	)

439 
	#PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE
 104

	)

440 
	#PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR
 124

	)

441 
	#PKCS7_R_PKCS7_DATAFINAL
 126

	)

442 
	#PKCS7_R_PKCS7_DATAFINAL_ERROR
 125

	)

443 
	#PKCS7_R_PKCS7_DATASIGN
 145

	)

444 
	#PKCS7_R_PKCS7_PARSE_ERROR
 139

	)

445 
	#PKCS7_R_PKCS7_SIG_PARSE_ERROR
 140

	)

446 
	#PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE
 127

	)

447 
	#PKCS7_R_SIGNATURE_FAILURE
 105

	)

448 
	#PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND
 128

	)

449 
	#PKCS7_R_SIG_INVALID_MIME_TYPE
 141

	)

450 
	#PKCS7_R_SMIME_TEXT_ERROR
 129

	)

451 
	#PKCS7_R_UNABLE_TO_FIND_CERTIFICATE
 106

	)

452 
	#PKCS7_R_UNABLE_TO_FIND_MEM_BIO
 107

	)

453 
	#PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST
 108

	)

454 
	#PKCS7_R_UNKNOWN_DIGEST_TYPE
 109

	)

455 
	#PKCS7_R_UNKNOWN_OPERATION
 110

	)

456 
	#PKCS7_R_UNSUPPORTED_CIPHER_TYPE
 111

	)

457 
	#PKCS7_R_UNSUPPORTED_CONTENT_TYPE
 112

	)

458 
	#PKCS7_R_WRONG_CONTENT_TYPE
 113

	)

459 
	#PKCS7_R_WRONG_PKCS7_TYPE
 114

	)

461 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/rsa.h

59 #i‚de‡
HEADER_RSA_H


60 
	#HEADER_RSA_H


	)

62 
	~<›ís¶/a¢1.h
>

64 #i‚de‡
OPENSSL_NO_BIO


65 
	~<›ís¶/bio.h
>

67 
	~<›ís¶/¸y±o.h
>

68 
	~<›ís¶/os¶_typ.h
>

69 #i‚de‡
OPENSSL_NO_DEPRECATED


70 
	~<›ís¶/bn.h
>

73 #ifde‡
OPENSSL_NO_RSA


74 #îr‹ 
RSA
 
is
 
dißbÀd
.

77 #ifde‡ 
__˝lu•lus


85 
	srß_mëh_°


87 c⁄° *
«me
;

88 (*
rß_pub_íc
)(
Êí
,c⁄° *
‰om
,

89 *
to
,

90 
RSA
 *
rß
,
∑ddög
);

91 (*
rß_pub_dec
)(
Êí
,c⁄° *
‰om
,

92 *
to
,

93 
RSA
 *
rß
,
∑ddög
);

94 (*
rß_¥iv_íc
)(
Êí
,c⁄° *
‰om
,

95 *
to
,

96 
RSA
 *
rß
,
∑ddög
);

97 (*
rß_¥iv_dec
)(
Êí
,c⁄° *
‰om
,

98 *
to
,

99 
RSA
 *
rß
,
∑ddög
);

100 (*
rß_mod_exp
)(
BIGNUM
 *
r0
,c⁄° BIGNUM *
I
,
RSA
 *
rß
,
BN_CTX
 *
˘x
);

101 (*
bn_mod_exp
)(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

102 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
,

103 
BN_MONT_CTX
 *
m_˘x
);

104 (*
öô
)(
RSA
 *
rß
);

105 (*
föish
)(
RSA
 *
rß
);

106 
Êags
;

107 *
≠p_d©a
;

115 (*
rß_sign
)(
ty≥
,

116 c⁄° *
m
, 
m_Àngth
,

117 *
sigªt
, *
sigÀn
, c⁄° 
RSA
 *
rß
);

118 (*
rß_vîify
)(
dty≥
,

119 c⁄° *
m
, 
m_Àngth
,

120 *
sigbuf
, 
sigÀn
, c⁄° 
RSA
 *
rß
);

125 (*
rß_keygí
)(
RSA
 *
rß
, 
bôs
, 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
);

128 
	srß_°


132 
∑d
;

133 
vîsi⁄
;

134 c⁄° 
RSA_METHOD
 *
mëh
;

136 
ENGINE
 *
ígöe
;

137 
BIGNUM
 *
n
;

138 
BIGNUM
 *
e
;

139 
BIGNUM
 *
d
;

140 
BIGNUM
 *
p
;

141 
BIGNUM
 *
q
;

142 
BIGNUM
 *
dmp1
;

143 
BIGNUM
 *
dmq1
;

144 
BIGNUM
 *
iqmp
;

146 
CRYPTO_EX_DATA
 
ex_d©a
;

147 
ª„ªn˚s
;

148 
Êags
;

151 
BN_MONT_CTX
 *
_mëhod_mod_n
;

152 
BN_MONT_CTX
 *
_mëhod_mod_p
;

153 
BN_MONT_CTX
 *
_mëhod_mod_q
;

157 *
bignum_d©a
;

158 
BN_BLINDING
 *
blödög
;

159 
BN_BLINDING
 *
mt_blödög
;

162 
	#OPENSSL_RSA_MAX_MODULUS_BITS
 16384

	)

164 
	#OPENSSL_RSA_SMALL_MODULUS_BITS
 3072

	)

165 
	#OPENSSL_RSA_MAX_PUBEXP_BITS
 64

	)

167 
	#RSA_3
 0x3L

	)

168 
	#RSA_F4
 0x10001L

	)

170 
	#RSA_METHOD_FLAG_NO_CHECK
 0x0001

	)

172 
	#RSA_FLAG_CACHE_PUBLIC
 0x0002

	)

173 
	#RSA_FLAG_CACHE_PRIVATE
 0x0004

	)

174 
	#RSA_FLAG_BLINDING
 0x0008

	)

175 
	#RSA_FLAG_THREAD_SAFE
 0x0010

	)

181 
	#RSA_FLAG_EXT_PKEY
 0x0020

	)

185 
	#RSA_FLAG_SIGN_VER
 0x0040

	)

187 
	#RSA_FLAG_NO_BLINDING
 0x0080

	)

192 
	#RSA_FLAG_NO_CONSTTIME
 0x0100

	)

202 
	#RSA_FLAG_NO_EXP_CONSTTIME
 
RSA_FLAG_NO_CONSTTIME


	)

204 
	#RSA_PKCS1_PADDING
 1

	)

205 
	#RSA_SSLV23_PADDING
 2

	)

206 
	#RSA_NO_PADDING
 3

	)

207 
	#RSA_PKCS1_OAEP_PADDING
 4

	)

208 
	#RSA_X931_PADDING
 5

	)

210 
	#RSA_PKCS1_PADDING_SIZE
 11

	)

212 
	#RSA_£t_≠p_d©a
(
s
,
¨g
Ë
	`RSA_£t_ex_d©a
(s,0,¨g)

	)

213 
	#RSA_gë_≠p_d©a
(
s
Ë
	`RSA_gë_ex_d©a
(s,0)

	)

215 
RSA
 * 
RSA_√w
();

216 
RSA
 * 
RSA_√w_mëhod
(
ENGINE
 *
ígöe
);

217 
RSA_size
(c⁄° 
RSA
 *);

220 #i‚de‡
OPENSSL_NO_DEPRECATED


221 
RSA
 * 
RSA_gíî©e_key
(
bôs
, 
e
,

222 (*
ˇŒback
)(,,*),*
cb_¨g
);

226 
RSA_gíî©e_key_ex
(
RSA
 *
rß
, 
bôs
, 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
);

228 
RSA_check_key
(c⁄° 
RSA
 *);

230 
RSA_public_í¸y±
(
Êí
, c⁄° *
‰om
,

231 *
to
, 
RSA
 *
rß
,
∑ddög
);

232 
RSA_¥iv©e_í¸y±
(
Êí
, c⁄° *
‰om
,

233 *
to
, 
RSA
 *
rß
,
∑ddög
);

234 
RSA_public_de¸y±
(
Êí
, c⁄° *
‰om
,

235 *
to
, 
RSA
 *
rß
,
∑ddög
);

236 
RSA_¥iv©e_de¸y±
(
Êí
, c⁄° *
‰om
,

237 *
to
, 
RSA
 *
rß
,
∑ddög
);

238 
RSA_‰ì
 (
RSA
 *
r
);

240 
RSA_up_ªf
(
RSA
 *
r
);

242 
RSA_Êags
(c⁄° 
RSA
 *
r
);

244 
RSA_£t_deÁu…_mëhod
(c⁄° 
RSA_METHOD
 *
mëh
);

245 c⁄° 
RSA_METHOD
 *
RSA_gë_deÁu…_mëhod
();

246 c⁄° 
RSA_METHOD
 *
RSA_gë_mëhod
(c⁄° 
RSA
 *
rß
);

247 
RSA_£t_mëhod
(
RSA
 *
rß
, c⁄° 
RSA_METHOD
 *
mëh
);

250 
RSA_mem‹y_lock
(
RSA
 *
r
);

253 c⁄° 
RSA_METHOD
 *
RSA_PKCS1_SSLóy
();

255 c⁄° 
RSA_METHOD
 *
RSA_nuŒ_mëhod
();

257 
DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
RSA
, 
RSAPublicKey
)

258 
DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
RSA
, 
RSAPriv©eKey
)

260 #i‚de‡
OPENSSL_NO_FP_API


261 
RSA_¥öt_Â
(
FILE
 *
Â
, c⁄° 
RSA
 *
r
,
off£t
);

264 #i‚de‡
OPENSSL_NO_BIO


265 
RSA_¥öt
(
BIO
 *
bp
, c⁄° 
RSA
 *
r
,
off£t
);

268 
i2d_RSA_NET
(c⁄° 
RSA
 *
a
, **
µ
,

269 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
, 
vîify
),

270 
sgckey
);

271 
RSA
 *
d2i_RSA_NET
(RSA **
a
, c⁄° **
µ
, 
Àngth
,

272 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
, 
vîify
),

273 
sgckey
);

275 
i2d_Nësˇ≥_RSA
(c⁄° 
RSA
 *
a
, **
µ
,

276 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
,

277 
vîify
));

278 
RSA
 *
d2i_Nësˇ≥_RSA
(RSA **
a
, c⁄° **
µ
, 
Àngth
,

279 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
,

280 
vîify
));

284 
RSA_sign
(
ty≥
, c⁄° *
m
, 
m_Àngth
,

285 *
sigªt
, *
sigÀn
, 
RSA
 *
rß
);

286 
RSA_vîify
(
ty≥
, c⁄° *
m
, 
m_Àngth
,

287 *
sigbuf
, 
sigÀn
, 
RSA
 *
rß
);

291 
RSA_sign_ASN1_OCTET_STRING
(
ty≥
,

292 c⁄° *
m
, 
m_Àngth
,

293 *
sigªt
, *
sigÀn
, 
RSA
 *
rß
);

294 
RSA_vîify_ASN1_OCTET_STRING
(
ty≥
,

295 c⁄° *
m
, 
m_Àngth
,

296 *
sigbuf
, 
sigÀn
, 
RSA
 *
rß
);

298 
RSA_blödög_⁄
(
RSA
 *
rß
, 
BN_CTX
 *
˘x
);

299 
RSA_blödög_off
(
RSA
 *
rß
);

300 
BN_BLINDING
 *
RSA_£tup_blödög
(
RSA
 *
rß
, 
BN_CTX
 *
˘x
);

302 
RSA_∑ddög_add_PKCS1_ty≥_1
(*
to
,
éí
,

303 c⁄° *
f
,
Ê
);

304 
RSA_∑ddög_check_PKCS1_ty≥_1
(*
to
,
éí
,

305 c⁄° *
f
,
Ê
,
rß_Àn
);

306 
RSA_∑ddög_add_PKCS1_ty≥_2
(*
to
,
éí
,

307 c⁄° *
f
,
Ê
);

308 
RSA_∑ddög_check_PKCS1_ty≥_2
(*
to
,
éí
,

309 c⁄° *
f
,
Ê
,
rß_Àn
);

310 
PKCS1_MGF1
(*
mask
, 
Àn
,

311 c⁄° *
£ed
, 
£edÀn
, c⁄° 
EVP_MD
 *
dg°
);

312 
RSA_∑ddög_add_PKCS1_OAEP
(*
to
,
éí
,

313 c⁄° *
f
,
Ê
,

314 c⁄° *
p
,
∂
);

315 
RSA_∑ddög_check_PKCS1_OAEP
(*
to
,
éí
,

316 c⁄° *
f
,
Ê
,
rß_Àn
,

317 c⁄° *
p
,
∂
);

318 
RSA_∑ddög_add_SSLv23
(*
to
,
éí
,

319 c⁄° *
f
,
Ê
);

320 
RSA_∑ddög_check_SSLv23
(*
to
,
éí
,

321 c⁄° *
f
,
Ê
,
rß_Àn
);

322 
RSA_∑ddög_add_n⁄e
(*
to
,
éí
,

323 c⁄° *
f
,
Ê
);

324 
RSA_∑ddög_check_n⁄e
(*
to
,
éí
,

325 c⁄° *
f
,
Ê
,
rß_Àn
);

326 
RSA_∑ddög_add_X931
(*
to
,
éí
,

327 c⁄° *
f
,
Ê
);

328 
RSA_∑ddög_check_X931
(*
to
,
éí
,

329 c⁄° *
f
,
Ê
,
rß_Àn
);

330 
RSA_X931_hash_id
(
nid
);

332 
RSA_vîify_PKCS1_PSS
(
RSA
 *
rß
, c⁄° *
mHash
,

333 c⁄° 
EVP_MD
 *
Hash
, c⁄° *
EM
, 
sLí
);

334 
RSA_∑ddög_add_PKCS1_PSS
(
RSA
 *
rß
, *
EM
,

335 c⁄° *
mHash
,

336 c⁄° 
EVP_MD
 *
Hash
, 
sLí
);

338 
RSA_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

339 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

340 
RSA_£t_ex_d©a
(
RSA
 *
r
,
idx
,*
¨g
);

341 *
RSA_gë_ex_d©a
(c⁄° 
RSA
 *
r
, 
idx
);

343 
RSA
 *
RSAPublicKey_dup
(RSA *
rß
);

344 
RSA
 *
RSAPriv©eKey_dup
(RSA *
rß
);

350 
ERR_lﬂd_RSA_°rögs
();

355 
	#RSA_F_MEMORY_LOCK
 100

	)

356 
	#RSA_F_RSA_BUILTIN_KEYGEN
 129

	)

357 
	#RSA_F_RSA_CHECK_KEY
 123

	)

358 
	#RSA_F_RSA_EAY_PRIVATE_DECRYPT
 101

	)

359 
	#RSA_F_RSA_EAY_PRIVATE_ENCRYPT
 102

	)

360 
	#RSA_F_RSA_EAY_PUBLIC_DECRYPT
 103

	)

361 
	#RSA_F_RSA_EAY_PUBLIC_ENCRYPT
 104

	)

362 
	#RSA_F_RSA_GENERATE_KEY
 105

	)

363 
	#RSA_F_RSA_MEMORY_LOCK
 130

	)

364 
	#RSA_F_RSA_NEW_METHOD
 106

	)

365 
	#RSA_F_RSA_NULL
 124

	)

366 
	#RSA_F_RSA_NULL_MOD_EXP
 131

	)

367 
	#RSA_F_RSA_NULL_PRIVATE_DECRYPT
 132

	)

368 
	#RSA_F_RSA_NULL_PRIVATE_ENCRYPT
 133

	)

369 
	#RSA_F_RSA_NULL_PUBLIC_DECRYPT
 134

	)

370 
	#RSA_F_RSA_NULL_PUBLIC_ENCRYPT
 135

	)

371 
	#RSA_F_RSA_PADDING_ADD_NONE
 107

	)

372 
	#RSA_F_RSA_PADDING_ADD_PKCS1_OAEP
 121

	)

373 
	#RSA_F_RSA_PADDING_ADD_PKCS1_PSS
 125

	)

374 
	#RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1
 108

	)

375 
	#RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2
 109

	)

376 
	#RSA_F_RSA_PADDING_ADD_SSLV23
 110

	)

377 
	#RSA_F_RSA_PADDING_ADD_X931
 127

	)

378 
	#RSA_F_RSA_PADDING_CHECK_NONE
 111

	)

379 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP
 122

	)

380 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1
 112

	)

381 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2
 113

	)

382 
	#RSA_F_RSA_PADDING_CHECK_SSLV23
 114

	)

383 
	#RSA_F_RSA_PADDING_CHECK_X931
 128

	)

384 
	#RSA_F_RSA_PRINT
 115

	)

385 
	#RSA_F_RSA_PRINT_FP
 116

	)

386 
	#RSA_F_RSA_SETUP_BLINDING
 136

	)

387 
	#RSA_F_RSA_SIGN
 117

	)

388 
	#RSA_F_RSA_SIGN_ASN1_OCTET_STRING
 118

	)

389 
	#RSA_F_RSA_VERIFY
 119

	)

390 
	#RSA_F_RSA_VERIFY_ASN1_OCTET_STRING
 120

	)

391 
	#RSA_F_RSA_VERIFY_PKCS1_PSS
 126

	)

394 
	#RSA_R_ALGORITHM_MISMATCH
 100

	)

395 
	#RSA_R_BAD_E_VALUE
 101

	)

396 
	#RSA_R_BAD_FIXED_HEADER_DECRYPT
 102

	)

397 
	#RSA_R_BAD_PAD_BYTE_COUNT
 103

	)

398 
	#RSA_R_BAD_SIGNATURE
 104

	)

399 
	#RSA_R_BLOCK_TYPE_IS_NOT_01
 106

	)

400 
	#RSA_R_BLOCK_TYPE_IS_NOT_02
 107

	)

401 
	#RSA_R_DATA_GREATER_THAN_MOD_LEN
 108

	)

402 
	#RSA_R_DATA_TOO_LARGE
 109

	)

403 
	#RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE
 110

	)

404 
	#RSA_R_DATA_TOO_LARGE_FOR_MODULUS
 132

	)

405 
	#RSA_R_DATA_TOO_SMALL
 111

	)

406 
	#RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE
 122

	)

407 
	#RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY
 112

	)

408 
	#RSA_R_DMP1_NOT_CONGRUENT_TO_D
 124

	)

409 
	#RSA_R_DMQ1_NOT_CONGRUENT_TO_D
 125

	)

410 
	#RSA_R_D_E_NOT_CONGRUENT_TO_1
 123

	)

411 
	#RSA_R_FIRST_OCTET_INVALID
 133

	)

412 
	#RSA_R_INVALID_HEADER
 137

	)

413 
	#RSA_R_INVALID_MESSAGE_LENGTH
 131

	)

414 
	#RSA_R_INVALID_PADDING
 138

	)

415 
	#RSA_R_INVALID_TRAILER
 139

	)

416 
	#RSA_R_IQMP_NOT_INVERSE_OF_Q
 126

	)

417 
	#RSA_R_KEY_SIZE_TOO_SMALL
 120

	)

418 
	#RSA_R_LAST_OCTET_INVALID
 134

	)

419 
	#RSA_R_MODULUS_TOO_LARGE
 105

	)

420 
	#RSA_R_NO_PUBLIC_EXPONENT
 140

	)

421 
	#RSA_R_NULL_BEFORE_BLOCK_MISSING
 113

	)

422 
	#RSA_R_N_DOES_NOT_EQUAL_P_Q
 127

	)

423 
	#RSA_R_OAEP_DECODING_ERROR
 121

	)

424 
	#RSA_R_PADDING_CHECK_FAILED
 114

	)

425 
	#RSA_R_PKCS1_PADDING_TOO_SHORT
 105

	)

426 
	#RSA_R_P_NOT_PRIME
 128

	)

427 
	#RSA_R_Q_NOT_PRIME
 129

	)

428 
	#RSA_R_RSA_OPERATIONS_NOT_SUPPORTED
 130

	)

429 
	#RSA_R_SLEN_CHECK_FAILED
 136

	)

430 
	#RSA_R_SLEN_RECOVERY_FAILED
 135

	)

431 
	#RSA_R_SSLV3_ROLLBACK_ATTACK
 115

	)

432 
	#RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD
 116

	)

433 
	#RSA_R_UNKNOWN_ALGORITHM_TYPE
 117

	)

434 
	#RSA_R_UNKNOWN_PADDING_TYPE
 118

	)

435 
	#RSA_R_WRONG_SIGNATURE_LENGTH
 119

	)

437 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/safestack.h

55 #i‚de‡
HEADER_SAFESTACK_H


56 
	#HEADER_SAFESTACK_H


	)

58 
	~<›ís¶/°ack.h
>

60 (*
	t›ís¶_Âå
)();

61 
	#›ís¶_fˇ°
(
f
Ë((
›ís¶_Âå
)f)

	)

63 #ifde‡
DEBUG_SAFESTACK


65 
	#STACK_OF
(
ty≥
Ë
°ack_°_
##
	)
type

66 
	#PREDECLARE_STACK_OF
(
ty≥
Ë
	`STACK_OF
—y≥);

	)

68 
	#DECLARE_STACK_OF
(
ty≥
) \

69 
	`STACK_OF
(
ty≥
) \

71 
STACK
 
°ack
; \

72 
	}
};

	)

74 
	#IMPLEMENT_STACK_OF
(
ty≥
Ë

	)

78 
	#SKM_sk_√w
(
ty≥
, 
cmp
) \

79 ((
	`STACK_OF
(
ty≥
Ë* (*)((*)(c⁄°Åy≥ * c⁄° *, c⁄°Åy≥ * c⁄° *)))
	`›ís¶_fˇ°
(
sk_√w
))(
cmp
)

	)

80 
	#SKM_sk_√w_nuŒ
(
ty≥
) \

81 ((
	`STACK_OF
(
ty≥
Ë* (*)())
	`›ís¶_fˇ°
(
sk_√w_nuŒ
))()

	)

82 
	#SKM_sk_‰ì
(
ty≥
, 
°
) \

83 (((*)(
	`STACK_OF
(
ty≥
Ë*))
	`›ís¶_fˇ°
(
sk_‰ì
))(
°
)

	)

84 
	#SKM_sk_num
(
ty≥
, 
°
) \

85 (((*)(c⁄° 
	`STACK_OF
(
ty≥
Ë*))
	`›ís¶_fˇ°
(
sk_num
))(
°
)

	)

86 
	#SKM_sk_vÆue
(
ty≥
, 
°
,
i
) \

87 ((
ty≥
 * (*)(c⁄° 
	`STACK_OF
—y≥Ë*, ))
	`›ís¶_fˇ°
(
sk_vÆue
))(
°
, 
i
)

	)

88 
	#SKM_sk_£t
(
ty≥
, 
°
,
i
,
vÆ
) \

89 ((
ty≥
 * (*)(
	`STACK_OF
—y≥Ë*, ,Åy≥ *))
	`›ís¶_fˇ°
(
sk_£t
))(
°
, 
i
, 
vÆ
)

	)

90 
	#SKM_sk_zîo
(
ty≥
, 
°
) \

91 (((*)(
	`STACK_OF
(
ty≥
Ë*))
	`›ís¶_fˇ°
(
sk_zîo
))(
°
)

	)

92 
	#SKM_sk_push
(
ty≥
, 
°
,
vÆ
) \

93 (((*)(
	`STACK_OF
(
ty≥
Ë*,Åy≥ *))
	`›ís¶_fˇ°
(
sk_push
))(
°
, 
vÆ
)

	)

94 
	#SKM_sk_unshi·
(
ty≥
, 
°
,
vÆ
) \

95 (((*)(
	`STACK_OF
(
ty≥
Ë*,Åy≥ *))
	`›ís¶_fˇ°
(
sk_unshi·
))(
°
, 
vÆ
)

	)

96 
	#SKM_sk_föd
(
ty≥
, 
°
,
vÆ
) \

97 (((*)(
	`STACK_OF
(
ty≥
Ë*,Åy≥ *))
	`›ís¶_fˇ°
(
sk_föd
))(
°
, 
vÆ
)

	)

98 
	#SKM_sk_dñëe
(
ty≥
, 
°
,
i
) \

99 ((
ty≥
 * (*)(
	`STACK_OF
—y≥Ë*, ))
	`›ís¶_fˇ°
(
sk_dñëe
))(
°
, 
i
)

	)

100 
	#SKM_sk_dñëe_±r
(
ty≥
, 
°
,
±r
) \

101 ((
ty≥
 * (*)(
	`STACK_OF
—y≥Ë*,Åy≥ *))
	`›ís¶_fˇ°
(
sk_dñëe_±r
))(
°
, 
±r
)

	)

102 
	#SKM_sk_ö£π
(
ty≥
, 
°
,
vÆ
,
i
) \

103 (((*)(
	`STACK_OF
(
ty≥
Ë*,Åy≥ *, ))
	`›ís¶_fˇ°
(
sk_ö£π
))(
°
, 
vÆ
, 
i
)

	)

104 
	#SKM_sk_£t_cmp_func
(
ty≥
, 
°
,
cmp
) \

105 (((*(*)(
	`STACK_OF
(
ty≥
) *, (*)(constÅype * const *, constÅype * const *))) \

106 (c⁄° 
ty≥
 * c⁄° *, c⁄°Åy≥ * c⁄° *))
	`›ís¶_fˇ°
(
sk_£t_cmp_func
))\

107 (
°
, 
cmp
)

	)

108 
	#SKM_sk_dup
(
ty≥
, 
°
) \

109 ((
	`STACK_OF
(
ty≥
Ë*(*)(STACK_OF—y≥Ë*))
	`›ís¶_fˇ°
(
sk_dup
))(
°
)

	)

110 
	#SKM_sk_p›_‰ì
(
ty≥
, 
°
,
‰ì_func
) \

111 (((*)(
	`STACK_OF
(
ty≥
Ë*, (*)—y≥ *)))
	`›ís¶_fˇ°
(
sk_p›_‰ì
))\

112 (
°
, 
‰ì_func
)

	)

113 
	#SKM_sk_shi·
(
ty≥
, 
°
) \

114 ((
ty≥
 * (*)(
	`STACK_OF
—y≥Ë*))
	`›ís¶_fˇ°
(
sk_shi·
))(
°
)

	)

115 
	#SKM_sk_p›
(
ty≥
, 
°
) \

116 ((
ty≥
 * (*)(
	`STACK_OF
—y≥Ë*))
	`›ís¶_fˇ°
(
sk_p›
))(
°
)

	)

117 
	#SKM_sk_s‹t
(
ty≥
, 
°
) \

118 (((*)(
	`STACK_OF
(
ty≥
Ë*))
	`›ís¶_fˇ°
(
sk_s‹t
))(
°
)

	)

119 
	#SKM_sk_is_s‹ãd
(
ty≥
, 
°
) \

120 (((*)(c⁄° 
	`STACK_OF
(
ty≥
Ë*))
	`›ís¶_fˇ°
(
sk_is_s‹ãd
))(
°
)

	)

122 
	#SKM_ASN1_SET_OF_d2i
(
ty≥
, 
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

123 ((
	`STACK_OF
(
ty≥
) * (*) (STACK_OF(type) **,const **, , \

124 
ty≥
 *(*)(type **, const **,), \

125 (*)(
ty≥
 *), ,)Ë
	`›ís¶_fˇ°
(
d2i_ASN1_SET
)) \

126 (
°
,
µ
,
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
,
ex_˛ass
)

	)

127 
	#SKM_ASN1_SET_OF_i2d
(
ty≥
, 
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

128 (((*)(
	`STACK_OF
(
ty≥
) *,**, \

129 (*)(
ty≥
 *,**), , , )Ë
	`›ís¶_fˇ°
(
i2d_ASN1_SET
)) \

130 (
°
,
µ
,
i2d_func
,
ex_èg
,
ex_˛ass
,
is_£t
)

	)

132 
	#SKM_ASN1_£q_∑ck
(
ty≥
, 
°
, 
i2d_func
, 
buf
, 
Àn
) \

133 ((*(*)(
	`STACK_OF
(
ty≥
) *, \

134 (*)(
ty≥
 *,**), **,*)Ë
	`›ís¶_fˇ°
(
ASN1_£q_∑ck
)) \

135 (
°
, 
i2d_func
, 
buf
, 
Àn
)

	)

136 
	#SKM_ASN1_£q_u≈ack
(
ty≥
, 
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

137 ((
	`STACK_OF
(
ty≥
) * (*)(const *,, \

138 
ty≥
 *(*)(type **,const **, ), \

139 (*)(
ty≥
 *)))
	`›ís¶_fˇ°
(
ASN1_£q_u≈ack
)) \

140 (
buf
,
Àn
,
d2i_func
, 
‰ì_func
)

	)

142 
	#SKM_PKCS12_de¸y±_d2i
(
ty≥
, 
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

143 ((
	`STACK_OF
(
ty≥
Ë* (*)(
X509_ALGOR
 *, \

144 
ty≥
 *(*)(type **, const **, ), \

145 (*)(
ty≥
 *), \

147 
ASN1_STRING
 *, ))
PKCS12_de¸y±_d2i
) \

148 (
Æg‹
,
d2i_func
,
‰ì_func
,
∑ss
,
∑s¶í
,
o˘
,
£q
)

	)

152 
	#STACK_OF
(
ty≥
Ë
STACK


	)

153 
	#PREDECLARE_STACK_OF
(
ty≥
Ë

	)

154 
	#DECLARE_STACK_OF
(
ty≥
Ë

	)

155 
	#IMPLEMENT_STACK_OF
(
ty≥
Ë

	)

157 
	#SKM_sk_√w
(
ty≥
, 
cmp
) \

158 
	`sk_√w
(((*)(c⁄° * c⁄° *, c⁄° * c⁄° *))(
cmp
))

	)

159 
	#SKM_sk_√w_nuŒ
(
ty≥
) \

160 
	`sk_√w_nuŒ
()

	)

161 
	#SKM_sk_‰ì
(
ty≥
, 
°
) \

162 
	`sk_‰ì
(
°
)

	)

163 
	#SKM_sk_num
(
ty≥
, 
°
) \

164 
	`sk_num
(
°
)

	)

165 
	#SKM_sk_vÆue
(
ty≥
, 
°
,
i
) \

166 ((
ty≥
 *)
	`sk_vÆue
(
°
, 
i
))

	)

167 
	#SKM_sk_£t
(
ty≥
, 
°
,
i
,
vÆ
) \

168 ((
ty≥
 *)
	`sk_£t
(
°
, 
i
,(*)
vÆ
))

	)

169 
	#SKM_sk_zîo
(
ty≥
, 
°
) \

170 
	`sk_zîo
(
°
)

	)

171 
	#SKM_sk_push
(
ty≥
, 
°
,
vÆ
) \

172 
	`sk_push
(
°
, (*)
vÆ
)

	)

173 
	#SKM_sk_unshi·
(
ty≥
, 
°
,
vÆ
) \

174 
	`sk_unshi·
(
°
, 
vÆ
)

	)

175 
	#SKM_sk_föd
(
ty≥
, 
°
,
vÆ
) \

176 
	`sk_föd
(
°
, (*)
vÆ
)

	)

177 
	#SKM_sk_dñëe
(
ty≥
, 
°
,
i
) \

178 ((
ty≥
 *)
	`sk_dñëe
(
°
, 
i
))

	)

179 
	#SKM_sk_dñëe_±r
(
ty≥
, 
°
,
±r
) \

180 ((
ty≥
 *)
	`sk_dñëe_±r
(
°
,(*)
±r
))

	)

181 
	#SKM_sk_ö£π
(
ty≥
, 
°
,
vÆ
,
i
) \

182 
	`sk_ö£π
(
°
, (*)
vÆ
, 
i
)

	)

183 
	#SKM_sk_£t_cmp_func
(
ty≥
, 
°
,
cmp
) \

184 (((*)(c⁄° 
ty≥
 * const *,constÅype * const *)) \

185 
	`sk_£t_cmp_func
(
°
, ((*)(c⁄° * c⁄° *, c⁄° * c⁄° *))(
cmp
)))

	)

186 
	#SKM_sk_dup
(
ty≥
, 
°
) \

187 
	`sk_dup
(
°
)

	)

188 
	#SKM_sk_p›_‰ì
(
ty≥
, 
°
,
‰ì_func
) \

189 
	`sk_p›_‰ì
(
°
, ((*)(*))
‰ì_func
)

	)

190 
	#SKM_sk_shi·
(
ty≥
, 
°
) \

191 ((
ty≥
 *)
	`sk_shi·
(
°
))

	)

192 
	#SKM_sk_p›
(
ty≥
, 
°
) \

193 ((
ty≥
 *)
	`sk_p›
(
°
))

	)

194 
	#SKM_sk_s‹t
(
ty≥
, 
°
) \

195 
	`sk_s‹t
(
°
)

	)

196 
	#SKM_sk_is_s‹ãd
(
ty≥
, 
°
) \

197 
	`sk_is_s‹ãd
(
°
)

	)

199 
	#SKM_ASN1_SET_OF_d2i
(
ty≥
, 
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

200 
	`d2i_ASN1_SET
(
°
,
µ
,
Àngth
, (*(*)(** ,c⁄° ** ,))
d2i_func
, ((*)(*))
‰ì_func
, 
ex_èg
,
ex_˛ass
)

	)

201 
	#SKM_ASN1_SET_OF_i2d
(
ty≥
, 
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

202 
	`i2d_ASN1_SET
(
°
,
µ
,((*)(*, **))
i2d_func
,
ex_èg
,
ex_˛ass
,
is_£t
)

	)

204 
	#SKM_ASN1_£q_∑ck
(
ty≥
, 
°
, 
i2d_func
, 
buf
, 
Àn
) \

205 
	`ASN1_£q_∑ck
(
°
, ((*)(*, **))
i2d_func
, 
buf
, 
Àn
)

	)

206 
	#SKM_ASN1_£q_u≈ack
(
ty≥
, 
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

207 
	`ASN1_£q_u≈ack
(
buf
,
Àn
,(*(*)(**,c⁄° **,))
d2i_func
, ((*)(*))
‰ì_func
)

	)

209 
	#SKM_PKCS12_de¸y±_d2i
(
ty≥
, 
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

210 ((
STACK
 *)
	`PKCS12_de¸y±_d2i
(
Æg‹
,(*(*)())
d2i_func
, ((*)(*))
‰ì_func
,
∑ss
,
∑s¶í
,
o˘
,
£q
))

	)

215 
	#sk_ACCESS_DESCRIPTION_√w
(
°
Ë
	`SKM_sk_√w
(
ACCESS_DESCRIPTION
, (°))

	)

216 
	#sk_ACCESS_DESCRIPTION_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ACCESS_DESCRIPTION
)

	)

217 
	#sk_ACCESS_DESCRIPTION_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ACCESS_DESCRIPTION
, (°))

	)

218 
	#sk_ACCESS_DESCRIPTION_num
(
°
Ë
	`SKM_sk_num
(
ACCESS_DESCRIPTION
, (°))

	)

219 
	#sk_ACCESS_DESCRIPTION_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ACCESS_DESCRIPTION
, (°), (i))

	)

220 
	#sk_ACCESS_DESCRIPTION_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ACCESS_DESCRIPTION
, (°), (i), (vÆ))

	)

221 
	#sk_ACCESS_DESCRIPTION_zîo
(
°
Ë
	`SKM_sk_zîo
(
ACCESS_DESCRIPTION
, (°))

	)

222 
	#sk_ACCESS_DESCRIPTION_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

223 
	#sk_ACCESS_DESCRIPTION_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

224 
	#sk_ACCESS_DESCRIPTION_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

225 
	#sk_ACCESS_DESCRIPTION_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

226 
	#sk_ACCESS_DESCRIPTION_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ACCESS_DESCRIPTION
, (°), (i))

	)

227 
	#sk_ACCESS_DESCRIPTION_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ACCESS_DESCRIPTION
, (°), (±r))

	)

228 
	#sk_ACCESS_DESCRIPTION_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ACCESS_DESCRIPTION
, (°), (vÆ), (i))

	)

229 
	#sk_ACCESS_DESCRIPTION_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ACCESS_DESCRIPTION
, (°), (cmp))

	)

230 
	#sk_ACCESS_DESCRIPTION_dup
(
°
Ë
	`SKM_sk_dup
(
ACCESS_DESCRIPTION
, st)

	)

231 
	#sk_ACCESS_DESCRIPTION_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ACCESS_DESCRIPTION
, (°), (‰ì_func))

	)

232 
	#sk_ACCESS_DESCRIPTION_shi·
(
°
Ë
	`SKM_sk_shi·
(
ACCESS_DESCRIPTION
, (°))

	)

233 
	#sk_ACCESS_DESCRIPTION_p›
(
°
Ë
	`SKM_sk_p›
(
ACCESS_DESCRIPTION
, (°))

	)

234 
	#sk_ACCESS_DESCRIPTION_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ACCESS_DESCRIPTION
, (°))

	)

235 
	#sk_ACCESS_DESCRIPTION_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ACCESS_DESCRIPTION
, (°))

	)

237 
	#sk_ASN1_GENERALSTRING_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_GENERALSTRING
, (°))

	)

238 
	#sk_ASN1_GENERALSTRING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_GENERALSTRING
)

	)

239 
	#sk_ASN1_GENERALSTRING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_GENERALSTRING
, (°))

	)

240 
	#sk_ASN1_GENERALSTRING_num
(
°
Ë
	`SKM_sk_num
(
ASN1_GENERALSTRING
, (°))

	)

241 
	#sk_ASN1_GENERALSTRING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_GENERALSTRING
, (°), (i))

	)

242 
	#sk_ASN1_GENERALSTRING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_GENERALSTRING
, (°), (i), (vÆ))

	)

243 
	#sk_ASN1_GENERALSTRING_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_GENERALSTRING
, (°))

	)

244 
	#sk_ASN1_GENERALSTRING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

245 
	#sk_ASN1_GENERALSTRING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

246 
	#sk_ASN1_GENERALSTRING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

247 
	#sk_ASN1_GENERALSTRING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

248 
	#sk_ASN1_GENERALSTRING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_GENERALSTRING
, (°), (i))

	)

249 
	#sk_ASN1_GENERALSTRING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_GENERALSTRING
, (°), (±r))

	)

250 
	#sk_ASN1_GENERALSTRING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_GENERALSTRING
, (°), (vÆ), (i))

	)

251 
	#sk_ASN1_GENERALSTRING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_GENERALSTRING
, (°), (cmp))

	)

252 
	#sk_ASN1_GENERALSTRING_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_GENERALSTRING
, st)

	)

253 
	#sk_ASN1_GENERALSTRING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_GENERALSTRING
, (°), (‰ì_func))

	)

254 
	#sk_ASN1_GENERALSTRING_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_GENERALSTRING
, (°))

	)

255 
	#sk_ASN1_GENERALSTRING_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_GENERALSTRING
, (°))

	)

256 
	#sk_ASN1_GENERALSTRING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_GENERALSTRING
, (°))

	)

257 
	#sk_ASN1_GENERALSTRING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_GENERALSTRING
, (°))

	)

259 
	#sk_ASN1_INTEGER_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_INTEGER
, (°))

	)

260 
	#sk_ASN1_INTEGER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_INTEGER
)

	)

261 
	#sk_ASN1_INTEGER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_INTEGER
, (°))

	)

262 
	#sk_ASN1_INTEGER_num
(
°
Ë
	`SKM_sk_num
(
ASN1_INTEGER
, (°))

	)

263 
	#sk_ASN1_INTEGER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_INTEGER
, (°), (i))

	)

264 
	#sk_ASN1_INTEGER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_INTEGER
, (°), (i), (vÆ))

	)

265 
	#sk_ASN1_INTEGER_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_INTEGER
, (°))

	)

266 
	#sk_ASN1_INTEGER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_INTEGER
, (°), (vÆ))

	)

267 
	#sk_ASN1_INTEGER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_INTEGER
, (°), (vÆ))

	)

268 
	#sk_ASN1_INTEGER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_INTEGER
, (°), (vÆ))

	)

269 
	#sk_ASN1_INTEGER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_INTEGER
, (°), (vÆ))

	)

270 
	#sk_ASN1_INTEGER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_INTEGER
, (°), (i))

	)

271 
	#sk_ASN1_INTEGER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_INTEGER
, (°), (±r))

	)

272 
	#sk_ASN1_INTEGER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_INTEGER
, (°), (vÆ), (i))

	)

273 
	#sk_ASN1_INTEGER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_INTEGER
, (°), (cmp))

	)

274 
	#sk_ASN1_INTEGER_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_INTEGER
, st)

	)

275 
	#sk_ASN1_INTEGER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_INTEGER
, (°), (‰ì_func))

	)

276 
	#sk_ASN1_INTEGER_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_INTEGER
, (°))

	)

277 
	#sk_ASN1_INTEGER_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_INTEGER
, (°))

	)

278 
	#sk_ASN1_INTEGER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_INTEGER
, (°))

	)

279 
	#sk_ASN1_INTEGER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_INTEGER
, (°))

	)

281 
	#sk_ASN1_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_OBJECT
, (°))

	)

282 
	#sk_ASN1_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_OBJECT
)

	)

283 
	#sk_ASN1_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_OBJECT
, (°))

	)

284 
	#sk_ASN1_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
ASN1_OBJECT
, (°))

	)

285 
	#sk_ASN1_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_OBJECT
, (°), (i))

	)

286 
	#sk_ASN1_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_OBJECT
, (°), (i), (vÆ))

	)

287 
	#sk_ASN1_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_OBJECT
, (°))

	)

288 
	#sk_ASN1_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_OBJECT
, (°), (vÆ))

	)

289 
	#sk_ASN1_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_OBJECT
, (°), (vÆ))

	)

290 
	#sk_ASN1_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_OBJECT
, (°), (vÆ))

	)

291 
	#sk_ASN1_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_OBJECT
, (°), (vÆ))

	)

292 
	#sk_ASN1_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_OBJECT
, (°), (i))

	)

293 
	#sk_ASN1_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_OBJECT
, (°), (±r))

	)

294 
	#sk_ASN1_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_OBJECT
, (°), (vÆ), (i))

	)

295 
	#sk_ASN1_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_OBJECT
, (°), (cmp))

	)

296 
	#sk_ASN1_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_OBJECT
, st)

	)

297 
	#sk_ASN1_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_OBJECT
, (°), (‰ì_func))

	)

298 
	#sk_ASN1_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_OBJECT
, (°))

	)

299 
	#sk_ASN1_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_OBJECT
, (°))

	)

300 
	#sk_ASN1_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_OBJECT
, (°))

	)

301 
	#sk_ASN1_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_OBJECT
, (°))

	)

303 
	#sk_ASN1_STRING_TABLE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_STRING_TABLE
, (°))

	)

304 
	#sk_ASN1_STRING_TABLE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_STRING_TABLE
)

	)

305 
	#sk_ASN1_STRING_TABLE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_STRING_TABLE
, (°))

	)

306 
	#sk_ASN1_STRING_TABLE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_STRING_TABLE
, (°))

	)

307 
	#sk_ASN1_STRING_TABLE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_STRING_TABLE
, (°), (i))

	)

308 
	#sk_ASN1_STRING_TABLE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_STRING_TABLE
, (°), (i), (vÆ))

	)

309 
	#sk_ASN1_STRING_TABLE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_STRING_TABLE
, (°))

	)

310 
	#sk_ASN1_STRING_TABLE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

311 
	#sk_ASN1_STRING_TABLE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

312 
	#sk_ASN1_STRING_TABLE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

313 
	#sk_ASN1_STRING_TABLE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

314 
	#sk_ASN1_STRING_TABLE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_STRING_TABLE
, (°), (i))

	)

315 
	#sk_ASN1_STRING_TABLE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_STRING_TABLE
, (°), (±r))

	)

316 
	#sk_ASN1_STRING_TABLE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_STRING_TABLE
, (°), (vÆ), (i))

	)

317 
	#sk_ASN1_STRING_TABLE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_STRING_TABLE
, (°), (cmp))

	)

318 
	#sk_ASN1_STRING_TABLE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_STRING_TABLE
, st)

	)

319 
	#sk_ASN1_STRING_TABLE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_STRING_TABLE
, (°), (‰ì_func))

	)

320 
	#sk_ASN1_STRING_TABLE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_STRING_TABLE
, (°))

	)

321 
	#sk_ASN1_STRING_TABLE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_STRING_TABLE
, (°))

	)

322 
	#sk_ASN1_STRING_TABLE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_STRING_TABLE
, (°))

	)

323 
	#sk_ASN1_STRING_TABLE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_STRING_TABLE
, (°))

	)

325 
	#sk_ASN1_TYPE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_TYPE
, (°))

	)

326 
	#sk_ASN1_TYPE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_TYPE
)

	)

327 
	#sk_ASN1_TYPE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_TYPE
, (°))

	)

328 
	#sk_ASN1_TYPE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_TYPE
, (°))

	)

329 
	#sk_ASN1_TYPE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_TYPE
, (°), (i))

	)

330 
	#sk_ASN1_TYPE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_TYPE
, (°), (i), (vÆ))

	)

331 
	#sk_ASN1_TYPE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_TYPE
, (°))

	)

332 
	#sk_ASN1_TYPE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_TYPE
, (°), (vÆ))

	)

333 
	#sk_ASN1_TYPE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_TYPE
, (°), (vÆ))

	)

334 
	#sk_ASN1_TYPE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_TYPE
, (°), (vÆ))

	)

335 
	#sk_ASN1_TYPE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_TYPE
, (°), (vÆ))

	)

336 
	#sk_ASN1_TYPE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_TYPE
, (°), (i))

	)

337 
	#sk_ASN1_TYPE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_TYPE
, (°), (±r))

	)

338 
	#sk_ASN1_TYPE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_TYPE
, (°), (vÆ), (i))

	)

339 
	#sk_ASN1_TYPE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_TYPE
, (°), (cmp))

	)

340 
	#sk_ASN1_TYPE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_TYPE
, st)

	)

341 
	#sk_ASN1_TYPE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_TYPE
, (°), (‰ì_func))

	)

342 
	#sk_ASN1_TYPE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_TYPE
, (°))

	)

343 
	#sk_ASN1_TYPE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_TYPE
, (°))

	)

344 
	#sk_ASN1_TYPE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_TYPE
, (°))

	)

345 
	#sk_ASN1_TYPE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_TYPE
, (°))

	)

347 
	#sk_ASN1_VALUE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_VALUE
, (°))

	)

348 
	#sk_ASN1_VALUE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_VALUE
)

	)

349 
	#sk_ASN1_VALUE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_VALUE
, (°))

	)

350 
	#sk_ASN1_VALUE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_VALUE
, (°))

	)

351 
	#sk_ASN1_VALUE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_VALUE
, (°), (i))

	)

352 
	#sk_ASN1_VALUE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_VALUE
, (°), (i), (vÆ))

	)

353 
	#sk_ASN1_VALUE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_VALUE
, (°))

	)

354 
	#sk_ASN1_VALUE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_VALUE
, (°), (vÆ))

	)

355 
	#sk_ASN1_VALUE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_VALUE
, (°), (vÆ))

	)

356 
	#sk_ASN1_VALUE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_VALUE
, (°), (vÆ))

	)

357 
	#sk_ASN1_VALUE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_VALUE
, (°), (vÆ))

	)

358 
	#sk_ASN1_VALUE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_VALUE
, (°), (i))

	)

359 
	#sk_ASN1_VALUE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_VALUE
, (°), (±r))

	)

360 
	#sk_ASN1_VALUE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_VALUE
, (°), (vÆ), (i))

	)

361 
	#sk_ASN1_VALUE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_VALUE
, (°), (cmp))

	)

362 
	#sk_ASN1_VALUE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_VALUE
, st)

	)

363 
	#sk_ASN1_VALUE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_VALUE
, (°), (‰ì_func))

	)

364 
	#sk_ASN1_VALUE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_VALUE
, (°))

	)

365 
	#sk_ASN1_VALUE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_VALUE
, (°))

	)

366 
	#sk_ASN1_VALUE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_VALUE
, (°))

	)

367 
	#sk_ASN1_VALUE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_VALUE
, (°))

	)

369 
	#sk_BIO_√w
(
°
Ë
	`SKM_sk_√w
(
BIO
, (°))

	)

370 
	#sk_BIO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
BIO
)

	)

371 
	#sk_BIO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
BIO
, (°))

	)

372 
	#sk_BIO_num
(
°
Ë
	`SKM_sk_num
(
BIO
, (°))

	)

373 
	#sk_BIO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
BIO
, (°), (i))

	)

374 
	#sk_BIO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
BIO
, (°), (i), (vÆ))

	)

375 
	#sk_BIO_zîo
(
°
Ë
	`SKM_sk_zîo
(
BIO
, (°))

	)

376 
	#sk_BIO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
BIO
, (°), (vÆ))

	)

377 
	#sk_BIO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
BIO
, (°), (vÆ))

	)

378 
	#sk_BIO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
BIO
, (°), (vÆ))

	)

379 
	#sk_BIO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
BIO
, (°), (vÆ))

	)

380 
	#sk_BIO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
BIO
, (°), (i))

	)

381 
	#sk_BIO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
BIO
, (°), (±r))

	)

382 
	#sk_BIO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
BIO
, (°), (vÆ), (i))

	)

383 
	#sk_BIO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
BIO
, (°), (cmp))

	)

384 
	#sk_BIO_dup
(
°
Ë
	`SKM_sk_dup
(
BIO
, st)

	)

385 
	#sk_BIO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
BIO
, (°), (‰ì_func))

	)

386 
	#sk_BIO_shi·
(
°
Ë
	`SKM_sk_shi·
(
BIO
, (°))

	)

387 
	#sk_BIO_p›
(
°
Ë
	`SKM_sk_p›
(
BIO
, (°))

	)

388 
	#sk_BIO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
BIO
, (°))

	)

389 
	#sk_BIO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
BIO
, (°))

	)

391 
	#sk_CONF_IMODULE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_IMODULE
, (°))

	)

392 
	#sk_CONF_IMODULE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_IMODULE
)

	)

393 
	#sk_CONF_IMODULE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_IMODULE
, (°))

	)

394 
	#sk_CONF_IMODULE_num
(
°
Ë
	`SKM_sk_num
(
CONF_IMODULE
, (°))

	)

395 
	#sk_CONF_IMODULE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_IMODULE
, (°), (i))

	)

396 
	#sk_CONF_IMODULE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_IMODULE
, (°), (i), (vÆ))

	)

397 
	#sk_CONF_IMODULE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_IMODULE
, (°))

	)

398 
	#sk_CONF_IMODULE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_IMODULE
, (°), (vÆ))

	)

399 
	#sk_CONF_IMODULE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_IMODULE
, (°), (vÆ))

	)

400 
	#sk_CONF_IMODULE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_IMODULE
, (°), (vÆ))

	)

401 
	#sk_CONF_IMODULE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_IMODULE
, (°), (vÆ))

	)

402 
	#sk_CONF_IMODULE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_IMODULE
, (°), (i))

	)

403 
	#sk_CONF_IMODULE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_IMODULE
, (°), (±r))

	)

404 
	#sk_CONF_IMODULE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_IMODULE
, (°), (vÆ), (i))

	)

405 
	#sk_CONF_IMODULE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_IMODULE
, (°), (cmp))

	)

406 
	#sk_CONF_IMODULE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_IMODULE
, st)

	)

407 
	#sk_CONF_IMODULE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_IMODULE
, (°), (‰ì_func))

	)

408 
	#sk_CONF_IMODULE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_IMODULE
, (°))

	)

409 
	#sk_CONF_IMODULE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_IMODULE
, (°))

	)

410 
	#sk_CONF_IMODULE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_IMODULE
, (°))

	)

411 
	#sk_CONF_IMODULE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_IMODULE
, (°))

	)

413 
	#sk_CONF_MODULE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_MODULE
, (°))

	)

414 
	#sk_CONF_MODULE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_MODULE
)

	)

415 
	#sk_CONF_MODULE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_MODULE
, (°))

	)

416 
	#sk_CONF_MODULE_num
(
°
Ë
	`SKM_sk_num
(
CONF_MODULE
, (°))

	)

417 
	#sk_CONF_MODULE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_MODULE
, (°), (i))

	)

418 
	#sk_CONF_MODULE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_MODULE
, (°), (i), (vÆ))

	)

419 
	#sk_CONF_MODULE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_MODULE
, (°))

	)

420 
	#sk_CONF_MODULE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_MODULE
, (°), (vÆ))

	)

421 
	#sk_CONF_MODULE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_MODULE
, (°), (vÆ))

	)

422 
	#sk_CONF_MODULE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_MODULE
, (°), (vÆ))

	)

423 
	#sk_CONF_MODULE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_MODULE
, (°), (vÆ))

	)

424 
	#sk_CONF_MODULE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_MODULE
, (°), (i))

	)

425 
	#sk_CONF_MODULE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_MODULE
, (°), (±r))

	)

426 
	#sk_CONF_MODULE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_MODULE
, (°), (vÆ), (i))

	)

427 
	#sk_CONF_MODULE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_MODULE
, (°), (cmp))

	)

428 
	#sk_CONF_MODULE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_MODULE
, st)

	)

429 
	#sk_CONF_MODULE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_MODULE
, (°), (‰ì_func))

	)

430 
	#sk_CONF_MODULE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_MODULE
, (°))

	)

431 
	#sk_CONF_MODULE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_MODULE
, (°))

	)

432 
	#sk_CONF_MODULE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_MODULE
, (°))

	)

433 
	#sk_CONF_MODULE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_MODULE
, (°))

	)

435 
	#sk_CONF_VALUE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_VALUE
, (°))

	)

436 
	#sk_CONF_VALUE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_VALUE
)

	)

437 
	#sk_CONF_VALUE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_VALUE
, (°))

	)

438 
	#sk_CONF_VALUE_num
(
°
Ë
	`SKM_sk_num
(
CONF_VALUE
, (°))

	)

439 
	#sk_CONF_VALUE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_VALUE
, (°), (i))

	)

440 
	#sk_CONF_VALUE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_VALUE
, (°), (i), (vÆ))

	)

441 
	#sk_CONF_VALUE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_VALUE
, (°))

	)

442 
	#sk_CONF_VALUE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_VALUE
, (°), (vÆ))

	)

443 
	#sk_CONF_VALUE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_VALUE
, (°), (vÆ))

	)

444 
	#sk_CONF_VALUE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_VALUE
, (°), (vÆ))

	)

445 
	#sk_CONF_VALUE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_VALUE
, (°), (vÆ))

	)

446 
	#sk_CONF_VALUE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_VALUE
, (°), (i))

	)

447 
	#sk_CONF_VALUE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_VALUE
, (°), (±r))

	)

448 
	#sk_CONF_VALUE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_VALUE
, (°), (vÆ), (i))

	)

449 
	#sk_CONF_VALUE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_VALUE
, (°), (cmp))

	)

450 
	#sk_CONF_VALUE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_VALUE
, st)

	)

451 
	#sk_CONF_VALUE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_VALUE
, (°), (‰ì_func))

	)

452 
	#sk_CONF_VALUE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_VALUE
, (°))

	)

453 
	#sk_CONF_VALUE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_VALUE
, (°))

	)

454 
	#sk_CONF_VALUE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_VALUE
, (°))

	)

455 
	#sk_CONF_VALUE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_VALUE
, (°))

	)

457 
	#sk_CRYPTO_EX_DATA_FUNCS_√w
(
°
Ë
	`SKM_sk_√w
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

458 
	#sk_CRYPTO_EX_DATA_FUNCS_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CRYPTO_EX_DATA_FUNCS
)

	)

459 
	#sk_CRYPTO_EX_DATA_FUNCS_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

460 
	#sk_CRYPTO_EX_DATA_FUNCS_num
(
°
Ë
	`SKM_sk_num
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

461 
	#sk_CRYPTO_EX_DATA_FUNCS_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CRYPTO_EX_DATA_FUNCS
, (°), (i))

	)

462 
	#sk_CRYPTO_EX_DATA_FUNCS_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CRYPTO_EX_DATA_FUNCS
, (°), (i), (vÆ))

	)

463 
	#sk_CRYPTO_EX_DATA_FUNCS_zîo
(
°
Ë
	`SKM_sk_zîo
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

464 
	#sk_CRYPTO_EX_DATA_FUNCS_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

465 
	#sk_CRYPTO_EX_DATA_FUNCS_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

466 
	#sk_CRYPTO_EX_DATA_FUNCS_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

467 
	#sk_CRYPTO_EX_DATA_FUNCS_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

468 
	#sk_CRYPTO_EX_DATA_FUNCS_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CRYPTO_EX_DATA_FUNCS
, (°), (i))

	)

469 
	#sk_CRYPTO_EX_DATA_FUNCS_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CRYPTO_EX_DATA_FUNCS
, (°), (±r))

	)

470 
	#sk_CRYPTO_EX_DATA_FUNCS_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ), (i))

	)

471 
	#sk_CRYPTO_EX_DATA_FUNCS_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CRYPTO_EX_DATA_FUNCS
, (°), (cmp))

	)

472 
	#sk_CRYPTO_EX_DATA_FUNCS_dup
(
°
Ë
	`SKM_sk_dup
(
CRYPTO_EX_DATA_FUNCS
, st)

	)

473 
	#sk_CRYPTO_EX_DATA_FUNCS_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CRYPTO_EX_DATA_FUNCS
, (°), (‰ì_func))

	)

474 
	#sk_CRYPTO_EX_DATA_FUNCS_shi·
(
°
Ë
	`SKM_sk_shi·
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

475 
	#sk_CRYPTO_EX_DATA_FUNCS_p›
(
°
Ë
	`SKM_sk_p›
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

476 
	#sk_CRYPTO_EX_DATA_FUNCS_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

477 
	#sk_CRYPTO_EX_DATA_FUNCS_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

479 
	#sk_CRYPTO_dy∆ock_√w
(
°
Ë
	`SKM_sk_√w
(
CRYPTO_dy∆ock
, (°))

	)

480 
	#sk_CRYPTO_dy∆ock_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CRYPTO_dy∆ock
)

	)

481 
	#sk_CRYPTO_dy∆ock_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CRYPTO_dy∆ock
, (°))

	)

482 
	#sk_CRYPTO_dy∆ock_num
(
°
Ë
	`SKM_sk_num
(
CRYPTO_dy∆ock
, (°))

	)

483 
	#sk_CRYPTO_dy∆ock_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CRYPTO_dy∆ock
, (°), (i))

	)

484 
	#sk_CRYPTO_dy∆ock_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CRYPTO_dy∆ock
, (°), (i), (vÆ))

	)

485 
	#sk_CRYPTO_dy∆ock_zîo
(
°
Ë
	`SKM_sk_zîo
(
CRYPTO_dy∆ock
, (°))

	)

486 
	#sk_CRYPTO_dy∆ock_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

487 
	#sk_CRYPTO_dy∆ock_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

488 
	#sk_CRYPTO_dy∆ock_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

489 
	#sk_CRYPTO_dy∆ock_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

490 
	#sk_CRYPTO_dy∆ock_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CRYPTO_dy∆ock
, (°), (i))

	)

491 
	#sk_CRYPTO_dy∆ock_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CRYPTO_dy∆ock
, (°), (±r))

	)

492 
	#sk_CRYPTO_dy∆ock_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CRYPTO_dy∆ock
, (°), (vÆ), (i))

	)

493 
	#sk_CRYPTO_dy∆ock_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CRYPTO_dy∆ock
, (°), (cmp))

	)

494 
	#sk_CRYPTO_dy∆ock_dup
(
°
Ë
	`SKM_sk_dup
(
CRYPTO_dy∆ock
, st)

	)

495 
	#sk_CRYPTO_dy∆ock_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CRYPTO_dy∆ock
, (°), (‰ì_func))

	)

496 
	#sk_CRYPTO_dy∆ock_shi·
(
°
Ë
	`SKM_sk_shi·
(
CRYPTO_dy∆ock
, (°))

	)

497 
	#sk_CRYPTO_dy∆ock_p›
(
°
Ë
	`SKM_sk_p›
(
CRYPTO_dy∆ock
, (°))

	)

498 
	#sk_CRYPTO_dy∆ock_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CRYPTO_dy∆ock
, (°))

	)

499 
	#sk_CRYPTO_dy∆ock_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CRYPTO_dy∆ock
, (°))

	)

501 
	#sk_DIST_POINT_√w
(
°
Ë
	`SKM_sk_√w
(
DIST_POINT
, (°))

	)

502 
	#sk_DIST_POINT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
DIST_POINT
)

	)

503 
	#sk_DIST_POINT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
DIST_POINT
, (°))

	)

504 
	#sk_DIST_POINT_num
(
°
Ë
	`SKM_sk_num
(
DIST_POINT
, (°))

	)

505 
	#sk_DIST_POINT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
DIST_POINT
, (°), (i))

	)

506 
	#sk_DIST_POINT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
DIST_POINT
, (°), (i), (vÆ))

	)

507 
	#sk_DIST_POINT_zîo
(
°
Ë
	`SKM_sk_zîo
(
DIST_POINT
, (°))

	)

508 
	#sk_DIST_POINT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
DIST_POINT
, (°), (vÆ))

	)

509 
	#sk_DIST_POINT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
DIST_POINT
, (°), (vÆ))

	)

510 
	#sk_DIST_POINT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
DIST_POINT
, (°), (vÆ))

	)

511 
	#sk_DIST_POINT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
DIST_POINT
, (°), (vÆ))

	)

512 
	#sk_DIST_POINT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
DIST_POINT
, (°), (i))

	)

513 
	#sk_DIST_POINT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
DIST_POINT
, (°), (±r))

	)

514 
	#sk_DIST_POINT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
DIST_POINT
, (°), (vÆ), (i))

	)

515 
	#sk_DIST_POINT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
DIST_POINT
, (°), (cmp))

	)

516 
	#sk_DIST_POINT_dup
(
°
Ë
	`SKM_sk_dup
(
DIST_POINT
, st)

	)

517 
	#sk_DIST_POINT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
DIST_POINT
, (°), (‰ì_func))

	)

518 
	#sk_DIST_POINT_shi·
(
°
Ë
	`SKM_sk_shi·
(
DIST_POINT
, (°))

	)

519 
	#sk_DIST_POINT_p›
(
°
Ë
	`SKM_sk_p›
(
DIST_POINT
, (°))

	)

520 
	#sk_DIST_POINT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
DIST_POINT
, (°))

	)

521 
	#sk_DIST_POINT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
DIST_POINT
, (°))

	)

523 
	#sk_ENGINE_√w
(
°
Ë
	`SKM_sk_√w
(
ENGINE
, (°))

	)

524 
	#sk_ENGINE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ENGINE
)

	)

525 
	#sk_ENGINE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ENGINE
, (°))

	)

526 
	#sk_ENGINE_num
(
°
Ë
	`SKM_sk_num
(
ENGINE
, (°))

	)

527 
	#sk_ENGINE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ENGINE
, (°), (i))

	)

528 
	#sk_ENGINE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ENGINE
, (°), (i), (vÆ))

	)

529 
	#sk_ENGINE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ENGINE
, (°))

	)

530 
	#sk_ENGINE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ENGINE
, (°), (vÆ))

	)

531 
	#sk_ENGINE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ENGINE
, (°), (vÆ))

	)

532 
	#sk_ENGINE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ENGINE
, (°), (vÆ))

	)

533 
	#sk_ENGINE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ENGINE
, (°), (vÆ))

	)

534 
	#sk_ENGINE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ENGINE
, (°), (i))

	)

535 
	#sk_ENGINE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ENGINE
, (°), (±r))

	)

536 
	#sk_ENGINE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ENGINE
, (°), (vÆ), (i))

	)

537 
	#sk_ENGINE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ENGINE
, (°), (cmp))

	)

538 
	#sk_ENGINE_dup
(
°
Ë
	`SKM_sk_dup
(
ENGINE
, st)

	)

539 
	#sk_ENGINE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ENGINE
, (°), (‰ì_func))

	)

540 
	#sk_ENGINE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ENGINE
, (°))

	)

541 
	#sk_ENGINE_p›
(
°
Ë
	`SKM_sk_p›
(
ENGINE
, (°))

	)

542 
	#sk_ENGINE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ENGINE
, (°))

	)

543 
	#sk_ENGINE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ENGINE
, (°))

	)

545 
	#sk_ENGINE_CLEANUP_ITEM_√w
(
°
Ë
	`SKM_sk_√w
(
ENGINE_CLEANUP_ITEM
, (°))

	)

546 
	#sk_ENGINE_CLEANUP_ITEM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ENGINE_CLEANUP_ITEM
)

	)

547 
	#sk_ENGINE_CLEANUP_ITEM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ENGINE_CLEANUP_ITEM
, (°))

	)

548 
	#sk_ENGINE_CLEANUP_ITEM_num
(
°
Ë
	`SKM_sk_num
(
ENGINE_CLEANUP_ITEM
, (°))

	)

549 
	#sk_ENGINE_CLEANUP_ITEM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ENGINE_CLEANUP_ITEM
, (°), (i))

	)

550 
	#sk_ENGINE_CLEANUP_ITEM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ENGINE_CLEANUP_ITEM
, (°), (i), (vÆ))

	)

551 
	#sk_ENGINE_CLEANUP_ITEM_zîo
(
°
Ë
	`SKM_sk_zîo
(
ENGINE_CLEANUP_ITEM
, (°))

	)

552 
	#sk_ENGINE_CLEANUP_ITEM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

553 
	#sk_ENGINE_CLEANUP_ITEM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

554 
	#sk_ENGINE_CLEANUP_ITEM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

555 
	#sk_ENGINE_CLEANUP_ITEM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

556 
	#sk_ENGINE_CLEANUP_ITEM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ENGINE_CLEANUP_ITEM
, (°), (i))

	)

557 
	#sk_ENGINE_CLEANUP_ITEM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ENGINE_CLEANUP_ITEM
, (°), (±r))

	)

558 
	#sk_ENGINE_CLEANUP_ITEM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ), (i))

	)

559 
	#sk_ENGINE_CLEANUP_ITEM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ENGINE_CLEANUP_ITEM
, (°), (cmp))

	)

560 
	#sk_ENGINE_CLEANUP_ITEM_dup
(
°
Ë
	`SKM_sk_dup
(
ENGINE_CLEANUP_ITEM
, st)

	)

561 
	#sk_ENGINE_CLEANUP_ITEM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ENGINE_CLEANUP_ITEM
, (°), (‰ì_func))

	)

562 
	#sk_ENGINE_CLEANUP_ITEM_shi·
(
°
Ë
	`SKM_sk_shi·
(
ENGINE_CLEANUP_ITEM
, (°))

	)

563 
	#sk_ENGINE_CLEANUP_ITEM_p›
(
°
Ë
	`SKM_sk_p›
(
ENGINE_CLEANUP_ITEM
, (°))

	)

564 
	#sk_ENGINE_CLEANUP_ITEM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ENGINE_CLEANUP_ITEM
, (°))

	)

565 
	#sk_ENGINE_CLEANUP_ITEM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ENGINE_CLEANUP_ITEM
, (°))

	)

567 
	#sk_GENERAL_NAME_√w
(
°
Ë
	`SKM_sk_√w
(
GENERAL_NAME
, (°))

	)

568 
	#sk_GENERAL_NAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
GENERAL_NAME
)

	)

569 
	#sk_GENERAL_NAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
GENERAL_NAME
, (°))

	)

570 
	#sk_GENERAL_NAME_num
(
°
Ë
	`SKM_sk_num
(
GENERAL_NAME
, (°))

	)

571 
	#sk_GENERAL_NAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
GENERAL_NAME
, (°), (i))

	)

572 
	#sk_GENERAL_NAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
GENERAL_NAME
, (°), (i), (vÆ))

	)

573 
	#sk_GENERAL_NAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
GENERAL_NAME
, (°))

	)

574 
	#sk_GENERAL_NAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
GENERAL_NAME
, (°), (vÆ))

	)

575 
	#sk_GENERAL_NAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
GENERAL_NAME
, (°), (vÆ))

	)

576 
	#sk_GENERAL_NAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
GENERAL_NAME
, (°), (vÆ))

	)

577 
	#sk_GENERAL_NAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
GENERAL_NAME
, (°), (vÆ))

	)

578 
	#sk_GENERAL_NAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
GENERAL_NAME
, (°), (i))

	)

579 
	#sk_GENERAL_NAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
GENERAL_NAME
, (°), (±r))

	)

580 
	#sk_GENERAL_NAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
GENERAL_NAME
, (°), (vÆ), (i))

	)

581 
	#sk_GENERAL_NAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
GENERAL_NAME
, (°), (cmp))

	)

582 
	#sk_GENERAL_NAME_dup
(
°
Ë
	`SKM_sk_dup
(
GENERAL_NAME
, st)

	)

583 
	#sk_GENERAL_NAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
GENERAL_NAME
, (°), (‰ì_func))

	)

584 
	#sk_GENERAL_NAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
GENERAL_NAME
, (°))

	)

585 
	#sk_GENERAL_NAME_p›
(
°
Ë
	`SKM_sk_p›
(
GENERAL_NAME
, (°))

	)

586 
	#sk_GENERAL_NAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
GENERAL_NAME
, (°))

	)

587 
	#sk_GENERAL_NAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
GENERAL_NAME
, (°))

	)

589 
	#sk_GENERAL_SUBTREE_√w
(
°
Ë
	`SKM_sk_√w
(
GENERAL_SUBTREE
, (°))

	)

590 
	#sk_GENERAL_SUBTREE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
GENERAL_SUBTREE
)

	)

591 
	#sk_GENERAL_SUBTREE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
GENERAL_SUBTREE
, (°))

	)

592 
	#sk_GENERAL_SUBTREE_num
(
°
Ë
	`SKM_sk_num
(
GENERAL_SUBTREE
, (°))

	)

593 
	#sk_GENERAL_SUBTREE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
GENERAL_SUBTREE
, (°), (i))

	)

594 
	#sk_GENERAL_SUBTREE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
GENERAL_SUBTREE
, (°), (i), (vÆ))

	)

595 
	#sk_GENERAL_SUBTREE_zîo
(
°
Ë
	`SKM_sk_zîo
(
GENERAL_SUBTREE
, (°))

	)

596 
	#sk_GENERAL_SUBTREE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

597 
	#sk_GENERAL_SUBTREE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

598 
	#sk_GENERAL_SUBTREE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

599 
	#sk_GENERAL_SUBTREE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

600 
	#sk_GENERAL_SUBTREE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
GENERAL_SUBTREE
, (°), (i))

	)

601 
	#sk_GENERAL_SUBTREE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
GENERAL_SUBTREE
, (°), (±r))

	)

602 
	#sk_GENERAL_SUBTREE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
GENERAL_SUBTREE
, (°), (vÆ), (i))

	)

603 
	#sk_GENERAL_SUBTREE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
GENERAL_SUBTREE
, (°), (cmp))

	)

604 
	#sk_GENERAL_SUBTREE_dup
(
°
Ë
	`SKM_sk_dup
(
GENERAL_SUBTREE
, st)

	)

605 
	#sk_GENERAL_SUBTREE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
GENERAL_SUBTREE
, (°), (‰ì_func))

	)

606 
	#sk_GENERAL_SUBTREE_shi·
(
°
Ë
	`SKM_sk_shi·
(
GENERAL_SUBTREE
, (°))

	)

607 
	#sk_GENERAL_SUBTREE_p›
(
°
Ë
	`SKM_sk_p›
(
GENERAL_SUBTREE
, (°))

	)

608 
	#sk_GENERAL_SUBTREE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
GENERAL_SUBTREE
, (°))

	)

609 
	#sk_GENERAL_SUBTREE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
GENERAL_SUBTREE
, (°))

	)

611 
	#sk_KRB5_APREQBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_APREQBODY
, (°))

	)

612 
	#sk_KRB5_APREQBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_APREQBODY
)

	)

613 
	#sk_KRB5_APREQBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_APREQBODY
, (°))

	)

614 
	#sk_KRB5_APREQBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_APREQBODY
, (°))

	)

615 
	#sk_KRB5_APREQBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_APREQBODY
, (°), (i))

	)

616 
	#sk_KRB5_APREQBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_APREQBODY
, (°), (i), (vÆ))

	)

617 
	#sk_KRB5_APREQBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_APREQBODY
, (°))

	)

618 
	#sk_KRB5_APREQBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_APREQBODY
, (°), (vÆ))

	)

619 
	#sk_KRB5_APREQBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_APREQBODY
, (°), (vÆ))

	)

620 
	#sk_KRB5_APREQBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_APREQBODY
, (°), (vÆ))

	)

621 
	#sk_KRB5_APREQBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_APREQBODY
, (°), (vÆ))

	)

622 
	#sk_KRB5_APREQBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_APREQBODY
, (°), (i))

	)

623 
	#sk_KRB5_APREQBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_APREQBODY
, (°), (±r))

	)

624 
	#sk_KRB5_APREQBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_APREQBODY
, (°), (vÆ), (i))

	)

625 
	#sk_KRB5_APREQBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_APREQBODY
, (°), (cmp))

	)

626 
	#sk_KRB5_APREQBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_APREQBODY
, st)

	)

627 
	#sk_KRB5_APREQBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_APREQBODY
, (°), (‰ì_func))

	)

628 
	#sk_KRB5_APREQBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_APREQBODY
, (°))

	)

629 
	#sk_KRB5_APREQBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_APREQBODY
, (°))

	)

630 
	#sk_KRB5_APREQBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_APREQBODY
, (°))

	)

631 
	#sk_KRB5_APREQBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_APREQBODY
, (°))

	)

633 
	#sk_KRB5_AUTHDATA_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_AUTHDATA
, (°))

	)

634 
	#sk_KRB5_AUTHDATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_AUTHDATA
)

	)

635 
	#sk_KRB5_AUTHDATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_AUTHDATA
, (°))

	)

636 
	#sk_KRB5_AUTHDATA_num
(
°
Ë
	`SKM_sk_num
(
KRB5_AUTHDATA
, (°))

	)

637 
	#sk_KRB5_AUTHDATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_AUTHDATA
, (°), (i))

	)

638 
	#sk_KRB5_AUTHDATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_AUTHDATA
, (°), (i), (vÆ))

	)

639 
	#sk_KRB5_AUTHDATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_AUTHDATA
, (°))

	)

640 
	#sk_KRB5_AUTHDATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

641 
	#sk_KRB5_AUTHDATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

642 
	#sk_KRB5_AUTHDATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

643 
	#sk_KRB5_AUTHDATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

644 
	#sk_KRB5_AUTHDATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_AUTHDATA
, (°), (i))

	)

645 
	#sk_KRB5_AUTHDATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_AUTHDATA
, (°), (±r))

	)

646 
	#sk_KRB5_AUTHDATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_AUTHDATA
, (°), (vÆ), (i))

	)

647 
	#sk_KRB5_AUTHDATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_AUTHDATA
, (°), (cmp))

	)

648 
	#sk_KRB5_AUTHDATA_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_AUTHDATA
, st)

	)

649 
	#sk_KRB5_AUTHDATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_AUTHDATA
, (°), (‰ì_func))

	)

650 
	#sk_KRB5_AUTHDATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_AUTHDATA
, (°))

	)

651 
	#sk_KRB5_AUTHDATA_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_AUTHDATA
, (°))

	)

652 
	#sk_KRB5_AUTHDATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_AUTHDATA
, (°))

	)

653 
	#sk_KRB5_AUTHDATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_AUTHDATA
, (°))

	)

655 
	#sk_KRB5_AUTHENTBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_AUTHENTBODY
, (°))

	)

656 
	#sk_KRB5_AUTHENTBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_AUTHENTBODY
)

	)

657 
	#sk_KRB5_AUTHENTBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_AUTHENTBODY
, (°))

	)

658 
	#sk_KRB5_AUTHENTBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_AUTHENTBODY
, (°))

	)

659 
	#sk_KRB5_AUTHENTBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_AUTHENTBODY
, (°), (i))

	)

660 
	#sk_KRB5_AUTHENTBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_AUTHENTBODY
, (°), (i), (vÆ))

	)

661 
	#sk_KRB5_AUTHENTBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_AUTHENTBODY
, (°))

	)

662 
	#sk_KRB5_AUTHENTBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

663 
	#sk_KRB5_AUTHENTBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

664 
	#sk_KRB5_AUTHENTBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

665 
	#sk_KRB5_AUTHENTBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

666 
	#sk_KRB5_AUTHENTBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_AUTHENTBODY
, (°), (i))

	)

667 
	#sk_KRB5_AUTHENTBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_AUTHENTBODY
, (°), (±r))

	)

668 
	#sk_KRB5_AUTHENTBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_AUTHENTBODY
, (°), (vÆ), (i))

	)

669 
	#sk_KRB5_AUTHENTBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_AUTHENTBODY
, (°), (cmp))

	)

670 
	#sk_KRB5_AUTHENTBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_AUTHENTBODY
, st)

	)

671 
	#sk_KRB5_AUTHENTBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_AUTHENTBODY
, (°), (‰ì_func))

	)

672 
	#sk_KRB5_AUTHENTBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_AUTHENTBODY
, (°))

	)

673 
	#sk_KRB5_AUTHENTBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_AUTHENTBODY
, (°))

	)

674 
	#sk_KRB5_AUTHENTBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_AUTHENTBODY
, (°))

	)

675 
	#sk_KRB5_AUTHENTBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_AUTHENTBODY
, (°))

	)

677 
	#sk_KRB5_CHECKSUM_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_CHECKSUM
, (°))

	)

678 
	#sk_KRB5_CHECKSUM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_CHECKSUM
)

	)

679 
	#sk_KRB5_CHECKSUM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_CHECKSUM
, (°))

	)

680 
	#sk_KRB5_CHECKSUM_num
(
°
Ë
	`SKM_sk_num
(
KRB5_CHECKSUM
, (°))

	)

681 
	#sk_KRB5_CHECKSUM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_CHECKSUM
, (°), (i))

	)

682 
	#sk_KRB5_CHECKSUM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_CHECKSUM
, (°), (i), (vÆ))

	)

683 
	#sk_KRB5_CHECKSUM_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_CHECKSUM
, (°))

	)

684 
	#sk_KRB5_CHECKSUM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

685 
	#sk_KRB5_CHECKSUM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

686 
	#sk_KRB5_CHECKSUM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

687 
	#sk_KRB5_CHECKSUM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

688 
	#sk_KRB5_CHECKSUM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_CHECKSUM
, (°), (i))

	)

689 
	#sk_KRB5_CHECKSUM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_CHECKSUM
, (°), (±r))

	)

690 
	#sk_KRB5_CHECKSUM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_CHECKSUM
, (°), (vÆ), (i))

	)

691 
	#sk_KRB5_CHECKSUM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_CHECKSUM
, (°), (cmp))

	)

692 
	#sk_KRB5_CHECKSUM_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_CHECKSUM
, st)

	)

693 
	#sk_KRB5_CHECKSUM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_CHECKSUM
, (°), (‰ì_func))

	)

694 
	#sk_KRB5_CHECKSUM_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_CHECKSUM
, (°))

	)

695 
	#sk_KRB5_CHECKSUM_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_CHECKSUM
, (°))

	)

696 
	#sk_KRB5_CHECKSUM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_CHECKSUM
, (°))

	)

697 
	#sk_KRB5_CHECKSUM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_CHECKSUM
, (°))

	)

699 
	#sk_KRB5_ENCDATA_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_ENCDATA
, (°))

	)

700 
	#sk_KRB5_ENCDATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_ENCDATA
)

	)

701 
	#sk_KRB5_ENCDATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_ENCDATA
, (°))

	)

702 
	#sk_KRB5_ENCDATA_num
(
°
Ë
	`SKM_sk_num
(
KRB5_ENCDATA
, (°))

	)

703 
	#sk_KRB5_ENCDATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_ENCDATA
, (°), (i))

	)

704 
	#sk_KRB5_ENCDATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_ENCDATA
, (°), (i), (vÆ))

	)

705 
	#sk_KRB5_ENCDATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_ENCDATA
, (°))

	)

706 
	#sk_KRB5_ENCDATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_ENCDATA
, (°), (vÆ))

	)

707 
	#sk_KRB5_ENCDATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_ENCDATA
, (°), (vÆ))

	)

708 
	#sk_KRB5_ENCDATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_ENCDATA
, (°), (vÆ))

	)

709 
	#sk_KRB5_ENCDATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_ENCDATA
, (°), (vÆ))

	)

710 
	#sk_KRB5_ENCDATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_ENCDATA
, (°), (i))

	)

711 
	#sk_KRB5_ENCDATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_ENCDATA
, (°), (±r))

	)

712 
	#sk_KRB5_ENCDATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_ENCDATA
, (°), (vÆ), (i))

	)

713 
	#sk_KRB5_ENCDATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_ENCDATA
, (°), (cmp))

	)

714 
	#sk_KRB5_ENCDATA_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_ENCDATA
, st)

	)

715 
	#sk_KRB5_ENCDATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_ENCDATA
, (°), (‰ì_func))

	)

716 
	#sk_KRB5_ENCDATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_ENCDATA
, (°))

	)

717 
	#sk_KRB5_ENCDATA_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_ENCDATA
, (°))

	)

718 
	#sk_KRB5_ENCDATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_ENCDATA
, (°))

	)

719 
	#sk_KRB5_ENCDATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_ENCDATA
, (°))

	)

721 
	#sk_KRB5_ENCKEY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_ENCKEY
, (°))

	)

722 
	#sk_KRB5_ENCKEY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_ENCKEY
)

	)

723 
	#sk_KRB5_ENCKEY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_ENCKEY
, (°))

	)

724 
	#sk_KRB5_ENCKEY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_ENCKEY
, (°))

	)

725 
	#sk_KRB5_ENCKEY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_ENCKEY
, (°), (i))

	)

726 
	#sk_KRB5_ENCKEY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_ENCKEY
, (°), (i), (vÆ))

	)

727 
	#sk_KRB5_ENCKEY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_ENCKEY
, (°))

	)

728 
	#sk_KRB5_ENCKEY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_ENCKEY
, (°), (vÆ))

	)

729 
	#sk_KRB5_ENCKEY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_ENCKEY
, (°), (vÆ))

	)

730 
	#sk_KRB5_ENCKEY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_ENCKEY
, (°), (vÆ))

	)

731 
	#sk_KRB5_ENCKEY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_ENCKEY
, (°), (vÆ))

	)

732 
	#sk_KRB5_ENCKEY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_ENCKEY
, (°), (i))

	)

733 
	#sk_KRB5_ENCKEY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_ENCKEY
, (°), (±r))

	)

734 
	#sk_KRB5_ENCKEY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_ENCKEY
, (°), (vÆ), (i))

	)

735 
	#sk_KRB5_ENCKEY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_ENCKEY
, (°), (cmp))

	)

736 
	#sk_KRB5_ENCKEY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_ENCKEY
, st)

	)

737 
	#sk_KRB5_ENCKEY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_ENCKEY
, (°), (‰ì_func))

	)

738 
	#sk_KRB5_ENCKEY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_ENCKEY
, (°))

	)

739 
	#sk_KRB5_ENCKEY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_ENCKEY
, (°))

	)

740 
	#sk_KRB5_ENCKEY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_ENCKEY
, (°))

	)

741 
	#sk_KRB5_ENCKEY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_ENCKEY
, (°))

	)

743 
	#sk_KRB5_PRINCNAME_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_PRINCNAME
, (°))

	)

744 
	#sk_KRB5_PRINCNAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_PRINCNAME
)

	)

745 
	#sk_KRB5_PRINCNAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_PRINCNAME
, (°))

	)

746 
	#sk_KRB5_PRINCNAME_num
(
°
Ë
	`SKM_sk_num
(
KRB5_PRINCNAME
, (°))

	)

747 
	#sk_KRB5_PRINCNAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_PRINCNAME
, (°), (i))

	)

748 
	#sk_KRB5_PRINCNAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_PRINCNAME
, (°), (i), (vÆ))

	)

749 
	#sk_KRB5_PRINCNAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_PRINCNAME
, (°))

	)

750 
	#sk_KRB5_PRINCNAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

751 
	#sk_KRB5_PRINCNAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

752 
	#sk_KRB5_PRINCNAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

753 
	#sk_KRB5_PRINCNAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

754 
	#sk_KRB5_PRINCNAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_PRINCNAME
, (°), (i))

	)

755 
	#sk_KRB5_PRINCNAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_PRINCNAME
, (°), (±r))

	)

756 
	#sk_KRB5_PRINCNAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_PRINCNAME
, (°), (vÆ), (i))

	)

757 
	#sk_KRB5_PRINCNAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_PRINCNAME
, (°), (cmp))

	)

758 
	#sk_KRB5_PRINCNAME_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_PRINCNAME
, st)

	)

759 
	#sk_KRB5_PRINCNAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_PRINCNAME
, (°), (‰ì_func))

	)

760 
	#sk_KRB5_PRINCNAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_PRINCNAME
, (°))

	)

761 
	#sk_KRB5_PRINCNAME_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_PRINCNAME
, (°))

	)

762 
	#sk_KRB5_PRINCNAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_PRINCNAME
, (°))

	)

763 
	#sk_KRB5_PRINCNAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_PRINCNAME
, (°))

	)

765 
	#sk_KRB5_TKTBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_TKTBODY
, (°))

	)

766 
	#sk_KRB5_TKTBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_TKTBODY
)

	)

767 
	#sk_KRB5_TKTBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_TKTBODY
, (°))

	)

768 
	#sk_KRB5_TKTBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_TKTBODY
, (°))

	)

769 
	#sk_KRB5_TKTBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_TKTBODY
, (°), (i))

	)

770 
	#sk_KRB5_TKTBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_TKTBODY
, (°), (i), (vÆ))

	)

771 
	#sk_KRB5_TKTBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_TKTBODY
, (°))

	)

772 
	#sk_KRB5_TKTBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_TKTBODY
, (°), (vÆ))

	)

773 
	#sk_KRB5_TKTBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_TKTBODY
, (°), (vÆ))

	)

774 
	#sk_KRB5_TKTBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_TKTBODY
, (°), (vÆ))

	)

775 
	#sk_KRB5_TKTBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_TKTBODY
, (°), (vÆ))

	)

776 
	#sk_KRB5_TKTBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_TKTBODY
, (°), (i))

	)

777 
	#sk_KRB5_TKTBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_TKTBODY
, (°), (±r))

	)

778 
	#sk_KRB5_TKTBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_TKTBODY
, (°), (vÆ), (i))

	)

779 
	#sk_KRB5_TKTBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_TKTBODY
, (°), (cmp))

	)

780 
	#sk_KRB5_TKTBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_TKTBODY
, st)

	)

781 
	#sk_KRB5_TKTBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_TKTBODY
, (°), (‰ì_func))

	)

782 
	#sk_KRB5_TKTBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_TKTBODY
, (°))

	)

783 
	#sk_KRB5_TKTBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_TKTBODY
, (°))

	)

784 
	#sk_KRB5_TKTBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_TKTBODY
, (°))

	)

785 
	#sk_KRB5_TKTBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_TKTBODY
, (°))

	)

787 
	#sk_MIME_HEADER_√w
(
°
Ë
	`SKM_sk_√w
(
MIME_HEADER
, (°))

	)

788 
	#sk_MIME_HEADER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
MIME_HEADER
)

	)

789 
	#sk_MIME_HEADER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
MIME_HEADER
, (°))

	)

790 
	#sk_MIME_HEADER_num
(
°
Ë
	`SKM_sk_num
(
MIME_HEADER
, (°))

	)

791 
	#sk_MIME_HEADER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
MIME_HEADER
, (°), (i))

	)

792 
	#sk_MIME_HEADER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
MIME_HEADER
, (°), (i), (vÆ))

	)

793 
	#sk_MIME_HEADER_zîo
(
°
Ë
	`SKM_sk_zîo
(
MIME_HEADER
, (°))

	)

794 
	#sk_MIME_HEADER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
MIME_HEADER
, (°), (vÆ))

	)

795 
	#sk_MIME_HEADER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
MIME_HEADER
, (°), (vÆ))

	)

796 
	#sk_MIME_HEADER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
MIME_HEADER
, (°), (vÆ))

	)

797 
	#sk_MIME_HEADER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
MIME_HEADER
, (°), (vÆ))

	)

798 
	#sk_MIME_HEADER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
MIME_HEADER
, (°), (i))

	)

799 
	#sk_MIME_HEADER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
MIME_HEADER
, (°), (±r))

	)

800 
	#sk_MIME_HEADER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
MIME_HEADER
, (°), (vÆ), (i))

	)

801 
	#sk_MIME_HEADER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
MIME_HEADER
, (°), (cmp))

	)

802 
	#sk_MIME_HEADER_dup
(
°
Ë
	`SKM_sk_dup
(
MIME_HEADER
, st)

	)

803 
	#sk_MIME_HEADER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
MIME_HEADER
, (°), (‰ì_func))

	)

804 
	#sk_MIME_HEADER_shi·
(
°
Ë
	`SKM_sk_shi·
(
MIME_HEADER
, (°))

	)

805 
	#sk_MIME_HEADER_p›
(
°
Ë
	`SKM_sk_p›
(
MIME_HEADER
, (°))

	)

806 
	#sk_MIME_HEADER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
MIME_HEADER
, (°))

	)

807 
	#sk_MIME_HEADER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
MIME_HEADER
, (°))

	)

809 
	#sk_MIME_PARAM_√w
(
°
Ë
	`SKM_sk_√w
(
MIME_PARAM
, (°))

	)

810 
	#sk_MIME_PARAM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
MIME_PARAM
)

	)

811 
	#sk_MIME_PARAM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
MIME_PARAM
, (°))

	)

812 
	#sk_MIME_PARAM_num
(
°
Ë
	`SKM_sk_num
(
MIME_PARAM
, (°))

	)

813 
	#sk_MIME_PARAM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
MIME_PARAM
, (°), (i))

	)

814 
	#sk_MIME_PARAM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
MIME_PARAM
, (°), (i), (vÆ))

	)

815 
	#sk_MIME_PARAM_zîo
(
°
Ë
	`SKM_sk_zîo
(
MIME_PARAM
, (°))

	)

816 
	#sk_MIME_PARAM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
MIME_PARAM
, (°), (vÆ))

	)

817 
	#sk_MIME_PARAM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
MIME_PARAM
, (°), (vÆ))

	)

818 
	#sk_MIME_PARAM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
MIME_PARAM
, (°), (vÆ))

	)

819 
	#sk_MIME_PARAM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
MIME_PARAM
, (°), (vÆ))

	)

820 
	#sk_MIME_PARAM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
MIME_PARAM
, (°), (i))

	)

821 
	#sk_MIME_PARAM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
MIME_PARAM
, (°), (±r))

	)

822 
	#sk_MIME_PARAM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
MIME_PARAM
, (°), (vÆ), (i))

	)

823 
	#sk_MIME_PARAM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
MIME_PARAM
, (°), (cmp))

	)

824 
	#sk_MIME_PARAM_dup
(
°
Ë
	`SKM_sk_dup
(
MIME_PARAM
, st)

	)

825 
	#sk_MIME_PARAM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
MIME_PARAM
, (°), (‰ì_func))

	)

826 
	#sk_MIME_PARAM_shi·
(
°
Ë
	`SKM_sk_shi·
(
MIME_PARAM
, (°))

	)

827 
	#sk_MIME_PARAM_p›
(
°
Ë
	`SKM_sk_p›
(
MIME_PARAM
, (°))

	)

828 
	#sk_MIME_PARAM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
MIME_PARAM
, (°))

	)

829 
	#sk_MIME_PARAM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
MIME_PARAM
, (°))

	)

831 
	#sk_NAME_FUNCS_√w
(
°
Ë
	`SKM_sk_√w
(
NAME_FUNCS
, (°))

	)

832 
	#sk_NAME_FUNCS_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
NAME_FUNCS
)

	)

833 
	#sk_NAME_FUNCS_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
NAME_FUNCS
, (°))

	)

834 
	#sk_NAME_FUNCS_num
(
°
Ë
	`SKM_sk_num
(
NAME_FUNCS
, (°))

	)

835 
	#sk_NAME_FUNCS_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
NAME_FUNCS
, (°), (i))

	)

836 
	#sk_NAME_FUNCS_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
NAME_FUNCS
, (°), (i), (vÆ))

	)

837 
	#sk_NAME_FUNCS_zîo
(
°
Ë
	`SKM_sk_zîo
(
NAME_FUNCS
, (°))

	)

838 
	#sk_NAME_FUNCS_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
NAME_FUNCS
, (°), (vÆ))

	)

839 
	#sk_NAME_FUNCS_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
NAME_FUNCS
, (°), (vÆ))

	)

840 
	#sk_NAME_FUNCS_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
NAME_FUNCS
, (°), (vÆ))

	)

841 
	#sk_NAME_FUNCS_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
NAME_FUNCS
, (°), (vÆ))

	)

842 
	#sk_NAME_FUNCS_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
NAME_FUNCS
, (°), (i))

	)

843 
	#sk_NAME_FUNCS_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
NAME_FUNCS
, (°), (±r))

	)

844 
	#sk_NAME_FUNCS_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
NAME_FUNCS
, (°), (vÆ), (i))

	)

845 
	#sk_NAME_FUNCS_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
NAME_FUNCS
, (°), (cmp))

	)

846 
	#sk_NAME_FUNCS_dup
(
°
Ë
	`SKM_sk_dup
(
NAME_FUNCS
, st)

	)

847 
	#sk_NAME_FUNCS_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
NAME_FUNCS
, (°), (‰ì_func))

	)

848 
	#sk_NAME_FUNCS_shi·
(
°
Ë
	`SKM_sk_shi·
(
NAME_FUNCS
, (°))

	)

849 
	#sk_NAME_FUNCS_p›
(
°
Ë
	`SKM_sk_p›
(
NAME_FUNCS
, (°))

	)

850 
	#sk_NAME_FUNCS_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
NAME_FUNCS
, (°))

	)

851 
	#sk_NAME_FUNCS_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
NAME_FUNCS
, (°))

	)

853 
	#sk_OCSP_CERTID_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_CERTID
, (°))

	)

854 
	#sk_OCSP_CERTID_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_CERTID
)

	)

855 
	#sk_OCSP_CERTID_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_CERTID
, (°))

	)

856 
	#sk_OCSP_CERTID_num
(
°
Ë
	`SKM_sk_num
(
OCSP_CERTID
, (°))

	)

857 
	#sk_OCSP_CERTID_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_CERTID
, (°), (i))

	)

858 
	#sk_OCSP_CERTID_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_CERTID
, (°), (i), (vÆ))

	)

859 
	#sk_OCSP_CERTID_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_CERTID
, (°))

	)

860 
	#sk_OCSP_CERTID_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_CERTID
, (°), (vÆ))

	)

861 
	#sk_OCSP_CERTID_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_CERTID
, (°), (vÆ))

	)

862 
	#sk_OCSP_CERTID_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_CERTID
, (°), (vÆ))

	)

863 
	#sk_OCSP_CERTID_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_CERTID
, (°), (vÆ))

	)

864 
	#sk_OCSP_CERTID_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_CERTID
, (°), (i))

	)

865 
	#sk_OCSP_CERTID_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_CERTID
, (°), (±r))

	)

866 
	#sk_OCSP_CERTID_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_CERTID
, (°), (vÆ), (i))

	)

867 
	#sk_OCSP_CERTID_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_CERTID
, (°), (cmp))

	)

868 
	#sk_OCSP_CERTID_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_CERTID
, st)

	)

869 
	#sk_OCSP_CERTID_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_CERTID
, (°), (‰ì_func))

	)

870 
	#sk_OCSP_CERTID_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_CERTID
, (°))

	)

871 
	#sk_OCSP_CERTID_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_CERTID
, (°))

	)

872 
	#sk_OCSP_CERTID_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_CERTID
, (°))

	)

873 
	#sk_OCSP_CERTID_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_CERTID
, (°))

	)

875 
	#sk_OCSP_ONEREQ_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_ONEREQ
, (°))

	)

876 
	#sk_OCSP_ONEREQ_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_ONEREQ
)

	)

877 
	#sk_OCSP_ONEREQ_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_ONEREQ
, (°))

	)

878 
	#sk_OCSP_ONEREQ_num
(
°
Ë
	`SKM_sk_num
(
OCSP_ONEREQ
, (°))

	)

879 
	#sk_OCSP_ONEREQ_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_ONEREQ
, (°), (i))

	)

880 
	#sk_OCSP_ONEREQ_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_ONEREQ
, (°), (i), (vÆ))

	)

881 
	#sk_OCSP_ONEREQ_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_ONEREQ
, (°))

	)

882 
	#sk_OCSP_ONEREQ_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_ONEREQ
, (°), (vÆ))

	)

883 
	#sk_OCSP_ONEREQ_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_ONEREQ
, (°), (vÆ))

	)

884 
	#sk_OCSP_ONEREQ_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_ONEREQ
, (°), (vÆ))

	)

885 
	#sk_OCSP_ONEREQ_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_ONEREQ
, (°), (vÆ))

	)

886 
	#sk_OCSP_ONEREQ_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_ONEREQ
, (°), (i))

	)

887 
	#sk_OCSP_ONEREQ_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_ONEREQ
, (°), (±r))

	)

888 
	#sk_OCSP_ONEREQ_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_ONEREQ
, (°), (vÆ), (i))

	)

889 
	#sk_OCSP_ONEREQ_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_ONEREQ
, (°), (cmp))

	)

890 
	#sk_OCSP_ONEREQ_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_ONEREQ
, st)

	)

891 
	#sk_OCSP_ONEREQ_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_ONEREQ
, (°), (‰ì_func))

	)

892 
	#sk_OCSP_ONEREQ_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_ONEREQ
, (°))

	)

893 
	#sk_OCSP_ONEREQ_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_ONEREQ
, (°))

	)

894 
	#sk_OCSP_ONEREQ_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_ONEREQ
, (°))

	)

895 
	#sk_OCSP_ONEREQ_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_ONEREQ
, (°))

	)

897 
	#sk_OCSP_SINGLERESP_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_SINGLERESP
, (°))

	)

898 
	#sk_OCSP_SINGLERESP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_SINGLERESP
)

	)

899 
	#sk_OCSP_SINGLERESP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_SINGLERESP
, (°))

	)

900 
	#sk_OCSP_SINGLERESP_num
(
°
Ë
	`SKM_sk_num
(
OCSP_SINGLERESP
, (°))

	)

901 
	#sk_OCSP_SINGLERESP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_SINGLERESP
, (°), (i))

	)

902 
	#sk_OCSP_SINGLERESP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_SINGLERESP
, (°), (i), (vÆ))

	)

903 
	#sk_OCSP_SINGLERESP_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_SINGLERESP
, (°))

	)

904 
	#sk_OCSP_SINGLERESP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

905 
	#sk_OCSP_SINGLERESP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

906 
	#sk_OCSP_SINGLERESP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

907 
	#sk_OCSP_SINGLERESP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

908 
	#sk_OCSP_SINGLERESP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_SINGLERESP
, (°), (i))

	)

909 
	#sk_OCSP_SINGLERESP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_SINGLERESP
, (°), (±r))

	)

910 
	#sk_OCSP_SINGLERESP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_SINGLERESP
, (°), (vÆ), (i))

	)

911 
	#sk_OCSP_SINGLERESP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_SINGLERESP
, (°), (cmp))

	)

912 
	#sk_OCSP_SINGLERESP_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_SINGLERESP
, st)

	)

913 
	#sk_OCSP_SINGLERESP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_SINGLERESP
, (°), (‰ì_func))

	)

914 
	#sk_OCSP_SINGLERESP_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_SINGLERESP
, (°))

	)

915 
	#sk_OCSP_SINGLERESP_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_SINGLERESP
, (°))

	)

916 
	#sk_OCSP_SINGLERESP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_SINGLERESP
, (°))

	)

917 
	#sk_OCSP_SINGLERESP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_SINGLERESP
, (°))

	)

919 
	#sk_PKCS12_SAFEBAG_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS12_SAFEBAG
, (°))

	)

920 
	#sk_PKCS12_SAFEBAG_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS12_SAFEBAG
)

	)

921 
	#sk_PKCS12_SAFEBAG_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS12_SAFEBAG
, (°))

	)

922 
	#sk_PKCS12_SAFEBAG_num
(
°
Ë
	`SKM_sk_num
(
PKCS12_SAFEBAG
, (°))

	)

923 
	#sk_PKCS12_SAFEBAG_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS12_SAFEBAG
, (°), (i))

	)

924 
	#sk_PKCS12_SAFEBAG_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS12_SAFEBAG
, (°), (i), (vÆ))

	)

925 
	#sk_PKCS12_SAFEBAG_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS12_SAFEBAG
, (°))

	)

926 
	#sk_PKCS12_SAFEBAG_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

927 
	#sk_PKCS12_SAFEBAG_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

928 
	#sk_PKCS12_SAFEBAG_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

929 
	#sk_PKCS12_SAFEBAG_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

930 
	#sk_PKCS12_SAFEBAG_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS12_SAFEBAG
, (°), (i))

	)

931 
	#sk_PKCS12_SAFEBAG_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS12_SAFEBAG
, (°), (±r))

	)

932 
	#sk_PKCS12_SAFEBAG_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS12_SAFEBAG
, (°), (vÆ), (i))

	)

933 
	#sk_PKCS12_SAFEBAG_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS12_SAFEBAG
, (°), (cmp))

	)

934 
	#sk_PKCS12_SAFEBAG_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS12_SAFEBAG
, st)

	)

935 
	#sk_PKCS12_SAFEBAG_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS12_SAFEBAG
, (°), (‰ì_func))

	)

936 
	#sk_PKCS12_SAFEBAG_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS12_SAFEBAG
, (°))

	)

937 
	#sk_PKCS12_SAFEBAG_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS12_SAFEBAG
, (°))

	)

938 
	#sk_PKCS12_SAFEBAG_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS12_SAFEBAG
, (°))

	)

939 
	#sk_PKCS12_SAFEBAG_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS12_SAFEBAG
, (°))

	)

941 
	#sk_PKCS7_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7
, (°))

	)

942 
	#sk_PKCS7_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7
)

	)

943 
	#sk_PKCS7_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7
, (°))

	)

944 
	#sk_PKCS7_num
(
°
Ë
	`SKM_sk_num
(
PKCS7
, (°))

	)

945 
	#sk_PKCS7_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7
, (°), (i))

	)

946 
	#sk_PKCS7_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7
, (°), (i), (vÆ))

	)

947 
	#sk_PKCS7_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7
, (°))

	)

948 
	#sk_PKCS7_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7
, (°), (vÆ))

	)

949 
	#sk_PKCS7_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7
, (°), (vÆ))

	)

950 
	#sk_PKCS7_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7
, (°), (vÆ))

	)

951 
	#sk_PKCS7_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7
, (°), (vÆ))

	)

952 
	#sk_PKCS7_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7
, (°), (i))

	)

953 
	#sk_PKCS7_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7
, (°), (±r))

	)

954 
	#sk_PKCS7_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7
, (°), (vÆ), (i))

	)

955 
	#sk_PKCS7_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7
, (°), (cmp))

	)

956 
	#sk_PKCS7_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7
, st)

	)

957 
	#sk_PKCS7_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7
, (°), (‰ì_func))

	)

958 
	#sk_PKCS7_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7
, (°))

	)

959 
	#sk_PKCS7_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7
, (°))

	)

960 
	#sk_PKCS7_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7
, (°))

	)

961 
	#sk_PKCS7_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7
, (°))

	)

963 
	#sk_PKCS7_RECIP_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7_RECIP_INFO
, (°))

	)

964 
	#sk_PKCS7_RECIP_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7_RECIP_INFO
)

	)

965 
	#sk_PKCS7_RECIP_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7_RECIP_INFO
, (°))

	)

966 
	#sk_PKCS7_RECIP_INFO_num
(
°
Ë
	`SKM_sk_num
(
PKCS7_RECIP_INFO
, (°))

	)

967 
	#sk_PKCS7_RECIP_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7_RECIP_INFO
, (°), (i))

	)

968 
	#sk_PKCS7_RECIP_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7_RECIP_INFO
, (°), (i), (vÆ))

	)

969 
	#sk_PKCS7_RECIP_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7_RECIP_INFO
, (°))

	)

970 
	#sk_PKCS7_RECIP_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

971 
	#sk_PKCS7_RECIP_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

972 
	#sk_PKCS7_RECIP_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

973 
	#sk_PKCS7_RECIP_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

974 
	#sk_PKCS7_RECIP_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7_RECIP_INFO
, (°), (i))

	)

975 
	#sk_PKCS7_RECIP_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7_RECIP_INFO
, (°), (±r))

	)

976 
	#sk_PKCS7_RECIP_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7_RECIP_INFO
, (°), (vÆ), (i))

	)

977 
	#sk_PKCS7_RECIP_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7_RECIP_INFO
, (°), (cmp))

	)

978 
	#sk_PKCS7_RECIP_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7_RECIP_INFO
, st)

	)

979 
	#sk_PKCS7_RECIP_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7_RECIP_INFO
, (°), (‰ì_func))

	)

980 
	#sk_PKCS7_RECIP_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7_RECIP_INFO
, (°))

	)

981 
	#sk_PKCS7_RECIP_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7_RECIP_INFO
, (°))

	)

982 
	#sk_PKCS7_RECIP_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7_RECIP_INFO
, (°))

	)

983 
	#sk_PKCS7_RECIP_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7_RECIP_INFO
, (°))

	)

985 
	#sk_PKCS7_SIGNER_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7_SIGNER_INFO
, (°))

	)

986 
	#sk_PKCS7_SIGNER_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7_SIGNER_INFO
)

	)

987 
	#sk_PKCS7_SIGNER_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7_SIGNER_INFO
, (°))

	)

988 
	#sk_PKCS7_SIGNER_INFO_num
(
°
Ë
	`SKM_sk_num
(
PKCS7_SIGNER_INFO
, (°))

	)

989 
	#sk_PKCS7_SIGNER_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7_SIGNER_INFO
, (°), (i))

	)

990 
	#sk_PKCS7_SIGNER_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7_SIGNER_INFO
, (°), (i), (vÆ))

	)

991 
	#sk_PKCS7_SIGNER_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7_SIGNER_INFO
, (°))

	)

992 
	#sk_PKCS7_SIGNER_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

993 
	#sk_PKCS7_SIGNER_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

994 
	#sk_PKCS7_SIGNER_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

995 
	#sk_PKCS7_SIGNER_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

996 
	#sk_PKCS7_SIGNER_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7_SIGNER_INFO
, (°), (i))

	)

997 
	#sk_PKCS7_SIGNER_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7_SIGNER_INFO
, (°), (±r))

	)

998 
	#sk_PKCS7_SIGNER_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7_SIGNER_INFO
, (°), (vÆ), (i))

	)

999 
	#sk_PKCS7_SIGNER_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7_SIGNER_INFO
, (°), (cmp))

	)

1000 
	#sk_PKCS7_SIGNER_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7_SIGNER_INFO
, st)

	)

1001 
	#sk_PKCS7_SIGNER_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7_SIGNER_INFO
, (°), (‰ì_func))

	)

1002 
	#sk_PKCS7_SIGNER_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7_SIGNER_INFO
, (°))

	)

1003 
	#sk_PKCS7_SIGNER_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7_SIGNER_INFO
, (°))

	)

1004 
	#sk_PKCS7_SIGNER_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7_SIGNER_INFO
, (°))

	)

1005 
	#sk_PKCS7_SIGNER_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7_SIGNER_INFO
, (°))

	)

1007 
	#sk_POLICYINFO_√w
(
°
Ë
	`SKM_sk_√w
(
POLICYINFO
, (°))

	)

1008 
	#sk_POLICYINFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICYINFO
)

	)

1009 
	#sk_POLICYINFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICYINFO
, (°))

	)

1010 
	#sk_POLICYINFO_num
(
°
Ë
	`SKM_sk_num
(
POLICYINFO
, (°))

	)

1011 
	#sk_POLICYINFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICYINFO
, (°), (i))

	)

1012 
	#sk_POLICYINFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICYINFO
, (°), (i), (vÆ))

	)

1013 
	#sk_POLICYINFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICYINFO
, (°))

	)

1014 
	#sk_POLICYINFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICYINFO
, (°), (vÆ))

	)

1015 
	#sk_POLICYINFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICYINFO
, (°), (vÆ))

	)

1016 
	#sk_POLICYINFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICYINFO
, (°), (vÆ))

	)

1017 
	#sk_POLICYINFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICYINFO
, (°), (vÆ))

	)

1018 
	#sk_POLICYINFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICYINFO
, (°), (i))

	)

1019 
	#sk_POLICYINFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICYINFO
, (°), (±r))

	)

1020 
	#sk_POLICYINFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICYINFO
, (°), (vÆ), (i))

	)

1021 
	#sk_POLICYINFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICYINFO
, (°), (cmp))

	)

1022 
	#sk_POLICYINFO_dup
(
°
Ë
	`SKM_sk_dup
(
POLICYINFO
, st)

	)

1023 
	#sk_POLICYINFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICYINFO
, (°), (‰ì_func))

	)

1024 
	#sk_POLICYINFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICYINFO
, (°))

	)

1025 
	#sk_POLICYINFO_p›
(
°
Ë
	`SKM_sk_p›
(
POLICYINFO
, (°))

	)

1026 
	#sk_POLICYINFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICYINFO
, (°))

	)

1027 
	#sk_POLICYINFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICYINFO
, (°))

	)

1029 
	#sk_POLICYQUALINFO_√w
(
°
Ë
	`SKM_sk_√w
(
POLICYQUALINFO
, (°))

	)

1030 
	#sk_POLICYQUALINFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICYQUALINFO
)

	)

1031 
	#sk_POLICYQUALINFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICYQUALINFO
, (°))

	)

1032 
	#sk_POLICYQUALINFO_num
(
°
Ë
	`SKM_sk_num
(
POLICYQUALINFO
, (°))

	)

1033 
	#sk_POLICYQUALINFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICYQUALINFO
, (°), (i))

	)

1034 
	#sk_POLICYQUALINFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICYQUALINFO
, (°), (i), (vÆ))

	)

1035 
	#sk_POLICYQUALINFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICYQUALINFO
, (°))

	)

1036 
	#sk_POLICYQUALINFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICYQUALINFO
, (°), (vÆ))

	)

1037 
	#sk_POLICYQUALINFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICYQUALINFO
, (°), (vÆ))

	)

1038 
	#sk_POLICYQUALINFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICYQUALINFO
, (°), (vÆ))

	)

1039 
	#sk_POLICYQUALINFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICYQUALINFO
, (°), (vÆ))

	)

1040 
	#sk_POLICYQUALINFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICYQUALINFO
, (°), (i))

	)

1041 
	#sk_POLICYQUALINFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICYQUALINFO
, (°), (±r))

	)

1042 
	#sk_POLICYQUALINFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICYQUALINFO
, (°), (vÆ), (i))

	)

1043 
	#sk_POLICYQUALINFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICYQUALINFO
, (°), (cmp))

	)

1044 
	#sk_POLICYQUALINFO_dup
(
°
Ë
	`SKM_sk_dup
(
POLICYQUALINFO
, st)

	)

1045 
	#sk_POLICYQUALINFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICYQUALINFO
, (°), (‰ì_func))

	)

1046 
	#sk_POLICYQUALINFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICYQUALINFO
, (°))

	)

1047 
	#sk_POLICYQUALINFO_p›
(
°
Ë
	`SKM_sk_p›
(
POLICYQUALINFO
, (°))

	)

1048 
	#sk_POLICYQUALINFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICYQUALINFO
, (°))

	)

1049 
	#sk_POLICYQUALINFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICYQUALINFO
, (°))

	)

1051 
	#sk_POLICY_MAPPING_√w
(
°
Ë
	`SKM_sk_√w
(
POLICY_MAPPING
, (°))

	)

1052 
	#sk_POLICY_MAPPING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICY_MAPPING
)

	)

1053 
	#sk_POLICY_MAPPING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICY_MAPPING
, (°))

	)

1054 
	#sk_POLICY_MAPPING_num
(
°
Ë
	`SKM_sk_num
(
POLICY_MAPPING
, (°))

	)

1055 
	#sk_POLICY_MAPPING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICY_MAPPING
, (°), (i))

	)

1056 
	#sk_POLICY_MAPPING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICY_MAPPING
, (°), (i), (vÆ))

	)

1057 
	#sk_POLICY_MAPPING_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICY_MAPPING
, (°))

	)

1058 
	#sk_POLICY_MAPPING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICY_MAPPING
, (°), (vÆ))

	)

1059 
	#sk_POLICY_MAPPING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICY_MAPPING
, (°), (vÆ))

	)

1060 
	#sk_POLICY_MAPPING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICY_MAPPING
, (°), (vÆ))

	)

1061 
	#sk_POLICY_MAPPING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICY_MAPPING
, (°), (vÆ))

	)

1062 
	#sk_POLICY_MAPPING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICY_MAPPING
, (°), (i))

	)

1063 
	#sk_POLICY_MAPPING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICY_MAPPING
, (°), (±r))

	)

1064 
	#sk_POLICY_MAPPING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICY_MAPPING
, (°), (vÆ), (i))

	)

1065 
	#sk_POLICY_MAPPING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICY_MAPPING
, (°), (cmp))

	)

1066 
	#sk_POLICY_MAPPING_dup
(
°
Ë
	`SKM_sk_dup
(
POLICY_MAPPING
, st)

	)

1067 
	#sk_POLICY_MAPPING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICY_MAPPING
, (°), (‰ì_func))

	)

1068 
	#sk_POLICY_MAPPING_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICY_MAPPING
, (°))

	)

1069 
	#sk_POLICY_MAPPING_p›
(
°
Ë
	`SKM_sk_p›
(
POLICY_MAPPING
, (°))

	)

1070 
	#sk_POLICY_MAPPING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICY_MAPPING
, (°))

	)

1071 
	#sk_POLICY_MAPPING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICY_MAPPING
, (°))

	)

1073 
	#sk_SSL_CIPHER_√w
(
°
Ë
	`SKM_sk_√w
(
SSL_CIPHER
, (°))

	)

1074 
	#sk_SSL_CIPHER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SSL_CIPHER
)

	)

1075 
	#sk_SSL_CIPHER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SSL_CIPHER
, (°))

	)

1076 
	#sk_SSL_CIPHER_num
(
°
Ë
	`SKM_sk_num
(
SSL_CIPHER
, (°))

	)

1077 
	#sk_SSL_CIPHER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SSL_CIPHER
, (°), (i))

	)

1078 
	#sk_SSL_CIPHER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SSL_CIPHER
, (°), (i), (vÆ))

	)

1079 
	#sk_SSL_CIPHER_zîo
(
°
Ë
	`SKM_sk_zîo
(
SSL_CIPHER
, (°))

	)

1080 
	#sk_SSL_CIPHER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SSL_CIPHER
, (°), (vÆ))

	)

1081 
	#sk_SSL_CIPHER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SSL_CIPHER
, (°), (vÆ))

	)

1082 
	#sk_SSL_CIPHER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SSL_CIPHER
, (°), (vÆ))

	)

1083 
	#sk_SSL_CIPHER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SSL_CIPHER
, (°), (vÆ))

	)

1084 
	#sk_SSL_CIPHER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SSL_CIPHER
, (°), (i))

	)

1085 
	#sk_SSL_CIPHER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SSL_CIPHER
, (°), (±r))

	)

1086 
	#sk_SSL_CIPHER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SSL_CIPHER
, (°), (vÆ), (i))

	)

1087 
	#sk_SSL_CIPHER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SSL_CIPHER
, (°), (cmp))

	)

1088 
	#sk_SSL_CIPHER_dup
(
°
Ë
	`SKM_sk_dup
(
SSL_CIPHER
, st)

	)

1089 
	#sk_SSL_CIPHER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SSL_CIPHER
, (°), (‰ì_func))

	)

1090 
	#sk_SSL_CIPHER_shi·
(
°
Ë
	`SKM_sk_shi·
(
SSL_CIPHER
, (°))

	)

1091 
	#sk_SSL_CIPHER_p›
(
°
Ë
	`SKM_sk_p›
(
SSL_CIPHER
, (°))

	)

1092 
	#sk_SSL_CIPHER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SSL_CIPHER
, (°))

	)

1093 
	#sk_SSL_CIPHER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SSL_CIPHER
, (°))

	)

1095 
	#sk_SSL_COMP_√w
(
°
Ë
	`SKM_sk_√w
(
SSL_COMP
, (°))

	)

1096 
	#sk_SSL_COMP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SSL_COMP
)

	)

1097 
	#sk_SSL_COMP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SSL_COMP
, (°))

	)

1098 
	#sk_SSL_COMP_num
(
°
Ë
	`SKM_sk_num
(
SSL_COMP
, (°))

	)

1099 
	#sk_SSL_COMP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SSL_COMP
, (°), (i))

	)

1100 
	#sk_SSL_COMP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SSL_COMP
, (°), (i), (vÆ))

	)

1101 
	#sk_SSL_COMP_zîo
(
°
Ë
	`SKM_sk_zîo
(
SSL_COMP
, (°))

	)

1102 
	#sk_SSL_COMP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SSL_COMP
, (°), (vÆ))

	)

1103 
	#sk_SSL_COMP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SSL_COMP
, (°), (vÆ))

	)

1104 
	#sk_SSL_COMP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SSL_COMP
, (°), (vÆ))

	)

1105 
	#sk_SSL_COMP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SSL_COMP
, (°), (vÆ))

	)

1106 
	#sk_SSL_COMP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SSL_COMP
, (°), (i))

	)

1107 
	#sk_SSL_COMP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SSL_COMP
, (°), (±r))

	)

1108 
	#sk_SSL_COMP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SSL_COMP
, (°), (vÆ), (i))

	)

1109 
	#sk_SSL_COMP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SSL_COMP
, (°), (cmp))

	)

1110 
	#sk_SSL_COMP_dup
(
°
Ë
	`SKM_sk_dup
(
SSL_COMP
, st)

	)

1111 
	#sk_SSL_COMP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SSL_COMP
, (°), (‰ì_func))

	)

1112 
	#sk_SSL_COMP_shi·
(
°
Ë
	`SKM_sk_shi·
(
SSL_COMP
, (°))

	)

1113 
	#sk_SSL_COMP_p›
(
°
Ë
	`SKM_sk_p›
(
SSL_COMP
, (°))

	)

1114 
	#sk_SSL_COMP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SSL_COMP
, (°))

	)

1115 
	#sk_SSL_COMP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SSL_COMP
, (°))

	)

1117 
	#sk_STORE_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
STORE_OBJECT
, (°))

	)

1118 
	#sk_STORE_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
STORE_OBJECT
)

	)

1119 
	#sk_STORE_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
STORE_OBJECT
, (°))

	)

1120 
	#sk_STORE_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
STORE_OBJECT
, (°))

	)

1121 
	#sk_STORE_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
STORE_OBJECT
, (°), (i))

	)

1122 
	#sk_STORE_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
STORE_OBJECT
, (°), (i), (vÆ))

	)

1123 
	#sk_STORE_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
STORE_OBJECT
, (°))

	)

1124 
	#sk_STORE_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
STORE_OBJECT
, (°), (vÆ))

	)

1125 
	#sk_STORE_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
STORE_OBJECT
, (°), (vÆ))

	)

1126 
	#sk_STORE_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
STORE_OBJECT
, (°), (vÆ))

	)

1127 
	#sk_STORE_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
STORE_OBJECT
, (°), (vÆ))

	)

1128 
	#sk_STORE_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
STORE_OBJECT
, (°), (i))

	)

1129 
	#sk_STORE_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
STORE_OBJECT
, (°), (±r))

	)

1130 
	#sk_STORE_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
STORE_OBJECT
, (°), (vÆ), (i))

	)

1131 
	#sk_STORE_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
STORE_OBJECT
, (°), (cmp))

	)

1132 
	#sk_STORE_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
STORE_OBJECT
, st)

	)

1133 
	#sk_STORE_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
STORE_OBJECT
, (°), (‰ì_func))

	)

1134 
	#sk_STORE_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
STORE_OBJECT
, (°))

	)

1135 
	#sk_STORE_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
STORE_OBJECT
, (°))

	)

1136 
	#sk_STORE_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
STORE_OBJECT
, (°))

	)

1137 
	#sk_STORE_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
STORE_OBJECT
, (°))

	)

1139 
	#sk_SXNETID_√w
(
°
Ë
	`SKM_sk_√w
(
SXNETID
, (°))

	)

1140 
	#sk_SXNETID_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SXNETID
)

	)

1141 
	#sk_SXNETID_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SXNETID
, (°))

	)

1142 
	#sk_SXNETID_num
(
°
Ë
	`SKM_sk_num
(
SXNETID
, (°))

	)

1143 
	#sk_SXNETID_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SXNETID
, (°), (i))

	)

1144 
	#sk_SXNETID_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SXNETID
, (°), (i), (vÆ))

	)

1145 
	#sk_SXNETID_zîo
(
°
Ë
	`SKM_sk_zîo
(
SXNETID
, (°))

	)

1146 
	#sk_SXNETID_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SXNETID
, (°), (vÆ))

	)

1147 
	#sk_SXNETID_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SXNETID
, (°), (vÆ))

	)

1148 
	#sk_SXNETID_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SXNETID
, (°), (vÆ))

	)

1149 
	#sk_SXNETID_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SXNETID
, (°), (vÆ))

	)

1150 
	#sk_SXNETID_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SXNETID
, (°), (i))

	)

1151 
	#sk_SXNETID_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SXNETID
, (°), (±r))

	)

1152 
	#sk_SXNETID_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SXNETID
, (°), (vÆ), (i))

	)

1153 
	#sk_SXNETID_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SXNETID
, (°), (cmp))

	)

1154 
	#sk_SXNETID_dup
(
°
Ë
	`SKM_sk_dup
(
SXNETID
, st)

	)

1155 
	#sk_SXNETID_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SXNETID
, (°), (‰ì_func))

	)

1156 
	#sk_SXNETID_shi·
(
°
Ë
	`SKM_sk_shi·
(
SXNETID
, (°))

	)

1157 
	#sk_SXNETID_p›
(
°
Ë
	`SKM_sk_p›
(
SXNETID
, (°))

	)

1158 
	#sk_SXNETID_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SXNETID
, (°))

	)

1159 
	#sk_SXNETID_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SXNETID
, (°))

	)

1161 
	#sk_UI_STRING_√w
(
°
Ë
	`SKM_sk_√w
(
UI_STRING
, (°))

	)

1162 
	#sk_UI_STRING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
UI_STRING
)

	)

1163 
	#sk_UI_STRING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
UI_STRING
, (°))

	)

1164 
	#sk_UI_STRING_num
(
°
Ë
	`SKM_sk_num
(
UI_STRING
, (°))

	)

1165 
	#sk_UI_STRING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
UI_STRING
, (°), (i))

	)

1166 
	#sk_UI_STRING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
UI_STRING
, (°), (i), (vÆ))

	)

1167 
	#sk_UI_STRING_zîo
(
°
Ë
	`SKM_sk_zîo
(
UI_STRING
, (°))

	)

1168 
	#sk_UI_STRING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
UI_STRING
, (°), (vÆ))

	)

1169 
	#sk_UI_STRING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
UI_STRING
, (°), (vÆ))

	)

1170 
	#sk_UI_STRING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
UI_STRING
, (°), (vÆ))

	)

1171 
	#sk_UI_STRING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
UI_STRING
, (°), (vÆ))

	)

1172 
	#sk_UI_STRING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
UI_STRING
, (°), (i))

	)

1173 
	#sk_UI_STRING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
UI_STRING
, (°), (±r))

	)

1174 
	#sk_UI_STRING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
UI_STRING
, (°), (vÆ), (i))

	)

1175 
	#sk_UI_STRING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
UI_STRING
, (°), (cmp))

	)

1176 
	#sk_UI_STRING_dup
(
°
Ë
	`SKM_sk_dup
(
UI_STRING
, st)

	)

1177 
	#sk_UI_STRING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
UI_STRING
, (°), (‰ì_func))

	)

1178 
	#sk_UI_STRING_shi·
(
°
Ë
	`SKM_sk_shi·
(
UI_STRING
, (°))

	)

1179 
	#sk_UI_STRING_p›
(
°
Ë
	`SKM_sk_p›
(
UI_STRING
, (°))

	)

1180 
	#sk_UI_STRING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
UI_STRING
, (°))

	)

1181 
	#sk_UI_STRING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
UI_STRING
, (°))

	)

1183 
	#sk_X509_√w
(
°
Ë
	`SKM_sk_√w
(
X509
, (°))

	)

1184 
	#sk_X509_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509
)

	)

1185 
	#sk_X509_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509
, (°))

	)

1186 
	#sk_X509_num
(
°
Ë
	`SKM_sk_num
(
X509
, (°))

	)

1187 
	#sk_X509_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509
, (°), (i))

	)

1188 
	#sk_X509_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509
, (°), (i), (vÆ))

	)

1189 
	#sk_X509_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509
, (°))

	)

1190 
	#sk_X509_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509
, (°), (vÆ))

	)

1191 
	#sk_X509_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509
, (°), (vÆ))

	)

1192 
	#sk_X509_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509
, (°), (vÆ))

	)

1193 
	#sk_X509_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509
, (°), (vÆ))

	)

1194 
	#sk_X509_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509
, (°), (i))

	)

1195 
	#sk_X509_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509
, (°), (±r))

	)

1196 
	#sk_X509_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509
, (°), (vÆ), (i))

	)

1197 
	#sk_X509_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509
, (°), (cmp))

	)

1198 
	#sk_X509_dup
(
°
Ë
	`SKM_sk_dup
(
X509
, st)

	)

1199 
	#sk_X509_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509
, (°), (‰ì_func))

	)

1200 
	#sk_X509_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509
, (°))

	)

1201 
	#sk_X509_p›
(
°
Ë
	`SKM_sk_p›
(
X509
, (°))

	)

1202 
	#sk_X509_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509
, (°))

	)

1203 
	#sk_X509_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509
, (°))

	)

1205 
	#sk_X509V3_EXT_METHOD_√w
(
°
Ë
	`SKM_sk_√w
(
X509V3_EXT_METHOD
, (°))

	)

1206 
	#sk_X509V3_EXT_METHOD_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509V3_EXT_METHOD
)

	)

1207 
	#sk_X509V3_EXT_METHOD_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509V3_EXT_METHOD
, (°))

	)

1208 
	#sk_X509V3_EXT_METHOD_num
(
°
Ë
	`SKM_sk_num
(
X509V3_EXT_METHOD
, (°))

	)

1209 
	#sk_X509V3_EXT_METHOD_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509V3_EXT_METHOD
, (°), (i))

	)

1210 
	#sk_X509V3_EXT_METHOD_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509V3_EXT_METHOD
, (°), (i), (vÆ))

	)

1211 
	#sk_X509V3_EXT_METHOD_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509V3_EXT_METHOD
, (°))

	)

1212 
	#sk_X509V3_EXT_METHOD_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1213 
	#sk_X509V3_EXT_METHOD_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1214 
	#sk_X509V3_EXT_METHOD_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1215 
	#sk_X509V3_EXT_METHOD_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1216 
	#sk_X509V3_EXT_METHOD_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509V3_EXT_METHOD
, (°), (i))

	)

1217 
	#sk_X509V3_EXT_METHOD_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509V3_EXT_METHOD
, (°), (±r))

	)

1218 
	#sk_X509V3_EXT_METHOD_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509V3_EXT_METHOD
, (°), (vÆ), (i))

	)

1219 
	#sk_X509V3_EXT_METHOD_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509V3_EXT_METHOD
, (°), (cmp))

	)

1220 
	#sk_X509V3_EXT_METHOD_dup
(
°
Ë
	`SKM_sk_dup
(
X509V3_EXT_METHOD
, st)

	)

1221 
	#sk_X509V3_EXT_METHOD_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509V3_EXT_METHOD
, (°), (‰ì_func))

	)

1222 
	#sk_X509V3_EXT_METHOD_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509V3_EXT_METHOD
, (°))

	)

1223 
	#sk_X509V3_EXT_METHOD_p›
(
°
Ë
	`SKM_sk_p›
(
X509V3_EXT_METHOD
, (°))

	)

1224 
	#sk_X509V3_EXT_METHOD_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509V3_EXT_METHOD
, (°))

	)

1225 
	#sk_X509V3_EXT_METHOD_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509V3_EXT_METHOD
, (°))

	)

1227 
	#sk_X509_ALGOR_√w
(
°
Ë
	`SKM_sk_√w
(
X509_ALGOR
, (°))

	)

1228 
	#sk_X509_ALGOR_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_ALGOR
)

	)

1229 
	#sk_X509_ALGOR_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_ALGOR
, (°))

	)

1230 
	#sk_X509_ALGOR_num
(
°
Ë
	`SKM_sk_num
(
X509_ALGOR
, (°))

	)

1231 
	#sk_X509_ALGOR_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_ALGOR
, (°), (i))

	)

1232 
	#sk_X509_ALGOR_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_ALGOR
, (°), (i), (vÆ))

	)

1233 
	#sk_X509_ALGOR_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_ALGOR
, (°))

	)

1234 
	#sk_X509_ALGOR_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_ALGOR
, (°), (vÆ))

	)

1235 
	#sk_X509_ALGOR_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_ALGOR
, (°), (vÆ))

	)

1236 
	#sk_X509_ALGOR_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_ALGOR
, (°), (vÆ))

	)

1237 
	#sk_X509_ALGOR_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_ALGOR
, (°), (vÆ))

	)

1238 
	#sk_X509_ALGOR_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_ALGOR
, (°), (i))

	)

1239 
	#sk_X509_ALGOR_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_ALGOR
, (°), (±r))

	)

1240 
	#sk_X509_ALGOR_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_ALGOR
, (°), (vÆ), (i))

	)

1241 
	#sk_X509_ALGOR_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_ALGOR
, (°), (cmp))

	)

1242 
	#sk_X509_ALGOR_dup
(
°
Ë
	`SKM_sk_dup
(
X509_ALGOR
, st)

	)

1243 
	#sk_X509_ALGOR_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_ALGOR
, (°), (‰ì_func))

	)

1244 
	#sk_X509_ALGOR_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_ALGOR
, (°))

	)

1245 
	#sk_X509_ALGOR_p›
(
°
Ë
	`SKM_sk_p›
(
X509_ALGOR
, (°))

	)

1246 
	#sk_X509_ALGOR_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_ALGOR
, (°))

	)

1247 
	#sk_X509_ALGOR_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_ALGOR
, (°))

	)

1249 
	#sk_X509_ATTRIBUTE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_ATTRIBUTE
, (°))

	)

1250 
	#sk_X509_ATTRIBUTE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_ATTRIBUTE
)

	)

1251 
	#sk_X509_ATTRIBUTE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_ATTRIBUTE
, (°))

	)

1252 
	#sk_X509_ATTRIBUTE_num
(
°
Ë
	`SKM_sk_num
(
X509_ATTRIBUTE
, (°))

	)

1253 
	#sk_X509_ATTRIBUTE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_ATTRIBUTE
, (°), (i))

	)

1254 
	#sk_X509_ATTRIBUTE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_ATTRIBUTE
, (°), (i), (vÆ))

	)

1255 
	#sk_X509_ATTRIBUTE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_ATTRIBUTE
, (°))

	)

1256 
	#sk_X509_ATTRIBUTE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1257 
	#sk_X509_ATTRIBUTE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1258 
	#sk_X509_ATTRIBUTE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1259 
	#sk_X509_ATTRIBUTE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1260 
	#sk_X509_ATTRIBUTE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_ATTRIBUTE
, (°), (i))

	)

1261 
	#sk_X509_ATTRIBUTE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_ATTRIBUTE
, (°), (±r))

	)

1262 
	#sk_X509_ATTRIBUTE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_ATTRIBUTE
, (°), (vÆ), (i))

	)

1263 
	#sk_X509_ATTRIBUTE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_ATTRIBUTE
, (°), (cmp))

	)

1264 
	#sk_X509_ATTRIBUTE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_ATTRIBUTE
, st)

	)

1265 
	#sk_X509_ATTRIBUTE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_ATTRIBUTE
, (°), (‰ì_func))

	)

1266 
	#sk_X509_ATTRIBUTE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_ATTRIBUTE
, (°))

	)

1267 
	#sk_X509_ATTRIBUTE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_ATTRIBUTE
, (°))

	)

1268 
	#sk_X509_ATTRIBUTE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_ATTRIBUTE
, (°))

	)

1269 
	#sk_X509_ATTRIBUTE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_ATTRIBUTE
, (°))

	)

1271 
	#sk_X509_CRL_√w
(
°
Ë
	`SKM_sk_√w
(
X509_CRL
, (°))

	)

1272 
	#sk_X509_CRL_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_CRL
)

	)

1273 
	#sk_X509_CRL_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_CRL
, (°))

	)

1274 
	#sk_X509_CRL_num
(
°
Ë
	`SKM_sk_num
(
X509_CRL
, (°))

	)

1275 
	#sk_X509_CRL_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_CRL
, (°), (i))

	)

1276 
	#sk_X509_CRL_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_CRL
, (°), (i), (vÆ))

	)

1277 
	#sk_X509_CRL_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_CRL
, (°))

	)

1278 
	#sk_X509_CRL_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_CRL
, (°), (vÆ))

	)

1279 
	#sk_X509_CRL_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_CRL
, (°), (vÆ))

	)

1280 
	#sk_X509_CRL_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_CRL
, (°), (vÆ))

	)

1281 
	#sk_X509_CRL_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_CRL
, (°), (vÆ))

	)

1282 
	#sk_X509_CRL_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_CRL
, (°), (i))

	)

1283 
	#sk_X509_CRL_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_CRL
, (°), (±r))

	)

1284 
	#sk_X509_CRL_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_CRL
, (°), (vÆ), (i))

	)

1285 
	#sk_X509_CRL_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_CRL
, (°), (cmp))

	)

1286 
	#sk_X509_CRL_dup
(
°
Ë
	`SKM_sk_dup
(
X509_CRL
, st)

	)

1287 
	#sk_X509_CRL_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_CRL
, (°), (‰ì_func))

	)

1288 
	#sk_X509_CRL_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_CRL
, (°))

	)

1289 
	#sk_X509_CRL_p›
(
°
Ë
	`SKM_sk_p›
(
X509_CRL
, (°))

	)

1290 
	#sk_X509_CRL_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_CRL
, (°))

	)

1291 
	#sk_X509_CRL_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_CRL
, (°))

	)

1293 
	#sk_X509_EXTENSION_√w
(
°
Ë
	`SKM_sk_√w
(
X509_EXTENSION
, (°))

	)

1294 
	#sk_X509_EXTENSION_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_EXTENSION
)

	)

1295 
	#sk_X509_EXTENSION_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_EXTENSION
, (°))

	)

1296 
	#sk_X509_EXTENSION_num
(
°
Ë
	`SKM_sk_num
(
X509_EXTENSION
, (°))

	)

1297 
	#sk_X509_EXTENSION_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_EXTENSION
, (°), (i))

	)

1298 
	#sk_X509_EXTENSION_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_EXTENSION
, (°), (i), (vÆ))

	)

1299 
	#sk_X509_EXTENSION_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_EXTENSION
, (°))

	)

1300 
	#sk_X509_EXTENSION_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_EXTENSION
, (°), (vÆ))

	)

1301 
	#sk_X509_EXTENSION_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_EXTENSION
, (°), (vÆ))

	)

1302 
	#sk_X509_EXTENSION_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_EXTENSION
, (°), (vÆ))

	)

1303 
	#sk_X509_EXTENSION_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_EXTENSION
, (°), (vÆ))

	)

1304 
	#sk_X509_EXTENSION_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_EXTENSION
, (°), (i))

	)

1305 
	#sk_X509_EXTENSION_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_EXTENSION
, (°), (±r))

	)

1306 
	#sk_X509_EXTENSION_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_EXTENSION
, (°), (vÆ), (i))

	)

1307 
	#sk_X509_EXTENSION_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_EXTENSION
, (°), (cmp))

	)

1308 
	#sk_X509_EXTENSION_dup
(
°
Ë
	`SKM_sk_dup
(
X509_EXTENSION
, st)

	)

1309 
	#sk_X509_EXTENSION_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_EXTENSION
, (°), (‰ì_func))

	)

1310 
	#sk_X509_EXTENSION_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_EXTENSION
, (°))

	)

1311 
	#sk_X509_EXTENSION_p›
(
°
Ë
	`SKM_sk_p›
(
X509_EXTENSION
, (°))

	)

1312 
	#sk_X509_EXTENSION_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_EXTENSION
, (°))

	)

1313 
	#sk_X509_EXTENSION_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_EXTENSION
, (°))

	)

1315 
	#sk_X509_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
X509_INFO
, (°))

	)

1316 
	#sk_X509_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_INFO
)

	)

1317 
	#sk_X509_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_INFO
, (°))

	)

1318 
	#sk_X509_INFO_num
(
°
Ë
	`SKM_sk_num
(
X509_INFO
, (°))

	)

1319 
	#sk_X509_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_INFO
, (°), (i))

	)

1320 
	#sk_X509_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_INFO
, (°), (i), (vÆ))

	)

1321 
	#sk_X509_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_INFO
, (°))

	)

1322 
	#sk_X509_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_INFO
, (°), (vÆ))

	)

1323 
	#sk_X509_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_INFO
, (°), (vÆ))

	)

1324 
	#sk_X509_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_INFO
, (°), (vÆ))

	)

1325 
	#sk_X509_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_INFO
, (°), (vÆ))

	)

1326 
	#sk_X509_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_INFO
, (°), (i))

	)

1327 
	#sk_X509_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_INFO
, (°), (±r))

	)

1328 
	#sk_X509_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_INFO
, (°), (vÆ), (i))

	)

1329 
	#sk_X509_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_INFO
, (°), (cmp))

	)

1330 
	#sk_X509_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
X509_INFO
, st)

	)

1331 
	#sk_X509_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_INFO
, (°), (‰ì_func))

	)

1332 
	#sk_X509_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_INFO
, (°))

	)

1333 
	#sk_X509_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
X509_INFO
, (°))

	)

1334 
	#sk_X509_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_INFO
, (°))

	)

1335 
	#sk_X509_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_INFO
, (°))

	)

1337 
	#sk_X509_LOOKUP_√w
(
°
Ë
	`SKM_sk_√w
(
X509_LOOKUP
, (°))

	)

1338 
	#sk_X509_LOOKUP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_LOOKUP
)

	)

1339 
	#sk_X509_LOOKUP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_LOOKUP
, (°))

	)

1340 
	#sk_X509_LOOKUP_num
(
°
Ë
	`SKM_sk_num
(
X509_LOOKUP
, (°))

	)

1341 
	#sk_X509_LOOKUP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_LOOKUP
, (°), (i))

	)

1342 
	#sk_X509_LOOKUP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_LOOKUP
, (°), (i), (vÆ))

	)

1343 
	#sk_X509_LOOKUP_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_LOOKUP
, (°))

	)

1344 
	#sk_X509_LOOKUP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_LOOKUP
, (°), (vÆ))

	)

1345 
	#sk_X509_LOOKUP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_LOOKUP
, (°), (vÆ))

	)

1346 
	#sk_X509_LOOKUP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_LOOKUP
, (°), (vÆ))

	)

1347 
	#sk_X509_LOOKUP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_LOOKUP
, (°), (vÆ))

	)

1348 
	#sk_X509_LOOKUP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_LOOKUP
, (°), (i))

	)

1349 
	#sk_X509_LOOKUP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_LOOKUP
, (°), (±r))

	)

1350 
	#sk_X509_LOOKUP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_LOOKUP
, (°), (vÆ), (i))

	)

1351 
	#sk_X509_LOOKUP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_LOOKUP
, (°), (cmp))

	)

1352 
	#sk_X509_LOOKUP_dup
(
°
Ë
	`SKM_sk_dup
(
X509_LOOKUP
, st)

	)

1353 
	#sk_X509_LOOKUP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_LOOKUP
, (°), (‰ì_func))

	)

1354 
	#sk_X509_LOOKUP_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_LOOKUP
, (°))

	)

1355 
	#sk_X509_LOOKUP_p›
(
°
Ë
	`SKM_sk_p›
(
X509_LOOKUP
, (°))

	)

1356 
	#sk_X509_LOOKUP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_LOOKUP
, (°))

	)

1357 
	#sk_X509_LOOKUP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_LOOKUP
, (°))

	)

1359 
	#sk_X509_NAME_√w
(
°
Ë
	`SKM_sk_√w
(
X509_NAME
, (°))

	)

1360 
	#sk_X509_NAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_NAME
)

	)

1361 
	#sk_X509_NAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_NAME
, (°))

	)

1362 
	#sk_X509_NAME_num
(
°
Ë
	`SKM_sk_num
(
X509_NAME
, (°))

	)

1363 
	#sk_X509_NAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_NAME
, (°), (i))

	)

1364 
	#sk_X509_NAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_NAME
, (°), (i), (vÆ))

	)

1365 
	#sk_X509_NAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_NAME
, (°))

	)

1366 
	#sk_X509_NAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_NAME
, (°), (vÆ))

	)

1367 
	#sk_X509_NAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_NAME
, (°), (vÆ))

	)

1368 
	#sk_X509_NAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_NAME
, (°), (vÆ))

	)

1369 
	#sk_X509_NAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_NAME
, (°), (vÆ))

	)

1370 
	#sk_X509_NAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_NAME
, (°), (i))

	)

1371 
	#sk_X509_NAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_NAME
, (°), (±r))

	)

1372 
	#sk_X509_NAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_NAME
, (°), (vÆ), (i))

	)

1373 
	#sk_X509_NAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_NAME
, (°), (cmp))

	)

1374 
	#sk_X509_NAME_dup
(
°
Ë
	`SKM_sk_dup
(
X509_NAME
, st)

	)

1375 
	#sk_X509_NAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_NAME
, (°), (‰ì_func))

	)

1376 
	#sk_X509_NAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_NAME
, (°))

	)

1377 
	#sk_X509_NAME_p›
(
°
Ë
	`SKM_sk_p›
(
X509_NAME
, (°))

	)

1378 
	#sk_X509_NAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_NAME
, (°))

	)

1379 
	#sk_X509_NAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_NAME
, (°))

	)

1381 
	#sk_X509_NAME_ENTRY_√w
(
°
Ë
	`SKM_sk_√w
(
X509_NAME_ENTRY
, (°))

	)

1382 
	#sk_X509_NAME_ENTRY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_NAME_ENTRY
)

	)

1383 
	#sk_X509_NAME_ENTRY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_NAME_ENTRY
, (°))

	)

1384 
	#sk_X509_NAME_ENTRY_num
(
°
Ë
	`SKM_sk_num
(
X509_NAME_ENTRY
, (°))

	)

1385 
	#sk_X509_NAME_ENTRY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_NAME_ENTRY
, (°), (i))

	)

1386 
	#sk_X509_NAME_ENTRY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_NAME_ENTRY
, (°), (i), (vÆ))

	)

1387 
	#sk_X509_NAME_ENTRY_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_NAME_ENTRY
, (°))

	)

1388 
	#sk_X509_NAME_ENTRY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1389 
	#sk_X509_NAME_ENTRY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1390 
	#sk_X509_NAME_ENTRY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1391 
	#sk_X509_NAME_ENTRY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1392 
	#sk_X509_NAME_ENTRY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_NAME_ENTRY
, (°), (i))

	)

1393 
	#sk_X509_NAME_ENTRY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_NAME_ENTRY
, (°), (±r))

	)

1394 
	#sk_X509_NAME_ENTRY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_NAME_ENTRY
, (°), (vÆ), (i))

	)

1395 
	#sk_X509_NAME_ENTRY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_NAME_ENTRY
, (°), (cmp))

	)

1396 
	#sk_X509_NAME_ENTRY_dup
(
°
Ë
	`SKM_sk_dup
(
X509_NAME_ENTRY
, st)

	)

1397 
	#sk_X509_NAME_ENTRY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_NAME_ENTRY
, (°), (‰ì_func))

	)

1398 
	#sk_X509_NAME_ENTRY_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_NAME_ENTRY
, (°))

	)

1399 
	#sk_X509_NAME_ENTRY_p›
(
°
Ë
	`SKM_sk_p›
(
X509_NAME_ENTRY
, (°))

	)

1400 
	#sk_X509_NAME_ENTRY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_NAME_ENTRY
, (°))

	)

1401 
	#sk_X509_NAME_ENTRY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_NAME_ENTRY
, (°))

	)

1403 
	#sk_X509_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
X509_OBJECT
, (°))

	)

1404 
	#sk_X509_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_OBJECT
)

	)

1405 
	#sk_X509_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_OBJECT
, (°))

	)

1406 
	#sk_X509_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
X509_OBJECT
, (°))

	)

1407 
	#sk_X509_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_OBJECT
, (°), (i))

	)

1408 
	#sk_X509_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_OBJECT
, (°), (i), (vÆ))

	)

1409 
	#sk_X509_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_OBJECT
, (°))

	)

1410 
	#sk_X509_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_OBJECT
, (°), (vÆ))

	)

1411 
	#sk_X509_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_OBJECT
, (°), (vÆ))

	)

1412 
	#sk_X509_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_OBJECT
, (°), (vÆ))

	)

1413 
	#sk_X509_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_OBJECT
, (°), (vÆ))

	)

1414 
	#sk_X509_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_OBJECT
, (°), (i))

	)

1415 
	#sk_X509_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_OBJECT
, (°), (±r))

	)

1416 
	#sk_X509_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_OBJECT
, (°), (vÆ), (i))

	)

1417 
	#sk_X509_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_OBJECT
, (°), (cmp))

	)

1418 
	#sk_X509_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
X509_OBJECT
, st)

	)

1419 
	#sk_X509_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_OBJECT
, (°), (‰ì_func))

	)

1420 
	#sk_X509_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_OBJECT
, (°))

	)

1421 
	#sk_X509_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
X509_OBJECT
, (°))

	)

1422 
	#sk_X509_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_OBJECT
, (°))

	)

1423 
	#sk_X509_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_OBJECT
, (°))

	)

1425 
	#sk_X509_POLICY_DATA_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_DATA
, (°))

	)

1426 
	#sk_X509_POLICY_DATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_DATA
)

	)

1427 
	#sk_X509_POLICY_DATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_DATA
, (°))

	)

1428 
	#sk_X509_POLICY_DATA_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_DATA
, (°))

	)

1429 
	#sk_X509_POLICY_DATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_DATA
, (°), (i))

	)

1430 
	#sk_X509_POLICY_DATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_DATA
, (°), (i), (vÆ))

	)

1431 
	#sk_X509_POLICY_DATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_DATA
, (°))

	)

1432 
	#sk_X509_POLICY_DATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1433 
	#sk_X509_POLICY_DATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1434 
	#sk_X509_POLICY_DATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1435 
	#sk_X509_POLICY_DATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1436 
	#sk_X509_POLICY_DATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_DATA
, (°), (i))

	)

1437 
	#sk_X509_POLICY_DATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_DATA
, (°), (±r))

	)

1438 
	#sk_X509_POLICY_DATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_DATA
, (°), (vÆ), (i))

	)

1439 
	#sk_X509_POLICY_DATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_DATA
, (°), (cmp))

	)

1440 
	#sk_X509_POLICY_DATA_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_DATA
, st)

	)

1441 
	#sk_X509_POLICY_DATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_DATA
, (°), (‰ì_func))

	)

1442 
	#sk_X509_POLICY_DATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_DATA
, (°))

	)

1443 
	#sk_X509_POLICY_DATA_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_DATA
, (°))

	)

1444 
	#sk_X509_POLICY_DATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_DATA
, (°))

	)

1445 
	#sk_X509_POLICY_DATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_DATA
, (°))

	)

1447 
	#sk_X509_POLICY_NODE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_NODE
, (°))

	)

1448 
	#sk_X509_POLICY_NODE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_NODE
)

	)

1449 
	#sk_X509_POLICY_NODE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_NODE
, (°))

	)

1450 
	#sk_X509_POLICY_NODE_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_NODE
, (°))

	)

1451 
	#sk_X509_POLICY_NODE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_NODE
, (°), (i))

	)

1452 
	#sk_X509_POLICY_NODE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_NODE
, (°), (i), (vÆ))

	)

1453 
	#sk_X509_POLICY_NODE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_NODE
, (°))

	)

1454 
	#sk_X509_POLICY_NODE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1455 
	#sk_X509_POLICY_NODE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1456 
	#sk_X509_POLICY_NODE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1457 
	#sk_X509_POLICY_NODE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1458 
	#sk_X509_POLICY_NODE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_NODE
, (°), (i))

	)

1459 
	#sk_X509_POLICY_NODE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_NODE
, (°), (±r))

	)

1460 
	#sk_X509_POLICY_NODE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_NODE
, (°), (vÆ), (i))

	)

1461 
	#sk_X509_POLICY_NODE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_NODE
, (°), (cmp))

	)

1462 
	#sk_X509_POLICY_NODE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_NODE
, st)

	)

1463 
	#sk_X509_POLICY_NODE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_NODE
, (°), (‰ì_func))

	)

1464 
	#sk_X509_POLICY_NODE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_NODE
, (°))

	)

1465 
	#sk_X509_POLICY_NODE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_NODE
, (°))

	)

1466 
	#sk_X509_POLICY_NODE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_NODE
, (°))

	)

1467 
	#sk_X509_POLICY_NODE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_NODE
, (°))

	)

1469 
	#sk_X509_POLICY_REF_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_REF
, (°))

	)

1470 
	#sk_X509_POLICY_REF_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_REF
)

	)

1471 
	#sk_X509_POLICY_REF_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_REF
, (°))

	)

1472 
	#sk_X509_POLICY_REF_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_REF
, (°))

	)

1473 
	#sk_X509_POLICY_REF_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_REF
, (°), (i))

	)

1474 
	#sk_X509_POLICY_REF_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_REF
, (°), (i), (vÆ))

	)

1475 
	#sk_X509_POLICY_REF_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_REF
, (°))

	)

1476 
	#sk_X509_POLICY_REF_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_REF
, (°), (vÆ))

	)

1477 
	#sk_X509_POLICY_REF_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_REF
, (°), (vÆ))

	)

1478 
	#sk_X509_POLICY_REF_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_REF
, (°), (vÆ))

	)

1479 
	#sk_X509_POLICY_REF_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_REF
, (°), (vÆ))

	)

1480 
	#sk_X509_POLICY_REF_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_REF
, (°), (i))

	)

1481 
	#sk_X509_POLICY_REF_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_REF
, (°), (±r))

	)

1482 
	#sk_X509_POLICY_REF_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_REF
, (°), (vÆ), (i))

	)

1483 
	#sk_X509_POLICY_REF_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_REF
, (°), (cmp))

	)

1484 
	#sk_X509_POLICY_REF_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_REF
, st)

	)

1485 
	#sk_X509_POLICY_REF_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_REF
, (°), (‰ì_func))

	)

1486 
	#sk_X509_POLICY_REF_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_REF
, (°))

	)

1487 
	#sk_X509_POLICY_REF_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_REF
, (°))

	)

1488 
	#sk_X509_POLICY_REF_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_REF
, (°))

	)

1489 
	#sk_X509_POLICY_REF_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_REF
, (°))

	)

1491 
	#sk_X509_PURPOSE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_PURPOSE
, (°))

	)

1492 
	#sk_X509_PURPOSE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_PURPOSE
)

	)

1493 
	#sk_X509_PURPOSE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_PURPOSE
, (°))

	)

1494 
	#sk_X509_PURPOSE_num
(
°
Ë
	`SKM_sk_num
(
X509_PURPOSE
, (°))

	)

1495 
	#sk_X509_PURPOSE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_PURPOSE
, (°), (i))

	)

1496 
	#sk_X509_PURPOSE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_PURPOSE
, (°), (i), (vÆ))

	)

1497 
	#sk_X509_PURPOSE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_PURPOSE
, (°))

	)

1498 
	#sk_X509_PURPOSE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_PURPOSE
, (°), (vÆ))

	)

1499 
	#sk_X509_PURPOSE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_PURPOSE
, (°), (vÆ))

	)

1500 
	#sk_X509_PURPOSE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_PURPOSE
, (°), (vÆ))

	)

1501 
	#sk_X509_PURPOSE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_PURPOSE
, (°), (vÆ))

	)

1502 
	#sk_X509_PURPOSE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_PURPOSE
, (°), (i))

	)

1503 
	#sk_X509_PURPOSE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_PURPOSE
, (°), (±r))

	)

1504 
	#sk_X509_PURPOSE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_PURPOSE
, (°), (vÆ), (i))

	)

1505 
	#sk_X509_PURPOSE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_PURPOSE
, (°), (cmp))

	)

1506 
	#sk_X509_PURPOSE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_PURPOSE
, st)

	)

1507 
	#sk_X509_PURPOSE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_PURPOSE
, (°), (‰ì_func))

	)

1508 
	#sk_X509_PURPOSE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_PURPOSE
, (°))

	)

1509 
	#sk_X509_PURPOSE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_PURPOSE
, (°))

	)

1510 
	#sk_X509_PURPOSE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_PURPOSE
, (°))

	)

1511 
	#sk_X509_PURPOSE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_PURPOSE
, (°))

	)

1513 
	#sk_X509_REVOKED_√w
(
°
Ë
	`SKM_sk_√w
(
X509_REVOKED
, (°))

	)

1514 
	#sk_X509_REVOKED_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_REVOKED
)

	)

1515 
	#sk_X509_REVOKED_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_REVOKED
, (°))

	)

1516 
	#sk_X509_REVOKED_num
(
°
Ë
	`SKM_sk_num
(
X509_REVOKED
, (°))

	)

1517 
	#sk_X509_REVOKED_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_REVOKED
, (°), (i))

	)

1518 
	#sk_X509_REVOKED_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_REVOKED
, (°), (i), (vÆ))

	)

1519 
	#sk_X509_REVOKED_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_REVOKED
, (°))

	)

1520 
	#sk_X509_REVOKED_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_REVOKED
, (°), (vÆ))

	)

1521 
	#sk_X509_REVOKED_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_REVOKED
, (°), (vÆ))

	)

1522 
	#sk_X509_REVOKED_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_REVOKED
, (°), (vÆ))

	)

1523 
	#sk_X509_REVOKED_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_REVOKED
, (°), (vÆ))

	)

1524 
	#sk_X509_REVOKED_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_REVOKED
, (°), (i))

	)

1525 
	#sk_X509_REVOKED_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_REVOKED
, (°), (±r))

	)

1526 
	#sk_X509_REVOKED_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_REVOKED
, (°), (vÆ), (i))

	)

1527 
	#sk_X509_REVOKED_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_REVOKED
, (°), (cmp))

	)

1528 
	#sk_X509_REVOKED_dup
(
°
Ë
	`SKM_sk_dup
(
X509_REVOKED
, st)

	)

1529 
	#sk_X509_REVOKED_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_REVOKED
, (°), (‰ì_func))

	)

1530 
	#sk_X509_REVOKED_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_REVOKED
, (°))

	)

1531 
	#sk_X509_REVOKED_p›
(
°
Ë
	`SKM_sk_p›
(
X509_REVOKED
, (°))

	)

1532 
	#sk_X509_REVOKED_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_REVOKED
, (°))

	)

1533 
	#sk_X509_REVOKED_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_REVOKED
, (°))

	)

1535 
	#sk_X509_TRUST_√w
(
°
Ë
	`SKM_sk_√w
(
X509_TRUST
, (°))

	)

1536 
	#sk_X509_TRUST_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_TRUST
)

	)

1537 
	#sk_X509_TRUST_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_TRUST
, (°))

	)

1538 
	#sk_X509_TRUST_num
(
°
Ë
	`SKM_sk_num
(
X509_TRUST
, (°))

	)

1539 
	#sk_X509_TRUST_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_TRUST
, (°), (i))

	)

1540 
	#sk_X509_TRUST_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_TRUST
, (°), (i), (vÆ))

	)

1541 
	#sk_X509_TRUST_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_TRUST
, (°))

	)

1542 
	#sk_X509_TRUST_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_TRUST
, (°), (vÆ))

	)

1543 
	#sk_X509_TRUST_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_TRUST
, (°), (vÆ))

	)

1544 
	#sk_X509_TRUST_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_TRUST
, (°), (vÆ))

	)

1545 
	#sk_X509_TRUST_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_TRUST
, (°), (vÆ))

	)

1546 
	#sk_X509_TRUST_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_TRUST
, (°), (i))

	)

1547 
	#sk_X509_TRUST_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_TRUST
, (°), (±r))

	)

1548 
	#sk_X509_TRUST_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_TRUST
, (°), (vÆ), (i))

	)

1549 
	#sk_X509_TRUST_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_TRUST
, (°), (cmp))

	)

1550 
	#sk_X509_TRUST_dup
(
°
Ë
	`SKM_sk_dup
(
X509_TRUST
, st)

	)

1551 
	#sk_X509_TRUST_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_TRUST
, (°), (‰ì_func))

	)

1552 
	#sk_X509_TRUST_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_TRUST
, (°))

	)

1553 
	#sk_X509_TRUST_p›
(
°
Ë
	`SKM_sk_p›
(
X509_TRUST
, (°))

	)

1554 
	#sk_X509_TRUST_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_TRUST
, (°))

	)

1555 
	#sk_X509_TRUST_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_TRUST
, (°))

	)

1557 
	#sk_X509_VERIFY_PARAM_√w
(
°
Ë
	`SKM_sk_√w
(
X509_VERIFY_PARAM
, (°))

	)

1558 
	#sk_X509_VERIFY_PARAM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_VERIFY_PARAM
)

	)

1559 
	#sk_X509_VERIFY_PARAM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_VERIFY_PARAM
, (°))

	)

1560 
	#sk_X509_VERIFY_PARAM_num
(
°
Ë
	`SKM_sk_num
(
X509_VERIFY_PARAM
, (°))

	)

1561 
	#sk_X509_VERIFY_PARAM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_VERIFY_PARAM
, (°), (i))

	)

1562 
	#sk_X509_VERIFY_PARAM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_VERIFY_PARAM
, (°), (i), (vÆ))

	)

1563 
	#sk_X509_VERIFY_PARAM_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_VERIFY_PARAM
, (°))

	)

1564 
	#sk_X509_VERIFY_PARAM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1565 
	#sk_X509_VERIFY_PARAM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1566 
	#sk_X509_VERIFY_PARAM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1567 
	#sk_X509_VERIFY_PARAM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1568 
	#sk_X509_VERIFY_PARAM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_VERIFY_PARAM
, (°), (i))

	)

1569 
	#sk_X509_VERIFY_PARAM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_VERIFY_PARAM
, (°), (±r))

	)

1570 
	#sk_X509_VERIFY_PARAM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_VERIFY_PARAM
, (°), (vÆ), (i))

	)

1571 
	#sk_X509_VERIFY_PARAM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_VERIFY_PARAM
, (°), (cmp))

	)

1572 
	#sk_X509_VERIFY_PARAM_dup
(
°
Ë
	`SKM_sk_dup
(
X509_VERIFY_PARAM
, st)

	)

1573 
	#sk_X509_VERIFY_PARAM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_VERIFY_PARAM
, (°), (‰ì_func))

	)

1574 
	#sk_X509_VERIFY_PARAM_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_VERIFY_PARAM
, (°))

	)

1575 
	#sk_X509_VERIFY_PARAM_p›
(
°
Ë
	`SKM_sk_p›
(
X509_VERIFY_PARAM
, (°))

	)

1576 
	#sk_X509_VERIFY_PARAM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_VERIFY_PARAM
, (°))

	)

1577 
	#sk_X509_VERIFY_PARAM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_VERIFY_PARAM
, (°))

	)

1579 
	#d2i_ASN1_SET_OF_ACCESS_DESCRIPTION
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1580 
	`SKM_ASN1_SET_OF_d2i
(
ACCESS_DESCRIPTION
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1581 
	#i2d_ASN1_SET_OF_ACCESS_DESCRIPTION
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1582 
	`SKM_ASN1_SET_OF_i2d
(
ACCESS_DESCRIPTION
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1583 
	#ASN1_£q_∑ck_ACCESS_DESCRIPTION
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1584 
	`SKM_ASN1_£q_∑ck
(
ACCESS_DESCRIPTION
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1585 
	#ASN1_£q_u≈ack_ACCESS_DESCRIPTION
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1586 
	`SKM_ASN1_£q_u≈ack
(
ACCESS_DESCRIPTION
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1588 
	#d2i_ASN1_SET_OF_ASN1_INTEGER
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1589 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_INTEGER
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1590 
	#i2d_ASN1_SET_OF_ASN1_INTEGER
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1591 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_INTEGER
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1592 
	#ASN1_£q_∑ck_ASN1_INTEGER
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1593 
	`SKM_ASN1_£q_∑ck
(
ASN1_INTEGER
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1594 
	#ASN1_£q_u≈ack_ASN1_INTEGER
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1595 
	`SKM_ASN1_£q_u≈ack
(
ASN1_INTEGER
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1597 
	#d2i_ASN1_SET_OF_ASN1_OBJECT
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1598 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_OBJECT
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1599 
	#i2d_ASN1_SET_OF_ASN1_OBJECT
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1600 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_OBJECT
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1601 
	#ASN1_£q_∑ck_ASN1_OBJECT
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1602 
	`SKM_ASN1_£q_∑ck
(
ASN1_OBJECT
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1603 
	#ASN1_£q_u≈ack_ASN1_OBJECT
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1604 
	`SKM_ASN1_£q_u≈ack
(
ASN1_OBJECT
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1606 
	#d2i_ASN1_SET_OF_ASN1_TYPE
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1607 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_TYPE
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1608 
	#i2d_ASN1_SET_OF_ASN1_TYPE
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1609 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_TYPE
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1610 
	#ASN1_£q_∑ck_ASN1_TYPE
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1611 
	`SKM_ASN1_£q_∑ck
(
ASN1_TYPE
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1612 
	#ASN1_£q_u≈ack_ASN1_TYPE
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1613 
	`SKM_ASN1_£q_u≈ack
(
ASN1_TYPE
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1615 
	#d2i_ASN1_SET_OF_DIST_POINT
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1616 
	`SKM_ASN1_SET_OF_d2i
(
DIST_POINT
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1617 
	#i2d_ASN1_SET_OF_DIST_POINT
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1618 
	`SKM_ASN1_SET_OF_i2d
(
DIST_POINT
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1619 
	#ASN1_£q_∑ck_DIST_POINT
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1620 
	`SKM_ASN1_£q_∑ck
(
DIST_POINT
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1621 
	#ASN1_£q_u≈ack_DIST_POINT
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1622 
	`SKM_ASN1_£q_u≈ack
(
DIST_POINT
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1624 
	#d2i_ASN1_SET_OF_GENERAL_NAME
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1625 
	`SKM_ASN1_SET_OF_d2i
(
GENERAL_NAME
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1626 
	#i2d_ASN1_SET_OF_GENERAL_NAME
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1627 
	`SKM_ASN1_SET_OF_i2d
(
GENERAL_NAME
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1628 
	#ASN1_£q_∑ck_GENERAL_NAME
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1629 
	`SKM_ASN1_£q_∑ck
(
GENERAL_NAME
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1630 
	#ASN1_£q_u≈ack_GENERAL_NAME
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1631 
	`SKM_ASN1_£q_u≈ack
(
GENERAL_NAME
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1633 
	#d2i_ASN1_SET_OF_OCSP_ONEREQ
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1634 
	`SKM_ASN1_SET_OF_d2i
(
OCSP_ONEREQ
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1635 
	#i2d_ASN1_SET_OF_OCSP_ONEREQ
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1636 
	`SKM_ASN1_SET_OF_i2d
(
OCSP_ONEREQ
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1637 
	#ASN1_£q_∑ck_OCSP_ONEREQ
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1638 
	`SKM_ASN1_£q_∑ck
(
OCSP_ONEREQ
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1639 
	#ASN1_£q_u≈ack_OCSP_ONEREQ
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1640 
	`SKM_ASN1_£q_u≈ack
(
OCSP_ONEREQ
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1642 
	#d2i_ASN1_SET_OF_OCSP_SINGLERESP
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1643 
	`SKM_ASN1_SET_OF_d2i
(
OCSP_SINGLERESP
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1644 
	#i2d_ASN1_SET_OF_OCSP_SINGLERESP
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1645 
	`SKM_ASN1_SET_OF_i2d
(
OCSP_SINGLERESP
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1646 
	#ASN1_£q_∑ck_OCSP_SINGLERESP
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1647 
	`SKM_ASN1_£q_∑ck
(
OCSP_SINGLERESP
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1648 
	#ASN1_£q_u≈ack_OCSP_SINGLERESP
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1649 
	`SKM_ASN1_£q_u≈ack
(
OCSP_SINGLERESP
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1651 
	#d2i_ASN1_SET_OF_PKCS12_SAFEBAG
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1652 
	`SKM_ASN1_SET_OF_d2i
(
PKCS12_SAFEBAG
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1653 
	#i2d_ASN1_SET_OF_PKCS12_SAFEBAG
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1654 
	`SKM_ASN1_SET_OF_i2d
(
PKCS12_SAFEBAG
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1655 
	#ASN1_£q_∑ck_PKCS12_SAFEBAG
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1656 
	`SKM_ASN1_£q_∑ck
(
PKCS12_SAFEBAG
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1657 
	#ASN1_£q_u≈ack_PKCS12_SAFEBAG
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1658 
	`SKM_ASN1_£q_u≈ack
(
PKCS12_SAFEBAG
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1660 
	#d2i_ASN1_SET_OF_PKCS7
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1661 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1662 
	#i2d_ASN1_SET_OF_PKCS7
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1663 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1664 
	#ASN1_£q_∑ck_PKCS7
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1665 
	`SKM_ASN1_£q_∑ck
(
PKCS7
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1666 
	#ASN1_£q_u≈ack_PKCS7
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1667 
	`SKM_ASN1_£q_u≈ack
(
PKCS7
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1669 
	#d2i_ASN1_SET_OF_PKCS7_RECIP_INFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1670 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7_RECIP_INFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1671 
	#i2d_ASN1_SET_OF_PKCS7_RECIP_INFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1672 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7_RECIP_INFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1673 
	#ASN1_£q_∑ck_PKCS7_RECIP_INFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1674 
	`SKM_ASN1_£q_∑ck
(
PKCS7_RECIP_INFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1675 
	#ASN1_£q_u≈ack_PKCS7_RECIP_INFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1676 
	`SKM_ASN1_£q_u≈ack
(
PKCS7_RECIP_INFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1678 
	#d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1679 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7_SIGNER_INFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1680 
	#i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1681 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7_SIGNER_INFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1682 
	#ASN1_£q_∑ck_PKCS7_SIGNER_INFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1683 
	`SKM_ASN1_£q_∑ck
(
PKCS7_SIGNER_INFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1684 
	#ASN1_£q_u≈ack_PKCS7_SIGNER_INFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1685 
	`SKM_ASN1_£q_u≈ack
(
PKCS7_SIGNER_INFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1687 
	#d2i_ASN1_SET_OF_POLICYINFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1688 
	`SKM_ASN1_SET_OF_d2i
(
POLICYINFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1689 
	#i2d_ASN1_SET_OF_POLICYINFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1690 
	`SKM_ASN1_SET_OF_i2d
(
POLICYINFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1691 
	#ASN1_£q_∑ck_POLICYINFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1692 
	`SKM_ASN1_£q_∑ck
(
POLICYINFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1693 
	#ASN1_£q_u≈ack_POLICYINFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1694 
	`SKM_ASN1_£q_u≈ack
(
POLICYINFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1696 
	#d2i_ASN1_SET_OF_POLICYQUALINFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1697 
	`SKM_ASN1_SET_OF_d2i
(
POLICYQUALINFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1698 
	#i2d_ASN1_SET_OF_POLICYQUALINFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1699 
	`SKM_ASN1_SET_OF_i2d
(
POLICYQUALINFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1700 
	#ASN1_£q_∑ck_POLICYQUALINFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1701 
	`SKM_ASN1_£q_∑ck
(
POLICYQUALINFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1702 
	#ASN1_£q_u≈ack_POLICYQUALINFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1703 
	`SKM_ASN1_£q_u≈ack
(
POLICYQUALINFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1705 
	#d2i_ASN1_SET_OF_SXNETID
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1706 
	`SKM_ASN1_SET_OF_d2i
(
SXNETID
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1707 
	#i2d_ASN1_SET_OF_SXNETID
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1708 
	`SKM_ASN1_SET_OF_i2d
(
SXNETID
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1709 
	#ASN1_£q_∑ck_SXNETID
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1710 
	`SKM_ASN1_£q_∑ck
(
SXNETID
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1711 
	#ASN1_£q_u≈ack_SXNETID
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1712 
	`SKM_ASN1_£q_u≈ack
(
SXNETID
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1714 
	#d2i_ASN1_SET_OF_X509
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1715 
	`SKM_ASN1_SET_OF_d2i
(
X509
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1716 
	#i2d_ASN1_SET_OF_X509
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1717 
	`SKM_ASN1_SET_OF_i2d
(
X509
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1718 
	#ASN1_£q_∑ck_X509
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1719 
	`SKM_ASN1_£q_∑ck
(
X509
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1720 
	#ASN1_£q_u≈ack_X509
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1721 
	`SKM_ASN1_£q_u≈ack
(
X509
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1723 
	#d2i_ASN1_SET_OF_X509_ALGOR
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1724 
	`SKM_ASN1_SET_OF_d2i
(
X509_ALGOR
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1725 
	#i2d_ASN1_SET_OF_X509_ALGOR
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1726 
	`SKM_ASN1_SET_OF_i2d
(
X509_ALGOR
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1727 
	#ASN1_£q_∑ck_X509_ALGOR
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1728 
	`SKM_ASN1_£q_∑ck
(
X509_ALGOR
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1729 
	#ASN1_£q_u≈ack_X509_ALGOR
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1730 
	`SKM_ASN1_£q_u≈ack
(
X509_ALGOR
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1732 
	#d2i_ASN1_SET_OF_X509_ATTRIBUTE
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1733 
	`SKM_ASN1_SET_OF_d2i
(
X509_ATTRIBUTE
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1734 
	#i2d_ASN1_SET_OF_X509_ATTRIBUTE
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1735 
	`SKM_ASN1_SET_OF_i2d
(
X509_ATTRIBUTE
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1736 
	#ASN1_£q_∑ck_X509_ATTRIBUTE
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1737 
	`SKM_ASN1_£q_∑ck
(
X509_ATTRIBUTE
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1738 
	#ASN1_£q_u≈ack_X509_ATTRIBUTE
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1739 
	`SKM_ASN1_£q_u≈ack
(
X509_ATTRIBUTE
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1741 
	#d2i_ASN1_SET_OF_X509_CRL
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1742 
	`SKM_ASN1_SET_OF_d2i
(
X509_CRL
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1743 
	#i2d_ASN1_SET_OF_X509_CRL
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1744 
	`SKM_ASN1_SET_OF_i2d
(
X509_CRL
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1745 
	#ASN1_£q_∑ck_X509_CRL
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1746 
	`SKM_ASN1_£q_∑ck
(
X509_CRL
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1747 
	#ASN1_£q_u≈ack_X509_CRL
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1748 
	`SKM_ASN1_£q_u≈ack
(
X509_CRL
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1750 
	#d2i_ASN1_SET_OF_X509_EXTENSION
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1751 
	`SKM_ASN1_SET_OF_d2i
(
X509_EXTENSION
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1752 
	#i2d_ASN1_SET_OF_X509_EXTENSION
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1753 
	`SKM_ASN1_SET_OF_i2d
(
X509_EXTENSION
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1754 
	#ASN1_£q_∑ck_X509_EXTENSION
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1755 
	`SKM_ASN1_£q_∑ck
(
X509_EXTENSION
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1756 
	#ASN1_£q_u≈ack_X509_EXTENSION
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1757 
	`SKM_ASN1_£q_u≈ack
(
X509_EXTENSION
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1759 
	#d2i_ASN1_SET_OF_X509_NAME_ENTRY
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1760 
	`SKM_ASN1_SET_OF_d2i
(
X509_NAME_ENTRY
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1761 
	#i2d_ASN1_SET_OF_X509_NAME_ENTRY
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1762 
	`SKM_ASN1_SET_OF_i2d
(
X509_NAME_ENTRY
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1763 
	#ASN1_£q_∑ck_X509_NAME_ENTRY
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1764 
	`SKM_ASN1_£q_∑ck
(
X509_NAME_ENTRY
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1765 
	#ASN1_£q_u≈ack_X509_NAME_ENTRY
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1766 
	`SKM_ASN1_£q_u≈ack
(
X509_NAME_ENTRY
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1768 
	#d2i_ASN1_SET_OF_X509_REVOKED
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1769 
	`SKM_ASN1_SET_OF_d2i
(
X509_REVOKED
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1770 
	#i2d_ASN1_SET_OF_X509_REVOKED
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1771 
	`SKM_ASN1_SET_OF_i2d
(
X509_REVOKED
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1772 
	#ASN1_£q_∑ck_X509_REVOKED
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1773 
	`SKM_ASN1_£q_∑ck
(
X509_REVOKED
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1774 
	#ASN1_£q_u≈ack_X509_REVOKED
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1775 
	`SKM_ASN1_£q_u≈ack
(
X509_REVOKED
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1777 
	#PKCS12_de¸y±_d2i_PKCS12_SAFEBAG
(
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

1778 
	`SKM_PKCS12_de¸y±_d2i
(
PKCS12_SAFEBAG
, (
Æg‹
), (
d2i_func
), (
‰ì_func
), (
∑ss
), (
∑s¶í
), (
o˘
), (
£q
))

	)

1780 
	#PKCS12_de¸y±_d2i_PKCS7
(
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

1781 
	`SKM_PKCS12_de¸y±_d2i
(
PKCS7
, (
Æg‹
), (
d2i_func
), (
‰ì_func
), (
∑ss
), (
∑s¶í
), (
o˘
), (
£q
))

	)

	@/usr/include/openssl/sha.h

59 #i‚de‡
HEADER_SHA_H


60 
	#HEADER_SHA_H


	)

62 
	~<›ís¶/e_os2.h
>

64 #ifde‡ 
__˝lu•lus


68 #i‡
deföed
(
OPENSSL_NO_SHA
Ë|| (deföed(
OPENSSL_NO_SHA0
Ë&& deföed(
OPENSSL_NO_SHA1
))

69 #îr‹ 
SHA
 
is
 
dißbÀd
.

72 #i‡
deföed
(
OPENSSL_FIPS
)

73 
	#FIPS_SHA_SIZE_T
 
size_t


	)

83 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
__LP32__
)

84 
	#SHA_LONG
 

	)

85 #ñi‡
deföed
(
OPENSSL_SYS_CRAY
Ë|| deföed(
__ILP64__
)

86 
	#SHA_LONG
 

	)

87 
	#SHA_LONG_LOG2
 3

	)

89 
	#SHA_LONG
 

	)

92 
	#SHA_LBLOCK
 16

	)

93 
	#SHA_CBLOCK
 (
SHA_LBLOCK
*4Ë

	)

96 
	#SHA_LAST_BLOCK
 (
SHA_CBLOCK
-8)

	)

97 
	#SHA_DIGEST_LENGTH
 20

	)

99 
	sSHA°©e_°


101 
SHA_LONG
 
h0
,
h1
,
h2
,
h3
,
h4
;

102 
SHA_LONG
 
Nl
,
Nh
;

103 
SHA_LONG
 
d©a
[
SHA_LBLOCK
];

104 
num
;

105 } 
	tSHA_CTX
;

107 #i‚de‡
OPENSSL_NO_SHA0


108 
SHA_Inô
(
SHA_CTX
 *
c
);

109 
SHA_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

110 
SHA_FöÆ
(*
md
, 
SHA_CTX
 *
c
);

111 *
SHA
(c⁄° *
d
, 
size_t
 
n
, *
md
);

112 
SHA_Tønsf‹m
(
SHA_CTX
 *
c
, c⁄° *
d©a
);

114 #i‚de‡
OPENSSL_NO_SHA1


115 
SHA1_Inô
(
SHA_CTX
 *
c
);

116 
SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

117 
SHA1_FöÆ
(*
md
, 
SHA_CTX
 *
c
);

118 *
SHA1
(c⁄° *
d
, 
size_t
 
n
, *
md
);

119 
SHA1_Tønsf‹m
(
SHA_CTX
 *
c
, c⁄° *
d©a
);

122 
	#SHA256_CBLOCK
 (
SHA_LBLOCK
*4Ë

	)

125 
	#SHA224_DIGEST_LENGTH
 28

	)

126 
	#SHA256_DIGEST_LENGTH
 32

	)

128 
	sSHA256°©e_°


130 
SHA_LONG
 
h
[8];

131 
SHA_LONG
 
Nl
,
Nh
;

132 
SHA_LONG
 
d©a
[
SHA_LBLOCK
];

133 
num
,
md_Àn
;

134 } 
	tSHA256_CTX
;

136 #i‚de‡
OPENSSL_NO_SHA256


137 
SHA224_Inô
(
SHA256_CTX
 *
c
);

138 
SHA224_Upd©e
(
SHA256_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

139 
SHA224_FöÆ
(*
md
, 
SHA256_CTX
 *
c
);

140 *
SHA224
(c⁄° *
d
, 
size_t
 
n
,*
md
);

141 
SHA256_Inô
(
SHA256_CTX
 *
c
);

142 
SHA256_Upd©e
(
SHA256_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

143 
SHA256_FöÆ
(*
md
, 
SHA256_CTX
 *
c
);

144 *
SHA256
(c⁄° *
d
, 
size_t
 
n
,*
md
);

145 
SHA256_Tønsf‹m
(
SHA256_CTX
 *
c
, c⁄° *
d©a
);

148 
	#SHA384_DIGEST_LENGTH
 48

	)

149 
	#SHA512_DIGEST_LENGTH
 64

	)

151 #i‚de‡
OPENSSL_NO_SHA512


157 
	#SHA512_CBLOCK
 (
SHA_LBLOCK
*8Ë

	)

160 #i‡(
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)Ë&& !deföed(
__MINGW32__
)

161 
	#SHA_LONG64
 
__öt64


	)

162 
	#U64
(
C
ËC##
UI64


	)

163 #ñi‡
deföed
(
__¨ch64__
)

164 
	#SHA_LONG64
 

	)

165 
	#U64
(
C
ËC##
UL


	)

167 
	#SHA_LONG64
 

	)

168 
	#U64
(
C
ËC##
ULL


	)

171 
	sSHA512°©e_°


173 
SHA_LONG64
 
h
[8];

174 
SHA_LONG64
 
Nl
,
Nh
;

176 
SHA_LONG64
 
d
[
SHA_LBLOCK
];

177 
p
[
SHA512_CBLOCK
];

178 } 
u
;

179 
num
,
md_Àn
;

180 } 
	tSHA512_CTX
;

183 #i‚de‡
OPENSSL_NO_SHA512


184 
SHA384_Inô
(
SHA512_CTX
 *
c
);

185 
SHA384_Upd©e
(
SHA512_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

186 
SHA384_FöÆ
(*
md
, 
SHA512_CTX
 *
c
);

187 *
SHA384
(c⁄° *
d
, 
size_t
 
n
,*
md
);

188 
SHA512_Inô
(
SHA512_CTX
 *
c
);

189 
SHA512_Upd©e
(
SHA512_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
);

190 
SHA512_FöÆ
(*
md
, 
SHA512_CTX
 *
c
);

191 *
SHA512
(c⁄° *
d
, 
size_t
 
n
,*
md
);

192 
SHA512_Tønsf‹m
(
SHA512_CTX
 *
c
, c⁄° *
d©a
);

195 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ssl2.h

59 #i‚de‡
HEADER_SSL2_H


60 
	#HEADER_SSL2_H


	)

62 #ifde‡ 
__˝lu•lus


67 
	#SSL2_VERSION
 0x0002

	)

68 
	#SSL2_VERSION_MAJOR
 0x00

	)

69 
	#SSL2_VERSION_MINOR
 0x02

	)

74 
	#SSL2_MT_ERROR
 0

	)

75 
	#SSL2_MT_CLIENT_HELLO
 1

	)

76 
	#SSL2_MT_CLIENT_MASTER_KEY
 2

	)

77 
	#SSL2_MT_CLIENT_FINISHED
 3

	)

78 
	#SSL2_MT_SERVER_HELLO
 4

	)

79 
	#SSL2_MT_SERVER_VERIFY
 5

	)

80 
	#SSL2_MT_SERVER_FINISHED
 6

	)

81 
	#SSL2_MT_REQUEST_CERTIFICATE
 7

	)

82 
	#SSL2_MT_CLIENT_CERTIFICATE
 8

	)

85 
	#SSL2_PE_UNDEFINED_ERROR
 0x0000

	)

86 
	#SSL2_PE_NO_CIPHER
 0x0001

	)

87 
	#SSL2_PE_NO_CERTIFICATE
 0x0002

	)

88 
	#SSL2_PE_BAD_CERTIFICATE
 0x0004

	)

89 
	#SSL2_PE_UNSUPPORTED_CERTIFICATE_TYPE
 0x0006

	)

92 
	#SSL2_CK_NULL_WITH_MD5
 0x02000000

	)

93 
	#SSL2_CK_RC4_128_WITH_MD5
 0x02010080

	)

94 
	#SSL2_CK_RC4_128_EXPORT40_WITH_MD5
 0x02020080

	)

95 
	#SSL2_CK_RC2_128_CBC_WITH_MD5
 0x02030080

	)

96 
	#SSL2_CK_RC2_128_CBC_EXPORT40_WITH_MD5
 0x02040080

	)

97 
	#SSL2_CK_IDEA_128_CBC_WITH_MD5
 0x02050080

	)

98 
	#SSL2_CK_DES_64_CBC_WITH_MD5
 0x02060040

	)

99 
	#SSL2_CK_DES_64_CBC_WITH_SHA
 0x02060140

	)

100 
	#SSL2_CK_DES_192_EDE3_CBC_WITH_MD5
 0x020700c0

	)

101 
	#SSL2_CK_DES_192_EDE3_CBC_WITH_SHA
 0x020701c0

	)

102 
	#SSL2_CK_RC4_64_WITH_MD5
 0x02080080

	)

104 
	#SSL2_CK_DES_64_CFB64_WITH_MD5_1
 0x02ff0800

	)

105 
	#SSL2_CK_NULL
 0x02ff0810

	)

107 
	#SSL2_TXT_DES_64_CFB64_WITH_MD5_1
 "DES-CFB-M1"

	)

108 
	#SSL2_TXT_NULL_WITH_MD5
 "NULL-MD5"

	)

109 
	#SSL2_TXT_RC4_128_WITH_MD5
 "RC4-MD5"

	)

110 
	#SSL2_TXT_RC4_128_EXPORT40_WITH_MD5
 "EXP-RC4-MD5"

	)

111 
	#SSL2_TXT_RC2_128_CBC_WITH_MD5
 "RC2-CBC-MD5"

	)

112 
	#SSL2_TXT_RC2_128_CBC_EXPORT40_WITH_MD5
 "EXP-RC2-CBC-MD5"

	)

113 
	#SSL2_TXT_IDEA_128_CBC_WITH_MD5
 "IDEA-CBC-MD5"

	)

114 
	#SSL2_TXT_DES_64_CBC_WITH_MD5
 "DES-CBC-MD5"

	)

115 
	#SSL2_TXT_DES_64_CBC_WITH_SHA
 "DES-CBC-SHA"

	)

116 
	#SSL2_TXT_DES_192_EDE3_CBC_WITH_MD5
 "DES-CBC3-MD5"

	)

117 
	#SSL2_TXT_DES_192_EDE3_CBC_WITH_SHA
 "DES-CBC3-SHA"

	)

118 
	#SSL2_TXT_RC4_64_WITH_MD5
 "RC4-64-MD5"

	)

120 
	#SSL2_TXT_NULL
 "NULL"

	)

123 
	#SSL2_CF_5_BYTE_ENC
 0x01

	)

124 
	#SSL2_CF_8_BYTE_ENC
 0x02

	)

127 
	#SSL2_CT_X509_CERTIFICATE
 0x01

	)

130 
	#SSL2_AT_MD5_WITH_RSA_ENCRYPTION
 0x01

	)

132 
	#SSL2_MAX_SSL_SESSION_ID_LENGTH
 32

	)

135 
	#SSL2_MAX_MASTER_KEY_LENGTH_IN_BITS
 256

	)

136 #ifde‡
OPENSSL_SYS_MPE


137 
	#SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER
 29998u

	)

139 
	#SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER
 32767u

	)

141 
	#SSL2_MAX_RECORD_LENGTH_3_BYTE_HEADER
 16383

	)

143 
	#SSL2_CHALLENGE_LENGTH
 16

	)

145 
	#SSL2_MIN_CHALLENGE_LENGTH
 16

	)

146 
	#SSL2_MAX_CHALLENGE_LENGTH
 32

	)

147 
	#SSL2_CONNECTION_ID_LENGTH
 16

	)

148 
	#SSL2_MAX_CONNECTION_ID_LENGTH
 16

	)

149 
	#SSL2_SSL_SESSION_ID_LENGTH
 16

	)

150 
	#SSL2_MAX_CERT_CHALLENGE_LENGTH
 32

	)

151 
	#SSL2_MIN_CERT_CHALLENGE_LENGTH
 16

	)

152 
	#SSL2_MAX_KEY_MATERIAL_LENGTH
 24

	)

154 #i‚de‡
HEADER_SSL_LOCL_H


155 
	#CERT
 

	)

158 
	ss¶2_°©e_°


160 
thªe_byã_hódî
;

161 
˛ór_ãxt
;

162 
esˇ≥
;

163 
s¶2_rﬁlback
;

167 
wnum
;

168 
w≥nd_tŸ
;

169 c⁄° *
w≥nd_buf
;

171 
w≥nd_off
;

172 
w≥nd_Àn
;

173 
w≥nd_ªt
;

176 
rbuf_À·
;

177 
rbuf_offs
;

178 *
rbuf
;

179 *
wbuf
;

181 *
wrôe_±r
;

184 
∑ddög
;

185 
æígth
;

186 
ø˘_d©a_Àngth
;

187 
wÀngth
;

188 
wa˘_d©a_Àngth
;

189 *
ø˘_d©a
;

190 *
wa˘_d©a
;

191 *
mac_d©a
;

193 *
ªad_key
;

194 *
wrôe_key
;

197 
chÆÀnge_Àngth
;

198 
chÆÀnge
[
SSL2_MAX_CHALLENGE_LENGTH
];

199 
c⁄n_id_Àngth
;

200 
c⁄n_id
[
SSL2_MAX_CONNECTION_ID_LENGTH
];

201 
key_m©îül_Àngth
;

202 
key_m©îül
[
SSL2_MAX_KEY_MATERIAL_LENGTH
*2];

204 
ªad_£quí˚
;

205 
wrôe_£quí˚
;

208 
c⁄n_id_Àngth
;

209 
˚π_ty≥
;

210 
˚π_Àngth
;

211 
c¶
;

212 
˛ór
;

213 
íc
;

214 
c˛
[
SSL2_MAX_CERT_CHALLENGE_LENGTH
];

215 
cùhî_•ec_Àngth
;

216 
£ssi⁄_id_Àngth
;

217 
˛í
;

218 
æí
;

219 } 
tmp
;

220 } 
	tSSL2_STATE
;

224 
	#SSL2_ST_SEND_CLIENT_HELLO_A
 (0x10|
SSL_ST_CONNECT
)

	)

225 
	#SSL2_ST_SEND_CLIENT_HELLO_B
 (0x11|
SSL_ST_CONNECT
)

	)

226 
	#SSL2_ST_GET_SERVER_HELLO_A
 (0x20|
SSL_ST_CONNECT
)

	)

227 
	#SSL2_ST_GET_SERVER_HELLO_B
 (0x21|
SSL_ST_CONNECT
)

	)

228 
	#SSL2_ST_SEND_CLIENT_MASTER_KEY_A
 (0x30|
SSL_ST_CONNECT
)

	)

229 
	#SSL2_ST_SEND_CLIENT_MASTER_KEY_B
 (0x31|
SSL_ST_CONNECT
)

	)

230 
	#SSL2_ST_SEND_CLIENT_FINISHED_A
 (0x40|
SSL_ST_CONNECT
)

	)

231 
	#SSL2_ST_SEND_CLIENT_FINISHED_B
 (0x41|
SSL_ST_CONNECT
)

	)

232 
	#SSL2_ST_SEND_CLIENT_CERTIFICATE_A
 (0x50|
SSL_ST_CONNECT
)

	)

233 
	#SSL2_ST_SEND_CLIENT_CERTIFICATE_B
 (0x51|
SSL_ST_CONNECT
)

	)

234 
	#SSL2_ST_SEND_CLIENT_CERTIFICATE_C
 (0x52|
SSL_ST_CONNECT
)

	)

235 
	#SSL2_ST_SEND_CLIENT_CERTIFICATE_D
 (0x53|
SSL_ST_CONNECT
)

	)

236 
	#SSL2_ST_GET_SERVER_VERIFY_A
 (0x60|
SSL_ST_CONNECT
)

	)

237 
	#SSL2_ST_GET_SERVER_VERIFY_B
 (0x61|
SSL_ST_CONNECT
)

	)

238 
	#SSL2_ST_GET_SERVER_FINISHED_A
 (0x70|
SSL_ST_CONNECT
)

	)

239 
	#SSL2_ST_GET_SERVER_FINISHED_B
 (0x71|
SSL_ST_CONNECT
)

	)

240 
	#SSL2_ST_CLIENT_START_ENCRYPTION
 (0x80|
SSL_ST_CONNECT
)

	)

241 
	#SSL2_ST_X509_GET_CLIENT_CERTIFICATE
 (0x90|
SSL_ST_CONNECT
)

	)

243 
	#SSL2_ST_GET_CLIENT_HELLO_A
 (0x10|
SSL_ST_ACCEPT
)

	)

244 
	#SSL2_ST_GET_CLIENT_HELLO_B
 (0x11|
SSL_ST_ACCEPT
)

	)

245 
	#SSL2_ST_GET_CLIENT_HELLO_C
 (0x12|
SSL_ST_ACCEPT
)

	)

246 
	#SSL2_ST_SEND_SERVER_HELLO_A
 (0x20|
SSL_ST_ACCEPT
)

	)

247 
	#SSL2_ST_SEND_SERVER_HELLO_B
 (0x21|
SSL_ST_ACCEPT
)

	)

248 
	#SSL2_ST_GET_CLIENT_MASTER_KEY_A
 (0x30|
SSL_ST_ACCEPT
)

	)

249 
	#SSL2_ST_GET_CLIENT_MASTER_KEY_B
 (0x31|
SSL_ST_ACCEPT
)

	)

250 
	#SSL2_ST_SEND_SERVER_VERIFY_A
 (0x40|
SSL_ST_ACCEPT
)

	)

251 
	#SSL2_ST_SEND_SERVER_VERIFY_B
 (0x41|
SSL_ST_ACCEPT
)

	)

252 
	#SSL2_ST_SEND_SERVER_VERIFY_C
 (0x42|
SSL_ST_ACCEPT
)

	)

253 
	#SSL2_ST_GET_CLIENT_FINISHED_A
 (0x50|
SSL_ST_ACCEPT
)

	)

254 
	#SSL2_ST_GET_CLIENT_FINISHED_B
 (0x51|
SSL_ST_ACCEPT
)

	)

255 
	#SSL2_ST_SEND_SERVER_FINISHED_A
 (0x60|
SSL_ST_ACCEPT
)

	)

256 
	#SSL2_ST_SEND_SERVER_FINISHED_B
 (0x61|
SSL_ST_ACCEPT
)

	)

257 
	#SSL2_ST_SEND_REQUEST_CERTIFICATE_A
 (0x70|
SSL_ST_ACCEPT
)

	)

258 
	#SSL2_ST_SEND_REQUEST_CERTIFICATE_B
 (0x71|
SSL_ST_ACCEPT
)

	)

259 
	#SSL2_ST_SEND_REQUEST_CERTIFICATE_C
 (0x72|
SSL_ST_ACCEPT
)

	)

260 
	#SSL2_ST_SEND_REQUEST_CERTIFICATE_D
 (0x73|
SSL_ST_ACCEPT
)

	)

261 
	#SSL2_ST_SERVER_START_ENCRYPTION
 (0x80|
SSL_ST_ACCEPT
)

	)

262 
	#SSL2_ST_X509_GET_SERVER_CERTIFICATE
 (0x90|
SSL_ST_ACCEPT
)

	)

264 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ssl23.h

59 #i‚de‡
HEADER_SSL23_H


60 
	#HEADER_SSL23_H


	)

62 #ifde‡ 
__˝lu•lus


68 
	#SSL23_ST_CW_CLNT_HELLO_A
 (0x210|
SSL_ST_CONNECT
)

	)

69 
	#SSL23_ST_CW_CLNT_HELLO_B
 (0x211|
SSL_ST_CONNECT
)

	)

71 
	#SSL23_ST_CR_SRVR_HELLO_A
 (0x220|
SSL_ST_CONNECT
)

	)

72 
	#SSL23_ST_CR_SRVR_HELLO_B
 (0x221|
SSL_ST_CONNECT
)

	)

76 
	#SSL23_ST_SR_CLNT_HELLO_A
 (0x210|
SSL_ST_ACCEPT
)

	)

77 
	#SSL23_ST_SR_CLNT_HELLO_B
 (0x211|
SSL_ST_ACCEPT
)

	)

79 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ssl3.h

117 #i‚de‡
HEADER_SSL3_H


118 
	#HEADER_SSL3_H


	)

120 #i‚de‡
OPENSSL_NO_COMP


121 
	~<›ís¶/comp.h
>

123 
	~<›ís¶/buf„r.h
>

124 
	~<›ís¶/evp.h
>

125 
	~<›ís¶/s¶.h
>

126 
	~<›ís¶/pq_com∑t.h
>

128 #ifde‡ 
__˝lu•lus


132 
	#SSL3_CK_RSA_NULL_MD5
 0x03000001

	)

133 
	#SSL3_CK_RSA_NULL_SHA
 0x03000002

	)

134 
	#SSL3_CK_RSA_RC4_40_MD5
 0x03000003

	)

135 
	#SSL3_CK_RSA_RC4_128_MD5
 0x03000004

	)

136 
	#SSL3_CK_RSA_RC4_128_SHA
 0x03000005

	)

137 
	#SSL3_CK_RSA_RC2_40_MD5
 0x03000006

	)

138 
	#SSL3_CK_RSA_IDEA_128_SHA
 0x03000007

	)

139 
	#SSL3_CK_RSA_DES_40_CBC_SHA
 0x03000008

	)

140 
	#SSL3_CK_RSA_DES_64_CBC_SHA
 0x03000009

	)

141 
	#SSL3_CK_RSA_DES_192_CBC3_SHA
 0x0300000A

	)

143 
	#SSL3_CK_DH_DSS_DES_40_CBC_SHA
 0x0300000B

	)

144 
	#SSL3_CK_DH_DSS_DES_64_CBC_SHA
 0x0300000C

	)

145 
	#SSL3_CK_DH_DSS_DES_192_CBC3_SHA
 0x0300000D

	)

146 
	#SSL3_CK_DH_RSA_DES_40_CBC_SHA
 0x0300000E

	)

147 
	#SSL3_CK_DH_RSA_DES_64_CBC_SHA
 0x0300000F

	)

148 
	#SSL3_CK_DH_RSA_DES_192_CBC3_SHA
 0x03000010

	)

150 
	#SSL3_CK_EDH_DSS_DES_40_CBC_SHA
 0x03000011

	)

151 
	#SSL3_CK_EDH_DSS_DES_64_CBC_SHA
 0x03000012

	)

152 
	#SSL3_CK_EDH_DSS_DES_192_CBC3_SHA
 0x03000013

	)

153 
	#SSL3_CK_EDH_RSA_DES_40_CBC_SHA
 0x03000014

	)

154 
	#SSL3_CK_EDH_RSA_DES_64_CBC_SHA
 0x03000015

	)

155 
	#SSL3_CK_EDH_RSA_DES_192_CBC3_SHA
 0x03000016

	)

157 
	#SSL3_CK_ADH_RC4_40_MD5
 0x03000017

	)

158 
	#SSL3_CK_ADH_RC4_128_MD5
 0x03000018

	)

159 
	#SSL3_CK_ADH_DES_40_CBC_SHA
 0x03000019

	)

160 
	#SSL3_CK_ADH_DES_64_CBC_SHA
 0x0300001A

	)

161 
	#SSL3_CK_ADH_DES_192_CBC_SHA
 0x0300001B

	)

163 
	#SSL3_CK_FZA_DMS_NULL_SHA
 0x0300001C

	)

164 
	#SSL3_CK_FZA_DMS_FZA_SHA
 0x0300001D

	)

168 
	#SSL3_CK_FZA_DMS_RC4_SHA
 0x0300001E

	)

173 
	#SSL3_CK_KRB5_DES_64_CBC_SHA
 0x0300001E

	)

174 
	#SSL3_CK_KRB5_DES_192_CBC3_SHA
 0x0300001F

	)

175 
	#SSL3_CK_KRB5_RC4_128_SHA
 0x03000020

	)

176 
	#SSL3_CK_KRB5_IDEA_128_CBC_SHA
 0x03000021

	)

177 
	#SSL3_CK_KRB5_DES_64_CBC_MD5
 0x03000022

	)

178 
	#SSL3_CK_KRB5_DES_192_CBC3_MD5
 0x03000023

	)

179 
	#SSL3_CK_KRB5_RC4_128_MD5
 0x03000024

	)

180 
	#SSL3_CK_KRB5_IDEA_128_CBC_MD5
 0x03000025

	)

182 
	#SSL3_CK_KRB5_DES_40_CBC_SHA
 0x03000026

	)

183 
	#SSL3_CK_KRB5_RC2_40_CBC_SHA
 0x03000027

	)

184 
	#SSL3_CK_KRB5_RC4_40_SHA
 0x03000028

	)

185 
	#SSL3_CK_KRB5_DES_40_CBC_MD5
 0x03000029

	)

186 
	#SSL3_CK_KRB5_RC2_40_CBC_MD5
 0x0300002A

	)

187 
	#SSL3_CK_KRB5_RC4_40_MD5
 0x0300002B

	)

189 
	#SSL3_TXT_RSA_NULL_MD5
 "NULL-MD5"

	)

190 
	#SSL3_TXT_RSA_NULL_SHA
 "NULL-SHA"

	)

191 
	#SSL3_TXT_RSA_RC4_40_MD5
 "EXP-RC4-MD5"

	)

192 
	#SSL3_TXT_RSA_RC4_128_MD5
 "RC4-MD5"

	)

193 
	#SSL3_TXT_RSA_RC4_128_SHA
 "RC4-SHA"

	)

194 
	#SSL3_TXT_RSA_RC2_40_MD5
 "EXP-RC2-CBC-MD5"

	)

195 
	#SSL3_TXT_RSA_IDEA_128_SHA
 "IDEA-CBC-SHA"

	)

196 
	#SSL3_TXT_RSA_DES_40_CBC_SHA
 "EXP-DES-CBC-SHA"

	)

197 
	#SSL3_TXT_RSA_DES_64_CBC_SHA
 "DES-CBC-SHA"

	)

198 
	#SSL3_TXT_RSA_DES_192_CBC3_SHA
 "DES-CBC3-SHA"

	)

200 
	#SSL3_TXT_DH_DSS_DES_40_CBC_SHA
 "EXP-DH-DSS-DES-CBC-SHA"

	)

201 
	#SSL3_TXT_DH_DSS_DES_64_CBC_SHA
 "DH-DSS-DES-CBC-SHA"

	)

202 
	#SSL3_TXT_DH_DSS_DES_192_CBC3_SHA
 "DH-DSS-DES-CBC3-SHA"

	)

203 
	#SSL3_TXT_DH_RSA_DES_40_CBC_SHA
 "EXP-DH-RSA-DES-CBC-SHA"

	)

204 
	#SSL3_TXT_DH_RSA_DES_64_CBC_SHA
 "DH-RSA-DES-CBC-SHA"

	)

205 
	#SSL3_TXT_DH_RSA_DES_192_CBC3_SHA
 "DH-RSA-DES-CBC3-SHA"

	)

207 
	#SSL3_TXT_EDH_DSS_DES_40_CBC_SHA
 "EXP-EDH-DSS-DES-CBC-SHA"

	)

208 
	#SSL3_TXT_EDH_DSS_DES_64_CBC_SHA
 "EDH-DSS-DES-CBC-SHA"

	)

209 
	#SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA
 "EDH-DSS-DES-CBC3-SHA"

	)

210 
	#SSL3_TXT_EDH_RSA_DES_40_CBC_SHA
 "EXP-EDH-RSA-DES-CBC-SHA"

	)

211 
	#SSL3_TXT_EDH_RSA_DES_64_CBC_SHA
 "EDH-RSA-DES-CBC-SHA"

	)

212 
	#SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA
 "EDH-RSA-DES-CBC3-SHA"

	)

214 
	#SSL3_TXT_ADH_RC4_40_MD5
 "EXP-ADH-RC4-MD5"

	)

215 
	#SSL3_TXT_ADH_RC4_128_MD5
 "ADH-RC4-MD5"

	)

216 
	#SSL3_TXT_ADH_DES_40_CBC_SHA
 "EXP-ADH-DES-CBC-SHA"

	)

217 
	#SSL3_TXT_ADH_DES_64_CBC_SHA
 "ADH-DES-CBC-SHA"

	)

218 
	#SSL3_TXT_ADH_DES_192_CBC_SHA
 "ADH-DES-CBC3-SHA"

	)

220 
	#SSL3_TXT_FZA_DMS_NULL_SHA
 "FZA-NULL-SHA"

	)

221 
	#SSL3_TXT_FZA_DMS_FZA_SHA
 "FZA-FZA-CBC-SHA"

	)

222 
	#SSL3_TXT_FZA_DMS_RC4_SHA
 "FZA-RC4-SHA"

	)

224 
	#SSL3_TXT_KRB5_DES_64_CBC_SHA
 "KRB5-DES-CBC-SHA"

	)

225 
	#SSL3_TXT_KRB5_DES_192_CBC3_SHA
 "KRB5-DES-CBC3-SHA"

	)

226 
	#SSL3_TXT_KRB5_RC4_128_SHA
 "KRB5-RC4-SHA"

	)

227 
	#SSL3_TXT_KRB5_IDEA_128_CBC_SHA
 "KRB5-IDEA-CBC-SHA"

	)

228 
	#SSL3_TXT_KRB5_DES_64_CBC_MD5
 "KRB5-DES-CBC-MD5"

	)

229 
	#SSL3_TXT_KRB5_DES_192_CBC3_MD5
 "KRB5-DES-CBC3-MD5"

	)

230 
	#SSL3_TXT_KRB5_RC4_128_MD5
 "KRB5-RC4-MD5"

	)

231 
	#SSL3_TXT_KRB5_IDEA_128_CBC_MD5
 "KRB5-IDEA-CBC-MD5"

	)

233 
	#SSL3_TXT_KRB5_DES_40_CBC_SHA
 "EXP-KRB5-DES-CBC-SHA"

	)

234 
	#SSL3_TXT_KRB5_RC2_40_CBC_SHA
 "EXP-KRB5-RC2-CBC-SHA"

	)

235 
	#SSL3_TXT_KRB5_RC4_40_SHA
 "EXP-KRB5-RC4-SHA"

	)

236 
	#SSL3_TXT_KRB5_DES_40_CBC_MD5
 "EXP-KRB5-DES-CBC-MD5"

	)

237 
	#SSL3_TXT_KRB5_RC2_40_CBC_MD5
 "EXP-KRB5-RC2-CBC-MD5"

	)

238 
	#SSL3_TXT_KRB5_RC4_40_MD5
 "EXP-KRB5-RC4-MD5"

	)

240 
	#SSL3_SSL_SESSION_ID_LENGTH
 32

	)

241 
	#SSL3_MAX_SSL_SESSION_ID_LENGTH
 32

	)

243 
	#SSL3_MASTER_SECRET_SIZE
 48

	)

244 
	#SSL3_RANDOM_SIZE
 32

	)

245 
	#SSL3_SESSION_ID_SIZE
 32

	)

246 
	#SSL3_RT_HEADER_LENGTH
 5

	)

249 #i‡
deföed
(
OPENSSL_SYS_WIN16
) || \

250 (
deföed
(
OPENSSL_SYS_MSDOS
Ë&& !deföed(
OPENSSL_SYS_WIN32
))

251 
	#SSL3_RT_MAX_EXTRA
 (14000)

	)

253 
	#SSL3_RT_MAX_EXTRA
 (16384)

	)

256 
	#SSL3_RT_MAX_PLAIN_LENGTH
 16384

	)

257 #ifde‡
OPENSSL_NO_COMP


258 
	#SSL3_RT_MAX_COMPRESSED_LENGTH
 
SSL3_RT_MAX_PLAIN_LENGTH


	)

260 
	#SSL3_RT_MAX_COMPRESSED_LENGTH
 (1024+
SSL3_RT_MAX_PLAIN_LENGTH
)

	)

262 
	#SSL3_RT_MAX_ENCRYPTED_LENGTH
 (1024+
SSL3_RT_MAX_COMPRESSED_LENGTH
)

	)

263 
	#SSL3_RT_MAX_PACKET_SIZE
 (
SSL3_RT_MAX_ENCRYPTED_LENGTH
+
SSL3_RT_HEADER_LENGTH
)

	)

264 
	#SSL3_RT_MAX_DATA_SIZE
 (1024*1024)

	)

266 
	#SSL3_MD_CLIENT_FINISHED_CONST
 "\x43\x4C\x4E\x54"

	)

267 
	#SSL3_MD_SERVER_FINISHED_CONST
 "\x53\x52\x56\x52"

	)

269 
	#SSL3_VERSION
 0x0300

	)

270 
	#SSL3_VERSION_MAJOR
 0x03

	)

271 
	#SSL3_VERSION_MINOR
 0x00

	)

273 
	#SSL3_RT_CHANGE_CIPHER_SPEC
 20

	)

274 
	#SSL3_RT_ALERT
 21

	)

275 
	#SSL3_RT_HANDSHAKE
 22

	)

276 
	#SSL3_RT_APPLICATION_DATA
 23

	)

278 
	#SSL3_AL_WARNING
 1

	)

279 
	#SSL3_AL_FATAL
 2

	)

281 
	#SSL3_AD_CLOSE_NOTIFY
 0

	)

282 
	#SSL3_AD_UNEXPECTED_MESSAGE
 10

	)

283 
	#SSL3_AD_BAD_RECORD_MAC
 20

	)

284 
	#SSL3_AD_DECOMPRESSION_FAILURE
 30

	)

285 
	#SSL3_AD_HANDSHAKE_FAILURE
 40

	)

286 
	#SSL3_AD_NO_CERTIFICATE
 41

	)

287 
	#SSL3_AD_BAD_CERTIFICATE
 42

	)

288 
	#SSL3_AD_UNSUPPORTED_CERTIFICATE
 43

	)

289 
	#SSL3_AD_CERTIFICATE_REVOKED
 44

	)

290 
	#SSL3_AD_CERTIFICATE_EXPIRED
 45

	)

291 
	#SSL3_AD_CERTIFICATE_UNKNOWN
 46

	)

292 
	#SSL3_AD_ILLEGAL_PARAMETER
 47

	)

294 
	ss¶3_ªc‹d_°


296  
ty≥
;

297  
Àngth
;

298  
off
;

299  *
d©a
;

300  *
öput
;

301  *
comp
;

302  
ïoch
;

303  
PQ_64BIT
 
£q_num
;

304 } 
	tSSL3_RECORD
;

306 
	ss¶3_buf„r_°


308 *
buf
;

310 
size_t
 
Àn
;

311 
off£t
;

312 
À·
;

313 } 
	tSSL3_BUFFER
;

315 
	#SSL3_CT_RSA_SIGN
 1

	)

316 
	#SSL3_CT_DSS_SIGN
 2

	)

317 
	#SSL3_CT_RSA_FIXED_DH
 3

	)

318 
	#SSL3_CT_DSS_FIXED_DH
 4

	)

319 
	#SSL3_CT_RSA_EPHEMERAL_DH
 5

	)

320 
	#SSL3_CT_DSS_EPHEMERAL_DH
 6

	)

321 
	#SSL3_CT_FORTEZZA_DMS
 20

	)

326 
	#SSL3_CT_NUMBER
 7

	)

329 
	#SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS
 0x0001

	)

330 
	#SSL3_FLAGS_DELAY_CLIENT_FINISHED
 0x0002

	)

331 
	#SSL3_FLAGS_POP_BUFFER
 0x0004

	)

332 
	#TLS1_FLAGS_TLS_PADDING_BUG
 0x0008

	)

334 
	ss¶3_°©e_°


336 
Êags
;

337 
dñay_buf_p›_ªt
;

339 
ªad_£quí˚
[8];

340 
ªad_mac_£¸ë
[
EVP_MAX_MD_SIZE
];

341 
wrôe_£quí˚
[8];

342 
wrôe_mac_£¸ë
[
EVP_MAX_MD_SIZE
];

344 
£rvî_øndom
[
SSL3_RANDOM_SIZE
];

345 
˛õ¡_øndom
[
SSL3_RANDOM_SIZE
];

348 
√ed_em±y_‰agmíts
;

349 
em±y_‰agmít_d⁄e
;

351 
SSL3_BUFFER
 
rbuf
;

352 
SSL3_BUFFER
 
wbuf
;

354 
SSL3_RECORD
 
ºec
;

355 
SSL3_RECORD
 
wªc
;

359 
Æît_‰agmít
[2];

360 
Æît_‰agmít_Àn
;

361 
h™dshake_‰agmít
[4];

362 
h™dshake_‰agmít_Àn
;

365 
wnum
;

366 
w≥nd_tŸ
;

367 
w≥nd_ty≥
;

368 
w≥nd_ªt
;

369 c⁄° *
w≥nd_buf
;

372 
EVP_MD_CTX
 
föish_dg°1
;

373 
EVP_MD_CTX
 
föish_dg°2
;

377 
ch™ge_cùhî_•ec
;

379 
w¨n_Æît
;

380 
Áèl_Æît
;

383 
Æît_di•©ch
;

384 
£nd_Æît
[2];

388 
ª√gŸüã
;

389 
tŸÆ_ª√gŸüti⁄s
;

390 
num_ª√gŸüti⁄s
;

392 
ö_ªad_≠p_d©a
;

396 
˚π_vîify_md
[
EVP_MAX_MD_SIZE
*2];

399 
föish_md
[
EVP_MAX_MD_SIZE
*2];

400 
föish_md_Àn
;

401 
≥î_föish_md
[
EVP_MAX_MD_SIZE
*2];

402 
≥î_föish_md_Àn
;

404 
mesßge_size
;

405 
mesßge_ty≥
;

408 
SSL_CIPHER
 *
√w_cùhî
;

409 #i‚de‡
OPENSSL_NO_DH


410 
DH
 *
dh
;

415 
√xt_°©e
;

417 
ªu£_mesßge
;

420 
˚π_ªq
;

421 
˘y≥_num
;

422 
˘y≥
[
SSL3_CT_NUMBER
];

423 
STACK_OF
(
X509_NAME
Ë*
ˇ_«mes
;

425 
u£_rß_tmp
;

427 
key_block_Àngth
;

428 *
key_block
;

430 c⁄° 
EVP_CIPHER
 *
√w_sym_íc
;

431 c⁄° 
EVP_MD
 *
√w_hash
;

432 #i‚de‡
OPENSSL_NO_COMP


433 c⁄° 
SSL_COMP
 *
√w_com¥essi⁄
;

435 *
√w_com¥essi⁄
;

437 
˚π_ªque°
;

438 } 
tmp
;

440 } 
	tSSL3_STATE
;

446 
	#SSL3_ST_CW_FLUSH
 (0x100|
SSL_ST_CONNECT
)

	)

448 
	#SSL3_ST_CW_CLNT_HELLO_A
 (0x110|
SSL_ST_CONNECT
)

	)

449 
	#SSL3_ST_CW_CLNT_HELLO_B
 (0x111|
SSL_ST_CONNECT
)

	)

451 
	#SSL3_ST_CR_SRVR_HELLO_A
 (0x120|
SSL_ST_CONNECT
)

	)

452 
	#SSL3_ST_CR_SRVR_HELLO_B
 (0x121|
SSL_ST_CONNECT
)

	)

453 
	#DTLS1_ST_CR_HELLO_VERIFY_REQUEST_A
 (0x126|
SSL_ST_CONNECT
)

	)

454 
	#DTLS1_ST_CR_HELLO_VERIFY_REQUEST_B
 (0x127|
SSL_ST_CONNECT
)

	)

455 
	#SSL3_ST_CR_CERT_A
 (0x130|
SSL_ST_CONNECT
)

	)

456 
	#SSL3_ST_CR_CERT_B
 (0x131|
SSL_ST_CONNECT
)

	)

457 
	#SSL3_ST_CR_KEY_EXCH_A
 (0x140|
SSL_ST_CONNECT
)

	)

458 
	#SSL3_ST_CR_KEY_EXCH_B
 (0x141|
SSL_ST_CONNECT
)

	)

459 
	#SSL3_ST_CR_CERT_REQ_A
 (0x150|
SSL_ST_CONNECT
)

	)

460 
	#SSL3_ST_CR_CERT_REQ_B
 (0x151|
SSL_ST_CONNECT
)

	)

461 
	#SSL3_ST_CR_SRVR_DONE_A
 (0x160|
SSL_ST_CONNECT
)

	)

462 
	#SSL3_ST_CR_SRVR_DONE_B
 (0x161|
SSL_ST_CONNECT
)

	)

464 
	#SSL3_ST_CW_CERT_A
 (0x170|
SSL_ST_CONNECT
)

	)

465 
	#SSL3_ST_CW_CERT_B
 (0x171|
SSL_ST_CONNECT
)

	)

466 
	#SSL3_ST_CW_CERT_C
 (0x172|
SSL_ST_CONNECT
)

	)

467 
	#SSL3_ST_CW_CERT_D
 (0x173|
SSL_ST_CONNECT
)

	)

468 
	#SSL3_ST_CW_KEY_EXCH_A
 (0x180|
SSL_ST_CONNECT
)

	)

469 
	#SSL3_ST_CW_KEY_EXCH_B
 (0x181|
SSL_ST_CONNECT
)

	)

470 
	#SSL3_ST_CW_CERT_VRFY_A
 (0x190|
SSL_ST_CONNECT
)

	)

471 
	#SSL3_ST_CW_CERT_VRFY_B
 (0x191|
SSL_ST_CONNECT
)

	)

472 
	#SSL3_ST_CW_CHANGE_A
 (0x1A0|
SSL_ST_CONNECT
)

	)

473 
	#SSL3_ST_CW_CHANGE_B
 (0x1A1|
SSL_ST_CONNECT
)

	)

474 
	#SSL3_ST_CW_FINISHED_A
 (0x1B0|
SSL_ST_CONNECT
)

	)

475 
	#SSL3_ST_CW_FINISHED_B
 (0x1B1|
SSL_ST_CONNECT
)

	)

477 
	#SSL3_ST_CR_CHANGE_A
 (0x1C0|
SSL_ST_CONNECT
)

	)

478 
	#SSL3_ST_CR_CHANGE_B
 (0x1C1|
SSL_ST_CONNECT
)

	)

479 
	#SSL3_ST_CR_FINISHED_A
 (0x1D0|
SSL_ST_CONNECT
)

	)

480 
	#SSL3_ST_CR_FINISHED_B
 (0x1D1|
SSL_ST_CONNECT
)

	)

484 
	#SSL3_ST_SW_FLUSH
 (0x100|
SSL_ST_ACCEPT
)

	)

487 
	#SSL3_ST_SR_CLNT_HELLO_A
 (0x110|
SSL_ST_ACCEPT
)

	)

488 
	#SSL3_ST_SR_CLNT_HELLO_B
 (0x111|
SSL_ST_ACCEPT
)

	)

489 
	#SSL3_ST_SR_CLNT_HELLO_C
 (0x112|
SSL_ST_ACCEPT
)

	)

491 
	#DTLS1_ST_SW_HELLO_VERIFY_REQUEST_A
 (0x113|
SSL_ST_ACCEPT
)

	)

492 
	#DTLS1_ST_SW_HELLO_VERIFY_REQUEST_B
 (0x114|
SSL_ST_ACCEPT
)

	)

493 
	#SSL3_ST_SW_HELLO_REQ_A
 (0x120|
SSL_ST_ACCEPT
)

	)

494 
	#SSL3_ST_SW_HELLO_REQ_B
 (0x121|
SSL_ST_ACCEPT
)

	)

495 
	#SSL3_ST_SW_HELLO_REQ_C
 (0x122|
SSL_ST_ACCEPT
)

	)

496 
	#SSL3_ST_SW_SRVR_HELLO_A
 (0x130|
SSL_ST_ACCEPT
)

	)

497 
	#SSL3_ST_SW_SRVR_HELLO_B
 (0x131|
SSL_ST_ACCEPT
)

	)

498 
	#SSL3_ST_SW_CERT_A
 (0x140|
SSL_ST_ACCEPT
)

	)

499 
	#SSL3_ST_SW_CERT_B
 (0x141|
SSL_ST_ACCEPT
)

	)

500 
	#SSL3_ST_SW_KEY_EXCH_A
 (0x150|
SSL_ST_ACCEPT
)

	)

501 
	#SSL3_ST_SW_KEY_EXCH_B
 (0x151|
SSL_ST_ACCEPT
)

	)

502 
	#SSL3_ST_SW_CERT_REQ_A
 (0x160|
SSL_ST_ACCEPT
)

	)

503 
	#SSL3_ST_SW_CERT_REQ_B
 (0x161|
SSL_ST_ACCEPT
)

	)

504 
	#SSL3_ST_SW_SRVR_DONE_A
 (0x170|
SSL_ST_ACCEPT
)

	)

505 
	#SSL3_ST_SW_SRVR_DONE_B
 (0x171|
SSL_ST_ACCEPT
)

	)

507 
	#SSL3_ST_SR_CERT_A
 (0x180|
SSL_ST_ACCEPT
)

	)

508 
	#SSL3_ST_SR_CERT_B
 (0x181|
SSL_ST_ACCEPT
)

	)

509 
	#SSL3_ST_SR_KEY_EXCH_A
 (0x190|
SSL_ST_ACCEPT
)

	)

510 
	#SSL3_ST_SR_KEY_EXCH_B
 (0x191|
SSL_ST_ACCEPT
)

	)

511 
	#SSL3_ST_SR_CERT_VRFY_A
 (0x1A0|
SSL_ST_ACCEPT
)

	)

512 
	#SSL3_ST_SR_CERT_VRFY_B
 (0x1A1|
SSL_ST_ACCEPT
)

	)

513 
	#SSL3_ST_SR_CHANGE_A
 (0x1B0|
SSL_ST_ACCEPT
)

	)

514 
	#SSL3_ST_SR_CHANGE_B
 (0x1B1|
SSL_ST_ACCEPT
)

	)

515 
	#SSL3_ST_SR_FINISHED_A
 (0x1C0|
SSL_ST_ACCEPT
)

	)

516 
	#SSL3_ST_SR_FINISHED_B
 (0x1C1|
SSL_ST_ACCEPT
)

	)

518 
	#SSL3_ST_SW_CHANGE_A
 (0x1D0|
SSL_ST_ACCEPT
)

	)

519 
	#SSL3_ST_SW_CHANGE_B
 (0x1D1|
SSL_ST_ACCEPT
)

	)

520 
	#SSL3_ST_SW_FINISHED_A
 (0x1E0|
SSL_ST_ACCEPT
)

	)

521 
	#SSL3_ST_SW_FINISHED_B
 (0x1E1|
SSL_ST_ACCEPT
)

	)

523 
	#SSL3_MT_HELLO_REQUEST
 0

	)

524 
	#SSL3_MT_CLIENT_HELLO
 1

	)

525 
	#SSL3_MT_SERVER_HELLO
 2

	)

526 
	#SSL3_MT_CERTIFICATE
 11

	)

527 
	#SSL3_MT_SERVER_KEY_EXCHANGE
 12

	)

528 
	#SSL3_MT_CERTIFICATE_REQUEST
 13

	)

529 
	#SSL3_MT_SERVER_DONE
 14

	)

530 
	#SSL3_MT_CERTIFICATE_VERIFY
 15

	)

531 
	#SSL3_MT_CLIENT_KEY_EXCHANGE
 16

	)

532 
	#SSL3_MT_FINISHED
 20

	)

533 
	#DTLS1_MT_HELLO_VERIFY_REQUEST
 3

	)

536 
	#SSL3_MT_CCS
 1

	)

539 
	#SSL3_CC_READ
 0x01

	)

540 
	#SSL3_CC_WRITE
 0x02

	)

541 
	#SSL3_CC_CLIENT
 0x10

	)

542 
	#SSL3_CC_SERVER
 0x20

	)

543 
	#SSL3_CHANGE_CIPHER_CLIENT_WRITE
 (
SSL3_CC_CLIENT
|
SSL3_CC_WRITE
)

	)

544 
	#SSL3_CHANGE_CIPHER_SERVER_READ
 (
SSL3_CC_SERVER
|
SSL3_CC_READ
)

	)

545 
	#SSL3_CHANGE_CIPHER_CLIENT_READ
 (
SSL3_CC_CLIENT
|
SSL3_CC_READ
)

	)

546 
	#SSL3_CHANGE_CIPHER_SERVER_WRITE
 (
SSL3_CC_SERVER
|
SSL3_CC_WRITE
)

	)

548 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/stack.h

59 #i‚de‡
HEADER_STACK_H


60 
	#HEADER_STACK_H


	)

62 #ifde‡ 
__˝lu•lus


66 
	s°ack_°


68 
num
;

69 **
d©a
;

70 
s‹ãd
;

72 
num_Æloc
;

73 (*
comp
)(const * const *, const * const *);

74 } 
	tSTACK
;

76 
	#M_sk_num
(
sk
Ë((skË? (sk)->
num
:-1)

	)

77 
	#M_sk_vÆue
(
sk
,
n
Ë((skË? (sk)->
d©a
[n] : 
NULL
)

	)

79 
sk_num
(c⁄° 
STACK
 *);

80 *
sk_vÆue
(c⁄° 
STACK
 *, );

82 *
sk_£t
(
STACK
 *, , *);

84 
STACK
 *
sk_√w
((*
cmp
)(const * const *, const * const *));

85 
STACK
 *
sk_√w_nuŒ
();

86 
sk_‰ì
(
STACK
 *);

87 
sk_p›_‰ì
(
STACK
 *
°
, (*
func
)(*));

88 
sk_ö£π
(
STACK
 *
sk
,*
d©a
,
whîe
);

89 *
sk_dñëe
(
STACK
 *
°
,
loc
);

90 *
sk_dñëe_±r
(
STACK
 *
°
, *
p
);

91 
sk_föd
(
STACK
 *
°
,*
d©a
);

92 
sk_föd_ex
(
STACK
 *
°
,*
d©a
);

93 
sk_push
(
STACK
 *
°
,*
d©a
);

94 
sk_unshi·
(
STACK
 *
°
,*
d©a
);

95 *
sk_shi·
(
STACK
 *
°
);

96 *
sk_p›
(
STACK
 *
°
);

97 
sk_zîo
(
STACK
 *
°
);

98 (*
sk_£t_cmp_func
(
STACK
 *
sk
, (*
c
)(const * const *,

101 
STACK
 *
sk_dup
(STACK *
°
);

102 
sk_s‹t
(
STACK
 *
°
);

103 
sk_is_s‹ãd
(c⁄° 
STACK
 *
°
);

105 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/symhacks.h

55 #i‚de‡
HEADER_SYMHACKS_H


56 
	#HEADER_SYMHACKS_H


	)

58 
	~<›ís¶/e_os2.h
>

63 #ifde‡
OPENSSL_SYS_VMS


66 #unde‡
CRYPTO_gë_ex_d©a_im∂emíèti⁄


67 
	#CRYPTO_gë_ex_d©a_im∂emíèti⁄
 
CRYPTO_gë_ex_d©a_im∂


	)

68 #unde‡
CRYPTO_£t_ex_d©a_im∂emíèti⁄


69 
	#CRYPTO_£t_ex_d©a_im∂emíèti⁄
 
CRYPTO_£t_ex_d©a_im∂


	)

72 #unde‡
ASN1_STRING_£t_deÁu…_mask_asc


73 
	#ASN1_STRING_£t_deÁu…_mask_asc
 
ASN1_STRING_£t_def_mask_asc


	)

77 #unde‡
i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO


78 
	#i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO
 
i2d_ASN1_SET_OF_PKCS7_SIGINF


	)

79 #unde‡
d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO


80 
	#d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO
 
d2i_ASN1_SET_OF_PKCS7_SIGINF


	)

85 #unde‡
i2d_ASN1_SET_OF_PKCS7_RECIP_INFO


86 
	#i2d_ASN1_SET_OF_PKCS7_RECIP_INFO
 
i2d_ASN1_SET_OF_PKCS7_RECINF


	)

87 #unde‡
d2i_ASN1_SET_OF_PKCS7_RECIP_INFO


88 
	#d2i_ASN1_SET_OF_PKCS7_RECIP_INFO
 
d2i_ASN1_SET_OF_PKCS7_RECINF


	)

93 #unde‡
i2d_ASN1_SET_OF_ACCESS_DESCRIPTION


94 
	#i2d_ASN1_SET_OF_ACCESS_DESCRIPTION
 
i2d_ASN1_SET_OF_ACC_DESC


	)

95 #unde‡
d2i_ASN1_SET_OF_ACCESS_DESCRIPTION


96 
	#d2i_ASN1_SET_OF_ACCESS_DESCRIPTION
 
d2i_ASN1_SET_OF_ACC_DESC


	)

100 #unde‡
PEM_ªad_NETSCAPE_CERT_SEQUENCE


101 
	#PEM_ªad_NETSCAPE_CERT_SEQUENCE
 
PEM_ªad_NS_CERT_SEQ


	)

102 #unde‡
PEM_wrôe_NETSCAPE_CERT_SEQUENCE


103 
	#PEM_wrôe_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_NS_CERT_SEQ


	)

104 #unde‡
PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE


105 
	#PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_ªad_bio_NS_CERT_SEQ


	)

106 #unde‡
PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE


107 
	#PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_bio_NS_CERT_SEQ


	)

108 #unde‡
PEM_wrôe_cb_bio_NETSCAPE_CERT_SEQUENCE


109 
	#PEM_wrôe_cb_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_cb_bio_NS_CERT_SEQ


	)

112 #unde‡
PEM_ªad_PKCS8_PRIV_KEY_INFO


113 
	#PEM_ªad_PKCS8_PRIV_KEY_INFO
 
PEM_ªad_P8_PRIV_KEY_INFO


	)

114 #unde‡
PEM_wrôe_PKCS8_PRIV_KEY_INFO


115 
	#PEM_wrôe_PKCS8_PRIV_KEY_INFO
 
PEM_wrôe_P8_PRIV_KEY_INFO


	)

116 #unde‡
PEM_ªad_bio_PKCS8_PRIV_KEY_INFO


117 
	#PEM_ªad_bio_PKCS8_PRIV_KEY_INFO
 
PEM_ªad_bio_P8_PRIV_KEY_INFO


	)

118 #unde‡
PEM_wrôe_bio_PKCS8_PRIV_KEY_INFO


119 
	#PEM_wrôe_bio_PKCS8_PRIV_KEY_INFO
 
PEM_wrôe_bio_P8_PRIV_KEY_INFO


	)

120 #unde‡
PEM_wrôe_cb_bio_PKCS8_PRIV_KEY_INFO


121 
	#PEM_wrôe_cb_bio_PKCS8_PRIV_KEY_INFO
 
PEM_wπ_cb_bio_P8_PRIV_KEY_INFO


	)

124 #unde‡
PEM_wrôe_bio_PKCS8Priv©eKey_nid


125 
	#PEM_wrôe_bio_PKCS8Priv©eKey_nid
 
PEM_wrôe_bio_PKCS8PrivKey_nid


	)

128 #unde‡
X509_REVOKED_gë_ext_by_¸ôiˇl


129 
	#X509_REVOKED_gë_ext_by_¸ôiˇl
 
X509_REVOKED_gë_ext_by_¸ôic


	)

130 #unde‡
X509_pﬁicy_åì_gë0_u£r_pﬁicõs


131 
	#X509_pﬁicy_åì_gë0_u£r_pﬁicõs
 
X509_pcy_åì_gë0_u§_pﬁicõs


	)

132 #unde‡
X509_pﬁicy_node_gë0_quÆifõrs


133 
	#X509_pﬁicy_node_gë0_quÆifõrs
 
X509_pcy_node_gë0_quÆifõrs


	)

134 #unde‡
X509_STORE_CTX_gë_ex∂icô_pﬁicy


135 
	#X509_STORE_CTX_gë_ex∂icô_pﬁicy
 
X509_STORE_CTX_gë_ex∂_pﬁicy


	)

138 #unde‡
CRYPTO_£t_dy∆ock_de°roy_ˇŒback


139 
	#CRYPTO_£t_dy∆ock_de°roy_ˇŒback
 
CRYPTO_£t_dy∆ock_de°roy_cb


	)

140 #unde‡
CRYPTO_£t_dy∆ock_¸óã_ˇŒback


141 
	#CRYPTO_£t_dy∆ock_¸óã_ˇŒback
 
CRYPTO_£t_dy∆ock_¸óã_cb


	)

142 #unde‡
CRYPTO_£t_dy∆ock_lock_ˇŒback


143 
	#CRYPTO_£t_dy∆ock_lock_ˇŒback
 
CRYPTO_£t_dy∆ock_lock_cb


	)

144 #unde‡
CRYPTO_gë_dy∆ock_lock_ˇŒback


145 
	#CRYPTO_gë_dy∆ock_lock_ˇŒback
 
CRYPTO_gë_dy∆ock_lock_cb


	)

146 #unde‡
CRYPTO_gë_dy∆ock_de°roy_ˇŒback


147 
	#CRYPTO_gë_dy∆ock_de°roy_ˇŒback
 
CRYPTO_gë_dy∆ock_de°roy_cb


	)

148 #unde‡
CRYPTO_gë_dy∆ock_¸óã_ˇŒback


149 
	#CRYPTO_gë_dy∆ock_¸óã_ˇŒback
 
CRYPTO_gë_dy∆ock_¸óã_cb


	)

150 #unde‡
CRYPTO_£t_locked_mem_ex_fun˘i⁄s


151 
	#CRYPTO_£t_locked_mem_ex_fun˘i⁄s
 
CRYPTO_£t_locked_mem_ex_funcs


	)

152 #unde‡
CRYPTO_gë_locked_mem_ex_fun˘i⁄s


153 
	#CRYPTO_gë_locked_mem_ex_fun˘i⁄s
 
CRYPTO_gë_locked_mem_ex_funcs


	)

156 #unde‡
SSL_CTX_£t_deÁu…_vîify_∑ths


157 
	#SSL_CTX_£t_deÁu…_vîify_∑ths
 
SSL_CTX_£t_def_vîify_∑ths


	)

158 #unde‡
SSL_gë_ex_d©a_X509_STORE_CTX_idx


159 
	#SSL_gë_ex_d©a_X509_STORE_CTX_idx
 
SSL_gë_ex_d_X509_STORE_CTX_idx


	)

160 #unde‡
SSL_add_fûe_˚π_subje˘s_to_°ack


161 
	#SSL_add_fûe_˚π_subje˘s_to_°ack
 
SSL_add_fûe_˚π_subjs_to_°k


	)

162 #unde‡
SSL_add_dú_˚π_subje˘s_to_°ack


163 
	#SSL_add_dú_˚π_subje˘s_to_°ack
 
SSL_add_dú_˚π_subjs_to_°k


	)

164 #unde‡
SSL_CTX_u£_˚πifiˇã_chaö_fûe


165 
	#SSL_CTX_u£_˚πifiˇã_chaö_fûe
 
SSL_CTX_u£_˚π_chaö_fûe


	)

166 #unde‡
SSL_CTX_£t_˚π_vîify_ˇŒback


167 
	#SSL_CTX_£t_˚π_vîify_ˇŒback
 
SSL_CTX_£t_˚π_vîify_cb


	)

168 #unde‡
SSL_CTX_£t_deÁu…_∑sswd_cb_u£rd©a


169 
	#SSL_CTX_£t_deÁu…_∑sswd_cb_u£rd©a
 
SSL_CTX_£t_def_∑sswd_cb_ud


	)

170 #unde‡
SSL_COMP_gë_com¥essi⁄_mëhods


171 
	#SSL_COMP_gë_com¥essi⁄_mëhods
 
SSL_COMP_gë_com¥ess_mëhods


	)

174 #unde‡
ENGINE_gë_deÁu…_BN_mod_exp_¸t


175 
	#ENGINE_gë_deÁu…_BN_mod_exp_¸t
 
ENGINE_gë_def_BN_mod_exp_¸t


	)

176 #unde‡
ENGINE_£t_deÁu…_BN_mod_exp_¸t


177 
	#ENGINE_£t_deÁu…_BN_mod_exp_¸t
 
ENGINE_£t_def_BN_mod_exp_¸t


	)

178 #unde‡
ENGINE_£t_lﬂd_¥ivkey_fun˘i⁄


179 
	#ENGINE_£t_lﬂd_¥ivkey_fun˘i⁄
 
ENGINE_£t_lﬂd_¥ivkey_‚


	)

180 #unde‡
ENGINE_gë_lﬂd_¥ivkey_fun˘i⁄


181 
	#ENGINE_gë_lﬂd_¥ivkey_fun˘i⁄
 
ENGINE_gë_lﬂd_¥ivkey_‚


	)

184 #unde‡
OCSP_REQUEST_gë_ext_by_¸ôiˇl


185 
	#OCSP_REQUEST_gë_ext_by_¸ôiˇl
 
OCSP_REQUEST_gë_ext_by_¸ô


	)

186 #unde‡
OCSP_BASICRESP_gë_ext_by_¸ôiˇl


187 
	#OCSP_BASICRESP_gë_ext_by_¸ôiˇl
 
OCSP_BASICRESP_gë_ext_by_¸ô


	)

188 #unde‡
OCSP_SINGLERESP_gë_ext_by_¸ôiˇl


189 
	#OCSP_SINGLERESP_gë_ext_by_¸ôiˇl
 
OCSP_SINGLERESP_gë_ext_by_¸ô


	)

192 #unde‡
_os¶_ﬁd_des_ede3_cfb64_í¸y±


193 
	#_os¶_ﬁd_des_ede3_cfb64_í¸y±
 
_os¶_odes_ede3_cfb64_í¸y±


	)

194 #unde‡
_os¶_ﬁd_des_ede3_ofb64_í¸y±


195 
	#_os¶_ﬁd_des_ede3_ofb64_í¸y±
 
_os¶_odes_ede3_ofb64_í¸y±


	)

198 #unde‡
OPENSSL_add_Æl_Æg‹ôhms_noc⁄f


199 
	#OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
 
OPENSSL_add_Æl_Ægo_noc⁄f


	)

200 #unde‡
OPENSSL_add_Æl_Æg‹ôhms_c⁄f


201 
	#OPENSSL_add_Æl_Æg‹ôhms_c⁄f
 
OPENSSL_add_Æl_Ægo_c⁄f


	)

204 #unde‡
EC_GROUP_£t_poöt_c⁄vîsi⁄_f‹m


205 
	#EC_GROUP_£t_poöt_c⁄vîsi⁄_f‹m
 
EC_GROUP_£t_poöt_c⁄v_f‹m


	)

206 #unde‡
EC_GROUP_gë_poöt_c⁄vîsi⁄_f‹m


207 
	#EC_GROUP_gë_poöt_c⁄vîsi⁄_f‹m
 
EC_GROUP_gë_poöt_c⁄v_f‹m


	)

208 #unde‡
EC_GROUP_˛ór_‰ì_Æl_exåa_d©a


209 
	#EC_GROUP_˛ór_‰ì_Æl_exåa_d©a
 
EC_GROUP_˛r_‰ì_Æl_xåa_d©a


	)

210 #unde‡
EC_POINT_£t_J¥oje˘ive_co‹dö©es_GFp


211 
	#EC_POINT_£t_J¥oje˘ive_co‹dö©es_GFp
 \

212 
EC_POINT_£t_J¥oj_co‹ds_GFp


	)

213 #unde‡
EC_POINT_gë_J¥oje˘ive_co‹dö©es_GFp


214 
	#EC_POINT_gë_J¥oje˘ive_co‹dö©es_GFp
 \

215 
EC_POINT_gë_J¥oj_co‹ds_GFp


	)

216 #unde‡
EC_POINT_£t_afföe_co‹dö©es_GFp


217 
	#EC_POINT_£t_afföe_co‹dö©es_GFp
 
EC_POINT_£t_afföe_co‹ds_GFp


	)

218 #unde‡
EC_POINT_gë_afföe_co‹dö©es_GFp


219 
	#EC_POINT_gë_afföe_co‹dö©es_GFp
 
EC_POINT_gë_afföe_co‹ds_GFp


	)

220 #unde‡
EC_POINT_£t_com¥es£d_co‹dö©es_GFp


221 
	#EC_POINT_£t_com¥es£d_co‹dö©es_GFp
 
EC_POINT_£t_com¥_co‹ds_GFp


	)

222 #unde‡
EC_POINT_£t_afföe_co‹dö©es_GF2m


223 
	#EC_POINT_£t_afföe_co‹dö©es_GF2m
 
EC_POINT_£t_afföe_co‹ds_GF2m


	)

224 #unde‡
EC_POINT_gë_afföe_co‹dö©es_GF2m


225 
	#EC_POINT_gë_afföe_co‹dö©es_GF2m
 
EC_POINT_gë_afföe_co‹ds_GF2m


	)

226 #unde‡
EC_POINT_£t_com¥es£d_co‹dö©es_GF2m


227 
	#EC_POINT_£t_com¥es£d_co‹dö©es_GF2m
 \

228 
EC_POINT_£t_com¥_co‹ds_GF2m


	)

229 #unde‡
ec_GF2m_sim∂e_group_˛ór_föish


230 
	#ec_GF2m_sim∂e_group_˛ór_föish
 
ec_GF2m_sim∂e_gΩ_˛r_föish


	)

231 #unde‡
ec_GF2m_sim∂e_group_check_dis¸imö™t


232 
	#ec_GF2m_sim∂e_group_check_dis¸imö™t
 
ec_GF2m_sim∂e_gΩ_chk_dis¸im


	)

233 #unde‡
ec_GF2m_sim∂e_poöt_˛ór_föish


234 
	#ec_GF2m_sim∂e_poöt_˛ór_föish
 
ec_GF2m_sim∂e_±_˛r_föish


	)

235 #unde‡
ec_GF2m_sim∂e_poöt_£t_to_öföôy


236 
	#ec_GF2m_sim∂e_poöt_£t_to_öföôy
 
ec_GF2m_sim∂e_±_£t_to_öf


	)

237 #unde‡
ec_GF2m_sim∂e_poöts_make_afföe


238 
	#ec_GF2m_sim∂e_poöts_make_afföe
 
ec_GF2m_sim∂e_±s_make_afföe


	)

239 #unde‡
ec_GF2m_sim∂e_poöt_£t_afföe_co‹dö©es


240 
	#ec_GF2m_sim∂e_poöt_£t_afföe_co‹dö©es
 \

241 
ec_GF2m_smp_±_£t_af_co‹ds


	)

242 #unde‡
ec_GF2m_sim∂e_poöt_gë_afföe_co‹dö©es


243 
	#ec_GF2m_sim∂e_poöt_gë_afföe_co‹dö©es
 \

244 
ec_GF2m_smp_±_gë_af_co‹ds


	)

245 #unde‡
ec_GF2m_sim∂e_£t_com¥es£d_co‹dö©es


246 
	#ec_GF2m_sim∂e_£t_com¥es£d_co‹dö©es
 \

247 
ec_GF2m_smp_£t_com¥_co‹ds


	)

248 #unde‡
ec_GFp_sim∂e_group_£t_curve_GFp


249 
	#ec_GFp_sim∂e_group_£t_curve_GFp
 
ec_GFp_sim∂e_gΩ_£t_curve_GFp


	)

250 #unde‡
ec_GFp_sim∂e_group_gë_curve_GFp


251 
	#ec_GFp_sim∂e_group_gë_curve_GFp
 
ec_GFp_sim∂e_gΩ_gë_curve_GFp


	)

252 #unde‡
ec_GFp_sim∂e_group_˛ór_föish


253 
	#ec_GFp_sim∂e_group_˛ór_föish
 
ec_GFp_sim∂e_gΩ_˛ór_föish


	)

254 #unde‡
ec_GFp_sim∂e_group_£t_gíî©‹


255 
	#ec_GFp_sim∂e_group_£t_gíî©‹
 
ec_GFp_sim∂e_gΩ_£t_gíî©‹


	)

256 #unde‡
ec_GFp_sim∂e_group_gë0_gíî©‹


257 
	#ec_GFp_sim∂e_group_gë0_gíî©‹
 
ec_GFp_sim∂e_gΩ_gt0_gíî©‹


	)

258 #unde‡
ec_GFp_sim∂e_group_gë_coÁ˘‹


259 
	#ec_GFp_sim∂e_group_gë_coÁ˘‹
 
ec_GFp_sim∂e_gΩ_gë_coÁ˘‹


	)

260 #unde‡
ec_GFp_sim∂e_poöt_˛ór_föish


261 
	#ec_GFp_sim∂e_poöt_˛ór_föish
 
ec_GFp_sim∂e_±_˛ór_föish


	)

262 #unde‡
ec_GFp_sim∂e_poöt_£t_to_öföôy


263 
	#ec_GFp_sim∂e_poöt_£t_to_öföôy
 
ec_GFp_sim∂e_±_£t_to_öf


	)

264 #unde‡
ec_GFp_sim∂e_poöts_make_afföe


265 
	#ec_GFp_sim∂e_poöts_make_afföe
 
ec_GFp_sim∂e_±s_make_afföe


	)

266 #unde‡
ec_GFp_sim∂e_group_gë_curve_GFp


267 
	#ec_GFp_sim∂e_group_gë_curve_GFp
 
ec_GFp_sim∂e_gΩ_gë_curve_GFp


	)

268 #unde‡
ec_GFp_sim∂e_£t_J¥oje˘ive_co‹dö©es_GFp


269 
	#ec_GFp_sim∂e_£t_J¥oje˘ive_co‹dö©es_GFp
 \

270 
ec_GFp_smp_£t_J¥oj_co‹ds_GFp


	)

271 #unde‡
ec_GFp_sim∂e_gë_J¥oje˘ive_co‹dö©es_GFp


272 
	#ec_GFp_sim∂e_gë_J¥oje˘ive_co‹dö©es_GFp
 \

273 
ec_GFp_smp_gë_J¥oj_co‹ds_GFp


	)

274 #unde‡
ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es_GFp


275 
	#ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es_GFp
 \

276 
ec_GFp_smp_±_£t_af_co‹ds_GFp


	)

277 #unde‡
ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es_GFp


278 
	#ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es_GFp
 \

279 
ec_GFp_smp_±_gë_af_co‹ds_GFp


	)

280 #unde‡
ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es_GFp


281 
	#ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es_GFp
 \

282 
ec_GFp_smp_£t_com¥_co‹ds_GFp


	)

283 #unde‡
ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es


284 
	#ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es
 \

285 
ec_GFp_smp_±_£t_af_co‹ds


	)

286 #unde‡
ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es


287 
	#ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es
 \

288 
ec_GFp_smp_±_gë_af_co‹ds


	)

289 #unde‡
ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es


290 
	#ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es
 \

291 
ec_GFp_smp_£t_com¥_co‹ds


	)

292 #unde‡
ec_GFp_sim∂e_group_check_dis¸imö™t


293 
	#ec_GFp_sim∂e_group_check_dis¸imö™t
 
ec_GFp_sim∂e_gΩ_chk_dis¸im


	)

296 #unde‡
STORE_mëhod_£t_öôüli£_fun˘i⁄


297 
	#STORE_mëhod_£t_öôüli£_fun˘i⁄
 
STORE_mëh_£t_öôüli£_‚


	)

298 #unde‡
STORE_mëhod_£t_˛ónup_fun˘i⁄


299 
	#STORE_mëhod_£t_˛ónup_fun˘i⁄
 
STORE_mëh_£t_˛ónup_‚


	)

300 #unde‡
STORE_mëhod_£t_gíî©e_fun˘i⁄


301 
	#STORE_mëhod_£t_gíî©e_fun˘i⁄
 
STORE_mëh_£t_gíî©e_‚


	)

302 #unde‡
STORE_mëhod_£t_modify_fun˘i⁄


303 
	#STORE_mëhod_£t_modify_fun˘i⁄
 
STORE_mëh_£t_modify_‚


	)

304 #unde‡
STORE_mëhod_£t_ªvoke_fun˘i⁄


305 
	#STORE_mëhod_£t_ªvoke_fun˘i⁄
 
STORE_mëh_£t_ªvoke_‚


	)

306 #unde‡
STORE_mëhod_£t_dñëe_fun˘i⁄


307 
	#STORE_mëhod_£t_dñëe_fun˘i⁄
 
STORE_mëh_£t_dñëe_‚


	)

308 #unde‡
STORE_mëhod_£t_li°_°¨t_fun˘i⁄


309 
	#STORE_mëhod_£t_li°_°¨t_fun˘i⁄
 
STORE_mëh_£t_li°_°¨t_‚


	)

310 #unde‡
STORE_mëhod_£t_li°_√xt_fun˘i⁄


311 
	#STORE_mëhod_£t_li°_√xt_fun˘i⁄
 
STORE_mëh_£t_li°_√xt_‚


	)

312 #unde‡
STORE_mëhod_£t_li°_íd_fun˘i⁄


313 
	#STORE_mëhod_£t_li°_íd_fun˘i⁄
 
STORE_mëh_£t_li°_íd_‚


	)

314 #unde‡
STORE_mëhod_£t_upd©e_°‹e_fun˘i⁄


315 
	#STORE_mëhod_£t_upd©e_°‹e_fun˘i⁄
 
STORE_mëh_£t_upd©e_°‹e_‚


	)

316 #unde‡
STORE_mëhod_£t_lock_°‹e_fun˘i⁄


317 
	#STORE_mëhod_£t_lock_°‹e_fun˘i⁄
 
STORE_mëh_£t_lock_°‹e_‚


	)

318 #unde‡
STORE_mëhod_£t_u∆ock_°‹e_fun˘i⁄


319 
	#STORE_mëhod_£t_u∆ock_°‹e_fun˘i⁄
 
STORE_mëh_£t_u∆ock_°‹e_‚


	)

320 #unde‡
STORE_mëhod_gë_öôüli£_fun˘i⁄


321 
	#STORE_mëhod_gë_öôüli£_fun˘i⁄
 
STORE_mëh_gë_öôüli£_‚


	)

322 #unde‡
STORE_mëhod_gë_˛ónup_fun˘i⁄


323 
	#STORE_mëhod_gë_˛ónup_fun˘i⁄
 
STORE_mëh_gë_˛ónup_‚


	)

324 #unde‡
STORE_mëhod_gë_gíî©e_fun˘i⁄


325 
	#STORE_mëhod_gë_gíî©e_fun˘i⁄
 
STORE_mëh_gë_gíî©e_‚


	)

326 #unde‡
STORE_mëhod_gë_modify_fun˘i⁄


327 
	#STORE_mëhod_gë_modify_fun˘i⁄
 
STORE_mëh_gë_modify_‚


	)

328 #unde‡
STORE_mëhod_gë_ªvoke_fun˘i⁄


329 
	#STORE_mëhod_gë_ªvoke_fun˘i⁄
 
STORE_mëh_gë_ªvoke_‚


	)

330 #unde‡
STORE_mëhod_gë_dñëe_fun˘i⁄


331 
	#STORE_mëhod_gë_dñëe_fun˘i⁄
 
STORE_mëh_gë_dñëe_‚


	)

332 #unde‡
STORE_mëhod_gë_li°_°¨t_fun˘i⁄


333 
	#STORE_mëhod_gë_li°_°¨t_fun˘i⁄
 
STORE_mëh_gë_li°_°¨t_‚


	)

334 #unde‡
STORE_mëhod_gë_li°_√xt_fun˘i⁄


335 
	#STORE_mëhod_gë_li°_√xt_fun˘i⁄
 
STORE_mëh_gë_li°_√xt_‚


	)

336 #unde‡
STORE_mëhod_gë_li°_íd_fun˘i⁄


337 
	#STORE_mëhod_gë_li°_íd_fun˘i⁄
 
STORE_mëh_gë_li°_íd_‚


	)

338 #unde‡
STORE_mëhod_gë_upd©e_°‹e_fun˘i⁄


339 
	#STORE_mëhod_gë_upd©e_°‹e_fun˘i⁄
 
STORE_mëh_gë_upd©e_°‹e_‚


	)

340 #unde‡
STORE_mëhod_gë_lock_°‹e_fun˘i⁄


341 
	#STORE_mëhod_gë_lock_°‹e_fun˘i⁄
 
STORE_mëh_gë_lock_°‹e_‚


	)

342 #unde‡
STORE_mëhod_gë_u∆ock_°‹e_fun˘i⁄


343 
	#STORE_mëhod_gë_u∆ock_°‹e_fun˘i⁄
 
STORE_mëh_gë_u∆ock_°‹e_‚


	)

349 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
OPENSSL_SYS_VMS
Ë|| deföed(
OPENSSL_SYS_OS2
)

350 #unde‡
ERR_lﬂd_CRYPTO_°rögs


351 
	#ERR_lﬂd_CRYPTO_°rögs
 
ERR_lﬂd_CRYPTOlib_°rögs


	)

352 #unde‡
OCSP_¸lID_√w


353 
	#OCSP_¸lID_√w
 
OCSP_¸lID2_√w


	)

355 #unde‡
d2i_ECPARAMETERS


356 
	#d2i_ECPARAMETERS
 
d2i_UC_ECPARAMETERS


	)

357 #unde‡
i2d_ECPARAMETERS


358 
	#i2d_ECPARAMETERS
 
i2d_UC_ECPARAMETERS


	)

359 #unde‡
d2i_ECPKPARAMETERS


360 
	#d2i_ECPKPARAMETERS
 
d2i_UC_ECPKPARAMETERS


	)

361 #unde‡
i2d_ECPKPARAMETERS


362 
	#i2d_ECPKPARAMETERS
 
i2d_UC_ECPKPARAMETERS


	)

370 #unde‡
X509v3_˛ónup_exãnsi⁄s


371 
	#X509v3_˛ónup_exãnsi⁄s
 
oX509v3_˛ónup_exãnsi⁄s


	)

372 #unde‡
X509v3_add_exãnsi⁄


373 
	#X509v3_add_exãnsi⁄
 
oX509v3_add_exãnsi⁄


	)

374 #unde‡
X509v3_add_√tsˇ≥_exãnsi⁄s


375 
	#X509v3_add_√tsˇ≥_exãnsi⁄s
 
oX509v3_add_√tsˇ≥_exãnsi⁄s


	)

376 #unde‡
X509v3_add_°™d¨d_exãnsi⁄s


377 
	#X509v3_add_°™d¨d_exãnsi⁄s
 
oX509v3_add_°™d¨d_exãnsi⁄s


	)

	@/usr/include/openssl/tls1.h

72 #i‚de‡
HEADER_TLS1_H


73 
	#HEADER_TLS1_H


	)

75 
	~<›ís¶/buf„r.h
>

77 #ifde‡ 
__˝lu•lus


81 
	#TLS1_ALLOW_EXPERIMENTAL_CIPHERSUITES
 1

	)

83 
	#TLS1_VERSION
 0x0301

	)

84 
	#TLS1_VERSION_MAJOR
 0x03

	)

85 
	#TLS1_VERSION_MINOR
 0x01

	)

87 
	#TLS1_AD_DECRYPTION_FAILED
 21

	)

88 
	#TLS1_AD_RECORD_OVERFLOW
 22

	)

89 
	#TLS1_AD_UNKNOWN_CA
 48

	)

90 
	#TLS1_AD_ACCESS_DENIED
 49

	)

91 
	#TLS1_AD_DECODE_ERROR
 50

	)

92 
	#TLS1_AD_DECRYPT_ERROR
 51

	)

93 
	#TLS1_AD_EXPORT_RESTRICTION
 60

	)

94 
	#TLS1_AD_PROTOCOL_VERSION
 70

	)

95 
	#TLS1_AD_INSUFFICIENT_SECURITY
 71

	)

96 
	#TLS1_AD_INTERNAL_ERROR
 80

	)

97 
	#TLS1_AD_USER_CANCELLED
 90

	)

98 
	#TLS1_AD_NO_RENEGOTIATION
 100

	)

104 
	#TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_MD5
 0x03000060

	)

105 
	#TLS1_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5
 0x03000061

	)

106 
	#TLS1_CK_RSA_EXPORT1024_WITH_DES_CBC_SHA
 0x03000062

	)

107 
	#TLS1_CK_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA
 0x03000063

	)

108 
	#TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_SHA
 0x03000064

	)

109 
	#TLS1_CK_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA
 0x03000065

	)

110 
	#TLS1_CK_DHE_DSS_WITH_RC4_128_SHA
 0x03000066

	)

114 
	#TLS1_CK_RSA_WITH_AES_128_SHA
 0x0300002F

	)

115 
	#TLS1_CK_DH_DSS_WITH_AES_128_SHA
 0x03000030

	)

116 
	#TLS1_CK_DH_RSA_WITH_AES_128_SHA
 0x03000031

	)

117 
	#TLS1_CK_DHE_DSS_WITH_AES_128_SHA
 0x03000032

	)

118 
	#TLS1_CK_DHE_RSA_WITH_AES_128_SHA
 0x03000033

	)

119 
	#TLS1_CK_ADH_WITH_AES_128_SHA
 0x03000034

	)

121 
	#TLS1_CK_RSA_WITH_AES_256_SHA
 0x03000035

	)

122 
	#TLS1_CK_DH_DSS_WITH_AES_256_SHA
 0x03000036

	)

123 
	#TLS1_CK_DH_RSA_WITH_AES_256_SHA
 0x03000037

	)

124 
	#TLS1_CK_DHE_DSS_WITH_AES_256_SHA
 0x03000038

	)

125 
	#TLS1_CK_DHE_RSA_WITH_AES_256_SHA
 0x03000039

	)

126 
	#TLS1_CK_ADH_WITH_AES_256_SHA
 0x0300003A

	)

129 
	#TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA
 0x0300C001

	)

130 
	#TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA
 0x0300C002

	)

131 
	#TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA
 0x0300C003

	)

132 
	#TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA
 0x0300C004

	)

133 
	#TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA
 0x0300C005

	)

135 
	#TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA
 0x0300C006

	)

136 
	#TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA
 0x0300C007

	)

137 
	#TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA
 0x0300C008

	)

138 
	#TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
 0x0300C009

	)

139 
	#TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
 0x0300C00A

	)

141 
	#TLS1_CK_ECDH_RSA_WITH_NULL_SHA
 0x0300C00B

	)

142 
	#TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA
 0x0300C00C

	)

143 
	#TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA
 0x0300C00D

	)

144 
	#TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA
 0x0300C00E

	)

145 
	#TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA
 0x0300C00F

	)

147 
	#TLS1_CK_ECDHE_RSA_WITH_NULL_SHA
 0x0300C010

	)

148 
	#TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA
 0x0300C011

	)

149 
	#TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA
 0x0300C012

	)

150 
	#TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA
 0x0300C013

	)

151 
	#TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA
 0x0300C014

	)

153 
	#TLS1_CK_ECDH_™⁄_WITH_NULL_SHA
 0x0300C015

	)

154 
	#TLS1_CK_ECDH_™⁄_WITH_RC4_128_SHA
 0x0300C016

	)

155 
	#TLS1_CK_ECDH_™⁄_WITH_DES_192_CBC3_SHA
 0x0300C017

	)

156 
	#TLS1_CK_ECDH_™⁄_WITH_AES_128_CBC_SHA
 0x0300C018

	)

157 
	#TLS1_CK_ECDH_™⁄_WITH_AES_256_CBC_SHA
 0x0300C019

	)

166 
	#TLS1_TXT_RSA_EXPORT1024_WITH_RC4_56_MD5
 "EXP1024-RC4-MD5"

	)

167 
	#TLS1_TXT_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5
 "EXP1024-RC2-CBC-MD5"

	)

168 
	#TLS1_TXT_RSA_EXPORT1024_WITH_DES_CBC_SHA
 "EXP1024-DES-CBC-SHA"

	)

169 
	#TLS1_TXT_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA
 "EXP1024-DHE-DSS-DES-CBC-SHA"

	)

170 
	#TLS1_TXT_RSA_EXPORT1024_WITH_RC4_56_SHA
 "EXP1024-RC4-SHA"

	)

171 
	#TLS1_TXT_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA
 "EXP1024-DHE-DSS-RC4-SHA"

	)

172 
	#TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA
 "DHE-DSS-RC4-SHA"

	)

175 
	#TLS1_TXT_RSA_WITH_AES_128_SHA
 "AES128-SHA"

	)

176 
	#TLS1_TXT_DH_DSS_WITH_AES_128_SHA
 "DH-DSS-AES128-SHA"

	)

177 
	#TLS1_TXT_DH_RSA_WITH_AES_128_SHA
 "DH-RSA-AES128-SHA"

	)

178 
	#TLS1_TXT_DHE_DSS_WITH_AES_128_SHA
 "DHE-DSS-AES128-SHA"

	)

179 
	#TLS1_TXT_DHE_RSA_WITH_AES_128_SHA
 "DHE-RSA-AES128-SHA"

	)

180 
	#TLS1_TXT_ADH_WITH_AES_128_SHA
 "ADH-AES128-SHA"

	)

182 
	#TLS1_TXT_RSA_WITH_AES_256_SHA
 "AES256-SHA"

	)

183 
	#TLS1_TXT_DH_DSS_WITH_AES_256_SHA
 "DH-DSS-AES256-SHA"

	)

184 
	#TLS1_TXT_DH_RSA_WITH_AES_256_SHA
 "DH-RSA-AES256-SHA"

	)

185 
	#TLS1_TXT_DHE_DSS_WITH_AES_256_SHA
 "DHE-DSS-AES256-SHA"

	)

186 
	#TLS1_TXT_DHE_RSA_WITH_AES_256_SHA
 "DHE-RSA-AES256-SHA"

	)

187 
	#TLS1_TXT_ADH_WITH_AES_256_SHA
 "ADH-AES256-SHA"

	)

190 
	#TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA
 "ECDH-ECDSA-NULL-SHA"

	)

191 
	#TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA
 "ECDH-ECDSA-RC4-SHA"

	)

192 
	#TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA
 "ECDH-ECDSA-DES-CBC3-SHA"

	)

193 
	#TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA
 "ECDH-ECDSA-AES128-SHA"

	)

194 
	#TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA
 "ECDH-ECDSA-AES256-SHA"

	)

196 
	#TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA
 "ECDHE-ECDSA-NULL-SHA"

	)

197 
	#TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA
 "ECDHE-ECDSA-RC4-SHA"

	)

198 
	#TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA
 "ECDHE-ECDSA-DES-CBC3-SHA"

	)

199 
	#TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
 "ECDHE-ECDSA-AES128-SHA"

	)

200 
	#TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
 "ECDHE-ECDSA-AES256-SHA"

	)

202 
	#TLS1_TXT_ECDH_RSA_WITH_NULL_SHA
 "ECDH-RSA-NULL-SHA"

	)

203 
	#TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA
 "ECDH-RSA-RC4-SHA"

	)

204 
	#TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA
 "ECDH-RSA-DES-CBC3-SHA"

	)

205 
	#TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA
 "ECDH-RSA-AES128-SHA"

	)

206 
	#TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA
 "ECDH-RSA-AES256-SHA"

	)

208 
	#TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA
 "ECDHE-RSA-NULL-SHA"

	)

209 
	#TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA
 "ECDHE-RSA-RC4-SHA"

	)

210 
	#TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA
 "ECDHE-RSA-DES-CBC3-SHA"

	)

211 
	#TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA
 "ECDHE-RSA-AES128-SHA"

	)

212 
	#TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA
 "ECDHE-RSA-AES256-SHA"

	)

214 
	#TLS1_TXT_ECDH_™⁄_WITH_NULL_SHA
 "AECDH-NULL-SHA"

	)

215 
	#TLS1_TXT_ECDH_™⁄_WITH_RC4_128_SHA
 "AECDH-RC4-SHA"

	)

216 
	#TLS1_TXT_ECDH_™⁄_WITH_DES_192_CBC3_SHA
 "AECDH-DES-CBC3-SHA"

	)

217 
	#TLS1_TXT_ECDH_™⁄_WITH_AES_128_CBC_SHA
 "AECDH-AES128-SHA"

	)

218 
	#TLS1_TXT_ECDH_™⁄_WITH_AES_256_CBC_SHA
 "AECDH-AES256-SHA"

	)

220 
	#TLS_CT_RSA_SIGN
 1

	)

221 
	#TLS_CT_DSS_SIGN
 2

	)

222 
	#TLS_CT_RSA_FIXED_DH
 3

	)

223 
	#TLS_CT_DSS_FIXED_DH
 4

	)

224 
	#TLS_CT_ECDSA_SIGN
 64

	)

225 
	#TLS_CT_RSA_FIXED_ECDH
 65

	)

226 
	#TLS_CT_ECDSA_FIXED_ECDH
 66

	)

227 
	#TLS_CT_NUMBER
 7

	)

229 
	#TLS1_FINISH_MAC_LENGTH
 12

	)

231 
	#TLS_MD_MAX_CONST_SIZE
 20

	)

232 
	#TLS_MD_CLIENT_FINISH_CONST
 "˛õ¡ föished"

	)

233 
	#TLS_MD_CLIENT_FINISH_CONST_SIZE
 15

	)

234 
	#TLS_MD_SERVER_FINISH_CONST
 "£rvî föished"

	)

235 
	#TLS_MD_SERVER_FINISH_CONST_SIZE
 15

	)

236 
	#TLS_MD_SERVER_WRITE_KEY_CONST
 "£rvî wrôêkey"

	)

237 
	#TLS_MD_SERVER_WRITE_KEY_CONST_SIZE
 16

	)

238 
	#TLS_MD_KEY_EXPANSION_CONST
 "keyÉx∑nsi⁄"

	)

239 
	#TLS_MD_KEY_EXPANSION_CONST_SIZE
 13

	)

240 
	#TLS_MD_CLIENT_WRITE_KEY_CONST
 "˛õ¡ wrôêkey"

	)

241 
	#TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE
 16

	)

242 
	#TLS_MD_SERVER_WRITE_KEY_CONST
 "£rvî wrôêkey"

	)

243 
	#TLS_MD_SERVER_WRITE_KEY_CONST_SIZE
 16

	)

244 
	#TLS_MD_IV_BLOCK_CONST
 "IV block"

	)

245 
	#TLS_MD_IV_BLOCK_CONST_SIZE
 8

	)

246 
	#TLS_MD_MASTER_SECRET_CONST
 "ma°î se¸ë"

	)

247 
	#TLS_MD_MASTER_SECRET_CONST_SIZE
 13

	)

249 #ifde‡
CHARSET_EBCDIC


250 #unde‡
TLS_MD_CLIENT_FINISH_CONST


251 
	#TLS_MD_CLIENT_FINISH_CONST
 "\x63\x6c\x69\x65\x6e\x74\x20\x66\x69\x6e\x69\x73\x68\x65\x64"

	)

252 #unde‡
TLS_MD_SERVER_FINISH_CONST


253 
	#TLS_MD_SERVER_FINISH_CONST
 "\x73\x65\x72\x76\x65\x72\x20\x66\x69\x6e\x69\x73\x68\x65\x64"

	)

254 #unde‡
TLS_MD_SERVER_WRITE_KEY_CONST


255 
	#TLS_MD_SERVER_WRITE_KEY_CONST
 "\x73\x65\x72\x76\x65\x72\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"

	)

256 #unde‡
TLS_MD_KEY_EXPANSION_CONST


257 
	#TLS_MD_KEY_EXPANSION_CONST
 "\x6b\x65\x79\x20\x65\x78\x70\x61\x6e\x73\x69\x6f\x6e"

	)

258 #unde‡
TLS_MD_CLIENT_WRITE_KEY_CONST


259 
	#TLS_MD_CLIENT_WRITE_KEY_CONST
 "\x63\x6c\x69\x65\x6e\x74\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"

	)

260 #unde‡
TLS_MD_SERVER_WRITE_KEY_CONST


261 
	#TLS_MD_SERVER_WRITE_KEY_CONST
 "\x73\x65\x72\x76\x65\x72\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"

	)

262 #unde‡
TLS_MD_IV_BLOCK_CONST


263 
	#TLS_MD_IV_BLOCK_CONST
 "\x49\x56\x20\x62\x6c\x6f\x63\x6b"

	)

264 #unde‡
TLS_MD_MASTER_SECRET_CONST


265 
	#TLS_MD_MASTER_SECRET_CONST
 "\x6d\x61\x73\x74\x65\x72\x20\x73\x65\x63\x72\x65\x74"

	)

268 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/x509_vfy.h

59 #i‚de‡
HEADER_X509_H


60 
	~<›ís¶/x509.h
>

65 #i‚de‡
HEADER_X509_VFY_H


66 
	#HEADER_X509_VFY_H


	)

68 
	~<›ís¶/›ís¶c⁄f.h
>

69 #i‚de‡
OPENSSL_NO_LHASH


70 
	~<›ís¶/lhash.h
>

72 
	~<›ís¶/bio.h
>

73 
	~<›ís¶/¸y±o.h
>

74 
	~<›ís¶/symhacks.h
>

76 #ifde‡ 
__˝lu•lus


81 
	sx509_hash_dú_°


83 
num_dús
;

84 **
dús
;

85 *
dús_ty≥
;

86 
num_dús_Ælo˚d
;

87 } 
	tX509_HASH_DIR_CTX
;

89 
	sx509_fûe_°


91 
num_∑ths
;

92 
num_Ælo˚d
;

93 **
∑ths
;

94 *
∑th_ty≥
;

95 } 
	tX509_CERT_FILE_CTX
;

115 
	#X509_LU_RETRY
 -1

	)

116 
	#X509_LU_FAIL
 0

	)

117 
	#X509_LU_X509
 1

	)

118 
	#X509_LU_CRL
 2

	)

119 
	#X509_LU_PKEY
 3

	)

121 
	sx509_obje˘_°


124 
ty≥
;

126 *
±r
;

127 
X509
 *
x509
;

128 
X509_CRL
 *
¸l
;

129 
EVP_PKEY
 *
pkey
;

130 } 
d©a
;

131 } 
	tX509_OBJECT
;

133 
x509_lookup_°
 
	tX509_LOOKUP
;

135 
DECLARE_STACK_OF
(
X509_LOOKUP
)

136 
DECLARE_STACK_OF
(
X509_OBJECT
)

139 
	sx509_lookup_mëhod_°


141 c⁄° *
«me
;

142 (*
√w_ôem
)(
X509_LOOKUP
 *
˘x
);

143 (*
‰ì
)(
X509_LOOKUP
 *
˘x
);

144 (*
öô
)(
X509_LOOKUP
 *
˘x
);

145 (*
shutdown
)(
X509_LOOKUP
 *
˘x
);

146 (*
˘æ
)(
X509_LOOKUP
 *
˘x
,
cmd
,c⁄° *
¨gc
,
¨gl
,

147 **
ªt
);

148 (*
gë_by_subje˘
)(
X509_LOOKUP
 *
˘x
,
ty≥
,
X509_NAME
 *
«me
,

149 
X509_OBJECT
 *
ªt
);

150 (*
gë_by_issuî_£rül
)(
X509_LOOKUP
 *
˘x
,
ty≥
,
X509_NAME
 *
«me
,

151 
ASN1_INTEGER
 *
£rül
,
X509_OBJECT
 *
ªt
);

152 (*
gë_by_fögî¥öt
)(
X509_LOOKUP
 *
˘x
,
ty≥
,

153 *
byãs
,
Àn
,

154 
X509_OBJECT
 *
ªt
);

155 (*
gë_by_Æüs
)(
X509_LOOKUP
 *
˘x
,
ty≥
,*
°r
,
Àn
,

156 
X509_OBJECT
 *
ªt
);

157 } 
	tX509_LOOKUP_METHOD
;

164 
	sX509_VERIFY_PARAM_°


166 *
«me
;

167 
time_t
 
check_time
;

168 
öh_Êags
;

169 
Êags
;

170 
puΩo£
;

171 
åu°
;

172 
dïth
;

173 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicõs
;

174 } 
	tX509_VERIFY_PARAM
;

176 
DECLARE_STACK_OF
(
X509_VERIFY_PARAM
)

181 
	sx509_°‹e_°


184 
ˇche
;

185 
STACK_OF
(
X509_OBJECT
Ë*
objs
;

188 
STACK_OF
(
X509_LOOKUP
Ë*
gë_˚π_mëhods
;

190 
X509_VERIFY_PARAM
 *
∑øm
;

193 (*
vîify
)(
X509_STORE_CTX
 *
˘x
);

194 (*
vîify_cb
)(
ok
,
X509_STORE_CTX
 *
˘x
);

195 (*
gë_issuî
)(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
);

196 (*
check_issued
)(
X509_STORE_CTX
 *
˘x
, 
X509
 *
x
, X509 *
issuî
);

197 (*
check_ªvoˇti⁄
)(
X509_STORE_CTX
 *
˘x
);

198 (*
gë_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 **
¸l
, 
X509
 *
x
);

199 (*
check_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
);

200 (*
˚π_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
, 
X509
 *
x
);

201 (*
˛ónup
)(
X509_STORE_CTX
 *
˘x
);

203 
CRYPTO_EX_DATA
 
ex_d©a
;

204 
ª„ªn˚s
;

207 
X509_STORE_£t_dïth
(
X509_STORE
 *
°‹e
, 
dïth
);

209 
	#X509_STORE_£t_vîify_cb_func
(
˘x
,
func
Ë((˘x)->
vîify_cb
=(func))

	)

210 
	#X509_STORE_£t_vîify_func
(
˘x
,
func
Ë((˘x)->
vîify
=(func))

	)

213 
	sx509_lookup_°


215 
öô
;

216 
skù
;

217 
X509_LOOKUP_METHOD
 *
mëhod
;

218 *
mëhod_d©a
;

220 
X509_STORE
 *
°‹e_˘x
;

226 
	sx509_°‹e_˘x_°


228 
X509_STORE
 *
˘x
;

229 
cuºít_mëhod
;

232 
X509
 *
˚π
;

233 
STACK_OF
(
X509
Ë*
u¡ru°ed
;

234 
STACK_OF
(
X509_CRL
Ë*
¸ls
;

236 
X509_VERIFY_PARAM
 *
∑øm
;

237 *
Ÿhî_˘x
;

240 (*
vîify
)(
X509_STORE_CTX
 *
˘x
);

241 (*
vîify_cb
)(
ok
,
X509_STORE_CTX
 *
˘x
);

242 (*
gë_issuî
)(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
);

243 (*
check_issued
)(
X509_STORE_CTX
 *
˘x
, 
X509
 *
x
, X509 *
issuî
);

244 (*
check_ªvoˇti⁄
)(
X509_STORE_CTX
 *
˘x
);

245 (*
gë_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 **
¸l
, 
X509
 *
x
);

246 (*
check_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
);

247 (*
˚π_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
, 
X509
 *
x
);

248 (*
check_pﬁicy
)(
X509_STORE_CTX
 *
˘x
);

249 (*
˛ónup
)(
X509_STORE_CTX
 *
˘x
);

252 
vÆid
;

253 
œ°_u¡ru°ed
;

254 
STACK_OF
(
X509
Ë*
chaö
;

255 
X509_POLICY_TREE
 *
åì
;

257 
ex∂icô_pﬁicy
;

260 
îr‹_dïth
;

261 
îr‹
;

262 
X509
 *
cuºít_˚π
;

263 
X509
 *
cuºít_issuî
;

264 
X509_CRL
 *
cuºít_¸l
;

266 
CRYPTO_EX_DATA
 
ex_d©a
;

269 
X509_STORE_CTX_£t_dïth
(
X509_STORE_CTX
 *
˘x
, 
dïth
);

271 
	#X509_STORE_CTX_£t_≠p_d©a
(
˘x
,
d©a
) \

272 
	`X509_STORE_CTX_£t_ex_d©a
(
˘x
,0,
d©a
)

	)

273 
	#X509_STORE_CTX_gë_≠p_d©a
(
˘x
) \

274 
	`X509_STORE_CTX_gë_ex_d©a
(
˘x
,0)

	)

276 
	#X509_L_FILE_LOAD
 1

	)

277 
	#X509_L_ADD_DIR
 2

	)

279 
	#X509_LOOKUP_lﬂd_fûe
(
x
,
«me
,
ty≥
) \

280 
	`X509_LOOKUP_˘æ
((
x
),
X509_L_FILE_LOAD
,(
«me
),()(
ty≥
),
NULL
)

	)

282 
	#X509_LOOKUP_add_dú
(
x
,
«me
,
ty≥
) \

283 
	`X509_LOOKUP_˘æ
((
x
),
X509_L_ADD_DIR
,(
«me
),()(
ty≥
),
NULL
)

	)

285 
	#X509_V_OK
 0

	)

288 
	#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT
 2

	)

289 
	#X509_V_ERR_UNABLE_TO_GET_CRL
 3

	)

290 
	#X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE
 4

	)

291 
	#X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE
 5

	)

292 
	#X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY
 6

	)

293 
	#X509_V_ERR_CERT_SIGNATURE_FAILURE
 7

	)

294 
	#X509_V_ERR_CRL_SIGNATURE_FAILURE
 8

	)

295 
	#X509_V_ERR_CERT_NOT_YET_VALID
 9

	)

296 
	#X509_V_ERR_CERT_HAS_EXPIRED
 10

	)

297 
	#X509_V_ERR_CRL_NOT_YET_VALID
 11

	)

298 
	#X509_V_ERR_CRL_HAS_EXPIRED
 12

	)

299 
	#X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD
 13

	)

300 
	#X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD
 14

	)

301 
	#X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD
 15

	)

302 
	#X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD
 16

	)

303 
	#X509_V_ERR_OUT_OF_MEM
 17

	)

304 
	#X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
 18

	)

305 
	#X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN
 19

	)

306 
	#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY
 20

	)

307 
	#X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE
 21

	)

308 
	#X509_V_ERR_CERT_CHAIN_TOO_LONG
 22

	)

309 
	#X509_V_ERR_CERT_REVOKED
 23

	)

310 
	#X509_V_ERR_INVALID_CA
 24

	)

311 
	#X509_V_ERR_PATH_LENGTH_EXCEEDED
 25

	)

312 
	#X509_V_ERR_INVALID_PURPOSE
 26

	)

313 
	#X509_V_ERR_CERT_UNTRUSTED
 27

	)

314 
	#X509_V_ERR_CERT_REJECTED
 28

	)

316 
	#X509_V_ERR_SUBJECT_ISSUER_MISMATCH
 29

	)

317 
	#X509_V_ERR_AKID_SKID_MISMATCH
 30

	)

318 
	#X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH
 31

	)

319 
	#X509_V_ERR_KEYUSAGE_NO_CERTSIGN
 32

	)

321 
	#X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER
 33

	)

322 
	#X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION
 34

	)

323 
	#X509_V_ERR_KEYUSAGE_NO_CRL_SIGN
 35

	)

324 
	#X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION
 36

	)

325 
	#X509_V_ERR_INVALID_NON_CA
 37

	)

326 
	#X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED
 38

	)

327 
	#X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE
 39

	)

328 
	#X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED
 40

	)

330 
	#X509_V_ERR_INVALID_EXTENSION
 41

	)

331 
	#X509_V_ERR_INVALID_POLICY_EXTENSION
 42

	)

332 
	#X509_V_ERR_NO_EXPLICIT_POLICY
 43

	)

336 
	#X509_V_ERR_APPLICATION_VERIFICATION
 50

	)

341 
	#X509_V_FLAG_CB_ISSUER_CHECK
 0x1

	)

343 
	#X509_V_FLAG_USE_CHECK_TIME
 0x2

	)

345 
	#X509_V_FLAG_CRL_CHECK
 0x4

	)

347 
	#X509_V_FLAG_CRL_CHECK_ALL
 0x8

	)

349 
	#X509_V_FLAG_IGNORE_CRITICAL
 0x10

	)

351 
	#X509_V_FLAG_X509_STRICT
 0x20

	)

353 
	#X509_V_FLAG_ALLOW_PROXY_CERTS
 0x40

	)

355 
	#X509_V_FLAG_POLICY_CHECK
 0x80

	)

357 
	#X509_V_FLAG_EXPLICIT_POLICY
 0x100

	)

359 
	#X509_V_FLAG_INHIBIT_ANY
 0x200

	)

361 
	#X509_V_FLAG_INHIBIT_MAP
 0x400

	)

363 
	#X509_V_FLAG_NOTIFY_POLICY
 0x800

	)

365 
	#X509_VP_FLAG_DEFAULT
 0x1

	)

366 
	#X509_VP_FLAG_OVERWRITE
 0x2

	)

367 
	#X509_VP_FLAG_RESET_FLAGS
 0x4

	)

368 
	#X509_VP_FLAG_LOCKED
 0x8

	)

369 
	#X509_VP_FLAG_ONCE
 0x10

	)

372 
	#X509_V_FLAG_POLICY_MASK
 (
X509_V_FLAG_POLICY_CHECK
 \

373 | 
X509_V_FLAG_EXPLICIT_POLICY
 \

374 | 
X509_V_FLAG_INHIBIT_ANY
 \

375 | 
X509_V_FLAG_INHIBIT_MAP
)

	)

377 
X509_OBJECT_idx_by_subje˘
(
STACK_OF
(
X509_OBJECT
Ë*
h
, 
ty≥
,

378 
X509_NAME
 *
«me
);

379 
X509_OBJECT
 *
X509_OBJECT_ªåõve_by_subje˘
(
STACK_OF
(X509_OBJECTË*
h
,
ty≥
,
X509_NAME
 *
«me
);

380 
X509_OBJECT
 *
X509_OBJECT_ªåõve_m©ch
(
STACK_OF
(X509_OBJECTË*
h
, X509_OBJECT *
x
);

381 
X509_OBJECT_up_ªf_cou¡
(
X509_OBJECT
 *
a
);

382 
X509_OBJECT_‰ì_c⁄ã¡s
(
X509_OBJECT
 *
a
);

383 
X509_STORE
 *
X509_STORE_√w
();

384 
X509_STORE_‰ì
(
X509_STORE
 *
v
);

386 
X509_STORE_£t_Êags
(
X509_STORE
 *
˘x
, 
Êags
);

387 
X509_STORE_£t_puΩo£
(
X509_STORE
 *
˘x
, 
puΩo£
);

388 
X509_STORE_£t_åu°
(
X509_STORE
 *
˘x
, 
åu°
);

389 
X509_STORE_£t1_∑øm
(
X509_STORE
 *
˘x
, 
X509_VERIFY_PARAM
 *
pm
);

391 
X509_STORE_CTX
 *
X509_STORE_CTX_√w
();

393 
X509_STORE_CTX_gë1_issuî
(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
);

395 
X509_STORE_CTX_‰ì
(
X509_STORE_CTX
 *
˘x
);

396 
X509_STORE_CTX_öô
(
X509_STORE_CTX
 *
˘x
, 
X509_STORE
 *
°‹e
,

397 
X509
 *
x509
, 
STACK_OF
(X509Ë*
chaö
);

398 
X509_STORE_CTX_åu°ed_°ack
(
X509_STORE_CTX
 *
˘x
, 
STACK_OF
(
X509
Ë*
sk
);

399 
X509_STORE_CTX_˛ónup
(
X509_STORE_CTX
 *
˘x
);

401 
X509_LOOKUP
 *
X509_STORE_add_lookup
(
X509_STORE
 *
v
, 
X509_LOOKUP_METHOD
 *
m
);

403 
X509_LOOKUP_METHOD
 *
X509_LOOKUP_hash_dú
();

404 
X509_LOOKUP_METHOD
 *
X509_LOOKUP_fûe
();

406 
X509_STORE_add_˚π
(
X509_STORE
 *
˘x
, 
X509
 *
x
);

407 
X509_STORE_add_¸l
(
X509_STORE
 *
˘x
, 
X509_CRL
 *
x
);

409 
X509_STORE_gë_by_subje˘
(
X509_STORE_CTX
 *
vs
,
ty≥
,
X509_NAME
 *
«me
,

410 
X509_OBJECT
 *
ªt
);

412 
X509_LOOKUP_˘æ
(
X509_LOOKUP
 *
˘x
, 
cmd
, c⁄° *
¨gc
,

413 
¨gl
, **
ªt
);

415 #i‚de‡
OPENSSL_NO_STDIO


416 
X509_lﬂd_˚π_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

417 
X509_lﬂd_¸l_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

418 
X509_lﬂd_˚π_¸l_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
);

422 
X509_LOOKUP
 *
X509_LOOKUP_√w
(
X509_LOOKUP_METHOD
 *
mëhod
);

423 
X509_LOOKUP_‰ì
(
X509_LOOKUP
 *
˘x
);

424 
X509_LOOKUP_öô
(
X509_LOOKUP
 *
˘x
);

425 
X509_LOOKUP_by_subje˘
(
X509_LOOKUP
 *
˘x
, 
ty≥
, 
X509_NAME
 *
«me
,

426 
X509_OBJECT
 *
ªt
);

427 
X509_LOOKUP_by_issuî_£rül
(
X509_LOOKUP
 *
˘x
, 
ty≥
, 
X509_NAME
 *
«me
,

428 
ASN1_INTEGER
 *
£rül
, 
X509_OBJECT
 *
ªt
);

429 
X509_LOOKUP_by_fögî¥öt
(
X509_LOOKUP
 *
˘x
, 
ty≥
,

430 *
byãs
, 
Àn
, 
X509_OBJECT
 *
ªt
);

431 
X509_LOOKUP_by_Æüs
(
X509_LOOKUP
 *
˘x
, 
ty≥
, *
°r
,

432 
Àn
, 
X509_OBJECT
 *
ªt
);

433 
X509_LOOKUP_shutdown
(
X509_LOOKUP
 *
˘x
);

435 #i‚de‡
OPENSSL_NO_STDIO


436 
X509_STORE_lﬂd_loˇti⁄s
 (
X509_STORE
 *
˘x
,

437 c⁄° *
fûe
, c⁄° *
dú
);

438 
X509_STORE_£t_deÁu…_∑ths
(
X509_STORE
 *
˘x
);

441 
X509_STORE_CTX_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

442 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
);

443 
X509_STORE_CTX_£t_ex_d©a
(
X509_STORE_CTX
 *
˘x
,
idx
,*
d©a
);

444 * 
X509_STORE_CTX_gë_ex_d©a
(
X509_STORE_CTX
 *
˘x
,
idx
);

445 
X509_STORE_CTX_gë_îr‹
(
X509_STORE_CTX
 *
˘x
);

446 
X509_STORE_CTX_£t_îr‹
(
X509_STORE_CTX
 *
˘x
,
s
);

447 
X509_STORE_CTX_gë_îr‹_dïth
(
X509_STORE_CTX
 *
˘x
);

448 
X509
 * 
X509_STORE_CTX_gë_cuºít_˚π
(
X509_STORE_CTX
 *
˘x
);

449 
STACK_OF
(
X509
Ë*
X509_STORE_CTX_gë_chaö
(
X509_STORE_CTX
 *
˘x
);

450 
STACK_OF
(
X509
Ë*
X509_STORE_CTX_gë1_chaö
(
X509_STORE_CTX
 *
˘x
);

451 
X509_STORE_CTX_£t_˚π
(
X509_STORE_CTX
 *
c
,
X509
 *
x
);

452 
X509_STORE_CTX_£t_chaö
(
X509_STORE_CTX
 *
c
,
STACK_OF
(
X509
Ë*
sk
);

453 
X509_STORE_CTX_£t0_¸ls
(
X509_STORE_CTX
 *
c
,
STACK_OF
(
X509_CRL
Ë*
sk
);

454 
X509_STORE_CTX_£t_puΩo£
(
X509_STORE_CTX
 *
˘x
, 
puΩo£
);

455 
X509_STORE_CTX_£t_åu°
(
X509_STORE_CTX
 *
˘x
, 
åu°
);

456 
X509_STORE_CTX_puΩo£_öhîô
(
X509_STORE_CTX
 *
˘x
, 
def_puΩo£
,

457 
puΩo£
, 
åu°
);

458 
X509_STORE_CTX_£t_Êags
(
X509_STORE_CTX
 *
˘x
, 
Êags
);

459 
X509_STORE_CTX_£t_time
(
X509_STORE_CTX
 *
˘x
, 
Êags
,

460 
time_t
 
t
);

461 
X509_STORE_CTX_£t_vîify_cb
(
X509_STORE_CTX
 *
˘x
,

462 (*
vîify_cb
)(, 
X509_STORE_CTX
 *));

464 
X509_POLICY_TREE
 *
X509_STORE_CTX_gë0_pﬁicy_åì
(
X509_STORE_CTX
 *
˘x
);

465 
X509_STORE_CTX_gë_ex∂icô_pﬁicy
(
X509_STORE_CTX
 *
˘x
);

467 
X509_VERIFY_PARAM
 *
X509_STORE_CTX_gë0_∑øm
(
X509_STORE_CTX
 *
˘x
);

468 
X509_STORE_CTX_£t0_∑øm
(
X509_STORE_CTX
 *
˘x
, 
X509_VERIFY_PARAM
 *
∑øm
);

469 
X509_STORE_CTX_£t_deÁu…
(
X509_STORE_CTX
 *
˘x
, c⁄° *
«me
);

473 
X509_VERIFY_PARAM
 *
X509_VERIFY_PARAM_√w
();

474 
X509_VERIFY_PARAM_‰ì
(
X509_VERIFY_PARAM
 *
∑øm
);

475 
X509_VERIFY_PARAM_öhîô
(
X509_VERIFY_PARAM
 *
to
,

476 c⁄° 
X509_VERIFY_PARAM
 *
‰om
);

477 
X509_VERIFY_PARAM_£t1
(
X509_VERIFY_PARAM
 *
to
,

478 c⁄° 
X509_VERIFY_PARAM
 *
‰om
);

479 
X509_VERIFY_PARAM_£t1_«me
(
X509_VERIFY_PARAM
 *
∑øm
, c⁄° *
«me
);

480 
X509_VERIFY_PARAM_£t_Êags
(
X509_VERIFY_PARAM
 *
∑øm
, 
Êags
);

481 
X509_VERIFY_PARAM_˛ór_Êags
(
X509_VERIFY_PARAM
 *
∑øm
,

482 
Êags
);

483 
X509_VERIFY_PARAM_gë_Êags
(
X509_VERIFY_PARAM
 *
∑øm
);

484 
X509_VERIFY_PARAM_£t_puΩo£
(
X509_VERIFY_PARAM
 *
∑øm
, 
puΩo£
);

485 
X509_VERIFY_PARAM_£t_åu°
(
X509_VERIFY_PARAM
 *
∑øm
, 
åu°
);

486 
X509_VERIFY_PARAM_£t_dïth
(
X509_VERIFY_PARAM
 *
∑øm
, 
dïth
);

487 
X509_VERIFY_PARAM_£t_time
(
X509_VERIFY_PARAM
 *
∑øm
, 
time_t
 
t
);

488 
X509_VERIFY_PARAM_add0_pﬁicy
(
X509_VERIFY_PARAM
 *
∑øm
,

489 
ASN1_OBJECT
 *
pﬁicy
);

490 
X509_VERIFY_PARAM_£t1_pﬁicõs
(
X509_VERIFY_PARAM
 *
∑øm
,

491 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicõs
);

492 
X509_VERIFY_PARAM_gë_dïth
(c⁄° 
X509_VERIFY_PARAM
 *
∑øm
);

494 
X509_VERIFY_PARAM_add0_èbÀ
(
X509_VERIFY_PARAM
 *
∑øm
);

495 c⁄° 
X509_VERIFY_PARAM
 *
X509_VERIFY_PARAM_lookup
(c⁄° *
«me
);

496 
X509_VERIFY_PARAM_èbÀ_˛ónup
();

498 
X509_pﬁicy_check
(
X509_POLICY_TREE
 **
±ªe
, *
≥x∂icô_pﬁicy
,

499 
STACK_OF
(
X509
Ë*
˚πs
,

500 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicy_oids
,

501 
Êags
);

503 
X509_pﬁicy_åì_‰ì
(
X509_POLICY_TREE
 *
åì
);

505 
X509_pﬁicy_åì_Àvñ_cou¡
(c⁄° 
X509_POLICY_TREE
 *
åì
);

506 
X509_POLICY_LEVEL
 *

507 
X509_pﬁicy_åì_gë0_Àvñ
(c⁄° 
X509_POLICY_TREE
 *
åì
, 
i
);

509 
STACK_OF
(
X509_POLICY_NODE
) *

510 
X509_pﬁicy_åì_gë0_pﬁicõs
(c⁄° 
X509_POLICY_TREE
 *
åì
);

512 
STACK_OF
(
X509_POLICY_NODE
) *

513 
X509_pﬁicy_åì_gë0_u£r_pﬁicõs
(c⁄° 
X509_POLICY_TREE
 *
åì
);

515 
X509_pﬁicy_Àvñ_node_cou¡
(
X509_POLICY_LEVEL
 *
Àvñ
);

517 
X509_POLICY_NODE
 *
X509_pﬁicy_Àvñ_gë0_node
(
X509_POLICY_LEVEL
 *
Àvñ
, 
i
);

519 c⁄° 
ASN1_OBJECT
 *
X509_pﬁicy_node_gë0_pﬁicy
(c⁄° 
X509_POLICY_NODE
 *
node
);

521 
STACK_OF
(
POLICYQUALINFO
) *

522 
X509_pﬁicy_node_gë0_quÆifõrs
(c⁄° 
X509_POLICY_NODE
 *
node
);

523 c⁄° 
X509_POLICY_NODE
 *

524 
X509_pﬁicy_node_gë0_∑ª¡
(c⁄° 
X509_POLICY_NODE
 *
node
);

526 #ifde‡ 
__˝lu•lus


	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

48 
	#_PATH_KMEM
 "/dev/kmem"

	)

49 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

50 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

51 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

52 
	#_PATH_MEM
 "/dev/mem"

	)

53 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

54 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

55 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

56 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

57 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

58 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

59 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

60 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

61 
	#_PATH_TTY
 "/dev/ây"

	)

62 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

63 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

64 
	#_PATH_VI
 "/bö/vi"

	)

65 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

68 
	#_PATH_DEV
 "/dev/"

	)

69 
	#_PATH_TMP
 "/tmp/"

	)

70 
	#_PATH_VARDB
 "/v¨/db/"

	)

71 
	#_PATH_VARRUN
 "/v¨/run/"

	)

72 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/readline/keymaps.h

23 #i‚de‡
_KEYMAPS_H_


24 
	#_KEYMAPS_H_


	)

26 #ifde‡
__˝lu•lus


30 #i‡
deföed
 (
READLINE_LIBRARY
)

31 
	~"æ°dc.h
"

32 
	~"ch¨defs.h
"

33 
	~"æty≥defs.h
"

35 
	~<ªadlöe/æ°dc.h
>

36 
	~<ªadlöe/ch¨defs.h
>

37 
	~<ªadlöe/æty≥defs.h
>

45 
	s_keym≠_íåy
 {

46 
ty≥
;

47 
æ_comm™d_func_t
 *
fun˘i⁄
;

48 } 
	tKEYMAP_ENTRY
;

53 
	#KEYMAP_SIZE
 257

	)

54 
	#ANYOTHERKEY
 
KEYMAP_SIZE
-1

	)

61 
KEYMAP_ENTRY
 
	tKEYMAP_ENTRY_ARRAY
[
KEYMAP_SIZE
];

62 
KEYMAP_ENTRY
 *
	tKeym≠
;

65 
	#ISFUNC
 0

	)

66 
	#ISKMAP
 1

	)

67 
	#ISMACR
 2

	)

69 
KEYMAP_ENTRY_ARRAY
 
emacs_°™d¨d_keym≠
, 
emacs_mëa_keym≠
, 
emacs_˘lx_keym≠
;

70 
KEYMAP_ENTRY_ARRAY
 
vi_ö£πi⁄_keym≠
, 
vi_movemít_keym≠
;

74 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

77 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

82 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

85 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

91 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

94 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

97 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

99 #ifde‡
__˝lu•lus


	@/usr/include/readline/rlstdc.h

22 #i‡!
deföed
 (
_RL_STDC_H_
)

23 
	#_RL_STDC_H_


	)

31 #i‡!
deföed
 (
PARAMS
)

32 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

33 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

35 
	#PARAMS
(
¥Ÿos
Ë()

	)

39 #i‚de‡
__©åibuã__


40 #i‡
__GNUC__
 < 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 < 8)

41 
	#__©åibuã__
(
x
)

	)

	@/usr/include/readline/rltypedefs.h

23 #i‚de‡
_RL_TYPEDEFS_H_


24 
	#_RL_TYPEDEFS_H_


	)

26 #ifde‡
__˝lu•lus


32 #i‡!
deföed
 (
_FUNCTION_DEF
)

33 
	#_FUNCTION_DEF


	)

35 
	tFun˘i⁄
 ();

36 
	tVFun˘i⁄
 ();

37 *
	tCPFun˘i⁄
 ();

38 **
	tCPPFun˘i⁄
 ();

44 #i‡!
deföed
 (
_RL_FUNCTION_TYPEDEF
)

45 
	#_RL_FUNCTION_TYPEDEF


	)

48 
	tæ_comm™d_func_t
 
	tPARAMS
((, ));

51 *
	tæ_com≥¡ry_func_t
 
	tPARAMS
((const *, ));

52 **
	tæ_com∂ëi⁄_func_t
 
	tPARAMS
((const *, , ));

54 *
	tæ_quŸe_func_t
 
	tPARAMS
((*, , *));

55 *
	tæ_dequŸe_func_t
 
	tPARAMS
((*, ));

57 
	tæ_compign‹e_func_t
 
	tPARAMS
((**));

59 
	tæ_compdi•_func_t
 
	tPARAMS
((**, , ));

62 
	tæ_hook_func_t
 
	tPARAMS
(());

65 
	tæ_gëc_func_t
 
	tPARAMS
((
	tFILE
 *));

70 
	tæ_löebuf_func_t
 
	tPARAMS
((*, ));

73 
	tæ_ötfunc_t
 
	tPARAMS
(());

74 
	#æ_ivoidfunc_t
 
æ_hook_func_t


	)

75 
	tæ_i˝func_t
 
	tPARAMS
((*));

76 
	tæ_i˝pfunc_t
 
	tPARAMS
((**));

78 
	tæ_voidfunc_t
 
	tPARAMS
(());

79 
	tæ_vötfunc_t
 
	tPARAMS
(());

80 
	tæ_v˝func_t
 
	tPARAMS
((*));

81 
	tæ_v˝pfunc_t
 
	tPARAMS
((**));

83 *
	tæ_˝vfunc_t
 
	tPARAMS
(());

84 *
	tæ_˝ifunc_t
 
	tPARAMS
(());

85 *
	tæ_˝˝func_t
 
	tPARAMS
((*));

86 *
	tæ_˝˝pfunc_t
 
	tPARAMS
((**));

90 #ifde‡
__˝lu•lus


	@/usr/include/readline/tilde.h

24 #i‡!
deföed
 (
_TILDE_H_
)

25 
	#_TILDE_H_


	)

27 #ifde‡
__˝lu•lus


35 #i‡!
deföed
 (
PARAMS
)

36 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

37 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

39 
	#PARAMS
(
¥Ÿos
Ë()

	)

43 *
	ttûde_hook_func_t
 
	tPARAMS
((*));

49 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_¥ìx∑nsi⁄_hook
;

55 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_Áûuª_hook
;

60 **
tûde_addôi⁄Æ_¥efixes
;

65 **
tûde_addôi⁄Æ_suffixes
;

68 *
tûde_ex∑nd
 
PARAMS
((const *));

72 *
tûde_ex∑nd_w‹d
 
PARAMS
((const *));

75 *
tûde_föd_w‹d
 
PARAMS
((const *, , *));

77 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

15 #ifde‡
Z_PREFIX


16 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

17 
	#deÊ©e
 
z_deÊ©e


	)

18 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

19 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

20 
	#öÊ©e
 
z_öÊ©e


	)

21 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

22 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

23 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

24 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

25 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

26 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

27 
	#deÊ©eBound
 
z_deÊ©eBound


	)

28 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

29 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

30 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

31 
	#öÊ©eSync
 
z_öÊ©eSync


	)

32 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

33 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

34 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

35 
	#öÊ©eBack
 
z_öÊ©eBack


	)

36 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

37 
	#com¥ess
 
z_com¥ess


	)

38 
	#com¥ess2
 
z_com¥ess2


	)

39 
	#com¥essBound
 
z_com¥essBound


	)

40 
	#uncom¥ess
 
z_uncom¥ess


	)

41 
	#adÀr32
 
z_adÀr32


	)

42 
	#¸c32
 
z_¸c32


	)

43 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

44 
	#zEº‹
 
z_zEº‹


	)

46 
	#Æloc_func
 
z_Æloc_func


	)

47 
	#‰ì_func
 
z_‰ì_func


	)

48 
	#ö_func
 
z_ö_func


	)

49 
	#out_func
 
z_out_func


	)

50 
	#Byã
 
z_Byã


	)

51 
	#uI¡
 
z_uI¡


	)

52 
	#uL⁄g
 
z_uL⁄g


	)

53 
	#Byãf
 
z_Byãf


	)

54 
	#ch¨f
 
z_ch¨f


	)

55 
	#ötf
 
z_ötf


	)

56 
	#uI¡f
 
z_uI¡f


	)

57 
	#uL⁄gf
 
z_uL⁄gf


	)

58 
	#voidpf
 
z_voidpf


	)

59 
	#voidp
 
z_voidp


	)

62 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

63 
	#MSDOS


	)

65 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

66 
	#OS2


	)

68 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

69 
	#WINDOWS


	)

71 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

72 #i‚de‡
WIN32


73 
	#WIN32


	)

76 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

77 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

78 #i‚de‡
SYS16BIT


79 
	#SYS16BIT


	)

88 #ifde‡
SYS16BIT


89 
	#MAXSEG_64K


	)

91 #ifde‡
MSDOS


92 
	#UNALIGNED_OK


	)

95 #ifde‡
__STDC_VERSION__


96 #i‚de‡
STDC


97 
	#STDC


	)

99 #i‡
__STDC_VERSION__
 >= 199901L

100 #i‚de‡
STDC99


101 
	#STDC99


	)

105 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

106 
	#STDC


	)

108 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

109 
	#STDC


	)

111 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

112 
	#STDC


	)

114 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

115 
	#STDC


	)

118 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

119 
	#STDC


	)

122 #i‚de‡
STDC


124 c⁄°

	)

129 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

130 
	#NO_DUMMY_DECL


	)

134 #i‚de‡
MAX_MEM_LEVEL


135 #ifde‡
MAXSEG_64K


136 
	#MAX_MEM_LEVEL
 8

	)

138 
	#MAX_MEM_LEVEL
 9

	)

147 #i‚de‡
MAX_WBITS


148 
	#MAX_WBITS
 15

	)

166 #i‚de‡
OF


167 #ifde‡
STDC


168 
	#OF
(
¨gs
Ë
	)
args

170 
	#OF
(
¨gs
Ë()

	)

180 #ifde‡
SYS16BIT


181 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

183 
	#SMALL_MEDIUM


	)

184 #ifde‡
_MSC_VER


185 
	#FAR
 
_Ár


	)

187 
	#FAR
 
Ár


	)

190 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

192 
	#SMALL_MEDIUM


	)

193 #ifde‡
__BORLANDC__


194 
	#FAR
 
_Ár


	)

196 
	#FAR
 
Ár


	)

201 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

205 #ifde‡
ZLIB_DLL


206 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

207 #ifde‡
ZLIB_INTERNAL


208 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

210 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

218 #ifde‡
ZLIB_WINAPI


219 #ifde‡
FAR


220 #unde‡
FAR


222 
	~<wödows.h
>

225 
	#ZEXPORT
 
WINAPI


	)

226 #ifde‡
WIN32


227 
	#ZEXPORTVA
 
WINAPIV


	)

229 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

234 #i‡
deföed
 (
__BEOS__
)

235 #ifde‡
ZLIB_DLL


236 #ifde‡
ZLIB_INTERNAL


237 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

238 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

240 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

241 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

246 #i‚de‡
ZEXTERN


247 
	#ZEXTERN
 

	)

249 #i‚de‡
ZEXPORT


250 
	#ZEXPORT


	)

252 #i‚de‡
ZEXPORTVA


253 
	#ZEXPORTVA


	)

256 #i‚de‡
FAR


257 
	#FAR


	)

260 #i‡!
deföed
(
__MACTYPES__
)

261 
	tByã
;

263 
	tuI¡
;

264 
	tuL⁄g
;

266 #ifde‡
SMALL_MEDIUM


268 
	#Byãf
 
Byã
 
FAR


	)

270 
Byã
 
	tFAR
 
	tByãf
;

272 
	tFAR
 
	tch¨f
;

273 
	tFAR
 
	tötf
;

274 
uI¡
 
	tFAR
 
	tuI¡f
;

275 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

277 #ifde‡
STDC


278 c⁄° *
	tvoidpc
;

279 
	tFAR
 *
	tvoidpf
;

280 *
	tvoidp
;

282 
Byã
 c⁄° *
	tvoidpc
;

283 
Byã
 
	tFAR
 *
	tvoidpf
;

284 
Byã
 *
	tvoidp
;

288 
	~<sys/ty≥s.h
>

289 
	~<uni°d.h
>

290 #ifde‡
VMS


291 
	~<unixio.h
>

293 
	#z_off_t
 
off_t


	)

295 #i‚de‡
SEEK_SET


296 
	#SEEK_SET
 0

	)

297 
	#SEEK_CUR
 1

	)

298 
	#SEEK_END
 2

	)

300 #i‚de‡
z_off_t


301 
	#z_off_t
 

	)

304 #i‡
deföed
(
__OS400__
)

305 
	#NO_v¢¥ötf


	)

308 #i‡
deföed
(
__MVS__
)

309 
	#NO_v¢¥ötf


	)

310 #ifde‡
FAR


311 #unde‡
FAR


316 #i‡
deföed
(
__MVS__
)

317 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

318 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

319 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

320 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

321 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

322 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

323 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

324 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

325 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

326 #¥agm®
m≠
(
com¥essBound
,"CMBND")

327 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

328 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

329 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/X11/Xatom.h

1 #i‚de‡
XATOM_H


2 
	#XATOM_H
 1

	)

9 
	#XA_PRIMARY
 ((
Atom
Ë1)

	)

10 
	#XA_SECONDARY
 ((
Atom
Ë2)

	)

11 
	#XA_ARC
 ((
Atom
Ë3)

	)

12 
	#XA_ATOM
 ((
Atom
Ë4)

	)

13 
	#XA_BITMAP
 ((
Atom
Ë5)

	)

14 
	#XA_CARDINAL
 ((
Atom
Ë6)

	)

15 
	#XA_COLORMAP
 ((
Atom
Ë7)

	)

16 
	#XA_CURSOR
 ((
Atom
Ë8)

	)

17 
	#XA_CUT_BUFFER0
 ((
Atom
Ë9)

	)

18 
	#XA_CUT_BUFFER1
 ((
Atom
Ë10)

	)

19 
	#XA_CUT_BUFFER2
 ((
Atom
Ë11)

	)

20 
	#XA_CUT_BUFFER3
 ((
Atom
Ë12)

	)

21 
	#XA_CUT_BUFFER4
 ((
Atom
Ë13)

	)

22 
	#XA_CUT_BUFFER5
 ((
Atom
Ë14)

	)

23 
	#XA_CUT_BUFFER6
 ((
Atom
Ë15)

	)

24 
	#XA_CUT_BUFFER7
 ((
Atom
Ë16)

	)

25 
	#XA_DRAWABLE
 ((
Atom
Ë17)

	)

26 
	#XA_FONT
 ((
Atom
Ë18)

	)

27 
	#XA_INTEGER
 ((
Atom
Ë19)

	)

28 
	#XA_PIXMAP
 ((
Atom
Ë20)

	)

29 
	#XA_POINT
 ((
Atom
Ë21)

	)

30 
	#XA_RECTANGLE
 ((
Atom
Ë22)

	)

31 
	#XA_RESOURCE_MANAGER
 ((
Atom
Ë23)

	)

32 
	#XA_RGB_COLOR_MAP
 ((
Atom
Ë24)

	)

33 
	#XA_RGB_BEST_MAP
 ((
Atom
Ë25)

	)

34 
	#XA_RGB_BLUE_MAP
 ((
Atom
Ë26)

	)

35 
	#XA_RGB_DEFAULT_MAP
 ((
Atom
Ë27)

	)

36 
	#XA_RGB_GRAY_MAP
 ((
Atom
Ë28)

	)

37 
	#XA_RGB_GREEN_MAP
 ((
Atom
Ë29)

	)

38 
	#XA_RGB_RED_MAP
 ((
Atom
Ë30)

	)

39 
	#XA_STRING
 ((
Atom
Ë31)

	)

40 
	#XA_VISUALID
 ((
Atom
Ë32)

	)

41 
	#XA_WINDOW
 ((
Atom
Ë33)

	)

42 
	#XA_WM_COMMAND
 ((
Atom
Ë34)

	)

43 
	#XA_WM_HINTS
 ((
Atom
Ë35)

	)

44 
	#XA_WM_CLIENT_MACHINE
 ((
Atom
Ë36)

	)

45 
	#XA_WM_ICON_NAME
 ((
Atom
Ë37)

	)

46 
	#XA_WM_ICON_SIZE
 ((
Atom
Ë38)

	)

47 
	#XA_WM_NAME
 ((
Atom
Ë39)

	)

48 
	#XA_WM_NORMAL_HINTS
 ((
Atom
Ë40)

	)

49 
	#XA_WM_SIZE_HINTS
 ((
Atom
Ë41)

	)

50 
	#XA_WM_ZOOM_HINTS
 ((
Atom
Ë42)

	)

51 
	#XA_MIN_SPACE
 ((
Atom
Ë43)

	)

52 
	#XA_NORM_SPACE
 ((
Atom
Ë44)

	)

53 
	#XA_MAX_SPACE
 ((
Atom
Ë45)

	)

54 
	#XA_END_SPACE
 ((
Atom
Ë46)

	)

55 
	#XA_SUPERSCRIPT_X
 ((
Atom
Ë47)

	)

56 
	#XA_SUPERSCRIPT_Y
 ((
Atom
Ë48)

	)

57 
	#XA_SUBSCRIPT_X
 ((
Atom
Ë49)

	)

58 
	#XA_SUBSCRIPT_Y
 ((
Atom
Ë50)

	)

59 
	#XA_UNDERLINE_POSITION
 ((
Atom
Ë51)

	)

60 
	#XA_UNDERLINE_THICKNESS
 ((
Atom
Ë52)

	)

61 
	#XA_STRIKEOUT_ASCENT
 ((
Atom
Ë53)

	)

62 
	#XA_STRIKEOUT_DESCENT
 ((
Atom
Ë54)

	)

63 
	#XA_ITALIC_ANGLE
 ((
Atom
Ë55)

	)

64 
	#XA_X_HEIGHT
 ((
Atom
Ë56)

	)

65 
	#XA_QUAD_WIDTH
 ((
Atom
Ë57)

	)

66 
	#XA_WEIGHT
 ((
Atom
Ë58)

	)

67 
	#XA_POINT_SIZE
 ((
Atom
Ë59)

	)

68 
	#XA_RESOLUTION
 ((
Atom
Ë60)

	)

69 
	#XA_COPYRIGHT
 ((
Atom
Ë61)

	)

70 
	#XA_NOTICE
 ((
Atom
Ë62)

	)

71 
	#XA_FONT_NAME
 ((
Atom
Ë63)

	)

72 
	#XA_FAMILY_NAME
 ((
Atom
Ë64)

	)

73 
	#XA_FULL_NAME
 ((
Atom
Ë65)

	)

74 
	#XA_CAP_HEIGHT
 ((
Atom
Ë66)

	)

75 
	#XA_WM_CLASS
 ((
Atom
Ë67)

	)

76 
	#XA_WM_TRANSIENT_FOR
 ((
Atom
Ë68)

	)

78 
	#XA_LAST_PREDEFINED
 ((
Atom
Ë68)

	)

	@/usr/include/X11/Xmd.h

49 #i‚de‡
XMD_H


50 
	#XMD_H
 1

	)

59 #i‡
deföed
(
sun
Ë&& deföed(
__SVR4
)

60 
	~<sys/iß_defs.h
>

63 #ifde‡
CRAY


64 
	#WORD64


	)

66 #i‡
deföed
 (
_LP64
) || \

67 
deföed
(
__Æpha
Ë|| deföed(
__Æpha__
) || \

68 
deföed
(
__ü64__
Ë|| deföed(
ü64
) || \

69 
deföed
(
__•¨c64__
) || \

70 
deföed
(
__s390x__
) || \

71 (
deföed
(
__hµa__
Ë&& deföed(
__LP64__
)) || \

72 
deföed
(
__amd64__
Ë|| deföed(
amd64
) || \

73 
deföed
(
__powîpc64__
) || \

74 (
deföed
(
sgi
Ë&& (
	g_MIPS_SZLONG
 == 64))

75 
	#LONG64


	)

82 #ifde‡
WORD64


83 
	#MUSTCOPY


	)

101 #i‡((
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)Ë&& !deföed(
UNIXCPP
)Ë|| deföed(
ANSICPP
)

102 
	#_SIZEOF
(
x
Ë
sz_
##
	)
x

103 
	#SIZEOF
(
x
Ë
	`_SIZEOF
(x)

	)

105 
	#SIZEOF
(
x
Ë
sz_
 
	)
x

113 #ifde‡
WORD64


114 
	tINT64
;

115 
	tCARD64
;

116 
	#B32
 :32

	)

117 
	#B16
 :16

	)

118 #ifde‡
UNSIGNEDBITFIELDS


119 
	tINT32
;

120 
	tINT16
;

122 #ifde‡
__STDC__


123 sig√d 
	tINT32
;

124 sig√d 
	tINT16
;

126 
	tINT32
;

127 
	tINT16
;

131 
	#B32


	)

132 
	#B16


	)

133 #ifde‡
LONG64


134 
	tINT64
;

135 
	tINT32
;

137 
	tINT32
;

139 
	tINT16
;

142 #i‡
deföed
(
__STDC__
Ë|| deföed(
sgi
Ë|| deföed(
_AIX
)

143 sig√d 
	tINT8
;

145 
	tINT8
;

148 #ifde‡
LONG64


149 
	tCARD64
;

150 
	tCARD32
;

152 
	tCARD32
;

154 #i‡!
deföed
(
WORD64
Ë&& !deföed(
LONG64
)

155 
	tCARD64
;

157 
	tCARD16
;

158 
	tCARD8
;

160 
CARD32
 
	tBITS32
;

161 
CARD16
 
	tBITS16
;

163 #i‚de‡
I_NEED_OS2_H


164 
CARD8
 
	tBYTE
;

165 
CARD8
 
	tBOOL
;

167 
	#BYTE
 
CARD8


	)

168 
	#BOOL
 
CARD8


	)

174 #i‡
deföed
(
WORD64
Ë&& deföed(
UNSIGNEDBITFIELDS
)

175 
	#cvtINT8toI¡
(
vÆ
Ë(((vÆË& 0x00000080Ë? ((vÆË| 0xffffffffffffff00Ë: (vÆ))

	)

176 
	#cvtINT16toI¡
(
vÆ
Ë(((vÆË& 0x00008000Ë? ((vÆË| 0xffffffffffff0000Ë: (vÆ))

	)

177 
	#cvtINT32toI¡
(
vÆ
Ë(((vÆË& 0x80000000Ë? ((vÆË| 0xffffffff00000000Ë: (vÆ))

	)

178 
	#cvtINT8toSh‹t
(
vÆ
Ë
	`cvtINT8toI¡
(vÆ)

	)

179 
	#cvtINT16toSh‹t
(
vÆ
Ë
	`cvtINT16toI¡
(vÆ)

	)

180 
	#cvtINT32toSh‹t
(
vÆ
Ë
	`cvtINT32toI¡
(vÆ)

	)

181 
	#cvtINT8toL⁄g
(
vÆ
Ë
	`cvtINT8toI¡
(vÆ)

	)

182 
	#cvtINT16toL⁄g
(
vÆ
Ë
	`cvtINT16toI¡
(vÆ)

	)

183 
	#cvtINT32toL⁄g
(
vÆ
Ë
	`cvtINT32toI¡
(vÆ)

	)

185 
	#cvtINT8toI¡
(
vÆ
Ë(vÆ)

	)

186 
	#cvtINT16toI¡
(
vÆ
Ë(vÆ)

	)

187 
	#cvtINT32toI¡
(
vÆ
Ë(vÆ)

	)

188 
	#cvtINT8toSh‹t
(
vÆ
Ë(vÆ)

	)

189 
	#cvtINT16toSh‹t
(
vÆ
Ë(vÆ)

	)

190 
	#cvtINT32toSh‹t
(
vÆ
Ë(vÆ)

	)

191 
	#cvtINT8toL⁄g
(
vÆ
Ë(vÆ)

	)

192 
	#cvtINT16toL⁄g
(
vÆ
Ë(vÆ)

	)

193 
	#cvtINT32toL⁄g
(
vÆ
Ë(vÆ)

	)

198 #ifde‡
MUSTCOPY


202 
	#NEXTPTR
(
p
,
t
Ë(((*ËpË+ 
	`SIZEOF
—))

	)

208 
	#NEXTPTR
(
p
,
t
Ë((— *)’)Ë+ 1)

	)

	@/usr/include/X11/Xos.h

37 #i‚de‡
_XOS_H_


38 
	#_XOS_H_


	)

40 
	~<X11/Xosdefs.h
>

46 #ifde‡
USG


47 #i‚de‡
__TYPES__


48 #ifde‡
CRAY


49 
	#w‹d
 
w‹d_t


	)

51 
	~<sys/ty≥s.h
>

52 
	#__TYPES__


	)

55 #i‡
deföed
(
_POSIX_SOURCE
Ë&& deföed(
MOTOROLA
)

56 #unde‡
_POSIX_SOURCE


57 
	~<sys/ty≥s.h
>

58 
	#_POSIX_SOURCE


	)

60 
	~<sys/ty≥s.h
>

64 #i‚de‡
sgi


65 #i‡
deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

66 
	~<°döt.h
>

70 #ifde‡
_SEQUENT_


75 
	~<√töë/ö_sy°m.h
>

76 
	~<sys/£À˘.h
>

92 #i‚de‡
X_NOT_STDC_ENV


94 
	~<°rög.h
>

95 #i‡
deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

96 
	~<°rögs.h
>

98 #i‡(
deföed
(
sun
Ë&& deföed(
__SVR4
))

99 
	~<°rögs.h
>

101 #ifde‡
__STDC__


102 #i‚de‡
ödex


103 
	#ödex
(
s
,
c
Ë(
	`°rchr
((s),(c)))

	)

105 #i‚de‡
rödex


106 
	#rödex
(
s
,
c
Ë(
	`°ºchr
((s),(c)))

	)

109 #i‚de‡
ödex


110 
	#ödex
 
°rchr


	)

112 #i‚de‡
rödex


113 
	#rödex
 
°ºchr


	)

120 #ifde‡
SYSV


121 #i‡
deföed
(
˛ù≥r
Ë|| deföed(
__˛ù≥r__
)

122 
	~<mÆloc.h
>

124 
	~<°rög.h
>

125 
	#ödex
 
°rchr


	)

126 
	#rödex
 
°ºchr


	)

128 
	~<°rögs.h
>

129 
	#°rchr
 
ödex


	)

130 
	#°ºchr
 
rödex


	)

138 #i‡(
deföed
(
X_NOT_STDC_ENV
Ë|| (deföed(
sun
Ë&& !deföed(
SVR4
)Ë|| deföed(
macII
)Ë&& !deföed(
__GLIBC__
)

139 #i‚de‡
°ªº‹


140 *
sys_îæi°
[];

141 
sys_√º
;

142 
	#°ªº‹
(
n
) \

143 (((
n
Ë>0 && (nË< 
sys_√º
Ë? 
sys_îæi°
[n] : "unknow¿îr‹")

	)

150 #i‡
deföed
(
X_NOT_POSIX
)

151 
	~<f˙é.h
>

152 #i‡
deföed
(
USL
Ë|| deföed(
CRAY
Ë|| deföed(
MOTOROLA
Ë|| (deföed(
i386
Ë&& (deföed(
SYSV
Ë|| deföed(
SVR4
))Ë|| deföed(
__sxg__
)

153 
	~<uni°d.h
>

155 #ifde‡
WIN32


156 
	~<X11/Xw32defs.h
>

158 
	~<sys/fûe.h
>

161 #i‡!
deföed
(
_POSIX_SOURCE
Ë&& deföed(
macII
)

162 
	#_POSIX_SOURCE


	)

163 
	~<f˙é.h
>

164 
	~<uni°d.h
>

165 #unde‡
_POSIX_SOURCE


167 
	~<f˙é.h
>

168 
	~<uni°d.h
>

176 #i‡
deföed
(
SYSV
Ë&& !deföed(
_SEQUENT_
)

178 #i‚de‡
USL


179 
	~<sys/time.h
>

181 
	~<time.h
>

182 #ifde‡
CRAY


183 #unde‡
w‹d


185 #i‡
deföed
(
USG
Ë&& !deföed(
CRAY
Ë&& !deföed(
MOTOROLA
Ë&& !deföed(
uniosu
Ë&& !deföed(
__sxg__
Ë&& !deföed(
˛ù≥r
Ë&& !deföed(
__˛ù≥r__
)

186 
	stimevÆ
 {

187 
	mtv_£c
;

188 
	mtv_u£c
;

190 #i‚de‡
USL_SHARELIB


191 
	stimez⁄e
 {

192 
	mtz_möuãswe°
;

193 
	mtz_d°time
;

198 #ifde‡
_SEQUENT_


199 
	stimez⁄e
 {

200 
	mtz_möuãswe°
;

201 
	mtz_d°time
;

207 #i‡
deföed
(
_POSIX_SOURCE
Ë&& deföed(
SVR4
)

209 #unde‡
_POSIX_SOURCE


210 
	~<sys/time.h
>

211 
	#_POSIX_SOURCE


	)

212 #ñi‡
deföed
(
WIN32
)

213 
	~<time.h
>

214 #i‡!
deföed
(
_WINSOCKAPI_
Ë&& !deföed(
_WILLWINSOCK_
Ë&& !deföed(
_TIMEVAL_DEFINED
Ë&& !deföed(
_STRUCT_TIMEVAL
)

215 
	stimevÆ
 {

216 
	mtv_£c
;

217 
	mtv_u£c
;

219 
	#_TIMEVAL_DEFINED


	)

221 
	~<sys/timeb.h
>

222 
	#gëtimeofday
(
t
) \

224 
_timeb
 
_gtodtmp
; \

225 
	`_·ime
 (&
_gtodtmp
); \

226 (
t
)->
tv_£c
 = 
_gtodtmp
.
time
; \

227 (
t
)->
tv_u£c
 = 
_gtodtmp
.
mûlôm
 * 1000; \

228 }

	)

229 #ñi‡
deföed
(
_SEQUENT_
Ë|| deföed(
Lynx
)

230 
	~<time.h
>

231 #ñi‡
deföed
 (
__QNX__
)

232 
	tfd_mask
;

234 
	#FD_SETSIZE
 256

	)

235 
	~<sys/£À˘.h
>

236 
	~<sys/time.h
>

237 
	~<time.h
>

239 
	~<sys/time.h
>

240 
	~<time.h
>

246 #i‡
deföed
(
_XOPEN_XPG4
Ë|| deföed(
_XOPEN_UNIX
)

247 
	#X_GETTIMEOFDAY
(
t
Ë
	`gëtimeofday
—, (
timez⁄e
*)0)

	)

249 #i‡
deföed
(
SVR4
Ë|| deföed(
VMS
Ë|| deföed(
WIN32
)

250 
	#X_GETTIMEOFDAY
(
t
Ë
	`gëtimeofday
—)

	)

252 
	#X_GETTIMEOFDAY
(
t
Ë
	`gëtimeofday
—, (
timez⁄e
*)0)

	)

256 #ifde‡
__UNIXOS2__


257 
	tfd_mask
;

258 
	~<limôs.h
>

259 
	#MAX_PATH
 
_POSIX_PATH_MAX


	)

262 #ifde‡
__GNU__


263 
	#PATH_MAX
 4096

	)

264 
	#MAXPATHLEN
 4096

	)

265 
	#OPEN_MAX
 256

	)

269 #i‡
deföed
(
X_NOT_POSIX
Ë&& deföed(
SYSV
Ë&& !deföed(
SIGCHLD
Ë&& !deföed(
ISC
)

270 
	#SIGCHLD
 
SIGCLD


	)

273 #ifde‡
ISC


274 
	~<sys/bsdty≥s.h
>

275 
	~<sys/limôs.h
>

276 
	#NGROUPS
 16

	)

279 #i‡
deföed
(
ISC
Ë|| deföed(
__UNIXOS2__
) || \

280 (
deföed
(
__löux__
Ë&& !deföed(
__GLIBC__
)) || \

281 (
deföed
(
__QNX__
Ë&& !
	$deföed
(
UNIXCONN
))

286 
	#X_NO_SYS_UN
 1

	)

288 
	ssockaddr_un
 {

289 
sun_Ámûy
;

290 
sun_∑th
[108];

294 
	~<X11/X¨ch.h
>

	@/usr/include/X11/extensions/XShm.h

32 #i‚de‡
_XSHM_H_


33 
	#_XSHM_H_


	)

35 
	~<X11/Xfun˝rŸo.h
>

37 
	#X_ShmQuîyVîsi⁄
 0

	)

38 
	#X_ShmAâach
 1

	)

39 
	#X_ShmDëach
 2

	)

40 
	#X_ShmPutImage
 3

	)

41 
	#X_ShmGëImage
 4

	)

42 
	#X_ShmCª©ePixm≠
 5

	)

44 
	#ShmCom∂ëi⁄
 0

	)

45 
	#ShmNumbîEvíts
 (
ShmCom∂ëi⁄
 + 1)

	)

47 
	#BadShmSeg
 0

	)

48 
	#ShmNumbîEº‹s
 (
BadShmSeg
 + 1)

	)

50 
	tShmSeg
;

52 #i‚de‡
_XSHM_SERVER_


54 
	mty≥
;

55 
	m£rül
;

56 
Boﬁ
 
	m£nd_evít
;

57 
Di•œy
 *
	mdi•œy
;

58 
DøwabÀ
 
	mdøwabÀ
;

59 
	mmaj‹_code
;

60 
	mmö‹_code
;

61 
ShmSeg
 
	mshm£g
;

62 
	moff£t
;

63 } 
	tXShmCom∂ëi⁄Evít
;

66 
ShmSeg
 
	mshm£g
;

67 
	mshmid
;

68 *
	mshmaddr
;

69 
Boﬁ
 
	mªadO∆y
;

70 } 
	tXShmSegmítInfo
;

72 
_XFUNCPROTOBEGIN


74 
Boﬁ
 
XShmQuîyExãnsi⁄
(

75 
Di•œy
*

78 
XShmGëEvítBa£
(

79 
Di•œy
*

82 
Boﬁ
 
XShmQuîyVîsi⁄
(

83 
Di•œy
* ,

86 
Boﬁ
*

89 
XShmPixm≠F‹m©
(

90 
Di•œy
*

93 
Sètus
 
XShmAâach
(

94 
Di•œy
* ,

95 
XShmSegmítInfo
*

98 
Sètus
 
XShmDëach
(

99 
Di•œy
* ,

100 
XShmSegmítInfo
*

103 
Sètus
 
XShmPutImage
(

104 
Di•œy
* ,

105 
DøwabÀ
 ,

106 
GC
 ,

107 
XImage
* ,

114 
Boﬁ


117 
Sètus
 
XShmGëImage
(

118 
Di•œy
* ,

119 
DøwabÀ
 ,

120 
XImage
* ,

126 
XImage
 *
XShmCª©eImage
(

127 
Di•œy
* ,

128 
VisuÆ
* ,

132 
XShmSegmítInfo
* ,

137 
Pixm≠
 
XShmCª©ePixm≠
(

138 
Di•œy
* ,

139 
DøwabÀ
 ,

141 
XShmSegmítInfo
* ,

147 
	g_XFUNCPROTOEND


151 
	~"s¸ìnöt.h
"

152 
	~"pixm≠.h
"

153 
	~"gc.h
"

155 
ShmRegi°îFbFuncs
(

156 
S¸ìnPå


	@/usr/include/X11/extensions/shape.h

30 #i‚de‡
_SHAPE_H_


31 
	#_SHAPE_H_


	)

33 
	~<X11/Xfun˝rŸo.h
>

35 
	#X_Sh≠eQuîyVîsi⁄
 0

	)

36 
	#X_Sh≠eRe˘™gÀs
 1

	)

37 
	#X_Sh≠eMask
 2

	)

38 
	#X_Sh≠eComböe
 3

	)

39 
	#X_Sh≠eOff£t
 4

	)

40 
	#X_Sh≠eQuîyExã¡s
 5

	)

41 
	#X_Sh≠eSñe˘I≈ut
 6

	)

42 
	#X_Sh≠eI≈utSñe˘ed
 7

	)

43 
	#X_Sh≠eGëRe˘™gÀs
 8

	)

45 
	#Sh≠eSë
 0

	)

46 
	#Sh≠eUni⁄
 1

	)

47 
	#Sh≠eI¡î£˘
 2

	)

48 
	#Sh≠eSubåa˘
 3

	)

49 
	#Sh≠eInvît
 4

	)

51 
	#Sh≠eBoundög
 0

	)

52 
	#Sh≠eClù
 1

	)

53 
	#Sh≠eI≈ut
 2

	)

55 
	#Sh≠eNŸifyMask
 (1L << 0)

	)

56 
	#Sh≠eNŸify
 0

	)

58 
	#Sh≠eNumbîEvíts
 (
Sh≠eNŸify
 + 1)

	)

60 #i‚de‡
_SHAPE_SERVER_


62 
	~<X11/Xutû.h
>

65 
	mty≥
;

66 
	m£rül
;

67 
Boﬁ
 
	m£nd_evít
;

68 
Di•œy
 *
	mdi•œy
;

69 
Wödow
 
	mwödow
;

70 
	mköd
;

71 
	mx
, 
	my
;

72 
	mwidth
, 
	mheight
;

73 
Time
 
	mtime
;

74 
Boﬁ
 
	msh≠ed
;

75 } 
	tXSh≠eEvít
;

77 
_XFUNCPROTOBEGIN


79 
Boﬁ
 
XSh≠eQuîyExãnsi⁄
 (

80 
Di•œy
* ,

85 
Sètus
 
XSh≠eQuîyVîsi⁄
 (

86 
Di•œy
* ,

91 
XSh≠eComböeRegi⁄
 (

92 
Di•œy
* ,

93 
Wödow
 ,

97 
Regi⁄
 ,

101 
XSh≠eComböeRe˘™gÀs
 (

102 
Di•œy
* ,

103 
Wödow
 ,

107 
XRe˘™gÀ
* ,

113 
XSh≠eComböeMask
 (

114 
Di•œy
* ,

115 
Wödow
 ,

119 
Pixm≠
 ,

123 
XSh≠eComböeSh≠e
 (

124 
Di•œy
* ,

125 
Wödow
 ,

129 
Wödow
 ,

134 
XSh≠eOff£tSh≠e
 (

135 
Di•œy
* ,

136 
Wödow
 ,

142 
Sètus
 
XSh≠eQuîyExã¡s
 (

143 
Di•œy
* ,

144 
Wödow
 ,

145 
Boﬁ
* ,

150 
Boﬁ
* ,

157 
XSh≠eSñe˘I≈ut
 (

158 
Di•œy
* ,

159 
Wödow
 ,

163 
XSh≠eI≈utSñe˘ed
 (

164 
Di•œy
* ,

165 
Wödow


168 
XRe˘™gÀ
 *
XSh≠eGëRe˘™gÀs
 (

169 
Di•œy
* ,

170 
Wödow
 ,

176 
	g_XFUNCPROTOEND


	@/usr/include/X11/keysymdef.h

101 
	#XK_VoidSymbﬁ
 0xfffff‡

	)

103 #ifde‡
XK_MISCELLANY


110 
	#XK_BackS∑˚
 0xff08

	)

111 
	#XK_Tab
 0xff09

	)

112 
	#XK_Löe„ed
 0xff0®

	)

113 
	#XK_CÀ¨
 0xff0b

	)

114 
	#XK_Rëu∫
 0xff0d

	)

115 
	#XK_Pau£
 0xff13

	)

116 
	#XK_S¸ﬁl_Lock
 0xff14

	)

117 
	#XK_Sys_Req
 0xff15

	)

118 
	#XK_Esˇ≥
 0xff1b

	)

119 
	#XK_Dñëe
 0xfff‡

	)

125 
	#XK_Mu…i_key
 0xff20

	)

126 
	#XK_Codeöput
 0xff37

	)

127 
	#XK_SögÀC™did©e
 0xff3c

	)

128 
	#XK_Mu…ùÀC™did©e
 0xff3d

	)

129 
	#XK_PªviousC™did©e
 0xff3e

	)

133 
	#XK_K™ji
 0xff21

	)

134 
	#XK_Muhík™
 0xff22

	)

135 
	#XK_Hík™_Mode
 0xff23

	)

136 
	#XK_Hík™
 0xff23

	)

137 
	#XK_Romaji
 0xff24

	)

138 
	#XK_Húag™a
 0xff25

	)

139 
	#XK_K©ak™a
 0xff26

	)

140 
	#XK_Húag™a_K©ak™a
 0xff27

	)

141 
	#XK_Zíkaku
 0xff28

	)

142 
	#XK_H™kaku
 0xff29

	)

143 
	#XK_Zíkaku_H™kaku
 0xff2®

	)

144 
	#XK_Touroku
 0xff2b

	)

145 
	#XK_Massyo
 0xff2¯

	)

146 
	#XK_K™a_Lock
 0xff2d

	)

147 
	#XK_K™a_Shi·
 0xff2ê

	)

148 
	#XK_Eisu_Shi·
 0xff2‡

	)

149 
	#XK_Eisu_toggÀ
 0xff30

	)

150 
	#XK_K™ji_B™gou
 0xff37

	)

151 
	#XK_Zí_Koho
 0xff3d

	)

152 
	#XK_M´_Koho
 0xff3ê

	)

158 
	#XK_Home
 0xff50

	)

159 
	#XK_Le·
 0xff51

	)

160 
	#XK_Up
 0xff52

	)

161 
	#XK_Right
 0xff53

	)

162 
	#XK_Down
 0xff54

	)

163 
	#XK_Pri‹
 0xff55

	)

164 
	#XK_Page_Up
 0xff55

	)

165 
	#XK_Next
 0xff56

	)

166 
	#XK_Page_Down
 0xff56

	)

167 
	#XK_End
 0xff57

	)

168 
	#XK_Begö
 0xff58

	)

173 
	#XK_Sñe˘
 0xff60

	)

174 
	#XK_Pröt
 0xff61

	)

175 
	#XK_Execuã
 0xff62

	)

176 
	#XK_In£π
 0xff63

	)

177 
	#XK_Undo
 0xff65

	)

178 
	#XK_Redo
 0xff66

	)

179 
	#XK_Míu
 0xff67

	)

180 
	#XK_Föd
 0xff68

	)

181 
	#XK_C™˚l
 0xff69

	)

182 
	#XK_Hñp
 0xff6®

	)

183 
	#XK_Bªak
 0xff6b

	)

184 
	#XK_Mode_swôch
 0xff7ê

	)

185 
	#XK_s¸ùt_swôch
 0xff7ê

	)

186 
	#XK_Num_Lock
 0xff7f

	)

190 
	#XK_KP_S∑˚
 0xff80

	)

191 
	#XK_KP_Tab
 0xff89

	)

192 
	#XK_KP_E¡î
 0xff8d

	)

193 
	#XK_KP_F1
 0xff91

	)

194 
	#XK_KP_F2
 0xff92

	)

195 
	#XK_KP_F3
 0xff93

	)

196 
	#XK_KP_F4
 0xff94

	)

197 
	#XK_KP_Home
 0xff95

	)

198 
	#XK_KP_Le·
 0xff96

	)

199 
	#XK_KP_Up
 0xff97

	)

200 
	#XK_KP_Right
 0xff98

	)

201 
	#XK_KP_Down
 0xff99

	)

202 
	#XK_KP_Pri‹
 0xff9a

	)

203 
	#XK_KP_Page_Up
 0xff9a

	)

204 
	#XK_KP_Next
 0xff9b

	)

205 
	#XK_KP_Page_Down
 0xff9b

	)

206 
	#XK_KP_End
 0xff9c

	)

207 
	#XK_KP_Begö
 0xff9d

	)

208 
	#XK_KP_In£π
 0xff9e

	)

209 
	#XK_KP_Dñëe
 0xff9f

	)

210 
	#XK_KP_EquÆ
 0xffbd

	)

211 
	#XK_KP_Mu…ùly
 0xfÁa

	)

212 
	#XK_KP_Add
 0xfÁb

	)

213 
	#XK_KP_Sï¨©‹
 0xfÁ¯

	)

214 
	#XK_KP_Subåa˘
 0xfÁd

	)

215 
	#XK_KP_DecimÆ
 0xfÁe

	)

216 
	#XK_KP_Divide
 0xfÁf

	)

218 
	#XK_KP_0
 0xffb0

	)

219 
	#XK_KP_1
 0xffb1

	)

220 
	#XK_KP_2
 0xffb2

	)

221 
	#XK_KP_3
 0xffb3

	)

222 
	#XK_KP_4
 0xffb4

	)

223 
	#XK_KP_5
 0xffb5

	)

224 
	#XK_KP_6
 0xffb6

	)

225 
	#XK_KP_7
 0xffb7

	)

226 
	#XK_KP_8
 0xffb8

	)

227 
	#XK_KP_9
 0xffb9

	)

238 
	#XK_F1
 0xffbe

	)

239 
	#XK_F2
 0xffbf

	)

240 
	#XK_F3
 0xffc0

	)

241 
	#XK_F4
 0xffc1

	)

242 
	#XK_F5
 0xffc2

	)

243 
	#XK_F6
 0xffc3

	)

244 
	#XK_F7
 0xffc4

	)

245 
	#XK_F8
 0xffc5

	)

246 
	#XK_F9
 0xffc6

	)

247 
	#XK_F10
 0xffc7

	)

248 
	#XK_F11
 0xffc8

	)

249 
	#XK_L1
 0xffc8

	)

250 
	#XK_F12
 0xffc9

	)

251 
	#XK_L2
 0xffc9

	)

252 
	#XK_F13
 0xffˇ

	)

253 
	#XK_L3
 0xffˇ

	)

254 
	#XK_F14
 0xffcb

	)

255 
	#XK_L4
 0xffcb

	)

256 
	#XK_F15
 0xffcc

	)

257 
	#XK_L5
 0xffcc

	)

258 
	#XK_F16
 0xffcd

	)

259 
	#XK_L6
 0xffcd

	)

260 
	#XK_F17
 0xff˚

	)

261 
	#XK_L7
 0xff˚

	)

262 
	#XK_F18
 0xffcf

	)

263 
	#XK_L8
 0xffcf

	)

264 
	#XK_F19
 0xffd0

	)

265 
	#XK_L9
 0xffd0

	)

266 
	#XK_F20
 0xffd1

	)

267 
	#XK_L10
 0xffd1

	)

268 
	#XK_F21
 0xffd2

	)

269 
	#XK_R1
 0xffd2

	)

270 
	#XK_F22
 0xffd3

	)

271 
	#XK_R2
 0xffd3

	)

272 
	#XK_F23
 0xffd4

	)

273 
	#XK_R3
 0xffd4

	)

274 
	#XK_F24
 0xffd5

	)

275 
	#XK_R4
 0xffd5

	)

276 
	#XK_F25
 0xffd6

	)

277 
	#XK_R5
 0xffd6

	)

278 
	#XK_F26
 0xffd7

	)

279 
	#XK_R6
 0xffd7

	)

280 
	#XK_F27
 0xffd8

	)

281 
	#XK_R7
 0xffd8

	)

282 
	#XK_F28
 0xffd9

	)

283 
	#XK_R8
 0xffd9

	)

284 
	#XK_F29
 0xffda

	)

285 
	#XK_R9
 0xffda

	)

286 
	#XK_F30
 0xffdb

	)

287 
	#XK_R10
 0xffdb

	)

288 
	#XK_F31
 0xffdc

	)

289 
	#XK_R11
 0xffdc

	)

290 
	#XK_F32
 0xffdd

	)

291 
	#XK_R12
 0xffdd

	)

292 
	#XK_F33
 0xffde

	)

293 
	#XK_R13
 0xffde

	)

294 
	#XK_F34
 0xffdf

	)

295 
	#XK_R14
 0xffdf

	)

296 
	#XK_F35
 0xf„0

	)

297 
	#XK_R15
 0xf„0

	)

301 
	#XK_Shi·_L
 0xf„1

	)

302 
	#XK_Shi·_R
 0xf„2

	)

303 
	#XK_C⁄åﬁ_L
 0xf„3

	)

304 
	#XK_C⁄åﬁ_R
 0xf„4

	)

305 
	#XK_C≠s_Lock
 0xf„5

	)

306 
	#XK_Shi·_Lock
 0xf„6

	)

308 
	#XK_Mëa_L
 0xf„7

	)

309 
	#XK_Mëa_R
 0xf„8

	)

310 
	#XK_A…_L
 0xf„9

	)

311 
	#XK_A…_R
 0xf„®

	)

312 
	#XK_Su≥r_L
 0xf„b

	)

313 
	#XK_Su≥r_R
 0xf„¯

	)

314 
	#XK_Hy≥r_L
 0xf„d

	)

315 
	#XK_Hy≥r_R
 0xf„ê

	)

324 #ifde‡
XK_XKB_KEYS


325 
	#XK_ISO_Lock
 0x„01

	)

326 
	#XK_ISO_Levñ2_L©ch
 0x„02

	)

327 
	#XK_ISO_Levñ3_Shi·
 0x„03

	)

328 
	#XK_ISO_Levñ3_L©ch
 0x„04

	)

329 
	#XK_ISO_Levñ3_Lock
 0x„05

	)

330 
	#XK_ISO_Levñ5_Shi·
 0x„11

	)

331 
	#XK_ISO_Levñ5_L©ch
 0x„12

	)

332 
	#XK_ISO_Levñ5_Lock
 0x„13

	)

333 
	#XK_ISO_Group_Shi·
 0xff7ê

	)

334 
	#XK_ISO_Group_L©ch
 0x„06

	)

335 
	#XK_ISO_Group_Lock
 0x„07

	)

336 
	#XK_ISO_Next_Group
 0x„08

	)

337 
	#XK_ISO_Next_Group_Lock
 0x„09

	)

338 
	#XK_ISO_Pªv_Group
 0x„0a

	)

339 
	#XK_ISO_Pªv_Group_Lock
 0x„0b

	)

340 
	#XK_ISO_Fú°_Group
 0x„0c

	)

341 
	#XK_ISO_Fú°_Group_Lock
 0x„0d

	)

342 
	#XK_ISO_La°_Group
 0x„0e

	)

343 
	#XK_ISO_La°_Group_Lock
 0x„0f

	)

345 
	#XK_ISO_Le·_Tab
 0x„20

	)

346 
	#XK_ISO_Move_Löe_Up
 0x„21

	)

347 
	#XK_ISO_Move_Löe_Down
 0x„22

	)

348 
	#XK_ISO_P¨tül_Löe_Up
 0x„23

	)

349 
	#XK_ISO_P¨tül_Löe_Down
 0x„24

	)

350 
	#XK_ISO_P¨tül_S∑˚_Le·
 0x„25

	)

351 
	#XK_ISO_P¨tül_S∑˚_Right
 0x„26

	)

352 
	#XK_ISO_Së_M¨gö_Le·
 0x„27

	)

353 
	#XK_ISO_Së_M¨gö_Right
 0x„28

	)

354 
	#XK_ISO_Rñó£_M¨gö_Le·
 0x„29

	)

355 
	#XK_ISO_Rñó£_M¨gö_Right
 0x„2a

	)

356 
	#XK_ISO_Rñó£_BŸh_M¨gös
 0x„2b

	)

357 
	#XK_ISO_Fa°_Curs‹_Le·
 0x„2c

	)

358 
	#XK_ISO_Fa°_Curs‹_Right
 0x„2d

	)

359 
	#XK_ISO_Fa°_Curs‹_Up
 0x„2e

	)

360 
	#XK_ISO_Fa°_Curs‹_Down
 0x„2f

	)

361 
	#XK_ISO_C⁄töuous_Undîlöe
 0x„30

	)

362 
	#XK_ISO_Disc⁄töuous_Undîlöe
 0x„31

	)

363 
	#XK_ISO_Emphasize
 0x„32

	)

364 
	#XK_ISO_Cíãr_Obje˘
 0x„33

	)

365 
	#XK_ISO_E¡î
 0x„34

	)

367 
	#XK_dód_gøve
 0x„50

	)

368 
	#XK_dód_acuã
 0x„51

	)

369 
	#XK_dód_cúcumÊex
 0x„52

	)

370 
	#XK_dód_tûde
 0x„53

	)

371 
	#XK_dód_ma¸⁄
 0x„54

	)

372 
	#XK_dód_bªve
 0x„55

	)

373 
	#XK_dód_abovedŸ
 0x„56

	)

374 
	#XK_dód_düîesis
 0x„57

	)

375 
	#XK_dód_abovîög
 0x„58

	)

376 
	#XK_dód_doubÀacuã
 0x„59

	)

377 
	#XK_dód_ˇr⁄
 0x„5a

	)

378 
	#XK_dód_˚dûœ
 0x„5b

	)

379 
	#XK_dód_og⁄ek
 0x„5c

	)

380 
	#XK_dód_iŸa
 0x„5d

	)

381 
	#XK_dód_voi˚d_sound
 0x„5e

	)

382 
	#XK_dód_£mivoi˚d_sound
 0x„5f

	)

383 
	#XK_dód_bñowdŸ
 0x„60

	)

384 
	#XK_dód_hook
 0x„61

	)

385 
	#XK_dód_h‹n
 0x„62

	)

386 
	#XK_dód_°roke
 0x„63

	)

388 
	#XK_Fú°_VútuÆ_S¸ìn
 0x„d0

	)

389 
	#XK_Pªv_VútuÆ_S¸ìn
 0x„d1

	)

390 
	#XK_Next_VútuÆ_S¸ìn
 0x„d2

	)

391 
	#XK_La°_VútuÆ_S¸ìn
 0x„d4

	)

392 
	#XK_Tîmö©e_Sîvî
 0x„d5

	)

394 
	#XK_Ac˚ssX_E«bÀ
 0x„70

	)

395 
	#XK_Ac˚ssX_Fìdback_E«bÀ
 0x„71

	)

396 
	#XK_RïótKeys_E«bÀ
 0x„72

	)

397 
	#XK_SlowKeys_E«bÀ
 0x„73

	)

398 
	#XK_Boun˚Keys_E«bÀ
 0x„74

	)

399 
	#XK_StickyKeys_E«bÀ
 0x„75

	)

400 
	#XK_Mou£Keys_E«bÀ
 0x„76

	)

401 
	#XK_Mou£Keys_Ac˚l_E«bÀ
 0x„77

	)

402 
	#XK_Ovîœy1_E«bÀ
 0x„78

	)

403 
	#XK_Ovîœy2_E«bÀ
 0x„79

	)

404 
	#XK_AudibÀBñl_E«bÀ
 0x„7a

	)

406 
	#XK_Poöãr_Le·
 0x„e0

	)

407 
	#XK_Poöãr_Right
 0x„e1

	)

408 
	#XK_Poöãr_Up
 0x„e2

	)

409 
	#XK_Poöãr_Down
 0x„e3

	)

410 
	#XK_Poöãr_UpLe·
 0x„e4

	)

411 
	#XK_Poöãr_UpRight
 0x„e5

	)

412 
	#XK_Poöãr_DownLe·
 0x„e6

	)

413 
	#XK_Poöãr_DownRight
 0x„e7

	)

414 
	#XK_Poöãr_Buâ⁄_DÊt
 0x„e8

	)

415 
	#XK_Poöãr_Buâ⁄1
 0x„e9

	)

416 
	#XK_Poöãr_Buâ⁄2
 0x„ó

	)

417 
	#XK_Poöãr_Buâ⁄3
 0x„eb

	)

418 
	#XK_Poöãr_Buâ⁄4
 0x„ec

	)

419 
	#XK_Poöãr_Buâ⁄5
 0x„ed

	)

420 
	#XK_Poöãr_DblClick_DÊt
 0x„ì

	)

421 
	#XK_Poöãr_DblClick1
 0x„ef

	)

422 
	#XK_Poöãr_DblClick2
 0x„f0

	)

423 
	#XK_Poöãr_DblClick3
 0x„f1

	)

424 
	#XK_Poöãr_DblClick4
 0x„f2

	)

425 
	#XK_Poöãr_DblClick5
 0x„f3

	)

426 
	#XK_Poöãr_Døg_DÊt
 0x„f4

	)

427 
	#XK_Poöãr_Døg1
 0x„f5

	)

428 
	#XK_Poöãr_Døg2
 0x„f6

	)

429 
	#XK_Poöãr_Døg3
 0x„f7

	)

430 
	#XK_Poöãr_Døg4
 0x„f8

	)

431 
	#XK_Poöãr_Døg5
 0x„fd

	)

433 
	#XK_Poöãr_E«bÀKeys
 0x„f9

	)

434 
	#XK_Poöãr_Ac˚Àøã
 0x„Á

	)

435 
	#XK_Poöãr_DÊtBäNext
 0x„fb

	)

436 
	#XK_Poöãr_DÊtBäPªv
 0x„fc

	)

445 #ifde‡
XK_3270


446 
	#XK_3270_Du∂iˇã
 0xfd01

	)

447 
	#XK_3270_FõldM¨k
 0xfd02

	)

448 
	#XK_3270_Right2
 0xfd03

	)

449 
	#XK_3270_Le·2
 0xfd04

	)

450 
	#XK_3270_BackTab
 0xfd05

	)

451 
	#XK_3270_Eø£EOF
 0xfd06

	)

452 
	#XK_3270_Eø£I≈ut
 0xfd07

	)

453 
	#XK_3270_Re£t
 0xfd08

	)

454 
	#XK_3270_Quô
 0xfd09

	)

455 
	#XK_3270_PA1
 0xfd0a

	)

456 
	#XK_3270_PA2
 0xfd0b

	)

457 
	#XK_3270_PA3
 0xfd0c

	)

458 
	#XK_3270_Te°
 0xfd0d

	)

459 
	#XK_3270_Aân
 0xfd0e

	)

460 
	#XK_3270_Curs‹Blök
 0xfd0f

	)

461 
	#XK_3270_A…Curs‹
 0xfd10

	)

462 
	#XK_3270_KeyClick
 0xfd11

	)

463 
	#XK_3270_Jump
 0xfd12

	)

464 
	#XK_3270_Idít
 0xfd13

	)

465 
	#XK_3270_RuÀ
 0xfd14

	)

466 
	#XK_3270_C›y
 0xfd15

	)

467 
	#XK_3270_Pœy
 0xfd16

	)

468 
	#XK_3270_Sëup
 0xfd17

	)

469 
	#XK_3270_Rec‹d
 0xfd18

	)

470 
	#XK_3270_Ch™geS¸ìn
 0xfd19

	)

471 
	#XK_3270_DñëeW‹d
 0xfd1a

	)

472 
	#XK_3270_ExSñe˘
 0xfd1b

	)

473 
	#XK_3270_Curs‹Sñe˘
 0xfd1c

	)

474 
	#XK_3270_PrötS¸ìn
 0xfd1d

	)

475 
	#XK_3270_E¡î
 0xfd1e

	)

483 #ifde‡
XK_LATIN1


484 
	#XK_•a˚
 0x0020

	)

485 
	#XK_ex˛am
 0x0021

	)

486 
	#XK_quŸedbl
 0x0022

	)

487 
	#XK_numbîsign
 0x0023

	)

488 
	#XK_dﬁœr
 0x0024

	)

489 
	#XK_≥r˚¡
 0x0025

	)

490 
	#XK_am≥rßnd
 0x0026

	)

491 
	#XK_≠o°r›he
 0x0027

	)

492 
	#XK_quŸîight
 0x0027

	)

493 
	#XK_∑ª∆e·
 0x0028

	)

494 
	#XK_∑ªƒight
 0x0029

	)

495 
	#XK_a°îisk
 0x002®

	)

496 
	#XK_∂us
 0x002b

	)

497 
	#XK_comma
 0x002¯

	)

498 
	#XK_möus
 0x002d

	)

499 
	#XK_≥riod
 0x002ê

	)

500 
	#XK_¶ash
 0x002‡

	)

501 
	#XK_0
 0x0030

	)

502 
	#XK_1
 0x0031

	)

503 
	#XK_2
 0x0032

	)

504 
	#XK_3
 0x0033

	)

505 
	#XK_4
 0x0034

	)

506 
	#XK_5
 0x0035

	)

507 
	#XK_6
 0x0036

	)

508 
	#XK_7
 0x0037

	)

509 
	#XK_8
 0x0038

	)

510 
	#XK_9
 0x0039

	)

511 
	#XK_cﬁ⁄
 0x003®

	)

512 
	#XK_£micﬁ⁄
 0x003b

	)

513 
	#XK_Àss
 0x003¯

	)

514 
	#XK_equÆ
 0x003d

	)

515 
	#XK_gª©î
 0x003ê

	)

516 
	#XK_que°i⁄
 0x003‡

	)

517 
	#XK_©
 0x0040

	)

518 
	#XK_A
 0x0041

	)

519 
	#XK_B
 0x0042

	)

520 
	#XK_C
 0x0043

	)

521 
	#XK_D
 0x0044

	)

522 
	#XK_E
 0x0045

	)

523 
	#XK_F
 0x0046

	)

524 
	#XK_G
 0x0047

	)

525 
	#XK_H
 0x0048

	)

526 
	#XK_I
 0x0049

	)

527 
	#XK_J
 0x004®

	)

528 
	#XK_K
 0x004b

	)

529 
	#XK_L
 0x004¯

	)

530 
	#XK_M
 0x004d

	)

531 
	#XK_N
 0x004ê

	)

532 
	#XK_O
 0x004‡

	)

533 
	#XK_P
 0x0050

	)

534 
	#XK_Q
 0x0051

	)

535 
	#XK_R
 0x0052

	)

536 
	#XK_S
 0x0053

	)

537 
	#XK_T
 0x0054

	)

538 
	#XK_U
 0x0055

	)

539 
	#XK_V
 0x0056

	)

540 
	#XK_W
 0x0057

	)

541 
	#XK_X
 0x0058

	)

542 
	#XK_Y
 0x0059

	)

543 
	#XK_Z
 0x005®

	)

544 
	#XK_bøckëÀ·
 0x005b

	)

545 
	#XK_back¶ash
 0x005¯

	)

546 
	#XK_bøckëright
 0x005d

	)

547 
	#XK_asciicúcum
 0x005ê

	)

548 
	#XK_undîsc‹e
 0x005‡

	)

549 
	#XK_gøve
 0x0060

	)

550 
	#XK_quŸñe·
 0x0060

	)

551 
	#XK_a
 0x0061

	)

552 
	#XK_b
 0x0062

	)

553 
	#XK_c
 0x0063

	)

554 
	#XK_d
 0x0064

	)

555 
	#XK_e
 0x0065

	)

556 
	#XK_f
 0x0066

	)

557 
	#XK_g
 0x0067

	)

558 
	#XK_h
 0x0068

	)

559 
	#XK_i
 0x0069

	)

560 
	#XK_j
 0x006®

	)

561 
	#XK_k
 0x006b

	)

562 
	#XK_l
 0x006¯

	)

563 
	#XK_m
 0x006d

	)

564 
	#XK_n
 0x006ê

	)

565 
	#XK_o
 0x006‡

	)

566 
	#XK_p
 0x0070

	)

567 
	#XK_q
 0x0071

	)

568 
	#XK_r
 0x0072

	)

569 
	#XK_s
 0x0073

	)

570 
	#XK_t
 0x0074

	)

571 
	#XK_u
 0x0075

	)

572 
	#XK_v
 0x0076

	)

573 
	#XK_w
 0x0077

	)

574 
	#XK_x
 0x0078

	)

575 
	#XK_y
 0x0079

	)

576 
	#XK_z
 0x007®

	)

577 
	#XK_bø˚À·
 0x007b

	)

578 
	#XK_b¨
 0x007¯

	)

579 
	#XK_bø˚right
 0x007d

	)

580 
	#XK_asciôûde
 0x007ê

	)

582 
	#XK_nobªak•a˚
 0x00a0

	)

583 
	#XK_ex˛amdown
 0x00a1

	)

584 
	#XK_˚¡
 0x00a2

	)

585 
	#XK_°îlög
 0x00a3

	)

586 
	#XK_cuºícy
 0x00a4

	)

587 
	#XK_yí
 0x00a5

	)

588 
	#XK_brokíb¨
 0x00a6

	)

589 
	#XK_£˘i⁄
 0x00a7

	)

590 
	#XK_düîesis
 0x00a8

	)

591 
	#XK_c›yright
 0x00a9

	)

592 
	#XK_‹d„mööe
 0x00Ø

	)

593 
	#XK_guûÀmŸÀ·
 0x00ab

	)

594 
	#XK_nŸsign
 0x00a¯

	)

595 
	#XK_hyphí
 0x00ad

	)

596 
	#XK_ªgi°îed
 0x00´

	)

597 
	#XK_ma¸⁄
 0x00a‡

	)

598 
	#XK_degªe
 0x00b0

	)

599 
	#XK_∂usmöus
 0x00b1

	)

600 
	#XK_twosu≥ri‹
 0x00b2

	)

601 
	#XK_thªesu≥ri‹
 0x00b3

	)

602 
	#XK_acuã
 0x00b4

	)

603 
	#XK_mu
 0x00b5

	)

604 
	#XK_∑øgøph
 0x00b6

	)

605 
	#XK_≥riod˚¡îed
 0x00b7

	)

606 
	#XK_˚dûœ
 0x00b8

	)

607 
	#XK_⁄esu≥ri‹
 0x00b9

	)

608 
	#XK_masculöe
 0x00b®

	)

609 
	#XK_guûÀmŸright
 0x00bb

	)

610 
	#XK_⁄equ¨ãr
 0x00b¯

	)

611 
	#XK_⁄ehÆf
 0x00bd

	)

612 
	#XK_thªequ¨ãrs
 0x00bê

	)

613 
	#XK_que°i⁄down
 0x00b‡

	)

614 
	#XK_Agøve
 0x00c0

	)

615 
	#XK_Aacuã
 0x00c1

	)

616 
	#XK_AcúcumÊex
 0x00c2

	)

617 
	#XK_Atûde
 0x00c3

	)

618 
	#XK_Adüîesis
 0x00c4

	)

619 
	#XK_Arög
 0x00c5

	)

620 
	#XK_AE
 0x00c6

	)

621 
	#XK_C˚dûœ
 0x00c7

	)

622 
	#XK_Egøve
 0x00c8

	)

623 
	#XK_Eacuã
 0x00c9

	)

624 
	#XK_EcúcumÊex
 0x00ˇ

	)

625 
	#XK_Edüîesis
 0x00cb

	)

626 
	#XK_Igøve
 0x00c¯

	)

627 
	#XK_Iacuã
 0x00cd

	)

628 
	#XK_IcúcumÊex
 0x00˚

	)

629 
	#XK_Idüîesis
 0x00c‡

	)

630 
	#XK_ETH
 0x00d0

	)

631 
	#XK_Eth
 0x00d0

	)

632 
	#XK_Ntûde
 0x00d1

	)

633 
	#XK_Ogøve
 0x00d2

	)

634 
	#XK_Oacuã
 0x00d3

	)

635 
	#XK_OcúcumÊex
 0x00d4

	)

636 
	#XK_Otûde
 0x00d5

	)

637 
	#XK_Odüîesis
 0x00d6

	)

638 
	#XK_mu…ùly
 0x00d7

	)

639 
	#XK_O¶ash
 0x00d8

	)

640 
	#XK_Ooblique
 0x00d8

	)

641 
	#XK_Ugøve
 0x00d9

	)

642 
	#XK_Uacuã
 0x00d®

	)

643 
	#XK_UcúcumÊex
 0x00db

	)

644 
	#XK_Udüîesis
 0x00d¯

	)

645 
	#XK_Yacuã
 0x00dd

	)

646 
	#XK_THORN
 0x00dê

	)

647 
	#XK_Th‹n
 0x00dê

	)

648 
	#XK_ssh¨p
 0x00d‡

	)

649 
	#XK_agøve
 0x00e0

	)

650 
	#XK_Øcuã
 0x00e1

	)

651 
	#XK_acúcumÊex
 0x00e2

	)

652 
	#XK_©ûde
 0x00e3

	)

653 
	#XK_adüîesis
 0x00e4

	)

654 
	#XK_¨ög
 0x00e5

	)

655 
	#XK_´
 0x00e6

	)

656 
	#XK_c˚dûœ
 0x00e7

	)

657 
	#XK_egøve
 0x00e8

	)

658 
	#XK_ócuã
 0x00e9

	)

659 
	#XK_ecúcumÊex
 0x00ó

	)

660 
	#XK_edüîesis
 0x00eb

	)

661 
	#XK_igøve
 0x00e¯

	)

662 
	#XK_ücuã
 0x00ed

	)

663 
	#XK_icúcumÊex
 0x00ì

	)

664 
	#XK_idüîesis
 0x00e‡

	)

665 
	#XK_ëh
 0x00f0

	)

666 
	#XK_¡ûde
 0x00f1

	)

667 
	#XK_ogøve
 0x00f2

	)

668 
	#XK_ﬂcuã
 0x00f3

	)

669 
	#XK_ocúcumÊex
 0x00f4

	)

670 
	#XK_Ÿûde
 0x00f5

	)

671 
	#XK_odüîesis
 0x00f6

	)

672 
	#XK_divisi⁄
 0x00f7

	)

673 
	#XK_o¶ash
 0x00f8

	)

674 
	#XK_ooblique
 0x00f8

	)

675 
	#XK_ugøve
 0x00f9

	)

676 
	#XK_uacuã
 0x00Á

	)

677 
	#XK_ucúcumÊex
 0x00fb

	)

678 
	#XK_udüîesis
 0x00f¯

	)

679 
	#XK_yacuã
 0x00fd

	)

680 
	#XK_th‹n
 0x00„

	)

681 
	#XK_ydüîesis
 0x00f‡

	)

689 #ifde‡
XK_LATIN2


690 
	#XK_Aog⁄ek
 0x01a1

	)

691 
	#XK_bªve
 0x01a2

	)

692 
	#XK_L°roke
 0x01a3

	)

693 
	#XK_Lˇr⁄
 0x01a5

	)

694 
	#XK_Sacuã
 0x01a6

	)

695 
	#XK_Sˇr⁄
 0x01a9

	)

696 
	#XK_S˚dûœ
 0x01Ø

	)

697 
	#XK_Tˇr⁄
 0x01ab

	)

698 
	#XK_Zacuã
 0x01a¯

	)

699 
	#XK_Zˇr⁄
 0x01´

	)

700 
	#XK_ZabovedŸ
 0x01a‡

	)

701 
	#XK_aog⁄ek
 0x01b1

	)

702 
	#XK_og⁄ek
 0x01b2

	)

703 
	#XK_l°roke
 0x01b3

	)

704 
	#XK_lˇr⁄
 0x01b5

	)

705 
	#XK_ßcuã
 0x01b6

	)

706 
	#XK_ˇr⁄
 0x01b7

	)

707 
	#XK_sˇr⁄
 0x01b9

	)

708 
	#XK_s˚dûœ
 0x01b®

	)

709 
	#XK_tˇr⁄
 0x01bb

	)

710 
	#XK_zacuã
 0x01b¯

	)

711 
	#XK_doubÀacuã
 0x01bd

	)

712 
	#XK_zˇr⁄
 0x01bê

	)

713 
	#XK_zabovedŸ
 0x01b‡

	)

714 
	#XK_Racuã
 0x01c0

	)

715 
	#XK_Abªve
 0x01c3

	)

716 
	#XK_Lacuã
 0x01c5

	)

717 
	#XK_Cacuã
 0x01c6

	)

718 
	#XK_Cˇr⁄
 0x01c8

	)

719 
	#XK_Eog⁄ek
 0x01ˇ

	)

720 
	#XK_Eˇr⁄
 0x01c¯

	)

721 
	#XK_Dˇr⁄
 0x01c‡

	)

722 
	#XK_D°roke
 0x01d0

	)

723 
	#XK_Nacuã
 0x01d1

	)

724 
	#XK_Nˇr⁄
 0x01d2

	)

725 
	#XK_OdoubÀacuã
 0x01d5

	)

726 
	#XK_Rˇr⁄
 0x01d8

	)

727 
	#XK_Urög
 0x01d9

	)

728 
	#XK_UdoubÀacuã
 0x01db

	)

729 
	#XK_T˚dûœ
 0x01dê

	)

730 
	#XK_øcuã
 0x01e0

	)

731 
	#XK_abªve
 0x01e3

	)

732 
	#XK_œcuã
 0x01e5

	)

733 
	#XK_ˇcuã
 0x01e6

	)

734 
	#XK_cˇr⁄
 0x01e8

	)

735 
	#XK_eog⁄ek
 0x01ó

	)

736 
	#XK_eˇr⁄
 0x01e¯

	)

737 
	#XK_dˇr⁄
 0x01e‡

	)

738 
	#XK_d°roke
 0x01f0

	)

739 
	#XK_«cuã
 0x01f1

	)

740 
	#XK_nˇr⁄
 0x01f2

	)

741 
	#XK_odoubÀacuã
 0x01f5

	)

742 
	#XK_udoubÀacuã
 0x01fb

	)

743 
	#XK_rˇr⁄
 0x01f8

	)

744 
	#XK_urög
 0x01f9

	)

745 
	#XK_t˚dûœ
 0x01„

	)

746 
	#XK_abovedŸ
 0x01f‡

	)

754 #ifde‡
XK_LATIN3


755 
	#XK_H°roke
 0x02a1

	)

756 
	#XK_HcúcumÊex
 0x02a6

	)

757 
	#XK_IabovedŸ
 0x02a9

	)

758 
	#XK_Gbªve
 0x02ab

	)

759 
	#XK_JcúcumÊex
 0x02a¯

	)

760 
	#XK_h°roke
 0x02b1

	)

761 
	#XK_hcúcumÊex
 0x02b6

	)

762 
	#XK_idŸÀss
 0x02b9

	)

763 
	#XK_gbªve
 0x02bb

	)

764 
	#XK_jcúcumÊex
 0x02b¯

	)

765 
	#XK_CabovedŸ
 0x02c5

	)

766 
	#XK_CcúcumÊex
 0x02c6

	)

767 
	#XK_GabovedŸ
 0x02d5

	)

768 
	#XK_GcúcumÊex
 0x02d8

	)

769 
	#XK_Ubªve
 0x02dd

	)

770 
	#XK_ScúcumÊex
 0x02dê

	)

771 
	#XK_ˇbovedŸ
 0x02e5

	)

772 
	#XK_ccúcumÊex
 0x02e6

	)

773 
	#XK_gabovedŸ
 0x02f5

	)

774 
	#XK_gcúcumÊex
 0x02f8

	)

775 
	#XK_ubªve
 0x02fd

	)

776 
	#XK_scúcumÊex
 0x02„

	)

785 #ifde‡
XK_LATIN4


786 
	#XK_kø
 0x03a2

	)

787 
	#XK_k≠∑
 0x03a2

	)

788 
	#XK_R˚dûœ
 0x03a3

	)

789 
	#XK_Itûde
 0x03a5

	)

790 
	#XK_L˚dûœ
 0x03a6

	)

791 
	#XK_Ema¸⁄
 0x03Ø

	)

792 
	#XK_G˚dûœ
 0x03ab

	)

793 
	#XK_T¶ash
 0x03a¯

	)

794 
	#XK_r˚dûœ
 0x03b3

	)

795 
	#XK_ôûde
 0x03b5

	)

796 
	#XK_l˚dûœ
 0x03b6

	)

797 
	#XK_ema¸⁄
 0x03b®

	)

798 
	#XK_g˚dûœ
 0x03bb

	)

799 
	#XK_t¶ash
 0x03b¯

	)

800 
	#XK_ENG
 0x03bd

	)

801 
	#XK_íg
 0x03b‡

	)

802 
	#XK_Ama¸⁄
 0x03c0

	)

803 
	#XK_Iog⁄ek
 0x03c7

	)

804 
	#XK_EabovedŸ
 0x03c¯

	)

805 
	#XK_Ima¸⁄
 0x03c‡

	)

806 
	#XK_N˚dûœ
 0x03d1

	)

807 
	#XK_Oma¸⁄
 0x03d2

	)

808 
	#XK_K˚dûœ
 0x03d3

	)

809 
	#XK_Uog⁄ek
 0x03d9

	)

810 
	#XK_Utûde
 0x03dd

	)

811 
	#XK_Uma¸⁄
 0x03dê

	)

812 
	#XK_ama¸⁄
 0x03e0

	)

813 
	#XK_iog⁄ek
 0x03e7

	)

814 
	#XK_óbovedŸ
 0x03e¯

	)

815 
	#XK_ima¸⁄
 0x03e‡

	)

816 
	#XK_n˚dûœ
 0x03f1

	)

817 
	#XK_oma¸⁄
 0x03f2

	)

818 
	#XK_k˚dûœ
 0x03f3

	)

819 
	#XK_uog⁄ek
 0x03f9

	)

820 
	#XK_utûde
 0x03fd

	)

821 
	#XK_uma¸⁄
 0x03„

	)

827 #ifde‡
XK_LATIN8


828 
	#XK_BabovedŸ
 0x1001e02

	)

829 
	#XK_babovedŸ
 0x1001e03

	)

830 
	#XK_DabovedŸ
 0x1001e0®

	)

831 
	#XK_Wgøve
 0x1001e80

	)

832 
	#XK_Wacuã
 0x1001e82

	)

833 
	#XK_dabovedŸ
 0x1001e0b

	)

834 
	#XK_Ygøve
 0x1001ef2

	)

835 
	#XK_FabovedŸ
 0x1001e1ê

	)

836 
	#XK_ÁbovedŸ
 0x1001e1‡

	)

837 
	#XK_MabovedŸ
 0x1001e40

	)

838 
	#XK_mabovedŸ
 0x1001e41

	)

839 
	#XK_PabovedŸ
 0x1001e56

	)

840 
	#XK_wgøve
 0x1001e81

	)

841 
	#XK_∑bovedŸ
 0x1001e57

	)

842 
	#XK_wacuã
 0x1001e83

	)

843 
	#XK_SabovedŸ
 0x1001e60

	)

844 
	#XK_ygøve
 0x1001ef3

	)

845 
	#XK_Wdüîesis
 0x1001e84

	)

846 
	#XK_wdüîesis
 0x1001e85

	)

847 
	#XK_ßbovedŸ
 0x1001e61

	)

848 
	#XK_WcúcumÊex
 0x1000174

	)

849 
	#XK_TabovedŸ
 0x1001e6®

	)

850 
	#XK_YcúcumÊex
 0x1000176

	)

851 
	#XK_wcúcumÊex
 0x1000175

	)

852 
	#XK_èbovedŸ
 0x1001e6b

	)

853 
	#XK_ycúcumÊex
 0x1000177

	)

861 #ifde‡
XK_LATIN9


862 
	#XK_OE
 0x13b¯

	)

863 
	#XK_€
 0x13bd

	)

864 
	#XK_Ydüîesis
 0x13bê

	)

872 #ifde‡
XK_KATAKANA


873 
	#XK_ovîlöe
 0x047ê

	)

874 
	#XK_k™a_fuŒ°›
 0x04a1

	)

875 
	#XK_k™a_›íögbøckë
 0x04a2

	)

876 
	#XK_k™a_˛osögbøckë
 0x04a3

	)

877 
	#XK_k™a_comma
 0x04a4

	)

878 
	#XK_k™a_c⁄jun˘ive
 0x04a5

	)

879 
	#XK_k™a_middÀdŸ
 0x04a5

	)

880 
	#XK_k™a_WO
 0x04a6

	)

881 
	#XK_k™a_a
 0x04a7

	)

882 
	#XK_k™a_i
 0x04a8

	)

883 
	#XK_k™a_u
 0x04a9

	)

884 
	#XK_k™a_e
 0x04Ø

	)

885 
	#XK_k™a_o
 0x04ab

	)

886 
	#XK_k™a_ya
 0x04a¯

	)

887 
	#XK_k™a_yu
 0x04ad

	)

888 
	#XK_k™a_yo
 0x04´

	)

889 
	#XK_k™a_tsu
 0x04a‡

	)

890 
	#XK_k™a_tu
 0x04a‡

	)

891 
	#XK_¥ﬁ⁄gedsound
 0x04b0

	)

892 
	#XK_k™a_A
 0x04b1

	)

893 
	#XK_k™a_I
 0x04b2

	)

894 
	#XK_k™a_U
 0x04b3

	)

895 
	#XK_k™a_E
 0x04b4

	)

896 
	#XK_k™a_O
 0x04b5

	)

897 
	#XK_k™a_KA
 0x04b6

	)

898 
	#XK_k™a_KI
 0x04b7

	)

899 
	#XK_k™a_KU
 0x04b8

	)

900 
	#XK_k™a_KE
 0x04b9

	)

901 
	#XK_k™a_KO
 0x04b®

	)

902 
	#XK_k™a_SA
 0x04bb

	)

903 
	#XK_k™a_SHI
 0x04b¯

	)

904 
	#XK_k™a_SU
 0x04bd

	)

905 
	#XK_k™a_SE
 0x04bê

	)

906 
	#XK_k™a_SO
 0x04b‡

	)

907 
	#XK_k™a_TA
 0x04c0

	)

908 
	#XK_k™a_CHI
 0x04c1

	)

909 
	#XK_k™a_TI
 0x04c1

	)

910 
	#XK_k™a_TSU
 0x04c2

	)

911 
	#XK_k™a_TU
 0x04c2

	)

912 
	#XK_k™a_TE
 0x04c3

	)

913 
	#XK_k™a_TO
 0x04c4

	)

914 
	#XK_k™a_NA
 0x04c5

	)

915 
	#XK_k™a_NI
 0x04c6

	)

916 
	#XK_k™a_NU
 0x04c7

	)

917 
	#XK_k™a_NE
 0x04c8

	)

918 
	#XK_k™a_NO
 0x04c9

	)

919 
	#XK_k™a_HA
 0x04ˇ

	)

920 
	#XK_k™a_HI
 0x04cb

	)

921 
	#XK_k™a_FU
 0x04c¯

	)

922 
	#XK_k™a_HU
 0x04c¯

	)

923 
	#XK_k™a_HE
 0x04cd

	)

924 
	#XK_k™a_HO
 0x04˚

	)

925 
	#XK_k™a_MA
 0x04c‡

	)

926 
	#XK_k™a_MI
 0x04d0

	)

927 
	#XK_k™a_MU
 0x04d1

	)

928 
	#XK_k™a_ME
 0x04d2

	)

929 
	#XK_k™a_MO
 0x04d3

	)

930 
	#XK_k™a_YA
 0x04d4

	)

931 
	#XK_k™a_YU
 0x04d5

	)

932 
	#XK_k™a_YO
 0x04d6

	)

933 
	#XK_k™a_RA
 0x04d7

	)

934 
	#XK_k™a_RI
 0x04d8

	)

935 
	#XK_k™a_RU
 0x04d9

	)

936 
	#XK_k™a_RE
 0x04d®

	)

937 
	#XK_k™a_RO
 0x04db

	)

938 
	#XK_k™a_WA
 0x04d¯

	)

939 
	#XK_k™a_N
 0x04dd

	)

940 
	#XK_voi˚dsound
 0x04dê

	)

941 
	#XK_£mivoi˚dsound
 0x04d‡

	)

942 
	#XK_k™a_swôch
 0xff7ê

	)

950 #ifde‡
XK_ARABIC


951 
	#XK_F¨si_0
 0x10006f0

	)

952 
	#XK_F¨si_1
 0x10006f1

	)

953 
	#XK_F¨si_2
 0x10006f2

	)

954 
	#XK_F¨si_3
 0x10006f3

	)

955 
	#XK_F¨si_4
 0x10006f4

	)

956 
	#XK_F¨si_5
 0x10006f5

	)

957 
	#XK_F¨si_6
 0x10006f6

	)

958 
	#XK_F¨si_7
 0x10006f7

	)

959 
	#XK_F¨si_8
 0x10006f8

	)

960 
	#XK_F¨si_9
 0x10006f9

	)

961 
	#XK_Aøbic_≥r˚¡
 0x100066®

	)

962 
	#XK_Aøbic_su≥rs¸ùt_Æef
 0x1000670

	)

963 
	#XK_Aøbic_âeh
 0x1000679

	)

964 
	#XK_Aøbic_≥h
 0x100067ê

	)

965 
	#XK_Aøbic_tcheh
 0x1000686

	)

966 
	#XK_Aøbic_ddÆ
 0x1000688

	)

967 
	#XK_Aøbic_ºeh
 0x1000691

	)

968 
	#XK_Aøbic_comma
 0x05a¯

	)

969 
	#XK_Aøbic_fuŒ°›
 0x10006d4

	)

970 
	#XK_Aøbic_0
 0x1000660

	)

971 
	#XK_Aøbic_1
 0x1000661

	)

972 
	#XK_Aøbic_2
 0x1000662

	)

973 
	#XK_Aøbic_3
 0x1000663

	)

974 
	#XK_Aøbic_4
 0x1000664

	)

975 
	#XK_Aøbic_5
 0x1000665

	)

976 
	#XK_Aøbic_6
 0x1000666

	)

977 
	#XK_Aøbic_7
 0x1000667

	)

978 
	#XK_Aøbic_8
 0x1000668

	)

979 
	#XK_Aøbic_9
 0x1000669

	)

980 
	#XK_Aøbic_£micﬁ⁄
 0x05bb

	)

981 
	#XK_Aøbic_que°i⁄_m¨k
 0x05b‡

	)

982 
	#XK_Aøbic_hamza
 0x05c1

	)

983 
	#XK_Aøbic_madda⁄Æef
 0x05c2

	)

984 
	#XK_Aøbic_hamza⁄Æef
 0x05c3

	)

985 
	#XK_Aøbic_hamza⁄waw
 0x05c4

	)

986 
	#XK_Aøbic_hamzaundîÆef
 0x05c5

	)

987 
	#XK_Aøbic_hamza⁄yeh
 0x05c6

	)

988 
	#XK_Aøbic_Æef
 0x05c7

	)

989 
	#XK_Aøbic_beh
 0x05c8

	)

990 
	#XK_Aøbic_ãhm¨buè
 0x05c9

	)

991 
	#XK_Aøbic_ãh
 0x05ˇ

	)

992 
	#XK_Aøbic_theh
 0x05cb

	)

993 
	#XK_Aøbic_jìm
 0x05c¯

	)

994 
	#XK_Aøbic_hah
 0x05cd

	)

995 
	#XK_Aøbic_khah
 0x05˚

	)

996 
	#XK_Aøbic_dÆ
 0x05c‡

	)

997 
	#XK_Aøbic_thÆ
 0x05d0

	)

998 
	#XK_Aøbic_ø
 0x05d1

	)

999 
	#XK_Aøbic_zaö
 0x05d2

	)

1000 
	#XK_Aøbic_£í
 0x05d3

	)

1001 
	#XK_Aøbic_shìn
 0x05d4

	)

1002 
	#XK_Aøbic_ßd
 0x05d5

	)

1003 
	#XK_Aøbic_dad
 0x05d6

	)

1004 
	#XK_Aøbic_èh
 0x05d7

	)

1005 
	#XK_Aøbic_zah
 0x05d8

	)

1006 
	#XK_Aøbic_aö
 0x05d9

	)

1007 
	#XK_Aøbic_ghaö
 0x05d®

	)

1008 
	#XK_Aøbic_ètwìl
 0x05e0

	)

1009 
	#XK_Aøbic_„h
 0x05e1

	)

1010 
	#XK_Aøbic_qaf
 0x05e2

	)

1011 
	#XK_Aøbic_kaf
 0x05e3

	)

1012 
	#XK_Aøbic_œm
 0x05e4

	)

1013 
	#XK_Aøbic_mìm
 0x05e5

	)

1014 
	#XK_Aøbic_no⁄
 0x05e6

	)

1015 
	#XK_Aøbic_ha
 0x05e7

	)

1016 
	#XK_Aøbic_heh
 0x05e7

	)

1017 
	#XK_Aøbic_waw
 0x05e8

	)

1018 
	#XK_Aøbic_Æefmaksuø
 0x05e9

	)

1019 
	#XK_Aøbic_yeh
 0x05ó

	)

1020 
	#XK_Aøbic_Áth©™
 0x05eb

	)

1021 
	#XK_Aøbic_damm©™
 0x05e¯

	)

1022 
	#XK_Aøbic_ka§©™
 0x05ed

	)

1023 
	#XK_Aøbic_Átha
 0x05ì

	)

1024 
	#XK_Aøbic_damma
 0x05e‡

	)

1025 
	#XK_Aøbic_ka§a
 0x05f0

	)

1026 
	#XK_Aøbic_shadda
 0x05f1

	)

1027 
	#XK_Aøbic_sukun
 0x05f2

	)

1028 
	#XK_Aøbic_madda_above
 0x1000653

	)

1029 
	#XK_Aøbic_hamza_above
 0x1000654

	)

1030 
	#XK_Aøbic_hamza_bñow
 0x1000655

	)

1031 
	#XK_Aøbic_jeh
 0x1000698

	)

1032 
	#XK_Aøbic_veh
 0x10006a4

	)

1033 
	#XK_Aøbic_keheh
 0x10006a9

	)

1034 
	#XK_Aøbic_gaf
 0x10006a‡

	)

1035 
	#XK_Aøbic_no⁄_ghu¬a
 0x10006b®

	)

1036 
	#XK_Aøbic_heh_dﬂchashmì
 0x10006bê

	)

1037 
	#XK_F¨si_yeh
 0x10006c¯

	)

1038 
	#XK_Aøbic_Ársi_yeh
 0x10006c¯

	)

1039 
	#XK_Aøbic_yeh_b¨ì
 0x10006d2

	)

1040 
	#XK_Aøbic_heh_gﬂl
 0x10006c1

	)

1041 
	#XK_Aøbic_swôch
 0xff7ê

	)

1048 #ifde‡
XK_CYRILLIC


1049 
	#XK_Cyrûlic_GHE_b¨
 0x1000492

	)

1050 
	#XK_Cyrûlic_ghe_b¨
 0x1000493

	)

1051 
	#XK_Cyrûlic_ZHE_des˚ndî
 0x1000496

	)

1052 
	#XK_Cyrûlic_zhe_des˚ndî
 0x1000497

	)

1053 
	#XK_Cyrûlic_KA_des˚ndî
 0x100049®

	)

1054 
	#XK_Cyrûlic_ka_des˚ndî
 0x100049b

	)

1055 
	#XK_Cyrûlic_KA_vît°roke
 0x100049¯

	)

1056 
	#XK_Cyrûlic_ka_vît°roke
 0x100049d

	)

1057 
	#XK_Cyrûlic_EN_des˚ndî
 0x10004a2

	)

1058 
	#XK_Cyrûlic_í_des˚ndî
 0x10004a3

	)

1059 
	#XK_Cyrûlic_U_°øight
 0x10004´

	)

1060 
	#XK_Cyrûlic_u_°øight
 0x10004a‡

	)

1061 
	#XK_Cyrûlic_U_°øight_b¨
 0x10004b0

	)

1062 
	#XK_Cyrûlic_u_°øight_b¨
 0x10004b1

	)

1063 
	#XK_Cyrûlic_HA_des˚ndî
 0x10004b2

	)

1064 
	#XK_Cyrûlic_ha_des˚ndî
 0x10004b3

	)

1065 
	#XK_Cyrûlic_CHE_des˚ndî
 0x10004b6

	)

1066 
	#XK_Cyrûlic_che_des˚ndî
 0x10004b7

	)

1067 
	#XK_Cyrûlic_CHE_vît°roke
 0x10004b8

	)

1068 
	#XK_Cyrûlic_che_vît°roke
 0x10004b9

	)

1069 
	#XK_Cyrûlic_SHHA
 0x10004b®

	)

1070 
	#XK_Cyrûlic_shha
 0x10004bb

	)

1072 
	#XK_Cyrûlic_SCHWA
 0x10004d8

	)

1073 
	#XK_Cyrûlic_schwa
 0x10004d9

	)

1074 
	#XK_Cyrûlic_I_ma¸⁄
 0x10004e2

	)

1075 
	#XK_Cyrûlic_i_ma¸⁄
 0x10004e3

	)

1076 
	#XK_Cyrûlic_O_b¨
 0x10004e8

	)

1077 
	#XK_Cyrûlic_o_b¨
 0x10004e9

	)

1078 
	#XK_Cyrûlic_U_ma¸⁄
 0x10004ì

	)

1079 
	#XK_Cyrûlic_u_ma¸⁄
 0x10004e‡

	)

1081 
	#XK_Sîbün_dje
 0x06a1

	)

1082 
	#XK_Ma˚d⁄ü_gje
 0x06a2

	)

1083 
	#XK_Cyrûlic_io
 0x06a3

	)

1084 
	#XK_Ukøöün_õ
 0x06a4

	)

1085 
	#XK_Ukønün_je
 0x06a4

	)

1086 
	#XK_Ma˚d⁄ü_d£
 0x06a5

	)

1087 
	#XK_Ukøöün_i
 0x06a6

	)

1088 
	#XK_Ukønün_i
 0x06a6

	)

1089 
	#XK_Ukøöün_yi
 0x06a7

	)

1090 
	#XK_Ukønün_yi
 0x06a7

	)

1091 
	#XK_Cyrûlic_je
 0x06a8

	)

1092 
	#XK_Sîbün_je
 0x06a8

	)

1093 
	#XK_Cyrûlic_lje
 0x06a9

	)

1094 
	#XK_Sîbün_lje
 0x06a9

	)

1095 
	#XK_Cyrûlic_nje
 0x06Ø

	)

1096 
	#XK_Sîbün_nje
 0x06Ø

	)

1097 
	#XK_Sîbün_tshe
 0x06ab

	)

1098 
	#XK_Ma˚d⁄ü_kje
 0x06a¯

	)

1099 
	#XK_Ukøöün_ghe_wôh_u±u∫
 0x06ad

	)

1100 
	#XK_Byñ‹ussün_sh‹tu
 0x06´

	)

1101 
	#XK_Cyrûlic_dzhe
 0x06a‡

	)

1102 
	#XK_Sîbün_dze
 0x06a‡

	)

1103 
	#XK_numîosign
 0x06b0

	)

1104 
	#XK_Sîbün_DJE
 0x06b1

	)

1105 
	#XK_Ma˚d⁄ü_GJE
 0x06b2

	)

1106 
	#XK_Cyrûlic_IO
 0x06b3

	)

1107 
	#XK_Ukøöün_IE
 0x06b4

	)

1108 
	#XK_Ukønün_JE
 0x06b4

	)

1109 
	#XK_Ma˚d⁄ü_DSE
 0x06b5

	)

1110 
	#XK_Ukøöün_I
 0x06b6

	)

1111 
	#XK_Ukønün_I
 0x06b6

	)

1112 
	#XK_Ukøöün_YI
 0x06b7

	)

1113 
	#XK_Ukønün_YI
 0x06b7

	)

1114 
	#XK_Cyrûlic_JE
 0x06b8

	)

1115 
	#XK_Sîbün_JE
 0x06b8

	)

1116 
	#XK_Cyrûlic_LJE
 0x06b9

	)

1117 
	#XK_Sîbün_LJE
 0x06b9

	)

1118 
	#XK_Cyrûlic_NJE
 0x06b®

	)

1119 
	#XK_Sîbün_NJE
 0x06b®

	)

1120 
	#XK_Sîbün_TSHE
 0x06bb

	)

1121 
	#XK_Ma˚d⁄ü_KJE
 0x06b¯

	)

1122 
	#XK_Ukøöün_GHE_WITH_UPTURN
 0x06bd

	)

1123 
	#XK_Byñ‹ussün_SHORTU
 0x06bê

	)

1124 
	#XK_Cyrûlic_DZHE
 0x06b‡

	)

1125 
	#XK_Sîbün_DZE
 0x06b‡

	)

1126 
	#XK_Cyrûlic_yu
 0x06c0

	)

1127 
	#XK_Cyrûlic_a
 0x06c1

	)

1128 
	#XK_Cyrûlic_be
 0x06c2

	)

1129 
	#XK_Cyrûlic_t£
 0x06c3

	)

1130 
	#XK_Cyrûlic_de
 0x06c4

	)

1131 
	#XK_Cyrûlic_õ
 0x06c5

	)

1132 
	#XK_Cyrûlic_ef
 0x06c6

	)

1133 
	#XK_Cyrûlic_ghe
 0x06c7

	)

1134 
	#XK_Cyrûlic_ha
 0x06c8

	)

1135 
	#XK_Cyrûlic_i
 0x06c9

	)

1136 
	#XK_Cyrûlic_sh‹ti
 0x06ˇ

	)

1137 
	#XK_Cyrûlic_ka
 0x06cb

	)

1138 
	#XK_Cyrûlic_ñ
 0x06c¯

	)

1139 
	#XK_Cyrûlic_em
 0x06cd

	)

1140 
	#XK_Cyrûlic_í
 0x06˚

	)

1141 
	#XK_Cyrûlic_o
 0x06c‡

	)

1142 
	#XK_Cyrûlic_≥
 0x06d0

	)

1143 
	#XK_Cyrûlic_ya
 0x06d1

	)

1144 
	#XK_Cyrûlic_î
 0x06d2

	)

1145 
	#XK_Cyrûlic_es
 0x06d3

	)

1146 
	#XK_Cyrûlic_ã
 0x06d4

	)

1147 
	#XK_Cyrûlic_u
 0x06d5

	)

1148 
	#XK_Cyrûlic_zhe
 0x06d6

	)

1149 
	#XK_Cyrûlic_ve
 0x06d7

	)

1150 
	#XK_Cyrûlic_so·sign
 0x06d8

	)

1151 
	#XK_Cyrûlic_yîu
 0x06d9

	)

1152 
	#XK_Cyrûlic_ze
 0x06d®

	)

1153 
	#XK_Cyrûlic_sha
 0x06db

	)

1154 
	#XK_Cyrûlic_e
 0x06d¯

	)

1155 
	#XK_Cyrûlic_shcha
 0x06dd

	)

1156 
	#XK_Cyrûlic_che
 0x06dê

	)

1157 
	#XK_Cyrûlic_h¨dsign
 0x06d‡

	)

1158 
	#XK_Cyrûlic_YU
 0x06e0

	)

1159 
	#XK_Cyrûlic_A
 0x06e1

	)

1160 
	#XK_Cyrûlic_BE
 0x06e2

	)

1161 
	#XK_Cyrûlic_TSE
 0x06e3

	)

1162 
	#XK_Cyrûlic_DE
 0x06e4

	)

1163 
	#XK_Cyrûlic_IE
 0x06e5

	)

1164 
	#XK_Cyrûlic_EF
 0x06e6

	)

1165 
	#XK_Cyrûlic_GHE
 0x06e7

	)

1166 
	#XK_Cyrûlic_HA
 0x06e8

	)

1167 
	#XK_Cyrûlic_I
 0x06e9

	)

1168 
	#XK_Cyrûlic_SHORTI
 0x06ó

	)

1169 
	#XK_Cyrûlic_KA
 0x06eb

	)

1170 
	#XK_Cyrûlic_EL
 0x06e¯

	)

1171 
	#XK_Cyrûlic_EM
 0x06ed

	)

1172 
	#XK_Cyrûlic_EN
 0x06ì

	)

1173 
	#XK_Cyrûlic_O
 0x06e‡

	)

1174 
	#XK_Cyrûlic_PE
 0x06f0

	)

1175 
	#XK_Cyrûlic_YA
 0x06f1

	)

1176 
	#XK_Cyrûlic_ER
 0x06f2

	)

1177 
	#XK_Cyrûlic_ES
 0x06f3

	)

1178 
	#XK_Cyrûlic_TE
 0x06f4

	)

1179 
	#XK_Cyrûlic_U
 0x06f5

	)

1180 
	#XK_Cyrûlic_ZHE
 0x06f6

	)

1181 
	#XK_Cyrûlic_VE
 0x06f7

	)

1182 
	#XK_Cyrûlic_SOFTSIGN
 0x06f8

	)

1183 
	#XK_Cyrûlic_YERU
 0x06f9

	)

1184 
	#XK_Cyrûlic_ZE
 0x06Á

	)

1185 
	#XK_Cyrûlic_SHA
 0x06fb

	)

1186 
	#XK_Cyrûlic_E
 0x06f¯

	)

1187 
	#XK_Cyrûlic_SHCHA
 0x06fd

	)

1188 
	#XK_Cyrûlic_CHE
 0x06„

	)

1189 
	#XK_Cyrûlic_HARDSIGN
 0x06f‡

	)

1198 #ifde‡
XK_GREEK


1199 
	#XK_Gªek_ALPHAac˚¡
 0x07a1

	)

1200 
	#XK_Gªek_EPSILONac˚¡
 0x07a2

	)

1201 
	#XK_Gªek_ETAac˚¡
 0x07a3

	)

1202 
	#XK_Gªek_IOTAac˚¡
 0x07a4

	)

1203 
	#XK_Gªek_IOTAdõªsis
 0x07a5

	)

1204 
	#XK_Gªek_IOTAdüîesis
 0x07a5

	)

1205 
	#XK_Gªek_OMICRONac˚¡
 0x07a7

	)

1206 
	#XK_Gªek_UPSILONac˚¡
 0x07a8

	)

1207 
	#XK_Gªek_UPSILONdõªsis
 0x07a9

	)

1208 
	#XK_Gªek_OMEGAac˚¡
 0x07ab

	)

1209 
	#XK_Gªek_ac˚¡dõªsis
 0x07´

	)

1210 
	#XK_Gªek_h‹izb¨
 0x07a‡

	)

1211 
	#XK_Gªek_ÆphØc˚¡
 0x07b1

	)

1212 
	#XK_Gªek_ïsû⁄ac˚¡
 0x07b2

	)

1213 
	#XK_Gªek_ëØc˚¡
 0x07b3

	)

1214 
	#XK_Gªek_iŸØc˚¡
 0x07b4

	)

1215 
	#XK_Gªek_iŸadõªsis
 0x07b5

	)

1216 
	#XK_Gªek_iŸØc˚¡dõªsis
 0x07b6

	)

1217 
	#XK_Gªek_omi¸⁄ac˚¡
 0x07b7

	)

1218 
	#XK_Gªek_upsû⁄ac˚¡
 0x07b8

	)

1219 
	#XK_Gªek_upsû⁄dõªsis
 0x07b9

	)

1220 
	#XK_Gªek_upsû⁄ac˚¡dõªsis
 0x07b®

	)

1221 
	#XK_Gªek_omegØc˚¡
 0x07bb

	)

1222 
	#XK_Gªek_ALPHA
 0x07c1

	)

1223 
	#XK_Gªek_BETA
 0x07c2

	)

1224 
	#XK_Gªek_GAMMA
 0x07c3

	)

1225 
	#XK_Gªek_DELTA
 0x07c4

	)

1226 
	#XK_Gªek_EPSILON
 0x07c5

	)

1227 
	#XK_Gªek_ZETA
 0x07c6

	)

1228 
	#XK_Gªek_ETA
 0x07c7

	)

1229 
	#XK_Gªek_THETA
 0x07c8

	)

1230 
	#XK_Gªek_IOTA
 0x07c9

	)

1231 
	#XK_Gªek_KAPPA
 0x07ˇ

	)

1232 
	#XK_Gªek_LAMDA
 0x07cb

	)

1233 
	#XK_Gªek_LAMBDA
 0x07cb

	)

1234 
	#XK_Gªek_MU
 0x07c¯

	)

1235 
	#XK_Gªek_NU
 0x07cd

	)

1236 
	#XK_Gªek_XI
 0x07˚

	)

1237 
	#XK_Gªek_OMICRON
 0x07c‡

	)

1238 
	#XK_Gªek_PI
 0x07d0

	)

1239 
	#XK_Gªek_RHO
 0x07d1

	)

1240 
	#XK_Gªek_SIGMA
 0x07d2

	)

1241 
	#XK_Gªek_TAU
 0x07d4

	)

1242 
	#XK_Gªek_UPSILON
 0x07d5

	)

1243 
	#XK_Gªek_PHI
 0x07d6

	)

1244 
	#XK_Gªek_CHI
 0x07d7

	)

1245 
	#XK_Gªek_PSI
 0x07d8

	)

1246 
	#XK_Gªek_OMEGA
 0x07d9

	)

1247 
	#XK_Gªek_Æpha
 0x07e1

	)

1248 
	#XK_Gªek_bëa
 0x07e2

	)

1249 
	#XK_Gªek_gamma
 0x07e3

	)

1250 
	#XK_Gªek_dñè
 0x07e4

	)

1251 
	#XK_Gªek_ïsû⁄
 0x07e5

	)

1252 
	#XK_Gªek_zëa
 0x07e6

	)

1253 
	#XK_Gªek_ëa
 0x07e7

	)

1254 
	#XK_Gªek_thëa
 0x07e8

	)

1255 
	#XK_Gªek_iŸa
 0x07e9

	)

1256 
	#XK_Gªek_k≠∑
 0x07ó

	)

1257 
	#XK_Gªek_œmda
 0x07eb

	)

1258 
	#XK_Gªek_œmbda
 0x07eb

	)

1259 
	#XK_Gªek_mu
 0x07e¯

	)

1260 
	#XK_Gªek_nu
 0x07ed

	)

1261 
	#XK_Gªek_xi
 0x07ì

	)

1262 
	#XK_Gªek_omi¸⁄
 0x07e‡

	)

1263 
	#XK_Gªek_pi
 0x07f0

	)

1264 
	#XK_Gªek_rho
 0x07f1

	)

1265 
	#XK_Gªek_sigma
 0x07f2

	)

1266 
	#XK_Gªek_föÆsmÆlsigma
 0x07f3

	)

1267 
	#XK_Gªek_èu
 0x07f4

	)

1268 
	#XK_Gªek_upsû⁄
 0x07f5

	)

1269 
	#XK_Gªek_phi
 0x07f6

	)

1270 
	#XK_Gªek_chi
 0x07f7

	)

1271 
	#XK_Gªek_psi
 0x07f8

	)

1272 
	#XK_Gªek_omega
 0x07f9

	)

1273 
	#XK_Gªek_swôch
 0xff7ê

	)

1282 #ifde‡
XK_TECHNICAL


1283 
	#XK_À·ødiˇl
 0x08a1

	)

1284 
	#XK_t›À·ødiˇl
 0x08a2

	)

1285 
	#XK_h‹izc⁄√˘‹
 0x08a3

	)

1286 
	#XK_t›öãgøl
 0x08a4

	)

1287 
	#XK_bŸöãgøl
 0x08a5

	)

1288 
	#XK_vîtc⁄√˘‹
 0x08a6

	)

1289 
	#XK_t›À·sqbøckë
 0x08a7

	)

1290 
	#XK_bŸÀ·sqbøckë
 0x08a8

	)

1291 
	#XK_t›rightsqbøckë
 0x08a9

	)

1292 
	#XK_bŸrightsqbøckë
 0x08Ø

	)

1293 
	#XK_t›À·∑ªns
 0x08ab

	)

1294 
	#XK_bŸÀ·∑ªns
 0x08a¯

	)

1295 
	#XK_t›righç¨ís
 0x08ad

	)

1296 
	#XK_bŸrighç¨ís
 0x08´

	)

1297 
	#XK_À·middÀcuæybø˚
 0x08a‡

	)

1298 
	#XK_rightmiddÀcuæybø˚
 0x08b0

	)

1299 
	#XK_t›À·summ©i⁄
 0x08b1

	)

1300 
	#XK_bŸÀ·summ©i⁄
 0x08b2

	)

1301 
	#XK_t›vîtsumm©i⁄c⁄√˘‹
 0x08b3

	)

1302 
	#XK_bŸvîtsumm©i⁄c⁄√˘‹
 0x08b4

	)

1303 
	#XK_t›rightsumm©i⁄
 0x08b5

	)

1304 
	#XK_bŸrightsumm©i⁄
 0x08b6

	)

1305 
	#XK_rightmiddÀsumm©i⁄
 0x08b7

	)

1306 
	#XK_Às°h™equÆ
 0x08b¯

	)

1307 
	#XK_nŸequÆ
 0x08bd

	)

1308 
	#XK_gª©îth™equÆ
 0x08bê

	)

1309 
	#XK_öãgøl
 0x08b‡

	)

1310 
	#XK_thîef‹e
 0x08c0

	)

1311 
	#XK_v¨üti⁄
 0x08c1

	)

1312 
	#XK_öföôy
 0x08c2

	)

1313 
	#XK_«bœ
 0x08c5

	)

1314 
	#XK_≠¥oxim©e
 0x08c8

	)

1315 
	#XK_simû¨equÆ
 0x08c9

	)

1316 
	#XK_if⁄lyif
 0x08cd

	)

1317 
	#XK_im∂õs
 0x08˚

	)

1318 
	#XK_idítiˇl
 0x08c‡

	)

1319 
	#XK_ødiˇl
 0x08d6

	)

1320 
	#XK_ö˛udedö
 0x08d®

	)

1321 
	#XK_ö˛udes
 0x08db

	)

1322 
	#XK_öãr£˘i⁄
 0x08d¯

	)

1323 
	#XK_uni⁄
 0x08dd

	)

1324 
	#XK_logiˇœnd
 0x08dê

	)

1325 
	#XK_logiˇl‹
 0x08d‡

	)

1326 
	#XK_∑πüldîiv©ive
 0x08e‡

	)

1327 
	#XK_fun˘i⁄
 0x08f6

	)

1328 
	#XK_À·¨row
 0x08fb

	)

1329 
	#XK_u∑ºow
 0x08f¯

	)

1330 
	#XK_righèºow
 0x08fd

	)

1331 
	#XK_dow«ºow
 0x08„

	)

1340 #ifde‡
XK_SPECIAL


1341 
	#XK_bœnk
 0x09df

	)

1342 
	#XK_sﬁiddüm⁄d
 0x09e0

	)

1343 
	#XK_checkîbﬂrd
 0x09e1

	)

1344 
	#XK_ht
 0x09e2

	)

1345 
	#XK_ff
 0x09e3

	)

1346 
	#XK_¸
 0x09e4

	)

1347 
	#XK_lf
 0x09e5

	)

1348 
	#XK_∆
 0x09e8

	)

1349 
	#XK_vt
 0x09e9

	)

1350 
	#XK_lowrightc‹√r
 0x09ó

	)

1351 
	#XK_u¥ightc‹√r
 0x09eb

	)

1352 
	#XK_u∂e·c‹√r
 0x09e¯

	)

1353 
	#XK_lowÀ·c‹√r
 0x09ed

	)

1354 
	#XK_¸ossöglöes
 0x09ì

	)

1355 
	#XK_h‹izlöesˇn1
 0x09e‡

	)

1356 
	#XK_h‹izlöesˇn3
 0x09f0

	)

1357 
	#XK_h‹izlöesˇn5
 0x09f1

	)

1358 
	#XK_h‹izlöesˇn7
 0x09f2

	)

1359 
	#XK_h‹izlöesˇn9
 0x09f3

	)

1360 
	#XK_À·t
 0x09f4

	)

1361 
	#XK_righâ
 0x09f5

	)

1362 
	#XK_bŸt
 0x09f6

	)

1363 
	#XK_t›t
 0x09f7

	)

1364 
	#XK_vîtb¨
 0x09f8

	)

1374 #ifde‡
XK_PUBLISHING


1375 
	#XK_em•a˚
 0x0Ø1

	)

1376 
	#XK_í•a˚
 0x0Ø2

	)

1377 
	#XK_em3•a˚
 0x0Ø3

	)

1378 
	#XK_em4•a˚
 0x0Ø4

	)

1379 
	#XK_digô•a˚
 0x0Ø5

	)

1380 
	#XK_pun˘•a˚
 0x0Ø6

	)

1381 
	#XK_thö•a˚
 0x0Ø7

	)

1382 
	#XK_haú•a˚
 0x0Ø8

	)

1383 
	#XK_emdash
 0x0Ø9

	)

1384 
	#XK_ídash
 0x0Ø®

	)

1385 
	#XK_signifbœnk
 0x0Ø¯

	)

1386 
	#XK_ñlùsis
 0x0Øê

	)

1387 
	#XK_doubba£löedŸ
 0x0Ø‡

	)

1388 
	#XK_⁄ëhúd
 0x0ab0

	)

1389 
	#XK_twŸhúds
 0x0ab1

	)

1390 
	#XK_⁄efi·h
 0x0ab2

	)

1391 
	#XK_twofi·hs
 0x0ab3

	)

1392 
	#XK_thªefi·hs
 0x0ab4

	)

1393 
	#XK_fourfi·hs
 0x0ab5

	)

1394 
	#XK_⁄esixth
 0x0ab6

	)

1395 
	#XK_fivesixths
 0x0ab7

	)

1396 
	#XK_ˇªof
 0x0ab8

	)

1397 
	#XK_figdash
 0x0abb

	)

1398 
	#XK_À·™gÀbøckë
 0x0ab¯

	)

1399 
	#XK_decimÆpoöt
 0x0abd

	)

1400 
	#XK_righèngÀbøckë
 0x0abê

	)

1401 
	#XK_m¨kî
 0x0abf

	)

1402 
	#XK_⁄ìighth
 0x0ac3

	)

1403 
	#XK_thªìighths
 0x0ac4

	)

1404 
	#XK_fivìighths
 0x0ac5

	)

1405 
	#XK_£víeighths
 0x0ac6

	)

1406 
	#XK_åadem¨k
 0x0ac9

	)

1407 
	#XK_sig«tuªm¨k
 0x0aˇ

	)

1408 
	#XK_åadem¨köcú˛e
 0x0acb

	)

1409 
	#XK_À·›íåüngÀ
 0x0ac¯

	)

1410 
	#XK_right›íåüngÀ
 0x0acd

	)

1411 
	#XK_em›ícú˛e
 0x0a˚

	)

1412 
	#XK_em›íª˘™gÀ
 0x0ac‡

	)

1413 
	#XK_À·sögÀquŸem¨k
 0x0ad0

	)

1414 
	#XK_rightsögÀquŸem¨k
 0x0ad1

	)

1415 
	#XK_À·doubÀquŸem¨k
 0x0ad2

	)

1416 
	#XK_rightdoubÀquŸem¨k
 0x0ad3

	)

1417 
	#XK_¥es¸ùti⁄
 0x0ad4

	)

1418 
	#XK_möuãs
 0x0ad6

	)

1419 
	#XK_£c⁄ds
 0x0ad7

	)

1420 
	#XK_œtö¸oss
 0x0ad9

	)

1421 
	#XK_hexagøm
 0x0ada

	)

1422 
	#XK_fûÀdª˘buŒë
 0x0adb

	)

1423 
	#XK_fûÀdÀ·åibuŒë
 0x0ad¯

	)

1424 
	#XK_fûÀdrighâribuŒë
 0x0add

	)

1425 
	#XK_emfûÀdcú˛e
 0x0adê

	)

1426 
	#XK_emfûÀdª˘
 0x0ad‡

	)

1427 
	#XK_í›ícúcbuŒë
 0x0´0

	)

1428 
	#XK_í›ísqu¨ebuŒë
 0x0´1

	)

1429 
	#XK_›íª˘buŒë
 0x0´2

	)

1430 
	#XK_›íåibuŒëup
 0x0´3

	)

1431 
	#XK_›íåibuŒëdown
 0x0´4

	)

1432 
	#XK_›í°¨
 0x0´5

	)

1433 
	#XK_ífûÀdcúcbuŒë
 0x0´6

	)

1434 
	#XK_ífûÀdsqbuŒë
 0x0´7

	)

1435 
	#XK_fûÀdåibuŒëup
 0x0´8

	)

1436 
	#XK_fûÀdåibuŒëdown
 0x0´9

	)

1437 
	#XK_À·poöãr
 0x0´®

	)

1438 
	#XK_righçoöãr
 0x0´b

	)

1439 
	#XK_˛ub
 0x0´¯

	)

1440 
	#XK_düm⁄d
 0x0´d

	)

1441 
	#XK_hóπ
 0x0´ê

	)

1442 
	#XK_mÆã£¸oss
 0x0af0

	)

1443 
	#XK_daggî
 0x0af1

	)

1444 
	#XK_doubÀdaggî
 0x0af2

	)

1445 
	#XK_checkm¨k
 0x0af3

	)

1446 
	#XK_bÆlŸ¸oss
 0x0af4

	)

1447 
	#XK_musiˇlsh¨p
 0x0af5

	)

1448 
	#XK_musiˇlÊ©
 0x0af6

	)

1449 
	#XK_mÆesymbﬁ
 0x0af7

	)

1450 
	#XK_„mÆesymbﬁ
 0x0af8

	)

1451 
	#XK_ãÀph⁄e
 0x0af9

	)

1452 
	#XK_ãÀph⁄îec‹dî
 0x0aÁ

	)

1453 
	#XK_ph⁄ogøphc›yright
 0x0afb

	)

1454 
	#XK_ˇªt
 0x0af¯

	)

1455 
	#XK_sögÀlowquŸem¨k
 0x0afd

	)

1456 
	#XK_doubÀlowquŸem¨k
 0x0a„

	)

1457 
	#XK_curs‹
 0x0aff

	)

1465 #ifde‡
XK_APL


1466 
	#XK_À·ˇªt
 0x0ba3

	)

1467 
	#XK_rightˇªt
 0x0ba6

	)

1468 
	#XK_downˇªt
 0x0ba8

	)

1469 
	#XK_upˇªt
 0x0ba9

	)

1470 
	#XK_ovîb¨
 0x0bc0

	)

1471 
	#XK_dow¡ack
 0x0bc2

	)

1472 
	#XK_upsh€
 0x0bc3

	)

1473 
	#XK_down°ûe
 0x0bc4

	)

1474 
	#XK_undîb¨
 0x0bc6

	)

1475 
	#XK_jŸ
 0x0bˇ

	)

1476 
	#XK_quad
 0x0bc¯

	)

1477 
	#XK_u±ack
 0x0b˚

	)

1478 
	#XK_cú˛e
 0x0bc‡

	)

1479 
	#XK_up°ûe
 0x0bd3

	)

1480 
	#XK_downsh€
 0x0bd6

	)

1481 
	#XK_rightsh€
 0x0bd8

	)

1482 
	#XK_À·sh€
 0x0bd®

	)

1483 
	#XK_À·èck
 0x0bd¯

	)

1484 
	#XK_righâack
 0x0bf¯

	)

1492 #ifde‡
XK_HEBREW


1493 
	#XK_hebªw_doubÀlowlöe
 0x0cd‡

	)

1494 
	#XK_hebªw_Æïh
 0x0˚0

	)

1495 
	#XK_hebªw_bë
 0x0˚1

	)

1496 
	#XK_hebªw_bëh
 0x0˚1

	)

1497 
	#XK_hebªw_gimñ
 0x0˚2

	)

1498 
	#XK_hebªw_gimmñ
 0x0˚2

	)

1499 
	#XK_hebªw_dÆë
 0x0˚3

	)

1500 
	#XK_hebªw_dÆëh
 0x0˚3

	)

1501 
	#XK_hebªw_he
 0x0˚4

	)

1502 
	#XK_hebªw_waw
 0x0˚5

	)

1503 
	#XK_hebªw_zaö
 0x0˚6

	)

1504 
	#XK_hebªw_zayö
 0x0˚6

	)

1505 
	#XK_hebªw_chë
 0x0˚7

	)

1506 
	#XK_hebªw_hë
 0x0˚7

	)

1507 
	#XK_hebªw_ãt
 0x0˚8

	)

1508 
	#XK_hebªw_ãth
 0x0˚8

	)

1509 
	#XK_hebªw_yod
 0x0˚9

	)

1510 
	#XK_hebªw_föÆk≠h
 0x0˚®

	)

1511 
	#XK_hebªw_k≠h
 0x0˚b

	)

1512 
	#XK_hebªw_œmed
 0x0˚¯

	)

1513 
	#XK_hebªw_föÆmem
 0x0˚d

	)

1514 
	#XK_hebªw_mem
 0x0˚ê

	)

1515 
	#XK_hebªw_föÆnun
 0x0˚‡

	)

1516 
	#XK_hebªw_nun
 0x0cf0

	)

1517 
	#XK_hebªw_ßmech
 0x0cf1

	)

1518 
	#XK_hebªw_ßmekh
 0x0cf1

	)

1519 
	#XK_hebªw_ayö
 0x0cf2

	)

1520 
	#XK_hebªw_föÆ≥
 0x0cf3

	)

1521 
	#XK_hebªw_≥
 0x0cf4

	)

1522 
	#XK_hebªw_föÆzade
 0x0cf5

	)

1523 
	#XK_hebªw_föÆzadi
 0x0cf5

	)

1524 
	#XK_hebªw_zade
 0x0cf6

	)

1525 
	#XK_hebªw_zadi
 0x0cf6

	)

1526 
	#XK_hebªw_q›h
 0x0cf7

	)

1527 
	#XK_hebªw_kuf
 0x0cf7

	)

1528 
	#XK_hebªw_ªsh
 0x0cf8

	)

1529 
	#XK_hebªw_shö
 0x0cf9

	)

1530 
	#XK_hebªw_èw
 0x0cÁ

	)

1531 
	#XK_hebªw_èf
 0x0cÁ

	)

1532 
	#XK_Hebªw_swôch
 0xff7ê

	)

1540 #ifde‡
XK_THAI


1541 
	#XK_Thai_kokai
 0x0da1

	)

1542 
	#XK_Thai_khokhai
 0x0da2

	)

1543 
	#XK_Thai_khokhu©
 0x0da3

	)

1544 
	#XK_Thai_khokhwai
 0x0da4

	)

1545 
	#XK_Thai_khokh⁄
 0x0da5

	)

1546 
	#XK_Thai_kh‹akh™g
 0x0da6

	)

1547 
	#XK_Thai_ng⁄gu
 0x0da7

	)

1548 
	#XK_Thai_choch™
 0x0da8

	)

1549 
	#XK_Thai_chochög
 0x0da9

	)

1550 
	#XK_Thai_choch™g
 0x0dØ

	)

1551 
	#XK_Thai_soso
 0x0dab

	)

1552 
	#XK_Thai_choch€
 0x0da¯

	)

1553 
	#XK_Thai_yoyög
 0x0dad

	)

1554 
	#XK_Thai_dochada
 0x0d´

	)

1555 
	#XK_Thai_t›©ak
 0x0da‡

	)

1556 
	#XK_Thai_thŸh™
 0x0db0

	)

1557 
	#XK_Thai_th⁄™gm⁄tho
 0x0db1

	)

1558 
	#XK_Thai_th›huthao
 0x0db2

	)

1559 
	#XK_Thai_n⁄í
 0x0db3

	)

1560 
	#XK_Thai_dodek
 0x0db4

	)

1561 
	#XK_Thai_tŸao
 0x0db5

	)

1562 
	#XK_Thai_thŸhung
 0x0db6

	)

1563 
	#XK_Thai_thŸhah™
 0x0db7

	)

1564 
	#XK_Thai_thŸh⁄g
 0x0db8

	)

1565 
	#XK_Thai_n⁄u
 0x0db9

	)

1566 
	#XK_Thai_bobaimai
 0x0db®

	)

1567 
	#XK_Thai_p›œ
 0x0dbb

	)

1568 
	#XK_Thai_ph›hung
 0x0db¯

	)

1569 
	#XK_Thai_foÁ
 0x0dbd

	)

1570 
	#XK_Thai_ph›h™
 0x0dbê

	)

1571 
	#XK_Thai_foÁn
 0x0db‡

	)

1572 
	#XK_Thai_phoßmphao
 0x0dc0

	)

1573 
	#XK_Thai_moma
 0x0dc1

	)

1574 
	#XK_Thai_yoyak
 0x0dc2

	)

1575 
	#XK_Thai_r‹ua
 0x0dc3

	)

1576 
	#XK_Thai_ru
 0x0dc4

	)

1577 
	#XK_Thai_lﬁög
 0x0dc5

	)

1578 
	#XK_Thai_lu
 0x0dc6

	)

1579 
	#XK_Thai_wow´n
 0x0dc7

	)

1580 
	#XK_Thai_soßœ
 0x0dc8

	)

1581 
	#XK_Thai_s‹usi
 0x0dc9

	)

1582 
	#XK_Thai_sosua
 0x0dˇ

	)

1583 
	#XK_Thai_hohù
 0x0dcb

	)

1584 
	#XK_Thai_lochuœ
 0x0dc¯

	)

1585 
	#XK_Thai_ﬂng
 0x0dcd

	)

1586 
	#XK_Thai_h⁄okhuk
 0x0d˚

	)

1587 
	#XK_Thai_∑iy™noi
 0x0dc‡

	)

1588 
	#XK_Thai_ßøa
 0x0dd0

	)

1589 
	#XK_Thai_maih™ak©
 0x0dd1

	)

1590 
	#XK_Thai_ßøØ
 0x0dd2

	)

1591 
	#XK_Thai_ßøam
 0x0dd3

	)

1592 
	#XK_Thai_ßøi
 0x0dd4

	)

1593 
	#XK_Thai_ßøii
 0x0dd5

	)

1594 
	#XK_Thai_ßøue
 0x0dd6

	)

1595 
	#XK_Thai_ßøuì
 0x0dd7

	)

1596 
	#XK_Thai_ßøu
 0x0dd8

	)

1597 
	#XK_Thai_ßøuu
 0x0dd9

	)

1598 
	#XK_Thai_phöthu
 0x0dd®

	)

1599 
	#XK_Thai_maih™ak©_maôho
 0x0dde

	)

1600 
	#XK_Thai_baht
 0x0dd‡

	)

1601 
	#XK_Thai_ßøe
 0x0de0

	)

1602 
	#XK_Thai_ßø´
 0x0de1

	)

1603 
	#XK_Thai_ßøo
 0x0de2

	)

1604 
	#XK_Thai_ßøaimaimu™
 0x0de3

	)

1605 
	#XK_Thai_ßøaimaimÆai
 0x0de4

	)

1606 
	#XK_Thai_œkkh™gyao
 0x0de5

	)

1607 
	#XK_Thai_maiyamok
 0x0de6

	)

1608 
	#XK_Thai_maôaikhu
 0x0de7

	)

1609 
	#XK_Thai_maõk
 0x0de8

	)

1610 
	#XK_Thai_maôho
 0x0de9

	)

1611 
	#XK_Thai_maôri
 0x0dó

	)

1612 
	#XK_Thai_maich©èwa
 0x0deb

	)

1613 
	#XK_Thai_th™thakh©
 0x0de¯

	)

1614 
	#XK_Thai_nikhahô
 0x0ded

	)

1615 
	#XK_Thai_Àksun
 0x0df0

	)

1616 
	#XK_Thai_Àknung
 0x0df1

	)

1617 
	#XK_Thai_Àks⁄g
 0x0df2

	)

1618 
	#XK_Thai_Àkßm
 0x0df3

	)

1619 
	#XK_Thai_Àksi
 0x0df4

	)

1620 
	#XK_Thai_Àkha
 0x0df5

	)

1621 
	#XK_Thai_Àkhok
 0x0df6

	)

1622 
	#XK_Thai_Àkchë
 0x0df7

	)

1623 
	#XK_Thai_Àk∑ë
 0x0df8

	)

1624 
	#XK_Thai_Àkkao
 0x0df9

	)

1632 #ifde‡
XK_KOREAN


1634 
	#XK_H™gul
 0xff31

	)

1635 
	#XK_H™gul_Sèπ
 0xff32

	)

1636 
	#XK_H™gul_End
 0xff33

	)

1637 
	#XK_H™gul_H™ja
 0xff34

	)

1638 
	#XK_H™gul_Jamo
 0xff35

	)

1639 
	#XK_H™gul_Romaja
 0xff36

	)

1640 
	#XK_H™gul_Codeöput
 0xff37

	)

1641 
	#XK_H™gul_Je⁄ja
 0xff38

	)

1642 
	#XK_H™gul_B™ja
 0xff39

	)

1643 
	#XK_H™gul_PªH™ja
 0xff3®

	)

1644 
	#XK_H™gul_Po°H™ja
 0xff3b

	)

1645 
	#XK_H™gul_SögÀC™did©e
 0xff3¯

	)

1646 
	#XK_H™gul_Mu…ùÀC™did©e
 0xff3d

	)

1647 
	#XK_H™gul_PªviousC™did©e
 0xff3ê

	)

1648 
	#XK_H™gul_S≥cül
 0xff3‡

	)

1649 
	#XK_H™gul_swôch
 0xff7ê

	)

1652 
	#XK_H™gul_Kiyeog
 0x0ó1

	)

1653 
	#XK_H™gul_SßngKiyeog
 0x0ó2

	)

1654 
	#XK_H™gul_KiyeogSios
 0x0ó3

	)

1655 
	#XK_H™gul_Nõun
 0x0ó4

	)

1656 
	#XK_H™gul_NõunJõuj
 0x0ó5

	)

1657 
	#XK_H™gul_NõunHõuh
 0x0ó6

	)

1658 
	#XK_H™gul_Dikeud
 0x0ó7

	)

1659 
	#XK_H™gul_SßngDikeud
 0x0ó8

	)

1660 
	#XK_H™gul_Rõul
 0x0ó9

	)

1661 
	#XK_H™gul_RõulKiyeog
 0x0óa

	)

1662 
	#XK_H™gul_RõulMõum
 0x0ób

	)

1663 
	#XK_H™gul_RõulPõub
 0x0óc

	)

1664 
	#XK_H™gul_RõulSios
 0x0ód

	)

1665 
	#XK_H™gul_RõulTõut
 0x0óe

	)

1666 
	#XK_H™gul_RõulPhõuf
 0x0óf

	)

1667 
	#XK_H™gul_RõulHõuh
 0x0eb0

	)

1668 
	#XK_H™gul_Mõum
 0x0eb1

	)

1669 
	#XK_H™gul_Põub
 0x0eb2

	)

1670 
	#XK_H™gul_SßngPõub
 0x0eb3

	)

1671 
	#XK_H™gul_PõubSios
 0x0eb4

	)

1672 
	#XK_H™gul_Sios
 0x0eb5

	)

1673 
	#XK_H™gul_SßngSios
 0x0eb6

	)

1674 
	#XK_H™gul_Ieung
 0x0eb7

	)

1675 
	#XK_H™gul_Jõuj
 0x0eb8

	)

1676 
	#XK_H™gul_SßngJõuj
 0x0eb9

	)

1677 
	#XK_H™gul_Cõuc
 0x0eba

	)

1678 
	#XK_H™gul_Khõuq
 0x0ebb

	)

1679 
	#XK_H™gul_Tõut
 0x0ebc

	)

1680 
	#XK_H™gul_Phõuf
 0x0ebd

	)

1681 
	#XK_H™gul_Hõuh
 0x0ebe

	)

1684 
	#XK_H™gul_A
 0x0ebf

	)

1685 
	#XK_H™gul_AE
 0x0ec0

	)

1686 
	#XK_H™gul_YA
 0x0ec1

	)

1687 
	#XK_H™gul_YAE
 0x0ec2

	)

1688 
	#XK_H™gul_EO
 0x0ec3

	)

1689 
	#XK_H™gul_E
 0x0ec4

	)

1690 
	#XK_H™gul_YEO
 0x0ec5

	)

1691 
	#XK_H™gul_YE
 0x0ec6

	)

1692 
	#XK_H™gul_O
 0x0ec7

	)

1693 
	#XK_H™gul_WA
 0x0ec8

	)

1694 
	#XK_H™gul_WAE
 0x0ec9

	)

1695 
	#XK_H™gul_OE
 0x0eˇ

	)

1696 
	#XK_H™gul_YO
 0x0ecb

	)

1697 
	#XK_H™gul_U
 0x0ecc

	)

1698 
	#XK_H™gul_WEO
 0x0ecd

	)

1699 
	#XK_H™gul_WE
 0x0e˚

	)

1700 
	#XK_H™gul_WI
 0x0ecf

	)

1701 
	#XK_H™gul_YU
 0x0ed0

	)

1702 
	#XK_H™gul_EU
 0x0ed1

	)

1703 
	#XK_H™gul_YI
 0x0ed2

	)

1704 
	#XK_H™gul_I
 0x0ed3

	)

1707 
	#XK_H™gul_J_Kiyeog
 0x0ed4

	)

1708 
	#XK_H™gul_J_SßngKiyeog
 0x0ed5

	)

1709 
	#XK_H™gul_J_KiyeogSios
 0x0ed6

	)

1710 
	#XK_H™gul_J_Nõun
 0x0ed7

	)

1711 
	#XK_H™gul_J_NõunJõuj
 0x0ed8

	)

1712 
	#XK_H™gul_J_NõunHõuh
 0x0ed9

	)

1713 
	#XK_H™gul_J_Dikeud
 0x0eda

	)

1714 
	#XK_H™gul_J_Rõul
 0x0edb

	)

1715 
	#XK_H™gul_J_RõulKiyeog
 0x0edc

	)

1716 
	#XK_H™gul_J_RõulMõum
 0x0edd

	)

1717 
	#XK_H™gul_J_RõulPõub
 0x0ede

	)

1718 
	#XK_H™gul_J_RõulSios
 0x0edf

	)

1719 
	#XK_H™gul_J_RõulTõut
 0x0ì0

	)

1720 
	#XK_H™gul_J_RõulPhõuf
 0x0ì1

	)

1721 
	#XK_H™gul_J_RõulHõuh
 0x0ì2

	)

1722 
	#XK_H™gul_J_Mõum
 0x0ì3

	)

1723 
	#XK_H™gul_J_Põub
 0x0ì4

	)

1724 
	#XK_H™gul_J_PõubSios
 0x0ì5

	)

1725 
	#XK_H™gul_J_Sios
 0x0ì6

	)

1726 
	#XK_H™gul_J_SßngSios
 0x0ì7

	)

1727 
	#XK_H™gul_J_Ieung
 0x0ì8

	)

1728 
	#XK_H™gul_J_Jõuj
 0x0ì9

	)

1729 
	#XK_H™gul_J_Cõuc
 0x0ìa

	)

1730 
	#XK_H™gul_J_Khõuq
 0x0ìb

	)

1731 
	#XK_H™gul_J_Tõut
 0x0ìc

	)

1732 
	#XK_H™gul_J_Phõuf
 0x0ìd

	)

1733 
	#XK_H™gul_J_Hõuh
 0x0ìe

	)

1736 
	#XK_H™gul_RõulYe‹öHõuh
 0x0ìf

	)

1737 
	#XK_H™gul_Sunkye⁄geumMõum
 0x0ef0

	)

1738 
	#XK_H™gul_Sunkye⁄geumPõub
 0x0ef1

	)

1739 
	#XK_H™gul_P™Sios
 0x0ef2

	)

1740 
	#XK_H™gul_KkogjiDÆröIeung
 0x0ef3

	)

1741 
	#XK_H™gul_Sunkye⁄geumPhõuf
 0x0ef4

	)

1742 
	#XK_H™gul_Ye‹öHõuh
 0x0ef5

	)

1745 
	#XK_H™gul_AøeA
 0x0ef6

	)

1746 
	#XK_H™gul_AøeAE
 0x0ef7

	)

1749 
	#XK_H™gul_J_P™Sios
 0x0ef8

	)

1750 
	#XK_H™gul_J_KkogjiDÆröIeung
 0x0ef9

	)

1751 
	#XK_H™gul_J_Ye‹öHõuh
 0x0eÁ

	)

1754 
	#XK_K‹ón_W⁄
 0x0ef‡

	)

1762 #ifde‡
XK_ARMENIAN


1763 
	#XK_Armíün_lig©uª_ew
 0x1000587

	)

1764 
	#XK_Armíün_fuŒ_°›
 0x1000589

	)

1765 
	#XK_Armíün_vîjakë
 0x1000589

	)

1766 
	#XK_Armíün_£∑øti⁄_m¨k
 0x100055d

	)

1767 
	#XK_Armíün_but
 0x100055d

	)

1768 
	#XK_Armíün_hyphí
 0x100058®

	)

1769 
	#XK_Armíün_yíèm«
 0x100058®

	)

1770 
	#XK_Armíün_ex˛am
 0x100055¯

	)

1771 
	#XK_Armíün_am™ak
 0x100055¯

	)

1772 
	#XK_Armíün_ac˚¡
 0x100055b

	)

1773 
	#XK_Armíün_shesht
 0x100055b

	)

1774 
	#XK_Armíün_que°i⁄
 0x100055ê

	)

1775 
	#XK_Armíün_∑ruyk
 0x100055ê

	)

1776 
	#XK_Armíün_AYB
 0x1000531

	)

1777 
	#XK_Armíün_ayb
 0x1000561

	)

1778 
	#XK_Armíün_BEN
 0x1000532

	)

1779 
	#XK_Armíün_bí
 0x1000562

	)

1780 
	#XK_Armíün_GIM
 0x1000533

	)

1781 
	#XK_Armíün_gim
 0x1000563

	)

1782 
	#XK_Armíün_DA
 0x1000534

	)

1783 
	#XK_Armíün_da
 0x1000564

	)

1784 
	#XK_Armíün_YECH
 0x1000535

	)

1785 
	#XK_Armíün_yech
 0x1000565

	)

1786 
	#XK_Armíün_ZA
 0x1000536

	)

1787 
	#XK_Armíün_za
 0x1000566

	)

1788 
	#XK_Armíün_E
 0x1000537

	)

1789 
	#XK_Armíün_e
 0x1000567

	)

1790 
	#XK_Armíün_AT
 0x1000538

	)

1791 
	#XK_Armíün_©
 0x1000568

	)

1792 
	#XK_Armíün_TO
 0x1000539

	)

1793 
	#XK_Armíün_to
 0x1000569

	)

1794 
	#XK_Armíün_ZHE
 0x100053®

	)

1795 
	#XK_Armíün_zhe
 0x100056®

	)

1796 
	#XK_Armíün_INI
 0x100053b

	)

1797 
	#XK_Armíün_öi
 0x100056b

	)

1798 
	#XK_Armíün_LYUN
 0x100053¯

	)

1799 
	#XK_Armíün_lyun
 0x100056¯

	)

1800 
	#XK_Armíün_KHE
 0x100053d

	)

1801 
	#XK_Armíün_khe
 0x100056d

	)

1802 
	#XK_Armíün_TSA
 0x100053ê

	)

1803 
	#XK_Armíün_tß
 0x100056ê

	)

1804 
	#XK_Armíün_KEN
 0x100053‡

	)

1805 
	#XK_Armíün_kí
 0x100056‡

	)

1806 
	#XK_Armíün_HO
 0x1000540

	)

1807 
	#XK_Armíün_ho
 0x1000570

	)

1808 
	#XK_Armíün_DZA
 0x1000541

	)

1809 
	#XK_Armíün_dza
 0x1000571

	)

1810 
	#XK_Armíün_GHAT
 0x1000542

	)

1811 
	#XK_Armíün_gh©
 0x1000572

	)

1812 
	#XK_Armíün_TCHE
 0x1000543

	)

1813 
	#XK_Armíün_tche
 0x1000573

	)

1814 
	#XK_Armíün_MEN
 0x1000544

	)

1815 
	#XK_Armíün_mí
 0x1000574

	)

1816 
	#XK_Armíün_HI
 0x1000545

	)

1817 
	#XK_Armíün_hi
 0x1000575

	)

1818 
	#XK_Armíün_NU
 0x1000546

	)

1819 
	#XK_Armíün_nu
 0x1000576

	)

1820 
	#XK_Armíün_SHA
 0x1000547

	)

1821 
	#XK_Armíün_sha
 0x1000577

	)

1822 
	#XK_Armíün_VO
 0x1000548

	)

1823 
	#XK_Armíün_vo
 0x1000578

	)

1824 
	#XK_Armíün_CHA
 0x1000549

	)

1825 
	#XK_Armíün_cha
 0x1000579

	)

1826 
	#XK_Armíün_PE
 0x100054®

	)

1827 
	#XK_Armíün_≥
 0x100057®

	)

1828 
	#XK_Armíün_JE
 0x100054b

	)

1829 
	#XK_Armíün_je
 0x100057b

	)

1830 
	#XK_Armíün_RA
 0x100054¯

	)

1831 
	#XK_Armíün_ø
 0x100057¯

	)

1832 
	#XK_Armíün_SE
 0x100054d

	)

1833 
	#XK_Armíün_£
 0x100057d

	)

1834 
	#XK_Armíün_VEV
 0x100054ê

	)

1835 
	#XK_Armíün_vev
 0x100057ê

	)

1836 
	#XK_Armíün_TYUN
 0x100054‡

	)

1837 
	#XK_Armíün_tyun
 0x100057‡

	)

1838 
	#XK_Armíün_RE
 0x1000550

	)

1839 
	#XK_Armíün_ª
 0x1000580

	)

1840 
	#XK_Armíün_TSO
 0x1000551

	)

1841 
	#XK_Armíün_tso
 0x1000581

	)

1842 
	#XK_Armíün_VYUN
 0x1000552

	)

1843 
	#XK_Armíün_vyun
 0x1000582

	)

1844 
	#XK_Armíün_PYUR
 0x1000553

	)

1845 
	#XK_Armíün_pyur
 0x1000583

	)

1846 
	#XK_Armíün_KE
 0x1000554

	)

1847 
	#XK_Armíün_ke
 0x1000584

	)

1848 
	#XK_Armíün_O
 0x1000555

	)

1849 
	#XK_Armíün_o
 0x1000585

	)

1850 
	#XK_Armíün_FE
 0x1000556

	)

1851 
	#XK_Armíün_„
 0x1000586

	)

1852 
	#XK_Armíün_≠o°r›he
 0x100055®

	)

1859 #ifde‡
XK_GEORGIAN


1860 
	#XK_Ge‹gün_™
 0x10010d0

	)

1861 
	#XK_Ge‹gün_b™
 0x10010d1

	)

1862 
	#XK_Ge‹gün_g™
 0x10010d2

	)

1863 
	#XK_Ge‹gün_d⁄
 0x10010d3

	)

1864 
	#XK_Ge‹gün_í
 0x10010d4

	)

1865 
	#XK_Ge‹gün_vö
 0x10010d5

	)

1866 
	#XK_Ge‹gün_zí
 0x10010d6

	)

1867 
	#XK_Ge‹gün_èn
 0x10010d7

	)

1868 
	#XK_Ge‹gün_ö
 0x10010d8

	)

1869 
	#XK_Ge‹gün_k™
 0x10010d9

	)

1870 
	#XK_Ge‹gün_œs
 0x10010d®

	)

1871 
	#XK_Ge‹gün_m™
 0x10010db

	)

1872 
	#XK_Ge‹gün_«r
 0x10010d¯

	)

1873 
	#XK_Ge‹gün_⁄
 0x10010dd

	)

1874 
	#XK_Ge‹gün_∑r
 0x10010dê

	)

1875 
	#XK_Ge‹gün_zh¨
 0x10010d‡

	)

1876 
	#XK_Ge‹gün_øe
 0x10010e0

	)

1877 
	#XK_Ge‹gün_ßn
 0x10010e1

	)

1878 
	#XK_Ge‹gün_èr
 0x10010e2

	)

1879 
	#XK_Ge‹gün_un
 0x10010e3

	)

1880 
	#XK_Ge‹gün_ph¨
 0x10010e4

	)

1881 
	#XK_Ge‹gün_kh¨
 0x10010e5

	)

1882 
	#XK_Ge‹gün_gh™
 0x10010e6

	)

1883 
	#XK_Ge‹gün_q¨
 0x10010e7

	)

1884 
	#XK_Ge‹gün_shö
 0x10010e8

	)

1885 
	#XK_Ge‹gün_chö
 0x10010e9

	)

1886 
	#XK_Ge‹gün_ˇn
 0x10010ó

	)

1887 
	#XK_Ge‹gün_jû
 0x10010eb

	)

1888 
	#XK_Ge‹gün_cû
 0x10010e¯

	)

1889 
	#XK_Ge‹gün_ch¨
 0x10010ed

	)

1890 
	#XK_Ge‹gün_x™
 0x10010ì

	)

1891 
	#XK_Ge‹gün_jh™
 0x10010e‡

	)

1892 
	#XK_Ge‹gün_h´
 0x10010f0

	)

1893 
	#XK_Ge‹gün_he
 0x10010f1

	)

1894 
	#XK_Ge‹gün_hõ
 0x10010f2

	)

1895 
	#XK_Ge‹gün_we
 0x10010f3

	)

1896 
	#XK_Ge‹gün_h¨
 0x10010f4

	)

1897 
	#XK_Ge‹gün_h€
 0x10010f5

	)

1898 
	#XK_Ge‹gün_fi
 0x10010f6

	)

1905 #ifde‡
XK_CAUCASUS


1907 
	#XK_XabovedŸ
 0x1001e8®

	)

1908 
	#XK_Ibªve
 0x100012¯

	)

1909 
	#XK_Z°roke
 0x10001b5

	)

1910 
	#XK_Gˇr⁄
 0x10001e6

	)

1911 
	#XK_Oˇr⁄
 0x10001d1

	)

1912 
	#XK_Ob¨ªd
 0x100019‡

	)

1913 
	#XK_xabovedŸ
 0x1001e8b

	)

1914 
	#XK_ibªve
 0x100012d

	)

1915 
	#XK_z°roke
 0x10001b6

	)

1916 
	#XK_gˇr⁄
 0x10001e7

	)

1917 
	#XK_oˇr⁄
 0x10001d2

	)

1918 
	#XK_ob¨ªd
 0x1000275

	)

1919 
	#XK_SCHWA
 0x100018‡

	)

1920 
	#XK_schwa
 0x1000259

	)

1923 
	#XK_LbñowdŸ
 0x1001e36

	)

1924 
	#XK_lbñowdŸ
 0x1001e37

	)

1931 #ifde‡
XK_VIETNAMESE


1932 
	#XK_AbñowdŸ
 0x1001ó0

	)

1933 
	#XK_abñowdŸ
 0x1001ó1

	)

1934 
	#XK_Ahook
 0x1001ó2

	)

1935 
	#XK_ahook
 0x1001ó3

	)

1936 
	#XK_AcúcumÊexacuã
 0x1001ó4

	)

1937 
	#XK_acúcumÊexacuã
 0x1001ó5

	)

1938 
	#XK_AcúcumÊexgøve
 0x1001ó6

	)

1939 
	#XK_acúcumÊexgøve
 0x1001ó7

	)

1940 
	#XK_AcúcumÊexhook
 0x1001ó8

	)

1941 
	#XK_acúcumÊexhook
 0x1001ó9

	)

1942 
	#XK_AcúcumÊextûde
 0x1001ó®

	)

1943 
	#XK_acúcumÊextûde
 0x1001ób

	)

1944 
	#XK_AcúcumÊexbñowdŸ
 0x1001ó¯

	)

1945 
	#XK_acúcumÊexbñowdŸ
 0x1001ód

	)

1946 
	#XK_Abªvócuã
 0x1001óê

	)

1947 
	#XK_abªvócuã
 0x1001ó‡

	)

1948 
	#XK_Abªvegøve
 0x1001eb0

	)

1949 
	#XK_abªvegøve
 0x1001eb1

	)

1950 
	#XK_Abªvehook
 0x1001eb2

	)

1951 
	#XK_abªvehook
 0x1001eb3

	)

1952 
	#XK_Abªvëûde
 0x1001eb4

	)

1953 
	#XK_abªvëûde
 0x1001eb5

	)

1954 
	#XK_AbªvebñowdŸ
 0x1001eb6

	)

1955 
	#XK_abªvebñowdŸ
 0x1001eb7

	)

1956 
	#XK_EbñowdŸ
 0x1001eb8

	)

1957 
	#XK_ebñowdŸ
 0x1001eb9

	)

1958 
	#XK_Ehook
 0x1001eb®

	)

1959 
	#XK_ehook
 0x1001ebb

	)

1960 
	#XK_Etûde
 0x1001eb¯

	)

1961 
	#XK_ëûde
 0x1001ebd

	)

1962 
	#XK_EcúcumÊexacuã
 0x1001ebê

	)

1963 
	#XK_ecúcumÊexacuã
 0x1001eb‡

	)

1964 
	#XK_EcúcumÊexgøve
 0x1001ec0

	)

1965 
	#XK_ecúcumÊexgøve
 0x1001ec1

	)

1966 
	#XK_EcúcumÊexhook
 0x1001ec2

	)

1967 
	#XK_ecúcumÊexhook
 0x1001ec3

	)

1968 
	#XK_EcúcumÊextûde
 0x1001ec4

	)

1969 
	#XK_ecúcumÊextûde
 0x1001ec5

	)

1970 
	#XK_EcúcumÊexbñowdŸ
 0x1001ec6

	)

1971 
	#XK_ecúcumÊexbñowdŸ
 0x1001ec7

	)

1972 
	#XK_Ihook
 0x1001ec8

	)

1973 
	#XK_ihook
 0x1001ec9

	)

1974 
	#XK_IbñowdŸ
 0x1001eˇ

	)

1975 
	#XK_ibñowdŸ
 0x1001ecb

	)

1976 
	#XK_ObñowdŸ
 0x1001ec¯

	)

1977 
	#XK_obñowdŸ
 0x1001ecd

	)

1978 
	#XK_Ohook
 0x1001e˚

	)

1979 
	#XK_ohook
 0x1001ec‡

	)

1980 
	#XK_OcúcumÊexacuã
 0x1001ed0

	)

1981 
	#XK_ocúcumÊexacuã
 0x1001ed1

	)

1982 
	#XK_OcúcumÊexgøve
 0x1001ed2

	)

1983 
	#XK_ocúcumÊexgøve
 0x1001ed3

	)

1984 
	#XK_OcúcumÊexhook
 0x1001ed4

	)

1985 
	#XK_ocúcumÊexhook
 0x1001ed5

	)

1986 
	#XK_OcúcumÊextûde
 0x1001ed6

	)

1987 
	#XK_ocúcumÊextûde
 0x1001ed7

	)

1988 
	#XK_OcúcumÊexbñowdŸ
 0x1001ed8

	)

1989 
	#XK_ocúcumÊexbñowdŸ
 0x1001ed9

	)

1990 
	#XK_Oh‹«cuã
 0x1001ed®

	)

1991 
	#XK_oh‹«cuã
 0x1001edb

	)

1992 
	#XK_Oh‹ngøve
 0x1001ed¯

	)

1993 
	#XK_oh‹ngøve
 0x1001edd

	)

1994 
	#XK_Oh‹nhook
 0x1001edê

	)

1995 
	#XK_oh‹nhook
 0x1001ed‡

	)

1996 
	#XK_Oh‹¡ûde
 0x1001ì0

	)

1997 
	#XK_oh‹¡ûde
 0x1001ì1

	)

1998 
	#XK_Oh‹nbñowdŸ
 0x1001ì2

	)

1999 
	#XK_oh‹nbñowdŸ
 0x1001ì3

	)

2000 
	#XK_UbñowdŸ
 0x1001ì4

	)

2001 
	#XK_ubñowdŸ
 0x1001ì5

	)

2002 
	#XK_Uhook
 0x1001ì6

	)

2003 
	#XK_uhook
 0x1001ì7

	)

2004 
	#XK_Uh‹«cuã
 0x1001ì8

	)

2005 
	#XK_uh‹«cuã
 0x1001ì9

	)

2006 
	#XK_Uh‹ngøve
 0x1001ì®

	)

2007 
	#XK_uh‹ngøve
 0x1001ìb

	)

2008 
	#XK_Uh‹nhook
 0x1001ì¯

	)

2009 
	#XK_uh‹nhook
 0x1001ìd

	)

2010 
	#XK_Uh‹¡ûde
 0x1001ìê

	)

2011 
	#XK_uh‹¡ûde
 0x1001ì‡

	)

2012 
	#XK_Uh‹nbñowdŸ
 0x1001ef0

	)

2013 
	#XK_uh‹nbñowdŸ
 0x1001ef1

	)

2014 
	#XK_YbñowdŸ
 0x1001ef4

	)

2015 
	#XK_ybñowdŸ
 0x1001ef5

	)

2016 
	#XK_Yhook
 0x1001ef6

	)

2017 
	#XK_yhook
 0x1001ef7

	)

2018 
	#XK_Ytûde
 0x1001ef8

	)

2019 
	#XK_ytûde
 0x1001ef9

	)

2020 
	#XK_Oh‹n
 0x10001a0

	)

2021 
	#XK_oh‹n
 0x10001a1

	)

2022 
	#XK_Uh‹n
 0x10001a‡

	)

2023 
	#XK_uh‹n
 0x10001b0

	)

2027 #ifde‡
XK_CURRENCY


2028 
	#XK_EcuSign
 0x10020a0

	)

2029 
	#XK_Cﬁ⁄Sign
 0x10020a1

	)

2030 
	#XK_CruzeúoSign
 0x10020a2

	)

2031 
	#XK_FFøncSign
 0x10020a3

	)

2032 
	#XK_LúaSign
 0x10020a4

	)

2033 
	#XK_MûlSign
 0x10020a5

	)

2034 
	#XK_NaúaSign
 0x10020a6

	)

2035 
	#XK_Pe£èSign
 0x10020a7

	)

2036 
	#XK_Ru≥eSign
 0x10020a8

	)

2037 
	#XK_W⁄Sign
 0x10020a9

	)

2038 
	#XK_NewSheqñSign
 0x10020Ø

	)

2039 
	#XK_D⁄gSign
 0x10020ab

	)

2040 
	#XK_EuroSign
 0x20a¯

	)

2043 #ifde‡
XK_MATHEMATICAL


2045 
	#XK_zîosu≥ri‹
 0x1002070

	)

2046 
	#XK_foursu≥ri‹
 0x1002074

	)

2047 
	#XK_fivesu≥ri‹
 0x1002075

	)

2048 
	#XK_sixsu≥ri‹
 0x1002076

	)

2049 
	#XK_£vísu≥ri‹
 0x1002077

	)

2050 
	#XK_eightsu≥ri‹
 0x1002078

	)

2051 
	#XK_nöesu≥ri‹
 0x1002079

	)

2052 
	#XK_zîosubs¸ùt
 0x1002080

	)

2053 
	#XK_⁄esubs¸ùt
 0x1002081

	)

2054 
	#XK_twosubs¸ùt
 0x1002082

	)

2055 
	#XK_thªesubs¸ùt
 0x1002083

	)

2056 
	#XK_foursubs¸ùt
 0x1002084

	)

2057 
	#XK_fivesubs¸ùt
 0x1002085

	)

2058 
	#XK_sixsubs¸ùt
 0x1002086

	)

2059 
	#XK_£vísubs¸ùt
 0x1002087

	)

2060 
	#XK_eightsubs¸ùt
 0x1002088

	)

2061 
	#XK_nöesubs¸ùt
 0x1002089

	)

2062 
	#XK_∑πdif„ª¡ül
 0x1002202

	)

2063 
	#XK_em±y£t
 0x1002205

	)

2064 
	#XK_ñemítof
 0x1002208

	)

2065 
	#XK_nŸñemítof
 0x1002209

	)

2066 
	#XK_c⁄èößs
 0x100220B

	)

2067 
	#XK_squ¨îoŸ
 0x100221A

	)

2068 
	#XK_cubîoŸ
 0x100221B

	)

2069 
	#XK_fouπhroŸ
 0x100221C

	)

2070 
	#XK_döãgøl
 0x100222C

	)

2071 
	#XK_töãgøl
 0x100222D

	)

2072 
	#XK_beˇu£
 0x1002235

	)

2073 
	#XK_≠¥oxeq
 0x1002248

	)

2074 
	#XK_nŸ≠¥oxeq
 0x1002247

	)

2075 
	#XK_nŸidítiˇl
 0x1002262

	)

2076 
	#XK_°ri˘eq
 0x1002263

	)

2079 #ifde‡
XK_BRAILLE


2080 
	#XK_bøûÀ_dŸ_1
 0xfff1

	)

2081 
	#XK_bøûÀ_dŸ_2
 0xfff2

	)

2082 
	#XK_bøûÀ_dŸ_3
 0xfff3

	)

2083 
	#XK_bøûÀ_dŸ_4
 0xfff4

	)

2084 
	#XK_bøûÀ_dŸ_5
 0xfff5

	)

2085 
	#XK_bøûÀ_dŸ_6
 0xfff6

	)

2086 
	#XK_bøûÀ_dŸ_7
 0xfff7

	)

2087 
	#XK_bøûÀ_dŸ_8
 0xfff8

	)

2088 
	#XK_bøûÀ_dŸ_9
 0xfff9

	)

2089 
	#XK_bøûÀ_dŸ_10
 0xffÁ

	)

2090 
	#XK_bøûÀ_bœnk
 0x1002800

	)

2091 
	#XK_bøûÀ_dŸs_1
 0x1002801

	)

2092 
	#XK_bøûÀ_dŸs_2
 0x1002802

	)

2093 
	#XK_bøûÀ_dŸs_12
 0x1002803

	)

2094 
	#XK_bøûÀ_dŸs_3
 0x1002804

	)

2095 
	#XK_bøûÀ_dŸs_13
 0x1002805

	)

2096 
	#XK_bøûÀ_dŸs_23
 0x1002806

	)

2097 
	#XK_bøûÀ_dŸs_123
 0x1002807

	)

2098 
	#XK_bøûÀ_dŸs_4
 0x1002808

	)

2099 
	#XK_bøûÀ_dŸs_14
 0x1002809

	)

2100 
	#XK_bøûÀ_dŸs_24
 0x100280®

	)

2101 
	#XK_bøûÀ_dŸs_124
 0x100280b

	)

2102 
	#XK_bøûÀ_dŸs_34
 0x100280¯

	)

2103 
	#XK_bøûÀ_dŸs_134
 0x100280d

	)

2104 
	#XK_bøûÀ_dŸs_234
 0x100280ê

	)

2105 
	#XK_bøûÀ_dŸs_1234
 0x100280‡

	)

2106 
	#XK_bøûÀ_dŸs_5
 0x1002810

	)

2107 
	#XK_bøûÀ_dŸs_15
 0x1002811

	)

2108 
	#XK_bøûÀ_dŸs_25
 0x1002812

	)

2109 
	#XK_bøûÀ_dŸs_125
 0x1002813

	)

2110 
	#XK_bøûÀ_dŸs_35
 0x1002814

	)

2111 
	#XK_bøûÀ_dŸs_135
 0x1002815

	)

2112 
	#XK_bøûÀ_dŸs_235
 0x1002816

	)

2113 
	#XK_bøûÀ_dŸs_1235
 0x1002817

	)

2114 
	#XK_bøûÀ_dŸs_45
 0x1002818

	)

2115 
	#XK_bøûÀ_dŸs_145
 0x1002819

	)

2116 
	#XK_bøûÀ_dŸs_245
 0x100281®

	)

2117 
	#XK_bøûÀ_dŸs_1245
 0x100281b

	)

2118 
	#XK_bøûÀ_dŸs_345
 0x100281¯

	)

2119 
	#XK_bøûÀ_dŸs_1345
 0x100281d

	)

2120 
	#XK_bøûÀ_dŸs_2345
 0x100281ê

	)

2121 
	#XK_bøûÀ_dŸs_12345
 0x100281‡

	)

2122 
	#XK_bøûÀ_dŸs_6
 0x1002820

	)

2123 
	#XK_bøûÀ_dŸs_16
 0x1002821

	)

2124 
	#XK_bøûÀ_dŸs_26
 0x1002822

	)

2125 
	#XK_bøûÀ_dŸs_126
 0x1002823

	)

2126 
	#XK_bøûÀ_dŸs_36
 0x1002824

	)

2127 
	#XK_bøûÀ_dŸs_136
 0x1002825

	)

2128 
	#XK_bøûÀ_dŸs_236
 0x1002826

	)

2129 
	#XK_bøûÀ_dŸs_1236
 0x1002827

	)

2130 
	#XK_bøûÀ_dŸs_46
 0x1002828

	)

2131 
	#XK_bøûÀ_dŸs_146
 0x1002829

	)

2132 
	#XK_bøûÀ_dŸs_246
 0x100282®

	)

2133 
	#XK_bøûÀ_dŸs_1246
 0x100282b

	)

2134 
	#XK_bøûÀ_dŸs_346
 0x100282¯

	)

2135 
	#XK_bøûÀ_dŸs_1346
 0x100282d

	)

2136 
	#XK_bøûÀ_dŸs_2346
 0x100282ê

	)

2137 
	#XK_bøûÀ_dŸs_12346
 0x100282‡

	)

2138 
	#XK_bøûÀ_dŸs_56
 0x1002830

	)

2139 
	#XK_bøûÀ_dŸs_156
 0x1002831

	)

2140 
	#XK_bøûÀ_dŸs_256
 0x1002832

	)

2141 
	#XK_bøûÀ_dŸs_1256
 0x1002833

	)

2142 
	#XK_bøûÀ_dŸs_356
 0x1002834

	)

2143 
	#XK_bøûÀ_dŸs_1356
 0x1002835

	)

2144 
	#XK_bøûÀ_dŸs_2356
 0x1002836

	)

2145 
	#XK_bøûÀ_dŸs_12356
 0x1002837

	)

2146 
	#XK_bøûÀ_dŸs_456
 0x1002838

	)

2147 
	#XK_bøûÀ_dŸs_1456
 0x1002839

	)

2148 
	#XK_bøûÀ_dŸs_2456
 0x100283®

	)

2149 
	#XK_bøûÀ_dŸs_12456
 0x100283b

	)

2150 
	#XK_bøûÀ_dŸs_3456
 0x100283¯

	)

2151 
	#XK_bøûÀ_dŸs_13456
 0x100283d

	)

2152 
	#XK_bøûÀ_dŸs_23456
 0x100283ê

	)

2153 
	#XK_bøûÀ_dŸs_123456
 0x100283‡

	)

2154 
	#XK_bøûÀ_dŸs_7
 0x1002840

	)

2155 
	#XK_bøûÀ_dŸs_17
 0x1002841

	)

2156 
	#XK_bøûÀ_dŸs_27
 0x1002842

	)

2157 
	#XK_bøûÀ_dŸs_127
 0x1002843

	)

2158 
	#XK_bøûÀ_dŸs_37
 0x1002844

	)

2159 
	#XK_bøûÀ_dŸs_137
 0x1002845

	)

2160 
	#XK_bøûÀ_dŸs_237
 0x1002846

	)

2161 
	#XK_bøûÀ_dŸs_1237
 0x1002847

	)

2162 
	#XK_bøûÀ_dŸs_47
 0x1002848

	)

2163 
	#XK_bøûÀ_dŸs_147
 0x1002849

	)

2164 
	#XK_bøûÀ_dŸs_247
 0x100284®

	)

2165 
	#XK_bøûÀ_dŸs_1247
 0x100284b

	)

2166 
	#XK_bøûÀ_dŸs_347
 0x100284¯

	)

2167 
	#XK_bøûÀ_dŸs_1347
 0x100284d

	)

2168 
	#XK_bøûÀ_dŸs_2347
 0x100284ê

	)

2169 
	#XK_bøûÀ_dŸs_12347
 0x100284‡

	)

2170 
	#XK_bøûÀ_dŸs_57
 0x1002850

	)

2171 
	#XK_bøûÀ_dŸs_157
 0x1002851

	)

2172 
	#XK_bøûÀ_dŸs_257
 0x1002852

	)

2173 
	#XK_bøûÀ_dŸs_1257
 0x1002853

	)

2174 
	#XK_bøûÀ_dŸs_357
 0x1002854

	)

2175 
	#XK_bøûÀ_dŸs_1357
 0x1002855

	)

2176 
	#XK_bøûÀ_dŸs_2357
 0x1002856

	)

2177 
	#XK_bøûÀ_dŸs_12357
 0x1002857

	)

2178 
	#XK_bøûÀ_dŸs_457
 0x1002858

	)

2179 
	#XK_bøûÀ_dŸs_1457
 0x1002859

	)

2180 
	#XK_bøûÀ_dŸs_2457
 0x100285®

	)

2181 
	#XK_bøûÀ_dŸs_12457
 0x100285b

	)

2182 
	#XK_bøûÀ_dŸs_3457
 0x100285¯

	)

2183 
	#XK_bøûÀ_dŸs_13457
 0x100285d

	)

2184 
	#XK_bøûÀ_dŸs_23457
 0x100285ê

	)

2185 
	#XK_bøûÀ_dŸs_123457
 0x100285‡

	)

2186 
	#XK_bøûÀ_dŸs_67
 0x1002860

	)

2187 
	#XK_bøûÀ_dŸs_167
 0x1002861

	)

2188 
	#XK_bøûÀ_dŸs_267
 0x1002862

	)

2189 
	#XK_bøûÀ_dŸs_1267
 0x1002863

	)

2190 
	#XK_bøûÀ_dŸs_367
 0x1002864

	)

2191 
	#XK_bøûÀ_dŸs_1367
 0x1002865

	)

2192 
	#XK_bøûÀ_dŸs_2367
 0x1002866

	)

2193 
	#XK_bøûÀ_dŸs_12367
 0x1002867

	)

2194 
	#XK_bøûÀ_dŸs_467
 0x1002868

	)

2195 
	#XK_bøûÀ_dŸs_1467
 0x1002869

	)

2196 
	#XK_bøûÀ_dŸs_2467
 0x100286®

	)

2197 
	#XK_bøûÀ_dŸs_12467
 0x100286b

	)

2198 
	#XK_bøûÀ_dŸs_3467
 0x100286¯

	)

2199 
	#XK_bøûÀ_dŸs_13467
 0x100286d

	)

2200 
	#XK_bøûÀ_dŸs_23467
 0x100286ê

	)

2201 
	#XK_bøûÀ_dŸs_123467
 0x100286‡

	)

2202 
	#XK_bøûÀ_dŸs_567
 0x1002870

	)

2203 
	#XK_bøûÀ_dŸs_1567
 0x1002871

	)

2204 
	#XK_bøûÀ_dŸs_2567
 0x1002872

	)

2205 
	#XK_bøûÀ_dŸs_12567
 0x1002873

	)

2206 
	#XK_bøûÀ_dŸs_3567
 0x1002874

	)

2207 
	#XK_bøûÀ_dŸs_13567
 0x1002875

	)

2208 
	#XK_bøûÀ_dŸs_23567
 0x1002876

	)

2209 
	#XK_bøûÀ_dŸs_123567
 0x1002877

	)

2210 
	#XK_bøûÀ_dŸs_4567
 0x1002878

	)

2211 
	#XK_bøûÀ_dŸs_14567
 0x1002879

	)

2212 
	#XK_bøûÀ_dŸs_24567
 0x100287®

	)

2213 
	#XK_bøûÀ_dŸs_124567
 0x100287b

	)

2214 
	#XK_bøûÀ_dŸs_34567
 0x100287¯

	)

2215 
	#XK_bøûÀ_dŸs_134567
 0x100287d

	)

2216 
	#XK_bøûÀ_dŸs_234567
 0x100287ê

	)

2217 
	#XK_bøûÀ_dŸs_1234567
 0x100287‡

	)

2218 
	#XK_bøûÀ_dŸs_8
 0x1002880

	)

2219 
	#XK_bøûÀ_dŸs_18
 0x1002881

	)

2220 
	#XK_bøûÀ_dŸs_28
 0x1002882

	)

2221 
	#XK_bøûÀ_dŸs_128
 0x1002883

	)

2222 
	#XK_bøûÀ_dŸs_38
 0x1002884

	)

2223 
	#XK_bøûÀ_dŸs_138
 0x1002885

	)

2224 
	#XK_bøûÀ_dŸs_238
 0x1002886

	)

2225 
	#XK_bøûÀ_dŸs_1238
 0x1002887

	)

2226 
	#XK_bøûÀ_dŸs_48
 0x1002888

	)

2227 
	#XK_bøûÀ_dŸs_148
 0x1002889

	)

2228 
	#XK_bøûÀ_dŸs_248
 0x100288®

	)

2229 
	#XK_bøûÀ_dŸs_1248
 0x100288b

	)

2230 
	#XK_bøûÀ_dŸs_348
 0x100288¯

	)

2231 
	#XK_bøûÀ_dŸs_1348
 0x100288d

	)

2232 
	#XK_bøûÀ_dŸs_2348
 0x100288ê

	)

2233 
	#XK_bøûÀ_dŸs_12348
 0x100288‡

	)

2234 
	#XK_bøûÀ_dŸs_58
 0x1002890

	)

2235 
	#XK_bøûÀ_dŸs_158
 0x1002891

	)

2236 
	#XK_bøûÀ_dŸs_258
 0x1002892

	)

2237 
	#XK_bøûÀ_dŸs_1258
 0x1002893

	)

2238 
	#XK_bøûÀ_dŸs_358
 0x1002894

	)

2239 
	#XK_bøûÀ_dŸs_1358
 0x1002895

	)

2240 
	#XK_bøûÀ_dŸs_2358
 0x1002896

	)

2241 
	#XK_bøûÀ_dŸs_12358
 0x1002897

	)

2242 
	#XK_bøûÀ_dŸs_458
 0x1002898

	)

2243 
	#XK_bøûÀ_dŸs_1458
 0x1002899

	)

2244 
	#XK_bøûÀ_dŸs_2458
 0x100289®

	)

2245 
	#XK_bøûÀ_dŸs_12458
 0x100289b

	)

2246 
	#XK_bøûÀ_dŸs_3458
 0x100289¯

	)

2247 
	#XK_bøûÀ_dŸs_13458
 0x100289d

	)

2248 
	#XK_bøûÀ_dŸs_23458
 0x100289ê

	)

2249 
	#XK_bøûÀ_dŸs_123458
 0x100289‡

	)

2250 
	#XK_bøûÀ_dŸs_68
 0x10028a0

	)

2251 
	#XK_bøûÀ_dŸs_168
 0x10028a1

	)

2252 
	#XK_bøûÀ_dŸs_268
 0x10028a2

	)

2253 
	#XK_bøûÀ_dŸs_1268
 0x10028a3

	)

2254 
	#XK_bøûÀ_dŸs_368
 0x10028a4

	)

2255 
	#XK_bøûÀ_dŸs_1368
 0x10028a5

	)

2256 
	#XK_bøûÀ_dŸs_2368
 0x10028a6

	)

2257 
	#XK_bøûÀ_dŸs_12368
 0x10028a7

	)

2258 
	#XK_bøûÀ_dŸs_468
 0x10028a8

	)

2259 
	#XK_bøûÀ_dŸs_1468
 0x10028a9

	)

2260 
	#XK_bøûÀ_dŸs_2468
 0x10028Ø

	)

2261 
	#XK_bøûÀ_dŸs_12468
 0x10028ab

	)

2262 
	#XK_bøûÀ_dŸs_3468
 0x10028a¯

	)

2263 
	#XK_bøûÀ_dŸs_13468
 0x10028ad

	)

2264 
	#XK_bøûÀ_dŸs_23468
 0x10028´

	)

2265 
	#XK_bøûÀ_dŸs_123468
 0x10028a‡

	)

2266 
	#XK_bøûÀ_dŸs_568
 0x10028b0

	)

2267 
	#XK_bøûÀ_dŸs_1568
 0x10028b1

	)

2268 
	#XK_bøûÀ_dŸs_2568
 0x10028b2

	)

2269 
	#XK_bøûÀ_dŸs_12568
 0x10028b3

	)

2270 
	#XK_bøûÀ_dŸs_3568
 0x10028b4

	)

2271 
	#XK_bøûÀ_dŸs_13568
 0x10028b5

	)

2272 
	#XK_bøûÀ_dŸs_23568
 0x10028b6

	)

2273 
	#XK_bøûÀ_dŸs_123568
 0x10028b7

	)

2274 
	#XK_bøûÀ_dŸs_4568
 0x10028b8

	)

2275 
	#XK_bøûÀ_dŸs_14568
 0x10028b9

	)

2276 
	#XK_bøûÀ_dŸs_24568
 0x10028b®

	)

2277 
	#XK_bøûÀ_dŸs_124568
 0x10028bb

	)

2278 
	#XK_bøûÀ_dŸs_34568
 0x10028b¯

	)

2279 
	#XK_bøûÀ_dŸs_134568
 0x10028bd

	)

2280 
	#XK_bøûÀ_dŸs_234568
 0x10028bê

	)

2281 
	#XK_bøûÀ_dŸs_1234568
 0x10028b‡

	)

2282 
	#XK_bøûÀ_dŸs_78
 0x10028c0

	)

2283 
	#XK_bøûÀ_dŸs_178
 0x10028c1

	)

2284 
	#XK_bøûÀ_dŸs_278
 0x10028c2

	)

2285 
	#XK_bøûÀ_dŸs_1278
 0x10028c3

	)

2286 
	#XK_bøûÀ_dŸs_378
 0x10028c4

	)

2287 
	#XK_bøûÀ_dŸs_1378
 0x10028c5

	)

2288 
	#XK_bøûÀ_dŸs_2378
 0x10028c6

	)

2289 
	#XK_bøûÀ_dŸs_12378
 0x10028c7

	)

2290 
	#XK_bøûÀ_dŸs_478
 0x10028c8

	)

2291 
	#XK_bøûÀ_dŸs_1478
 0x10028c9

	)

2292 
	#XK_bøûÀ_dŸs_2478
 0x10028ˇ

	)

2293 
	#XK_bøûÀ_dŸs_12478
 0x10028cb

	)

2294 
	#XK_bøûÀ_dŸs_3478
 0x10028c¯

	)

2295 
	#XK_bøûÀ_dŸs_13478
 0x10028cd

	)

2296 
	#XK_bøûÀ_dŸs_23478
 0x10028˚

	)

2297 
	#XK_bøûÀ_dŸs_123478
 0x10028c‡

	)

2298 
	#XK_bøûÀ_dŸs_578
 0x10028d0

	)

2299 
	#XK_bøûÀ_dŸs_1578
 0x10028d1

	)

2300 
	#XK_bøûÀ_dŸs_2578
 0x10028d2

	)

2301 
	#XK_bøûÀ_dŸs_12578
 0x10028d3

	)

2302 
	#XK_bøûÀ_dŸs_3578
 0x10028d4

	)

2303 
	#XK_bøûÀ_dŸs_13578
 0x10028d5

	)

2304 
	#XK_bøûÀ_dŸs_23578
 0x10028d6

	)

2305 
	#XK_bøûÀ_dŸs_123578
 0x10028d7

	)

2306 
	#XK_bøûÀ_dŸs_4578
 0x10028d8

	)

2307 
	#XK_bøûÀ_dŸs_14578
 0x10028d9

	)

2308 
	#XK_bøûÀ_dŸs_24578
 0x10028d®

	)

2309 
	#XK_bøûÀ_dŸs_124578
 0x10028db

	)

2310 
	#XK_bøûÀ_dŸs_34578
 0x10028d¯

	)

2311 
	#XK_bøûÀ_dŸs_134578
 0x10028dd

	)

2312 
	#XK_bøûÀ_dŸs_234578
 0x10028dê

	)

2313 
	#XK_bøûÀ_dŸs_1234578
 0x10028d‡

	)

2314 
	#XK_bøûÀ_dŸs_678
 0x10028e0

	)

2315 
	#XK_bøûÀ_dŸs_1678
 0x10028e1

	)

2316 
	#XK_bøûÀ_dŸs_2678
 0x10028e2

	)

2317 
	#XK_bøûÀ_dŸs_12678
 0x10028e3

	)

2318 
	#XK_bøûÀ_dŸs_3678
 0x10028e4

	)

2319 
	#XK_bøûÀ_dŸs_13678
 0x10028e5

	)

2320 
	#XK_bøûÀ_dŸs_23678
 0x10028e6

	)

2321 
	#XK_bøûÀ_dŸs_123678
 0x10028e7

	)

2322 
	#XK_bøûÀ_dŸs_4678
 0x10028e8

	)

2323 
	#XK_bøûÀ_dŸs_14678
 0x10028e9

	)

2324 
	#XK_bøûÀ_dŸs_24678
 0x10028ó

	)

2325 
	#XK_bøûÀ_dŸs_124678
 0x10028eb

	)

2326 
	#XK_bøûÀ_dŸs_34678
 0x10028e¯

	)

2327 
	#XK_bøûÀ_dŸs_134678
 0x10028ed

	)

2328 
	#XK_bøûÀ_dŸs_234678
 0x10028ì

	)

2329 
	#XK_bøûÀ_dŸs_1234678
 0x10028e‡

	)

2330 
	#XK_bøûÀ_dŸs_5678
 0x10028f0

	)

2331 
	#XK_bøûÀ_dŸs_15678
 0x10028f1

	)

2332 
	#XK_bøûÀ_dŸs_25678
 0x10028f2

	)

2333 
	#XK_bøûÀ_dŸs_125678
 0x10028f3

	)

2334 
	#XK_bøûÀ_dŸs_35678
 0x10028f4

	)

2335 
	#XK_bøûÀ_dŸs_135678
 0x10028f5

	)

2336 
	#XK_bøûÀ_dŸs_235678
 0x10028f6

	)

2337 
	#XK_bøûÀ_dŸs_1235678
 0x10028f7

	)

2338 
	#XK_bøûÀ_dŸs_45678
 0x10028f8

	)

2339 
	#XK_bøûÀ_dŸs_145678
 0x10028f9

	)

2340 
	#XK_bøûÀ_dŸs_245678
 0x10028Á

	)

2341 
	#XK_bøûÀ_dŸs_1245678
 0x10028fb

	)

2342 
	#XK_bøûÀ_dŸs_345678
 0x10028f¯

	)

2343 
	#XK_bøûÀ_dŸs_1345678
 0x10028fd

	)

2344 
	#XK_bøûÀ_dŸs_2345678
 0x10028„

	)

2345 
	#XK_bøûÀ_dŸs_12345678
 0x10028f‡

	)

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 #i‚de‡
__ASSEMBLY__


17 
__sig√d__
 
	t__s8
;

18 
	t__u8
;

20 
__sig√d__
 
	t__s16
;

21 
	t__u16
;

23 
__sig√d__
 
	t__s32
;

24 
	t__u32
;

26 #ifde‡
__GNUC__


27 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

28 
__exãnsi⁄__
 
	t__u64
;

29 #ñi‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

30 
__sig√d__
 
	t__s64
;

31 
	t__u64
;

	@/usr/include/asm/ioctls.h

1 #i‚de‡
_ASM_X86_IOCTLS_H


2 
	#_ASM_X86_IOCTLS_H


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

51 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

52 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

53 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

54 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, )

	)

56 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

58 
	#FIONCLEX
 0x5450

	)

59 
	#FIOCLEX
 0x5451

	)

60 
	#FIOASYNC
 0x5452

	)

61 
	#TIOCSERCONFIG
 0x5453

	)

62 
	#TIOCSERGWILD
 0x5454

	)

63 
	#TIOCSERSWILD
 0x5455

	)

64 
	#TIOCGLCKTRMIOS
 0x5456

	)

65 
	#TIOCSLCKTRMIOS
 0x5457

	)

66 
	#TIOCSERGSTRUCT
 0x5458

	)

67 
	#TIOCSERGETLSR
 0x5459

	)

68 
	#TIOCSERGETMULTI
 0x545A

	)

69 
	#TIOCSERSETMULTI
 0x545B

	)

71 
	#TIOCMIWAIT
 0x545C

	)

72 
	#TIOCGICOUNT
 0x545D

	)

73 
	#TIOCGHAYESESP
 0x545E

	)

74 
	#TIOCSHAYESESP
 0x545F

	)

75 
	#FIOQSIZE
 0x5460

	)

78 
	#TIOCPKT_DATA
 0

	)

79 
	#TIOCPKT_FLUSHREAD
 1

	)

80 
	#TIOCPKT_FLUSHWRITE
 2

	)

81 
	#TIOCPKT_STOP
 4

	)

82 
	#TIOCPKT_START
 8

	)

83 
	#TIOCPKT_NOSTOP
 16

	)

84 
	#TIOCPKT_DOSTOP
 32

	)

86 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/param.h

1 #i‚de‡
_ASM_X86_PARAM_H


2 
	#_ASM_X86_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 
	#EXEC_PAGESIZE
 4096

	)

11 #i‚de‡
NOGROUP


12 
	#NOGROUP
 (-1)

	)

15 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASM_X86_SIGCONTEXT_H


2 
	#_ASM_X86_SIGCONTEXT_H


	)

4 
	~<asm/ty≥s.h
>

6 #ifde‡
__i386__


21 
	s_Âªg
 {

22 
	msignifiˇnd
[4];

23 
	mexp⁄ít
;

26 
	s_Âxªg
 {

27 
	msignifiˇnd
[4];

28 
	mexp⁄ít
;

29 
	m∑ddög
[3];

32 
	s_xmmªg
 {

33 
	mñemít
[4];

36 
	s_Â°©e
 {

38 
	mcw
;

39 
	msw
;

40 
	mèg
;

41 
	mùoff
;

42 
	mcs£l
;

43 
	md©aoff
;

44 
	md©a£l
;

45 
_Âªg
 
	m_°
[8];

46 
	m°©us
;

47 
	mmagic
;

50 
	m_fx§_ív
[6];

51 
	mmxc§
;

52 
	mª£rved
;

53 
_Âxªg
 
	m_fx§_°
[8];

54 
_xmmªg
 
	m_xmm
[8];

55 
	m∑ddög
[56];

58 
	#X86_FXSR_MAGIC
 0x0000

	)

63 
	ssigc⁄ãxt
 {

64 
	mgs
, 
	m__gsh
;

65 
	mfs
, 
	m__fsh
;

66 
	mes
, 
	m__esh
;

67 
	mds
, 
	m__dsh
;

68 
	medi
;

69 
	mesi
;

70 
	mebp
;

71 
	me•
;

72 
	mebx
;

73 
	medx
;

74 
	mecx
;

75 
	móx
;

76 
	må≠no
;

77 
	mîr
;

78 
	meù
;

79 
	mcs
, 
	m__csh
;

80 
	meÊags
;

81 
	me•_©_sig«l
;

82 
	mss
, 
	m__ssh
;

83 
_Â°©e
 *
	mÂ°©e
;

84 
	mﬁdmask
;

85 
	m¸2
;

93 
	s_Â°©e
 {

94 
__u16
 
	mcwd
;

95 
__u16
 
	mswd
;

96 
__u16
 
	mtwd
;

98 
__u16
 
	mf›
;

99 
__u64
 
	mrù
;

100 
__u64
 
	mrdp
;

101 
__u32
 
	mmxc§
;

102 
__u32
 
	mmxc§_mask
;

103 
__u32
 
	m°_•a˚
[32];

104 
__u32
 
	mxmm_•a˚
[64];

105 
__u32
 
	mª£rved2
[24];

111 
	ssigc⁄ãxt
 {

112 
	mr8
;

113 
	mr9
;

114 
	mr10
;

115 
	mr11
;

116 
	mr12
;

117 
	mr13
;

118 
	mr14
;

119 
	mr15
;

120 
	mrdi
;

121 
	mrsi
;

122 
	mrbp
;

123 
	mrbx
;

124 
	mrdx
;

125 
	møx
;

126 
	mrcx
;

127 
	mr•
;

128 
	mrù
;

129 
	meÊags
;

130 
	mcs
;

131 
	mgs
;

132 
	mfs
;

133 
	m__∑d0
;

134 
	mîr
;

135 
	må≠no
;

136 
	mﬁdmask
;

137 
	m¸2
;

138 
_Â°©e
 *
	mÂ°©e
;

139 
	mª£rved1
[8];

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

52 
	#SO_TIMESTAMPNS
 35

	)

53 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

55 
	#SO_MARK
 36

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

92 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

165 
	#__√ed_timevÆ


	)

166 
	~<bôs/time.h
>

169 
	srußge


172 
timevÆ
 
	mru_utime
;

174 
timevÆ
 
	mru_°ime
;

176 
	mru_maxrss
;

179 
	mru_ixrss
;

181 
	mru_idrss
;

183 
	mru_i§ss
;

186 
	mru_möÊt
;

188 
	mru_majÊt
;

190 
	mru_nsw≠
;

193 
	mru_öblock
;

195 
	mru_oublock
;

197 
	mru_msg¢d
;

199 
	mru_msgrcv
;

201 
	mru_nsig«ls
;

205 
	mru_nvcsw
;

208 
	mru_nivcsw
;

212 
	#PRIO_MIN
 -20

	)

213 
	#PRIO_MAX
 20

	)

217 
	e__¥i‹ôy_which


219 
	mPRIO_PROCESS
 = 0,

220 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

221 
	mPRIO_PGRP
 = 1,

222 
	#PRIO_PGRP
 
PRIO_PGRP


	)

223 
	mPRIO_USER
 = 2

224 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/krb5.h

7 
	~<krb5/krb5.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

5 
	~<löux/posix_ty≥s.h
>

6 
	~<asm/ty≥s.h
>

8 #i‚de‡
__KERNEL_STRICT_NAMES


10 
__u32
 
	t__kî√l_dev_t
;

12 
__kî√l_fd_£t
 
	tfd_£t
;

13 
__kî√l_dev_t
 
	tdev_t
;

14 
__kî√l_öo_t
 
	töo_t
;

15 
__kî√l_mode_t
 
	tmode_t
;

16 
__kî√l_∆ök_t
 
	t∆ök_t
;

17 
__kî√l_off_t
 
	toff_t
;

18 
__kî√l_pid_t
 
	tpid_t
;

19 
__kî√l_daddr_t
 
	tdaddr_t
;

20 
__kî√l_key_t
 
	tkey_t
;

21 
__kî√l_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

22 
__kî√l_timî_t
 
	ttimî_t
;

23 
__kî√l_˛ockid_t
 
	t˛ockid_t
;

24 
__kî√l_mqd_t
 
	tmqd_t
;

26 
__kî√l_uid_t
 
	tuid_t
;

27 
__kî√l_gid_t
 
	tgid_t
;

29 #i‡
deföed
(
__GNUC__
)

30 
__kî√l_loff_t
 
	tloff_t
;

37 #i‚de‡
_SIZE_T


38 
	#_SIZE_T


	)

39 
__kî√l_size_t
 
	tsize_t
;

42 #i‚de‡
_SSIZE_T


43 
	#_SSIZE_T


	)

44 
__kî√l_ssize_t
 
	tssize_t
;

47 #i‚de‡
_PTRDIFF_T


48 
	#_PTRDIFF_T


	)

49 
__kî√l_±rdiff_t
 
	t±rdiff_t
;

52 #i‚de‡
_TIME_T


53 
	#_TIME_T


	)

54 
__kî√l_time_t
 
	ttime_t
;

57 #i‚de‡
_CLOCK_T


58 
	#_CLOCK_T


	)

59 
__kî√l_˛ock_t
 
	t˛ock_t
;

62 #i‚de‡
_CADDR_T


63 
	#_CADDR_T


	)

64 
__kî√l_ˇddr_t
 
	tˇddr_t
;

68 
	tu_ch¨
;

69 
	tu_sh‹t
;

70 
	tu_öt
;

71 
	tu_l⁄g
;

74 
	tunch¨
;

75 
	tush‹t
;

76 
	tuöt
;

77 
	tul⁄g
;

79 #i‚de‡
__BIT_TYPES_DEFINED__


80 
	#__BIT_TYPES_DEFINED__


	)

82 
__u8
 
	tu_öt8_t
;

83 
__s8
 
	töt8_t
;

84 
__u16
 
	tu_öt16_t
;

85 
__s16
 
	töt16_t
;

86 
__u32
 
	tu_öt32_t
;

87 
__s32
 
	töt32_t
;

91 
__u8
 
	tuöt8_t
;

92 
__u16
 
	tuöt16_t
;

93 
__u32
 
	tuöt32_t
;

95 #i‡
deföed
(
__GNUC__
)

96 
__u64
 
	tuöt64_t
;

97 
__u64
 
	tu_öt64_t
;

98 
__s64
 
	töt64_t
;

102 
	#Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

103 
	#Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

104 
	#Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

112 #ifde‡
CONFIG_LBD


113 
u64
 
	t£˘‹_t
;

115 
	t£˘‹_t
;

121 #ifde‡
CONFIG_LSF


122 
u64
 
	tblk˙t_t
;

124 
	tblk˙t_t
;

131 #i‚de‡
pgoff_t


132 
	#pgoff_t
 

	)

142 #ifde‡
__CHECKER__


143 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

145 
	#__bôwi£__


	)

147 #ifde‡
__CHECK_ENDIAN__


148 
	#__bôwi£
 
__bôwi£__


	)

150 
	#__bôwi£


	)

153 
__u16
 
	t__bôwi£
 
	t__À16
;

154 
__u16
 
	t__bôwi£
 
	t__be16
;

155 
__u32
 
	t__bôwi£
 
	t__À32
;

156 
__u32
 
	t__bôwi£
 
	t__be32
;

157 #i‡
deföed
(
__GNUC__
)

158 
__u64
 
	t__bôwi£
 
	t__À64
;

159 
__u64
 
	t__bôwi£
 
	t__be64
;

161 
__u16
 
	t__bôwi£
 
	t__sum16
;

162 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/openssl/bn.h

72 #i‚de‡
HEADER_BN_H


73 
	#HEADER_BN_H


	)

75 
	~<›ís¶/e_os2.h
>

76 #i‚de‡
OPENSSL_NO_FP_API


77 
	~<°dio.h
>

79 
	~<›ís¶/os¶_typ.h
>

81 #ifde‡ 
__˝lu•lus


97 
	#BN_MUL_COMBA


	)

98 
	#BN_SQR_COMBA


	)

99 
	#BN_RECURSION


	)

112 #i‡
deföed
(
OPENSSL_SYS_MSDOS
Ë|| deföed(
OPENSSL_SYS_WINDOWS
) || \

113 
deföed
(
OPENSSL_SYS_WIN32
Ë|| deföed(
löux
)

114 #i‚de‡
BN_DIV2W


115 
	#BN_DIV2W


	)

122 #ifde‡
SIXTY_FOUR_BIT_LONG


123 
	#BN_ULLONG
 

	)

124 
	#BN_ULONG
 

	)

125 
	#BN_LONG
 

	)

126 
	#BN_BITS
 128

	)

127 
	#BN_BYTES
 8

	)

128 
	#BN_BITS2
 64

	)

129 
	#BN_BITS4
 32

	)

130 
	#BN_MASK
 (0xffffffffffffffffffffffffffffffffLL)

	)

131 
	#BN_MASK2
 (0xffffffffffffffffL)

	)

132 
	#BN_MASK2l
 (0xffffffffL)

	)

133 
	#BN_MASK2h
 (0xffffffff00000000L)

	)

134 
	#BN_MASK2h1
 (0xffffffff80000000L)

	)

135 
	#BN_TBIT
 (0x8000000000000000L)

	)

136 
	#BN_DEC_CONV
 (10000000000000000000UL)

	)

137 
	#BN_DEC_FMT1
 "%lu"

	)

138 
	#BN_DEC_FMT2
 "%019lu"

	)

139 
	#BN_DEC_NUM
 19

	)

147 #ifde‡
SIXTY_FOUR_BIT


148 #unde‡
BN_LLONG


149 #unde‡
BN_ULLONG


150 
	#BN_ULONG
 

	)

151 
	#BN_LONG
 

	)

152 
	#BN_BITS
 128

	)

153 
	#BN_BYTES
 8

	)

154 
	#BN_BITS2
 64

	)

155 
	#BN_BITS4
 32

	)

156 
	#BN_MASK2
 (0xffffffffffffffffLL)

	)

157 
	#BN_MASK2l
 (0xffffffffL)

	)

158 
	#BN_MASK2h
 (0xffffffff00000000LL)

	)

159 
	#BN_MASK2h1
 (0xffffffff80000000LL)

	)

160 
	#BN_TBIT
 (0x8000000000000000LL)

	)

161 
	#BN_DEC_CONV
 (10000000000000000000ULL)

	)

162 
	#BN_DEC_FMT1
 "%Œu"

	)

163 
	#BN_DEC_FMT2
 "%019Œu"

	)

164 
	#BN_DEC_NUM
 19

	)

167 #ifde‡
THIRTY_TWO_BIT


168 #ifde‡
BN_LLONG


169 #i‡
deföed
(
OPENSSL_SYS_WIN32
Ë&& !deföed(
__GNUC__
)

170 
	#BN_ULLONG
 
__öt64


	)

172 
	#BN_ULLONG
 

	)

175 
	#BN_ULONG
 

	)

176 
	#BN_LONG
 

	)

177 
	#BN_BITS
 64

	)

178 
	#BN_BYTES
 4

	)

179 
	#BN_BITS2
 32

	)

180 
	#BN_BITS4
 16

	)

181 #ifde‡
OPENSSL_SYS_WIN32


183 
	#BN_MASK
 (0xffffffffffffffffL)

	)

185 
	#BN_MASK
 (0xffffffffffffffffLL)

	)

187 
	#BN_MASK2
 (0xffffffffL)

	)

188 
	#BN_MASK2l
 (0xffff)

	)

189 
	#BN_MASK2h1
 (0xffff8000L)

	)

190 
	#BN_MASK2h
 (0xffff0000L)

	)

191 
	#BN_TBIT
 (0x80000000L)

	)

192 
	#BN_DEC_CONV
 (1000000000L)

	)

193 
	#BN_DEC_FMT1
 "%lu"

	)

194 
	#BN_DEC_FMT2
 "%09lu"

	)

195 
	#BN_DEC_NUM
 9

	)

198 #ifde‡
SIXTEEN_BIT


199 #i‚de‡
BN_DIV2W


200 
	#BN_DIV2W


	)

202 
	#BN_ULLONG
 

	)

203 
	#BN_ULONG
 

	)

204 
	#BN_LONG
 

	)

205 
	#BN_BITS
 32

	)

206 
	#BN_BYTES
 2

	)

207 
	#BN_BITS2
 16

	)

208 
	#BN_BITS4
 8

	)

209 
	#BN_MASK
 (0xffffffff)

	)

210 
	#BN_MASK2
 (0xffff)

	)

211 
	#BN_MASK2l
 (0xff)

	)

212 
	#BN_MASK2h1
 (0xff80)

	)

213 
	#BN_MASK2h
 (0xff00)

	)

214 
	#BN_TBIT
 (0x8000)

	)

215 
	#BN_DEC_CONV
 (100000)

	)

216 
	#BN_DEC_FMT1
 "%u"

	)

217 
	#BN_DEC_FMT2
 "%05u"

	)

218 
	#BN_DEC_NUM
 5

	)

221 #ifde‡
EIGHT_BIT


222 #i‚de‡
BN_DIV2W


223 
	#BN_DIV2W


	)

225 
	#BN_ULLONG
 

	)

226 
	#BN_ULONG
 

	)

227 
	#BN_LONG
 

	)

228 
	#BN_BITS
 16

	)

229 
	#BN_BYTES
 1

	)

230 
	#BN_BITS2
 8

	)

231 
	#BN_BITS4
 4

	)

232 
	#BN_MASK
 (0xffff)

	)

233 
	#BN_MASK2
 (0xff)

	)

234 
	#BN_MASK2l
 (0xf)

	)

235 
	#BN_MASK2h1
 (0xf8)

	)

236 
	#BN_MASK2h
 (0xf0)

	)

237 
	#BN_TBIT
 (0x80)

	)

238 
	#BN_DEC_CONV
 (100)

	)

239 
	#BN_DEC_FMT1
 "%u"

	)

240 
	#BN_DEC_FMT2
 "%02u"

	)

241 
	#BN_DEC_NUM
 2

	)

244 
	#BN_DEFAULT_BITS
 1280

	)

246 
	#BN_FLG_MALLOCED
 0x01

	)

247 
	#BN_FLG_STATIC_DATA
 0x02

	)

248 
	#BN_FLG_CONSTTIME
 0x04

	)

253 
	#BN_FLG_EXP_CONSTTIME
 
BN_FLG_CONSTTIME


	)

257 #i‚de‡
OPENSSL_NO_DEPRECATED


258 
	#BN_FLG_FREE
 0x8000

	)

260 
	#BN_£t_Êags
(
b
,
n
Ë((b)->
Êags
|=“))

	)

261 
	#BN_gë_Êags
(
b
,
n
Ë((b)->
Êags
&“))

	)

265 
	#BN_wôh_Êags
(
de°
,
b
,
n
Ë((de°)->
d
=(b)->d, \

266 (
de°
)->
t›
=(
b
)->top, \

267 (
de°
)->
dmax
=(
b
)->dmax, \

268 (
de°
)->
√g
=(
b
)->neg, \

269 (
de°
)->
Êags
=(((de°)->Êag†& 
BN_FLG_MALLOCED
) \

270 | ((
b
)->
Êags
 & ~
BN_FLG_MALLOCED
) \

271 | 
BN_FLG_STATIC_DATA
 \

272 | (
n
)))

	)

276 
bignum_°
 
	tBIGNUM
;

278 
bignum_˘x
 
	tBN_CTX
;

279 
bn_blödög_°
 
	tBN_BLINDING
;

280 
bn_m⁄t_˘x_°
 
	tBN_MONT_CTX
;

281 
bn_ª˝_˘x_°
 
	tBN_RECP_CTX
;

282 
bn_gícb_°
 
	tBN_GENCB
;

285 
	sbignum_°


287 
BN_ULONG
 *
d
;

288 
t›
;

290 
dmax
;

291 
√g
;

292 
Êags
;

296 
	sbn_m⁄t_˘x_°


298 
ri
;

299 
BIGNUM
 
RR
;

300 
BIGNUM
 
N
;

301 
BIGNUM
 
Ni
;

303 
BN_ULONG
 
n0
;

304 
Êags
;

310 
	sbn_ª˝_˘x_°


312 
BIGNUM
 
N
;

313 
BIGNUM
 
Nr
;

314 
num_bôs
;

315 
shi·
;

316 
Êags
;

320 
	sbn_gícb_°


322 
vî
;

323 *
¨g
;

327 (*
cb_1
)(, , *);

329 (*
cb_2
)(, , 
BN_GENCB
 *);

330 } 
cb
;

333 
BN_GENCB_ˇŒ
(
BN_GENCB
 *
cb
, 
a
, 
b
);

335 
	#BN_GENCB_£t_ﬁd
(
gícb
, 
ˇŒback
, 
cb_¨g
) { \

336 
BN_GENCB
 *
tmp_gícb
 = (
gícb
); \

337 
tmp_gícb
->
vî
 = 1; \

338 
tmp_gícb
->
¨g
 = (
cb_¨g
); \

339 
tmp_gícb
->
cb
.
cb_1
 = (
ˇŒback
); }

	)

341 
	#BN_GENCB_£t
(
gícb
, 
ˇŒback
, 
cb_¨g
) { \

342 
BN_GENCB
 *
tmp_gícb
 = (
gícb
); \

343 
tmp_gícb
->
vî
 = 2; \

344 
tmp_gícb
->
¨g
 = (
cb_¨g
); \

345 
tmp_gícb
->
cb
.
cb_2
 = (
ˇŒback
); }

	)

347 
	#BN_¥ime_checks
 0

	)

355 
	#BN_¥ime_checks_f‹_size
(
b
) ((b) >= 1300 ? 2 : \

356 (
b
) >= 850 ? 3 : \

357 (
b
) >= 650 ? 4 : \

358 (
b
) >= 550 ? 5 : \

359 (
b
) >= 450 ? 6 : \

360 (
b
) >= 400 ? 7 : \

361 (
b
) >= 350 ? 8 : \

362 (
b
) >= 300 ? 9 : \

363 (
b
) >= 250 ? 12 : \

364 (
b
) >= 200 ? 15 : \

365 (
b
) >= 150 ? 18 : \

366  27)

	)

368 
	#BN_num_byãs
(
a
Ë((
	`BN_num_bôs
◊)+7)/8)

	)

371 
	#BN_abs_is_w‹d
(
a
,
w
Ë(((◊)->
t›
 =1Ë&& (◊)->
d
[0] =(
BN_ULONG
)(w))) || \

372 (((
w
Ë=0Ë&& ((
a
)->
t›
 =0)))

	)

373 
	#BN_is_zîo
(
a
Ë(◊)->
t›
 =0)

	)

374 
	#BN_is_⁄e
(
a
Ë(
	`BN_abs_is_w‹d
(◊),1Ë&& !◊)->
√g
)

	)

375 
	#BN_is_w‹d
(
a
,
w
Ë(
	`BN_abs_is_w‹d
(◊),(w)Ë&& (!(wË|| !◊)->
√g
))

	)

376 
	#BN_is_odd
(
a
Ë((◊)->
t›
 > 0Ë&& (◊)->
d
[0] & 1))

	)

378 
	#BN_⁄e
(
a
Ë(
	`BN_£t_w‹d
(◊),1))

	)

379 
	#BN_zîo_ex
(
a
) \

381 
BIGNUM
 *
_tmp_bn
 = (
a
); \

382 
_tmp_bn
->
t›
 = 0; \

383 
_tmp_bn
->
√g
 = 0; \

384 } 0)

	)

385 #ifde‡
OPENSSL_NO_DEPRECATED


386 
	#BN_zîo
(
a
Ë
	`BN_zîo_ex
◊)

	)

388 
	#BN_zîo
(
a
Ë(
	`BN_£t_w‹d
(◊),0))

	)

391 c⁄° 
BIGNUM
 *
BN_vÆue_⁄e
();

392 * 
BN_›ti⁄s
();

393 
BN_CTX
 *
BN_CTX_√w
();

394 #i‚de‡
OPENSSL_NO_DEPRECATED


395 
BN_CTX_öô
(
BN_CTX
 *
c
);

397 
BN_CTX_‰ì
(
BN_CTX
 *
c
);

398 
BN_CTX_°¨t
(
BN_CTX
 *
˘x
);

399 
BIGNUM
 *
BN_CTX_gë
(
BN_CTX
 *
˘x
);

400 
BN_CTX_íd
(
BN_CTX
 *
˘x
);

401 
BN_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
);

402 
BN_p£udo_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
);

403 
BN_ønd_ønge
(
BIGNUM
 *
∫d
, BIGNUM *
ønge
);

404 
BN_p£udo_ønd_ønge
(
BIGNUM
 *
∫d
, BIGNUM *
ønge
);

405 
BN_num_bôs
(c⁄° 
BIGNUM
 *
a
);

406 
BN_num_bôs_w‹d
(
BN_ULONG
);

407 
BIGNUM
 *
BN_√w
();

408 
BN_öô
(
BIGNUM
 *);

409 
BN_˛ór_‰ì
(
BIGNUM
 *
a
);

410 
BIGNUM
 *
BN_c›y
(BIGNUM *
a
, c⁄° BIGNUM *
b
);

411 
BN_sw≠
(
BIGNUM
 *
a
, BIGNUM *
b
);

412 
BIGNUM
 *
BN_bö2bn
(c⁄° *
s
,
Àn
,BIGNUM *
ªt
);

413 
BN_bn2bö
(c⁄° 
BIGNUM
 *
a
, *
to
);

414 
BIGNUM
 *
BN_mpi2bn
(c⁄° *
s
,
Àn
,BIGNUM *
ªt
);

415 
BN_bn2mpi
(c⁄° 
BIGNUM
 *
a
, *
to
);

416 
BN_sub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
);

417 
BN_usub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
);

418 
BN_uadd
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
);

419 
BN_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
);

420 
BN_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *
˘x
);

421 
BN_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,
BN_CTX
 *
˘x
);

426 
BN_£t_√g©ive
(
BIGNUM
 *
b
, 
n
);

431 
	#BN_is_√g©ive
(
a
Ë(◊)->
√g
 !0)

	)

433 
BN_div
(
BIGNUM
 *
dv
, BIGNUM *
ªm
, c⁄° BIGNUM *
m
, c⁄° BIGNUM *
d
,

434 
BN_CTX
 *
˘x
);

435 
	#BN_mod
(
ªm
,
m
,
d
,
˘x
Ë
	`BN_div
(
NULL
,‘em),(m),(d),(˘x))

	)

436 
BN_¬mod
(
BIGNUM
 *
r
, c⁄° BIGNUM *
m
, c⁄° BIGNUM *
d
, 
BN_CTX
 *
˘x
);

437 
BN_mod_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
);

438 
BN_mod_add_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
);

439 
BN_mod_sub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
);

440 
BN_mod_sub_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
);

441 
BN_mod_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

442 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
);

443 
BN_mod_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
);

444 
BN_mod_lshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
);

445 
BN_mod_lshi·1_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
);

446 
BN_mod_lshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
);

447 
BN_mod_lshi·_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
, c⁄° BIGNUM *
m
);

449 
BN_ULONG
 
BN_mod_w‹d
(c⁄° 
BIGNUM
 *
a
, BN_ULONG 
w
);

450 
BN_ULONG
 
BN_div_w‹d
(
BIGNUM
 *
a
, BN_ULONG 
w
);

451 
BN_mul_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
);

452 
BN_add_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
);

453 
BN_sub_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
);

454 
BN_£t_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
);

455 
BN_ULONG
 
BN_gë_w‹d
(c⁄° 
BIGNUM
 *
a
);

457 
BN_cmp
(c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
b
);

458 
BN_‰ì
(
BIGNUM
 *
a
);

459 
BN_is_bô_£t
(c⁄° 
BIGNUM
 *
a
, 
n
);

460 
BN_lshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
);

461 
BN_lshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
);

462 
BN_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,
BN_CTX
 *
˘x
);

464 
BN_mod_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

465 c⁄° 
BIGNUM
 *
m
,
BN_CTX
 *
˘x
);

466 
BN_mod_exp_m⁄t
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

467 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
);

468 
BN_mod_exp_m⁄t_c⁄°time
(
BIGNUM
 *
º
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

469 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
ö_m⁄t
);

470 
BN_mod_exp_m⁄t_w‹d
(
BIGNUM
 *
r
, 
BN_ULONG
 
a
, c⁄° BIGNUM *
p
,

471 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
);

472 
BN_mod_exp2_m⁄t
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a1
, c⁄° BIGNUM *
p1
,

473 c⁄° 
BIGNUM
 *
a2
, c⁄° BIGNUM *
p2
,c⁄° BIGNUM *
m
,

474 
BN_CTX
 *
˘x
,
BN_MONT_CTX
 *
m_˘x
);

475 
BN_mod_exp_sim∂e
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

476 c⁄° 
BIGNUM
 *
m
,
BN_CTX
 *
˘x
);

478 
BN_mask_bôs
(
BIGNUM
 *
a
,
n
);

479 #i‚de‡
OPENSSL_NO_FP_API


480 
BN_¥öt_Â
(
FILE
 *
Â
, c⁄° 
BIGNUM
 *
a
);

482 #ifde‡
HEADER_BIO_H


483 
BN_¥öt
(
BIO
 *
Â
, c⁄° 
BIGNUM
 *
a
);

485 
BN_¥öt
(*
Â
, c⁄° 
BIGNUM
 *
a
);

487 
BN_ªcùroˇl
(
BIGNUM
 *
r
, c⁄° BIGNUM *
m
, 
Àn
, 
BN_CTX
 *
˘x
);

488 
BN_rshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
);

489 
BN_rshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
);

490 
BN_˛ór
(
BIGNUM
 *
a
);

491 
BIGNUM
 *
BN_dup
(c⁄° BIGNUM *
a
);

492 
BN_ucmp
(c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
b
);

493 
BN_£t_bô
(
BIGNUM
 *
a
, 
n
);

494 
BN_˛ór_bô
(
BIGNUM
 *
a
, 
n
);

495 * 
BN_bn2hex
(c⁄° 
BIGNUM
 *
a
);

496 * 
BN_bn2dec
(c⁄° 
BIGNUM
 *
a
);

497 
BN_hex2bn
(
BIGNUM
 **
a
, c⁄° *
°r
);

498 
BN_dec2bn
(
BIGNUM
 **
a
, c⁄° *
°r
);

499 
BN_gcd
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,c⁄° BIGNUM *
b
,
BN_CTX
 *
˘x
);

500 
BN_kr⁄eckî
(c⁄° 
BIGNUM
 *
a
,c⁄° BIGNUM *
b
,
BN_CTX
 *
˘x
);

501 
BIGNUM
 *
BN_mod_övî£
(BIGNUM *
ªt
,

502 c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
n
,
BN_CTX
 *
˘x
);

503 
BIGNUM
 *
BN_mod_sqπ
(BIGNUM *
ªt
,

504 c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
n
,
BN_CTX
 *
˘x
);

507 #i‚de‡
OPENSSL_NO_DEPRECATED


508 
BIGNUM
 *
BN_gíî©e_¥ime
(BIGNUM *
ªt
,
bôs
,
ß„
,

509 c⁄° 
BIGNUM
 *
add
, c⁄° BIGNUM *
ªm
,

510 (*
ˇŒback
)(,,*),*
cb_¨g
);

511 
BN_is_¥ime
(c⁄° 
BIGNUM
 *
p
,
nchecks
,

512 (*
ˇŒback
)(,,*),

513 
BN_CTX
 *
˘x
,*
cb_¨g
);

514 
BN_is_¥ime_Á°ã°
(c⁄° 
BIGNUM
 *
p
,
nchecks
,

515 (*
ˇŒback
)(,,*),
BN_CTX
 *
˘x
,*
cb_¨g
,

516 
do_åül_divisi⁄
);

520 
BN_gíî©e_¥ime_ex
(
BIGNUM
 *
ªt
,
bôs
,
ß„
, c⁄° BIGNUM *
add
,

521 c⁄° 
BIGNUM
 *
ªm
, 
BN_GENCB
 *
cb
);

522 
BN_is_¥ime_ex
(c⁄° 
BIGNUM
 *
p
,
nchecks
, 
BN_CTX
 *
˘x
, 
BN_GENCB
 *
cb
);

523 
BN_is_¥ime_Á°ã°_ex
(c⁄° 
BIGNUM
 *
p
,
nchecks
, 
BN_CTX
 *
˘x
,

524 
do_åül_divisi⁄
, 
BN_GENCB
 *
cb
);

526 
BN_MONT_CTX
 *
BN_MONT_CTX_√w
();

527 
BN_MONT_CTX_öô
(
BN_MONT_CTX
 *
˘x
);

528 
BN_mod_mul_m⁄tgomîy
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,c⁄° BIGNUM *
b
,

529 
BN_MONT_CTX
 *
m⁄t
, 
BN_CTX
 *
˘x
);

530 
	#BN_to_m⁄tgomîy
(
r
,
a
,
m⁄t
,
˘x
Ë
	`BN_mod_mul_m⁄tgomîy
(\

531 (
r
),(
a
),&((
m⁄t
)->
RR
),(m⁄t),(
˘x
))

	)

532 
BN_‰om_m⁄tgomîy
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,

533 
BN_MONT_CTX
 *
m⁄t
, 
BN_CTX
 *
˘x
);

534 
BN_MONT_CTX_‰ì
(
BN_MONT_CTX
 *
m⁄t
);

535 
BN_MONT_CTX_£t
(
BN_MONT_CTX
 *
m⁄t
,c⁄° 
BIGNUM
 *
mod
,
BN_CTX
 *
˘x
);

536 
BN_MONT_CTX
 *
BN_MONT_CTX_c›y
(BN_MONT_CTX *
to
,BN_MONT_CTX *
‰om
);

537 
BN_MONT_CTX
 *
BN_MONT_CTX_£t_locked
(BN_MONT_CTX **
pm⁄t
, 
lock
,

538 c⁄° 
BIGNUM
 *
mod
, 
BN_CTX
 *
˘x
);

541 
	#BN_BLINDING_NO_UPDATE
 0x00000001

	)

542 
	#BN_BLINDING_NO_RECREATE
 0x00000002

	)

544 
BN_BLINDING
 *
BN_BLINDING_√w
(c⁄° 
BIGNUM
 *
A
, c⁄° BIGNUM *
Ai
, BIGNUM *
mod
);

545 
BN_BLINDING_‰ì
(
BN_BLINDING
 *
b
);

546 
BN_BLINDING_upd©e
(
BN_BLINDING
 *
b
,
BN_CTX
 *
˘x
);

547 
BN_BLINDING_c⁄vît
(
BIGNUM
 *
n
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *
˘x
);

548 
BN_BLINDING_övît
(
BIGNUM
 *
n
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *
˘x
);

549 
BN_BLINDING_c⁄vît_ex
(
BIGNUM
 *
n
, BIGNUM *
r
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *);

550 
BN_BLINDING_övît_ex
(
BIGNUM
 *
n
, c⁄° BIGNUM *
r
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *);

551 
BN_BLINDING_gë_thªad_id
(c⁄° 
BN_BLINDING
 *);

552 
BN_BLINDING_£t_thªad_id
(
BN_BLINDING
 *, );

553 
BN_BLINDING_gë_Êags
(c⁄° 
BN_BLINDING
 *);

554 
BN_BLINDING_£t_Êags
(
BN_BLINDING
 *, );

555 
BN_BLINDING
 *
BN_BLINDING_¸óã_∑øm
(BN_BLINDING *
b
,

556 c⁄° 
BIGNUM
 *
e
, BIGNUM *
m
, 
BN_CTX
 *
˘x
,

557 (*
bn_mod_exp
)(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

558 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
),

559 
BN_MONT_CTX
 *
m_˘x
);

561 #i‚de‡
OPENSSL_NO_DEPRECATED


562 
BN_£t_∑øms
(
mul
,
high
,
low
,
m⁄t
);

563 
BN_gë_∑øms
(
which
);

566 
BN_RECP_CTX_öô
(
BN_RECP_CTX
 *
ª˝
);

567 
BN_RECP_CTX
 *
BN_RECP_CTX_√w
();

568 
BN_RECP_CTX_‰ì
(
BN_RECP_CTX
 *
ª˝
);

569 
BN_RECP_CTX_£t
(
BN_RECP_CTX
 *
ª˝
,c⁄° 
BIGNUM
 *
rdiv
,
BN_CTX
 *
˘x
);

570 
BN_mod_mul_ªcùroˇl
(
BIGNUM
 *
r
, c⁄° BIGNUM *
x
, c⁄° BIGNUM *
y
,

571 
BN_RECP_CTX
 *
ª˝
,
BN_CTX
 *
˘x
);

572 
BN_mod_exp_ª˝
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

573 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
);

574 
BN_div_ª˝
(
BIGNUM
 *
dv
, BIGNUM *
ªm
, c⁄° BIGNUM *
m
,

575 
BN_RECP_CTX
 *
ª˝
, 
BN_CTX
 *
˘x
);

586 
BN_GF2m_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
);

587 
	#BN_GF2m_sub
(
r
, 
a
, 
b
Ë
	`BN_GF2m_add
‘,á, b)

	)

588 
BN_GF2m_mod
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
);

589 
BN_GF2m_mod_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

590 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
);

591 
BN_GF2m_mod_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

592 
BN_CTX
 *
˘x
);

593 
BN_GF2m_mod_öv
(
BIGNUM
 *
r
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
p
,

594 
BN_CTX
 *
˘x
);

595 
BN_GF2m_mod_div
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

596 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
);

597 
BN_GF2m_mod_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

598 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
);

599 
BN_GF2m_mod_sqπ
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

600 
BN_CTX
 *
˘x
);

601 
BN_GF2m_mod_sﬁve_quad
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

602 
BN_CTX
 *
˘x
);

603 
	#BN_GF2m_cmp
(
a
, 
b
Ë
	`BN_ucmp
(◊), (b))

	)

609 
BN_GF2m_mod_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° 
p
[]);

611 
BN_GF2m_mod_mul_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

612 c⁄° 
p
[], 
BN_CTX
 *
˘x
);

613 
BN_GF2m_mod_sqr_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° 
p
[],

614 
BN_CTX
 *
˘x
);

615 
BN_GF2m_mod_öv_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
b
, c⁄° 
p
[],

616 
BN_CTX
 *
˘x
);

617 
BN_GF2m_mod_div_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

618 c⁄° 
p
[], 
BN_CTX
 *
˘x
);

619 
BN_GF2m_mod_exp_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

620 c⁄° 
p
[], 
BN_CTX
 *
˘x
);

621 
BN_GF2m_mod_sqπ_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

622 c⁄° 
p
[], 
BN_CTX
 *
˘x
);

623 
BN_GF2m_mod_sﬁve_quad_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

624 c⁄° 
p
[], 
BN_CTX
 *
˘x
);

625 
BN_GF2m_pﬁy2¨r
(c⁄° 
BIGNUM
 *
a
, 
p
[], 
max
);

626 
BN_GF2m_¨r2pﬁy
(c⁄° 
p
[], 
BIGNUM
 *
a
);

630 
BN_ni°_mod_192
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
);

631 
BN_ni°_mod_224
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
);

632 
BN_ni°_mod_256
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
);

633 
BN_ni°_mod_384
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
);

634 
BN_ni°_mod_521
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
);

636 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_192
();

637 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_224
();

638 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_256
();

639 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_384
();

640 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_521
();

644 
	#bn_ex∑nd
(
a
,
bôs
Ë((((((bôs+
BN_BITS2
-1))/BN_BITS2)Ë<◊)->
dmax
)?\

645 (
a
):
	`bn_ex∑nd2
(◊),(
bôs
+
BN_BITS2
-1)/BN_BITS2))

	)

646 
	#bn_wex∑nd
(
a
,
w‹ds
Ë(((w‹dsË<◊)->
dmax
)?◊):
	`bn_ex∑nd2
(◊),(w‹ds)))

	)

647 
BIGNUM
 *
bn_ex∑nd2
(BIGNUM *
a
, 
w‹ds
);

648 #i‚de‡
OPENSSL_NO_DEPRECATED


649 
BIGNUM
 *
bn_dup_ex∑nd
(c⁄° BIGNUM *
a
, 
w‹ds
);

680 #ifde‡
BN_DEBUG


683 
	~<as£π.h
>

685 #ifde‡
BN_DEBUG_RAND


687 #i‚de‡
RAND_p£udo_byãs


688 
RAND_p£udo_byãs
(*
buf
,
num
);

689 
	#BN_DEBUG_TRIX


	)

691 
	#bn_pﬁluã
(
a
) \

693 c⁄° 
BIGNUM
 *
_bnum1
 = (
a
); \

694 if(
_bnum1
->
t›
 < _bnum1->
dmax
) { \

695 
_tmp_ch¨
; \

699 
BN_ULONG
 *
_nŸ_c⁄°
; \

700 
	`mem˝y
(&
_nŸ_c⁄°
, &
_bnum1
->
d
, (
BN_ULONG
*)); \

701 
	`RAND_p£udo_byãs
(&
_tmp_ch¨
, 1); \

702 
	`mem£t
((*)(
_nŸ_c⁄°
 + 
_bnum1
->
t›
), 
_tmp_ch¨
, \

703 (
_bnum1
->
dmax
 - _bnum1->
t›
Ë* (
BN_ULONG
)); \

705 } 0)

	)

706 #ifde‡
BN_DEBUG_TRIX


707 #unde‡
RAND_p£udo_byãs


710 
	#bn_pﬁluã
(
a
)

	)

712 
	#bn_check_t›
(
a
) \

714 c⁄° 
BIGNUM
 *
_bnum2
 = (
a
); \

715 i‡(
_bnum2
 !
NULL
) { \

716 
	`as£π
((
_bnum2
->
t›
 == 0) || \

717 (
_bnum2
->
d
[_bnum2->
t›
 - 1] != 0)); \

718 
	`bn_pﬁluã
(
_bnum2
); \

720 } 0)

	)

722 
	#bn_fix_t›
(
a
Ë
	`bn_check_t›
◊)

	)

726 
	#bn_pﬁluã
(
a
)

	)

727 
	#bn_check_t›
(
a
)

	)

728 
	#bn_fix_t›
(
a
Ë
	`bn_c‹ª˘_t›
◊)

	)

732 
	#bn_c‹ª˘_t›
(
a
) \

734 
BN_ULONG
 *
·l
; \

735 i‡((
a
)->
t›
 > 0) \

737 
·l
&((
a
)->
d
[◊)->
t›
-1]); (a)->top > 0; (a)->top--) \

738 i‡(*(
·l
--)) ; \

740 
	`bn_pﬁluã
(
a
); \

741 }

	)

743 
BN_ULONG
 
bn_mul_add_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, 
num
, BN_ULONG 
w
);

744 
BN_ULONG
 
bn_mul_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, 
num
, BN_ULONG 
w
);

745 
bn_sqr_w‹ds
(
BN_ULONG
 *
Ω
, c⁄° BN_ULONG *
≠
, 
num
);

746 
BN_ULONG
 
bn_div_w‹ds
(BN_ULONG 
h
, BN_ULONG 
l
, BN_ULONG 
d
);

747 
BN_ULONG
 
bn_add_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, c⁄° BN_ULONG *
bp
,
num
);

748 
BN_ULONG
 
bn_sub_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, c⁄° BN_ULONG *
bp
,
num
);

751 
BIGNUM
 *
gë_rfc2409_¥ime_768
(BIGNUM *
bn
);

752 
BIGNUM
 *
gë_rfc2409_¥ime_1024
(BIGNUM *
bn
);

755 
BIGNUM
 *
gë_rfc3526_¥ime_1536
(BIGNUM *
bn
);

756 
BIGNUM
 *
gë_rfc3526_¥ime_2048
(BIGNUM *
bn
);

757 
BIGNUM
 *
gë_rfc3526_¥ime_3072
(BIGNUM *
bn
);

758 
BIGNUM
 *
gë_rfc3526_¥ime_4096
(BIGNUM *
bn
);

759 
BIGNUM
 *
gë_rfc3526_¥ime_6144
(BIGNUM *
bn
);

760 
BIGNUM
 *
gë_rfc3526_¥ime_8192
(BIGNUM *
bn
);

762 
BN_b¡e°_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
);

768 
ERR_lﬂd_BN_°rögs
();

773 
	#BN_F_BNRAND
 127

	)

774 
	#BN_F_BN_BLINDING_CONVERT_EX
 100

	)

775 
	#BN_F_BN_BLINDING_CREATE_PARAM
 128

	)

776 
	#BN_F_BN_BLINDING_INVERT_EX
 101

	)

777 
	#BN_F_BN_BLINDING_NEW
 102

	)

778 
	#BN_F_BN_BLINDING_UPDATE
 103

	)

779 
	#BN_F_BN_BN2DEC
 104

	)

780 
	#BN_F_BN_BN2HEX
 105

	)

781 
	#BN_F_BN_CTX_GET
 116

	)

782 
	#BN_F_BN_CTX_NEW
 106

	)

783 
	#BN_F_BN_CTX_START
 129

	)

784 
	#BN_F_BN_DIV
 107

	)

785 
	#BN_F_BN_DIV_RECP
 130

	)

786 
	#BN_F_BN_EXP
 123

	)

787 
	#BN_F_BN_EXPAND2
 108

	)

788 
	#BN_F_BN_EXPAND_INTERNAL
 120

	)

789 
	#BN_F_BN_GF2M_MOD
 131

	)

790 
	#BN_F_BN_GF2M_MOD_EXP
 132

	)

791 
	#BN_F_BN_GF2M_MOD_MUL
 133

	)

792 
	#BN_F_BN_GF2M_MOD_SOLVE_QUAD
 134

	)

793 
	#BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR
 135

	)

794 
	#BN_F_BN_GF2M_MOD_SQR
 136

	)

795 
	#BN_F_BN_GF2M_MOD_SQRT
 137

	)

796 
	#BN_F_BN_MOD_EXP2_MONT
 118

	)

797 
	#BN_F_BN_MOD_EXP_MONT
 109

	)

798 
	#BN_F_BN_MOD_EXP_MONT_CONSTTIME
 124

	)

799 
	#BN_F_BN_MOD_EXP_MONT_WORD
 117

	)

800 
	#BN_F_BN_MOD_EXP_RECP
 125

	)

801 
	#BN_F_BN_MOD_EXP_SIMPLE
 126

	)

802 
	#BN_F_BN_MOD_INVERSE
 110

	)

803 
	#BN_F_BN_MOD_LSHIFT_QUICK
 119

	)

804 
	#BN_F_BN_MOD_MUL_RECIPROCAL
 111

	)

805 
	#BN_F_BN_MOD_SQRT
 121

	)

806 
	#BN_F_BN_MPI2BN
 112

	)

807 
	#BN_F_BN_NEW
 113

	)

808 
	#BN_F_BN_RAND
 114

	)

809 
	#BN_F_BN_RAND_RANGE
 122

	)

810 
	#BN_F_BN_USUB
 115

	)

813 
	#BN_R_ARG2_LT_ARG3
 100

	)

814 
	#BN_R_BAD_RECIPROCAL
 101

	)

815 
	#BN_R_BIGNUM_TOO_LONG
 114

	)

816 
	#BN_R_CALLED_WITH_EVEN_MODULUS
 102

	)

817 
	#BN_R_DIV_BY_ZERO
 103

	)

818 
	#BN_R_ENCODING_ERROR
 104

	)

819 
	#BN_R_EXPAND_ON_STATIC_BIGNUM_DATA
 105

	)

820 
	#BN_R_INPUT_NOT_REDUCED
 110

	)

821 
	#BN_R_INVALID_LENGTH
 106

	)

822 
	#BN_R_INVALID_RANGE
 115

	)

823 
	#BN_R_NOT_A_SQUARE
 111

	)

824 
	#BN_R_NOT_INITIALIZED
 107

	)

825 
	#BN_R_NO_INVERSE
 108

	)

826 
	#BN_R_NO_SOLUTION
 116

	)

827 
	#BN_R_P_IS_NOT_PRIME
 112

	)

828 
	#BN_R_TOO_MANY_ITERATIONS
 113

	)

829 
	#BN_R_TOO_MANY_TEMPORARY_VARIABLES
 109

	)

831 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/objects.h

59 #i‚de‡
HEADER_OBJECTS_H


60 
	#HEADER_OBJECTS_H


	)

62 
	#USE_OBJ_MAC


	)

64 #ifde‡
USE_OBJ_MAC


65 
	~<›ís¶/obj_mac.h
>

67 
	#SN_undef
 "UNDEF"

	)

68 
	#LN_undef
 "undeföed"

	)

69 
	#NID_undef
 0

	)

70 
	#OBJ_undef
 0L

	)

72 
	#SN_Alg‹ôhm
 "Alg‹ôhm"

	)

73 
	#LN_Æg‹ôhm
 "Æg‹ôhm"

	)

74 
	#NID_Æg‹ôhm
 38

	)

75 
	#OBJ_Æg‹ôhm
 1L,3L,14L,3L,2L

	)

77 
	#LN_rßdsi
 "rßdsi"

	)

78 
	#NID_rßdsi
 1

	)

79 
	#OBJ_rßdsi
 1L,2L,840L,113549L

	)

81 
	#LN_pkcs
 "pkcs"

	)

82 
	#NID_pkcs
 2

	)

83 
	#OBJ_pkcs
 
OBJ_rßdsi
,1L

	)

85 
	#SN_md2
 "MD2"

	)

86 
	#LN_md2
 "md2"

	)

87 
	#NID_md2
 3

	)

88 
	#OBJ_md2
 
OBJ_rßdsi
,2L,2L

	)

90 
	#SN_md5
 "MD5"

	)

91 
	#LN_md5
 "md5"

	)

92 
	#NID_md5
 4

	)

93 
	#OBJ_md5
 
OBJ_rßdsi
,2L,5L

	)

95 
	#SN_rc4
 "RC4"

	)

96 
	#LN_rc4
 "rc4"

	)

97 
	#NID_rc4
 5

	)

98 
	#OBJ_rc4
 
OBJ_rßdsi
,3L,4L

	)

100 
	#LN_rßEn¸y±i⁄
 "rßEn¸y±i⁄"

	)

101 
	#NID_rßEn¸y±i⁄
 6

	)

102 
	#OBJ_rßEn¸y±i⁄
 
OBJ_pkcs
,1L,1L

	)

104 
	#SN_md2WôhRSAEn¸y±i⁄
 "RSA-MD2"

	)

105 
	#LN_md2WôhRSAEn¸y±i⁄
 "md2WôhRSAEn¸y±i⁄"

	)

106 
	#NID_md2WôhRSAEn¸y±i⁄
 7

	)

107 
	#OBJ_md2WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,2L

	)

109 
	#SN_md5WôhRSAEn¸y±i⁄
 "RSA-MD5"

	)

110 
	#LN_md5WôhRSAEn¸y±i⁄
 "md5WôhRSAEn¸y±i⁄"

	)

111 
	#NID_md5WôhRSAEn¸y±i⁄
 8

	)

112 
	#OBJ_md5WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,4L

	)

114 
	#SN_pbeWôhMD2AndDES_CBC
 "PBE-MD2-DES"

	)

115 
	#LN_pbeWôhMD2AndDES_CBC
 "pbeWôhMD2AndDES-CBC"

	)

116 
	#NID_pbeWôhMD2AndDES_CBC
 9

	)

117 
	#OBJ_pbeWôhMD2AndDES_CBC
 
OBJ_pkcs
,5L,1L

	)

119 
	#SN_pbeWôhMD5AndDES_CBC
 "PBE-MD5-DES"

	)

120 
	#LN_pbeWôhMD5AndDES_CBC
 "pbeWôhMD5AndDES-CBC"

	)

121 
	#NID_pbeWôhMD5AndDES_CBC
 10

	)

122 
	#OBJ_pbeWôhMD5AndDES_CBC
 
OBJ_pkcs
,5L,3L

	)

124 
	#LN_X500
 "X500"

	)

125 
	#NID_X500
 11

	)

126 
	#OBJ_X500
 2L,5L

	)

128 
	#LN_X509
 "X509"

	)

129 
	#NID_X509
 12

	)

130 
	#OBJ_X509
 
OBJ_X500
,4L

	)

132 
	#SN_comm⁄Name
 "CN"

	)

133 
	#LN_comm⁄Name
 "comm⁄Name"

	)

134 
	#NID_comm⁄Name
 13

	)

135 
	#OBJ_comm⁄Name
 
OBJ_X509
,3L

	)

137 
	#SN_cou¡ryName
 "C"

	)

138 
	#LN_cou¡ryName
 "cou¡ryName"

	)

139 
	#NID_cou¡ryName
 14

	)

140 
	#OBJ_cou¡ryName
 
OBJ_X509
,6L

	)

142 
	#SN_loˇlôyName
 "L"

	)

143 
	#LN_loˇlôyName
 "loˇlôyName"

	)

144 
	#NID_loˇlôyName
 15

	)

145 
	#OBJ_loˇlôyName
 
OBJ_X509
,7L

	)

150 
	#SN_°©eOrProvö˚Name
 "ST"

	)

151 
	#LN_°©eOrProvö˚Name
 "°©eOrProvö˚Name"

	)

152 
	#NID_°©eOrProvö˚Name
 16

	)

153 
	#OBJ_°©eOrProvö˚Name
 
OBJ_X509
,8L

	)

155 
	#SN_‹g™iz©i⁄Name
 "O"

	)

156 
	#LN_‹g™iz©i⁄Name
 "‹g™iz©i⁄Name"

	)

157 
	#NID_‹g™iz©i⁄Name
 17

	)

158 
	#OBJ_‹g™iz©i⁄Name
 
OBJ_X509
,10L

	)

160 
	#SN_‹g™iz©i⁄ÆUnôName
 "OU"

	)

161 
	#LN_‹g™iz©i⁄ÆUnôName
 "‹g™iz©i⁄ÆUnôName"

	)

162 
	#NID_‹g™iz©i⁄ÆUnôName
 18

	)

163 
	#OBJ_‹g™iz©i⁄ÆUnôName
 
OBJ_X509
,11L

	)

165 
	#SN_rß
 "RSA"

	)

166 
	#LN_rß
 "rß"

	)

167 
	#NID_rß
 19

	)

168 
	#OBJ_rß
 
OBJ_X500
,8L,1L,1L

	)

170 
	#LN_pkcs7
 "pkcs7"

	)

171 
	#NID_pkcs7
 20

	)

172 
	#OBJ_pkcs7
 
OBJ_pkcs
,7L

	)

174 
	#LN_pkcs7_d©a
 "pkcs7-d©a"

	)

175 
	#NID_pkcs7_d©a
 21

	)

176 
	#OBJ_pkcs7_d©a
 
OBJ_pkcs7
,1L

	)

178 
	#LN_pkcs7_sig√d
 "pkcs7-sig√dD©a"

	)

179 
	#NID_pkcs7_sig√d
 22

	)

180 
	#OBJ_pkcs7_sig√d
 
OBJ_pkcs7
,2L

	)

182 
	#LN_pkcs7_ívñ›ed
 "pkcs7-ívñ›edD©a"

	)

183 
	#NID_pkcs7_ívñ›ed
 23

	)

184 
	#OBJ_pkcs7_ívñ›ed
 
OBJ_pkcs7
,3L

	)

186 
	#LN_pkcs7_sig√dAndEnvñ›ed
 "pkcs7-sig√dAndEnvñ›edD©a"

	)

187 
	#NID_pkcs7_sig√dAndEnvñ›ed
 24

	)

188 
	#OBJ_pkcs7_sig√dAndEnvñ›ed
 
OBJ_pkcs7
,4L

	)

190 
	#LN_pkcs7_dige°
 "pkcs7-dige°D©a"

	)

191 
	#NID_pkcs7_dige°
 25

	)

192 
	#OBJ_pkcs7_dige°
 
OBJ_pkcs7
,5L

	)

194 
	#LN_pkcs7_í¸y±ed
 "pkcs7-í¸y±edD©a"

	)

195 
	#NID_pkcs7_í¸y±ed
 26

	)

196 
	#OBJ_pkcs7_í¸y±ed
 
OBJ_pkcs7
,6L

	)

198 
	#LN_pkcs3
 "pkcs3"

	)

199 
	#NID_pkcs3
 27

	)

200 
	#OBJ_pkcs3
 
OBJ_pkcs
,3L

	)

202 
	#LN_dhKeyAgªemít
 "dhKeyAgªemít"

	)

203 
	#NID_dhKeyAgªemít
 28

	)

204 
	#OBJ_dhKeyAgªemít
 
OBJ_pkcs3
,1L

	)

206 
	#SN_des_ecb
 "DES-ECB"

	)

207 
	#LN_des_ecb
 "des-ecb"

	)

208 
	#NID_des_ecb
 29

	)

209 
	#OBJ_des_ecb
 
OBJ_Æg‹ôhm
,6L

	)

211 
	#SN_des_cfb64
 "DES-CFB"

	)

212 
	#LN_des_cfb64
 "des-cfb"

	)

213 
	#NID_des_cfb64
 30

	)

215 
	#OBJ_des_cfb64
 
OBJ_Æg‹ôhm
,9L

	)

217 
	#SN_des_cbc
 "DES-CBC"

	)

218 
	#LN_des_cbc
 "des-cbc"

	)

219 
	#NID_des_cbc
 31

	)

221 
	#OBJ_des_cbc
 
OBJ_Æg‹ôhm
,7L

	)

223 
	#SN_des_ede
 "DES-EDE"

	)

224 
	#LN_des_ede
 "des-ede"

	)

225 
	#NID_des_ede
 32

	)

227 
	#OBJ_des_ede
 
OBJ_Æg‹ôhm
,17L

	)

229 
	#SN_des_ede3
 "DES-EDE3"

	)

230 
	#LN_des_ede3
 "des-ede3"

	)

231 
	#NID_des_ede3
 33

	)

233 
	#SN_idó_cbc
 "IDEA-CBC"

	)

234 
	#LN_idó_cbc
 "idó-cbc"

	)

235 
	#NID_idó_cbc
 34

	)

236 
	#OBJ_idó_cbc
 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L

	)

238 
	#SN_idó_cfb64
 "IDEA-CFB"

	)

239 
	#LN_idó_cfb64
 "idó-cfb"

	)

240 
	#NID_idó_cfb64
 35

	)

242 
	#SN_idó_ecb
 "IDEA-ECB"

	)

243 
	#LN_idó_ecb
 "idó-ecb"

	)

244 
	#NID_idó_ecb
 36

	)

246 
	#SN_rc2_cbc
 "RC2-CBC"

	)

247 
	#LN_rc2_cbc
 "rc2-cbc"

	)

248 
	#NID_rc2_cbc
 37

	)

249 
	#OBJ_rc2_cbc
 
OBJ_rßdsi
,3L,2L

	)

251 
	#SN_rc2_ecb
 "RC2-ECB"

	)

252 
	#LN_rc2_ecb
 "rc2-ecb"

	)

253 
	#NID_rc2_ecb
 38

	)

255 
	#SN_rc2_cfb64
 "RC2-CFB"

	)

256 
	#LN_rc2_cfb64
 "rc2-cfb"

	)

257 
	#NID_rc2_cfb64
 39

	)

259 
	#SN_rc2_ofb64
 "RC2-OFB"

	)

260 
	#LN_rc2_ofb64
 "rc2-ofb"

	)

261 
	#NID_rc2_ofb64
 40

	)

263 
	#SN_sha
 "SHA"

	)

264 
	#LN_sha
 "sha"

	)

265 
	#NID_sha
 41

	)

266 
	#OBJ_sha
 
OBJ_Æg‹ôhm
,18L

	)

268 
	#SN_shaWôhRSAEn¸y±i⁄
 "RSA-SHA"

	)

269 
	#LN_shaWôhRSAEn¸y±i⁄
 "shaWôhRSAEn¸y±i⁄"

	)

270 
	#NID_shaWôhRSAEn¸y±i⁄
 42

	)

271 
	#OBJ_shaWôhRSAEn¸y±i⁄
 
OBJ_Æg‹ôhm
,15L

	)

273 
	#SN_des_ede_cbc
 "DES-EDE-CBC"

	)

274 
	#LN_des_ede_cbc
 "des-ede-cbc"

	)

275 
	#NID_des_ede_cbc
 43

	)

277 
	#SN_des_ede3_cbc
 "DES-EDE3-CBC"

	)

278 
	#LN_des_ede3_cbc
 "des-ede3-cbc"

	)

279 
	#NID_des_ede3_cbc
 44

	)

280 
	#OBJ_des_ede3_cbc
 
OBJ_rßdsi
,3L,7L

	)

282 
	#SN_des_ofb64
 "DES-OFB"

	)

283 
	#LN_des_ofb64
 "des-ofb"

	)

284 
	#NID_des_ofb64
 45

	)

285 
	#OBJ_des_ofb64
 
OBJ_Æg‹ôhm
,8L

	)

287 
	#SN_idó_ofb64
 "IDEA-OFB"

	)

288 
	#LN_idó_ofb64
 "idó-ofb"

	)

289 
	#NID_idó_ofb64
 46

	)

291 
	#LN_pkcs9
 "pkcs9"

	)

292 
	#NID_pkcs9
 47

	)

293 
	#OBJ_pkcs9
 
OBJ_pkcs
,9L

	)

295 
	#SN_pkcs9_emaûAddªss
 "Emaû"

	)

296 
	#LN_pkcs9_emaûAddªss
 "emaûAddªss"

	)

297 
	#NID_pkcs9_emaûAddªss
 48

	)

298 
	#OBJ_pkcs9_emaûAddªss
 
OBJ_pkcs9
,1L

	)

300 
	#LN_pkcs9_un°ru˘uªdName
 "un°ru˘uªdName"

	)

301 
	#NID_pkcs9_un°ru˘uªdName
 49

	)

302 
	#OBJ_pkcs9_un°ru˘uªdName
 
OBJ_pkcs9
,2L

	)

304 
	#LN_pkcs9_c⁄ã¡Ty≥
 "c⁄ã¡Ty≥"

	)

305 
	#NID_pkcs9_c⁄ã¡Ty≥
 50

	)

306 
	#OBJ_pkcs9_c⁄ã¡Ty≥
 
OBJ_pkcs9
,3L

	)

308 
	#LN_pkcs9_mesßgeDige°
 "mesßgeDige°"

	)

309 
	#NID_pkcs9_mesßgeDige°
 51

	)

310 
	#OBJ_pkcs9_mesßgeDige°
 
OBJ_pkcs9
,4L

	)

312 
	#LN_pkcs9_signögTime
 "signögTime"

	)

313 
	#NID_pkcs9_signögTime
 52

	)

314 
	#OBJ_pkcs9_signögTime
 
OBJ_pkcs9
,5L

	)

316 
	#LN_pkcs9_cou¡îsig«tuª
 "cou¡îsig«tuª"

	)

317 
	#NID_pkcs9_cou¡îsig«tuª
 53

	)

318 
	#OBJ_pkcs9_cou¡îsig«tuª
 
OBJ_pkcs9
,6L

	)

320 
	#LN_pkcs9_chÆÀngePassw‹d
 "chÆÀngePassw‹d"

	)

321 
	#NID_pkcs9_chÆÀngePassw‹d
 54

	)

322 
	#OBJ_pkcs9_chÆÀngePassw‹d
 
OBJ_pkcs9
,7L

	)

324 
	#LN_pkcs9_un°ru˘uªdAddªss
 "un°ru˘uªdAddªss"

	)

325 
	#NID_pkcs9_un°ru˘uªdAddªss
 55

	)

326 
	#OBJ_pkcs9_un°ru˘uªdAddªss
 
OBJ_pkcs9
,8L

	)

328 
	#LN_pkcs9_extCîtAâribuãs
 "exãndedCîtifiˇãAâribuãs"

	)

329 
	#NID_pkcs9_extCîtAâribuãs
 56

	)

330 
	#OBJ_pkcs9_extCîtAâribuãs
 
OBJ_pkcs9
,9L

	)

332 
	#SN_√tsˇ≥
 "Nësˇ≥"

	)

333 
	#LN_√tsˇ≥
 "Nësˇ≥ Communiˇti⁄†C‹p."

	)

334 
	#NID_√tsˇ≥
 57

	)

335 
	#OBJ_√tsˇ≥
 2L,16L,840L,1L,113730L

	)

337 
	#SN_√tsˇ≥_˚π_exãnsi⁄
 "nsCîtExt"

	)

338 
	#LN_√tsˇ≥_˚π_exãnsi⁄
 "Nësˇ≥ Cîtifiˇã Exãnsi⁄"

	)

339 
	#NID_√tsˇ≥_˚π_exãnsi⁄
 58

	)

340 
	#OBJ_√tsˇ≥_˚π_exãnsi⁄
 
OBJ_√tsˇ≥
,1L

	)

342 
	#SN_√tsˇ≥_d©a_ty≥
 "nsD©aTy≥"

	)

343 
	#LN_√tsˇ≥_d©a_ty≥
 "Nësˇ≥ D©®Ty≥"

	)

344 
	#NID_√tsˇ≥_d©a_ty≥
 59

	)

345 
	#OBJ_√tsˇ≥_d©a_ty≥
 
OBJ_√tsˇ≥
,2L

	)

347 
	#SN_des_ede_cfb64
 "DES-EDE-CFB"

	)

348 
	#LN_des_ede_cfb64
 "des-ede-cfb"

	)

349 
	#NID_des_ede_cfb64
 60

	)

351 
	#SN_des_ede3_cfb64
 "DES-EDE3-CFB"

	)

352 
	#LN_des_ede3_cfb64
 "des-ede3-cfb"

	)

353 
	#NID_des_ede3_cfb64
 61

	)

355 
	#SN_des_ede_ofb64
 "DES-EDE-OFB"

	)

356 
	#LN_des_ede_ofb64
 "des-ede-ofb"

	)

357 
	#NID_des_ede_ofb64
 62

	)

359 
	#SN_des_ede3_ofb64
 "DES-EDE3-OFB"

	)

360 
	#LN_des_ede3_ofb64
 "des-ede3-ofb"

	)

361 
	#NID_des_ede3_ofb64
 63

	)

364 
	#SN_sha1
 "SHA1"

	)

365 
	#LN_sha1
 "sha1"

	)

366 
	#NID_sha1
 64

	)

367 
	#OBJ_sha1
 
OBJ_Æg‹ôhm
,26L

	)

371 
	#SN_sha1WôhRSAEn¸y±i⁄
 "RSA-SHA1"

	)

372 
	#LN_sha1WôhRSAEn¸y±i⁄
 "sha1WôhRSAEn¸y±i⁄"

	)

373 
	#NID_sha1WôhRSAEn¸y±i⁄
 65

	)

374 
	#OBJ_sha1WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,5L

	)

376 
	#SN_dßWôhSHA
 "DSA-SHA"

	)

377 
	#LN_dßWôhSHA
 "dßWôhSHA"

	)

378 
	#NID_dßWôhSHA
 66

	)

379 
	#OBJ_dßWôhSHA
 
OBJ_Æg‹ôhm
,13L

	)

381 
	#SN_dß_2
 "DSA-ﬁd"

	)

382 
	#LN_dß_2
 "dßEn¸y±i⁄-ﬁd"

	)

383 
	#NID_dß_2
 67

	)

384 
	#OBJ_dß_2
 
OBJ_Æg‹ôhm
,12L

	)

387 
	#SN_pbeWôhSHA1AndRC2_CBC
 "PBE-SHA1-RC2-64"

	)

388 
	#LN_pbeWôhSHA1AndRC2_CBC
 "pbeWôhSHA1AndRC2-CBC"

	)

389 
	#NID_pbeWôhSHA1AndRC2_CBC
 68

	)

390 
	#OBJ_pbeWôhSHA1AndRC2_CBC
 
OBJ_pkcs
,5L,11L

	)

396 
	#LN_id_pbkdf2
 "PBKDF2"

	)

397 
	#NID_id_pbkdf2
 69

	)

398 
	#OBJ_id_pbkdf2
 
OBJ_pkcs
,5L,12L

	)

400 
	#SN_dßWôhSHA1_2
 "DSA-SHA1-ﬁd"

	)

401 
	#LN_dßWôhSHA1_2
 "dßWôhSHA1-ﬁd"

	)

402 
	#NID_dßWôhSHA1_2
 70

	)

404 
	#OBJ_dßWôhSHA1_2
 
OBJ_Æg‹ôhm
,27L

	)

406 
	#SN_√tsˇ≥_˚π_ty≥
 "nsCîtTy≥"

	)

407 
	#LN_√tsˇ≥_˚π_ty≥
 "Nësˇ≥ CîàTy≥"

	)

408 
	#NID_√tsˇ≥_˚π_ty≥
 71

	)

409 
	#OBJ_√tsˇ≥_˚π_ty≥
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,1L

	)

411 
	#SN_√tsˇ≥_ba£_uæ
 "nsBa£Uæ"

	)

412 
	#LN_√tsˇ≥_ba£_uæ
 "Nësˇ≥ Ba£ Uæ"

	)

413 
	#NID_√tsˇ≥_ba£_uæ
 72

	)

414 
	#OBJ_√tsˇ≥_ba£_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,2L

	)

416 
	#SN_√tsˇ≥_ªvoˇti⁄_uæ
 "nsRevoˇti⁄Uæ"

	)

417 
	#LN_√tsˇ≥_ªvoˇti⁄_uæ
 "Nësˇ≥ Revoˇti⁄ Uæ"

	)

418 
	#NID_√tsˇ≥_ªvoˇti⁄_uæ
 73

	)

419 
	#OBJ_√tsˇ≥_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,3L

	)

421 
	#SN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "nsCaRevoˇti⁄Uæ"

	)

422 
	#LN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "Nësˇ≥ CA Revoˇti⁄ Uæ"

	)

423 
	#NID_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 74

	)

424 
	#OBJ_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,4L

	)

426 
	#SN_√tsˇ≥_ª√wÆ_uæ
 "nsRíewÆUæ"

	)

427 
	#LN_√tsˇ≥_ª√wÆ_uæ
 "Nësˇ≥ RíewÆ Uæ"

	)

428 
	#NID_√tsˇ≥_ª√wÆ_uæ
 75

	)

429 
	#OBJ_√tsˇ≥_ª√wÆ_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,7L

	)

431 
	#SN_√tsˇ≥_ˇ_pﬁicy_uæ
 "nsCaPﬁicyUæ"

	)

432 
	#LN_√tsˇ≥_ˇ_pﬁicy_uæ
 "Nësˇ≥ CA Pﬁicy Uæ"

	)

433 
	#NID_√tsˇ≥_ˇ_pﬁicy_uæ
 76

	)

434 
	#OBJ_√tsˇ≥_ˇ_pﬁicy_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,8L

	)

436 
	#SN_√tsˇ≥_s¶_£rvî_«me
 "nsS¶SîvîName"

	)

437 
	#LN_√tsˇ≥_s¶_£rvî_«me
 "Nësˇ≥ SSL Sîvî Name"

	)

438 
	#NID_√tsˇ≥_s¶_£rvî_«me
 77

	)

439 
	#OBJ_√tsˇ≥_s¶_£rvî_«me
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,12L

	)

441 
	#SN_√tsˇ≥_commít
 "nsCommít"

	)

442 
	#LN_√tsˇ≥_commít
 "Nësˇ≥ Commít"

	)

443 
	#NID_√tsˇ≥_commít
 78

	)

444 
	#OBJ_√tsˇ≥_commít
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,13L

	)

446 
	#SN_√tsˇ≥_˚π_£quí˚
 "nsCîtSequí˚"

	)

447 
	#LN_√tsˇ≥_˚π_£quí˚
 "Nësˇ≥ Cîtifiˇã Sequí˚"

	)

448 
	#NID_√tsˇ≥_˚π_£quí˚
 79

	)

449 
	#OBJ_√tsˇ≥_˚π_£quí˚
 
OBJ_√tsˇ≥_d©a_ty≥
,5L

	)

451 
	#SN_desx_cbc
 "DESX-CBC"

	)

452 
	#LN_desx_cbc
 "desx-cbc"

	)

453 
	#NID_desx_cbc
 80

	)

455 
	#SN_id_˚
 "id-˚"

	)

456 
	#NID_id_˚
 81

	)

457 
	#OBJ_id_˚
 2L,5L,29L

	)

459 
	#SN_subje˘_key_idítifõr
 "subje˘KeyIdítifõr"

	)

460 
	#LN_subje˘_key_idítifõr
 "X509v3 Subje˘ Key Idítifõr"

	)

461 
	#NID_subje˘_key_idítifõr
 82

	)

462 
	#OBJ_subje˘_key_idítifõr
 
OBJ_id_˚
,14L

	)

464 
	#SN_key_ußge
 "keyUßge"

	)

465 
	#LN_key_ußge
 "X509v3 Key Ußge"

	)

466 
	#NID_key_ußge
 83

	)

467 
	#OBJ_key_ußge
 
OBJ_id_˚
,15L

	)

469 
	#SN_¥iv©e_key_ußge_≥riod
 "¥iv©eKeyUßgePîiod"

	)

470 
	#LN_¥iv©e_key_ußge_≥riod
 "X509v3 Priv©êKey UßgêPîiod"

	)

471 
	#NID_¥iv©e_key_ußge_≥riod
 84

	)

472 
	#OBJ_¥iv©e_key_ußge_≥riod
 
OBJ_id_˚
,16L

	)

474 
	#SN_subje˘_Æt_«me
 "subje˘A…Name"

	)

475 
	#LN_subje˘_Æt_«me
 "X509v3 Subje˘ A…î«tivêName"

	)

476 
	#NID_subje˘_Æt_«me
 85

	)

477 
	#OBJ_subje˘_Æt_«me
 
OBJ_id_˚
,17L

	)

479 
	#SN_issuî_Æt_«me
 "issuîA…Name"

	)

480 
	#LN_issuî_Æt_«me
 "X509v3 Issuî A…î«tivêName"

	)

481 
	#NID_issuî_Æt_«me
 86

	)

482 
	#OBJ_issuî_Æt_«me
 
OBJ_id_˚
,18L

	)

484 
	#SN_basic_c⁄°øöts
 "basicC⁄°øöts"

	)

485 
	#LN_basic_c⁄°øöts
 "X509v3 Basi¯C⁄°øöts"

	)

486 
	#NID_basic_c⁄°øöts
 87

	)

487 
	#OBJ_basic_c⁄°øöts
 
OBJ_id_˚
,19L

	)

489 
	#SN_¸l_numbî
 "¸lNumbî"

	)

490 
	#LN_¸l_numbî
 "X509v3 CRL Numbî"

	)

491 
	#NID_¸l_numbî
 88

	)

492 
	#OBJ_¸l_numbî
 
OBJ_id_˚
,20L

	)

494 
	#SN_˚πifiˇã_pﬁicõs
 "˚πifiˇãPﬁicõs"

	)

495 
	#LN_˚πifiˇã_pﬁicõs
 "X509v3 Cîtifiˇã Pﬁicõs"

	)

496 
	#NID_˚πifiˇã_pﬁicõs
 89

	)

497 
	#OBJ_˚πifiˇã_pﬁicõs
 
OBJ_id_˚
,32L

	)

499 
	#SN_auth‹ôy_key_idítifõr
 "auth‹ôyKeyIdítifõr"

	)

500 
	#LN_auth‹ôy_key_idítifõr
 "X509v3 Auth‹ôy Key Idítifõr"

	)

501 
	#NID_auth‹ôy_key_idítifõr
 90

	)

502 
	#OBJ_auth‹ôy_key_idítifõr
 
OBJ_id_˚
,35L

	)

504 
	#SN_bf_cbc
 "BF-CBC"

	)

505 
	#LN_bf_cbc
 "bf-cbc"

	)

506 
	#NID_bf_cbc
 91

	)

507 
	#OBJ_bf_cbc
 1L,3L,6L,1L,4L,1L,3029L,1L,2L

	)

509 
	#SN_bf_ecb
 "BF-ECB"

	)

510 
	#LN_bf_ecb
 "bf-ecb"

	)

511 
	#NID_bf_ecb
 92

	)

513 
	#SN_bf_cfb64
 "BF-CFB"

	)

514 
	#LN_bf_cfb64
 "bf-cfb"

	)

515 
	#NID_bf_cfb64
 93

	)

517 
	#SN_bf_ofb64
 "BF-OFB"

	)

518 
	#LN_bf_ofb64
 "bf-ofb"

	)

519 
	#NID_bf_ofb64
 94

	)

521 
	#SN_mdc2
 "MDC2"

	)

522 
	#LN_mdc2
 "mdc2"

	)

523 
	#NID_mdc2
 95

	)

524 
	#OBJ_mdc2
 2L,5L,8L,3L,101L

	)

527 
	#SN_mdc2WôhRSA
 "RSA-MDC2"

	)

528 
	#LN_mdc2WôhRSA
 "mdc2wôhRSA"

	)

529 
	#NID_mdc2WôhRSA
 96

	)

530 
	#OBJ_mdc2WôhRSA
 2L,5L,8L,3L,100L

	)

532 
	#SN_rc4_40
 "RC4-40"

	)

533 
	#LN_rc4_40
 "rc4-40"

	)

534 
	#NID_rc4_40
 97

	)

536 
	#SN_rc2_40_cbc
 "RC2-40-CBC"

	)

537 
	#LN_rc2_40_cbc
 "rc2-40-cbc"

	)

538 
	#NID_rc2_40_cbc
 98

	)

540 
	#SN_givíName
 "G"

	)

541 
	#LN_givíName
 "givíName"

	)

542 
	#NID_givíName
 99

	)

543 
	#OBJ_givíName
 
OBJ_X509
,42L

	)

545 
	#SN_su∫ame
 "S"

	)

546 
	#LN_su∫ame
 "su∫ame"

	)

547 
	#NID_su∫ame
 100

	)

548 
	#OBJ_su∫ame
 
OBJ_X509
,4L

	)

550 
	#SN_öôüls
 "I"

	)

551 
	#LN_öôüls
 "öôüls"

	)

552 
	#NID_öôüls
 101

	)

553 
	#OBJ_öôüls
 
OBJ_X509
,43L

	)

555 
	#SN_uniqueIdítifõr
 "UID"

	)

556 
	#LN_uniqueIdítifõr
 "uniqueIdítifõr"

	)

557 
	#NID_uniqueIdítifõr
 102

	)

558 
	#OBJ_uniqueIdítifõr
 
OBJ_X509
,45L

	)

560 
	#SN_¸l_di°ributi⁄_poöts
 "¸lDi°ributi⁄Poöts"

	)

561 
	#LN_¸l_di°ributi⁄_poöts
 "X509v3 CRL Di°ributi⁄ Poöts"

	)

562 
	#NID_¸l_di°ributi⁄_poöts
 103

	)

563 
	#OBJ_¸l_di°ributi⁄_poöts
 
OBJ_id_˚
,31L

	)

565 
	#SN_md5WôhRSA
 "RSA-NP-MD5"

	)

566 
	#LN_md5WôhRSA
 "md5WôhRSA"

	)

567 
	#NID_md5WôhRSA
 104

	)

568 
	#OBJ_md5WôhRSA
 
OBJ_Æg‹ôhm
,3L

	)

570 
	#SN_£rülNumbî
 "SN"

	)

571 
	#LN_£rülNumbî
 "£rülNumbî"

	)

572 
	#NID_£rülNumbî
 105

	)

573 
	#OBJ_£rülNumbî
 
OBJ_X509
,5L

	)

575 
	#SN_tôÀ
 "T"

	)

576 
	#LN_tôÀ
 "tôÀ"

	)

577 
	#NID_tôÀ
 106

	)

578 
	#OBJ_tôÀ
 
OBJ_X509
,12L

	)

580 
	#SN_des¸ùti⁄
 "D"

	)

581 
	#LN_des¸ùti⁄
 "des¸ùti⁄"

	)

582 
	#NID_des¸ùti⁄
 107

	)

583 
	#OBJ_des¸ùti⁄
 
OBJ_X509
,13L

	)

586 
	#SN_ˇ°5_cbc
 "CAST5-CBC"

	)

587 
	#LN_ˇ°5_cbc
 "ˇ°5-cbc"

	)

588 
	#NID_ˇ°5_cbc
 108

	)

589 
	#OBJ_ˇ°5_cbc
 1L,2L,840L,113533L,7L,66L,10L

	)

591 
	#SN_ˇ°5_ecb
 "CAST5-ECB"

	)

592 
	#LN_ˇ°5_ecb
 "ˇ°5-ecb"

	)

593 
	#NID_ˇ°5_ecb
 109

	)

595 
	#SN_ˇ°5_cfb64
 "CAST5-CFB"

	)

596 
	#LN_ˇ°5_cfb64
 "ˇ°5-cfb"

	)

597 
	#NID_ˇ°5_cfb64
 110

	)

599 
	#SN_ˇ°5_ofb64
 "CAST5-OFB"

	)

600 
	#LN_ˇ°5_ofb64
 "ˇ°5-ofb"

	)

601 
	#NID_ˇ°5_ofb64
 111

	)

603 
	#LN_pbeWôhMD5AndCa°5_CBC
 "pbeWôhMD5AndCa°5CBC"

	)

604 
	#NID_pbeWôhMD5AndCa°5_CBC
 112

	)

605 
	#OBJ_pbeWôhMD5AndCa°5_CBC
 1L,2L,840L,113533L,7L,66L,12L

	)

611 
	#SN_dßWôhSHA1
 "DSA-SHA1"

	)

612 
	#LN_dßWôhSHA1
 "dßWôhSHA1"

	)

613 
	#NID_dßWôhSHA1
 113

	)

614 
	#OBJ_dßWôhSHA1
 1L,2L,840L,10040L,4L,3L

	)

616 
	#NID_md5_sha1
 114

	)

617 
	#SN_md5_sha1
 "MD5-SHA1"

	)

618 
	#LN_md5_sha1
 "md5-sha1"

	)

620 
	#SN_sha1WôhRSA
 "RSA-SHA1-2"

	)

621 
	#LN_sha1WôhRSA
 "sha1WôhRSA"

	)

622 
	#NID_sha1WôhRSA
 115

	)

623 
	#OBJ_sha1WôhRSA
 
OBJ_Æg‹ôhm
,29L

	)

625 
	#SN_dß
 "DSA"

	)

626 
	#LN_dß
 "dßEn¸y±i⁄"

	)

627 
	#NID_dß
 116

	)

628 
	#OBJ_dß
 1L,2L,840L,10040L,4L,1L

	)

630 
	#SN_rùemd160
 "RIPEMD160"

	)

631 
	#LN_rùemd160
 "rùemd160"

	)

632 
	#NID_rùemd160
 117

	)

633 
	#OBJ_rùemd160
 1L,3L,36L,3L,2L,1L

	)

637 
	#SN_rùemd160WôhRSA
 "RSA-RIPEMD160"

	)

638 
	#LN_rùemd160WôhRSA
 "rùemd160WôhRSA"

	)

639 
	#NID_rùemd160WôhRSA
 119

	)

640 
	#OBJ_rùemd160WôhRSA
 1L,3L,36L,3L,3L,1L,2L

	)

650 
	#SN_rc5_cbc
 "RC5-CBC"

	)

651 
	#LN_rc5_cbc
 "rc5-cbc"

	)

652 
	#NID_rc5_cbc
 120

	)

653 
	#OBJ_rc5_cbc
 
OBJ_rßdsi
,3L,8L

	)

655 
	#SN_rc5_ecb
 "RC5-ECB"

	)

656 
	#LN_rc5_ecb
 "rc5-ecb"

	)

657 
	#NID_rc5_ecb
 121

	)

659 
	#SN_rc5_cfb64
 "RC5-CFB"

	)

660 
	#LN_rc5_cfb64
 "rc5-cfb"

	)

661 
	#NID_rc5_cfb64
 122

	)

663 
	#SN_rc5_ofb64
 "RC5-OFB"

	)

664 
	#LN_rc5_ofb64
 "rc5-ofb"

	)

665 
	#NID_rc5_ofb64
 123

	)

667 
	#SN_æe_com¥essi⁄
 "RLE"

	)

668 
	#LN_æe_com¥essi⁄
 "ru¿Àngth com¥essi⁄"

	)

669 
	#NID_æe_com¥essi⁄
 124

	)

670 
	#OBJ_æe_com¥essi⁄
 1L,1L,1L,1L,666L,1L

	)

672 
	#SN_zlib_com¥essi⁄
 "ZLIB"

	)

673 
	#LN_zlib_com¥essi⁄
 "zlib com¥essi⁄"

	)

674 
	#NID_zlib_com¥essi⁄
 125

	)

675 
	#OBJ_zlib_com¥essi⁄
 1L,1L,1L,1L,666L,2L

	)

677 
	#SN_ext_key_ußge
 "exãndedKeyUßge"

	)

678 
	#LN_ext_key_ußge
 "X509v3 Exãnded Key Ußge"

	)

679 
	#NID_ext_key_ußge
 126

	)

680 
	#OBJ_ext_key_ußge
 
OBJ_id_˚
,37

	)

682 
	#SN_id_pkix
 "PKIX"

	)

683 
	#NID_id_pkix
 127

	)

684 
	#OBJ_id_pkix
 1L,3L,6L,1L,5L,5L,7L

	)

686 
	#SN_id_kp
 "id-kp"

	)

687 
	#NID_id_kp
 128

	)

688 
	#OBJ_id_kp
 
OBJ_id_pkix
,3L

	)

692 
	#SN_£rvî_auth
 "£rvîAuth"

	)

693 
	#LN_£rvî_auth
 "TLS Web Sîvî Authítiˇti⁄"

	)

694 
	#NID_£rvî_auth
 129

	)

695 
	#OBJ_£rvî_auth
 
OBJ_id_kp
,1L

	)

697 
	#SN_˛õ¡_auth
 "˛õ¡Auth"

	)

698 
	#LN_˛õ¡_auth
 "TLS Web Clõ¡ Authítiˇti⁄"

	)

699 
	#NID_˛õ¡_auth
 130

	)

700 
	#OBJ_˛õ¡_auth
 
OBJ_id_kp
,2L

	)

702 
	#SN_code_sign
 "codeSignög"

	)

703 
	#LN_code_sign
 "CodêSignög"

	)

704 
	#NID_code_sign
 131

	)

705 
	#OBJ_code_sign
 
OBJ_id_kp
,3L

	)

707 
	#SN_emaû_¥Ÿe˘
 "emaûPrŸe˘i⁄"

	)

708 
	#LN_emaû_¥Ÿe˘
 "E-maû PrŸe˘i⁄"

	)

709 
	#NID_emaû_¥Ÿe˘
 132

	)

710 
	#OBJ_emaû_¥Ÿe˘
 
OBJ_id_kp
,4L

	)

712 
	#SN_time_°amp
 "timeSèmpög"

	)

713 
	#LN_time_°amp
 "TimêSèmpög"

	)

714 
	#NID_time_°amp
 133

	)

715 
	#OBJ_time_°amp
 
OBJ_id_kp
,8L

	)

719 
	#SN_ms_code_öd
 "msCodeInd"

	)

720 
	#LN_ms_code_öd
 "Mi¸oso· IndividuÆ CodêSignög"

	)

721 
	#NID_ms_code_öd
 134

	)

722 
	#OBJ_ms_code_öd
 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L

	)

724 
	#SN_ms_code_com
 "msCodeCom"

	)

725 
	#LN_ms_code_com
 "Mi¸oso· Commîcü»CodêSignög"

	)

726 
	#NID_ms_code_com
 135

	)

727 
	#OBJ_ms_code_com
 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L

	)

729 
	#SN_ms_˘l_sign
 "msCTLSign"

	)

730 
	#LN_ms_˘l_sign
 "Mi¸oso· Tru° Li° Signög"

	)

731 
	#NID_ms_˘l_sign
 136

	)

732 
	#OBJ_ms_˘l_sign
 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L

	)

734 
	#SN_ms_sgc
 "msSGC"

	)

735 
	#LN_ms_sgc
 "Mi¸oso· Sîvî G©ed Cry±o"

	)

736 
	#NID_ms_sgc
 137

	)

737 
	#OBJ_ms_sgc
 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L

	)

739 
	#SN_ms_efs
 "msEFS"

	)

740 
	#LN_ms_efs
 "Mi¸oso· En¸y±ed FûêSy°em"

	)

741 
	#NID_ms_efs
 138

	)

742 
	#OBJ_ms_efs
 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L

	)

746 
	#SN_ns_sgc
 "nsSGC"

	)

747 
	#LN_ns_sgc
 "Nësˇ≥ Sîvî G©ed Cry±o"

	)

748 
	#NID_ns_sgc
 139

	)

749 
	#OBJ_ns_sgc
 
OBJ_√tsˇ≥
,4L,1L

	)

751 
	#SN_dñè_¸l
 "dñèCRL"

	)

752 
	#LN_dñè_¸l
 "X509v3 Dñè CRL Indiˇt‹"

	)

753 
	#NID_dñè_¸l
 140

	)

754 
	#OBJ_dñè_¸l
 
OBJ_id_˚
,27L

	)

756 
	#SN_¸l_ªas⁄
 "CRLRós⁄"

	)

757 
	#LN_¸l_ªas⁄
 "CRL Rós⁄ Code"

	)

758 
	#NID_¸l_ªas⁄
 141

	)

759 
	#OBJ_¸l_ªas⁄
 
OBJ_id_˚
,21L

	)

761 
	#SN_övÆidôy_d©e
 "övÆidôyD©e"

	)

762 
	#LN_övÆidôy_d©e
 "InvÆidôy D©e"

	)

763 
	#NID_övÆidôy_d©e
 142

	)

764 
	#OBJ_övÆidôy_d©e
 
OBJ_id_˚
,24L

	)

766 
	#SN_sx√t
 "SXNëID"

	)

767 
	#LN_sx√t
 "Så⁄g Exå™ë ID"

	)

768 
	#NID_sx√t
 143

	)

769 
	#OBJ_sx√t
 1L,3L,101L,1L,4L,1L

	)

773 
	#OBJ_pkcs12
 
OBJ_pkcs
,12L

	)

774 
	#OBJ_pkcs12_pbeids
 
OBJ_pkcs12
, 1

	)

776 
	#SN_pbe_WôhSHA1And128BôRC4
 "PBE-SHA1-RC4-128"

	)

777 
	#LN_pbe_WôhSHA1And128BôRC4
 "pbeWôhSHA1And128BôRC4"

	)

778 
	#NID_pbe_WôhSHA1And128BôRC4
 144

	)

779 
	#OBJ_pbe_WôhSHA1And128BôRC4
 
OBJ_pkcs12_pbeids
, 1L

	)

781 
	#SN_pbe_WôhSHA1And40BôRC4
 "PBE-SHA1-RC4-40"

	)

782 
	#LN_pbe_WôhSHA1And40BôRC4
 "pbeWôhSHA1And40BôRC4"

	)

783 
	#NID_pbe_WôhSHA1And40BôRC4
 145

	)

784 
	#OBJ_pbe_WôhSHA1And40BôRC4
 
OBJ_pkcs12_pbeids
, 2L

	)

786 
	#SN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "PBE-SHA1-3DES"

	)

787 
	#LN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "pbeWôhSHA1And3-KeyTrùÀDES-CBC"

	)

788 
	#NID_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 146

	)

789 
	#OBJ_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
, 3L

	)

791 
	#SN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "PBE-SHA1-2DES"

	)

792 
	#LN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "pbeWôhSHA1And2-KeyTrùÀDES-CBC"

	)

793 
	#NID_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 147

	)

794 
	#OBJ_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
, 4L

	)

796 
	#SN_pbe_WôhSHA1And128BôRC2_CBC
 "PBE-SHA1-RC2-128"

	)

797 
	#LN_pbe_WôhSHA1And128BôRC2_CBC
 "pbeWôhSHA1And128BôRC2-CBC"

	)

798 
	#NID_pbe_WôhSHA1And128BôRC2_CBC
 148

	)

799 
	#OBJ_pbe_WôhSHA1And128BôRC2_CBC
 
OBJ_pkcs12_pbeids
, 5L

	)

801 
	#SN_pbe_WôhSHA1And40BôRC2_CBC
 "PBE-SHA1-RC2-40"

	)

802 
	#LN_pbe_WôhSHA1And40BôRC2_CBC
 "pbeWôhSHA1And40BôRC2-CBC"

	)

803 
	#NID_pbe_WôhSHA1And40BôRC2_CBC
 149

	)

804 
	#OBJ_pbe_WôhSHA1And40BôRC2_CBC
 
OBJ_pkcs12_pbeids
, 6L

	)

806 
	#OBJ_pkcs12_Vîsi⁄1
 
OBJ_pkcs12
, 10L

	)

808 
	#OBJ_pkcs12_BagIds
 
OBJ_pkcs12_Vîsi⁄1
, 1L

	)

810 
	#LN_keyBag
 "keyBag"

	)

811 
	#NID_keyBag
 150

	)

812 
	#OBJ_keyBag
 
OBJ_pkcs12_BagIds
, 1L

	)

814 
	#LN_pkcs8ShroudedKeyBag
 "pkcs8ShroudedKeyBag"

	)

815 
	#NID_pkcs8ShroudedKeyBag
 151

	)

816 
	#OBJ_pkcs8ShroudedKeyBag
 
OBJ_pkcs12_BagIds
, 2L

	)

818 
	#LN_˚πBag
 "˚πBag"

	)

819 
	#NID_˚πBag
 152

	)

820 
	#OBJ_˚πBag
 
OBJ_pkcs12_BagIds
, 3L

	)

822 
	#LN_¸lBag
 "¸lBag"

	)

823 
	#NID_¸lBag
 153

	)

824 
	#OBJ_¸lBag
 
OBJ_pkcs12_BagIds
, 4L

	)

826 
	#LN_£¸ëBag
 "£¸ëBag"

	)

827 
	#NID_£¸ëBag
 154

	)

828 
	#OBJ_£¸ëBag
 
OBJ_pkcs12_BagIds
, 5L

	)

830 
	#LN_ß„C⁄ã¡sBag
 "ß„C⁄ã¡sBag"

	)

831 
	#NID_ß„C⁄ã¡sBag
 155

	)

832 
	#OBJ_ß„C⁄ã¡sBag
 
OBJ_pkcs12_BagIds
, 6L

	)

834 
	#LN_‰õndlyName
 "‰õndlyName"

	)

835 
	#NID_‰õndlyName
 156

	)

836 
	#OBJ_‰õndlyName
 
OBJ_pkcs9
, 20L

	)

838 
	#LN_loˇlKeyID
 "loˇlKeyID"

	)

839 
	#NID_loˇlKeyID
 157

	)

840 
	#OBJ_loˇlKeyID
 
OBJ_pkcs9
, 21L

	)

842 
	#OBJ_˚πTy≥s
 
OBJ_pkcs9
, 22L

	)

844 
	#LN_x509Cîtifiˇã
 "x509Cîtifiˇã"

	)

845 
	#NID_x509Cîtifiˇã
 158

	)

846 
	#OBJ_x509Cîtifiˇã
 
OBJ_˚πTy≥s
, 1L

	)

848 
	#LN_sdsiCîtifiˇã
 "sdsiCîtifiˇã"

	)

849 
	#NID_sdsiCîtifiˇã
 159

	)

850 
	#OBJ_sdsiCîtifiˇã
 
OBJ_˚πTy≥s
, 2L

	)

852 
	#OBJ_¸lTy≥s
 
OBJ_pkcs9
, 23L

	)

854 
	#LN_x509Cæ
 "x509Cæ"

	)

855 
	#NID_x509Cæ
 160

	)

856 
	#OBJ_x509Cæ
 
OBJ_¸lTy≥s
, 1L

	)

860 
	#LN_pbes2
 "PBES2"

	)

861 
	#NID_pbes2
 161

	)

862 
	#OBJ_pbes2
 
OBJ_pkcs
,5L,13L

	)

864 
	#LN_pbmac1
 "PBMAC1"

	)

865 
	#NID_pbmac1
 162

	)

866 
	#OBJ_pbmac1
 
OBJ_pkcs
,5L,14L

	)

868 
	#LN_hmacWôhSHA1
 "hmacWôhSHA1"

	)

869 
	#NID_hmacWôhSHA1
 163

	)

870 
	#OBJ_hmacWôhSHA1
 
OBJ_rßdsi
,2L,7L

	)

874 
	#LN_id_qt_˝s
 "Pﬁicy QuÆifõ∏CPS"

	)

875 
	#SN_id_qt_˝s
 "id-qt-˝s"

	)

876 
	#NID_id_qt_˝s
 164

	)

877 
	#OBJ_id_qt_˝s
 
OBJ_id_pkix
,2L,1L

	)

879 
	#LN_id_qt_unŸi˚
 "Pﬁicy QuÆifõ∏U£∏NŸi˚"

	)

880 
	#SN_id_qt_unŸi˚
 "id-qt-unŸi˚"

	)

881 
	#NID_id_qt_unŸi˚
 165

	)

882 
	#OBJ_id_qt_unŸi˚
 
OBJ_id_pkix
,2L,2L

	)

884 
	#SN_rc2_64_cbc
 "RC2-64-CBC"

	)

885 
	#LN_rc2_64_cbc
 "rc2-64-cbc"

	)

886 
	#NID_rc2_64_cbc
 166

	)

888 
	#SN_SMIMEC≠abûôõs
 "SMIME-CAPS"

	)

889 
	#LN_SMIMEC≠abûôõs
 "S/MIME C≠abûôõs"

	)

890 
	#NID_SMIMEC≠abûôõs
 167

	)

891 
	#OBJ_SMIMEC≠abûôõs
 
OBJ_pkcs9
,15L

	)

893 
	#SN_pbeWôhMD2AndRC2_CBC
 "PBE-MD2-RC2-64"

	)

894 
	#LN_pbeWôhMD2AndRC2_CBC
 "pbeWôhMD2AndRC2-CBC"

	)

895 
	#NID_pbeWôhMD2AndRC2_CBC
 168

	)

896 
	#OBJ_pbeWôhMD2AndRC2_CBC
 
OBJ_pkcs
,5L,4L

	)

898 
	#SN_pbeWôhMD5AndRC2_CBC
 "PBE-MD5-RC2-64"

	)

899 
	#LN_pbeWôhMD5AndRC2_CBC
 "pbeWôhMD5AndRC2-CBC"

	)

900 
	#NID_pbeWôhMD5AndRC2_CBC
 169

	)

901 
	#OBJ_pbeWôhMD5AndRC2_CBC
 
OBJ_pkcs
,5L,6L

	)

903 
	#SN_pbeWôhSHA1AndDES_CBC
 "PBE-SHA1-DES"

	)

904 
	#LN_pbeWôhSHA1AndDES_CBC
 "pbeWôhSHA1AndDES-CBC"

	)

905 
	#NID_pbeWôhSHA1AndDES_CBC
 170

	)

906 
	#OBJ_pbeWôhSHA1AndDES_CBC
 
OBJ_pkcs
,5L,10L

	)

910 
	#LN_ms_ext_ªq
 "Mi¸oso· Exãnsi⁄ Reque°"

	)

911 
	#SN_ms_ext_ªq
 "msExtReq"

	)

912 
	#NID_ms_ext_ªq
 171

	)

913 
	#OBJ_ms_ext_ªq
 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L

	)

915 
	#LN_ext_ªq
 "Exãnsi⁄ Reque°"

	)

916 
	#SN_ext_ªq
 "extReq"

	)

917 
	#NID_ext_ªq
 172

	)

918 
	#OBJ_ext_ªq
 
OBJ_pkcs9
,14L

	)

920 
	#SN_«me
 "«me"

	)

921 
	#LN_«me
 "«me"

	)

922 
	#NID_«me
 173

	)

923 
	#OBJ_«me
 
OBJ_X509
,41L

	)

925 
	#SN_dnQuÆifõr
 "dnQuÆifõr"

	)

926 
	#LN_dnQuÆifõr
 "dnQuÆifõr"

	)

927 
	#NID_dnQuÆifõr
 174

	)

928 
	#OBJ_dnQuÆifõr
 
OBJ_X509
,46L

	)

930 
	#SN_id_≥
 "id-≥"

	)

931 
	#NID_id_≥
 175

	)

932 
	#OBJ_id_≥
 
OBJ_id_pkix
,1L

	)

934 
	#SN_id_ad
 "id-ad"

	)

935 
	#NID_id_ad
 176

	)

936 
	#OBJ_id_ad
 
OBJ_id_pkix
,48L

	)

938 
	#SN_öfo_ac˚ss
 "auth‹ôyInfoAc˚ss"

	)

939 
	#LN_öfo_ac˚ss
 "Auth‹ôy Inf‹m©i⁄ Ac˚ss"

	)

940 
	#NID_öfo_ac˚ss
 177

	)

941 
	#OBJ_öfo_ac˚ss
 
OBJ_id_≥
,1L

	)

943 
	#SN_ad_OCSP
 "OCSP"

	)

944 
	#LN_ad_OCSP
 "OCSP"

	)

945 
	#NID_ad_OCSP
 178

	)

946 
	#OBJ_ad_OCSP
 
OBJ_id_ad
,1L

	)

948 
	#SN_ad_ˇ_issuîs
 "ˇIssuîs"

	)

949 
	#LN_ad_ˇ_issuîs
 "CA Issuîs"

	)

950 
	#NID_ad_ˇ_issuîs
 179

	)

951 
	#OBJ_ad_ˇ_issuîs
 
OBJ_id_ad
,2L

	)

953 
	#SN_OCSP_sign
 "OCSPSignög"

	)

954 
	#LN_OCSP_sign
 "OCSP Signög"

	)

955 
	#NID_OCSP_sign
 180

	)

956 
	#OBJ_OCSP_sign
 
OBJ_id_kp
,9L

	)

959 
	~<›ís¶/bio.h
>

960 
	~<›ís¶/a¢1.h
>

962 
	#OBJ_NAME_TYPE_UNDEF
 0x00

	)

963 
	#OBJ_NAME_TYPE_MD_METH
 0x01

	)

964 
	#OBJ_NAME_TYPE_CIPHER_METH
 0x02

	)

965 
	#OBJ_NAME_TYPE_PKEY_METH
 0x03

	)

966 
	#OBJ_NAME_TYPE_COMP_METH
 0x04

	)

967 
	#OBJ_NAME_TYPE_NUM
 0x05

	)

969 
	#OBJ_NAME_ALIAS
 0x8000

	)

971 
	#OBJ_BSEARCH_VALUE_ON_NOMATCH
 0x01

	)

972 
	#OBJ_BSEARCH_FIRST_VALUE_ON_MATCH
 0x02

	)

975 #ifde‡ 
__˝lu•lus


979 
	sobj_«me_°


981 
ty≥
;

982 
Æüs
;

983 c⁄° *
«me
;

984 c⁄° *
d©a
;

985 } 
	tOBJ_NAME
;

987 
	#OBJ_¸óã_™d_add_obje˘
(
a
,
b
,
c
Ë
	`OBJ_¸óã
◊,b,c)

	)

990 
OBJ_NAME_öô
();

991 
OBJ_NAME_√w_ödex
((*
hash_func
)(const *),

992 (*
cmp_func
)(const *, const *),

993 (*
‰ì_func
)(const *, , const *));

994 c⁄° *
OBJ_NAME_gë
(c⁄° *
«me
,
ty≥
);

995 
OBJ_NAME_add
(c⁄° *
«me
,
ty≥
,c⁄° *
d©a
);

996 
OBJ_NAME_ªmove
(c⁄° *
«me
,
ty≥
);

997 
OBJ_NAME_˛ónup
(
ty≥
);

998 
OBJ_NAME_do_Æl
(
ty≥
,(*
‚
)(c⁄° 
OBJ_NAME
 *,*
¨g
),

999 *
¨g
);

1000 
OBJ_NAME_do_Æl_s‹ãd
(
ty≥
,(*
‚
)(c⁄° 
OBJ_NAME
 *,*
¨g
),

1001 *
¨g
);

1003 
ASN1_OBJECT
 * 
OBJ_dup
(c⁄° ASN1_OBJECT *
o
);

1004 
ASN1_OBJECT
 * 
OBJ_nid2obj
(
n
);

1005 c⁄° * 
OBJ_nid2 
(
n
);

1006 c⁄° * 
OBJ_nid2¢
(
n
);

1007 
OBJ_obj2nid
(c⁄° 
ASN1_OBJECT
 *
o
);

1008 
ASN1_OBJECT
 * 
OBJ_txt2obj
(c⁄° *
s
, 
no_«me
);

1009 
OBJ_obj2txt
(*
buf
, 
buf_Àn
, c⁄° 
ASN1_OBJECT
 *
a
, 
no_«me
);

1010 
OBJ_txt2nid
(c⁄° *
s
);

1011 
OBJ_ 2nid
(c⁄° *
s
);

1012 
OBJ_¢2nid
(c⁄° *
s
);

1013 
OBJ_cmp
(c⁄° 
ASN1_OBJECT
 *
a
,c⁄° ASN1_OBJECT *
b
);

1014 c⁄° * 
OBJ_b£¨ch
(c⁄° *
key
,c⁄° *
ba£
,
num
,
size
,

1015 (*
cmp
)(const *, const *));

1016 c⁄° * 
OBJ_b£¨ch_ex
(c⁄° *
key
,c⁄° *
ba£
,
num
,

1017 
size
, (*
cmp
)(c⁄° *, c⁄° *), 
Êags
);

1019 
OBJ_√w_nid
(
num
);

1020 
OBJ_add_obje˘
(c⁄° 
ASN1_OBJECT
 *
obj
);

1021 
OBJ_¸óã
(c⁄° *
oid
,c⁄° *
¢
,c⁄° *
 
);

1022 
OBJ_˛ónup
();

1023 
OBJ_¸óã_obje˘s
(
BIO
 *
ö
);

1029 
ERR_lﬂd_OBJ_°rögs
();

1034 
	#OBJ_F_OBJ_ADD_OBJECT
 105

	)

1035 
	#OBJ_F_OBJ_CREATE
 100

	)

1036 
	#OBJ_F_OBJ_DUP
 101

	)

1037 
	#OBJ_F_OBJ_NAME_NEW_INDEX
 106

	)

1038 
	#OBJ_F_OBJ_NID2LN
 102

	)

1039 
	#OBJ_F_OBJ_NID2OBJ
 103

	)

1040 
	#OBJ_F_OBJ_NID2SN
 104

	)

1043 
	#OBJ_R_MALLOC_FAILURE
 100

	)

1044 
	#OBJ_R_UNKNOWN_NID
 101

	)

1046 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/opensslconf.h

7 #ifde‡
›ís¶_›ís¶c⁄f_mu…ûib_ªdúe˘i⁄_h


10 
	#›ís¶_›ís¶c⁄f_mu…ûib_ªdúe˘i⁄_h


	)

12 #i‡
deföed
(
__i386__
)

13 
	~"›ís¶c⁄f-i386.h
"

14 #ñi‡
deföed
(
__ü64__
)

15 
	~"›ís¶c⁄f-ü64.h
"

16 #ñi‡
deföed
(
__powîpc64__
)

17 
	~"›ís¶c⁄f-µc64.h
"

18 #ñi‡
deföed
(
__powîpc__
)

19 
	~"›ís¶c⁄f-µc.h
"

20 #ñi‡
deföed
(
__s390x__
)

21 
	~"›ís¶c⁄f-s390x.h
"

22 #ñi‡
deföed
(
__s390__
)

23 
	~"›ís¶c⁄f-s390.h
"

24 #ñi‡
deföed
(
__x86_64__
)

25 
	~"›ís¶c⁄f-x86_64.h
"

30 #unde‡
›ís¶_›ís¶c⁄f_mu…ûib_ªdúe˘i⁄_h


	@/usr/include/openssl/pem2.h

60 #ifde‡
__˝lu•lus


64 #i‚de‡
HEADER_PEM_H


65 
ERR_lﬂd_PEM_°rögs
();

68 #ifde‡
__˝lu•lus


	@/usr/include/openssl/pq_compat.h

60 
	~"›ís¶c⁄f.h
"

61 
	~<›ís¶/bn.h
>

75 #i‡(
deföed
(
THIRTY_TWO_BIT
Ë&& !deföed(
BN_LLONG
)Ë|| deföed(
SIXTEEN_BIT
Ë|| deföed(
EIGHT_BIT
)

77 
	#PQ_64BIT_IS_INTEGER
 0

	)

78 
	#PQ_64BIT_IS_BIGNUM
 1

	)

80 
	#PQ_64BIT
 
BIGNUM


	)

81 
	#PQ_64BIT_CTX
 
BN_CTX


	)

83 
	#pq_64bô_öô
(
x
Ë
	`BN_öô
(x)

	)

84 
	#pq_64bô_‰ì
(
x
Ë
	`BN_‰ì
(x)

	)

86 
	#pq_64bô_˘x_√w
(
˘x
Ë
	`BN_CTX_√w
()

	)

87 
	#pq_64bô_˘x_‰ì
(
x
Ë
	`BN_CTX_‰ì
(x)

	)

89 
	#pq_64bô_assign
(
x
, 
y
Ë
	`BN_c›y
(x, y)

	)

90 
	#pq_64bô_assign_w‹d
(
x
, 
y
Ë
	`BN_£t_w‹d
(x, y)

	)

91 
	#pq_64bô_gt
(
x
, 
y
Ë
	`BN_ucmp
(x, yË>1 ? 1 : 0

	)

92 
	#pq_64bô_eq
(
x
, 
y
Ë
	`BN_ucmp
(x, yË=0 ? 1 : 0

	)

93 
	#pq_64bô_add_w‹d
(
x
, 
w
Ë
	`BN_add_w‹d
(x, w)

	)

94 
	#pq_64bô_sub
(
r
, 
x
, 
y
Ë
	`BN_sub
‘, x, y)

	)

95 
	#pq_64bô_sub_w‹d
(
x
, 
w
Ë
	`BN_sub_w‹d
(x, w)

	)

96 
	#pq_64bô_mod
(
r
, 
x
, 
n
, 
˘x
Ë
	`BN_mod
‘, x,Ç, ctx)

	)

98 
	#pq_64bô_bö2num
(
bn
, 
byãs
, 
Àn
Ë
	`BN_bö2bn
(byãs,Üí, bn)

	)

99 
	#pq_64bô_num2bö
(
bn
, 
byãs
Ë
	`BN_bn2bö
(bn, byãs)

	)

100 
	#pq_64bô_gë_w‹d
(
x
Ë
	`BN_gë_w‹d
(x)

	)

101 
	#pq_64bô_is_bô_£t
(
x
, 
off£t
Ë
	`BN_is_bô_£t
(x, off£t)

	)

102 
	#pq_64bô_lshi·
(
r
, 
x
, 
shi·
Ë
	`BN_lshi·
‘, x, shi·)

	)

103 
	#pq_64bô_£t_bô
(
x
, 
num
Ë
	`BN_£t_bô
(x,Çum)

	)

104 
	#pq_64bô_gë_Àngth
(
x
Ë
	`BN_num_bôs
((x))

	)

108 
	#PQ_64BIT_IS_INTEGER
 1

	)

109 
	#PQ_64BIT_IS_BIGNUM
 0

	)

111 #i‡
deföed
(
SIXTY_FOUR_BIT
)

112 
	#PQ_64BIT
 
BN_ULONG


	)

113 
	#PQ_64BIT_PRINT
 "%Œd"

	)

114 #ñi‡
deföed
(
SIXTY_FOUR_BIT_LONG
)

115 
	#PQ_64BIT
 
BN_ULONG


	)

116 
	#PQ_64BIT_PRINT
 "%ld"

	)

117 #ñi‡
deföed
(
THIRTY_TWO_BIT
)

118 
	#PQ_64BIT
 
BN_ULLONG


	)

119 
	#PQ_64BIT_PRINT
 "%Œd"

	)

122 
	#PQ_64BIT_CTX
 

	)

124 
	#pq_64bô_öô
(
x
)

	)

125 
	#pq_64bô_‰ì
(
x
)

	)

126 
	#pq_64bô_˘x_√w
(
˘x
Ë(˘x)

	)

127 
	#pq_64bô_˘x_‰ì
(
x
)

	)

129 
	#pq_64bô_assign
(
x
, 
y
Ë(*(xË*(y))

	)

130 
	#pq_64bô_assign_w‹d
(
x
, 
y
Ë(*(xËy)

	)

131 
	#pq_64bô_gt
(
x
, 
y
Ë(*(xË> *(y))

	)

132 
	#pq_64bô_eq
(
x
, 
y
Ë(*(xË=*(y))

	)

133 
	#pq_64bô_add_w‹d
(
x
, 
w
Ë(*(xË(*(xË+ (w)))

	)

134 
	#pq_64bô_sub
(
r
, 
x
, 
y
Ë(*‘Ë(*(xË- *(y)))

	)

135 
	#pq_64bô_sub_w‹d
(
x
, 
w
Ë(*(xË(*(xË- (w)))

	)

136 
	#pq_64bô_mod
(
r
, 
x
, 
n
, 
˘x
)

	)

138 
	#pq_64bô_bö2num
(
num
, 
byãs
, 
Àn
Ë
	`byãs_to_l⁄g_l⁄g
(byãs,Çum)

	)

139 
	#pq_64bô_num2bö
(
num
, 
byãs
Ë
	`l⁄g_l⁄g_to_byãs
“um, byãs)

	)

140 
	#pq_64bô_gë_w‹d
(
x
Ë*(x)

	)

141 
	#pq_64bô_lshi·
(
r
, 
x
, 
shi·
Ë(*‘Ë(*(xË<< (shi·)))

	)

142 
	#pq_64bô_£t_bô
(
x
, 
num
) do { \

143 
PQ_64BIT
 
mask
 = 1; \

144 
mask
 = mask << (
num
); \

145 *(
x
Ë|
mask
; \

146 } 0)

	)

	@/usr/include/openssl/pqueue.h

60 #i‚de‡
HEADER_PQUEUE_H


61 
	#HEADER_PQUEUE_H


	)

63 
	~<°dio.h
>

64 
	~<°dlib.h
>

65 
	~<°rög.h
>

67 
	~<›ís¶/pq_com∑t.h
>

69 
_pqueue
 *
	tpqueue
;

71 
	s_pôem


73 
PQ_64BIT
 
	m¥i‹ôy
;

74 *
	md©a
;

75 
_pôem
 *
	m√xt
;

76 } 
	tpôem
;

78 
_pôem
 *
	tpôî©‹
;

80 
pôem
 *
pôem_√w
(
PQ_64BIT
 
¥i‹ôy
, *
d©a
);

81 
pôem_‰ì
(
pôem
 *
ôem
);

83 
pqueue
 
pqueue_√w
();

84 
pqueue_‰ì
(
pqueue
 
pq
);

86 
pôem
 *
pqueue_ö£π
(
pqueue
 
pq
,Öôem *
ôem
);

87 
pôem
 *
pqueue_≥ek
(
pqueue
 
pq
);

88 
pôem
 *
pqueue_p›
(
pqueue
 
pq
);

89 
pôem
 *
pqueue_föd
(
pqueue
 
pq
, 
PQ_64BIT
 
¥i‹ôy
);

90 
pôem
 *
pqueue_ôî©‹
(
pqueue
 
pq
);

91 
pôem
 *
pqueue_√xt
(
pôî©‹
 *
ôî
);

93 
pqueue_¥öt
(
pqueue
 
pq
);

	@/usr/include/readline/chardefs.h

23 #i‚de‡
_CHARDEFS_H_


24 
	#_CHARDEFS_H_


	)

26 
	~<˘y≥.h
>

28 #i‡
deföed
 (
HAVE_CONFIG_H
)

29 #i‡
deföed
 (
HAVE_STRING_H
)

30 #i‡! 
deföed
 (
STDC_HEADERS
Ë&& deföed (
HAVE_MEMORY_H
)

31 
	~<mem‹y.h
>

33 
	~<°rög.h
>

35 #i‡
deföed
 (
HAVE_STRINGS_H
)

36 
	~<°rögs.h
>

39 
	~<°rög.h
>

42 #i‚de‡
whôe•a˚


43 
	#whôe•a˚
(
c
Ë(((cË=' 'Ë|| ((cË='\t'))

	)

46 #ifde‡
CTRL


47 #unde‡
CTRL


49 #ifde‡
UNCTRL


50 #unde‡
UNCTRL


54 
	#c⁄åﬁ_ch¨a˘î_thªshﬁd
 0x020

	)

55 
	#c⁄åﬁ_ch¨a˘î_mask
 0x1‡

	)

56 
	#mëa_ch¨a˘î_thªshﬁd
 0x07‡

	)

57 
	#c⁄åﬁ_ch¨a˘î_bô
 0x40

	)

58 
	#mëa_ch¨a˘î_bô
 0x080

	)

59 
	#œrge°_ch¨
 255

	)

61 
	#CTRL_CHAR
(
c
Ë((cË< 
c⁄åﬁ_ch¨a˘î_thªshﬁd
 && (((cË& 0x80Ë=0))

	)

62 
	#META_CHAR
(
c
Ë((cË> 
mëa_ch¨a˘î_thªshﬁd
 && (cË<
œrge°_ch¨
)

	)

64 
	#CTRL
(
c
Ë((cË& 
c⁄åﬁ_ch¨a˘î_mask
)

	)

65 
	#META
(
c
Ë((cË| 
mëa_ch¨a˘î_bô
)

	)

67 
	#UNMETA
(
c
Ë((cË& (~
mëa_ch¨a˘î_bô
))

	)

68 
	#UNCTRL
(
c
Ë
	`_æ_to_uµî
(((c)|
c⁄åﬁ_ch¨a˘î_bô
))

	)

70 #i‡
deföed
 
STDC_HEADERS
 || (!deföed (
ißscii
Ë&& !deföed (
HAVE_ISASCII
))

71 
	#IN_CTYPE_DOMAIN
(
c
Ë1

	)

73 
	#IN_CTYPE_DOMAIN
(
c
Ë
	`ißscii
(c)

	)

76 #i‡!
deföed
 (
isxdigô
Ë&& !deföed (
HAVE_ISXDIGIT
)

77 
	#isxdigô
(
c
Ë(
	`isdigô
((c)Ë|| ((cË>'a' && (cË<'f'Ë|| ((cË>'A' && (cË<'F'))

	)

80 #i‡
deföed
 (
CTYPE_NON_ASCII
)

81 
	#NON_NEGATIVE
(
c
Ë1

	)

83 
	#NON_NEGATIVE
(
c
Ë(()(cË=(c))

	)

87 #unde‡
ISPRINT


91 
	#ISALNUM
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`iß um
 (c))

	)

92 
	#ISALPHA
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`ißÕha
 (c))

	)

93 
	#ISDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isdigô
 (c))

	)

94 
	#ISLOWER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i¶owî
 (c))

	)

95 
	#ISPRINT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•röt
 (c))

	)

96 
	#ISUPPER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isuµî
 (c))

	)

97 
	#ISXDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isxdigô
 (c))

	)

99 
	#_æ_lowîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISLOWER
(c))

	)

100 
	#_æ_uµîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISUPPER
(c))

	)

101 
	#_æ_digô_p
(
c
Ë((cË>'0' && (cË<'9')

	)

103 
	#_æ_puª_Æphabëic
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALPHA
(c))

	)

104 
	#ALPHABETIC
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALNUM
(c))

	)

106 #i‚de‡
_æ_to_uµî


107 
	#_æ_to_uµî
(
c
Ë(
	`_æ_lowîˇ£_p
(cË? 
	`touµî
(()cË: (c))

	)

108 
	#_æ_to_lowî
(
c
Ë(
	`_æ_uµîˇ£_p
(cË? 
	`tﬁowî
(()cË: (c))

	)

111 #i‚de‡
_æ_digô_vÆue


112 
	#_æ_digô_vÆue
(
x
Ë((xË- '0')

	)

115 #i‚de‡
_æ_isidít


116 
	#_æ_isidít
(
c
Ë(
	`ISALNUM
(cË|| (cË='_')

	)

119 #i‚de‡
ISOCTAL


120 
	#ISOCTAL
(
c
Ë((cË>'0' && (cË<'7')

	)

122 
	#OCTVALUE
(
c
Ë((cË- '0')

	)

124 
	#HEXVALUE
(
c
) \

125 (((
c
) >= 'a' && (c) <= 'f') \

126 ? (
c
)-'a'+10 \

127 : (
c
Ë>'A' && (cË<'F' ? (c)-'A'+10 : (c)-'0')

	)

129 #i‚de‡
NEWLINE


130 
	#NEWLINE
 '\n'

	)

133 #i‚de‡
RETURN


134 
	#RETURN
 
	`CTRL
('M')

	)

137 #i‚de‡
RUBOUT


138 
	#RUBOUT
 0x7f

	)

141 #i‚de‡
TAB


142 
	#TAB
 '\t'

	)

145 #ifde‡
ABORT_CHAR


146 #unde‡
ABORT_CHAR


148 
	#ABORT_CHAR
 
	`CTRL
('G')

	)

150 #ifde‡
PAGE


151 #unde‡
PAGE


153 
	#PAGE
 
	`CTRL
('L')

	)

155 #ifde‡
SPACE


156 #unde‡
SPACE


158 
	#SPACE
 ' '

	)

160 #ifde‡
ESC


161 #unde‡
ESC


163 
	#ESC
 
	`CTRL
('[')

	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

321 #i‡
__GNUC_PREREQ
 (4,3) \

322 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

323 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

324 && 
__GNUC_RH_RELEASE__
 >= 31)

325 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

326 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

333 #i‡!
__GNUC_PREREQ
 (2,8)

334 
	#__exãnsi⁄__


	)

338 #i‡!
__GNUC_PREREQ
 (2,92)

339 
	#__ª°ri˘


	)

345 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


346 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

348 #ifde‡
__GNUC__


349 
	#__ª°ri˘_¨r


	)

351 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

352 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

355 
	#__ª°ri˘_¨r


	)

360 
	~<bôs/w‹dsize.h
>

362 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


363 
	#__LDBL_COMPAT
 1

	)

364 #ifde‡
__REDIRECT


365 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

366 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

367 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

368 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

369 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

370 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

371 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

372 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

373 
	#__LDBL_REDIR_DECL
(
«me
) \

374 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

375 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

376 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

381 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


382 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

383 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

384 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

385 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

386 
	#__LDBL_REDIR_DECL
(
«me
)

	)

387 #ifde‡
__REDIRECT


388 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

389 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

390 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/ipc.h

19 #i‚de‡
_SYS_IPC_H


20 
	#_SYS_IPC_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

29 
	~<bôs/ù˘y≥s.h
>

30 
	~<bôs/ùc.h
>

32 #i‚de‡
__uid_t_deföed


33 
__uid_t
 
	tuid_t
;

34 
	#__uid_t_deföed


	)

37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__mode_t_deföed


43 
__mode_t
 
	tmode_t
;

44 
	#__mode_t_deföed


	)

47 #i‚de‡
__key_t_deföed


48 
__key_t
 
	tkey_t
;

49 
	#__key_t_deföed


	)

52 
__BEGIN_DECLS


55 
key_t
 
	$·ok
 (
__c⁄°
 *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

57 
__END_DECLS


	@/usr/include/sys/shm.h

19 #i‚de‡
_SYS_SHM_H


20 
	#_SYS_SHM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/shm.h
>

34 
	#__√ed_time_t


	)

35 
	~<time.h
>

37 #ifde‡
__USE_XOPEN


38 #i‚de‡
__pid_t_deföed


39 
__pid_t
 
	tpid_t
;

40 
	#__pid_t_deföed


	)

45 
__BEGIN_DECLS


51 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

54 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

57 *
	$shm©
 (
__shmid
, 
__c⁄°
 *
__shmaddr
, 
__shmÊg
)

58 
__THROW
;

61 
	$shmdt
 (
__c⁄°
 *
__shmaddr
Ë
__THROW
;

63 
__END_DECLS


	@/usr/include/X11/Xarch.h

1 #i‚de‡
_XARCH_H_


2 
	#_XARCH_H_


	)

36 #ifde‡
X_BYTE_ORDER


38 
	#X_BIG_ENDIAN
 4321

	)

39 
	#X_LITTLE_ENDIAN
 1234

	)

43 #ifde‡
SVR4


44 #i‡
deföed
(
NCR
Ë|| deföed(
Mùs
Ë|| deföed(
__sgi
)

45 
	~<sys/ídün.h
>

47 #i‡!
deföed
(
sun
)

48 
	~<sys/byã‹dî.h
>

51 #ñi‡
deföed
(
CSRG_BASED
)

52 #i‡
deföed
(
__NëBSD__
Ë|| deföed(
__O≥nBSD__
)

53 
	~<sys/ty≥s.h
>

55 
	~<machöe/ídün.h
>

56 #ñi‡
deföed
(
löux
)

57 #i‡
deföed
 
__STRICT_ANSI__


58 #unde‡
__STRICT_ANSI__


59 
	~<ídün.h
>

60 
	#__STRICT_ANSI__


	)

62 
	~<ídün.h
>

65 #i‡!
deföed
(
LITTLE_ENDIAN
Ë&& deföed(
__LITTLE_ENDIAN
)

66 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

68 #i‡!
deföed
(
BIG_ENDIAN
Ë&& deföed(
__BIG_ENDIAN
)

69 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

71 #i‡!
deföed
(
PDP_ENDIAN
Ë&& deföed(
__PDP_ENDIAN
)

72 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

74 #i‡!
deföed
(
BYTE_ORDER
Ë&& deföed(
__BYTE_ORDER
)

75 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

77 #ñi‡
deföed
(
Lynx
)

80 
	~<bsd/ö.h
>

81 
	~<bsd/ö_sy°m.h
>

82 
	~<bsd/ù.h
>

86 #i‚de‡
BYTE_ORDER


87 
	#LITTLE_ENDIAN
 1234

	)

88 
	#BIG_ENDIAN
 4321

	)

90 #i‡
deföed
(
__QNX__
Ë&& !deföed(
__QNXNTO__
)

91 
	#BYTE_ORDER
 
LITTLE_ENDIAN


	)

94 #i‡
deföed
(
__QNXNTO__
)

95 #i‡
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
__x86__
)

96 
	#BYTE_ORDER
 
LITTLE_ENDIAN


	)

98 
	#BYTE_ORDER
 
BIG_ENDIAN


	)

102 #ifde‡
Lynx


103 #i‡
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
__x86__
)

104 
	#BYTE_ORDER
 
LITTLE_ENDIAN


	)

106 
	#BYTE_ORDER
 
BIG_ENDIAN


	)

109 #i‡(
deföed
(
sun
Ë&& deföed(
SVR4
)Ë&& !deföed(
Lynx
)

110 
	~<sys/iß_defs.h
>

111 #ifde‡
_LITTLE_ENDIAN


112 
	#BYTE_ORDER
 
LITTLE_ENDIAN


	)

114 #ifde‡
_BIG_ENDIAN


115 
	#BYTE_ORDER
 
BIG_ENDIAN


	)

120 
	#X_BYTE_ORDER
 
BYTE_ORDER


	)

121 
	#X_BIG_ENDIAN
 
BIG_ENDIAN


	)

122 
	#X_LITTLE_ENDIAN
 
LITTLE_ENDIAN


	)

	@/usr/include/X11/Xw32defs.h

3 #i‚de‡
_XW32DEFS_H


4 
	#_XW32DEFS_H


	)

6 #ifde‡
__GNUC__


7 #i‡!
deföed
(
__daddr_t_deföed
)

8 *
	tˇddr_t
;

10 
	#l°©
 
°©


	)

13 *
	tˇddr_t
;

15 
	#ac˚ss
 
_ac˚ss


	)

16 
	#Æloˇ
 
_Æloˇ


	)

17 
	#chdú
 
_chdú


	)

18 
	#chmod
 
_chmod


	)

19 
	#˛o£
 
_˛o£


	)

20 
	#¸ót
 
_¸ót


	)

21 
	#dup
 
_dup


	)

22 
	#dup2
 
_dup2


	)

23 
	#ívú⁄
 
_ívú⁄


	)

24 
	#exe˛
 
_exe˛


	)

25 
	#exe˛e
 
_exe˛e


	)

26 
	#exe˛p
 
_exe˛p


	)

27 
	#exe˛≥
 
_exe˛≥


	)

28 
	#execv
 
_execv


	)

29 
	#execve
 
_execve


	)

30 
	#execvp
 
_execvp


	)

31 
	#execv≥
 
_execv≥


	)

32 
	#fd›í
 
_fd›í


	)

33 
	#fûío
 
_fûío


	)

34 
	#f°©
 
_f°©


	)

35 
	#gëcwd
 
_gëcwd


	)

36 
	#gëpid
 
_gëpid


	)

37 
	#hypŸ
 
_hypŸ


	)

38 
	#ißscii
 
__ißscii


	)

39 
	#ißây
 
_ißây


	)

40 
	#l£ek
 
_l£ek


	)

41 
	#mkdú
 
_mkdú


	)

42 
	#mkãmp
 
_mkãmp


	)

43 
	#›í
 
_›í


	)

44 
	#puãnv
 
_puãnv


	)

45 
	#ªad
 
_ªad


	)

46 
	#rmdú
 
_rmdú


	)

47 
	#¶ìp
(
x
Ë
	`_¶ìp
((xË* 1000)

	)

48 
	#°©
 
_°©


	)

49 
	#sys_îæi°
 
_sys_îæi°


	)

50 
	#sys_√º
 
_sys_√º


	)

51 
	#umask
 
_umask


	)

52 
	#u∆ök
 
_u∆ök


	)

53 
	#wrôe
 
_wrôe


	)

54 
	#øndom
 
ønd


	)

55 
	#§™dom
 
§™d


	)

57 
	#O_RDONLY
 
_O_RDONLY


	)

58 
	#O_WRONLY
 
_O_WRONLY


	)

59 
	#O_RDWR
 
_O_RDWR


	)

60 
	#O_APPEND
 
_O_APPEND


	)

61 
	#O_CREAT
 
_O_CREAT


	)

62 
	#O_TRUNC
 
_O_TRUNC


	)

63 
	#O_EXCL
 
_O_EXCL


	)

64 
	#O_TEXT
 
_O_TEXT


	)

65 
	#O_BINARY
 
_O_BINARY


	)

66 
	#O_RAW
 
_O_BINARY


	)

68 
	#S_IFMT
 
_S_IFMT


	)

69 
	#S_IFDIR
 
_S_IFDIR


	)

70 
	#S_IFCHR
 
_S_IFCHR


	)

71 
	#S_IFREG
 
_S_IFREG


	)

72 
	#S_IREAD
 
_S_IREAD


	)

73 
	#S_IWRITE
 
_S_IWRITE


	)

74 
	#S_IEXEC
 
_S_IEXEC


	)

76 
	#F_OK
 0

	)

77 
	#X_OK
 1

	)

78 
	#W_OK
 2

	)

79 
	#R_OK
 4

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/sockios.h

1 #i‚de‡
_ASM_X86_SOCKIOS_H


2 
	#_ASM_X86_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/bits/ipc.h

19 #i‚de‡
_SYS_IPC_H


23 
	~<bôs/ty≥s.h
>

26 
	#IPC_CREAT
 01000

	)

27 
	#IPC_EXCL
 02000

	)

28 
	#IPC_NOWAIT
 04000

	)

31 
	#IPC_RMID
 0

	)

32 
	#IPC_SET
 1

	)

33 
	#IPC_STAT
 2

	)

34 #ifde‡
__USE_GNU


35 
	#IPC_INFO
 3

	)

39 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

43 
	sùc_≥rm


45 
__key_t
 
	m__key
;

46 
__uid_t
 
	muid
;

47 
__gid_t
 
	mgid
;

48 
__uid_t
 
	mcuid
;

49 
__gid_t
 
	mcgid
;

50 
	mmode
;

51 
	m__∑d1
;

52 
	m__£q
;

53 
	m__∑d2
;

54 
	m__unu£d1
;

55 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

24 #i‚de‡
_BITS_IPCTYPES_H


25 
	#_BITS_IPCTYPES_H
 1

	)

27 
	~<bôs/ty≥s.h
>

30 #i‡
__WORDSIZE
 == 32

31 
	t__ùc_pid_t
;

33 
	t__ùc_pid_t
;

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/shm.h

19 #i‚de‡
_SYS_SHM_H


23 
	~<bôs/ty≥s.h
>

26 
	#SHM_R
 0400

	)

27 
	#SHM_W
 0200

	)

30 
	#SHM_RDONLY
 010000

	)

31 
	#SHM_RND
 020000

	)

32 
	#SHM_REMAP
 040000

	)

35 
	#SHM_LOCK
 11

	)

36 
	#SHM_UNLOCK
 12

	)

38 
	g__BEGIN_DECLS


41 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

42 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

46 
	tshm©t_t
;

49 
	sshmid_ds


51 
ùc_≥rm
 
shm_≥rm
;

52 
size_t
 
shm_£gsz
;

53 
__time_t
 
shm_©ime
;

54 
__unu£d1
;

55 
__time_t
 
shm_dtime
;

56 
__unu£d2
;

57 
__time_t
 
shm_˘ime
;

58 
__unu£d3
;

59 
__pid_t
 
shm_˝id
;

60 
__pid_t
 
shm_Õid
;

61 
shm©t_t
 
shm_«âch
;

62 
__unu£d4
;

63 
__unu£d5
;

66 #ifde‡
__USE_MISC


69 
	#SHM_STAT
 13

	)

70 
	#SHM_INFO
 14

	)

73 
	#SHM_DEST
 01000

	)

74 
	#SHM_LOCKED
 02000

	)

75 
	#SHM_HUGETLB
 04000

	)

76 
	#SHM_NORESERVE
 010000

	)

78 
	sshmöfo


80 
shmmax
;

81 
shmmö
;

82 
shmmni
;

83 
shm£g
;

84 
shmÆl
;

85 
__unu£d1
;

86 
__unu£d2
;

87 
__unu£d3
;

88 
__unu£d4
;

91 
	sshm_öfo


93 
u£d_ids
;

94 
shm_tŸ
;

95 
shm_rss
;

96 
shm_swp
;

97 
sw≠_©ãm±s
;

98 
sw≠_suc˚s£s
;

103 
__END_DECLS


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/krb5/krb5.h

2 #i‚de‡
KRB5_KRB5_H_INCLUDED


3 
	#KRB5_KRB5_H_INCLUDED


	)

59 #i‚de‡
KRB5_GENERAL__


60 
	#KRB5_GENERAL__


	)

63 #i‚de‡
KRB5_DEPRECATED


64 
	#KRB5_DEPRECATED
 0

	)

67 #i‚de‡
KRB5_PRIVATE


68 
	#KRB5_PRIVATE
 0

	)

71 #i‡
deföed
(
__MACH__
Ë&& deföed(
__APPLE__
)

72 
	~<T¨gëC⁄dôi⁄Æs.h
>

73 #i‡
TARGET_RT_MAC_CFM


78 #i‡
deföed
(
_MSDOS
Ë|| deföed(
_WIN32
)

79 
	~<wö-mac.h
>

82 #i‚de‡
KRB5_CONFIG__


83 #i‚de‡
KRB5_CALLCONV


84 
	#KRB5_CALLCONV


	)

85 
	#KRB5_CALLCONV_C


	)

89 #i‚de‡
KRB5_CALLCONV_WRONG


90 
	#KRB5_CALLCONV_WRONG


	)

93 #i‚de‡
THREEPARAMOPEN


94 
	#THREEPARAMOPEN
(
x
,
y
,
z
Ë
	`›í
(x,y,z)

	)

97 
	#KRB5_OLD_CRYPTO


	)

99 
	~<°dlib.h
>

100 
	~<limôs.h
>

102 #i‚de‡
KRB5INT_BEGIN_DECLS


103 #i‡
deföed
(
__˝lu•lus
)

104 
	#KRB5INT_BEGIN_DECLS
 "C" {

	)

105 
	#KRB5INT_END_DECLS
 }

	)

107 
	#KRB5INT_BEGIN_DECLS


	)

108 
	#KRB5INT_END_DECLS


	)

112 
KRB5INT_BEGIN_DECLS


114 #i‡
TARGET_OS_MAC


115 #¥agm®
∑ck
(
push
,2)

119 
_¥ofûe_t
;

130 
	tkrb5_o˘ë
;

132 #i‡
INT_MAX
 == 0x7fff

133 
	tkrb5_öt16
;

134 
	tkrb5_ui_2
;

135 #ñi‡
SHRT_MAX
 == 0x7fff

136 
	tkrb5_öt16
;

137 
	tkrb5_ui_2
;

139 #îr‹ 
undeföed
 16 
bô
 
ty≥


142 #i‡
INT_MAX
 == 0x7fffffffL

143 
	tkrb5_öt32
;

144 
	tkrb5_ui_4
;

145 #ñi‡
LONG_MAX
 == 0x7fffffffL

146 
	tkrb5_öt32
;

147 
	tkrb5_ui_4
;

148 #ñi‡
SHRT_MAX
 == 0x7fffffffL

149 
	tkrb5_öt32
;

150 
	tkrb5_ui_4
;

152 #îr‹: 
undeföed
 32 
bô
 
ty≥


155 
	#VALID_INT_BITS
 
INT_MAX


	)

156 
	#VALID_UINT_BITS
 
UINT_MAX


	)

158 
	#KRB5_INT32_MAX
 2147483647

	)

161 
	#KRB5_INT32_MIN
 (-
KRB5_INT32_MAX
-1)

	)

163 
	#KRB5_INT16_MAX
 65535

	)

166 
	#KRB5_INT16_MIN
 (-
KRB5_INT16_MAX
-1)

	)

180 #i‚de‡
FALSE


181 
	#FALSE
 0

	)

183 #i‚de‡
TRUE


184 
	#TRUE
 1

	)

187 
	tkrb5_boﬁón
;

188 
	tkrb5_msgty≥
;

189 
	tkrb5_kvno
;

191 
krb5_öt32
 
	tkrb5_addπy≥
;

192 
krb5_öt32
 
	tkrb5_í˘y≥
;

193 
krb5_öt32
 
	tkrb5_cksumty≥
;

194 
krb5_öt32
 
	tkrb5_authd©©y≥
;

195 
krb5_öt32
 
	tkrb5_keyußge
;

197 
krb5_öt32
 
	tkrb5_¥óuthty≥
;

198 
krb5_öt32
 
	tkrb5_Êags
;

199 
krb5_öt32
 
	tkrb5_time°amp
;

200 
krb5_öt32
 
	tkrb5_îr‹_code
;

201 
krb5_öt32
 
	tkrb5_dñèt
;

203 
krb5_îr‹_code
 
	tkrb5_magic
;

205 
	s_krb5_d©a
 {

206 
krb5_magic
 
	mmagic
;

207 
	mÀngth
;

208 *
	md©a
;

209 } 
	tkrb5_d©a
;

217 
	#SALT_TYPE_AFS_LENGTH
 
UINT_MAX


	)

218 
	#SALT_TYPE_NO_LENGTH
 
UINT_MAX


	)

220 * 
	tkrb5_poöãr
;

221 c⁄° * 
	tkrb5_c⁄°_poöãr
;

223 
	skrb5_¥öcùÆ_d©a
 {

224 
krb5_magic
 
	mmagic
;

225 
krb5_d©a
 
	mªÆm
;

226 
krb5_d©a
 *
	md©a
;

227 
krb5_öt32
 
	mÀngth
;

228 
krb5_öt32
 
	mty≥
;

229 } 
	tkrb5_¥öcùÆ_d©a
;

231 
krb5_¥öcùÆ_d©a
 * 
	tkrb5_¥öcùÆ
;

238 
	#KRB5_NT_UNKNOWN
 0

	)

240 
	#KRB5_NT_PRINCIPAL
 1

	)

242 
	#KRB5_NT_SRV_INST
 2

	)

244 
	#KRB5_NT_SRV_HST
 3

	)

246 
	#KRB5_NT_SRV_XHST
 4

	)

248 
	#KRB5_NT_UID
 5

	)

251 c⁄° 
	tkrb5_¥öcùÆ_d©a
 *
	tkrb5_c⁄°_¥öcùÆ
;

253 
	#krb5_¥öc_ªÆm
(
c⁄ãxt
, 
¥öc
Ë(&’röc)->
ªÆm
)

	)

254 
	#krb5_¥öc_£t_ªÆm
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë(’röc)->
ªÆm
 = *(vÆue))

	)

255 
	#krb5_¥öc_£t_ªÆm_Àngth
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë’röc)->
ªÆm
.
Àngth
 = (vÆue)

	)

256 
	#krb5_¥öc_£t_ªÆm_d©a
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë’röc)->
ªÆm
.
d©a
 = (vÆue)

	)

257 
	#krb5_¥öc_size
(
c⁄ãxt
, 
¥öc
Ë’röc)->
Àngth


	)

258 
	#krb5_¥öc_ty≥
(
c⁄ãxt
, 
¥öc
Ë’röc)->
ty≥


	)

259 
	#krb5_¥öc_«me
(
c⁄ãxt
, 
¥öc
Ë’röc)->
d©a


	)

260 
	#krb5_¥öc_comp⁄ít
(
c⁄ãxt
, 
¥öc
,
i
) \

261 (((
i
Ë< 
	`krb5_¥öc_size
(
c⁄ãxt
, 
¥öc
)) \

262 ? (
¥öc
)->
d©a
 + (
i
) \

263 : 
NULL
)

	)

268 
	#KRB5_REFERRAL_REALM
 ""

	)

273 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_is_ª„ºÆ_ªÆm
(c⁄° 
krb5_d©a
 *);

284 
	s_krb5_addªss
 {

285 
krb5_magic
 
	mmagic
;

286 
krb5_addπy≥
 
	maddπy≥
;

287 
	mÀngth
;

288 
krb5_o˘ë
 *
	mc⁄ã¡s
;

289 } 
	tkrb5_addªss
;

292 
	#ADDRTYPE_INET
 0x0002

	)

293 
	#ADDRTYPE_CHAOS
 0x0005

	)

294 
	#ADDRTYPE_XNS
 0x0006

	)

295 
	#ADDRTYPE_ISO
 0x0007

	)

296 
	#ADDRTYPE_DDP
 0x0010

	)

297 
	#ADDRTYPE_INET6
 0x0018

	)

299 
	#ADDRTYPE_ADDRPORT
 0x0100

	)

300 
	#ADDRTYPE_IPPORT
 0x0101

	)

303 
	#ADDRTYPE_IS_LOCAL
(
addπy≥
Ë◊ddπy≥ & 0x8000)

	)

310 
	g_krb5_c⁄ãxt
;

311 
_krb5_c⁄ãxt
 * 
	tkrb5_c⁄ãxt
;

313 
	g_krb5_auth_c⁄ãxt
;

314 
_krb5_auth_c⁄ãxt
 * 
	tkrb5_auth_c⁄ãxt
;

316 
	g_krb5_¸y±osy°em_íåy
;

322 
	s_krb5_keyblock
 {

323 
krb5_magic
 
	mmagic
;

324 
krb5_í˘y≥
 
	mí˘y≥
;

325 
	mÀngth
;

326 
krb5_o˘ë
 *
	mc⁄ã¡s
;

327 } 
	tkrb5_keyblock
;

329 #ifde‡
KRB5_OLD_CRYPTO


330 
	s_krb5_í¸y±_block
 {

331 
krb5_magic
 
	mmagic
;

332 
krb5_í˘y≥
 
	m¸y±o_íåy
;

335 
krb5_keyblock
 *
	mkey
;

336 } 
	tkrb5_í¸y±_block
;

339 
	s_krb5_checksum
 {

340 
krb5_magic
 
	mmagic
;

341 
krb5_cksumty≥
 
	mchecksum_ty≥
;

342 
	mÀngth
;

343 
krb5_o˘ë
 *
	mc⁄ã¡s
;

344 } 
	tkrb5_checksum
;

346 
	s_krb5_íc_d©a
 {

347 
krb5_magic
 
	mmagic
;

348 
krb5_í˘y≥
 
	mí˘y≥
;

349 
krb5_kvno
 
	mkvno
;

350 
krb5_d©a
 
	mcùhîãxt
;

351 } 
	tkrb5_íc_d©a
;

354 
	#ENCTYPE_NULL
 0x0000

	)

355 
	#ENCTYPE_DES_CBC_CRC
 0x0001

	)

356 
	#ENCTYPE_DES_CBC_MD4
 0x0002

	)

357 
	#ENCTYPE_DES_CBC_MD5
 0x0003

	)

358 
	#ENCTYPE_DES_CBC_RAW
 0x0004

	)

360 
	#ENCTYPE_DES3_CBC_SHA
 0x0005

	)

361 
	#ENCTYPE_DES3_CBC_RAW
 0x0006

	)

362 
	#ENCTYPE_DES_HMAC_SHA1
 0x0008

	)

363 
	#ENCTYPE_DES3_CBC_SHA1
 0x0010

	)

364 
	#ENCTYPE_AES128_CTS_HMAC_SHA1_96
 0x0011

	)

365 
	#ENCTYPE_AES256_CTS_HMAC_SHA1_96
 0x0012

	)

366 
	#ENCTYPE_ARCFOUR_HMAC
 0x0017

	)

367 
	#ENCTYPE_ARCFOUR_HMAC_EXP
 0x0018

	)

368 
	#ENCTYPE_UNKNOWN
 0x01ff

	)

370 
	#CKSUMTYPE_CRC32
 0x0001

	)

371 
	#CKSUMTYPE_RSA_MD4
 0x0002

	)

372 
	#CKSUMTYPE_RSA_MD4_DES
 0x0003

	)

373 
	#CKSUMTYPE_DESCBC
 0x0004

	)

376 
	#CKSUMTYPE_RSA_MD5
 0x0007

	)

377 
	#CKSUMTYPE_RSA_MD5_DES
 0x0008

	)

378 
	#CKSUMTYPE_NIST_SHA
 0x0009

	)

379 
	#CKSUMTYPE_HMAC_SHA1_DES3
 0x000c

	)

380 
	#CKSUMTYPE_HMAC_SHA1_96_AES128
 0x000f

	)

381 
	#CKSUMTYPE_HMAC_SHA1_96_AES256
 0x0010

	)

382 
	#CKSUMTYPE_HMAC_MD5_ARCFOUR
 -138

	)

393 
	mKRB5_C_RANDSOURCE_OLDAPI
 = 0,

394 
	mKRB5_C_RANDSOURCE_OSRAND
 = 1,

395 
	mKRB5_C_RANDSOURCE_TRUSTEDPARTY
 = 2,

400 
	mKRB5_C_RANDSOURCE_TIMING
 = 3,

401 
	mKRB5_C_RANDSOURCE_EXTERNAL_PROTOCOL
 = 4,

402 
	mKRB5_C_RANDSOURCE_MAX
 = 5

405 #i‚de‡
krb5_roundup


407 
	#krb5_roundup
(
x
, 
y
Ë((((xË+ (yË- 1)/(y))*(y))

	)

413 
	#krb5_x
(
±r
,
¨gs
Ë(’å)?((*’å)Ë¨gs):(
	`ab‹t
(),1))

	)

414 
	#krb5_xc
(
±r
,
¨gs
Ë(’å)?((*’å)Ë¨gs):(
	`ab‹t
(),(*)0))

	)

416 
	#krb5_x
(
±r
,
¨gs
Ë((*’å)Ë¨gs)

	)

417 
	#krb5_xc
(
±r
,
¨gs
Ë((*’å)Ë¨gs)

	)

420 
krb5_îr‹_code
 
KRB5_CALLCONV


421 
	gkrb5_c_í¸y±


422 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

423 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

424 c⁄° 
krb5_d©a
 *
	göput
, 
krb5_íc_d©a
 *
	gouçut
);

426 
krb5_îr‹_code
 
KRB5_CALLCONV


427 
	gkrb5_c_de¸y±


428 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

429 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

430 c⁄° 
krb5_íc_d©a
 *
	göput
, 
krb5_d©a
 *
	gouçut
);

432 
krb5_îr‹_code
 
KRB5_CALLCONV


433 
	gkrb5_c_í¸y±_Àngth


434 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

435 
size_t
 
	göpuéí
, size_à*
	gÀngth
);

437 
krb5_îr‹_code
 
KRB5_CALLCONV


438 
	gkrb5_c_block_size


439 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

440 
size_t
 *
	gblocksize
);

442 
krb5_îr‹_code
 
KRB5_CALLCONV


443 
	gkrb5_c_keyÀngths


444 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

445 
size_t
 *
	gkeybyãs
, size_à*
	gkeyÀngth
);

447 
krb5_îr‹_code
 
KRB5_CALLCONV


448 
	gkrb5_c_öô_°©e


449 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

450 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

451 
krb5_d©a
 *
	g√w_°©e
);

453 
krb5_îr‹_code
 
KRB5_CALLCONV


454 
	gkrb5_c_‰ì_°©e


455 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_d©a
 *
	g°©e
);

457 
krb5_îr‹_code
 
KRB5_CALLCONV


458 
krb5_c_¥f
 (
krb5_c⁄ãxt
, c⁄° 
krb5_keyblock
 *,

459 
krb5_d©a
 *
ö
, krb5_d©®*
out
);

461 
krb5_îr‹_code
 
KRB5_CALLCONV


462 
krb5_c_¥f_Àngth
 (
krb5_c⁄ãxt
, 
krb5_í˘y≥
, 
size_t
 *
ouéí
);

464 
krb5_îr‹_code
 
KRB5_CALLCONV


465 
	gkrb5_c_make_øndom_key


466 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

467 
krb5_keyblock
 *
	gk5_øndom_key
);

469 
krb5_îr‹_code
 
KRB5_CALLCONV


470 
	gkrb5_c_øndom_to_key


471 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

472 
krb5_d©a
 *
	gøndom_d©a
, 
krb5_keyblock
 *
	gk5_øndom_key
);

478 
krb5_îr‹_code
 
KRB5_CALLCONV


479 
	gkrb5_c_øndom_add_íå›y


480 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
	gøndsour˚_id
, c⁄° 
krb5_d©a
 *
	gd©a
);

483 
krb5_îr‹_code
 
KRB5_CALLCONV


484 
	gkrb5_c_øndom_make_o˘ës


485 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_d©a
 *
	gd©a
);

496 
krb5_îr‹_code
 
KRB5_CALLCONV


497 
	gkrb5_c_øndom_os_íå›y


498 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
	g°r⁄g
, *
	gsuc˚ss
);

500  
krb5_îr‹_code
 
KRB5_CALLCONV


501 
	gkrb5_c_øndom_£ed


502 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_d©a
 *
	gd©a
);

504 
krb5_îr‹_code
 
KRB5_CALLCONV


505 
	gkrb5_c_°rög_to_key


506 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

507 c⁄° 
krb5_d©a
 *
	g°rög
, c⁄° krb5_d©®*
	gß…
,

508 
krb5_keyblock
 *
	gkey
);

509 
krb5_îr‹_code
 
KRB5_CALLCONV


510 
krb5_c_°rög_to_key_wôh_∑øms
(
krb5_c⁄ãxt
 
c⁄ãxt
,

511 
krb5_í˘y≥
 
í˘y≥
,

512 c⁄° 
krb5_d©a
 *
°rög
,

513 c⁄° 
krb5_d©a
 *
ß…
,

514 c⁄° 
krb5_d©a
 *
∑øms
,

515 
krb5_keyblock
 *
key
);

517 
krb5_îr‹_code
 
KRB5_CALLCONV


518 
	gkrb5_c_í˘y≥_com∑ª


519 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	ge1
, krb5_í˘y≥ 
	ge2
,

520 
krb5_boﬁón
 *
	gsimû¨
);

522 
krb5_îr‹_code
 
KRB5_CALLCONV


523 
	gkrb5_c_make_checksum


524 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cksumty≥
 
	gcksumty≥
,

525 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

526 c⁄° 
krb5_d©a
 *
	göput
, 
krb5_checksum
 *
	gcksum
);

528 
krb5_îr‹_code
 
KRB5_CALLCONV


529 
	gkrb5_c_vîify_checksum


530 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

531 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

532 c⁄° 
krb5_d©a
 *
	gd©a
,

533 c⁄° 
krb5_checksum
 *
	gcksum
,

534 
krb5_boﬁón
 *
	gvÆid
);

536 
krb5_îr‹_code
 
KRB5_CALLCONV


537 
	gkrb5_c_checksum_Àngth


538 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cksumty≥
 
	gcksumty≥
,

539 
size_t
 *
	gÀngth
);

541 
krb5_îr‹_code
 
KRB5_CALLCONV


542 
	gkrb5_c_keyed_checksum_ty≥s


543 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

544 *
	gcou¡
, 
krb5_cksumty≥
 **
	gcksumty≥s
);

546 
	#KRB5_KEYUSAGE_AS_REQ_PA_ENC_TS
 1

	)

547 
	#KRB5_KEYUSAGE_KDC_REP_TICKET
 2

	)

548 
	#KRB5_KEYUSAGE_AS_REP_ENCPART
 3

	)

549 
	#KRB5_KEYUSAGE_TGS_REQ_AD_SESSKEY
 4

	)

550 
	#KRB5_KEYUSAGE_TGS_REQ_AD_SUBKEY
 5

	)

551 
	#KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM
 6

	)

552 
	#KRB5_KEYUSAGE_TGS_REQ_AUTH
 7

	)

553 
	#KRB5_KEYUSAGE_TGS_REP_ENCPART_SESSKEY
 8

	)

554 
	#KRB5_KEYUSAGE_TGS_REP_ENCPART_SUBKEY
 9

	)

555 
	#KRB5_KEYUSAGE_AP_REQ_AUTH_CKSUM
 10

	)

556 
	#KRB5_KEYUSAGE_AP_REQ_AUTH
 11

	)

557 
	#KRB5_KEYUSAGE_AP_REP_ENCPART
 12

	)

558 
	#KRB5_KEYUSAGE_KRB_PRIV_ENCPART
 13

	)

559 
	#KRB5_KEYUSAGE_KRB_CRED_ENCPART
 14

	)

560 
	#KRB5_KEYUSAGE_KRB_SAFE_CKSUM
 15

	)

561 
	#KRB5_KEYUSAGE_APP_DATA_ENCRYPT
 16

	)

562 
	#KRB5_KEYUSAGE_APP_DATA_CKSUM
 17

	)

563 
	#KRB5_KEYUSAGE_KRB_ERROR_CKSUM
 18

	)

564 
	#KRB5_KEYUSAGE_AD_KDCISSUED_CKSUM
 19

	)

565 
	#KRB5_KEYUSAGE_AD_MTE
 20

	)

566 
	#KRB5_KEYUSAGE_AD_ITE
 21

	)

570 
	#KRB5_KEYUSAGE_GSS_TOK_MIC
 22

	)

571 
	#KRB5_KEYUSAGE_GSS_TOK_WRAP_INTEG
 23

	)

572 
	#KRB5_KEYUSAGE_GSS_TOK_WRAP_PRIV
 24

	)

576 
	#KRB5_KEYUSAGE_PA_SAM_CHALLENGE_CKSUM
 25

	)

577 
	#KRB5_KEYUSAGE_PA_SAM_CHALLENGE_TRACKID
 26

	)

578 
	#KRB5_KEYUSAGE_PA_SAM_RESPONSE
 27

	)

581 
	#KRB5_KEYUSAGE_PA_REFERRAL
 26

	)

583 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_vÆid_í˘y≥


584 (
krb5_í˘y≥
 
	gkty≥
);

585 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_vÆid_cksumty≥


586 (
krb5_cksumty≥
 
	g˘y≥
);

587 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_is_cﬁl_¥oof_cksum


588 (
krb5_cksumty≥
 
	g˘y≥
);

589 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_is_keyed_cksum


590 (
krb5_cksumty≥
 
	g˘y≥
);

592 #i‡
KRB5_PRIVATE


594 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gvÆid_í˘y≥


595 (
krb5_í˘y≥
 
	gkty≥
);

596 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gvÆid_cksumty≥


597 (
krb5_cksumty≥
 
	g˘y≥
);

598 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gis_cﬁl_¥oof_cksum


599 (
krb5_cksumty≥
 
	g˘y≥
);

600 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gis_keyed_cksum


601 (
krb5_cksumty≥
 
	g˘y≥
);

604 #ifde‡
KRB5_OLD_CRYPTO


609 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_í¸y±


610 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

611 
krb5_c⁄°_poöãr
 
	gö±r
,

612 
krb5_poöãr
 
	gouçå
,

613 
size_t
 
	gsize
,

614 
krb5_í¸y±_block
 * 
	geblock
,

615 
krb5_poöãr
 
	givec
);

616 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_de¸y±


617 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

618 
krb5_c⁄°_poöãr
 
	gö±r
,

619 
krb5_poöãr
 
	gouçå
,

620 
size_t
 
	gsize
,

621 
krb5_í¸y±_block
 * 
	geblock
,

622 
krb5_poöãr
 
	givec
);

623 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_¥o˚ss_key


624 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

625 
krb5_í¸y±_block
 * 
	geblock
,

626 c⁄° 
krb5_keyblock
 * 
	gkey
);

627 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_föish_key


628 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

629 
krb5_í¸y±_block
 * 
	geblock
);

630 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_°rög_to_key


631 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

632 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

633 
krb5_keyblock
 * 
	gkeyblock
,

634 c⁄° 
krb5_d©a
 * 
	gd©a
,

635 c⁄° 
krb5_d©a
 * 
	gß…
);

636 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_øndom_key


637 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

638 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

639 c⁄° 
krb5_keyblock
 * 
	gkeyblock
,

640 
krb5_poöãr
 * 
	g±r
);

641 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_föish_øndom_key


642 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

643 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

644 
krb5_poöãr
 * 
	g±r
);

645 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_øndom_key


646 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

647 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

648 
krb5_poöãr
 
	g±r
,

649 
krb5_keyblock
 ** 
	gkeyblock
);

650 
krb5_í˘y≥
 
KRB5_CALLCONV
 
	gkrb5_eblock_í˘y≥


651 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

652 c⁄° 
krb5_í¸y±_block
 * 
	geblock
);

653 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u£_í˘y≥


654 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

655 
krb5_í¸y±_block
 * 
	geblock
,

656 
krb5_í˘y≥
 
	gí˘y≥
);

657 
size_t
 
KRB5_CALLCONV
 
	gkrb5_í¸y±_size


658 (
size_t
 
	gÀngth
,

659 
krb5_í˘y≥
 
	g¸y±o
);

660 
size_t
 
KRB5_CALLCONV
 
	gkrb5_checksum_size


661 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

662 
krb5_cksumty≥
 
	g˘y≥
);

663 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_ˇlcuœã_checksum


664 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

665 
krb5_cksumty≥
 
	g˘y≥
,

666 
krb5_c⁄°_poöãr
 
	gö
, 
size_t
 
	gö_Àngth
,

667 
krb5_c⁄°_poöãr
 
	g£ed
, 
size_t
 
	g£ed_Àngth
,

668 
krb5_checksum
 * 
	goutcksum
);

669 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_vîify_checksum


670 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

671 
krb5_cksumty≥
 
	g˘y≥
,

672 c⁄° 
krb5_checksum
 * 
	gcksum
,

673 
krb5_c⁄°_poöãr
 
	gö
, 
size_t
 
	gö_Àngth
,

674 
krb5_c⁄°_poöãr
 
	g£ed
, 
size_t
 
	g£ed_Àngth
);

676 #i‡
KRB5_PRIVATE


677 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_øndom_c⁄foundî


678 (
	gsize_t
, 
	gkrb5_poöãr
);

680 
krb5_îr‹_code
 
	gkrb5_í¸y±_d©a


681 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_keyblock
 *
	gkey
,

682 
krb5_poöãr
 
	givec
, 
krb5_d©a
 *
	gd©a
,

683 
krb5_íc_d©a
 *
	gíc_d©a
);

685 
krb5_îr‹_code
 
	gkrb5_de¸y±_d©a


686 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_keyblock
 *
	gkey
,

687 
krb5_poöãr
 
	givec
, 
krb5_íc_d©a
 *
	gd©a
,

688 
krb5_d©a
 *
	gíc_d©a
);

705 
	#KDC_OPT_FORWARDABLE
 0x40000000

	)

706 
	#KDC_OPT_FORWARDED
 0x20000000

	)

707 
	#KDC_OPT_PROXIABLE
 0x10000000

	)

708 
	#KDC_OPT_PROXY
 0x08000000

	)

709 
	#KDC_OPT_ALLOW_POSTDATE
 0x04000000

	)

710 
	#KDC_OPT_POSTDATED
 0x02000000

	)

712 
	#KDC_OPT_RENEWABLE
 0x00800000

	)

718 
	#KDC_OPT_REQUEST_ANONYMOUS
 0x00020000

	)

719 
	#KDC_OPT_CANONICALIZE
 0x00010000

	)

730 
	#KDC_OPT_DISABLE_TRANSITED_CHECK
 0x00000020

	)

731 
	#KDC_OPT_RENEWABLE_OK
 0x00000010

	)

732 
	#KDC_OPT_ENC_TKT_IN_SKEY
 0x00000008

	)

734 
	#KDC_OPT_RENEW
 0x00000002

	)

735 
	#KDC_OPT_VALIDATE
 0x00000001

	)

744 
	#KDC_TKT_COMMON_MASK
 0x54800000

	)

749 
	#AP_OPTS_RESERVED
 0x80000000

	)

750 
	#AP_OPTS_USE_SESSION_KEY
 0x40000000

	)

751 
	#AP_OPTS_MUTUAL_REQUIRED
 0x20000000

	)

780 
	#AP_OPTS_USE_SUBKEY
 0x00000001

	)

782 
	#AP_OPTS_WIRE_MASK
 0xfffffff0

	)

785 
	#AD_TYPE_RESERVED
 0x8000

	)

786 
	#AD_TYPE_EXTERNAL
 0x4000

	)

787 
	#AD_TYPE_REGISTERED
 0x2000

	)

789 
	#AD_TYPE_FIELD_TYPE_MASK
 0x1fff

	)

795 
	#TKT_FLG_FORWARDABLE
 0x40000000

	)

796 
	#TKT_FLG_FORWARDED
 0x20000000

	)

797 
	#TKT_FLG_PROXIABLE
 0x10000000

	)

798 
	#TKT_FLG_PROXY
 0x08000000

	)

799 
	#TKT_FLG_MAY_POSTDATE
 0x04000000

	)

800 
	#TKT_FLG_POSTDATED
 0x02000000

	)

801 
	#TKT_FLG_INVALID
 0x01000000

	)

802 
	#TKT_FLG_RENEWABLE
 0x00800000

	)

803 
	#TKT_FLG_INITIAL
 0x00400000

	)

804 
	#TKT_FLG_PRE_AUTH
 0x00200000

	)

805 
	#TKT_FLG_HW_AUTH
 0x00100000

	)

806 
	#TKT_FLG_TRANSIT_POLICY_CHECKED
 0x00080000

	)

807 
	#TKT_FLG_OK_AS_DELEGATE
 0x00040000

	)

808 
	#TKT_FLG_ANONYMOUS
 0x00020000

	)

828 
	#LR_TYPE_THIS_SERVER_ONLY
 0x8000

	)

830 
	#LR_TYPE_INTERPRETATION_MASK
 0x7fff

	)

833 
	#AD_TYPE_EXTERNAL
 0x4000

	)

834 
	#AD_TYPE_REGISTERED
 0x2000

	)

836 
	#AD_TYPE_FIELD_TYPE_MASK
 0x1fff

	)

837 
	#AD_TYPE_INTERNAL_MASK
 0x3fff

	)

840 
	#MSEC_DIRBIT
 0x8000

	)

841 
	#MSEC_VAL_MASK
 0x7fff

	)

852 
	#KRB5_PVNO
 5

	)

856 
	#KRB5_AS_REQ
 ((
krb5_msgty≥
)10Ë

	)

857 
	#KRB5_AS_REP
 ((
krb5_msgty≥
)11Ë

	)

858 
	#KRB5_TGS_REQ
 ((
krb5_msgty≥
)12Ë

	)

859 
	#KRB5_TGS_REP
 ((
krb5_msgty≥
)13Ë

	)

860 
	#KRB5_AP_REQ
 ((
krb5_msgty≥
)14Ë

	)

861 
	#KRB5_AP_REP
 ((
krb5_msgty≥
)15Ë

	)

862 
	#KRB5_SAFE
 ((
krb5_msgty≥
)20Ë

	)

863 
	#KRB5_PRIV
 ((
krb5_msgty≥
)21Ë

	)

864 
	#KRB5_CRED
 ((
krb5_msgty≥
)22Ë

	)

865 
	#KRB5_ERROR
 ((
krb5_msgty≥
)30Ë

	)

868 
	#KRB5_LRQ_NONE
 0

	)

869 
	#KRB5_LRQ_ALL_LAST_TGT
 1

	)

870 
	#KRB5_LRQ_ONE_LAST_TGT
 (-1)

	)

871 
	#KRB5_LRQ_ALL_LAST_INITIAL
 2

	)

872 
	#KRB5_LRQ_ONE_LAST_INITIAL
 (-2)

	)

873 
	#KRB5_LRQ_ALL_LAST_TGT_ISSUED
 3

	)

874 
	#KRB5_LRQ_ONE_LAST_TGT_ISSUED
 (-3)

	)

875 
	#KRB5_LRQ_ALL_LAST_RENEWAL
 4

	)

876 
	#KRB5_LRQ_ONE_LAST_RENEWAL
 (-4)

	)

877 
	#KRB5_LRQ_ALL_LAST_REQ
 5

	)

878 
	#KRB5_LRQ_ONE_LAST_REQ
 (-5)

	)

879 
	#KRB5_LRQ_ALL_PW_EXPTIME
 6

	)

880 
	#KRB5_LRQ_ONE_PW_EXPTIME
 (-6)

	)

883 
	#KRB5_PADATA_NONE
 0

	)

884 
	#KRB5_PADATA_AP_REQ
 1

	)

885 
	#KRB5_PADATA_TGS_REQ
 
KRB5_PADATA_AP_REQ


	)

886 
	#KRB5_PADATA_ENC_TIMESTAMP
 2

	)

887 
	#KRB5_PADATA_PW_SALT
 3

	)

889 
	#KRB5_PADATA_ENC_ENCKEY
 4

	)

891 
	#KRB5_PADATA_ENC_UNIX_TIME
 5

	)

892 
	#KRB5_PADATA_ENC_SANDIA_SECURID
 6

	)

893 
	#KRB5_PADATA_SESAME
 7

	)

894 
	#KRB5_PADATA_OSF_DCE
 8

	)

895 
	#KRB5_CYBERSAFE_SECUREID
 9

	)

896 
	#KRB5_PADATA_AFS3_SALT
 10

	)

897 
	#KRB5_PADATA_ETYPE_INFO
 11

	)

898 
	#KRB5_PADATA_SAM_CHALLENGE
 12

	)

899 
	#KRB5_PADATA_SAM_RESPONSE
 13

	)

900 
	#KRB5_PADATA_PK_AS_REQ_OLD
 14

	)

901 
	#KRB5_PADATA_PK_AS_REP_OLD
 15

	)

902 
	#KRB5_PADATA_PK_AS_REQ
 16

	)

903 
	#KRB5_PADATA_PK_AS_REP
 17

	)

904 
	#KRB5_PADATA_ETYPE_INFO2
 19

	)

905 
	#KRB5_PADATA_USE_SPECIFIED_KVNO
 20

	)

906 
	#KRB5_PADATA_SAM_REDIRECT
 21

	)

907 
	#KRB5_PADATA_GET_FROM_TYPED_DATA
 22

	)

908 
	#KRB5_PADATA_REFERRAL
 25

	)

909 
	#KRB5_PADATA_SAM_CHALLENGE_2
 30

	)

910 
	#KRB5_PADATA_SAM_RESPONSE_2
 31

	)

912 
	#KRB5_SAM_USE_SAD_AS_KEY
 0x80000000

	)

913 
	#KRB5_SAM_SEND_ENCRYPTED_SAD
 0x40000000

	)

914 
	#KRB5_SAM_MUST_PK_ENCRYPT_SAD
 0x20000000

	)

917 
	#KRB5_PADATA_DASS
 16

	)

920 
	#KRB5_DOMAIN_X500_COMPRESS
 1

	)

923 
	#KRB5_ALTAUTH_ATT_CHALLENGE_RESPONSE
 64

	)

926 
	#KRB5_AUTHDATA_OSF_DCE
 64

	)

927 
	#KRB5_AUTHDATA_SESAME
 65

	)

931 
	#KRB5_KPASSWD_SUCCESS
 0

	)

932 
	#KRB5_KPASSWD_MALFORMED
 1

	)

933 
	#KRB5_KPASSWD_HARDERROR
 2

	)

934 
	#KRB5_KPASSWD_AUTHERROR
 3

	)

935 
	#KRB5_KPASSWD_SOFTERROR
 4

	)

938 
	#KRB5_KPASSWD_ACCESSDENIED
 5

	)

939 
	#KRB5_KPASSWD_BAD_VERSION
 6

	)

940 
	#KRB5_KPASSWD_INITIAL_FLAG_NEEDED
 7

	)

947 
	s_krb5_tickë_times
 {

948 
krb5_time°amp
 
	mauthtime
;

950 
krb5_time°amp
 
	m°¨âime
;

952 
krb5_time°amp
 
	mídtime
;

953 
krb5_time°amp
 
	mª√w_tûl
;

954 } 
	tkrb5_tickë_times
;

957 
	s_krb5_authd©a
 {

958 
krb5_magic
 
	mmagic
;

959 
krb5_authd©©y≥
 
	mad_ty≥
;

960 
	mÀngth
;

961 
krb5_o˘ë
 *
	mc⁄ã¡s
;

962 } 
	tkrb5_authd©a
;

965 
	s_krb5_å™sôed
 {

966 
krb5_magic
 
	mmagic
;

967 
krb5_o˘ë
 
	må_ty≥
;

968 
krb5_d©a
 
	må_c⁄ã¡s
;

969 } 
	tkrb5_å™sôed
;

971 
	s_krb5_íc_tkt_∑π
 {

972 
krb5_magic
 
	mmagic
;

974 
krb5_Êags
 
	mÊags
;

975 
krb5_keyblock
 *
	m£ssi⁄
;

976 
krb5_¥öcùÆ
 
	m˛õ¡
;

977 
krb5_å™sôed
 
	må™sôed
;

978 
krb5_tickë_times
 
	mtimes
;

979 
krb5_addªss
 **
	mˇddrs
;

980 
krb5_authd©a
 **
	mauth‹iz©i⁄_d©a
;

981 } 
	tkrb5_íc_tkt_∑π
;

983 
	s_krb5_tickë
 {

984 
krb5_magic
 
	mmagic
;

986 
krb5_¥öcùÆ
 
	m£rvî
;

987 
krb5_íc_d©a
 
	míc_∑π
;

989 
krb5_íc_tkt_∑π
 *
	míc_∑π2
;

991 } 
	tkrb5_tickë
;

994 
	s_krb5_authítiˇt‹
 {

995 
krb5_magic
 
	mmagic
;

996 
krb5_¥öcùÆ
 
	m˛õ¡
;

997 
krb5_checksum
 *
	mchecksum
;

998 
krb5_öt32
 
	mcu£c
;

999 
krb5_time°amp
 
	m˘ime
;

1000 
krb5_keyblock
 *
	msubkey
;

1001 
krb5_ui_4
 
	m£q_numbî
;

1002 
krb5_authd©a
 **
	mauth‹iz©i⁄_d©a
;

1003 } 
	tkrb5_authítiˇt‹
;

1005 
	s_krb5_tkt_authít
 {

1006 
krb5_magic
 
	mmagic
;

1007 
krb5_tickë
 *
	mtickë
;

1008 
krb5_authítiˇt‹
 *
	mauthítiˇt‹
;

1009 
krb5_Êags
 
	m≠_›ti⁄s
;

1010 } 
	tkrb5_tkt_authít
;

1013 
	s_krb5_¸eds
 {

1014 
krb5_magic
 
	mmagic
;

1015 
krb5_¥öcùÆ
 
	m˛õ¡
;

1016 
krb5_¥öcùÆ
 
	m£rvî
;

1017 
krb5_keyblock
 
	mkeyblock
;

1018 
krb5_tickë_times
 
	mtimes
;

1019 
krb5_boﬁón
 
	mis_skey
;

1021 
krb5_Êags
 
	mtickë_Êags
;

1022 
krb5_addªss
 **
	maddªs£s
;

1023 
krb5_d©a
 
	mtickë
;

1024 
krb5_d©a
 
	m£c⁄d_tickë
;

1027 
krb5_authd©a
 **
	mauthd©a
;

1028 } 
	tkrb5_¸eds
;

1031 
	s_krb5_œ°_ªq_íåy
 {

1032 
krb5_magic
 
	mmagic
;

1033 
krb5_öt32
 
	mÃ_ty≥
;

1034 
krb5_time°amp
 
	mvÆue
;

1035 } 
	tkrb5_œ°_ªq_íåy
;

1038 
	s_krb5_∑_d©a
 {

1039 
krb5_magic
 
	mmagic
;

1040 
krb5_¥óuthty≥
 
	m∑_ty≥
;

1041 
	mÀngth
;

1042 
krb5_o˘ë
 *
	mc⁄ã¡s
;

1043 } 
	tkrb5_∑_d©a
;

1045 
	s_krb5_kdc_ªq
 {

1046 
krb5_magic
 
	mmagic
;

1047 
krb5_msgty≥
 
	mmsg_ty≥
;

1048 
krb5_∑_d©a
 **
	m∑d©a
;

1050 
krb5_Êags
 
	mkdc_›ti⁄s
;

1051 
krb5_¥öcùÆ
 
	m˛õ¡
;

1052 
krb5_¥öcùÆ
 
	m£rvî
;

1054 
krb5_time°amp
 
	m‰om
;

1055 
krb5_time°amp
 
	mtûl
;

1056 
krb5_time°amp
 
	mπime
;

1057 
krb5_öt32
 
	mn⁄˚
;

1058 
	mnkty≥s
;

1059 
krb5_í˘y≥
 *
	mkty≥
;

1060 
krb5_addªss
 **
	maddªs£s
;

1061 
krb5_íc_d©a
 
	mauth‹iz©i⁄_d©a
;

1062 
krb5_authd©a
 **
	mu√nc_authd©a
;

1064 
krb5_tickë
 **
	m£c⁄d_tickë
;

1065 } 
	tkrb5_kdc_ªq
;

1067 
	s_krb5_íc_kdc_ªp_∑π
 {

1068 
krb5_magic
 
	mmagic
;

1070 
krb5_msgty≥
 
	mmsg_ty≥
;

1071 
krb5_keyblock
 *
	m£ssi⁄
;

1072 
krb5_œ°_ªq_íåy
 **
	mœ°_ªq
;

1073 
krb5_öt32
 
	mn⁄˚
;

1074 
krb5_time°amp
 
	mkey_exp
;

1075 
krb5_Êags
 
	mÊags
;

1076 
krb5_tickë_times
 
	mtimes
;

1077 
krb5_¥öcùÆ
 
	m£rvî
;

1078 
krb5_addªss
 **
	mˇddrs
;

1080 } 
	tkrb5_íc_kdc_ªp_∑π
;

1082 
	s_krb5_kdc_ªp
 {

1083 
krb5_magic
 
	mmagic
;

1085 
krb5_msgty≥
 
	mmsg_ty≥
;

1086 
krb5_∑_d©a
 **
	m∑d©a
;

1087 
krb5_¥öcùÆ
 
	m˛õ¡
;

1088 
krb5_tickë
 *
	mtickë
;

1089 
krb5_íc_d©a
 
	míc_∑π
;

1091 
krb5_íc_kdc_ªp_∑π
 *
	míc_∑π2
;

1092 } 
	tkrb5_kdc_ªp
;

1095 
	s_krb5_îr‹
 {

1096 
krb5_magic
 
	mmagic
;

1098 
krb5_time°amp
 
	m˘ime
;

1099 
krb5_öt32
 
	mcu£c
;

1100 
krb5_öt32
 
	msu£c
;

1101 
krb5_time°amp
 
	m°ime
;

1102 
krb5_ui_4
 
	mîr‹
;

1103 
krb5_¥öcùÆ
 
	m˛õ¡
;

1105 
krb5_¥öcùÆ
 
	m£rvî
;

1106 
krb5_d©a
 
	mãxt
;

1107 
krb5_d©a
 
	me_d©a
;

1108 } 
	tkrb5_îr‹
;

1110 
	s_krb5_≠_ªq
 {

1111 
krb5_magic
 
	mmagic
;

1112 
krb5_Êags
 
	m≠_›ti⁄s
;

1113 
krb5_tickë
 *
	mtickë
;

1114 
krb5_íc_d©a
 
	mauthítiˇt‹
;

1115 } 
	tkrb5_≠_ªq
;

1117 
	s_krb5_≠_ªp
 {

1118 
krb5_magic
 
	mmagic
;

1119 
krb5_íc_d©a
 
	míc_∑π
;

1120 } 
	tkrb5_≠_ªp
;

1122 
	s_krb5_≠_ªp_íc_∑π
 {

1123 
krb5_magic
 
	mmagic
;

1124 
krb5_time°amp
 
	m˘ime
;

1125 
krb5_öt32
 
	mcu£c
;

1126 
krb5_keyblock
 *
	msubkey
;

1127 
krb5_ui_4
 
	m£q_numbî
;

1128 } 
	tkrb5_≠_ªp_íc_∑π
;

1130 
	s_krb5_ª•⁄£
 {

1131 
krb5_magic
 
	mmagic
;

1132 
krb5_o˘ë
 
	mmesßge_ty≥
;

1133 
krb5_d©a
 
	mª•⁄£
;

1134 
krb5_öt32
 
	mex≥˘ed_n⁄˚
;

1135 
krb5_time°amp
 
	mªque°_time
;

1136 } 
	tkrb5_ª•⁄£
;

1138 
	s_krb5_¸ed_öfo
 {

1139 
krb5_magic
 
	mmagic
;

1140 
krb5_keyblock
 *
	m£ssi⁄
;

1142 
krb5_¥öcùÆ
 
	m˛õ¡
;

1143 
krb5_¥öcùÆ
 
	m£rvî
;

1144 
krb5_Êags
 
	mÊags
;

1145 
krb5_tickë_times
 
	mtimes
;

1147 
krb5_addªss
 **
	mˇddrs
;

1148 } 
	tkrb5_¸ed_öfo
;

1150 
	s_krb5_¸ed_íc_∑π
 {

1151 
krb5_magic
 
	mmagic
;

1152 
krb5_öt32
 
	mn⁄˚
;

1153 
krb5_time°amp
 
	mtime°amp
;

1154 
krb5_öt32
 
	mu£c
;

1155 
krb5_addªss
 *
	ms_addªss
;

1156 
krb5_addªss
 *
	mr_addªss
;

1157 
krb5_¸ed_öfo
 **
	mtickë_öfo
;

1158 } 
	tkrb5_¸ed_íc_∑π
;

1160 
	s_krb5_¸ed
 {

1161 
krb5_magic
 
	mmagic
;

1162 
krb5_tickë
 **
	mtickës
;

1163 
krb5_íc_d©a
 
	míc_∑π
;

1164 
krb5_¸ed_íc_∑π
 *
	míc_∑π2
;

1165 } 
	tkrb5_¸ed
;

1168 
	s_∑sswd_phø£_ñemít
 {

1169 
krb5_magic
 
	mmagic
;

1170 
krb5_d©a
 *
	m∑sswd
;

1171 
krb5_d©a
 *
	mphø£
;

1172 } 
	t∑sswd_phø£_ñemít
;

1174 
	s_krb5_pwd_d©a
 {

1175 
krb5_magic
 
	mmagic
;

1176 
	m£quí˚_cou¡
;

1177 
∑sswd_phø£_ñemít
 **
	mñemít
;

1178 } 
	tkrb5_pwd_d©a
;

1186 
	#KRB5_AUTH_CONTEXT_DO_TIME
 0x00000001

	)

1187 
	#KRB5_AUTH_CONTEXT_RET_TIME
 0x00000002

	)

1188 
	#KRB5_AUTH_CONTEXT_DO_SEQUENCE
 0x00000004

	)

1189 
	#KRB5_AUTH_CONTEXT_RET_SEQUENCE
 0x00000008

	)

1190 
	#KRB5_AUTH_CONTEXT_PERMIT_ALL
 0x00000010

	)

1191 
	#KRB5_AUTH_CONTEXT_USE_SUBKEY
 0x00000020

	)

1193 
	skrb5_ª∂ay_d©a
 {

1194 
krb5_time°amp
 
	mtime°amp
;

1195 
krb5_öt32
 
	mu£c
;

1196 
krb5_ui_4
 
	m£q
;

1197 } 
	tkrb5_ª∂ay_d©a
;

1200 
	#KRB5_AUTH_CONTEXT_GENERATE_LOCAL_ADDR
 0x00000001

	)

1201 
	#KRB5_AUTH_CONTEXT_GENERATE_REMOTE_ADDR
 0x00000002

	)

1202 
	#KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR
 0x00000004

	)

1203 
	#KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR
 0x00000008

	)

1208 
	gkrb5_îr‹_code


1209 (
	tKRB5_CALLCONV
 * 
	tkrb5_mk_ªq_checksum_func
Ë(
	tkrb5_c⁄ãxt
, 
	tkrb5_auth_c⁄ãxt
 , *,

1210 
	tkrb5_d©a
 **);

1221 
krb5_poöãr
 
	tkrb5_cc_curs‹
;

1223 
	g_krb5_cˇche
;

1224 
_krb5_cˇche
 *
	tkrb5_cˇche
;

1225 
	g_krb5_cc_›s
;

1226 
_krb5_cc_›s
 
	tkrb5_cc_›s
;

1231 
	g_krb5_cccﬁ_curs‹
;

1232 
_krb5_cccﬁ_curs‹
 *
	tkrb5_cccﬁ_curs‹
;

1235 
	#KRB5_TC_MATCH_TIMES
 0x00000001

	)

1236 
	#KRB5_TC_MATCH_IS_SKEY
 0x00000002

	)

1237 
	#KRB5_TC_MATCH_FLAGS
 0x00000004

	)

1238 
	#KRB5_TC_MATCH_TIMES_EXACT
 0x00000008

	)

1239 
	#KRB5_TC_MATCH_FLAGS_EXACT
 0x00000010

	)

1240 
	#KRB5_TC_MATCH_AUTHDATA
 0x00000020

	)

1241 
	#KRB5_TC_MATCH_SRV_NAMEONLY
 0x00000040

	)

1242 
	#KRB5_TC_MATCH_2ND_TKT
 0x00000080

	)

1243 
	#KRB5_TC_MATCH_KTYPE
 0x00000100

	)

1244 
	#KRB5_TC_SUPPORTED_KTYPES
 0x00000200

	)

1247 
	#KRB5_TC_OPENCLOSE
 0x00000001

	)

1248 
	#KRB5_TC_NOTICKET
 0x00000002

	)

1250 c⁄° * 
KRB5_CALLCONV


1251 
krb5_cc_gë_«me
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1253 
krb5_îr‹_code
 
KRB5_CALLCONV


1254 
krb5_cc_gí_√w
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 *
ˇche
);

1256 
krb5_îr‹_code
 
KRB5_CALLCONV


1257 
krb5_cc_öôülize
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1258 
krb5_¥öcùÆ
 
¥öcùÆ
);

1260 
krb5_îr‹_code
 
KRB5_CALLCONV


1261 
krb5_cc_de°roy
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1263 
krb5_îr‹_code
 
KRB5_CALLCONV


1264 
krb5_cc_˛o£
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1266 
krb5_îr‹_code
 
KRB5_CALLCONV


1267 
krb5_cc_°‹e_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1268 
krb5_¸eds
 *
¸eds
);

1270 
krb5_îr‹_code
 
KRB5_CALLCONV


1271 
krb5_cc_ªåõve_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1272 
krb5_Êags
 
Êags
, 
krb5_¸eds
 *
m¸eds
,

1273 
krb5_¸eds
 *
¸eds
);

1275 
krb5_îr‹_code
 
KRB5_CALLCONV


1276 
krb5_cc_gë_¥öcùÆ
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1277 
krb5_¥öcùÆ
 *
¥öcùÆ
);

1279 
krb5_îr‹_code
 
KRB5_CALLCONV


1280 
krb5_cc_°¨t_£q_gë
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1281 
krb5_cc_curs‹
 *
curs‹
);

1283 
krb5_îr‹_code
 
KRB5_CALLCONV


1284 
krb5_cc_√xt_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1285 
krb5_cc_curs‹
 *
curs‹
, 
krb5_¸eds
 *
¸eds
);

1287 
krb5_îr‹_code
 
KRB5_CALLCONV


1288 
krb5_cc_íd_£q_gë
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1289 
krb5_cc_curs‹
 *
curs‹
);

1291 
krb5_îr‹_code
 
KRB5_CALLCONV


1292 
krb5_cc_ªmove_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 
Êags
,

1293 
krb5_¸eds
 *
¸eds
);

1295 
krb5_îr‹_code
 
KRB5_CALLCONV


1296 
krb5_cc_£t_Êags
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 
Êags
);

1298 
krb5_îr‹_code
 
KRB5_CALLCONV


1299 
krb5_cc_gë_Êags
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 *
Êags
);

1301 c⁄° * 
KRB5_CALLCONV


1302 
krb5_cc_gë_ty≥
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1304 
krb5_îr‹_code
 
KRB5_CALLCONV


1305 
krb5_cccﬁ_curs‹_√w
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cccﬁ_curs‹
 *
curs‹
);

1307 
krb5_îr‹_code
 
KRB5_CALLCONV


1308 
krb5_cccﬁ_curs‹_√xt
(

1309 
krb5_c⁄ãxt
 
c⁄ãxt
,

1310 
krb5_cccﬁ_curs‹
 
curs‹
,

1311 
krb5_cˇche
 *
cˇche
);

1313 
krb5_îr‹_code
 
KRB5_CALLCONV


1314 
krb5_cccﬁ_curs‹_‰ì
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cccﬁ_curs‹
 *
curs‹
);

1316 
krb5_îr‹_code
 
KRB5_CALLCONV


1317 
krb5_cc_√w_unique
(

1318 
krb5_c⁄ãxt
 
c⁄ãxt
,

1319 c⁄° *
ty≥
,

1320 c⁄° *
höt
,

1321 
krb5_cˇche
 *
id
);

1331 
	gkrb5_rc_°
;

1332 
krb5_rc_°
 *
	tkrb5_rˇche
;

1344 
	#MAX_KEYTAB_NAME_LEN
 1100

	)

1346 
krb5_poöãr
 
	tkrb5_kt_curs‹
;

1348 
	skrb5_keyèb_íåy_°
 {

1349 
krb5_magic
 
	mmagic
;

1350 
krb5_¥öcùÆ
 
	m¥öcùÆ
;

1351 
krb5_time°amp
 
	mtime°amp
;

1352 
krb5_kvno
 
	mvno
;

1353 
krb5_keyblock
 
	mkey
;

1354 } 
	tkrb5_keyèb_íåy
;

1356 #i‡
KRB5_PRIVATE


1357 
	g_krb5_kt_›s
;

1358 
	s_krb5_kt
 {

1359 
krb5_magic
 
	mmagic
;

1360 c⁄° 
_krb5_kt_›s
 *
	m›s
;

1361 
krb5_poöãr
 
	md©a
;

1362 } *
	tkrb5_keyèb
;

1364 
	g_krb5_kt
;

1365 
_krb5_kt
 *
	tkrb5_keyèb
;

1368 * 
KRB5_CALLCONV


1369 
krb5_kt_gë_ty≥
 (
krb5_c⁄ãxt
, 
krb5_keyèb
 
keyèb
);

1370 
krb5_îr‹_code
 
KRB5_CALLCONV


1371 
krb5_kt_gë_«me
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
, *
«me
,

1372 
«mñí
);

1373 
krb5_îr‹_code
 
KRB5_CALLCONV


1374 
krb5_kt_˛o£
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
);

1375 
krb5_îr‹_code
 
KRB5_CALLCONV


1376 
krb5_kt_gë_íåy
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1377 
krb5_c⁄°_¥öcùÆ
 
¥öcùÆ
, 
krb5_kvno
 
vno
,

1378 
krb5_í˘y≥
 
í˘y≥
, 
krb5_keyèb_íåy
 *
íåy
);

1379 
krb5_îr‹_code
 
KRB5_CALLCONV


1380 
krb5_kt_°¨t_£q_gë
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1381 
krb5_kt_curs‹
 *
curs‹
);

1382 
krb5_îr‹_code
 
KRB5_CALLCONV


1383 
krb5_kt_√xt_íåy
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1384 
krb5_keyèb_íåy
 *
íåy
, 
krb5_kt_curs‹
 *
curs‹
);

1385 
krb5_îr‹_code
 
KRB5_CALLCONV


1386 
krb5_kt_íd_£q_gë
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1387 
krb5_kt_curs‹
 *
curs‹
);

1397 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_c⁄ãxt


1398 (
	gkrb5_c⁄ãxt
 *);

1399 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_£cuª_c⁄ãxt


1400 (
	gkrb5_c⁄ãxt
 *);

1401 
KRB5_CALLCONV
 
	gkrb5_‰ì_c⁄ãxt


1402 (
	gkrb5_c⁄ãxt
);

1403 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_c⁄ãxt


1404 (
	gkrb5_c⁄ãxt
, krb5_context *);

1406 #i‡
KRB5_PRIVATE


1407 
krb5_îr‹_code
 
	gkrb5_£t_deÁu…_ö_tkt_kty≥s


1408 (
	gkrb5_c⁄ãxt
,

1409 c⁄° 
	gkrb5_í˘y≥
 *);

1410 
krb5_îr‹_code
 
	gkrb5_gë_deÁu…_ö_tkt_kty≥s


1411 (
	gkrb5_c⁄ãxt
,

1412 
	gkrb5_í˘y≥
 **);

1414 
krb5_îr‹_code
 
	gkrb5_£t_deÁu…_tgs_kty≥s


1415 (
	gkrb5_c⁄ãxt
,

1416 c⁄° 
	gkrb5_í˘y≥
 *);

1419 
krb5_îr‹_code
 
KRB5_CALLCONV


1420 
	gkrb5_£t_deÁu…_tgs_í˘y≥s


1421 (
	gkrb5_c⁄ãxt
,

1422 c⁄° 
	gkrb5_í˘y≥
 *);

1423 #i‡
KRB5_PRIVATE


1424 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_tgs_kty≥s


1425 (
	gkrb5_c⁄ãxt
,

1426 
	gkrb5_c⁄°_¥öcùÆ
,

1427 
	gkrb5_í˘y≥
 **);

1430 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_≥rmôãd_í˘y≥s


1431 (
	gkrb5_c⁄ãxt
, 
	gkrb5_í˘y≥
 **);

1433 #i‡
KRB5_PRIVATE


1434 
KRB5_CALLCONV
 
	gkrb5_‰ì_kty≥s


1435 (
	gkrb5_c⁄ãxt
, 
	gkrb5_í˘y≥
 *);

1437 
krb5_boﬁón
 
	gkrb5_is_≥rmôãd_í˘y≥


1438 (
	gkrb5_c⁄ãxt
, 
	gkrb5_í˘y≥
);

1441 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_is_thªad_ß„
();

1444 #i‡
KRB5_PRIVATE


1445 
krb5_îr‹_code
 
	gkrb5_kdc_ªp_de¸y±_¥oc


1446 (
	gkrb5_c⁄ãxt
,

1447 c⁄° 
	gkrb5_keyblock
 *,

1448 
	gkrb5_c⁄°_poöãr
,

1449 
	gkrb5_kdc_ªp
 * );

1450 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_de¸y±_tkt_∑π


1451 (
	gkrb5_c⁄ãxt
,

1452 c⁄° 
	gkrb5_keyblock
 *,

1453 
	gkrb5_tickë
 * );

1454 
krb5_îr‹_code
 
	gkrb5_gë_¸ed_‰om_kdc


1455 (
	gkrb5_c⁄ãxt
,

1456 
	gkrb5_cˇche
,

1458 
	gkrb5_¸eds
 *,

1459 
	gkrb5_¸eds
 **,

1460 
	gkrb5_¸eds
 *** );

1461 
krb5_îr‹_code
 
	gkrb5_gë_¸ed_‰om_kdc_vÆid©e


1462 (
	gkrb5_c⁄ãxt
,

1463 
	gkrb5_cˇche
,

1465 
	gkrb5_¸eds
 *,

1466 
	gkrb5_¸eds
 **,

1467 
	gkrb5_¸eds
 *** );

1468 
krb5_îr‹_code
 
	gkrb5_gë_¸ed_‰om_kdc_ª√w


1469 (
	gkrb5_c⁄ãxt
,

1470 
	gkrb5_cˇche
,

1472 
	gkrb5_¸eds
 *,

1473 
	gkrb5_¸eds
 **,

1474 
	gkrb5_¸eds
 *** );

1476 
krb5_îr‹_code
 
KRB5_CALLCONV


1477 
	gkrb5öt_£rvî_de¸y±_tickë_keyblock


1478 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

1479 c⁄° 
krb5_keyblock
 *
	gkey
,

1480 
krb5_tickë
 *
	gtickë
);

1483 
krb5_îr‹_code
 
KRB5_CALLCONV


1484 
	gkrb5_£rvî_de¸y±_tickë_keyèb


1485 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

1486 c⁄° 
krb5_keyèb
 
	gkt
,

1487 
krb5_tickë
 *
	gtickë
);

1489 
KRB5_CALLCONV
 
	gkrb5_‰ì_tgt_¸eds


1490 (
	gkrb5_c⁄ãxt
,

1491 
	gkrb5_¸eds
 **);

1493 
	#KRB5_GC_USER_USER
 1

	)

1494 
	#KRB5_GC_CACHED
 2

	)

1496 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls


1497 (
	gkrb5_c⁄ãxt
,

1498 
	gkrb5_Êags
,

1499 
	gkrb5_cˇche
,

1500 
	gkrb5_¸eds
 *,

1501 
	gkrb5_¸eds
 **);

1502 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls_vÆid©e


1503 (
	gkrb5_c⁄ãxt
,

1504 
	gkrb5_Êags
,

1505 
	gkrb5_cˇche
,

1506 
	gkrb5_¸eds
 *,

1507 
	gkrb5_¸eds
 **);

1508 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls_ª√w


1509 (
	gkrb5_c⁄ãxt
,

1510 
	gkrb5_Êags
,

1511 
	gkrb5_cˇche
,

1512 
	gkrb5_¸eds
 *,

1513 
	gkrb5_¸eds
 **);

1514 #i‡
KRB5_PRIVATE


1515 
krb5_îr‹_code
 
	gkrb5_gë_¸ed_vü_tkt


1516 (
	gkrb5_c⁄ãxt
,

1517 
	gkrb5_¸eds
 *,

1518 
	gkrb5_Êags
,

1519 
krb5_addªss
 * const *,

1520 
	gkrb5_¸eds
 *,

1521 
	gkrb5_¸eds
 **);

1523 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªq


1524 (
	gkrb5_c⁄ãxt
,

1525 
	gkrb5_auth_c⁄ãxt
 *,

1526 
	gkrb5_Êags
,

1529 
	gkrb5_d©a
 *,

1530 
	gkrb5_cˇche
,

1531 
	gkrb5_d©a
 * );

1532 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªq_exãnded


1533 (
	gkrb5_c⁄ãxt
,

1534 
	gkrb5_auth_c⁄ãxt
 *,

1535 
	gkrb5_Êags
,

1536 
	gkrb5_d©a
 *,

1537 
	gkrb5_¸eds
 *,

1538 
	gkrb5_d©a
 * );

1539 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªp


1540 (
	gkrb5_c⁄ãxt
,

1541 
	gkrb5_auth_c⁄ãxt
,

1542 
	gkrb5_d©a
 *);

1543 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_ªp


1544 (
	gkrb5_c⁄ãxt
,

1545 
	gkrb5_auth_c⁄ãxt
,

1546 c⁄° 
	gkrb5_d©a
 *,

1547 
	gkrb5_≠_ªp_íc_∑π
 **);

1548 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_îr‹


1549 (
	gkrb5_c⁄ãxt
,

1550 c⁄° 
	gkrb5_îr‹
 *,

1551 
	gkrb5_d©a
 * );

1552 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_îr‹


1553 (
	gkrb5_c⁄ãxt
,

1554 c⁄° 
	gkrb5_d©a
 *,

1555 
	gkrb5_îr‹
 ** );

1556 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_ß„


1557 (
	gkrb5_c⁄ãxt
,

1558 
	gkrb5_auth_c⁄ãxt
,

1559 c⁄° 
	gkrb5_d©a
 *,

1560 
	gkrb5_d©a
 *,

1561 
	gkrb5_ª∂ay_d©a
 *);

1562 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_¥iv


1563 (
	gkrb5_c⁄ãxt
,

1564 
	gkrb5_auth_c⁄ãxt
,

1565 c⁄° 
	gkrb5_d©a
 *,

1566 
	gkrb5_d©a
 *,

1567 
	gkrb5_ª∂ay_d©a
 *);

1568 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_∑r£_«me


1569 (
	gkrb5_c⁄ãxt
,

1571 
	gkrb5_¥öcùÆ
 * );

1572 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me


1573 (
	gkrb5_c⁄ãxt
,

1574 
	gkrb5_c⁄°_¥öcùÆ
,

1576 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me_ext


1577 (
	gkrb5_c⁄ãxt
,

1578 
	gkrb5_c⁄°_¥öcùÆ
,

1582 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_£t_¥öcùÆ_ªÆm


1583 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
, const *);

1585 
krb5_boﬁón
 
KRB5_CALLCONV_WRONG
 
	gkrb5_addªss_£¨ch


1586 (
	gkrb5_c⁄ãxt
,

1587 c⁄° 
	gkrb5_addªss
 *,

1588 
krb5_addªss
 * const *);

1589 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_addªss_com∑ª


1590 (
	gkrb5_c⁄ãxt
,

1591 c⁄° 
	gkrb5_addªss
 *,

1592 c⁄° 
	gkrb5_addªss
 *);

1593 
KRB5_CALLCONV
 
	gkrb5_addªss_‹dî


1594 (
	gkrb5_c⁄ãxt
,

1595 c⁄° 
	gkrb5_addªss
 *,

1596 c⁄° 
	gkrb5_addªss
 *);

1597 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_ªÆm_com∑ª


1598 (
	gkrb5_c⁄ãxt
,

1599 
	gkrb5_c⁄°_¥öcùÆ
,

1600 
	gkrb5_c⁄°_¥öcùÆ
);

1601 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_¥öcùÆ_com∑ª


1602 (
	gkrb5_c⁄ãxt
,

1603 
	gkrb5_c⁄°_¥öcùÆ
,

1604 
	gkrb5_c⁄°_¥öcùÆ
);

1605 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_keyblock


1606 (
	gkrb5_c⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

1607 
size_t
 
	gÀngth
, 
krb5_keyblock
 **
	gout
);

1614 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_keyblock


1615 (
	gkrb5_c⁄ãxt
,

1616 c⁄° 
	gkrb5_keyblock
 *,

1617 
	gkrb5_keyblock
 **);

1618 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_keyblock_c⁄ã¡s


1619 (
	gkrb5_c⁄ãxt
,

1620 c⁄° 
	gkrb5_keyblock
 *,

1621 
	gkrb5_keyblock
 *);

1622 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_¸eds


1623 (
	gkrb5_c⁄ãxt
,

1624 c⁄° 
	gkrb5_¸eds
 *,

1625 
	gkrb5_¸eds
 **);

1626 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_d©a


1627 (
	gkrb5_c⁄ãxt
,

1628 c⁄° 
	gkrb5_d©a
 *,

1629 
	gkrb5_d©a
 **);

1630 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_¥öcùÆ


1631 (
	gkrb5_c⁄ãxt
,

1632 
	gkrb5_c⁄°_¥öcùÆ
,

1633 
	gkrb5_¥öcùÆ
 *);

1634 #i‡
KRB5_PRIVATE


1635 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_addr


1636 (
	gkrb5_c⁄ãxt
,

1637 c⁄° 
	gkrb5_addªss
 *,

1638 
	gkrb5_addªss
 **);

1640 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_addªs£s


1641 (
	gkrb5_c⁄ãxt
,

1642 
krb5_addªss
 * const *,

1643 
	gkrb5_addªss
 ***);

1644 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_tickë


1645 (
	gkrb5_c⁄ãxt
,

1646 c⁄° 
	gkrb5_tickë
 *,

1647 
	gkrb5_tickë
 **);

1648 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_authd©a


1649 (
	gkrb5_c⁄ãxt
,

1650 
krb5_authd©a
 * const *,

1651 
	gkrb5_authd©a
 ***);

1652 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_authítiˇt‹


1653 (
	gkrb5_c⁄ãxt
,

1654 c⁄° 
	gkrb5_authítiˇt‹
 *,

1655 
	gkrb5_authítiˇt‹
 **);

1656 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_checksum


1657 (
	gkrb5_c⁄ãxt
,

1658 c⁄° 
	gkrb5_checksum
 *,

1659 
	gkrb5_checksum
 **);

1660 #i‡
KRB5_PRIVATE


1661 
	gkrb5_öô_ës


1662 (
	gkrb5_c⁄ãxt
);

1663 
	gkrb5_‰ì_ës


1664 (
	gkrb5_c⁄ãxt
);

1665 
krb5_îr‹_code
 
	gkrb5_gíî©e_subkey


1666 (
	gkrb5_c⁄ãxt
,

1667 c⁄° 
	gkrb5_keyblock
 *, krb5_keyblock **);

1668 
krb5_îr‹_code
 
	gkrb5_gíî©e_£q_numbî


1669 (
	gkrb5_c⁄ãxt
,

1670 c⁄° 
	gkrb5_keyblock
 *, 
	gkrb5_ui_4
 *);

1672 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_£rvî_rˇche


1673 (
	gkrb5_c⁄ãxt
,

1674 c⁄° 
	gkrb5_d©a
 *, 
	gkrb5_rˇche
 *);

1675 
krb5_îr‹_code
 
KRB5_CALLCONV_C
 
	gkrb5_buûd_¥öcùÆ_ext


1676 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 *, , const *, ...);

1677 
krb5_îr‹_code
 
KRB5_CALLCONV_C
 
	gkrb5_buûd_¥öcùÆ


1678 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 *, , const *, ...);

1679 #ifde‡
va_°¨t


1681 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_buûd_¥öcùÆ_va


1682 (
	gkrb5_c⁄ãxt
,

1683 
	gkrb5_¥öcùÆ
, , c⁄° *, 
	gva_li°
);

1686 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_425_c⁄v_¥öcùÆ


1687 (
	gkrb5_c⁄ãxt
,

1688 c⁄° *
	g«me
,

1689 c⁄° *
	gö°™˚
, c⁄° *
	gªÆm
,

1690 
krb5_¥öcùÆ
 *
	g¥öc
);

1692 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_524_c⁄v_¥öcùÆ


1693 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_c⁄°_¥öcùÆ
 
	g¥öc
,

1694 *
	g«me
, *
	gö°
, *
	gªÆm
);

1696 
	g¸edítüls
;

1697 
KRB5_CALLCONV
 
	gkrb5_524_c⁄vît_¸eds


1698 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	gv5¸eds
,

1699 
¸edítüls
 *
	gv4¸eds
);

1700 #i‡
KRB5_DEPRECATED


1701 
	#krb524_c⁄vît_¸eds_kdc
 
krb5_524_c⁄vît_¸eds


	)

1702 
	#krb524_öô_ës
(
x
Ë(0)

	)

1706 #i‡
KRB5_PRIVATE


1707 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_ªgi°î


1708 (
	gkrb5_c⁄ãxt
,

1709 c⁄° 
	g_krb5_kt_›s
 * );

1712 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_ªsﬁve


1713 (
	gkrb5_c⁄ãxt
,

1715 
	gkrb5_keyèb
 * );

1716 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_deÁu…_«me


1717 (
	gkrb5_c⁄ãxt
,

1720 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_deÁu…


1721 (
	gkrb5_c⁄ãxt
,

1722 
	gkrb5_keyèb
 * );

1723 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyèb_íåy_c⁄ã¡s


1724 (
	gkrb5_c⁄ãxt
,

1725 
	gkrb5_keyèb_íåy
 * );

1726 #i‡
KRB5_PRIVATE


1728 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_‰ì_íåy


1729 (
	gkrb5_c⁄ãxt
,

1730 
	gkrb5_keyèb_íåy
 * );

1734 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_ªmove_íåy


1735 (
	gkrb5_c⁄ãxt
,

1736 
	gkrb5_keyèb
,

1737 
	gkrb5_keyèb_íåy
 * );

1738 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_add_íåy


1739 (
	gkrb5_c⁄ãxt
,

1740 
	gkrb5_keyèb
,

1741 
	gkrb5_keyèb_íåy
 * );

1742 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
	gkrb5_¥öcùÆ2ß…


1743 (
	gkrb5_c⁄ãxt
,

1744 
	gkrb5_c⁄°_¥öcùÆ
, 
	gkrb5_d©a
 *);

1745 #i‡
KRB5_PRIVATE


1746 
krb5_îr‹_code
 
	gkrb5_¥öcùÆ2ß…_n‹ólm


1747 (
	gkrb5_c⁄ãxt
,

1748 
	gkrb5_c⁄°_¥öcùÆ
, 
	gkrb5_d©a
 *);

1753 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_ªsﬁve


1754 (
	gkrb5_c⁄ãxt
,

1756 
	gkrb5_cˇche
 * );

1757 c⁄° * 
KRB5_CALLCONV
 
	gkrb5_cc_deÁu…_«me


1758 (
	gkrb5_c⁄ãxt
);

1759 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_£t_deÁu…_«me


1760 (
	gkrb5_c⁄ãxt
, const *);

1761 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_deÁu…


1762 (
	gkrb5_c⁄ãxt
,

1763 
	gkrb5_cˇche
 *);

1764 #i‡
KRB5_PRIVATE


1765 
KRB5_CALLCONV
 
	gkrb5_gë_nŸifiˇti⁄_mesßge


1769 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_c›y_¸eds


1770 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

1771 
krb5_cˇche
 
	göcc
,

1772 
krb5_cˇche
 
	goutcc
);

1776 #i‡
KRB5_PRIVATE


1777 
krb5_îr‹_code
 
	gkrb5_check_å™sôed_li°


1778 (
	gkrb5_c⁄ãxt
, c⁄° 
krb5_d©a
 *
	gå™s
,

1779 c⁄° 
krb5_d©a
 *
	gªÆm1
, c⁄° krb5_d©®*
	gªÆm2
);

1783 #i‡
KRB5_PRIVATE


1784 
	gkrb5_‰ì_ªÆm_åì


1785 (
	gkrb5_c⁄ãxt
,

1786 
	gkrb5_¥öcùÆ
 *);

1790 
KRB5_CALLCONV
 
	gkrb5_‰ì_¥öcùÆ


1791 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 );

1792 
KRB5_CALLCONV
 
	gkrb5_‰ì_authítiˇt‹


1793 (
	gkrb5_c⁄ãxt
, 
	gkrb5_authítiˇt‹
 * );

1794 #i‡
KRB5_PRIVATE


1795 
KRB5_CALLCONV
 
	gkrb5_‰ì_authítiˇt‹_c⁄ã¡s


1796 (
	gkrb5_c⁄ãxt
, 
	gkrb5_authítiˇt‹
 * );

1798 
KRB5_CALLCONV
 
	gkrb5_‰ì_addªs£s


1799 (
	gkrb5_c⁄ãxt
, 
	gkrb5_addªss
 ** );

1800 #i‡
KRB5_PRIVATE


1801 
KRB5_CALLCONV
 
	gkrb5_‰ì_addªss


1802 (
	gkrb5_c⁄ãxt
, 
	gkrb5_addªss
 * );

1804 
KRB5_CALLCONV
 
	gkrb5_‰ì_authd©a


1805 (
	gkrb5_c⁄ãxt
, 
	gkrb5_authd©a
 ** );

1806 #i‡
KRB5_PRIVATE


1807 
KRB5_CALLCONV
 
	gkrb5_‰ì_íc_tkt_∑π


1808 (
	gkrb5_c⁄ãxt
, 
	gkrb5_íc_tkt_∑π
 * );

1810 
KRB5_CALLCONV
 
	gkrb5_‰ì_tickë


1811 (
	gkrb5_c⁄ãxt
, 
	gkrb5_tickë
 * );

1812 #i‡
KRB5_PRIVATE


1813 
KRB5_CALLCONV
 
	gkrb5_‰ì_tickës


1814 (
	gkrb5_c⁄ãxt
, 
	gkrb5_tickë
 ** );

1815 
KRB5_CALLCONV
 
	gkrb5_‰ì_kdc_ªq


1816 (
	gkrb5_c⁄ãxt
, 
	gkrb5_kdc_ªq
 * );

1817 
KRB5_CALLCONV
 
	gkrb5_‰ì_kdc_ªp


1818 (
	gkrb5_c⁄ãxt
, 
	gkrb5_kdc_ªp
 * );

1819 
KRB5_CALLCONV
 
	gkrb5_‰ì_œ°_ªq


1820 (
	gkrb5_c⁄ãxt
, 
	gkrb5_œ°_ªq_íåy
 ** );

1821 
KRB5_CALLCONV
 
	gkrb5_‰ì_íc_kdc_ªp_∑π


1822 (
	gkrb5_c⁄ãxt
, 
	gkrb5_íc_kdc_ªp_∑π
 * );

1824 
KRB5_CALLCONV
 
	gkrb5_‰ì_îr‹


1825 (
	gkrb5_c⁄ãxt
, 
	gkrb5_îr‹
 * );

1826 #i‡
KRB5_PRIVATE


1827 
KRB5_CALLCONV
 
	gkrb5_‰ì_≠_ªq


1828 (
	gkrb5_c⁄ãxt
, 
	gkrb5_≠_ªq
 * );

1829 
KRB5_CALLCONV
 
	gkrb5_‰ì_≠_ªp


1830 (
	gkrb5_c⁄ãxt
, 
	gkrb5_≠_ªp
 * );

1831 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸ed


1832 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸ed
 *);

1834 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸eds


1835 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸eds
 *);

1836 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸ed_c⁄ã¡s


1837 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸eds
 *);

1838 #i‡
KRB5_PRIVATE


1839 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸ed_íc_∑π


1840 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸ed_íc_∑π
 *);

1842 
KRB5_CALLCONV
 
	gkrb5_‰ì_checksum


1843 (
	gkrb5_c⁄ãxt
, 
	gkrb5_checksum
 *);

1844 
KRB5_CALLCONV
 
	gkrb5_‰ì_checksum_c⁄ã¡s


1845 (
	gkrb5_c⁄ãxt
, 
	gkrb5_checksum
 *);

1846 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyblock


1847 (
	gkrb5_c⁄ãxt
, 
	gkrb5_keyblock
 *);

1848 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyblock_c⁄ã¡s


1849 (
	gkrb5_c⁄ãxt
, 
	gkrb5_keyblock
 *);

1850 #i‡
KRB5_PRIVATE


1851 
KRB5_CALLCONV
 
	gkrb5_‰ì_∑_d©a


1852 (
	gkrb5_c⁄ãxt
, 
	gkrb5_∑_d©a
 **);

1854 
KRB5_CALLCONV
 
	gkrb5_‰ì_≠_ªp_íc_∑π


1855 (
	gkrb5_c⁄ãxt
, 
	gkrb5_≠_ªp_íc_∑π
 *);

1856 #i‡
KRB5_PRIVATE


1857 
KRB5_CALLCONV
 
	gkrb5_‰ì_tkt_authít


1858 (
	gkrb5_c⁄ãxt
, 
	gkrb5_tkt_authít
 *);

1859 
KRB5_CALLCONV
 
	gkrb5_‰ì_pwd_d©a


1860 (
	gkrb5_c⁄ãxt
, 
	gkrb5_pwd_d©a
 *);

1861 
KRB5_CALLCONV
 
	gkrb5_‰ì_pwd_£quí˚s


1862 (
	gkrb5_c⁄ãxt
, 
	g∑sswd_phø£_ñemít
 **);

1864 
KRB5_CALLCONV
 
	gkrb5_‰ì_d©a


1865 (
	gkrb5_c⁄ãxt
, 
	gkrb5_d©a
 *);

1866 
KRB5_CALLCONV
 
	gkrb5_‰ì_d©a_c⁄ã¡s


1867 (
	gkrb5_c⁄ãxt
, 
	gkrb5_d©a
 *);

1868 
KRB5_CALLCONV
 
	gkrb5_‰ì_u≈¨£d_«me


1869 (
	gkrb5_c⁄ãxt
, *);

1870 
KRB5_CALLCONV
 
	gkrb5_‰ì_cksumty≥s


1871 (
	gkrb5_c⁄ãxt
, 
	gkrb5_cksumty≥
 *);

1874 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_us_timeofday


1875 (
	gkrb5_c⁄ãxt
,

1876 
	gkrb5_time°amp
 *,

1877 
	gkrb5_öt32
 * );

1878 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_timeofday


1879 (
	gkrb5_c⁄ãxt
,

1880 
	gkrb5_time°amp
 * );

1882 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_os_loˇœddr


1883 (
	gkrb5_c⁄ãxt
,

1884 
	gkrb5_addªss
 ***);

1885 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_deÁu…_ªÆm


1886 (
	gkrb5_c⁄ãxt
,

1888 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_£t_deÁu…_ªÆm


1889 (
	gkrb5_c⁄ãxt
,

1891 
KRB5_CALLCONV
 
	gkrb5_‰ì_deÁu…_ªÆm


1892 (
	gkrb5_c⁄ãxt
,

1894 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_¢ame_to_¥öcùÆ


1895 (
	gkrb5_c⁄ãxt
,

1898 
	gkrb5_öt32
,

1899 
	gkrb5_¥öcùÆ
 *);

1900 
krb5_îr‹_code
 
KRB5_CALLCONV


1901 
	gkrb5_ch™ge_∑ssw‹d


1902 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	g¸eds
, *
	g√wpw
,

1903 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
,

1904 
krb5_d©a
 *
	gªsu…_°rög
);

1905 
krb5_îr‹_code
 
KRB5_CALLCONV


1906 
	gkrb5_£t_∑ssw‹d


1907 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	g¸eds
, *
	g√wpw
, 
krb5_¥öcùÆ
 
	gch™ge_∑ssw‹d_f‹
,

1908 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
, krb5_d©®*
	gªsu…_°rög
);

1909 
krb5_îr‹_code
 
KRB5_CALLCONV


1910 
	gkrb5_£t_∑ssw‹d_usög_cˇche


1911 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cˇche
 
	gcˇche
, *
	g√wpw
, 
krb5_¥öcùÆ
 
	gch™ge_∑ssw‹d_f‹
,

1912 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
, krb5_d©®*
	gªsu…_°rög
);

1914 #i‡
KRB5_PRIVATE


1915 
krb5_îr‹_code
 
	gkrb5_£t_c⁄fig_fûes


1916 (
	gkrb5_c⁄ãxt
, const **);

1918 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_deÁu…_c⁄fig_fûes


1919 (***
	gfûíames
);

1921 
KRB5_CALLCONV
 
	gkrb5_‰ì_c⁄fig_fûes


1922 (**
	gfûíames
);

1925 
krb5_îr‹_code
 
KRB5_CALLCONV


1926 
	gkrb5_gë_¥ofûe


1927 (
	gkrb5_c⁄ãxt
, 
	g_¥ofûe_t
 * *);

1929 #i‡
KRB5_PRIVATE


1930 
krb5_îr‹_code
 
	gkrb5_£nd_tgs


1931 (
	gkrb5_c⁄ãxt
,

1932 
	gkrb5_Êags
,

1933 c⁄° 
	gkrb5_tickë_times
 *,

1934 c⁄° 
	gkrb5_í˘y≥
 *,

1935 
	gkrb5_c⁄°_¥öcùÆ
,

1936 
krb5_addªss
 * const *,

1937 
krb5_authd©a
 * const *,

1938 
krb5_∑_d©a
 * const *,

1939 c⁄° 
	gkrb5_d©a
 *,

1940 
	gkrb5_¸eds
 *,

1941 
	gkrb5_ª•⁄£
 * );

1944 #i‡
KRB5_DEPRECATED


1945 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_ö_tkt


1946 (
	gkrb5_c⁄ãxt
,

1947 
	gkrb5_Êags
,

1948 
krb5_addªss
 * const *,

1949 
	gkrb5_í˘y≥
 *,

1950 
	gkrb5_¥óuthty≥
 *,

1951 
	$krb5_îr‹_code
 ( * )(
krb5_c⁄ãxt
,

1952 
krb5_í˘y≥
,

1953 
krb5_d©a
 *,

1954 
krb5_c⁄°_poöãr
,

1955 
krb5_keyblock
 **),

1956 
krb5_c⁄°_poöãr
,

1957 
	$krb5_îr‹_code
 ( * )(
krb5_c⁄ãxt
,

1958 c⁄° 
krb5_keyblock
 *,

1959 
krb5_c⁄°_poöãr
,

1960 
krb5_kdc_ªp
 * ),

1961 
krb5_c⁄°_poöãr
,

1962 
krb5_¸eds
 *,

1963 
krb5_cˇche
,

1964 
krb5_kdc_ªp
 ** );

1966 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_∑ssw‹d


1967 (
krb5_c⁄ãxt
,

1968 
krb5_Êags
,

1969 
krb5_addªss
 * const *,

1970 
krb5_í˘y≥
 *,

1971 
krb5_¥óuthty≥
 *,

1973 
krb5_cˇche
,

1974 
krb5_¸eds
 *,

1975 
krb5_kdc_ªp
 ** );

1977 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_skey


1978 (
krb5_c⁄ãxt
,

1979 
krb5_Êags
,

1980 
krb5_addªss
 * const *,

1981 
krb5_í˘y≥
 *,

1982 
krb5_¥óuthty≥
 *,

1983 c⁄° 
krb5_keyblock
 *,

1984 
krb5_cˇche
,

1985 
krb5_¸eds
 *,

1986 
krb5_kdc_ªp
 ** );

1988 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_keyèb


1989 (
krb5_c⁄ãxt
,

1990 
krb5_Êags
,

1991 
krb5_addªss
 * const *,

1992 
krb5_í˘y≥
 *,

1993 
krb5_¥óuthty≥
 *,

1994 
krb5_keyèb
,

1995 
krb5_cˇche
,

1996 
krb5_¸eds
 *,

1997 
krb5_kdc_ªp
 ** );

2000 #i‡
KRB5_PRIVATE


2001 
krb5_îr‹_code
 
krb5_decode_kdc_ªp


2002 (
krb5_c⁄ãxt
,

2003 
krb5_d©a
 *,

2004 c⁄° 
krb5_keyblock
 *,

2005 
krb5_kdc_ªp
 ** );

2008 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_rd_ªq


2009 (
krb5_c⁄ãxt
,

2010 
krb5_auth_c⁄ãxt
 *,

2011 c⁄° 
krb5_d©a
 *,

2012 
krb5_c⁄°_¥öcùÆ
,

2013 
krb5_keyèb
,

2014 
krb5_Êags
 *,

2015 
krb5_tickë
 **);

2017 #i‡
KRB5_PRIVATE


2018 
krb5_îr‹_code
 
krb5_rd_ªq_decoded


2019 (
krb5_c⁄ãxt
,

2020 
krb5_auth_c⁄ãxt
 *,

2021 c⁄° 
krb5_≠_ªq
 *,

2022 
krb5_c⁄°_¥öcùÆ
,

2023 
krb5_keyèb
,

2024 
krb5_Êags
 *,

2025 
krb5_tickë
 **);

2027 
krb5_îr‹_code
 
krb5_rd_ªq_decoded_™yÊag


2028 (
krb5_c⁄ãxt
,

2029 
krb5_auth_c⁄ãxt
 *,

2030 c⁄° 
krb5_≠_ªq
 *,

2031 
krb5_c⁄°_¥öcùÆ
,

2032 
krb5_keyèb
,

2033 
krb5_Êags
 *,

2034 
krb5_tickë
 **);

2037 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_kt_ªad_£rvi˚_key


2038 (
krb5_c⁄ãxt
,

2039 
krb5_poöãr
,

2040 
krb5_¥öcùÆ
,

2041 
krb5_kvno
,

2042 
krb5_í˘y≥
,

2043 
krb5_keyblock
 **);

2044 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_ß„


2045 (
krb5_c⁄ãxt
,

2046 
krb5_auth_c⁄ãxt
,

2047 c⁄° 
krb5_d©a
 *,

2048 
krb5_d©a
 *,

2049 
krb5_ª∂ay_d©a
 *);

2050 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_¥iv


2051 (
krb5_c⁄ãxt
,

2052 
krb5_auth_c⁄ãxt
,

2053 c⁄° 
krb5_d©a
 *,

2054 
krb5_d©a
 *,

2055 
krb5_ª∂ay_d©a
 *);

2056 #i‡
KRB5_PRIVATE


2057 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_cc_ªgi°î


2058 (
krb5_c⁄ãxt
,

2059 
krb5_cc_›s
 *,

2060 
krb5_boﬁón
 );

2063 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_£ndauth


2064 (
krb5_c⁄ãxt
,

2065 
krb5_auth_c⁄ãxt
 *,

2066 
krb5_poöãr
,

2068 
krb5_¥öcùÆ
,

2069 
krb5_¥öcùÆ
,

2070 
krb5_Êags
,

2071 
krb5_d©a
 *,

2072 
krb5_¸eds
 *,

2073 
krb5_cˇche
,

2074 
krb5_îr‹
 **,

2075 
krb5_≠_ªp_íc_∑π
 **,

2076 
krb5_¸eds
 **);

2078 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªcvauth


2079 (
krb5_c⁄ãxt
,

2080 
krb5_auth_c⁄ãxt
 *,

2081 
krb5_poöãr
,

2083 
krb5_¥öcùÆ
,

2084 
krb5_öt32
,

2085 
krb5_keyèb
,

2086 
krb5_tickë
 **);

2087 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªcvauth_vîsi⁄


2088 (
krb5_c⁄ãxt
,

2089 
krb5_auth_c⁄ãxt
 *,

2090 
krb5_poöãr
,

2091 
krb5_¥öcùÆ
,

2092 
krb5_öt32
,

2093 
krb5_keyèb
,

2094 
krb5_tickë
 **,

2095 
krb5_d©a
 *);

2097 #i‡
KRB5_PRIVATE


2098 
krb5_îr‹_code
 
krb5_wÆk_ªÆm_åì


2099 (
krb5_c⁄ãxt
,

2100 c⁄° 
krb5_d©a
 *,

2101 c⁄° 
krb5_d©a
 *,

2102 
krb5_¥öcùÆ
 **,

2106 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_n¸ed


2107 (
krb5_c⁄ãxt
,

2108 
krb5_auth_c⁄ãxt
,

2109 
krb5_¸eds
 **,

2110 
krb5_d©a
 **,

2111 
krb5_ª∂ay_d©a
 *);

2113 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_1¸ed


2114 (
krb5_c⁄ãxt
,

2115 
krb5_auth_c⁄ãxt
,

2116 
krb5_¸eds
 *,

2117 
krb5_d©a
 **,

2118 
krb5_ª∂ay_d©a
 *);

2120 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_rd_¸ed


2121 (
krb5_c⁄ãxt
,

2122 
krb5_auth_c⁄ãxt
,

2123 
krb5_d©a
 *,

2124 
krb5_¸eds
 ***,

2125 
krb5_ª∂ay_d©a
 *);

2127 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_fwd_tgt_¸eds


2128 (
krb5_c⁄ãxt
,

2129 
krb5_auth_c⁄ãxt
,

2131 
krb5_¥öcùÆ
,

2132 
krb5_¥öcùÆ
,

2133 
krb5_cˇche
,

2134 
f‹w¨dabÀ
,

2135 
krb5_d©a
 *);

2137 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_öô


2138 (
krb5_c⁄ãxt
,

2139 
krb5_auth_c⁄ãxt
 *);

2141 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_‰ì


2142 (
krb5_c⁄ãxt
,

2143 
krb5_auth_c⁄ãxt
);

2145 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£tÊags


2146 (
krb5_c⁄ãxt
,

2147 
krb5_auth_c⁄ãxt
,

2148 
krb5_öt32
);

2150 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëÊags


2151 (
krb5_c⁄ãxt
,

2152 
krb5_auth_c⁄ãxt
,

2153 
krb5_öt32
 *);

2155 
krb5_îr‹_code
 
KRB5_CALLCONV


2156 
	`krb5_auth_c⁄_£t_checksum_func
 (
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
,

2157 
krb5_mk_ªq_checksum_func
, *);

2159 
krb5_îr‹_code
 
KRB5_CALLCONV


2160 
	`krb5_auth_c⁄_gë_checksum_func
–
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
,

2161 
krb5_mk_ªq_checksum_func
 *, **);

2163 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
krb5_auth_c⁄_£èddrs


2164 (
krb5_c⁄ãxt
,

2165 
krb5_auth_c⁄ãxt
,

2166 
krb5_addªss
 *,

2167 
krb5_addªss
 *);

2169 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëaddrs


2170 (
krb5_c⁄ãxt
,

2171 
krb5_auth_c⁄ãxt
,

2172 
krb5_addªss
 **,

2173 
krb5_addªss
 **);

2175 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£ç‹ts


2176 (
krb5_c⁄ãxt
,

2177 
krb5_auth_c⁄ãxt
,

2178 
krb5_addªss
 *,

2179 
krb5_addªss
 *);

2181 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£tu£ru£rkey


2182 (
krb5_c⁄ãxt
,

2183 
krb5_auth_c⁄ãxt
,

2184 
krb5_keyblock
 *);

2186 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëkey


2187 (
krb5_c⁄ãxt
,

2188 
krb5_auth_c⁄ãxt
,

2189 
krb5_keyblock
 **);

2191 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_gë£ndsubkey
(

2192 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 **);

2194 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_gëªcvsubkey
(

2195 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 **);

2197 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_£t£ndsubkey
(

2198 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 *);

2200 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_£åecvsubkey
(

2201 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 *);

2203 #i‡
KRB5_DEPRECATED


2204 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëloˇlsubkey


2205 (
krb5_c⁄ãxt
,

2206 
krb5_auth_c⁄ãxt
,

2207 
krb5_keyblock
 **);

2209 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëªmŸesubkey


2210 (
krb5_c⁄ãxt
,

2211 
krb5_auth_c⁄ãxt
,

2212 
krb5_keyblock
 **);

2215 #i‡
KRB5_PRIVATE


2216 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£t_ªq_cksumty≥


2217 (
krb5_c⁄ãxt
,

2218 
krb5_auth_c⁄ãxt
,

2219 
krb5_cksumty≥
);

2221 
krb5_îr‹_code
 
krb5_auth_c⁄_£t_ß„_cksumty≥


2222 (
krb5_c⁄ãxt
,

2223 
krb5_auth_c⁄ãxt
,

2224 
krb5_cksumty≥
);

2227 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëloˇl£qnumbî


2228 (
krb5_c⁄ãxt
,

2229 
krb5_auth_c⁄ãxt
,

2230 
krb5_öt32
 *);

2232 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëªmŸe£qnumbî


2233 (
krb5_c⁄ãxt
,

2234 
krb5_auth_c⁄ãxt
,

2235 
krb5_öt32
 *);

2237 #i‡
KRB5_DEPRECATED


2238 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_öôive˘‹


2239 (
krb5_c⁄ãxt
,

2240 
krb5_auth_c⁄ãxt
);

2243 #i‡
KRB5_PRIVATE


2244 
krb5_îr‹_code
 
krb5_auth_c⁄_£tive˘‹


2245 (
krb5_c⁄ãxt
,

2246 
krb5_auth_c⁄ãxt
,

2247 
krb5_poöãr
);

2249 
krb5_îr‹_code
 
krb5_auth_c⁄_gëive˘‹


2250 (
krb5_c⁄ãxt
,

2251 
krb5_auth_c⁄ãxt
,

2252 
krb5_poöãr
 *);

2255 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£åˇche


2256 (
krb5_c⁄ãxt
,

2257 
krb5_auth_c⁄ãxt
,

2258 
krb5_rˇche
);

2260 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
krb5_auth_c⁄_gërˇche


2261 (
krb5_c⁄ãxt
,

2262 
krb5_auth_c⁄ãxt
,

2263 
krb5_rˇche
 *);

2265 #i‡
KRB5_PRIVATE


2266 
krb5_îr‹_code
 
krb5_auth_c⁄_£çîmëy≥s


2267 (
krb5_c⁄ãxt
,

2268 
krb5_auth_c⁄ãxt
,

2269 c⁄° 
krb5_í˘y≥
 *);

2271 
krb5_îr‹_code
 
krb5_auth_c⁄_gë≥rmëy≥s


2272 (
krb5_c⁄ãxt
,

2273 
krb5_auth_c⁄ãxt
,

2274 
krb5_í˘y≥
 **);

2277 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëauthítiˇt‹


2278 (
krb5_c⁄ãxt
,

2279 
krb5_auth_c⁄ãxt
,

2280 
krb5_authítiˇt‹
 **);

2282 
	#KRB5_REALM_BRANCH_CHAR
 '.'

	)

2292 #i‡
KRB5_PRIVATE


2293 
krb5_îr‹_code
 
	`krb5_ªad_mesßge
 (
krb5_c⁄ãxt
, 
krb5_poöãr
, 
krb5_d©a
 *);

2294 
krb5_îr‹_code
 
	`krb5_wrôe_mesßge
 (
krb5_c⁄ãxt
, 
krb5_poöãr
, 
krb5_d©a
 *);

2295 
	`krb5_√t_ªad
 (
krb5_c⁄ãxt
, , *, );

2296 
	`krb5_√t_wrôe
 (
krb5_c⁄ãxt
, , const *, );

2299 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªad_∑ssw‹d


2300 (
krb5_c⁄ãxt
,

2305 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_™ame_to_loˇ ame


2306 (
krb5_c⁄ãxt
,

2307 
krb5_c⁄°_¥öcùÆ
,

2310 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ho°_ªÆm


2311 (
krb5_c⁄ãxt
,

2314 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ÁŒback_ho°_ªÆm


2315 (
krb5_c⁄ãxt
,

2316 
krb5_d©a
 *,

2318 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_‰ì_ho°_ªÆm


2319 (
krb5_c⁄ãxt
,

2321 #i‡
KRB5_PRIVATE


2322 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ªÆm_domaö


2323 (
krb5_c⁄ãxt
,

2327 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_ku£rok


2328 (
krb5_c⁄ãxt
,

2329 
krb5_¥öcùÆ
, const *);

2330 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gíaddrs


2331 (
krb5_c⁄ãxt
,

2332 
krb5_auth_c⁄ãxt
,

2334 #i‡
KRB5_PRIVATE


2335 
krb5_îr‹_code
 
krb5_gí_p‹èddr


2336 (
krb5_c⁄ãxt
,

2337 c⁄° 
krb5_addªss
 *,

2338 
krb5_c⁄°_poöãr
,

2339 
krb5_addªss
 **);

2340 
krb5_îr‹_code
 
krb5_gí_ª∂ay_«me


2341 (
krb5_c⁄ãxt
,

2342 c⁄° 
krb5_addªss
 *,

2345 
krb5_îr‹_code
 
krb5_make_fuŒaddr


2346 (
krb5_c⁄ãxt
,

2347 
krb5_addªss
 *,

2348 
krb5_addªss
 *,

2349 
krb5_addªss
 *);

2352 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_£t_ªÆ_time


2353 (
krb5_c⁄ãxt
, 
krb5_time°amp
, 
krb5_öt32
);

2355 #i‡
KRB5_PRIVATE


2356 
krb5_îr‹_code
 
krb5_£t_debuggög_time


2357 (
krb5_c⁄ãxt
, 
krb5_time°amp
, 
krb5_öt32
);

2358 
krb5_îr‹_code
 
krb5_u£_«tuøl_time


2359 (
krb5_c⁄ãxt
);

2361 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_time_off£ts


2362 (
krb5_c⁄ãxt
, 
krb5_time°amp
 *, 
krb5_öt32
 *);

2363 #i‡
KRB5_PRIVATE


2364 
krb5_îr‹_code
 
krb5_£t_time_off£ts


2365 (
krb5_c⁄ãxt
, 
krb5_time°amp
, 
krb5_öt32
);

2369 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_í˘y≥


2370 (*, 
krb5_í˘y≥
 *);

2371 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_ß…ty≥


2372 (*, 
krb5_öt32
 *);

2373 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_cksumty≥


2374 (*, 
krb5_cksumty≥
 *);

2375 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_time°amp


2376 (*, 
krb5_time°amp
 *);

2377 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_dñèt


2378 (*, 
krb5_dñèt
 *);

2379 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_í˘y≥_to_°rög


2380 (
krb5_í˘y≥
, *, 
size_t
);

2381 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ß…ty≥_to_°rög


2382 (
krb5_öt32
, *, 
size_t
);

2383 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_cksumty≥_to_°rög


2384 (
krb5_cksumty≥
, *, 
size_t
);

2385 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_time°amp_to_°rög


2386 (
krb5_time°amp
, *, 
size_t
);

2387 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_time°amp_to_sf°rög


2388 (
krb5_time°amp
, *, 
size_t
, *);

2389 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_dñèt_to_°rög


2390 (
krb5_dñèt
, *, 
size_t
);

2395 
	#KRB5_TGS_NAME
 "krbtgt"

	)

2396 
	#KRB5_TGS_NAME_SIZE
 6

	)

2399 
	#KRB5_RECVAUTH_SKIP_VERSION
 0x0001

	)

2400 
	#KRB5_RECVAUTH_BADAUTHVERS
 0x0002

	)

2403 
	s_krb5_¥om±
 {

2404 *
¥om±
;

2405 
hiddí
;

2406 
krb5_d©a
 *
ª∂y
;

2407 } 
	tkrb5_¥om±
;

2409 
	$krb5_îr‹_code
 (
	tKRB5_CALLCONV
 *
	tkrb5_¥om±î_f˘
)(
	tkrb5_c⁄ãxt
 
	tc⁄ãxt
,

2410 *
	td©a
,

2411 c⁄° *
	t«me
,

2412 c⁄° *
	tb™√r
,

2413 
	tnum_¥om±s
,

2414 
	tkrb5_¥om±
 
	t¥om±s
[]);

2417 
krb5_îr‹_code
 
KRB5_CALLCONV


2418 
	`krb5_¥om±î_posix
 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2419 *
d©a
,

2420 c⁄° *
«me
,

2421 c⁄° *
b™√r
,

2422 
num_¥om±s
,

2423 
krb5_¥om±
 
¥om±s
[]);

2425 
	s_krb5_gë_öô_¸eds_›t
 {

2426 
krb5_Êags
 
Êags
;

2427 
krb5_dñèt
 
tkt_li„
;

2428 
krb5_dñèt
 
ª√w_li„
;

2429 
f‹w¨dabÀ
;

2430 
¥oxübÀ
;

2431 
krb5_í˘y≥
 *
ëy≥_li°
;

2432 
ëy≥_li°_Àngth
;

2433 
krb5_addªss
 **
addªss_li°
;

2434 
krb5_¥óuthty≥
 *
¥óuth_li°
;

2435 
¥óuth_li°_Àngth
;

2436 
krb5_d©a
 *
ß…
;

2437 } 
	tkrb5_gë_öô_¸eds_›t
;

2439 
	#KRB5_GET_INIT_CREDS_OPT_TKT_LIFE
 0x0001

	)

2440 
	#KRB5_GET_INIT_CREDS_OPT_RENEW_LIFE
 0x0002

	)

2441 
	#KRB5_GET_INIT_CREDS_OPT_FORWARDABLE
 0x0004

	)

2442 
	#KRB5_GET_INIT_CREDS_OPT_PROXIABLE
 0x0008

	)

2443 
	#KRB5_GET_INIT_CREDS_OPT_ETYPE_LIST
 0x0010

	)

2444 
	#KRB5_GET_INIT_CREDS_OPT_ADDRESS_LIST
 0x0020

	)

2445 
	#KRB5_GET_INIT_CREDS_OPT_PREAUTH_LIST
 0x0040

	)

2446 
	#KRB5_GET_INIT_CREDS_OPT_SALT
 0x0080

	)

2447 
	#KRB5_GET_INIT_CREDS_OPT_CHG_PWD_PRMPT
 0x0100

	)

2449 
krb5_îr‹_code
 
KRB5_CALLCONV


2450 
krb5_gë_öô_¸eds_›t_Æloc


2451 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2452 
krb5_gë_öô_¸eds_›t
 **
›t
);

2454 
KRB5_CALLCONV


2455 
krb5_gë_öô_¸eds_›t_‰ì


2456 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2457 
krb5_gë_öô_¸eds_›t
 *
›t
);

2459 
KRB5_CALLCONV


2460 
krb5_gë_öô_¸eds_›t_öô


2461 (
krb5_gë_öô_¸eds_›t
 *
›t
);

2463 
KRB5_CALLCONV


2464 
krb5_gë_öô_¸eds_›t_£t_tkt_li„


2465 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2466 
krb5_dñèt
 
tkt_li„
);

2468 
KRB5_CALLCONV


2469 
krb5_gë_öô_¸eds_›t_£t_ª√w_li„


2470 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2471 
krb5_dñèt
 
ª√w_li„
);

2473 
KRB5_CALLCONV


2474 
krb5_gë_öô_¸eds_›t_£t_f‹w¨dabÀ


2475 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2476 
f‹w¨dabÀ
);

2478 
KRB5_CALLCONV


2479 
krb5_gë_öô_¸eds_›t_£t_¥oxübÀ


2480 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2481 
¥oxübÀ
);

2483 
KRB5_CALLCONV


2484 
krb5_gë_öô_¸eds_›t_£t_ëy≥_li°


2485 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2486 
krb5_í˘y≥
 *
ëy≥_li°
,

2487 
ëy≥_li°_Àngth
);

2489 
KRB5_CALLCONV


2490 
krb5_gë_öô_¸eds_›t_£t_addªss_li°


2491 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2492 
krb5_addªss
 **
addªs£s
);

2494 
KRB5_CALLCONV


2495 
krb5_gë_öô_¸eds_›t_£t_¥óuth_li°


2496 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2497 
krb5_¥óuthty≥
 *
¥óuth_li°
,

2498 
¥óuth_li°_Àngth
);

2500 
KRB5_CALLCONV


2501 
krb5_gë_öô_¸eds_›t_£t_ß…


2502 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2503 
krb5_d©a
 *
ß…
);

2505 
KRB5_CALLCONV


2506 
krb5_gë_öô_¸eds_›t_£t_ch™ge_∑ssw‹d_¥om±


2507 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2508 
¥om±
);

2511 
	s_krb5_gic_›t_∑_d©a
 {

2512 *
©å
;

2513 *
vÆue
;

2514 } 
	tkrb5_gic_›t_∑_d©a
;

2524 
krb5_îr‹_code
 
KRB5_CALLCONV


2525 
krb5_gë_öô_¸eds_›t_£t_∑


2526 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2527 
krb5_gë_öô_¸eds_›t
 *
›t
,

2528 c⁄° *
©å
,

2529 c⁄° *
vÆue
);

2531 
krb5_îr‹_code
 
KRB5_CALLCONV


2532 
krb5_gë_öô_¸eds_∑ssw‹d


2533 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2534 
krb5_¸eds
 *
¸eds
,

2535 
krb5_¥öcùÆ
 
˛õ¡
,

2536 *
∑ssw‹d
,

2537 
krb5_¥om±î_f˘
 
¥om±î
,

2538 *
d©a
,

2539 
krb5_dñèt
 
°¨t_time
,

2540 *
ö_tkt_£rvi˚
,

2541 
krb5_gë_öô_¸eds_›t
 *
k5_gic_›ti⁄s
);

2543 
krb5_îr‹_code
 
KRB5_CALLCONV


2544 
krb5_gë_öô_¸eds_keyèb


2545 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2546 
krb5_¸eds
 *
¸eds
,

2547 
krb5_¥öcùÆ
 
˛õ¡
,

2548 
krb5_keyèb
 
¨g_keyèb
,

2549 
krb5_dñèt
 
°¨t_time
,

2550 *
ö_tkt_£rvi˚
,

2551 
krb5_gë_öô_¸eds_›t
 *
k5_gic_›ti⁄s
);

2553 
	s_krb5_vîify_öô_¸eds_›t
 {

2554 
krb5_Êags
 
Êags
;

2555 
≠_ªq_noÁû
;

2556 } 
	tkrb5_vîify_öô_¸eds_›t
;

2558 
	#KRB5_VERIFY_INIT_CREDS_OPT_AP_REQ_NOFAIL
 0x0001

	)

2560 
KRB5_CALLCONV


2561 
krb5_vîify_öô_¸eds_›t_öô


2562 (
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
);

2563 
KRB5_CALLCONV


2564 
krb5_vîify_öô_¸eds_›t_£t_≠_ªq_noÁû


2565 (
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
,

2566 
≠_ªq_noÁû
);

2568 
krb5_îr‹_code
 
KRB5_CALLCONV


2569 
krb5_vîify_öô_¸eds


2570 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2571 
krb5_¸eds
 *
¸eds
,

2572 
krb5_¥öcùÆ
 
≠_ªq_£rvî
,

2573 
krb5_keyèb
 
≠_ªq_keyèb
,

2574 
krb5_cˇche
 *
cˇche
,

2575 
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
);

2577 
krb5_îr‹_code
 
KRB5_CALLCONV


2578 
krb5_gë_vÆid©ed_¸eds


2579 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2580 
krb5_¸eds
 *
¸eds
,

2581 
krb5_¥öcùÆ
 
˛õ¡
,

2582 
krb5_cˇche
 
cˇche
,

2583 *
ö_tkt_£rvi˚
);

2585 
krb5_îr‹_code
 
KRB5_CALLCONV


2586 
krb5_gë_ª√wed_¸eds


2587 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2588 
krb5_¸eds
 *
¸eds
,

2589 
krb5_¥öcùÆ
 
˛õ¡
,

2590 
krb5_cˇche
 
cˇche
,

2591 *
ö_tkt_£rvi˚
);

2593 
krb5_îr‹_code
 
KRB5_CALLCONV


2594 
krb5_decode_tickë


2595 (c⁄° 
krb5_d©a
 *
code
,

2596 
krb5_tickë
 **
ªp
);

2598 
KRB5_CALLCONV


2599 
krb5_≠pdeÁu…_°rög


2600 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2601 c⁄° *
≠≤ame
,

2602 c⁄° 
krb5_d©a
 *
ªÆm
,

2603 c⁄° *
›ti⁄
,

2604 c⁄° *
deÁu…_vÆue
,

2605 ** 
ªt_vÆue
);

2607 
KRB5_CALLCONV


2608 
krb5_≠pdeÁu…_boﬁón


2609 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2610 c⁄° *
≠≤ame
,

2611 c⁄° 
krb5_d©a
 *
ªÆm
,

2612 c⁄° *
›ti⁄
,

2613 
deÁu…_vÆue
,

2614 *
ªt_vÆue
);

2616 #i‡
KRB5_PRIVATE


2621 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªÆm_ôî©‹_¸óã


2622 (
krb5_c⁄ãxt
 
c⁄ãxt
, **
ôî_p
);

2624 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªÆm_ôî©‹


2625 (
krb5_c⁄ãxt
 
c⁄ãxt
, **
ôî_p
, **
ªt_ªÆm
);

2627 
KRB5_CALLCONV
 
krb5_ªÆm_ôî©‹_‰ì


2628 (
krb5_c⁄ãxt
 
c⁄ãxt
, **
ôî_p
);

2630 
KRB5_CALLCONV
 
krb5_‰ì_ªÆm_°rög


2631 (
krb5_c⁄ãxt
 
c⁄ãxt
, *
°r
);

2638 
	#KRB5_PROMPT_TYPE_PASSWORD
 0x1

	)

2639 
	#KRB5_PROMPT_TYPE_NEW_PASSWORD
 0x2

	)

2640 
	#KRB5_PROMPT_TYPE_NEW_PASSWORD_AGAIN
 0x3

	)

2641 
	#KRB5_PROMPT_TYPE_PREAUTH
 0x4

	)

2643 
krb5_öt32
 
	tkrb5_¥om±_ty≥
;

2645 
krb5_¥om±_ty≥
* 
KRB5_CALLCONV
 
krb5_gë_¥om±_ty≥s


2646 (
krb5_c⁄ãxt
 
c⁄ãxt
);

2649 
KRB5_CALLCONV_C


2650 
	`krb5_£t_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
, const *, ...);

2651 #ifde‡
va_°¨t


2652 
KRB5_CALLCONV


2653 
	`krb5_v£t_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
, c⁄° *, 
va_li°
);

2665 c⁄° * 
KRB5_CALLCONV


2666 
	`krb5_gë_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
);

2667 
KRB5_CALLCONV


2668 
	`krb5_‰ì_îr‹_mesßge
 (
krb5_c⁄ãxt
, const *);

2669 
KRB5_CALLCONV


2670 
	`krb5_˛ór_îr‹_mesßge
 (
krb5_c⁄ãxt
);

2673 #i‡
TARGET_OS_MAC


2674 #¥agm®
	`∑ck
(
p›
)

2677 
KRB5INT_END_DECLS


2681 
	#krb5_c⁄°
 c⁄°

	)

2690 
	~<ë/com_îr.h
>

2692 
	#KRB5KDC_ERR_NONE
 (-1765328384L)

	)

2693 
	#KRB5KDC_ERR_NAME_EXP
 (-1765328383L)

	)

2694 
	#KRB5KDC_ERR_SERVICE_EXP
 (-1765328382L)

	)

2695 
	#KRB5KDC_ERR_BAD_PVNO
 (-1765328381L)

	)

2696 
	#KRB5KDC_ERR_C_OLD_MAST_KVNO
 (-1765328380L)

	)

2697 
	#KRB5KDC_ERR_S_OLD_MAST_KVNO
 (-1765328379L)

	)

2698 
	#KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN
 (-1765328378L)

	)

2699 
	#KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN
 (-1765328377L)

	)

2700 
	#KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE
 (-1765328376L)

	)

2701 
	#KRB5KDC_ERR_NULL_KEY
 (-1765328375L)

	)

2702 
	#KRB5KDC_ERR_CANNOT_POSTDATE
 (-1765328374L)

	)

2703 
	#KRB5KDC_ERR_NEVER_VALID
 (-1765328373L)

	)

2704 
	#KRB5KDC_ERR_POLICY
 (-1765328372L)

	)

2705 
	#KRB5KDC_ERR_BADOPTION
 (-1765328371L)

	)

2706 
	#KRB5KDC_ERR_ETYPE_NOSUPP
 (-1765328370L)

	)

2707 
	#KRB5KDC_ERR_SUMTYPE_NOSUPP
 (-1765328369L)

	)

2708 
	#KRB5KDC_ERR_PADATA_TYPE_NOSUPP
 (-1765328368L)

	)

2709 
	#KRB5KDC_ERR_TRTYPE_NOSUPP
 (-1765328367L)

	)

2710 
	#KRB5KDC_ERR_CLIENT_REVOKED
 (-1765328366L)

	)

2711 
	#KRB5KDC_ERR_SERVICE_REVOKED
 (-1765328365L)

	)

2712 
	#KRB5KDC_ERR_TGT_REVOKED
 (-1765328364L)

	)

2713 
	#KRB5KDC_ERR_CLIENT_NOTYET
 (-1765328363L)

	)

2714 
	#KRB5KDC_ERR_SERVICE_NOTYET
 (-1765328362L)

	)

2715 
	#KRB5KDC_ERR_KEY_EXP
 (-1765328361L)

	)

2716 
	#KRB5KDC_ERR_PREAUTH_FAILED
 (-1765328360L)

	)

2717 
	#KRB5KDC_ERR_PREAUTH_REQUIRED
 (-1765328359L)

	)

2718 
	#KRB5KDC_ERR_SERVER_NOMATCH
 (-1765328358L)

	)

2719 
	#KRB5PLACEHOLD_27
 (-1765328357L)

	)

2720 
	#KRB5PLACEHOLD_28
 (-1765328356L)

	)

2721 
	#KRB5PLACEHOLD_29
 (-1765328355L)

	)

2722 
	#KRB5PLACEHOLD_30
 (-1765328354L)

	)

2723 
	#KRB5KRB_AP_ERR_BAD_INTEGRITY
 (-1765328353L)

	)

2724 
	#KRB5KRB_AP_ERR_TKT_EXPIRED
 (-1765328352L)

	)

2725 
	#KRB5KRB_AP_ERR_TKT_NYV
 (-1765328351L)

	)

2726 
	#KRB5KRB_AP_ERR_REPEAT
 (-1765328350L)

	)

2727 
	#KRB5KRB_AP_ERR_NOT_US
 (-1765328349L)

	)

2728 
	#KRB5KRB_AP_ERR_BADMATCH
 (-1765328348L)

	)

2729 
	#KRB5KRB_AP_ERR_SKEW
 (-1765328347L)

	)

2730 
	#KRB5KRB_AP_ERR_BADADDR
 (-1765328346L)

	)

2731 
	#KRB5KRB_AP_ERR_BADVERSION
 (-1765328345L)

	)

2732 
	#KRB5KRB_AP_ERR_MSG_TYPE
 (-1765328344L)

	)

2733 
	#KRB5KRB_AP_ERR_MODIFIED
 (-1765328343L)

	)

2734 
	#KRB5KRB_AP_ERR_BADORDER
 (-1765328342L)

	)

2735 
	#KRB5KRB_AP_ERR_ILL_CR_TKT
 (-1765328341L)

	)

2736 
	#KRB5KRB_AP_ERR_BADKEYVER
 (-1765328340L)

	)

2737 
	#KRB5KRB_AP_ERR_NOKEY
 (-1765328339L)

	)

2738 
	#KRB5KRB_AP_ERR_MUT_FAIL
 (-1765328338L)

	)

2739 
	#KRB5KRB_AP_ERR_BADDIRECTION
 (-1765328337L)

	)

2740 
	#KRB5KRB_AP_ERR_METHOD
 (-1765328336L)

	)

2741 
	#KRB5KRB_AP_ERR_BADSEQ
 (-1765328335L)

	)

2742 
	#KRB5KRB_AP_ERR_INAPP_CKSUM
 (-1765328334L)

	)

2743 
	#KRB5KRB_AP_PATH_NOT_ACCEPTED
 (-1765328333L)

	)

2744 
	#KRB5KRB_ERR_RESPONSE_TOO_BIG
 (-1765328332L)

	)

2745 
	#KRB5PLACEHOLD_53
 (-1765328331L)

	)

2746 
	#KRB5PLACEHOLD_54
 (-1765328330L)

	)

2747 
	#KRB5PLACEHOLD_55
 (-1765328329L)

	)

2748 
	#KRB5PLACEHOLD_56
 (-1765328328L)

	)

2749 
	#KRB5PLACEHOLD_57
 (-1765328327L)

	)

2750 
	#KRB5PLACEHOLD_58
 (-1765328326L)

	)

2751 
	#KRB5PLACEHOLD_59
 (-1765328325L)

	)

2752 
	#KRB5KRB_ERR_GENERIC
 (-1765328324L)

	)

2753 
	#KRB5KRB_ERR_FIELD_TOOLONG
 (-1765328323L)

	)

2754 
	#KRB5KDC_ERR_CLIENT_NOT_TRUSTED
 (-1765328322L)

	)

2755 
	#KRB5KDC_ERR_KDC_NOT_TRUSTED
 (-1765328321L)

	)

2756 
	#KRB5KDC_ERR_INVALID_SIG
 (-1765328320L)

	)

2757 
	#KRB5KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED
 (-1765328319L)

	)

2758 
	#KRB5KDC_ERR_CERTIFICATE_MISMATCH
 (-1765328318L)

	)

2759 
	#KRB5PLACEHOLD_67
 (-1765328317L)

	)

2760 
	#KRB5PLACEHOLD_68
 (-1765328316L)

	)

2761 
	#KRB5PLACEHOLD_69
 (-1765328315L)

	)

2762 
	#KRB5KDC_ERR_CANT_VERIFY_CERTIFICATE
 (-1765328314L)

	)

2763 
	#KRB5KDC_ERR_INVALID_CERTIFICATE
 (-1765328313L)

	)

2764 
	#KRB5KDC_ERR_REVOKED_CERTIFICATE
 (-1765328312L)

	)

2765 
	#KRB5KDC_ERR_REVOCATION_STATUS_UNKNOWN
 (-1765328311L)

	)

2766 
	#KRB5KDC_ERR_REVOCATION_STATUS_UNAVAILABLE
 (-1765328310L)

	)

2767 
	#KRB5KDC_ERR_CLIENT_NAME_MISMATCH
 (-1765328309L)

	)

2768 
	#KRB5KDC_ERR_KDC_NAME_MISMATCH
 (-1765328308L)

	)

2769 
	#KRB5KDC_ERR_INCONSISTENT_KEY_PURPOSE
 (-1765328307L)

	)

2770 
	#KRB5KDC_ERR_DIGEST_IN_CERT_NOT_ACCEPTED
 (-1765328306L)

	)

2771 
	#KRB5KDC_ERR_PA_CHECKSUM_MUST_BE_INCLUDED
 (-1765328305L)

	)

2772 
	#KRB5KDC_ERR_DIGEST_IN_SIGNED_DATA_NOT_ACCEPTED
 (-1765328304L)

	)

2773 
	#KRB5KDC_ERR_PUBLIC_KEY_ENCRYPTION_NOT_SUPPORTED
 (-1765328303L)

	)

2774 
	#KRB5PLACEHOLD_82
 (-1765328302L)

	)

2775 
	#KRB5PLACEHOLD_83
 (-1765328301L)

	)

2776 
	#KRB5PLACEHOLD_84
 (-1765328300L)

	)

2777 
	#KRB5PLACEHOLD_85
 (-1765328299L)

	)

2778 
	#KRB5PLACEHOLD_86
 (-1765328298L)

	)

2779 
	#KRB5PLACEHOLD_87
 (-1765328297L)

	)

2780 
	#KRB5PLACEHOLD_88
 (-1765328296L)

	)

2781 
	#KRB5PLACEHOLD_89
 (-1765328295L)

	)

2782 
	#KRB5PLACEHOLD_90
 (-1765328294L)

	)

2783 
	#KRB5PLACEHOLD_91
 (-1765328293L)

	)

2784 
	#KRB5PLACEHOLD_92
 (-1765328292L)

	)

2785 
	#KRB5PLACEHOLD_93
 (-1765328291L)

	)

2786 
	#KRB5PLACEHOLD_94
 (-1765328290L)

	)

2787 
	#KRB5PLACEHOLD_95
 (-1765328289L)

	)

2788 
	#KRB5PLACEHOLD_96
 (-1765328288L)

	)

2789 
	#KRB5PLACEHOLD_97
 (-1765328287L)

	)

2790 
	#KRB5PLACEHOLD_98
 (-1765328286L)

	)

2791 
	#KRB5PLACEHOLD_99
 (-1765328285L)

	)

2792 
	#KRB5PLACEHOLD_100
 (-1765328284L)

	)

2793 
	#KRB5PLACEHOLD_101
 (-1765328283L)

	)

2794 
	#KRB5PLACEHOLD_102
 (-1765328282L)

	)

2795 
	#KRB5PLACEHOLD_103
 (-1765328281L)

	)

2796 
	#KRB5PLACEHOLD_104
 (-1765328280L)

	)

2797 
	#KRB5PLACEHOLD_105
 (-1765328279L)

	)

2798 
	#KRB5PLACEHOLD_106
 (-1765328278L)

	)

2799 
	#KRB5PLACEHOLD_107
 (-1765328277L)

	)

2800 
	#KRB5PLACEHOLD_108
 (-1765328276L)

	)

2801 
	#KRB5PLACEHOLD_109
 (-1765328275L)

	)

2802 
	#KRB5PLACEHOLD_110
 (-1765328274L)

	)

2803 
	#KRB5PLACEHOLD_111
 (-1765328273L)

	)

2804 
	#KRB5PLACEHOLD_112
 (-1765328272L)

	)

2805 
	#KRB5PLACEHOLD_113
 (-1765328271L)

	)

2806 
	#KRB5PLACEHOLD_114
 (-1765328270L)

	)

2807 
	#KRB5PLACEHOLD_115
 (-1765328269L)

	)

2808 
	#KRB5PLACEHOLD_116
 (-1765328268L)

	)

2809 
	#KRB5PLACEHOLD_117
 (-1765328267L)

	)

2810 
	#KRB5PLACEHOLD_118
 (-1765328266L)

	)

2811 
	#KRB5PLACEHOLD_119
 (-1765328265L)

	)

2812 
	#KRB5PLACEHOLD_120
 (-1765328264L)

	)

2813 
	#KRB5PLACEHOLD_121
 (-1765328263L)

	)

2814 
	#KRB5PLACEHOLD_122
 (-1765328262L)

	)

2815 
	#KRB5PLACEHOLD_123
 (-1765328261L)

	)

2816 
	#KRB5PLACEHOLD_124
 (-1765328260L)

	)

2817 
	#KRB5PLACEHOLD_125
 (-1765328259L)

	)

2818 
	#KRB5PLACEHOLD_126
 (-1765328258L)

	)

2819 
	#KRB5PLACEHOLD_127
 (-1765328257L)

	)

2820 
	#KRB5_ERR_RCSID
 (-1765328256L)

	)

2821 
	#KRB5_LIBOS_BADLOCKFLAG
 (-1765328255L)

	)

2822 
	#KRB5_LIBOS_CANTREADPWD
 (-1765328254L)

	)

2823 
	#KRB5_LIBOS_BADPWDMATCH
 (-1765328253L)

	)

2824 
	#KRB5_LIBOS_PWDINTR
 (-1765328252L)

	)

2825 
	#KRB5_PARSE_ILLCHAR
 (-1765328251L)

	)

2826 
	#KRB5_PARSE_MALFORMED
 (-1765328250L)

	)

2827 
	#KRB5_CONFIG_CANTOPEN
 (-1765328249L)

	)

2828 
	#KRB5_CONFIG_BADFORMAT
 (-1765328248L)

	)

2829 
	#KRB5_CONFIG_NOTENUFSPACE
 (-1765328247L)

	)

2830 
	#KRB5_BADMSGTYPE
 (-1765328246L)

	)

2831 
	#KRB5_CC_BADNAME
 (-1765328245L)

	)

2832 
	#KRB5_CC_UNKNOWN_TYPE
 (-1765328244L)

	)

2833 
	#KRB5_CC_NOTFOUND
 (-1765328243L)

	)

2834 
	#KRB5_CC_END
 (-1765328242L)

	)

2835 
	#KRB5_NO_TKT_SUPPLIED
 (-1765328241L)

	)

2836 
	#KRB5KRB_AP_WRONG_PRINC
 (-1765328240L)

	)

2837 
	#KRB5KRB_AP_ERR_TKT_INVALID
 (-1765328239L)

	)

2838 
	#KRB5_PRINC_NOMATCH
 (-1765328238L)

	)

2839 
	#KRB5_KDCREP_MODIFIED
 (-1765328237L)

	)

2840 
	#KRB5_KDCREP_SKEW
 (-1765328236L)

	)

2841 
	#KRB5_IN_TKT_REALM_MISMATCH
 (-1765328235L)

	)

2842 
	#KRB5_PROG_ETYPE_NOSUPP
 (-1765328234L)

	)

2843 
	#KRB5_PROG_KEYTYPE_NOSUPP
 (-1765328233L)

	)

2844 
	#KRB5_WRONG_ETYPE
 (-1765328232L)

	)

2845 
	#KRB5_PROG_SUMTYPE_NOSUPP
 (-1765328231L)

	)

2846 
	#KRB5_REALM_UNKNOWN
 (-1765328230L)

	)

2847 
	#KRB5_SERVICE_UNKNOWN
 (-1765328229L)

	)

2848 
	#KRB5_KDC_UNREACH
 (-1765328228L)

	)

2849 
	#KRB5_NO_LOCALNAME
 (-1765328227L)

	)

2850 
	#KRB5_MUTUAL_FAILED
 (-1765328226L)

	)

2851 
	#KRB5_RC_TYPE_EXISTS
 (-1765328225L)

	)

2852 
	#KRB5_RC_MALLOC
 (-1765328224L)

	)

2853 
	#KRB5_RC_TYPE_NOTFOUND
 (-1765328223L)

	)

2854 
	#KRB5_RC_UNKNOWN
 (-1765328222L)

	)

2855 
	#KRB5_RC_REPLAY
 (-1765328221L)

	)

2856 
	#KRB5_RC_IO
 (-1765328220L)

	)

2857 
	#KRB5_RC_NOIO
 (-1765328219L)

	)

2858 
	#KRB5_RC_PARSE
 (-1765328218L)

	)

2859 
	#KRB5_RC_IO_EOF
 (-1765328217L)

	)

2860 
	#KRB5_RC_IO_MALLOC
 (-1765328216L)

	)

2861 
	#KRB5_RC_IO_PERM
 (-1765328215L)

	)

2862 
	#KRB5_RC_IO_IO
 (-1765328214L)

	)

2863 
	#KRB5_RC_IO_UNKNOWN
 (-1765328213L)

	)

2864 
	#KRB5_RC_IO_SPACE
 (-1765328212L)

	)

2865 
	#KRB5_TRANS_CANTOPEN
 (-1765328211L)

	)

2866 
	#KRB5_TRANS_BADFORMAT
 (-1765328210L)

	)

2867 
	#KRB5_LNAME_CANTOPEN
 (-1765328209L)

	)

2868 
	#KRB5_LNAME_NOTRANS
 (-1765328208L)

	)

2869 
	#KRB5_LNAME_BADFORMAT
 (-1765328207L)

	)

2870 
	#KRB5_CRYPTO_INTERNAL
 (-1765328206L)

	)

2871 
	#KRB5_KT_BADNAME
 (-1765328205L)

	)

2872 
	#KRB5_KT_UNKNOWN_TYPE
 (-1765328204L)

	)

2873 
	#KRB5_KT_NOTFOUND
 (-1765328203L)

	)

2874 
	#KRB5_KT_END
 (-1765328202L)

	)

2875 
	#KRB5_KT_NOWRITE
 (-1765328201L)

	)

2876 
	#KRB5_KT_IOERR
 (-1765328200L)

	)

2877 
	#KRB5_NO_TKT_IN_RLM
 (-1765328199L)

	)

2878 
	#KRB5DES_BAD_KEYPAR
 (-1765328198L)

	)

2879 
	#KRB5DES_WEAK_KEY
 (-1765328197L)

	)

2880 
	#KRB5_BAD_ENCTYPE
 (-1765328196L)

	)

2881 
	#KRB5_BAD_KEYSIZE
 (-1765328195L)

	)

2882 
	#KRB5_BAD_MSIZE
 (-1765328194L)

	)

2883 
	#KRB5_CC_TYPE_EXISTS
 (-1765328193L)

	)

2884 
	#KRB5_KT_TYPE_EXISTS
 (-1765328192L)

	)

2885 
	#KRB5_CC_IO
 (-1765328191L)

	)

2886 
	#KRB5_FCC_PERM
 (-1765328190L)

	)

2887 
	#KRB5_FCC_NOFILE
 (-1765328189L)

	)

2888 
	#KRB5_FCC_INTERNAL
 (-1765328188L)

	)

2889 
	#KRB5_CC_WRITE
 (-1765328187L)

	)

2890 
	#KRB5_CC_NOMEM
 (-1765328186L)

	)

2891 
	#KRB5_CC_FORMAT
 (-1765328185L)

	)

2892 
	#KRB5_CC_NOT_KTYPE
 (-1765328184L)

	)

2893 
	#KRB5_INVALID_FLAGS
 (-1765328183L)

	)

2894 
	#KRB5_NO_2ND_TKT
 (-1765328182L)

	)

2895 
	#KRB5_NOCREDS_SUPPLIED
 (-1765328181L)

	)

2896 
	#KRB5_SENDAUTH_BADAUTHVERS
 (-1765328180L)

	)

2897 
	#KRB5_SENDAUTH_BADAPPLVERS
 (-1765328179L)

	)

2898 
	#KRB5_SENDAUTH_BADRESPONSE
 (-1765328178L)

	)

2899 
	#KRB5_SENDAUTH_REJECTED
 (-1765328177L)

	)

2900 
	#KRB5_PREAUTH_BAD_TYPE
 (-1765328176L)

	)

2901 
	#KRB5_PREAUTH_NO_KEY
 (-1765328175L)

	)

2902 
	#KRB5_PREAUTH_FAILED
 (-1765328174L)

	)

2903 
	#KRB5_RCACHE_BADVNO
 (-1765328173L)

	)

2904 
	#KRB5_CCACHE_BADVNO
 (-1765328172L)

	)

2905 
	#KRB5_KEYTAB_BADVNO
 (-1765328171L)

	)

2906 
	#KRB5_PROG_ATYPE_NOSUPP
 (-1765328170L)

	)

2907 
	#KRB5_RC_REQUIRED
 (-1765328169L)

	)

2908 
	#KRB5_ERR_BAD_HOSTNAME
 (-1765328168L)

	)

2909 
	#KRB5_ERR_HOST_REALM_UNKNOWN
 (-1765328167L)

	)

2910 
	#KRB5_SNAME_UNSUPP_NAMETYPE
 (-1765328166L)

	)

2911 
	#KRB5KRB_AP_ERR_V4_REPLY
 (-1765328165L)

	)

2912 
	#KRB5_REALM_CANT_RESOLVE
 (-1765328164L)

	)

2913 
	#KRB5_TKT_NOT_FORWARDABLE
 (-1765328163L)

	)

2914 
	#KRB5_FWD_BAD_PRINCIPAL
 (-1765328162L)

	)

2915 
	#KRB5_GET_IN_TKT_LOOP
 (-1765328161L)

	)

2916 
	#KRB5_CONFIG_NODEFREALM
 (-1765328160L)

	)

2917 
	#KRB5_SAM_UNSUPPORTED
 (-1765328159L)

	)

2918 
	#KRB5_SAM_INVALID_ETYPE
 (-1765328158L)

	)

2919 
	#KRB5_SAM_NO_CHECKSUM
 (-1765328157L)

	)

2920 
	#KRB5_SAM_BAD_CHECKSUM
 (-1765328156L)

	)

2921 
	#KRB5_KT_NAME_TOOLONG
 (-1765328155L)

	)

2922 
	#KRB5_KT_KVNONOTFOUND
 (-1765328154L)

	)

2923 
	#KRB5_APPL_EXPIRED
 (-1765328153L)

	)

2924 
	#KRB5_LIB_EXPIRED
 (-1765328152L)

	)

2925 
	#KRB5_CHPW_PWDNULL
 (-1765328151L)

	)

2926 
	#KRB5_CHPW_FAIL
 (-1765328150L)

	)

2927 
	#KRB5_KT_FORMAT
 (-1765328149L)

	)

2928 
	#KRB5_NOPERM_ETYPE
 (-1765328148L)

	)

2929 
	#KRB5_CONFIG_ETYPE_NOSUPP
 (-1765328147L)

	)

2930 
	#KRB5_OBSOLETE_FN
 (-1765328146L)

	)

2931 
	#KRB5_EAI_FAIL
 (-1765328145L)

	)

2932 
	#KRB5_EAI_NODATA
 (-1765328144L)

	)

2933 
	#KRB5_EAI_NONAME
 (-1765328143L)

	)

2934 
	#KRB5_EAI_SERVICE
 (-1765328142L)

	)

2935 
	#KRB5_ERR_NUMERIC_REALM
 (-1765328141L)

	)

2936 
	#KRB5_ERR_BAD_S2K_PARAMS
 (-1765328140L)

	)

2937 
	#KRB5_ERR_NO_SERVICE
 (-1765328139L)

	)

2938 
	#KRB5_CC_READONLY
 (-1765328138L)

	)

2939 
	#KRB5_CC_NOSUPP
 (-1765328137L)

	)

2940 
	#KRB5_DELTAT_BADFORMAT
 (-1765328136L)

	)

2941 
	#KRB5_PLUGIN_NO_HANDLE
 (-1765328135L)

	)

2942 
	#KRB5_PLUGIN_OP_NOTSUPP
 (-1765328134L)

	)

2943 c⁄° 
îr‹_èbÀ
 
ë_krb5_îr‹_èbÀ
;

2944 
	`öôülize_krb5_îr‹_èbÀ
();

2947 
	`öôülize_krb5_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

2949 
	#ERROR_TABLE_BASE_krb5
 (-1765328384L)

	)

2952 
	#öô_krb5_îr_tbl
 
öôülize_krb5_îr‹_èbÀ


	)

2953 
	#krb5_îr_ba£
 
ERROR_TABLE_BASE_krb5


	)

2959 
	~<ë/com_îr.h
>

2961 
	#KRB5_KDB_RCSID
 (-1780008448L)

	)

2962 
	#KRB5_KDB_INUSE
 (-1780008447L)

	)

2963 
	#KRB5_KDB_UK_SERROR
 (-1780008446L)

	)

2964 
	#KRB5_KDB_UK_RERROR
 (-1780008445L)

	)

2965 
	#KRB5_KDB_UNAUTH
 (-1780008444L)

	)

2966 
	#KRB5_KDB_NOENTRY
 (-1780008443L)

	)

2967 
	#KRB5_KDB_ILL_WILDCARD
 (-1780008442L)

	)

2968 
	#KRB5_KDB_DB_INUSE
 (-1780008441L)

	)

2969 
	#KRB5_KDB_DB_CHANGED
 (-1780008440L)

	)

2970 
	#KRB5_KDB_TRUNCATED_RECORD
 (-1780008439L)

	)

2971 
	#KRB5_KDB_RECURSIVELOCK
 (-1780008438L)

	)

2972 
	#KRB5_KDB_NOTLOCKED
 (-1780008437L)

	)

2973 
	#KRB5_KDB_BADLOCKMODE
 (-1780008436L)

	)

2974 
	#KRB5_KDB_DBNOTINITED
 (-1780008435L)

	)

2975 
	#KRB5_KDB_DBINITED
 (-1780008434L)

	)

2976 
	#KRB5_KDB_ILLDIRECTION
 (-1780008433L)

	)

2977 
	#KRB5_KDB_NOMASTERKEY
 (-1780008432L)

	)

2978 
	#KRB5_KDB_BADMASTERKEY
 (-1780008431L)

	)

2979 
	#KRB5_KDB_INVALIDKEYSIZE
 (-1780008430L)

	)

2980 
	#KRB5_KDB_CANTREAD_STORED
 (-1780008429L)

	)

2981 
	#KRB5_KDB_BADSTORED_MKEY
 (-1780008428L)

	)

2982 
	#KRB5_KDB_CANTLOCK_DB
 (-1780008427L)

	)

2983 
	#KRB5_KDB_DB_CORRUPT
 (-1780008426L)

	)

2984 
	#KRB5_KDB_BAD_VERSION
 (-1780008425L)

	)

2985 
	#KRB5_KDB_BAD_SALTTYPE
 (-1780008424L)

	)

2986 
	#KRB5_KDB_BAD_ENCTYPE
 (-1780008423L)

	)

2987 
	#KRB5_KDB_BAD_CREATEFLAGS
 (-1780008422L)

	)

2988 
	#KRB5_KDB_NO_PERMITTED_KEY
 (-1780008421L)

	)

2989 
	#KRB5_KDB_NO_MATCHING_KEY
 (-1780008420L)

	)

2990 
	#KRB5_KDB_DBTYPE_NOTFOUND
 (-1780008419L)

	)

2991 
	#KRB5_KDB_DBTYPE_NOSUP
 (-1780008418L)

	)

2992 
	#KRB5_KDB_DBTYPE_INIT
 (-1780008417L)

	)

2993 
	#KRB5_KDB_SERVER_INTERNAL_ERR
 (-1780008416L)

	)

2994 
	#KRB5_KDB_ACCESS_ERROR
 (-1780008415L)

	)

2995 
	#KRB5_KDB_INTERNAL_ERROR
 (-1780008414L)

	)

2996 
	#KRB5_KDB_CONSTRAINT_VIOLATION
 (-1780008413L)

	)

2997 c⁄° 
îr‹_èbÀ
 
ë_kdb5_îr‹_èbÀ
;

2998 
	`öôülize_kdb5_îr‹_èbÀ
();

3001 
	`öôülize_kdb5_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3003 
	#ERROR_TABLE_BASE_kdb5
 (-1780008448L)

	)

3006 
	#öô_kdb5_îr_tbl
 
öôülize_kdb5_îr‹_èbÀ


	)

3007 
	#kdb5_îr_ba£
 
ERROR_TABLE_BASE_kdb5


	)

3013 
	~<ë/com_îr.h
>

3015 
	#KV5M_NONE
 (-1760647424L)

	)

3016 
	#KV5M_PRINCIPAL
 (-1760647423L)

	)

3017 
	#KV5M_DATA
 (-1760647422L)

	)

3018 
	#KV5M_KEYBLOCK
 (-1760647421L)

	)

3019 
	#KV5M_CHECKSUM
 (-1760647420L)

	)

3020 
	#KV5M_ENCRYPT_BLOCK
 (-1760647419L)

	)

3021 
	#KV5M_ENC_DATA
 (-1760647418L)

	)

3022 
	#KV5M_CRYPTOSYSTEM_ENTRY
 (-1760647417L)

	)

3023 
	#KV5M_CS_TABLE_ENTRY
 (-1760647416L)

	)

3024 
	#KV5M_CHECKSUM_ENTRY
 (-1760647415L)

	)

3025 
	#KV5M_AUTHDATA
 (-1760647414L)

	)

3026 
	#KV5M_TRANSITED
 (-1760647413L)

	)

3027 
	#KV5M_ENC_TKT_PART
 (-1760647412L)

	)

3028 
	#KV5M_TICKET
 (-1760647411L)

	)

3029 
	#KV5M_AUTHENTICATOR
 (-1760647410L)

	)

3030 
	#KV5M_TKT_AUTHENT
 (-1760647409L)

	)

3031 
	#KV5M_CREDS
 (-1760647408L)

	)

3032 
	#KV5M_LAST_REQ_ENTRY
 (-1760647407L)

	)

3033 
	#KV5M_PA_DATA
 (-1760647406L)

	)

3034 
	#KV5M_KDC_REQ
 (-1760647405L)

	)

3035 
	#KV5M_ENC_KDC_REP_PART
 (-1760647404L)

	)

3036 
	#KV5M_KDC_REP
 (-1760647403L)

	)

3037 
	#KV5M_ERROR
 (-1760647402L)

	)

3038 
	#KV5M_AP_REQ
 (-1760647401L)

	)

3039 
	#KV5M_AP_REP
 (-1760647400L)

	)

3040 
	#KV5M_AP_REP_ENC_PART
 (-1760647399L)

	)

3041 
	#KV5M_RESPONSE
 (-1760647398L)

	)

3042 
	#KV5M_SAFE
 (-1760647397L)

	)

3043 
	#KV5M_PRIV
 (-1760647396L)

	)

3044 
	#KV5M_PRIV_ENC_PART
 (-1760647395L)

	)

3045 
	#KV5M_CRED
 (-1760647394L)

	)

3046 
	#KV5M_CRED_INFO
 (-1760647393L)

	)

3047 
	#KV5M_CRED_ENC_PART
 (-1760647392L)

	)

3048 
	#KV5M_PWD_DATA
 (-1760647391L)

	)

3049 
	#KV5M_ADDRESS
 (-1760647390L)

	)

3050 
	#KV5M_KEYTAB_ENTRY
 (-1760647389L)

	)

3051 
	#KV5M_CONTEXT
 (-1760647388L)

	)

3052 
	#KV5M_OS_CONTEXT
 (-1760647387L)

	)

3053 
	#KV5M_ALT_METHOD
 (-1760647386L)

	)

3054 
	#KV5M_ETYPE_INFO_ENTRY
 (-1760647385L)

	)

3055 
	#KV5M_DB_CONTEXT
 (-1760647384L)

	)

3056 
	#KV5M_AUTH_CONTEXT
 (-1760647383L)

	)

3057 
	#KV5M_KEYTAB
 (-1760647382L)

	)

3058 
	#KV5M_RCACHE
 (-1760647381L)

	)

3059 
	#KV5M_CCACHE
 (-1760647380L)

	)

3060 
	#KV5M_PREAUTH_OPS
 (-1760647379L)

	)

3061 
	#KV5M_SAM_CHALLENGE
 (-1760647378L)

	)

3062 
	#KV5M_SAM_CHALLENGE_2
 (-1760647377L)

	)

3063 
	#KV5M_SAM_KEY
 (-1760647376L)

	)

3064 
	#KV5M_ENC_SAM_RESPONSE_ENC
 (-1760647375L)

	)

3065 
	#KV5M_ENC_SAM_RESPONSE_ENC_2
 (-1760647374L)

	)

3066 
	#KV5M_SAM_RESPONSE
 (-1760647373L)

	)

3067 
	#KV5M_SAM_RESPONSE_2
 (-1760647372L)

	)

3068 
	#KV5M_PREDICTED_SAM_RESPONSE
 (-1760647371L)

	)

3069 
	#KV5M_PASSWD_PHRASE_ELEMENT
 (-1760647370L)

	)

3070 
	#KV5M_GSS_OID
 (-1760647369L)

	)

3071 
	#KV5M_GSS_QUEUE
 (-1760647368L)

	)

3072 c⁄° 
îr‹_èbÀ
 
ë_kv5m_îr‹_èbÀ
;

3073 
	`öôülize_kv5m_îr‹_èbÀ
();

3076 
	`öôülize_kv5m_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3078 
	#ERROR_TABLE_BASE_kv5m
 (-1760647424L)

	)

3081 
	#öô_kv5m_îr_tbl
 
öôülize_kv5m_îr‹_èbÀ


	)

3082 
	#kv5m_îr_ba£
 
ERROR_TABLE_BASE_kv5m


	)

3088 
	~<ë/com_îr.h
>

3090 
	#KRB524_BADKEY
 (-1750206208L)

	)

3091 
	#KRB524_BADADDR
 (-1750206207L)

	)

3092 
	#KRB524_BADPRINC
 (-1750206206L)

	)

3093 
	#KRB524_BADREALM
 (-1750206205L)

	)

3094 
	#KRB524_V4ERR
 (-1750206204L)

	)

3095 
	#KRB524_ENCFULL
 (-1750206203L)

	)

3096 
	#KRB524_DECEMPTY
 (-1750206202L)

	)

3097 
	#KRB524_NOTRESP
 (-1750206201L)

	)

3098 
	#KRB524_KRB4_DISABLED
 (-1750206200L)

	)

3099 c⁄° 
îr‹_èbÀ
 
ë_k524_îr‹_èbÀ
;

3100 
	`öôülize_k524_îr‹_èbÀ
();

3103 
	`öôülize_k524_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3105 
	#ERROR_TABLE_BASE_k524
 (-1750206208L)

	)

3108 
	#öô_k524_îr_tbl
 
öôülize_k524_îr‹_èbÀ


	)

3109 
	#k524_îr_ba£
 
ERROR_TABLE_BASE_k524


	)

3115 
	~<ë/com_îr.h
>

3117 
	#ASN1_BAD_TIMEFORMAT
 (1859794432L)

	)

3118 
	#ASN1_MISSING_FIELD
 (1859794433L)

	)

3119 
	#ASN1_MISPLACED_FIELD
 (1859794434L)

	)

3120 
	#ASN1_TYPE_MISMATCH
 (1859794435L)

	)

3121 
	#ASN1_OVERFLOW
 (1859794436L)

	)

3122 
	#ASN1_OVERRUN
 (1859794437L)

	)

3123 
	#ASN1_BAD_ID
 (1859794438L)

	)

3124 
	#ASN1_BAD_LENGTH
 (1859794439L)

	)

3125 
	#ASN1_BAD_FORMAT
 (1859794440L)

	)

3126 
	#ASN1_PARSE_ERROR
 (1859794441L)

	)

3127 
	#ASN1_BAD_GMTIME
 (1859794442L)

	)

3128 
	#ASN1_MISMATCH_INDEF
 (1859794443L)

	)

3129 
	#ASN1_MISSING_EOC
 (1859794444L)

	)

3130 c⁄° 
îr‹_èbÀ
 
ë_a¢1_îr‹_èbÀ
;

3131 
	`öôülize_a¢1_îr‹_èbÀ
();

3134 
	`öôülize_a¢1_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3136 
	#ERROR_TABLE_BASE_a¢1
 (1859794432L)

	)

3139 
	#öô_a¢1_îr_tbl
 
öôülize_a¢1_îr‹_èbÀ


	)

3140 
	#a¢1_îr_ba£
 
ERROR_TABLE_BASE_a¢1


	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/netinet/in_systm.h

20 #i‚de‡
_NETINET_IN_SYSTM_H


21 
	#_NETINET_IN_SYSTM_H
 1

	)

23 
	~<sys/cdefs.h
>

24 
	~<sys/ty≥s.h
>

26 
__BEGIN_DECLS


35 
u_öt16_t
 
	tn_sh‹t
;

36 
u_öt32_t
 
	tn_l⁄g
;

37 
u_öt32_t
 
	tn_time
;

39 
	g__END_DECLS


	@/usr/include/openssl/obj_mac.h

65 
	#SN_undef
 "UNDEF"

	)

66 
	#LN_undef
 "undeföed"

	)

67 
	#NID_undef
 0

	)

68 
	#OBJ_undef
 0L

	)

70 
	#SN_ôu_t
 "ITU-T"

	)

71 
	#LN_ôu_t
 "ôu-t"

	)

72 
	#NID_ôu_t
 645

	)

73 
	#OBJ_ôu_t
 0L

	)

75 
	#NID_ccôt
 404

	)

76 
	#OBJ_ccôt
 
OBJ_ôu_t


	)

78 
	#SN_iso
 "ISO"

	)

79 
	#LN_iso
 "iso"

	)

80 
	#NID_iso
 181

	)

81 
	#OBJ_iso
 1L

	)

83 
	#SN_joöt_iso_ôu_t
 "JOINT-ISO-ITU-T"

	)

84 
	#LN_joöt_iso_ôu_t
 "joöt-iso-ôu-t"

	)

85 
	#NID_joöt_iso_ôu_t
 646

	)

86 
	#OBJ_joöt_iso_ôu_t
 2L

	)

88 
	#NID_joöt_iso_ccôt
 393

	)

89 
	#OBJ_joöt_iso_ccôt
 
OBJ_joöt_iso_ôu_t


	)

91 
	#SN_membî_body
 "membî-body"

	)

92 
	#LN_membî_body
 "ISO Membî Body"

	)

93 
	#NID_membî_body
 182

	)

94 
	#OBJ_membî_body
 
OBJ_iso
,2L

	)

96 
	#SN_idítifõd_‹g™iz©i⁄
 "idítifõd-‹g™iz©i⁄"

	)

97 
	#NID_idítifõd_‹g™iz©i⁄
 676

	)

98 
	#OBJ_idítifõd_‹g™iz©i⁄
 
OBJ_iso
,3L

	)

100 
	#SN_˚πicom_¨c
 "˚πicom-¨c"

	)

101 
	#NID_˚πicom_¨c
 677

	)

102 
	#OBJ_˚πicom_¨c
 
OBJ_idítifõd_‹g™iz©i⁄
,132L

	)

104 
	#SN_öã∫©i⁄Æ_‹g™iz©i⁄s
 "öã∫©i⁄Æ-‹g™iz©i⁄s"

	)

105 
	#LN_öã∫©i⁄Æ_‹g™iz©i⁄s
 "I¡î«ti⁄Æ Org™iz©i⁄s"

	)

106 
	#NID_öã∫©i⁄Æ_‹g™iz©i⁄s
 647

	)

107 
	#OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
 
OBJ_joöt_iso_ôu_t
,23L

	)

109 
	#SN_w≠
 "w≠"

	)

110 
	#NID_w≠
 678

	)

111 
	#OBJ_w≠
 
OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
,43L

	)

113 
	#SN_w≠_wsg
 "w≠-wsg"

	)

114 
	#NID_w≠_wsg
 679

	)

115 
	#OBJ_w≠_wsg
 
OBJ_w≠
,13L

	)

117 
	#SN_£À˘ed_©åibuã_ty≥s
 "£À˘ed-©åibuã-ty≥s"

	)

118 
	#LN_£À˘ed_©åibuã_ty≥s
 "Sñe˘ed Aâribuã Ty≥s"

	)

119 
	#NID_£À˘ed_©åibuã_ty≥s
 394

	)

120 
	#OBJ_£À˘ed_©åibuã_ty≥s
 
OBJ_joöt_iso_ôu_t
,5L,1L,5L

	)

122 
	#SN_˛óøn˚
 "˛óøn˚"

	)

123 
	#NID_˛óøn˚
 395

	)

124 
	#OBJ_˛óøn˚
 
OBJ_£À˘ed_©åibuã_ty≥s
,55L

	)

126 
	#SN_ISO_US
 "ISO-US"

	)

127 
	#LN_ISO_US
 "ISO US Membî Body"

	)

128 
	#NID_ISO_US
 183

	)

129 
	#OBJ_ISO_US
 
OBJ_membî_body
,840L

	)

131 
	#SN_X9_57
 "X9-57"

	)

132 
	#LN_X9_57
 "X9.57"

	)

133 
	#NID_X9_57
 184

	)

134 
	#OBJ_X9_57
 
OBJ_ISO_US
,10040L

	)

136 
	#SN_X9cm
 "X9cm"

	)

137 
	#LN_X9cm
 "X9.57 CM ?"

	)

138 
	#NID_X9cm
 185

	)

139 
	#OBJ_X9cm
 
OBJ_X9_57
,4L

	)

141 
	#SN_dß
 "DSA"

	)

142 
	#LN_dß
 "dßEn¸y±i⁄"

	)

143 
	#NID_dß
 116

	)

144 
	#OBJ_dß
 
OBJ_X9cm
,1L

	)

146 
	#SN_dßWôhSHA1
 "DSA-SHA1"

	)

147 
	#LN_dßWôhSHA1
 "dßWôhSHA1"

	)

148 
	#NID_dßWôhSHA1
 113

	)

149 
	#OBJ_dßWôhSHA1
 
OBJ_X9cm
,3L

	)

151 
	#SN_™si_X9_62
 "™si-X9-62"

	)

152 
	#LN_™si_X9_62
 "ANSI X9.62"

	)

153 
	#NID_™si_X9_62
 405

	)

154 
	#OBJ_™si_X9_62
 
OBJ_ISO_US
,10045L

	)

156 
	#OBJ_X9_62_id_fõldTy≥
 
OBJ_™si_X9_62
,1L

	)

158 
	#SN_X9_62_¥ime_fõld
 "¥ime-fõld"

	)

159 
	#NID_X9_62_¥ime_fõld
 406

	)

160 
	#OBJ_X9_62_¥ime_fõld
 
OBJ_X9_62_id_fõldTy≥
,1L

	)

162 
	#SN_X9_62_ch¨a˘îi°ic_two_fõld
 "ch¨a˘îi°ic-two-fõld"

	)

163 
	#NID_X9_62_ch¨a˘îi°ic_two_fõld
 407

	)

164 
	#OBJ_X9_62_ch¨a˘îi°ic_two_fõld
 
OBJ_X9_62_id_fõldTy≥
,2L

	)

166 
	#SN_X9_62_id_ch¨a˘îi°ic_two_basis
 "id-ch¨a˘îi°ic-two-basis"

	)

167 
	#NID_X9_62_id_ch¨a˘îi°ic_two_basis
 680

	)

168 
	#OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
 
OBJ_X9_62_ch¨a˘îi°ic_two_fõld
,3L

	)

170 
	#SN_X9_62_⁄Basis
 "⁄Basis"

	)

171 
	#NID_X9_62_⁄Basis
 681

	)

172 
	#OBJ_X9_62_⁄Basis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,1L

	)

174 
	#SN_X9_62_çBasis
 "çBasis"

	)

175 
	#NID_X9_62_çBasis
 682

	)

176 
	#OBJ_X9_62_çBasis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,2L

	)

178 
	#SN_X9_62_µBasis
 "µBasis"

	)

179 
	#NID_X9_62_µBasis
 683

	)

180 
	#OBJ_X9_62_µBasis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,3L

	)

182 
	#OBJ_X9_62_id_publicKeyTy≥
 
OBJ_™si_X9_62
,2L

	)

184 
	#SN_X9_62_id_ecPublicKey
 "id-ecPublicKey"

	)

185 
	#NID_X9_62_id_ecPublicKey
 408

	)

186 
	#OBJ_X9_62_id_ecPublicKey
 
OBJ_X9_62_id_publicKeyTy≥
,1L

	)

188 
	#OBJ_X9_62_ñlùticCurve
 
OBJ_™si_X9_62
,3L

	)

190 
	#OBJ_X9_62_c_TwoCurve
 
OBJ_X9_62_ñlùticCurve
,0L

	)

192 
	#SN_X9_62_c2≤b163v1
 "c2≤b163v1"

	)

193 
	#NID_X9_62_c2≤b163v1
 684

	)

194 
	#OBJ_X9_62_c2≤b163v1
 
OBJ_X9_62_c_TwoCurve
,1L

	)

196 
	#SN_X9_62_c2≤b163v2
 "c2≤b163v2"

	)

197 
	#NID_X9_62_c2≤b163v2
 685

	)

198 
	#OBJ_X9_62_c2≤b163v2
 
OBJ_X9_62_c_TwoCurve
,2L

	)

200 
	#SN_X9_62_c2≤b163v3
 "c2≤b163v3"

	)

201 
	#NID_X9_62_c2≤b163v3
 686

	)

202 
	#OBJ_X9_62_c2≤b163v3
 
OBJ_X9_62_c_TwoCurve
,3L

	)

204 
	#SN_X9_62_c2≤b176v1
 "c2≤b176v1"

	)

205 
	#NID_X9_62_c2≤b176v1
 687

	)

206 
	#OBJ_X9_62_c2≤b176v1
 
OBJ_X9_62_c_TwoCurve
,4L

	)

208 
	#SN_X9_62_c2äb191v1
 "c2äb191v1"

	)

209 
	#NID_X9_62_c2äb191v1
 688

	)

210 
	#OBJ_X9_62_c2äb191v1
 
OBJ_X9_62_c_TwoCurve
,5L

	)

212 
	#SN_X9_62_c2äb191v2
 "c2äb191v2"

	)

213 
	#NID_X9_62_c2äb191v2
 689

	)

214 
	#OBJ_X9_62_c2äb191v2
 
OBJ_X9_62_c_TwoCurve
,6L

	)

216 
	#SN_X9_62_c2äb191v3
 "c2äb191v3"

	)

217 
	#NID_X9_62_c2äb191v3
 690

	)

218 
	#OBJ_X9_62_c2äb191v3
 
OBJ_X9_62_c_TwoCurve
,7L

	)

220 
	#SN_X9_62_c2⁄b191v4
 "c2⁄b191v4"

	)

221 
	#NID_X9_62_c2⁄b191v4
 691

	)

222 
	#OBJ_X9_62_c2⁄b191v4
 
OBJ_X9_62_c_TwoCurve
,8L

	)

224 
	#SN_X9_62_c2⁄b191v5
 "c2⁄b191v5"

	)

225 
	#NID_X9_62_c2⁄b191v5
 692

	)

226 
	#OBJ_X9_62_c2⁄b191v5
 
OBJ_X9_62_c_TwoCurve
,9L

	)

228 
	#SN_X9_62_c2≤b208w1
 "c2≤b208w1"

	)

229 
	#NID_X9_62_c2≤b208w1
 693

	)

230 
	#OBJ_X9_62_c2≤b208w1
 
OBJ_X9_62_c_TwoCurve
,10L

	)

232 
	#SN_X9_62_c2äb239v1
 "c2äb239v1"

	)

233 
	#NID_X9_62_c2äb239v1
 694

	)

234 
	#OBJ_X9_62_c2äb239v1
 
OBJ_X9_62_c_TwoCurve
,11L

	)

236 
	#SN_X9_62_c2äb239v2
 "c2äb239v2"

	)

237 
	#NID_X9_62_c2äb239v2
 695

	)

238 
	#OBJ_X9_62_c2äb239v2
 
OBJ_X9_62_c_TwoCurve
,12L

	)

240 
	#SN_X9_62_c2äb239v3
 "c2äb239v3"

	)

241 
	#NID_X9_62_c2äb239v3
 696

	)

242 
	#OBJ_X9_62_c2äb239v3
 
OBJ_X9_62_c_TwoCurve
,13L

	)

244 
	#SN_X9_62_c2⁄b239v4
 "c2⁄b239v4"

	)

245 
	#NID_X9_62_c2⁄b239v4
 697

	)

246 
	#OBJ_X9_62_c2⁄b239v4
 
OBJ_X9_62_c_TwoCurve
,14L

	)

248 
	#SN_X9_62_c2⁄b239v5
 "c2⁄b239v5"

	)

249 
	#NID_X9_62_c2⁄b239v5
 698

	)

250 
	#OBJ_X9_62_c2⁄b239v5
 
OBJ_X9_62_c_TwoCurve
,15L

	)

252 
	#SN_X9_62_c2≤b272w1
 "c2≤b272w1"

	)

253 
	#NID_X9_62_c2≤b272w1
 699

	)

254 
	#OBJ_X9_62_c2≤b272w1
 
OBJ_X9_62_c_TwoCurve
,16L

	)

256 
	#SN_X9_62_c2≤b304w1
 "c2≤b304w1"

	)

257 
	#NID_X9_62_c2≤b304w1
 700

	)

258 
	#OBJ_X9_62_c2≤b304w1
 
OBJ_X9_62_c_TwoCurve
,17L

	)

260 
	#SN_X9_62_c2äb359v1
 "c2äb359v1"

	)

261 
	#NID_X9_62_c2äb359v1
 701

	)

262 
	#OBJ_X9_62_c2äb359v1
 
OBJ_X9_62_c_TwoCurve
,18L

	)

264 
	#SN_X9_62_c2≤b368w1
 "c2≤b368w1"

	)

265 
	#NID_X9_62_c2≤b368w1
 702

	)

266 
	#OBJ_X9_62_c2≤b368w1
 
OBJ_X9_62_c_TwoCurve
,19L

	)

268 
	#SN_X9_62_c2äb431r1
 "c2äb431r1"

	)

269 
	#NID_X9_62_c2äb431r1
 703

	)

270 
	#OBJ_X9_62_c2äb431r1
 
OBJ_X9_62_c_TwoCurve
,20L

	)

272 
	#OBJ_X9_62_¥imeCurve
 
OBJ_X9_62_ñlùticCurve
,1L

	)

274 
	#SN_X9_62_¥ime192v1
 "¥ime192v1"

	)

275 
	#NID_X9_62_¥ime192v1
 409

	)

276 
	#OBJ_X9_62_¥ime192v1
 
OBJ_X9_62_¥imeCurve
,1L

	)

278 
	#SN_X9_62_¥ime192v2
 "¥ime192v2"

	)

279 
	#NID_X9_62_¥ime192v2
 410

	)

280 
	#OBJ_X9_62_¥ime192v2
 
OBJ_X9_62_¥imeCurve
,2L

	)

282 
	#SN_X9_62_¥ime192v3
 "¥ime192v3"

	)

283 
	#NID_X9_62_¥ime192v3
 411

	)

284 
	#OBJ_X9_62_¥ime192v3
 
OBJ_X9_62_¥imeCurve
,3L

	)

286 
	#SN_X9_62_¥ime239v1
 "¥ime239v1"

	)

287 
	#NID_X9_62_¥ime239v1
 412

	)

288 
	#OBJ_X9_62_¥ime239v1
 
OBJ_X9_62_¥imeCurve
,4L

	)

290 
	#SN_X9_62_¥ime239v2
 "¥ime239v2"

	)

291 
	#NID_X9_62_¥ime239v2
 413

	)

292 
	#OBJ_X9_62_¥ime239v2
 
OBJ_X9_62_¥imeCurve
,5L

	)

294 
	#SN_X9_62_¥ime239v3
 "¥ime239v3"

	)

295 
	#NID_X9_62_¥ime239v3
 414

	)

296 
	#OBJ_X9_62_¥ime239v3
 
OBJ_X9_62_¥imeCurve
,6L

	)

298 
	#SN_X9_62_¥ime256v1
 "¥ime256v1"

	)

299 
	#NID_X9_62_¥ime256v1
 415

	)

300 
	#OBJ_X9_62_¥ime256v1
 
OBJ_X9_62_¥imeCurve
,7L

	)

302 
	#OBJ_X9_62_id_ecSigTy≥
 
OBJ_™si_X9_62
,4L

	)

304 
	#SN_ecdß_wôh_SHA1
 "ecdß-wôh-SHA1"

	)

305 
	#NID_ecdß_wôh_SHA1
 416

	)

306 
	#OBJ_ecdß_wôh_SHA1
 
OBJ_X9_62_id_ecSigTy≥
,1L

	)

308 
	#OBJ_£cg_ñlùticCurve
 
OBJ_˚πicom_¨c
,0L

	)

310 
	#SN_£˝112r1
 "£˝112r1"

	)

311 
	#NID_£˝112r1
 704

	)

312 
	#OBJ_£˝112r1
 
OBJ_£cg_ñlùticCurve
,6L

	)

314 
	#SN_£˝112r2
 "£˝112r2"

	)

315 
	#NID_£˝112r2
 705

	)

316 
	#OBJ_£˝112r2
 
OBJ_£cg_ñlùticCurve
,7L

	)

318 
	#SN_£˝128r1
 "£˝128r1"

	)

319 
	#NID_£˝128r1
 706

	)

320 
	#OBJ_£˝128r1
 
OBJ_£cg_ñlùticCurve
,28L

	)

322 
	#SN_£˝128r2
 "£˝128r2"

	)

323 
	#NID_£˝128r2
 707

	)

324 
	#OBJ_£˝128r2
 
OBJ_£cg_ñlùticCurve
,29L

	)

326 
	#SN_£˝160k1
 "£˝160k1"

	)

327 
	#NID_£˝160k1
 708

	)

328 
	#OBJ_£˝160k1
 
OBJ_£cg_ñlùticCurve
,9L

	)

330 
	#SN_£˝160r1
 "£˝160r1"

	)

331 
	#NID_£˝160r1
 709

	)

332 
	#OBJ_£˝160r1
 
OBJ_£cg_ñlùticCurve
,8L

	)

334 
	#SN_£˝160r2
 "£˝160r2"

	)

335 
	#NID_£˝160r2
 710

	)

336 
	#OBJ_£˝160r2
 
OBJ_£cg_ñlùticCurve
,30L

	)

338 
	#SN_£˝192k1
 "£˝192k1"

	)

339 
	#NID_£˝192k1
 711

	)

340 
	#OBJ_£˝192k1
 
OBJ_£cg_ñlùticCurve
,31L

	)

342 
	#SN_£˝224k1
 "£˝224k1"

	)

343 
	#NID_£˝224k1
 712

	)

344 
	#OBJ_£˝224k1
 
OBJ_£cg_ñlùticCurve
,32L

	)

346 
	#SN_£˝224r1
 "£˝224r1"

	)

347 
	#NID_£˝224r1
 713

	)

348 
	#OBJ_£˝224r1
 
OBJ_£cg_ñlùticCurve
,33L

	)

350 
	#SN_£˝256k1
 "£˝256k1"

	)

351 
	#NID_£˝256k1
 714

	)

352 
	#OBJ_£˝256k1
 
OBJ_£cg_ñlùticCurve
,10L

	)

354 
	#SN_£˝384r1
 "£˝384r1"

	)

355 
	#NID_£˝384r1
 715

	)

356 
	#OBJ_£˝384r1
 
OBJ_£cg_ñlùticCurve
,34L

	)

358 
	#SN_£˝521r1
 "£˝521r1"

	)

359 
	#NID_£˝521r1
 716

	)

360 
	#OBJ_£˝521r1
 
OBJ_£cg_ñlùticCurve
,35L

	)

362 
	#SN_£˘113r1
 "£˘113r1"

	)

363 
	#NID_£˘113r1
 717

	)

364 
	#OBJ_£˘113r1
 
OBJ_£cg_ñlùticCurve
,4L

	)

366 
	#SN_£˘113r2
 "£˘113r2"

	)

367 
	#NID_£˘113r2
 718

	)

368 
	#OBJ_£˘113r2
 
OBJ_£cg_ñlùticCurve
,5L

	)

370 
	#SN_£˘131r1
 "£˘131r1"

	)

371 
	#NID_£˘131r1
 719

	)

372 
	#OBJ_£˘131r1
 
OBJ_£cg_ñlùticCurve
,22L

	)

374 
	#SN_£˘131r2
 "£˘131r2"

	)

375 
	#NID_£˘131r2
 720

	)

376 
	#OBJ_£˘131r2
 
OBJ_£cg_ñlùticCurve
,23L

	)

378 
	#SN_£˘163k1
 "£˘163k1"

	)

379 
	#NID_£˘163k1
 721

	)

380 
	#OBJ_£˘163k1
 
OBJ_£cg_ñlùticCurve
,1L

	)

382 
	#SN_£˘163r1
 "£˘163r1"

	)

383 
	#NID_£˘163r1
 722

	)

384 
	#OBJ_£˘163r1
 
OBJ_£cg_ñlùticCurve
,2L

	)

386 
	#SN_£˘163r2
 "£˘163r2"

	)

387 
	#NID_£˘163r2
 723

	)

388 
	#OBJ_£˘163r2
 
OBJ_£cg_ñlùticCurve
,15L

	)

390 
	#SN_£˘193r1
 "£˘193r1"

	)

391 
	#NID_£˘193r1
 724

	)

392 
	#OBJ_£˘193r1
 
OBJ_£cg_ñlùticCurve
,24L

	)

394 
	#SN_£˘193r2
 "£˘193r2"

	)

395 
	#NID_£˘193r2
 725

	)

396 
	#OBJ_£˘193r2
 
OBJ_£cg_ñlùticCurve
,25L

	)

398 
	#SN_£˘233k1
 "£˘233k1"

	)

399 
	#NID_£˘233k1
 726

	)

400 
	#OBJ_£˘233k1
 
OBJ_£cg_ñlùticCurve
,26L

	)

402 
	#SN_£˘233r1
 "£˘233r1"

	)

403 
	#NID_£˘233r1
 727

	)

404 
	#OBJ_£˘233r1
 
OBJ_£cg_ñlùticCurve
,27L

	)

406 
	#SN_£˘239k1
 "£˘239k1"

	)

407 
	#NID_£˘239k1
 728

	)

408 
	#OBJ_£˘239k1
 
OBJ_£cg_ñlùticCurve
,3L

	)

410 
	#SN_£˘283k1
 "£˘283k1"

	)

411 
	#NID_£˘283k1
 729

	)

412 
	#OBJ_£˘283k1
 
OBJ_£cg_ñlùticCurve
,16L

	)

414 
	#SN_£˘283r1
 "£˘283r1"

	)

415 
	#NID_£˘283r1
 730

	)

416 
	#OBJ_£˘283r1
 
OBJ_£cg_ñlùticCurve
,17L

	)

418 
	#SN_£˘409k1
 "£˘409k1"

	)

419 
	#NID_£˘409k1
 731

	)

420 
	#OBJ_£˘409k1
 
OBJ_£cg_ñlùticCurve
,36L

	)

422 
	#SN_£˘409r1
 "£˘409r1"

	)

423 
	#NID_£˘409r1
 732

	)

424 
	#OBJ_£˘409r1
 
OBJ_£cg_ñlùticCurve
,37L

	)

426 
	#SN_£˘571k1
 "£˘571k1"

	)

427 
	#NID_£˘571k1
 733

	)

428 
	#OBJ_£˘571k1
 
OBJ_£cg_ñlùticCurve
,38L

	)

430 
	#SN_£˘571r1
 "£˘571r1"

	)

431 
	#NID_£˘571r1
 734

	)

432 
	#OBJ_£˘571r1
 
OBJ_£cg_ñlùticCurve
,39L

	)

434 
	#OBJ_w≠_wsg_idm_ecid
 
OBJ_w≠_wsg
,4L

	)

436 
	#SN_w≠_wsg_idm_ecid_wés1
 "w≠-wsg-idm-ecid-wés1"

	)

437 
	#NID_w≠_wsg_idm_ecid_wés1
 735

	)

438 
	#OBJ_w≠_wsg_idm_ecid_wés1
 
OBJ_w≠_wsg_idm_ecid
,1L

	)

440 
	#SN_w≠_wsg_idm_ecid_wés3
 "w≠-wsg-idm-ecid-wés3"

	)

441 
	#NID_w≠_wsg_idm_ecid_wés3
 736

	)

442 
	#OBJ_w≠_wsg_idm_ecid_wés3
 
OBJ_w≠_wsg_idm_ecid
,3L

	)

444 
	#SN_w≠_wsg_idm_ecid_wés4
 "w≠-wsg-idm-ecid-wés4"

	)

445 
	#NID_w≠_wsg_idm_ecid_wés4
 737

	)

446 
	#OBJ_w≠_wsg_idm_ecid_wés4
 
OBJ_w≠_wsg_idm_ecid
,4L

	)

448 
	#SN_w≠_wsg_idm_ecid_wés5
 "w≠-wsg-idm-ecid-wés5"

	)

449 
	#NID_w≠_wsg_idm_ecid_wés5
 738

	)

450 
	#OBJ_w≠_wsg_idm_ecid_wés5
 
OBJ_w≠_wsg_idm_ecid
,5L

	)

452 
	#SN_w≠_wsg_idm_ecid_wés6
 "w≠-wsg-idm-ecid-wés6"

	)

453 
	#NID_w≠_wsg_idm_ecid_wés6
 739

	)

454 
	#OBJ_w≠_wsg_idm_ecid_wés6
 
OBJ_w≠_wsg_idm_ecid
,6L

	)

456 
	#SN_w≠_wsg_idm_ecid_wés7
 "w≠-wsg-idm-ecid-wés7"

	)

457 
	#NID_w≠_wsg_idm_ecid_wés7
 740

	)

458 
	#OBJ_w≠_wsg_idm_ecid_wés7
 
OBJ_w≠_wsg_idm_ecid
,7L

	)

460 
	#SN_w≠_wsg_idm_ecid_wés8
 "w≠-wsg-idm-ecid-wés8"

	)

461 
	#NID_w≠_wsg_idm_ecid_wés8
 741

	)

462 
	#OBJ_w≠_wsg_idm_ecid_wés8
 
OBJ_w≠_wsg_idm_ecid
,8L

	)

464 
	#SN_w≠_wsg_idm_ecid_wés9
 "w≠-wsg-idm-ecid-wés9"

	)

465 
	#NID_w≠_wsg_idm_ecid_wés9
 742

	)

466 
	#OBJ_w≠_wsg_idm_ecid_wés9
 
OBJ_w≠_wsg_idm_ecid
,9L

	)

468 
	#SN_w≠_wsg_idm_ecid_wés10
 "w≠-wsg-idm-ecid-wés10"

	)

469 
	#NID_w≠_wsg_idm_ecid_wés10
 743

	)

470 
	#OBJ_w≠_wsg_idm_ecid_wés10
 
OBJ_w≠_wsg_idm_ecid
,10L

	)

472 
	#SN_w≠_wsg_idm_ecid_wés11
 "w≠-wsg-idm-ecid-wés11"

	)

473 
	#NID_w≠_wsg_idm_ecid_wés11
 744

	)

474 
	#OBJ_w≠_wsg_idm_ecid_wés11
 
OBJ_w≠_wsg_idm_ecid
,11L

	)

476 
	#SN_w≠_wsg_idm_ecid_wés12
 "w≠-wsg-idm-ecid-wés12"

	)

477 
	#NID_w≠_wsg_idm_ecid_wés12
 745

	)

478 
	#OBJ_w≠_wsg_idm_ecid_wés12
 
OBJ_w≠_wsg_idm_ecid
,12L

	)

480 
	#SN_ˇ°5_cbc
 "CAST5-CBC"

	)

481 
	#LN_ˇ°5_cbc
 "ˇ°5-cbc"

	)

482 
	#NID_ˇ°5_cbc
 108

	)

483 
	#OBJ_ˇ°5_cbc
 
OBJ_ISO_US
,113533L,7L,66L,10L

	)

485 
	#SN_ˇ°5_ecb
 "CAST5-ECB"

	)

486 
	#LN_ˇ°5_ecb
 "ˇ°5-ecb"

	)

487 
	#NID_ˇ°5_ecb
 109

	)

489 
	#SN_ˇ°5_cfb64
 "CAST5-CFB"

	)

490 
	#LN_ˇ°5_cfb64
 "ˇ°5-cfb"

	)

491 
	#NID_ˇ°5_cfb64
 110

	)

493 
	#SN_ˇ°5_ofb64
 "CAST5-OFB"

	)

494 
	#LN_ˇ°5_ofb64
 "ˇ°5-ofb"

	)

495 
	#NID_ˇ°5_ofb64
 111

	)

497 
	#LN_pbeWôhMD5AndCa°5_CBC
 "pbeWôhMD5AndCa°5CBC"

	)

498 
	#NID_pbeWôhMD5AndCa°5_CBC
 112

	)

499 
	#OBJ_pbeWôhMD5AndCa°5_CBC
 
OBJ_ISO_US
,113533L,7L,66L,12L

	)

501 
	#SN_rßdsi
 "rßdsi"

	)

502 
	#LN_rßdsi
 "RSA D©®Securôy, Inc."

	)

503 
	#NID_rßdsi
 1

	)

504 
	#OBJ_rßdsi
 
OBJ_ISO_US
,113549L

	)

506 
	#SN_pkcs
 "pkcs"

	)

507 
	#LN_pkcs
 "RSA D©®Securôy, Inc. PKCS"

	)

508 
	#NID_pkcs
 2

	)

509 
	#OBJ_pkcs
 
OBJ_rßdsi
,1L

	)

511 
	#SN_pkcs1
 "pkcs1"

	)

512 
	#NID_pkcs1
 186

	)

513 
	#OBJ_pkcs1
 
OBJ_pkcs
,1L

	)

515 
	#LN_rßEn¸y±i⁄
 "rßEn¸y±i⁄"

	)

516 
	#NID_rßEn¸y±i⁄
 6

	)

517 
	#OBJ_rßEn¸y±i⁄
 
OBJ_pkcs1
,1L

	)

519 
	#SN_md2WôhRSAEn¸y±i⁄
 "RSA-MD2"

	)

520 
	#LN_md2WôhRSAEn¸y±i⁄
 "md2WôhRSAEn¸y±i⁄"

	)

521 
	#NID_md2WôhRSAEn¸y±i⁄
 7

	)

522 
	#OBJ_md2WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,2L

	)

524 
	#SN_md4WôhRSAEn¸y±i⁄
 "RSA-MD4"

	)

525 
	#LN_md4WôhRSAEn¸y±i⁄
 "md4WôhRSAEn¸y±i⁄"

	)

526 
	#NID_md4WôhRSAEn¸y±i⁄
 396

	)

527 
	#OBJ_md4WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,3L

	)

529 
	#SN_md5WôhRSAEn¸y±i⁄
 "RSA-MD5"

	)

530 
	#LN_md5WôhRSAEn¸y±i⁄
 "md5WôhRSAEn¸y±i⁄"

	)

531 
	#NID_md5WôhRSAEn¸y±i⁄
 8

	)

532 
	#OBJ_md5WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,4L

	)

534 
	#SN_sha1WôhRSAEn¸y±i⁄
 "RSA-SHA1"

	)

535 
	#LN_sha1WôhRSAEn¸y±i⁄
 "sha1WôhRSAEn¸y±i⁄"

	)

536 
	#NID_sha1WôhRSAEn¸y±i⁄
 65

	)

537 
	#OBJ_sha1WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,5L

	)

539 
	#SN_sha256WôhRSAEn¸y±i⁄
 "RSA-SHA256"

	)

540 
	#LN_sha256WôhRSAEn¸y±i⁄
 "sha256WôhRSAEn¸y±i⁄"

	)

541 
	#NID_sha256WôhRSAEn¸y±i⁄
 668

	)

542 
	#OBJ_sha256WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,11L

	)

544 
	#SN_sha384WôhRSAEn¸y±i⁄
 "RSA-SHA384"

	)

545 
	#LN_sha384WôhRSAEn¸y±i⁄
 "sha384WôhRSAEn¸y±i⁄"

	)

546 
	#NID_sha384WôhRSAEn¸y±i⁄
 669

	)

547 
	#OBJ_sha384WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,12L

	)

549 
	#SN_sha512WôhRSAEn¸y±i⁄
 "RSA-SHA512"

	)

550 
	#LN_sha512WôhRSAEn¸y±i⁄
 "sha512WôhRSAEn¸y±i⁄"

	)

551 
	#NID_sha512WôhRSAEn¸y±i⁄
 670

	)

552 
	#OBJ_sha512WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,13L

	)

554 
	#SN_sha224WôhRSAEn¸y±i⁄
 "RSA-SHA224"

	)

555 
	#LN_sha224WôhRSAEn¸y±i⁄
 "sha224WôhRSAEn¸y±i⁄"

	)

556 
	#NID_sha224WôhRSAEn¸y±i⁄
 671

	)

557 
	#OBJ_sha224WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,14L

	)

559 
	#SN_pkcs3
 "pkcs3"

	)

560 
	#NID_pkcs3
 27

	)

561 
	#OBJ_pkcs3
 
OBJ_pkcs
,3L

	)

563 
	#LN_dhKeyAgªemít
 "dhKeyAgªemít"

	)

564 
	#NID_dhKeyAgªemít
 28

	)

565 
	#OBJ_dhKeyAgªemít
 
OBJ_pkcs3
,1L

	)

567 
	#SN_pkcs5
 "pkcs5"

	)

568 
	#NID_pkcs5
 187

	)

569 
	#OBJ_pkcs5
 
OBJ_pkcs
,5L

	)

571 
	#SN_pbeWôhMD2AndDES_CBC
 "PBE-MD2-DES"

	)

572 
	#LN_pbeWôhMD2AndDES_CBC
 "pbeWôhMD2AndDES-CBC"

	)

573 
	#NID_pbeWôhMD2AndDES_CBC
 9

	)

574 
	#OBJ_pbeWôhMD2AndDES_CBC
 
OBJ_pkcs5
,1L

	)

576 
	#SN_pbeWôhMD5AndDES_CBC
 "PBE-MD5-DES"

	)

577 
	#LN_pbeWôhMD5AndDES_CBC
 "pbeWôhMD5AndDES-CBC"

	)

578 
	#NID_pbeWôhMD5AndDES_CBC
 10

	)

579 
	#OBJ_pbeWôhMD5AndDES_CBC
 
OBJ_pkcs5
,3L

	)

581 
	#SN_pbeWôhMD2AndRC2_CBC
 "PBE-MD2-RC2-64"

	)

582 
	#LN_pbeWôhMD2AndRC2_CBC
 "pbeWôhMD2AndRC2-CBC"

	)

583 
	#NID_pbeWôhMD2AndRC2_CBC
 168

	)

584 
	#OBJ_pbeWôhMD2AndRC2_CBC
 
OBJ_pkcs5
,4L

	)

586 
	#SN_pbeWôhMD5AndRC2_CBC
 "PBE-MD5-RC2-64"

	)

587 
	#LN_pbeWôhMD5AndRC2_CBC
 "pbeWôhMD5AndRC2-CBC"

	)

588 
	#NID_pbeWôhMD5AndRC2_CBC
 169

	)

589 
	#OBJ_pbeWôhMD5AndRC2_CBC
 
OBJ_pkcs5
,6L

	)

591 
	#SN_pbeWôhSHA1AndDES_CBC
 "PBE-SHA1-DES"

	)

592 
	#LN_pbeWôhSHA1AndDES_CBC
 "pbeWôhSHA1AndDES-CBC"

	)

593 
	#NID_pbeWôhSHA1AndDES_CBC
 170

	)

594 
	#OBJ_pbeWôhSHA1AndDES_CBC
 
OBJ_pkcs5
,10L

	)

596 
	#SN_pbeWôhSHA1AndRC2_CBC
 "PBE-SHA1-RC2-64"

	)

597 
	#LN_pbeWôhSHA1AndRC2_CBC
 "pbeWôhSHA1AndRC2-CBC"

	)

598 
	#NID_pbeWôhSHA1AndRC2_CBC
 68

	)

599 
	#OBJ_pbeWôhSHA1AndRC2_CBC
 
OBJ_pkcs5
,11L

	)

601 
	#LN_id_pbkdf2
 "PBKDF2"

	)

602 
	#NID_id_pbkdf2
 69

	)

603 
	#OBJ_id_pbkdf2
 
OBJ_pkcs5
,12L

	)

605 
	#LN_pbes2
 "PBES2"

	)

606 
	#NID_pbes2
 161

	)

607 
	#OBJ_pbes2
 
OBJ_pkcs5
,13L

	)

609 
	#LN_pbmac1
 "PBMAC1"

	)

610 
	#NID_pbmac1
 162

	)

611 
	#OBJ_pbmac1
 
OBJ_pkcs5
,14L

	)

613 
	#SN_pkcs7
 "pkcs7"

	)

614 
	#NID_pkcs7
 20

	)

615 
	#OBJ_pkcs7
 
OBJ_pkcs
,7L

	)

617 
	#LN_pkcs7_d©a
 "pkcs7-d©a"

	)

618 
	#NID_pkcs7_d©a
 21

	)

619 
	#OBJ_pkcs7_d©a
 
OBJ_pkcs7
,1L

	)

621 
	#LN_pkcs7_sig√d
 "pkcs7-sig√dD©a"

	)

622 
	#NID_pkcs7_sig√d
 22

	)

623 
	#OBJ_pkcs7_sig√d
 
OBJ_pkcs7
,2L

	)

625 
	#LN_pkcs7_ívñ›ed
 "pkcs7-ívñ›edD©a"

	)

626 
	#NID_pkcs7_ívñ›ed
 23

	)

627 
	#OBJ_pkcs7_ívñ›ed
 
OBJ_pkcs7
,3L

	)

629 
	#LN_pkcs7_sig√dAndEnvñ›ed
 "pkcs7-sig√dAndEnvñ›edD©a"

	)

630 
	#NID_pkcs7_sig√dAndEnvñ›ed
 24

	)

631 
	#OBJ_pkcs7_sig√dAndEnvñ›ed
 
OBJ_pkcs7
,4L

	)

633 
	#LN_pkcs7_dige°
 "pkcs7-dige°D©a"

	)

634 
	#NID_pkcs7_dige°
 25

	)

635 
	#OBJ_pkcs7_dige°
 
OBJ_pkcs7
,5L

	)

637 
	#LN_pkcs7_í¸y±ed
 "pkcs7-í¸y±edD©a"

	)

638 
	#NID_pkcs7_í¸y±ed
 26

	)

639 
	#OBJ_pkcs7_í¸y±ed
 
OBJ_pkcs7
,6L

	)

641 
	#SN_pkcs9
 "pkcs9"

	)

642 
	#NID_pkcs9
 47

	)

643 
	#OBJ_pkcs9
 
OBJ_pkcs
,9L

	)

645 
	#LN_pkcs9_emaûAddªss
 "emaûAddªss"

	)

646 
	#NID_pkcs9_emaûAddªss
 48

	)

647 
	#OBJ_pkcs9_emaûAddªss
 
OBJ_pkcs9
,1L

	)

649 
	#LN_pkcs9_un°ru˘uªdName
 "un°ru˘uªdName"

	)

650 
	#NID_pkcs9_un°ru˘uªdName
 49

	)

651 
	#OBJ_pkcs9_un°ru˘uªdName
 
OBJ_pkcs9
,2L

	)

653 
	#LN_pkcs9_c⁄ã¡Ty≥
 "c⁄ã¡Ty≥"

	)

654 
	#NID_pkcs9_c⁄ã¡Ty≥
 50

	)

655 
	#OBJ_pkcs9_c⁄ã¡Ty≥
 
OBJ_pkcs9
,3L

	)

657 
	#LN_pkcs9_mesßgeDige°
 "mesßgeDige°"

	)

658 
	#NID_pkcs9_mesßgeDige°
 51

	)

659 
	#OBJ_pkcs9_mesßgeDige°
 
OBJ_pkcs9
,4L

	)

661 
	#LN_pkcs9_signögTime
 "signögTime"

	)

662 
	#NID_pkcs9_signögTime
 52

	)

663 
	#OBJ_pkcs9_signögTime
 
OBJ_pkcs9
,5L

	)

665 
	#LN_pkcs9_cou¡îsig«tuª
 "cou¡îsig«tuª"

	)

666 
	#NID_pkcs9_cou¡îsig«tuª
 53

	)

667 
	#OBJ_pkcs9_cou¡îsig«tuª
 
OBJ_pkcs9
,6L

	)

669 
	#LN_pkcs9_chÆÀngePassw‹d
 "chÆÀngePassw‹d"

	)

670 
	#NID_pkcs9_chÆÀngePassw‹d
 54

	)

671 
	#OBJ_pkcs9_chÆÀngePassw‹d
 
OBJ_pkcs9
,7L

	)

673 
	#LN_pkcs9_un°ru˘uªdAddªss
 "un°ru˘uªdAddªss"

	)

674 
	#NID_pkcs9_un°ru˘uªdAddªss
 55

	)

675 
	#OBJ_pkcs9_un°ru˘uªdAddªss
 
OBJ_pkcs9
,8L

	)

677 
	#LN_pkcs9_extCîtAâribuãs
 "exãndedCîtifiˇãAâribuãs"

	)

678 
	#NID_pkcs9_extCîtAâribuãs
 56

	)

679 
	#OBJ_pkcs9_extCîtAâribuãs
 
OBJ_pkcs9
,9L

	)

681 
	#SN_ext_ªq
 "extReq"

	)

682 
	#LN_ext_ªq
 "Exãnsi⁄ Reque°"

	)

683 
	#NID_ext_ªq
 172

	)

684 
	#OBJ_ext_ªq
 
OBJ_pkcs9
,14L

	)

686 
	#SN_SMIMEC≠abûôõs
 "SMIME-CAPS"

	)

687 
	#LN_SMIMEC≠abûôõs
 "S/MIME C≠abûôõs"

	)

688 
	#NID_SMIMEC≠abûôõs
 167

	)

689 
	#OBJ_SMIMEC≠abûôõs
 
OBJ_pkcs9
,15L

	)

691 
	#SN_SMIME
 "SMIME"

	)

692 
	#LN_SMIME
 "S/MIME"

	)

693 
	#NID_SMIME
 188

	)

694 
	#OBJ_SMIME
 
OBJ_pkcs9
,16L

	)

696 
	#SN_id_smime_mod
 "id-smime-mod"

	)

697 
	#NID_id_smime_mod
 189

	)

698 
	#OBJ_id_smime_mod
 
OBJ_SMIME
,0L

	)

700 
	#SN_id_smime_˘
 "id-smime-˘"

	)

701 
	#NID_id_smime_˘
 190

	)

702 
	#OBJ_id_smime_˘
 
OBJ_SMIME
,1L

	)

704 
	#SN_id_smime_Ø
 "id-smime-Ø"

	)

705 
	#NID_id_smime_Ø
 191

	)

706 
	#OBJ_id_smime_Ø
 
OBJ_SMIME
,2L

	)

708 
	#SN_id_smime_Æg
 "id-smime-Æg"

	)

709 
	#NID_id_smime_Æg
 192

	)

710 
	#OBJ_id_smime_Æg
 
OBJ_SMIME
,3L

	)

712 
	#SN_id_smime_cd
 "id-smime-cd"

	)

713 
	#NID_id_smime_cd
 193

	)

714 
	#OBJ_id_smime_cd
 
OBJ_SMIME
,4L

	)

716 
	#SN_id_smime_•q
 "id-smime-•q"

	)

717 
	#NID_id_smime_•q
 194

	)

718 
	#OBJ_id_smime_•q
 
OBJ_SMIME
,5L

	)

720 
	#SN_id_smime_˘i
 "id-smime-˘i"

	)

721 
	#NID_id_smime_˘i
 195

	)

722 
	#OBJ_id_smime_˘i
 
OBJ_SMIME
,6L

	)

724 
	#SN_id_smime_mod_cms
 "id-smime-mod-cms"

	)

725 
	#NID_id_smime_mod_cms
 196

	)

726 
	#OBJ_id_smime_mod_cms
 
OBJ_id_smime_mod
,1L

	)

728 
	#SN_id_smime_mod_ess
 "id-smime-mod-ess"

	)

729 
	#NID_id_smime_mod_ess
 197

	)

730 
	#OBJ_id_smime_mod_ess
 
OBJ_id_smime_mod
,2L

	)

732 
	#SN_id_smime_mod_oid
 "id-smime-mod-oid"

	)

733 
	#NID_id_smime_mod_oid
 198

	)

734 
	#OBJ_id_smime_mod_oid
 
OBJ_id_smime_mod
,3L

	)

736 
	#SN_id_smime_mod_msg_v3
 "id-smime-mod-msg-v3"

	)

737 
	#NID_id_smime_mod_msg_v3
 199

	)

738 
	#OBJ_id_smime_mod_msg_v3
 
OBJ_id_smime_mod
,4L

	)

740 
	#SN_id_smime_mod_ës_eSig«tuª_88
 "id-smime-mod-ës-eSig«tuª-88"

	)

741 
	#NID_id_smime_mod_ës_eSig«tuª_88
 200

	)

742 
	#OBJ_id_smime_mod_ës_eSig«tuª_88
 
OBJ_id_smime_mod
,5L

	)

744 
	#SN_id_smime_mod_ës_eSig«tuª_97
 "id-smime-mod-ës-eSig«tuª-97"

	)

745 
	#NID_id_smime_mod_ës_eSig«tuª_97
 201

	)

746 
	#OBJ_id_smime_mod_ës_eSig«tuª_97
 
OBJ_id_smime_mod
,6L

	)

748 
	#SN_id_smime_mod_ës_eSigPﬁicy_88
 "id-smime-mod-ës-eSigPﬁicy-88"

	)

749 
	#NID_id_smime_mod_ës_eSigPﬁicy_88
 202

	)

750 
	#OBJ_id_smime_mod_ës_eSigPﬁicy_88
 
OBJ_id_smime_mod
,7L

	)

752 
	#SN_id_smime_mod_ës_eSigPﬁicy_97
 "id-smime-mod-ës-eSigPﬁicy-97"

	)

753 
	#NID_id_smime_mod_ës_eSigPﬁicy_97
 203

	)

754 
	#OBJ_id_smime_mod_ës_eSigPﬁicy_97
 
OBJ_id_smime_mod
,8L

	)

756 
	#SN_id_smime_˘_ª˚ùt
 "id-smime-˘-ª˚ùt"

	)

757 
	#NID_id_smime_˘_ª˚ùt
 204

	)

758 
	#OBJ_id_smime_˘_ª˚ùt
 
OBJ_id_smime_˘
,1L

	)

760 
	#SN_id_smime_˘_authD©a
 "id-smime-˘-authD©a"

	)

761 
	#NID_id_smime_˘_authD©a
 205

	)

762 
	#OBJ_id_smime_˘_authD©a
 
OBJ_id_smime_˘
,2L

	)

764 
	#SN_id_smime_˘_publishCît
 "id-smime-˘-publishCît"

	)

765 
	#NID_id_smime_˘_publishCît
 206

	)

766 
	#OBJ_id_smime_˘_publishCît
 
OBJ_id_smime_˘
,3L

	)

768 
	#SN_id_smime_˘_TSTInfo
 "id-smime-˘-TSTInfo"

	)

769 
	#NID_id_smime_˘_TSTInfo
 207

	)

770 
	#OBJ_id_smime_˘_TSTInfo
 
OBJ_id_smime_˘
,4L

	)

772 
	#SN_id_smime_˘_TDTInfo
 "id-smime-˘-TDTInfo"

	)

773 
	#NID_id_smime_˘_TDTInfo
 208

	)

774 
	#OBJ_id_smime_˘_TDTInfo
 
OBJ_id_smime_˘
,5L

	)

776 
	#SN_id_smime_˘_c⁄ã¡Info
 "id-smime-˘-c⁄ã¡Info"

	)

777 
	#NID_id_smime_˘_c⁄ã¡Info
 209

	)

778 
	#OBJ_id_smime_˘_c⁄ã¡Info
 
OBJ_id_smime_˘
,6L

	)

780 
	#SN_id_smime_˘_DVCSReque°D©a
 "id-smime-˘-DVCSReque°D©a"

	)

781 
	#NID_id_smime_˘_DVCSReque°D©a
 210

	)

782 
	#OBJ_id_smime_˘_DVCSReque°D©a
 
OBJ_id_smime_˘
,7L

	)

784 
	#SN_id_smime_˘_DVCSRe•⁄£D©a
 "id-smime-˘-DVCSRe•⁄£D©a"

	)

785 
	#NID_id_smime_˘_DVCSRe•⁄£D©a
 211

	)

786 
	#OBJ_id_smime_˘_DVCSRe•⁄£D©a
 
OBJ_id_smime_˘
,8L

	)

788 
	#SN_id_smime_Ø_ª˚ùtReque°
 "id-smime-Ø-ª˚ùtReque°"

	)

789 
	#NID_id_smime_Ø_ª˚ùtReque°
 212

	)

790 
	#OBJ_id_smime_Ø_ª˚ùtReque°
 
OBJ_id_smime_Ø
,1L

	)

792 
	#SN_id_smime_Ø_£curôyLabñ
 "id-smime-Ø-£curôyLabñ"

	)

793 
	#NID_id_smime_Ø_£curôyLabñ
 213

	)

794 
	#OBJ_id_smime_Ø_£curôyLabñ
 
OBJ_id_smime_Ø
,2L

	)

796 
	#SN_id_smime_Ø_mlEx∑ndHi°‹y
 "id-smime-Ø-mlEx∑ndHi°‹y"

	)

797 
	#NID_id_smime_Ø_mlEx∑ndHi°‹y
 214

	)

798 
	#OBJ_id_smime_Ø_mlEx∑ndHi°‹y
 
OBJ_id_smime_Ø
,3L

	)

800 
	#SN_id_smime_Ø_c⁄ã¡Höt
 "id-smime-Ø-c⁄ã¡Höt"

	)

801 
	#NID_id_smime_Ø_c⁄ã¡Höt
 215

	)

802 
	#OBJ_id_smime_Ø_c⁄ã¡Höt
 
OBJ_id_smime_Ø
,4L

	)

804 
	#SN_id_smime_Ø_msgSigDige°
 "id-smime-Ø-msgSigDige°"

	)

805 
	#NID_id_smime_Ø_msgSigDige°
 216

	)

806 
	#OBJ_id_smime_Ø_msgSigDige°
 
OBJ_id_smime_Ø
,5L

	)

808 
	#SN_id_smime_Ø_íˇpC⁄ã¡Ty≥
 "id-smime-Ø-íˇpC⁄ã¡Ty≥"

	)

809 
	#NID_id_smime_Ø_íˇpC⁄ã¡Ty≥
 217

	)

810 
	#OBJ_id_smime_Ø_íˇpC⁄ã¡Ty≥
 
OBJ_id_smime_Ø
,6L

	)

812 
	#SN_id_smime_Ø_c⁄ã¡Idítifõr
 "id-smime-Ø-c⁄ã¡Idítifõr"

	)

813 
	#NID_id_smime_Ø_c⁄ã¡Idítifõr
 218

	)

814 
	#OBJ_id_smime_Ø_c⁄ã¡Idítifõr
 
OBJ_id_smime_Ø
,7L

	)

816 
	#SN_id_smime_Ø_macVÆue
 "id-smime-Ø-macVÆue"

	)

817 
	#NID_id_smime_Ø_macVÆue
 219

	)

818 
	#OBJ_id_smime_Ø_macVÆue
 
OBJ_id_smime_Ø
,8L

	)

820 
	#SN_id_smime_Ø_equivÆítLabñs
 "id-smime-Ø-equivÆítLabñs"

	)

821 
	#NID_id_smime_Ø_equivÆítLabñs
 220

	)

822 
	#OBJ_id_smime_Ø_equivÆítLabñs
 
OBJ_id_smime_Ø
,9L

	)

824 
	#SN_id_smime_Ø_c⁄ã¡Re„ªn˚
 "id-smime-Ø-c⁄ã¡Re„ªn˚"

	)

825 
	#NID_id_smime_Ø_c⁄ã¡Re„ªn˚
 221

	)

826 
	#OBJ_id_smime_Ø_c⁄ã¡Re„ªn˚
 
OBJ_id_smime_Ø
,10L

	)

828 
	#SN_id_smime_Ø_í¸ypKeyPªf
 "id-smime-Ø-í¸ypKeyPªf"

	)

829 
	#NID_id_smime_Ø_í¸ypKeyPªf
 222

	)

830 
	#OBJ_id_smime_Ø_í¸ypKeyPªf
 
OBJ_id_smime_Ø
,11L

	)

832 
	#SN_id_smime_Ø_signögCîtifiˇã
 "id-smime-Ø-signögCîtifiˇã"

	)

833 
	#NID_id_smime_Ø_signögCîtifiˇã
 223

	)

834 
	#OBJ_id_smime_Ø_signögCîtifiˇã
 
OBJ_id_smime_Ø
,12L

	)

836 
	#SN_id_smime_Ø_smimeEn¸y±Cîts
 "id-smime-Ø-smimeEn¸y±Cîts"

	)

837 
	#NID_id_smime_Ø_smimeEn¸y±Cîts
 224

	)

838 
	#OBJ_id_smime_Ø_smimeEn¸y±Cîts
 
OBJ_id_smime_Ø
,13L

	)

840 
	#SN_id_smime_Ø_timeSèmpTokí
 "id-smime-Ø-timeSèmpTokí"

	)

841 
	#NID_id_smime_Ø_timeSèmpTokí
 225

	)

842 
	#OBJ_id_smime_Ø_timeSèmpTokí
 
OBJ_id_smime_Ø
,14L

	)

844 
	#SN_id_smime_Ø_ës_sigPﬁicyId
 "id-smime-Ø-ës-sigPﬁicyId"

	)

845 
	#NID_id_smime_Ø_ës_sigPﬁicyId
 226

	)

846 
	#OBJ_id_smime_Ø_ës_sigPﬁicyId
 
OBJ_id_smime_Ø
,15L

	)

848 
	#SN_id_smime_Ø_ës_commômítTy≥
 "id-smime-Ø-ës-commômítTy≥"

	)

849 
	#NID_id_smime_Ø_ës_commômítTy≥
 227

	)

850 
	#OBJ_id_smime_Ø_ës_commômítTy≥
 
OBJ_id_smime_Ø
,16L

	)

852 
	#SN_id_smime_Ø_ës_sig√rLoˇti⁄
 "id-smime-Ø-ës-sig√rLoˇti⁄"

	)

853 
	#NID_id_smime_Ø_ës_sig√rLoˇti⁄
 228

	)

854 
	#OBJ_id_smime_Ø_ës_sig√rLoˇti⁄
 
OBJ_id_smime_Ø
,17L

	)

856 
	#SN_id_smime_Ø_ës_sig√rAâr
 "id-smime-Ø-ës-sig√rAâr"

	)

857 
	#NID_id_smime_Ø_ës_sig√rAâr
 229

	)

858 
	#OBJ_id_smime_Ø_ës_sig√rAâr
 
OBJ_id_smime_Ø
,18L

	)

860 
	#SN_id_smime_Ø_ës_ŸhîSigCît
 "id-smime-Ø-ës-ŸhîSigCît"

	)

861 
	#NID_id_smime_Ø_ës_ŸhîSigCît
 230

	)

862 
	#OBJ_id_smime_Ø_ës_ŸhîSigCît
 
OBJ_id_smime_Ø
,19L

	)

864 
	#SN_id_smime_Ø_ës_c⁄ã¡Time°amp
 "id-smime-Ø-ës-c⁄ã¡Time°amp"

	)

865 
	#NID_id_smime_Ø_ës_c⁄ã¡Time°amp
 231

	)

866 
	#OBJ_id_smime_Ø_ës_c⁄ã¡Time°amp
 
OBJ_id_smime_Ø
,20L

	)

868 
	#SN_id_smime_Ø_ës_CîtifiˇãRefs
 "id-smime-Ø-ës-CîtifiˇãRefs"

	)

869 
	#NID_id_smime_Ø_ës_CîtifiˇãRefs
 232

	)

870 
	#OBJ_id_smime_Ø_ës_CîtifiˇãRefs
 
OBJ_id_smime_Ø
,21L

	)

872 
	#SN_id_smime_Ø_ës_Revoˇti⁄Refs
 "id-smime-Ø-ës-Revoˇti⁄Refs"

	)

873 
	#NID_id_smime_Ø_ës_Revoˇti⁄Refs
 233

	)

874 
	#OBJ_id_smime_Ø_ës_Revoˇti⁄Refs
 
OBJ_id_smime_Ø
,22L

	)

876 
	#SN_id_smime_Ø_ës_˚πVÆues
 "id-smime-Ø-ës-˚πVÆues"

	)

877 
	#NID_id_smime_Ø_ës_˚πVÆues
 234

	)

878 
	#OBJ_id_smime_Ø_ës_˚πVÆues
 
OBJ_id_smime_Ø
,23L

	)

880 
	#SN_id_smime_Ø_ës_ªvoˇti⁄VÆues
 "id-smime-Ø-ës-ªvoˇti⁄VÆues"

	)

881 
	#NID_id_smime_Ø_ës_ªvoˇti⁄VÆues
 235

	)

882 
	#OBJ_id_smime_Ø_ës_ªvoˇti⁄VÆues
 
OBJ_id_smime_Ø
,24L

	)

884 
	#SN_id_smime_Ø_ës_escTimeSèmp
 "id-smime-Ø-ës-escTimeSèmp"

	)

885 
	#NID_id_smime_Ø_ës_escTimeSèmp
 236

	)

886 
	#OBJ_id_smime_Ø_ës_escTimeSèmp
 
OBJ_id_smime_Ø
,25L

	)

888 
	#SN_id_smime_Ø_ës_˚πCRLTime°amp
 "id-smime-Ø-ës-˚πCRLTime°amp"

	)

889 
	#NID_id_smime_Ø_ës_˚πCRLTime°amp
 237

	)

890 
	#OBJ_id_smime_Ø_ës_˚πCRLTime°amp
 
OBJ_id_smime_Ø
,26L

	)

892 
	#SN_id_smime_Ø_ës_¨chiveTimeSèmp
 "id-smime-Ø-ës-¨chiveTimeSèmp"

	)

893 
	#NID_id_smime_Ø_ës_¨chiveTimeSèmp
 238

	)

894 
	#OBJ_id_smime_Ø_ës_¨chiveTimeSèmp
 
OBJ_id_smime_Ø
,27L

	)

896 
	#SN_id_smime_Ø_sig«tuªTy≥
 "id-smime-Ø-sig«tuªTy≥"

	)

897 
	#NID_id_smime_Ø_sig«tuªTy≥
 239

	)

898 
	#OBJ_id_smime_Ø_sig«tuªTy≥
 
OBJ_id_smime_Ø
,28L

	)

900 
	#SN_id_smime_Ø_dvcs_dvc
 "id-smime-Ø-dvcs-dvc"

	)

901 
	#NID_id_smime_Ø_dvcs_dvc
 240

	)

902 
	#OBJ_id_smime_Ø_dvcs_dvc
 
OBJ_id_smime_Ø
,29L

	)

904 
	#SN_id_smime_Æg_ESDHwôh3DES
 "id-smime-Æg-ESDHwôh3DES"

	)

905 
	#NID_id_smime_Æg_ESDHwôh3DES
 241

	)

906 
	#OBJ_id_smime_Æg_ESDHwôh3DES
 
OBJ_id_smime_Æg
,1L

	)

908 
	#SN_id_smime_Æg_ESDHwôhRC2
 "id-smime-Æg-ESDHwôhRC2"

	)

909 
	#NID_id_smime_Æg_ESDHwôhRC2
 242

	)

910 
	#OBJ_id_smime_Æg_ESDHwôhRC2
 
OBJ_id_smime_Æg
,2L

	)

912 
	#SN_id_smime_Æg_3DESwøp
 "id-smime-Æg-3DESwøp"

	)

913 
	#NID_id_smime_Æg_3DESwøp
 243

	)

914 
	#OBJ_id_smime_Æg_3DESwøp
 
OBJ_id_smime_Æg
,3L

	)

916 
	#SN_id_smime_Æg_RC2wøp
 "id-smime-Æg-RC2wøp"

	)

917 
	#NID_id_smime_Æg_RC2wøp
 244

	)

918 
	#OBJ_id_smime_Æg_RC2wøp
 
OBJ_id_smime_Æg
,4L

	)

920 
	#SN_id_smime_Æg_ESDH
 "id-smime-Æg-ESDH"

	)

921 
	#NID_id_smime_Æg_ESDH
 245

	)

922 
	#OBJ_id_smime_Æg_ESDH
 
OBJ_id_smime_Æg
,5L

	)

924 
	#SN_id_smime_Æg_CMS3DESwøp
 "id-smime-Æg-CMS3DESwøp"

	)

925 
	#NID_id_smime_Æg_CMS3DESwøp
 246

	)

926 
	#OBJ_id_smime_Æg_CMS3DESwøp
 
OBJ_id_smime_Æg
,6L

	)

928 
	#SN_id_smime_Æg_CMSRC2wøp
 "id-smime-Æg-CMSRC2wøp"

	)

929 
	#NID_id_smime_Æg_CMSRC2wøp
 247

	)

930 
	#OBJ_id_smime_Æg_CMSRC2wøp
 
OBJ_id_smime_Æg
,7L

	)

932 
	#SN_id_smime_cd_ld≠
 "id-smime-cd-ld≠"

	)

933 
	#NID_id_smime_cd_ld≠
 248

	)

934 
	#OBJ_id_smime_cd_ld≠
 
OBJ_id_smime_cd
,1L

	)

936 
	#SN_id_smime_•q_ës_sqt_uri
 "id-smime-•q-ës-sqt-uri"

	)

937 
	#NID_id_smime_•q_ës_sqt_uri
 249

	)

938 
	#OBJ_id_smime_•q_ës_sqt_uri
 
OBJ_id_smime_•q
,1L

	)

940 
	#SN_id_smime_•q_ës_sqt_unŸi˚
 "id-smime-•q-ës-sqt-unŸi˚"

	)

941 
	#NID_id_smime_•q_ës_sqt_unŸi˚
 250

	)

942 
	#OBJ_id_smime_•q_ës_sqt_unŸi˚
 
OBJ_id_smime_•q
,2L

	)

944 
	#SN_id_smime_˘i_ës_¥oofOfOrigö
 "id-smime-˘i-ës-¥oofOfOrigö"

	)

945 
	#NID_id_smime_˘i_ës_¥oofOfOrigö
 251

	)

946 
	#OBJ_id_smime_˘i_ës_¥oofOfOrigö
 
OBJ_id_smime_˘i
,1L

	)

948 
	#SN_id_smime_˘i_ës_¥oofOfRe˚ùt
 "id-smime-˘i-ës-¥oofOfRe˚ùt"

	)

949 
	#NID_id_smime_˘i_ës_¥oofOfRe˚ùt
 252

	)

950 
	#OBJ_id_smime_˘i_ës_¥oofOfRe˚ùt
 
OBJ_id_smime_˘i
,2L

	)

952 
	#SN_id_smime_˘i_ës_¥oofOfDñivîy
 "id-smime-˘i-ës-¥oofOfDñivîy"

	)

953 
	#NID_id_smime_˘i_ës_¥oofOfDñivîy
 253

	)

954 
	#OBJ_id_smime_˘i_ës_¥oofOfDñivîy
 
OBJ_id_smime_˘i
,3L

	)

956 
	#SN_id_smime_˘i_ës_¥oofOfSídî
 "id-smime-˘i-ës-¥oofOfSídî"

	)

957 
	#NID_id_smime_˘i_ës_¥oofOfSídî
 254

	)

958 
	#OBJ_id_smime_˘i_ës_¥oofOfSídî
 
OBJ_id_smime_˘i
,4L

	)

960 
	#SN_id_smime_˘i_ës_¥oofOfAµrovÆ
 "id-smime-˘i-ës-¥oofOfAµrovÆ"

	)

961 
	#NID_id_smime_˘i_ës_¥oofOfAµrovÆ
 255

	)

962 
	#OBJ_id_smime_˘i_ës_¥oofOfAµrovÆ
 
OBJ_id_smime_˘i
,5L

	)

964 
	#SN_id_smime_˘i_ës_¥oofOfCª©i⁄
 "id-smime-˘i-ës-¥oofOfCª©i⁄"

	)

965 
	#NID_id_smime_˘i_ës_¥oofOfCª©i⁄
 256

	)

966 
	#OBJ_id_smime_˘i_ës_¥oofOfCª©i⁄
 
OBJ_id_smime_˘i
,6L

	)

968 
	#LN_‰õndlyName
 "‰õndlyName"

	)

969 
	#NID_‰õndlyName
 156

	)

970 
	#OBJ_‰õndlyName
 
OBJ_pkcs9
,20L

	)

972 
	#LN_loˇlKeyID
 "loˇlKeyID"

	)

973 
	#NID_loˇlKeyID
 157

	)

974 
	#OBJ_loˇlKeyID
 
OBJ_pkcs9
,21L

	)

976 
	#SN_ms_c•_«me
 "CSPName"

	)

977 
	#LN_ms_c•_«me
 "Mi¸oso· CSP Name"

	)

978 
	#NID_ms_c•_«me
 417

	)

979 
	#OBJ_ms_c•_«me
 1L,3L,6L,1L,4L,1L,311L,17L,1L

	)

981 
	#OBJ_˚πTy≥s
 
OBJ_pkcs9
,22L

	)

983 
	#LN_x509Cîtifiˇã
 "x509Cîtifiˇã"

	)

984 
	#NID_x509Cîtifiˇã
 158

	)

985 
	#OBJ_x509Cîtifiˇã
 
OBJ_˚πTy≥s
,1L

	)

987 
	#LN_sdsiCîtifiˇã
 "sdsiCîtifiˇã"

	)

988 
	#NID_sdsiCîtifiˇã
 159

	)

989 
	#OBJ_sdsiCîtifiˇã
 
OBJ_˚πTy≥s
,2L

	)

991 
	#OBJ_¸lTy≥s
 
OBJ_pkcs9
,23L

	)

993 
	#LN_x509Cæ
 "x509Cæ"

	)

994 
	#NID_x509Cæ
 160

	)

995 
	#OBJ_x509Cæ
 
OBJ_¸lTy≥s
,1L

	)

997 
	#OBJ_pkcs12
 
OBJ_pkcs
,12L

	)

999 
	#OBJ_pkcs12_pbeids
 
OBJ_pkcs12
,1L

	)

1001 
	#SN_pbe_WôhSHA1And128BôRC4
 "PBE-SHA1-RC4-128"

	)

1002 
	#LN_pbe_WôhSHA1And128BôRC4
 "pbeWôhSHA1And128BôRC4"

	)

1003 
	#NID_pbe_WôhSHA1And128BôRC4
 144

	)

1004 
	#OBJ_pbe_WôhSHA1And128BôRC4
 
OBJ_pkcs12_pbeids
,1L

	)

1006 
	#SN_pbe_WôhSHA1And40BôRC4
 "PBE-SHA1-RC4-40"

	)

1007 
	#LN_pbe_WôhSHA1And40BôRC4
 "pbeWôhSHA1And40BôRC4"

	)

1008 
	#NID_pbe_WôhSHA1And40BôRC4
 145

	)

1009 
	#OBJ_pbe_WôhSHA1And40BôRC4
 
OBJ_pkcs12_pbeids
,2L

	)

1011 
	#SN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "PBE-SHA1-3DES"

	)

1012 
	#LN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "pbeWôhSHA1And3-KeyTrùÀDES-CBC"

	)

1013 
	#NID_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 146

	)

1014 
	#OBJ_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
,3L

	)

1016 
	#SN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "PBE-SHA1-2DES"

	)

1017 
	#LN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "pbeWôhSHA1And2-KeyTrùÀDES-CBC"

	)

1018 
	#NID_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 147

	)

1019 
	#OBJ_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
,4L

	)

1021 
	#SN_pbe_WôhSHA1And128BôRC2_CBC
 "PBE-SHA1-RC2-128"

	)

1022 
	#LN_pbe_WôhSHA1And128BôRC2_CBC
 "pbeWôhSHA1And128BôRC2-CBC"

	)

1023 
	#NID_pbe_WôhSHA1And128BôRC2_CBC
 148

	)

1024 
	#OBJ_pbe_WôhSHA1And128BôRC2_CBC
 
OBJ_pkcs12_pbeids
,5L

	)

1026 
	#SN_pbe_WôhSHA1And40BôRC2_CBC
 "PBE-SHA1-RC2-40"

	)

1027 
	#LN_pbe_WôhSHA1And40BôRC2_CBC
 "pbeWôhSHA1And40BôRC2-CBC"

	)

1028 
	#NID_pbe_WôhSHA1And40BôRC2_CBC
 149

	)

1029 
	#OBJ_pbe_WôhSHA1And40BôRC2_CBC
 
OBJ_pkcs12_pbeids
,6L

	)

1031 
	#OBJ_pkcs12_Vîsi⁄1
 
OBJ_pkcs12
,10L

	)

1033 
	#OBJ_pkcs12_BagIds
 
OBJ_pkcs12_Vîsi⁄1
,1L

	)

1035 
	#LN_keyBag
 "keyBag"

	)

1036 
	#NID_keyBag
 150

	)

1037 
	#OBJ_keyBag
 
OBJ_pkcs12_BagIds
,1L

	)

1039 
	#LN_pkcs8ShroudedKeyBag
 "pkcs8ShroudedKeyBag"

	)

1040 
	#NID_pkcs8ShroudedKeyBag
 151

	)

1041 
	#OBJ_pkcs8ShroudedKeyBag
 
OBJ_pkcs12_BagIds
,2L

	)

1043 
	#LN_˚πBag
 "˚πBag"

	)

1044 
	#NID_˚πBag
 152

	)

1045 
	#OBJ_˚πBag
 
OBJ_pkcs12_BagIds
,3L

	)

1047 
	#LN_¸lBag
 "¸lBag"

	)

1048 
	#NID_¸lBag
 153

	)

1049 
	#OBJ_¸lBag
 
OBJ_pkcs12_BagIds
,4L

	)

1051 
	#LN_£¸ëBag
 "£¸ëBag"

	)

1052 
	#NID_£¸ëBag
 154

	)

1053 
	#OBJ_£¸ëBag
 
OBJ_pkcs12_BagIds
,5L

	)

1055 
	#LN_ß„C⁄ã¡sBag
 "ß„C⁄ã¡sBag"

	)

1056 
	#NID_ß„C⁄ã¡sBag
 155

	)

1057 
	#OBJ_ß„C⁄ã¡sBag
 
OBJ_pkcs12_BagIds
,6L

	)

1059 
	#SN_md2
 "MD2"

	)

1060 
	#LN_md2
 "md2"

	)

1061 
	#NID_md2
 3

	)

1062 
	#OBJ_md2
 
OBJ_rßdsi
,2L,2L

	)

1064 
	#SN_md4
 "MD4"

	)

1065 
	#LN_md4
 "md4"

	)

1066 
	#NID_md4
 257

	)

1067 
	#OBJ_md4
 
OBJ_rßdsi
,2L,4L

	)

1069 
	#SN_md5
 "MD5"

	)

1070 
	#LN_md5
 "md5"

	)

1071 
	#NID_md5
 4

	)

1072 
	#OBJ_md5
 
OBJ_rßdsi
,2L,5L

	)

1074 
	#SN_md5_sha1
 "MD5-SHA1"

	)

1075 
	#LN_md5_sha1
 "md5-sha1"

	)

1076 
	#NID_md5_sha1
 114

	)

1078 
	#LN_hmacWôhSHA1
 "hmacWôhSHA1"

	)

1079 
	#NID_hmacWôhSHA1
 163

	)

1080 
	#OBJ_hmacWôhSHA1
 
OBJ_rßdsi
,2L,7L

	)

1082 
	#SN_rc2_cbc
 "RC2-CBC"

	)

1083 
	#LN_rc2_cbc
 "rc2-cbc"

	)

1084 
	#NID_rc2_cbc
 37

	)

1085 
	#OBJ_rc2_cbc
 
OBJ_rßdsi
,3L,2L

	)

1087 
	#SN_rc2_ecb
 "RC2-ECB"

	)

1088 
	#LN_rc2_ecb
 "rc2-ecb"

	)

1089 
	#NID_rc2_ecb
 38

	)

1091 
	#SN_rc2_cfb64
 "RC2-CFB"

	)

1092 
	#LN_rc2_cfb64
 "rc2-cfb"

	)

1093 
	#NID_rc2_cfb64
 39

	)

1095 
	#SN_rc2_ofb64
 "RC2-OFB"

	)

1096 
	#LN_rc2_ofb64
 "rc2-ofb"

	)

1097 
	#NID_rc2_ofb64
 40

	)

1099 
	#SN_rc2_40_cbc
 "RC2-40-CBC"

	)

1100 
	#LN_rc2_40_cbc
 "rc2-40-cbc"

	)

1101 
	#NID_rc2_40_cbc
 98

	)

1103 
	#SN_rc2_64_cbc
 "RC2-64-CBC"

	)

1104 
	#LN_rc2_64_cbc
 "rc2-64-cbc"

	)

1105 
	#NID_rc2_64_cbc
 166

	)

1107 
	#SN_rc4
 "RC4"

	)

1108 
	#LN_rc4
 "rc4"

	)

1109 
	#NID_rc4
 5

	)

1110 
	#OBJ_rc4
 
OBJ_rßdsi
,3L,4L

	)

1112 
	#SN_rc4_40
 "RC4-40"

	)

1113 
	#LN_rc4_40
 "rc4-40"

	)

1114 
	#NID_rc4_40
 97

	)

1116 
	#SN_des_ede3_cbc
 "DES-EDE3-CBC"

	)

1117 
	#LN_des_ede3_cbc
 "des-ede3-cbc"

	)

1118 
	#NID_des_ede3_cbc
 44

	)

1119 
	#OBJ_des_ede3_cbc
 
OBJ_rßdsi
,3L,7L

	)

1121 
	#SN_rc5_cbc
 "RC5-CBC"

	)

1122 
	#LN_rc5_cbc
 "rc5-cbc"

	)

1123 
	#NID_rc5_cbc
 120

	)

1124 
	#OBJ_rc5_cbc
 
OBJ_rßdsi
,3L,8L

	)

1126 
	#SN_rc5_ecb
 "RC5-ECB"

	)

1127 
	#LN_rc5_ecb
 "rc5-ecb"

	)

1128 
	#NID_rc5_ecb
 121

	)

1130 
	#SN_rc5_cfb64
 "RC5-CFB"

	)

1131 
	#LN_rc5_cfb64
 "rc5-cfb"

	)

1132 
	#NID_rc5_cfb64
 122

	)

1134 
	#SN_rc5_ofb64
 "RC5-OFB"

	)

1135 
	#LN_rc5_ofb64
 "rc5-ofb"

	)

1136 
	#NID_rc5_ofb64
 123

	)

1138 
	#SN_ms_ext_ªq
 "msExtReq"

	)

1139 
	#LN_ms_ext_ªq
 "Mi¸oso· Exãnsi⁄ Reque°"

	)

1140 
	#NID_ms_ext_ªq
 171

	)

1141 
	#OBJ_ms_ext_ªq
 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L

	)

1143 
	#SN_ms_code_öd
 "msCodeInd"

	)

1144 
	#LN_ms_code_öd
 "Mi¸oso· IndividuÆ CodêSignög"

	)

1145 
	#NID_ms_code_öd
 134

	)

1146 
	#OBJ_ms_code_öd
 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L

	)

1148 
	#SN_ms_code_com
 "msCodeCom"

	)

1149 
	#LN_ms_code_com
 "Mi¸oso· Commîcü»CodêSignög"

	)

1150 
	#NID_ms_code_com
 135

	)

1151 
	#OBJ_ms_code_com
 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L

	)

1153 
	#SN_ms_˘l_sign
 "msCTLSign"

	)

1154 
	#LN_ms_˘l_sign
 "Mi¸oso· Tru° Li° Signög"

	)

1155 
	#NID_ms_˘l_sign
 136

	)

1156 
	#OBJ_ms_˘l_sign
 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L

	)

1158 
	#SN_ms_sgc
 "msSGC"

	)

1159 
	#LN_ms_sgc
 "Mi¸oso· Sîvî G©ed Cry±o"

	)

1160 
	#NID_ms_sgc
 137

	)

1161 
	#OBJ_ms_sgc
 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L

	)

1163 
	#SN_ms_efs
 "msEFS"

	)

1164 
	#LN_ms_efs
 "Mi¸oso· En¸y±ed FûêSy°em"

	)

1165 
	#NID_ms_efs
 138

	)

1166 
	#OBJ_ms_efs
 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L

	)

1168 
	#SN_ms_sm¨tˇrd_logö
 "msSm¨tˇrdLogö"

	)

1169 
	#LN_ms_sm¨tˇrd_logö
 "Mi¸oso· Sm¨tˇrdlogö"

	)

1170 
	#NID_ms_sm¨tˇrd_logö
 648

	)

1171 
	#OBJ_ms_sm¨tˇrd_logö
 1L,3L,6L,1L,4L,1L,311L,20L,2L,2L

	)

1173 
	#SN_ms_u≤
 "msUPN"

	)

1174 
	#LN_ms_u≤
 "Mi¸oso· Univîß»PröcùÆ Name"

	)

1175 
	#NID_ms_u≤
 649

	)

1176 
	#OBJ_ms_u≤
 1L,3L,6L,1L,4L,1L,311L,20L,2L,3L

	)

1178 
	#SN_idó_cbc
 "IDEA-CBC"

	)

1179 
	#LN_idó_cbc
 "idó-cbc"

	)

1180 
	#NID_idó_cbc
 34

	)

1181 
	#OBJ_idó_cbc
 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L

	)

1183 
	#SN_idó_ecb
 "IDEA-ECB"

	)

1184 
	#LN_idó_ecb
 "idó-ecb"

	)

1185 
	#NID_idó_ecb
 36

	)

1187 
	#SN_idó_cfb64
 "IDEA-CFB"

	)

1188 
	#LN_idó_cfb64
 "idó-cfb"

	)

1189 
	#NID_idó_cfb64
 35

	)

1191 
	#SN_idó_ofb64
 "IDEA-OFB"

	)

1192 
	#LN_idó_ofb64
 "idó-ofb"

	)

1193 
	#NID_idó_ofb64
 46

	)

1195 
	#SN_bf_cbc
 "BF-CBC"

	)

1196 
	#LN_bf_cbc
 "bf-cbc"

	)

1197 
	#NID_bf_cbc
 91

	)

1198 
	#OBJ_bf_cbc
 1L,3L,6L,1L,4L,1L,3029L,1L,2L

	)

1200 
	#SN_bf_ecb
 "BF-ECB"

	)

1201 
	#LN_bf_ecb
 "bf-ecb"

	)

1202 
	#NID_bf_ecb
 92

	)

1204 
	#SN_bf_cfb64
 "BF-CFB"

	)

1205 
	#LN_bf_cfb64
 "bf-cfb"

	)

1206 
	#NID_bf_cfb64
 93

	)

1208 
	#SN_bf_ofb64
 "BF-OFB"

	)

1209 
	#LN_bf_ofb64
 "bf-ofb"

	)

1210 
	#NID_bf_ofb64
 94

	)

1212 
	#SN_id_pkix
 "PKIX"

	)

1213 
	#NID_id_pkix
 127

	)

1214 
	#OBJ_id_pkix
 1L,3L,6L,1L,5L,5L,7L

	)

1216 
	#SN_id_pkix_mod
 "id-pkix-mod"

	)

1217 
	#NID_id_pkix_mod
 258

	)

1218 
	#OBJ_id_pkix_mod
 
OBJ_id_pkix
,0L

	)

1220 
	#SN_id_≥
 "id-≥"

	)

1221 
	#NID_id_≥
 175

	)

1222 
	#OBJ_id_≥
 
OBJ_id_pkix
,1L

	)

1224 
	#SN_id_qt
 "id-qt"

	)

1225 
	#NID_id_qt
 259

	)

1226 
	#OBJ_id_qt
 
OBJ_id_pkix
,2L

	)

1228 
	#SN_id_kp
 "id-kp"

	)

1229 
	#NID_id_kp
 128

	)

1230 
	#OBJ_id_kp
 
OBJ_id_pkix
,3L

	)

1232 
	#SN_id_ô
 "id-ô"

	)

1233 
	#NID_id_ô
 260

	)

1234 
	#OBJ_id_ô
 
OBJ_id_pkix
,4L

	)

1236 
	#SN_id_pkù
 "id-pkù"

	)

1237 
	#NID_id_pkù
 261

	)

1238 
	#OBJ_id_pkù
 
OBJ_id_pkix
,5L

	)

1240 
	#SN_id_Æg
 "id-Æg"

	)

1241 
	#NID_id_Æg
 262

	)

1242 
	#OBJ_id_Æg
 
OBJ_id_pkix
,6L

	)

1244 
	#SN_id_cmc
 "id-cmc"

	)

1245 
	#NID_id_cmc
 263

	)

1246 
	#OBJ_id_cmc
 
OBJ_id_pkix
,7L

	)

1248 
	#SN_id_⁄
 "id-⁄"

	)

1249 
	#NID_id_⁄
 264

	)

1250 
	#OBJ_id_⁄
 
OBJ_id_pkix
,8L

	)

1252 
	#SN_id_pda
 "id-pda"

	)

1253 
	#NID_id_pda
 265

	)

1254 
	#OBJ_id_pda
 
OBJ_id_pkix
,9L

	)

1256 
	#SN_id_aˇ
 "id-aˇ"

	)

1257 
	#NID_id_aˇ
 266

	)

1258 
	#OBJ_id_aˇ
 
OBJ_id_pkix
,10L

	)

1260 
	#SN_id_qcs
 "id-qcs"

	)

1261 
	#NID_id_qcs
 267

	)

1262 
	#OBJ_id_qcs
 
OBJ_id_pkix
,11L

	)

1264 
	#SN_id_c˘
 "id-c˘"

	)

1265 
	#NID_id_c˘
 268

	)

1266 
	#OBJ_id_c˘
 
OBJ_id_pkix
,12L

	)

1268 
	#SN_id_µl
 "id-µl"

	)

1269 
	#NID_id_µl
 662

	)

1270 
	#OBJ_id_µl
 
OBJ_id_pkix
,21L

	)

1272 
	#SN_id_ad
 "id-ad"

	)

1273 
	#NID_id_ad
 176

	)

1274 
	#OBJ_id_ad
 
OBJ_id_pkix
,48L

	)

1276 
	#SN_id_pkix1_ex∂icô_88
 "id-pkix1-ex∂icô-88"

	)

1277 
	#NID_id_pkix1_ex∂icô_88
 269

	)

1278 
	#OBJ_id_pkix1_ex∂icô_88
 
OBJ_id_pkix_mod
,1L

	)

1280 
	#SN_id_pkix1_im∂icô_88
 "id-pkix1-im∂icô-88"

	)

1281 
	#NID_id_pkix1_im∂icô_88
 270

	)

1282 
	#OBJ_id_pkix1_im∂icô_88
 
OBJ_id_pkix_mod
,2L

	)

1284 
	#SN_id_pkix1_ex∂icô_93
 "id-pkix1-ex∂icô-93"

	)

1285 
	#NID_id_pkix1_ex∂icô_93
 271

	)

1286 
	#OBJ_id_pkix1_ex∂icô_93
 
OBJ_id_pkix_mod
,3L

	)

1288 
	#SN_id_pkix1_im∂icô_93
 "id-pkix1-im∂icô-93"

	)

1289 
	#NID_id_pkix1_im∂icô_93
 272

	)

1290 
	#OBJ_id_pkix1_im∂icô_93
 
OBJ_id_pkix_mod
,4L

	)

1292 
	#SN_id_mod_¸mf
 "id-mod-¸mf"

	)

1293 
	#NID_id_mod_¸mf
 273

	)

1294 
	#OBJ_id_mod_¸mf
 
OBJ_id_pkix_mod
,5L

	)

1296 
	#SN_id_mod_cmc
 "id-mod-cmc"

	)

1297 
	#NID_id_mod_cmc
 274

	)

1298 
	#OBJ_id_mod_cmc
 
OBJ_id_pkix_mod
,6L

	)

1300 
	#SN_id_mod_kó_¥ofûe_88
 "id-mod-kó-¥ofûe-88"

	)

1301 
	#NID_id_mod_kó_¥ofûe_88
 275

	)

1302 
	#OBJ_id_mod_kó_¥ofûe_88
 
OBJ_id_pkix_mod
,7L

	)

1304 
	#SN_id_mod_kó_¥ofûe_93
 "id-mod-kó-¥ofûe-93"

	)

1305 
	#NID_id_mod_kó_¥ofûe_93
 276

	)

1306 
	#OBJ_id_mod_kó_¥ofûe_93
 
OBJ_id_pkix_mod
,8L

	)

1308 
	#SN_id_mod_cmp
 "id-mod-cmp"

	)

1309 
	#NID_id_mod_cmp
 277

	)

1310 
	#OBJ_id_mod_cmp
 
OBJ_id_pkix_mod
,9L

	)

1312 
	#SN_id_mod_quÆifõd_˚π_88
 "id-mod-quÆifõd-˚π-88"

	)

1313 
	#NID_id_mod_quÆifõd_˚π_88
 278

	)

1314 
	#OBJ_id_mod_quÆifõd_˚π_88
 
OBJ_id_pkix_mod
,10L

	)

1316 
	#SN_id_mod_quÆifõd_˚π_93
 "id-mod-quÆifõd-˚π-93"

	)

1317 
	#NID_id_mod_quÆifõd_˚π_93
 279

	)

1318 
	#OBJ_id_mod_quÆifõd_˚π_93
 
OBJ_id_pkix_mod
,11L

	)

1320 
	#SN_id_mod_©åibuã_˚π
 "id-mod-©åibuã-˚π"

	)

1321 
	#NID_id_mod_©åibuã_˚π
 280

	)

1322 
	#OBJ_id_mod_©åibuã_˚π
 
OBJ_id_pkix_mod
,12L

	)

1324 
	#SN_id_mod_time°amp_¥Ÿocﬁ
 "id-mod-time°amp-¥Ÿocﬁ"

	)

1325 
	#NID_id_mod_time°amp_¥Ÿocﬁ
 281

	)

1326 
	#OBJ_id_mod_time°amp_¥Ÿocﬁ
 
OBJ_id_pkix_mod
,13L

	)

1328 
	#SN_id_mod_oc•
 "id-mod-oc•"

	)

1329 
	#NID_id_mod_oc•
 282

	)

1330 
	#OBJ_id_mod_oc•
 
OBJ_id_pkix_mod
,14L

	)

1332 
	#SN_id_mod_dvcs
 "id-mod-dvcs"

	)

1333 
	#NID_id_mod_dvcs
 283

	)

1334 
	#OBJ_id_mod_dvcs
 
OBJ_id_pkix_mod
,15L

	)

1336 
	#SN_id_mod_cmp2000
 "id-mod-cmp2000"

	)

1337 
	#NID_id_mod_cmp2000
 284

	)

1338 
	#OBJ_id_mod_cmp2000
 
OBJ_id_pkix_mod
,16L

	)

1340 
	#SN_öfo_ac˚ss
 "auth‹ôyInfoAc˚ss"

	)

1341 
	#LN_öfo_ac˚ss
 "Auth‹ôy Inf‹m©i⁄ Ac˚ss"

	)

1342 
	#NID_öfo_ac˚ss
 177

	)

1343 
	#OBJ_öfo_ac˚ss
 
OBJ_id_≥
,1L

	)

1345 
	#SN_biomëricInfo
 "biomëricInfo"

	)

1346 
	#LN_biomëricInfo
 "Biomëri¯Info"

	)

1347 
	#NID_biomëricInfo
 285

	)

1348 
	#OBJ_biomëricInfo
 
OBJ_id_≥
,2L

	)

1350 
	#SN_qcSèãmíts
 "qcSèãmíts"

	)

1351 
	#NID_qcSèãmíts
 286

	)

1352 
	#OBJ_qcSèãmíts
 
OBJ_id_≥
,3L

	)

1354 
	#SN_ac_audôE¡ôy
 "ac-audôE¡ôy"

	)

1355 
	#NID_ac_audôE¡ôy
 287

	)

1356 
	#OBJ_ac_audôE¡ôy
 
OBJ_id_≥
,4L

	)

1358 
	#SN_ac_èrgëög
 "ac-èrgëög"

	)

1359 
	#NID_ac_èrgëög
 288

	)

1360 
	#OBJ_ac_èrgëög
 
OBJ_id_≥
,5L

	)

1362 
	#SN_ØC⁄åﬁs
 "ØC⁄åﬁs"

	)

1363 
	#NID_ØC⁄åﬁs
 289

	)

1364 
	#OBJ_ØC⁄åﬁs
 
OBJ_id_≥
,6L

	)

1366 
	#SN_sbgp_ùAddrBlock
 "sbgp-ùAddrBlock"

	)

1367 
	#NID_sbgp_ùAddrBlock
 290

	)

1368 
	#OBJ_sbgp_ùAddrBlock
 
OBJ_id_≥
,7L

	)

1370 
	#SN_sbgp_aut⁄omousSysNum
 "sbgp-aut⁄omousSysNum"

	)

1371 
	#NID_sbgp_aut⁄omousSysNum
 291

	)

1372 
	#OBJ_sbgp_aut⁄omousSysNum
 
OBJ_id_≥
,8L

	)

1374 
	#SN_sbgp_rouãrIdítifõr
 "sbgp-rouãrIdítifõr"

	)

1375 
	#NID_sbgp_rouãrIdítifõr
 292

	)

1376 
	#OBJ_sbgp_rouãrIdítifõr
 
OBJ_id_≥
,9L

	)

1378 
	#SN_ac_¥oxyög
 "ac-¥oxyög"

	)

1379 
	#NID_ac_¥oxyög
 397

	)

1380 
	#OBJ_ac_¥oxyög
 
OBJ_id_≥
,10L

	)

1382 
	#SN_söfo_ac˚ss
 "subje˘InfoAc˚ss"

	)

1383 
	#LN_söfo_ac˚ss
 "Subje˘ Inf‹m©i⁄ Ac˚ss"

	)

1384 
	#NID_söfo_ac˚ss
 398

	)

1385 
	#OBJ_söfo_ac˚ss
 
OBJ_id_≥
,11L

	)

1387 
	#SN_¥oxyCîtInfo
 "¥oxyCîtInfo"

	)

1388 
	#LN_¥oxyCîtInfo
 "Proxy Cîtifiˇã Inf‹m©i⁄"

	)

1389 
	#NID_¥oxyCîtInfo
 663

	)

1390 
	#OBJ_¥oxyCîtInfo
 
OBJ_id_≥
,14L

	)

1392 
	#SN_id_qt_˝s
 "id-qt-˝s"

	)

1393 
	#LN_id_qt_˝s
 "Pﬁicy QuÆifõ∏CPS"

	)

1394 
	#NID_id_qt_˝s
 164

	)

1395 
	#OBJ_id_qt_˝s
 
OBJ_id_qt
,1L

	)

1397 
	#SN_id_qt_unŸi˚
 "id-qt-unŸi˚"

	)

1398 
	#LN_id_qt_unŸi˚
 "Pﬁicy QuÆifõ∏U£∏NŸi˚"

	)

1399 
	#NID_id_qt_unŸi˚
 165

	)

1400 
	#OBJ_id_qt_unŸi˚
 
OBJ_id_qt
,2L

	)

1402 
	#SN_ãxtNŸi˚
 "ãxtNŸi˚"

	)

1403 
	#NID_ãxtNŸi˚
 293

	)

1404 
	#OBJ_ãxtNŸi˚
 
OBJ_id_qt
,3L

	)

1406 
	#SN_£rvî_auth
 "£rvîAuth"

	)

1407 
	#LN_£rvî_auth
 "TLS Web Sîvî Authítiˇti⁄"

	)

1408 
	#NID_£rvî_auth
 129

	)

1409 
	#OBJ_£rvî_auth
 
OBJ_id_kp
,1L

	)

1411 
	#SN_˛õ¡_auth
 "˛õ¡Auth"

	)

1412 
	#LN_˛õ¡_auth
 "TLS Web Clõ¡ Authítiˇti⁄"

	)

1413 
	#NID_˛õ¡_auth
 130

	)

1414 
	#OBJ_˛õ¡_auth
 
OBJ_id_kp
,2L

	)

1416 
	#SN_code_sign
 "codeSignög"

	)

1417 
	#LN_code_sign
 "CodêSignög"

	)

1418 
	#NID_code_sign
 131

	)

1419 
	#OBJ_code_sign
 
OBJ_id_kp
,3L

	)

1421 
	#SN_emaû_¥Ÿe˘
 "emaûPrŸe˘i⁄"

	)

1422 
	#LN_emaû_¥Ÿe˘
 "E-maû PrŸe˘i⁄"

	)

1423 
	#NID_emaû_¥Ÿe˘
 132

	)

1424 
	#OBJ_emaû_¥Ÿe˘
 
OBJ_id_kp
,4L

	)

1426 
	#SN_ù£cEndSy°em
 "ù£cEndSy°em"

	)

1427 
	#LN_ù£cEndSy°em
 "IPSe¯End Sy°em"

	)

1428 
	#NID_ù£cEndSy°em
 294

	)

1429 
	#OBJ_ù£cEndSy°em
 
OBJ_id_kp
,5L

	)

1431 
	#SN_ù£cTu¬ñ
 "ù£cTu¬ñ"

	)

1432 
	#LN_ù£cTu¬ñ
 "IPSe¯Tu¬ñ"

	)

1433 
	#NID_ù£cTu¬ñ
 295

	)

1434 
	#OBJ_ù£cTu¬ñ
 
OBJ_id_kp
,6L

	)

1436 
	#SN_ù£cU£r
 "ù£cU£r"

	)

1437 
	#LN_ù£cU£r
 "IPSe¯U£r"

	)

1438 
	#NID_ù£cU£r
 296

	)

1439 
	#OBJ_ù£cU£r
 
OBJ_id_kp
,7L

	)

1441 
	#SN_time_°amp
 "timeSèmpög"

	)

1442 
	#LN_time_°amp
 "TimêSèmpög"

	)

1443 
	#NID_time_°amp
 133

	)

1444 
	#OBJ_time_°amp
 
OBJ_id_kp
,8L

	)

1446 
	#SN_OCSP_sign
 "OCSPSignög"

	)

1447 
	#LN_OCSP_sign
 "OCSP Signög"

	)

1448 
	#NID_OCSP_sign
 180

	)

1449 
	#OBJ_OCSP_sign
 
OBJ_id_kp
,9L

	)

1451 
	#SN_dvcs
 "DVCS"

	)

1452 
	#LN_dvcs
 "dvcs"

	)

1453 
	#NID_dvcs
 297

	)

1454 
	#OBJ_dvcs
 
OBJ_id_kp
,10L

	)

1456 
	#SN_id_ô_ˇPrŸEncCît
 "id-ô-ˇPrŸEncCît"

	)

1457 
	#NID_id_ô_ˇPrŸEncCît
 298

	)

1458 
	#OBJ_id_ô_ˇPrŸEncCît
 
OBJ_id_ô
,1L

	)

1460 
	#SN_id_ô_signKeyPaúTy≥s
 "id-ô-signKeyPaúTy≥s"

	)

1461 
	#NID_id_ô_signKeyPaúTy≥s
 299

	)

1462 
	#OBJ_id_ô_signKeyPaúTy≥s
 
OBJ_id_ô
,2L

	)

1464 
	#SN_id_ô_ícKeyPaúTy≥s
 "id-ô-ícKeyPaúTy≥s"

	)

1465 
	#NID_id_ô_ícKeyPaúTy≥s
 300

	)

1466 
	#OBJ_id_ô_ícKeyPaúTy≥s
 
OBJ_id_ô
,3L

	)

1468 
	#SN_id_ô_¥e„ºedSymmAlg
 "id-ô-¥e„ºedSymmAlg"

	)

1469 
	#NID_id_ô_¥e„ºedSymmAlg
 301

	)

1470 
	#OBJ_id_ô_¥e„ºedSymmAlg
 
OBJ_id_ô
,4L

	)

1472 
	#SN_id_ô_ˇKeyUpd©eInfo
 "id-ô-ˇKeyUpd©eInfo"

	)

1473 
	#NID_id_ô_ˇKeyUpd©eInfo
 302

	)

1474 
	#OBJ_id_ô_ˇKeyUpd©eInfo
 
OBJ_id_ô
,5L

	)

1476 
	#SN_id_ô_cuºítCRL
 "id-ô-cuºítCRL"

	)

1477 
	#NID_id_ô_cuºítCRL
 303

	)

1478 
	#OBJ_id_ô_cuºítCRL
 
OBJ_id_ô
,6L

	)

1480 
	#SN_id_ô_unsuµ‹ãdOIDs
 "id-ô-unsuµ‹ãdOIDs"

	)

1481 
	#NID_id_ô_unsuµ‹ãdOIDs
 304

	)

1482 
	#OBJ_id_ô_unsuµ‹ãdOIDs
 
OBJ_id_ô
,7L

	)

1484 
	#SN_id_ô_subs¸ùti⁄Reque°
 "id-ô-subs¸ùti⁄Reque°"

	)

1485 
	#NID_id_ô_subs¸ùti⁄Reque°
 305

	)

1486 
	#OBJ_id_ô_subs¸ùti⁄Reque°
 
OBJ_id_ô
,8L

	)

1488 
	#SN_id_ô_subs¸ùti⁄Re•⁄£
 "id-ô-subs¸ùti⁄Re•⁄£"

	)

1489 
	#NID_id_ô_subs¸ùti⁄Re•⁄£
 306

	)

1490 
	#OBJ_id_ô_subs¸ùti⁄Re•⁄£
 
OBJ_id_ô
,9L

	)

1492 
	#SN_id_ô_keyPaúP¨amReq
 "id-ô-keyPaúP¨amReq"

	)

1493 
	#NID_id_ô_keyPaúP¨amReq
 307

	)

1494 
	#OBJ_id_ô_keyPaúP¨amReq
 
OBJ_id_ô
,10L

	)

1496 
	#SN_id_ô_keyPaúP¨amRï
 "id-ô-keyPaúP¨amRï"

	)

1497 
	#NID_id_ô_keyPaúP¨amRï
 308

	)

1498 
	#OBJ_id_ô_keyPaúP¨amRï
 
OBJ_id_ô
,11L

	)

1500 
	#SN_id_ô_ªvPas•hø£
 "id-ô-ªvPas•hø£"

	)

1501 
	#NID_id_ô_ªvPas•hø£
 309

	)

1502 
	#OBJ_id_ô_ªvPas•hø£
 
OBJ_id_ô
,12L

	)

1504 
	#SN_id_ô_im∂icôC⁄fúm
 "id-ô-im∂icôC⁄fúm"

	)

1505 
	#NID_id_ô_im∂icôC⁄fúm
 310

	)

1506 
	#OBJ_id_ô_im∂icôC⁄fúm
 
OBJ_id_ô
,13L

	)

1508 
	#SN_id_ô_c⁄fúmWaôTime
 "id-ô-c⁄fúmWaôTime"

	)

1509 
	#NID_id_ô_c⁄fúmWaôTime
 311

	)

1510 
	#OBJ_id_ô_c⁄fúmWaôTime
 
OBJ_id_ô
,14L

	)

1512 
	#SN_id_ô_‹igPKIMesßge
 "id-ô-‹igPKIMesßge"

	)

1513 
	#NID_id_ô_‹igPKIMesßge
 312

	)

1514 
	#OBJ_id_ô_‹igPKIMesßge
 
OBJ_id_ô
,15L

	)

1516 
	#SN_id_ªgCål
 "id-ªgCål"

	)

1517 
	#NID_id_ªgCål
 313

	)

1518 
	#OBJ_id_ªgCål
 
OBJ_id_pkù
,1L

	)

1520 
	#SN_id_ªgInfo
 "id-ªgInfo"

	)

1521 
	#NID_id_ªgInfo
 314

	)

1522 
	#OBJ_id_ªgInfo
 
OBJ_id_pkù
,2L

	)

1524 
	#SN_id_ªgCål_ªgTokí
 "id-ªgCål-ªgTokí"

	)

1525 
	#NID_id_ªgCål_ªgTokí
 315

	)

1526 
	#OBJ_id_ªgCål_ªgTokí
 
OBJ_id_ªgCål
,1L

	)

1528 
	#SN_id_ªgCål_authítiˇt‹
 "id-ªgCål-authítiˇt‹"

	)

1529 
	#NID_id_ªgCål_authítiˇt‹
 316

	)

1530 
	#OBJ_id_ªgCål_authítiˇt‹
 
OBJ_id_ªgCål
,2L

	)

1532 
	#SN_id_ªgCål_pkiPubliˇti⁄Info
 "id-ªgCål-pkiPubliˇti⁄Info"

	)

1533 
	#NID_id_ªgCål_pkiPubliˇti⁄Info
 317

	)

1534 
	#OBJ_id_ªgCål_pkiPubliˇti⁄Info
 
OBJ_id_ªgCål
,3L

	)

1536 
	#SN_id_ªgCål_pkiArchiveO±i⁄s
 "id-ªgCål-pkiArchiveO±i⁄s"

	)

1537 
	#NID_id_ªgCål_pkiArchiveO±i⁄s
 318

	)

1538 
	#OBJ_id_ªgCål_pkiArchiveO±i⁄s
 
OBJ_id_ªgCål
,4L

	)

1540 
	#SN_id_ªgCål_ﬁdCîtID
 "id-ªgCål-ﬁdCîtID"

	)

1541 
	#NID_id_ªgCål_ﬁdCîtID
 319

	)

1542 
	#OBJ_id_ªgCål_ﬁdCîtID
 
OBJ_id_ªgCål
,5L

	)

1544 
	#SN_id_ªgCål_¥ŸocﬁEn¸Key
 "id-ªgCål-¥ŸocﬁEn¸Key"

	)

1545 
	#NID_id_ªgCål_¥ŸocﬁEn¸Key
 320

	)

1546 
	#OBJ_id_ªgCål_¥ŸocﬁEn¸Key
 
OBJ_id_ªgCål
,6L

	)

1548 
	#SN_id_ªgInfo_utf8Paús
 "id-ªgInfo-utf8Paús"

	)

1549 
	#NID_id_ªgInfo_utf8Paús
 321

	)

1550 
	#OBJ_id_ªgInfo_utf8Paús
 
OBJ_id_ªgInfo
,1L

	)

1552 
	#SN_id_ªgInfo_˚πReq
 "id-ªgInfo-˚πReq"

	)

1553 
	#NID_id_ªgInfo_˚πReq
 322

	)

1554 
	#OBJ_id_ªgInfo_˚πReq
 
OBJ_id_ªgInfo
,2L

	)

1556 
	#SN_id_Æg_des40
 "id-Æg-des40"

	)

1557 
	#NID_id_Æg_des40
 323

	)

1558 
	#OBJ_id_Æg_des40
 
OBJ_id_Æg
,1L

	)

1560 
	#SN_id_Æg_noSig«tuª
 "id-Æg-noSig«tuª"

	)

1561 
	#NID_id_Æg_noSig«tuª
 324

	)

1562 
	#OBJ_id_Æg_noSig«tuª
 
OBJ_id_Æg
,2L

	)

1564 
	#SN_id_Æg_dh_sig_hmac_sha1
 "id-Æg-dh-sig-hmac-sha1"

	)

1565 
	#NID_id_Æg_dh_sig_hmac_sha1
 325

	)

1566 
	#OBJ_id_Æg_dh_sig_hmac_sha1
 
OBJ_id_Æg
,3L

	)

1568 
	#SN_id_Æg_dh_p›
 "id-Æg-dh-p›"

	)

1569 
	#NID_id_Æg_dh_p›
 326

	)

1570 
	#OBJ_id_Æg_dh_p›
 
OBJ_id_Æg
,4L

	)

1572 
	#SN_id_cmc_°©usInfo
 "id-cmc-°©usInfo"

	)

1573 
	#NID_id_cmc_°©usInfo
 327

	)

1574 
	#OBJ_id_cmc_°©usInfo
 
OBJ_id_cmc
,1L

	)

1576 
	#SN_id_cmc_idítifiˇti⁄
 "id-cmc-idítifiˇti⁄"

	)

1577 
	#NID_id_cmc_idítifiˇti⁄
 328

	)

1578 
	#OBJ_id_cmc_idítifiˇti⁄
 
OBJ_id_cmc
,2L

	)

1580 
	#SN_id_cmc_idítôyProof
 "id-cmc-idítôyProof"

	)

1581 
	#NID_id_cmc_idítôyProof
 329

	)

1582 
	#OBJ_id_cmc_idítôyProof
 
OBJ_id_cmc
,3L

	)

1584 
	#SN_id_cmc_d©aRëu∫
 "id-cmc-d©aRëu∫"

	)

1585 
	#NID_id_cmc_d©aRëu∫
 330

	)

1586 
	#OBJ_id_cmc_d©aRëu∫
 
OBJ_id_cmc
,4L

	)

1588 
	#SN_id_cmc_å™ß˘i⁄Id
 "id-cmc-å™ß˘i⁄Id"

	)

1589 
	#NID_id_cmc_å™ß˘i⁄Id
 331

	)

1590 
	#OBJ_id_cmc_å™ß˘i⁄Id
 
OBJ_id_cmc
,5L

	)

1592 
	#SN_id_cmc_£ndîN⁄˚
 "id-cmc-£ndîN⁄˚"

	)

1593 
	#NID_id_cmc_£ndîN⁄˚
 332

	)

1594 
	#OBJ_id_cmc_£ndîN⁄˚
 
OBJ_id_cmc
,6L

	)

1596 
	#SN_id_cmc_ªcùõ¡N⁄˚
 "id-cmc-ªcùõ¡N⁄˚"

	)

1597 
	#NID_id_cmc_ªcùõ¡N⁄˚
 333

	)

1598 
	#OBJ_id_cmc_ªcùõ¡N⁄˚
 
OBJ_id_cmc
,7L

	)

1600 
	#SN_id_cmc_addExãnsi⁄s
 "id-cmc-addExãnsi⁄s"

	)

1601 
	#NID_id_cmc_addExãnsi⁄s
 334

	)

1602 
	#OBJ_id_cmc_addExãnsi⁄s
 
OBJ_id_cmc
,8L

	)

1604 
	#SN_id_cmc_í¸y±edPOP
 "id-cmc-í¸y±edPOP"

	)

1605 
	#NID_id_cmc_í¸y±edPOP
 335

	)

1606 
	#OBJ_id_cmc_í¸y±edPOP
 
OBJ_id_cmc
,9L

	)

1608 
	#SN_id_cmc_de¸y±edPOP
 "id-cmc-de¸y±edPOP"

	)

1609 
	#NID_id_cmc_de¸y±edPOP
 336

	)

1610 
	#OBJ_id_cmc_de¸y±edPOP
 
OBJ_id_cmc
,10L

	)

1612 
	#SN_id_cmc_ÃaPOPWô√ss
 "id-cmc-ÃaPOPWô√ss"

	)

1613 
	#NID_id_cmc_ÃaPOPWô√ss
 337

	)

1614 
	#OBJ_id_cmc_ÃaPOPWô√ss
 
OBJ_id_cmc
,11L

	)

1616 
	#SN_id_cmc_gëCît
 "id-cmc-gëCît"

	)

1617 
	#NID_id_cmc_gëCît
 338

	)

1618 
	#OBJ_id_cmc_gëCît
 
OBJ_id_cmc
,15L

	)

1620 
	#SN_id_cmc_gëCRL
 "id-cmc-gëCRL"

	)

1621 
	#NID_id_cmc_gëCRL
 339

	)

1622 
	#OBJ_id_cmc_gëCRL
 
OBJ_id_cmc
,16L

	)

1624 
	#SN_id_cmc_ªvokeReque°
 "id-cmc-ªvokeReque°"

	)

1625 
	#NID_id_cmc_ªvokeReque°
 340

	)

1626 
	#OBJ_id_cmc_ªvokeReque°
 
OBJ_id_cmc
,17L

	)

1628 
	#SN_id_cmc_ªgInfo
 "id-cmc-ªgInfo"

	)

1629 
	#NID_id_cmc_ªgInfo
 341

	)

1630 
	#OBJ_id_cmc_ªgInfo
 
OBJ_id_cmc
,18L

	)

1632 
	#SN_id_cmc_ª•⁄£Info
 "id-cmc-ª•⁄£Info"

	)

1633 
	#NID_id_cmc_ª•⁄£Info
 342

	)

1634 
	#OBJ_id_cmc_ª•⁄£Info
 
OBJ_id_cmc
,19L

	)

1636 
	#SN_id_cmc_quîyPídög
 "id-cmc-quîyPídög"

	)

1637 
	#NID_id_cmc_quîyPídög
 343

	)

1638 
	#OBJ_id_cmc_quîyPídög
 
OBJ_id_cmc
,21L

	)

1640 
	#SN_id_cmc_p›LökR™dom
 "id-cmc-p›LökR™dom"

	)

1641 
	#NID_id_cmc_p›LökR™dom
 344

	)

1642 
	#OBJ_id_cmc_p›LökR™dom
 
OBJ_id_cmc
,22L

	)

1644 
	#SN_id_cmc_p›LökWô√ss
 "id-cmc-p›LökWô√ss"

	)

1645 
	#NID_id_cmc_p›LökWô√ss
 345

	)

1646 
	#OBJ_id_cmc_p›LökWô√ss
 
OBJ_id_cmc
,23L

	)

1648 
	#SN_id_cmc_c⁄fúmCîtAc˚±™˚
 "id-cmc-c⁄fúmCîtAc˚±™˚"

	)

1649 
	#NID_id_cmc_c⁄fúmCîtAc˚±™˚
 346

	)

1650 
	#OBJ_id_cmc_c⁄fúmCîtAc˚±™˚
 
OBJ_id_cmc
,24L

	)

1652 
	#SN_id_⁄_≥rs⁄ÆD©a
 "id-⁄-≥rs⁄ÆD©a"

	)

1653 
	#NID_id_⁄_≥rs⁄ÆD©a
 347

	)

1654 
	#OBJ_id_⁄_≥rs⁄ÆD©a
 
OBJ_id_⁄
,1L

	)

1656 
	#SN_id_pda_d©eOfBúth
 "id-pda-d©eOfBúth"

	)

1657 
	#NID_id_pda_d©eOfBúth
 348

	)

1658 
	#OBJ_id_pda_d©eOfBúth
 
OBJ_id_pda
,1L

	)

1660 
	#SN_id_pda_∂a˚OfBúth
 "id-pda-∂a˚OfBúth"

	)

1661 
	#NID_id_pda_∂a˚OfBúth
 349

	)

1662 
	#OBJ_id_pda_∂a˚OfBúth
 
OBJ_id_pda
,2L

	)

1664 
	#SN_id_pda_gídî
 "id-pda-gídî"

	)

1665 
	#NID_id_pda_gídî
 351

	)

1666 
	#OBJ_id_pda_gídî
 
OBJ_id_pda
,3L

	)

1668 
	#SN_id_pda_cou¡ryOfCôizíshù
 "id-pda-cou¡ryOfCôizíshù"

	)

1669 
	#NID_id_pda_cou¡ryOfCôizíshù
 352

	)

1670 
	#OBJ_id_pda_cou¡ryOfCôizíshù
 
OBJ_id_pda
,4L

	)

1672 
	#SN_id_pda_cou¡ryOfResidí˚
 "id-pda-cou¡ryOfResidí˚"

	)

1673 
	#NID_id_pda_cou¡ryOfResidí˚
 353

	)

1674 
	#OBJ_id_pda_cou¡ryOfResidí˚
 
OBJ_id_pda
,5L

	)

1676 
	#SN_id_aˇ_authítiˇti⁄Info
 "id-aˇ-authítiˇti⁄Info"

	)

1677 
	#NID_id_aˇ_authítiˇti⁄Info
 354

	)

1678 
	#OBJ_id_aˇ_authítiˇti⁄Info
 
OBJ_id_aˇ
,1L

	)

1680 
	#SN_id_aˇ_ac˚ssIdítôy
 "id-aˇ-ac˚ssIdítôy"

	)

1681 
	#NID_id_aˇ_ac˚ssIdítôy
 355

	)

1682 
	#OBJ_id_aˇ_ac˚ssIdítôy
 
OBJ_id_aˇ
,2L

	)

1684 
	#SN_id_aˇ_ch¨gögIdítôy
 "id-aˇ-ch¨gögIdítôy"

	)

1685 
	#NID_id_aˇ_ch¨gögIdítôy
 356

	)

1686 
	#OBJ_id_aˇ_ch¨gögIdítôy
 
OBJ_id_aˇ
,3L

	)

1688 
	#SN_id_aˇ_group
 "id-aˇ-group"

	)

1689 
	#NID_id_aˇ_group
 357

	)

1690 
	#OBJ_id_aˇ_group
 
OBJ_id_aˇ
,4L

	)

1692 
	#SN_id_aˇ_rﬁe
 "id-aˇ-rﬁe"

	)

1693 
	#NID_id_aˇ_rﬁe
 358

	)

1694 
	#OBJ_id_aˇ_rﬁe
 
OBJ_id_aˇ
,5L

	)

1696 
	#SN_id_aˇ_ícAârs
 "id-aˇ-ícAârs"

	)

1697 
	#NID_id_aˇ_ícAârs
 399

	)

1698 
	#OBJ_id_aˇ_ícAârs
 
OBJ_id_aˇ
,6L

	)

1700 
	#SN_id_qcs_pkixQCSy¡ax_v1
 "id-qcs-pkixQCSy¡ax-v1"

	)

1701 
	#NID_id_qcs_pkixQCSy¡ax_v1
 359

	)

1702 
	#OBJ_id_qcs_pkixQCSy¡ax_v1
 
OBJ_id_qcs
,1L

	)

1704 
	#SN_id_c˘_¸s
 "id-c˘-¸s"

	)

1705 
	#NID_id_c˘_¸s
 360

	)

1706 
	#OBJ_id_c˘_¸s
 
OBJ_id_c˘
,1L

	)

1708 
	#SN_id_c˘_PKID©a
 "id-c˘-PKID©a"

	)

1709 
	#NID_id_c˘_PKID©a
 361

	)

1710 
	#OBJ_id_c˘_PKID©a
 
OBJ_id_c˘
,2L

	)

1712 
	#SN_id_c˘_PKIRe•⁄£
 "id-c˘-PKIRe•⁄£"

	)

1713 
	#NID_id_c˘_PKIRe•⁄£
 362

	)

1714 
	#OBJ_id_c˘_PKIRe•⁄£
 
OBJ_id_c˘
,3L

	)

1716 
	#SN_id_µl_™yL™guage
 "id-µl-™yL™guage"

	)

1717 
	#LN_id_µl_™yL™guage
 "AnyÜ™guage"

	)

1718 
	#NID_id_µl_™yL™guage
 664

	)

1719 
	#OBJ_id_µl_™yL™guage
 
OBJ_id_µl
,0L

	)

1721 
	#SN_id_µl_öhîôAŒ
 "id-µl-öhîôAŒ"

	)

1722 
	#LN_id_µl_öhîôAŒ
 "InhîôáŒ"

	)

1723 
	#NID_id_µl_öhîôAŒ
 665

	)

1724 
	#OBJ_id_µl_öhîôAŒ
 
OBJ_id_µl
,1L

	)

1726 
	#SN_Indïídít
 "id-µl-ödïídít"

	)

1727 
	#LN_Indïídít
 "Indïídít"

	)

1728 
	#NID_Indïídít
 667

	)

1729 
	#OBJ_Indïídít
 
OBJ_id_µl
,2L

	)

1731 
	#SN_ad_OCSP
 "OCSP"

	)

1732 
	#LN_ad_OCSP
 "OCSP"

	)

1733 
	#NID_ad_OCSP
 178

	)

1734 
	#OBJ_ad_OCSP
 
OBJ_id_ad
,1L

	)

1736 
	#SN_ad_ˇ_issuîs
 "ˇIssuîs"

	)

1737 
	#LN_ad_ˇ_issuîs
 "CA Issuîs"

	)

1738 
	#NID_ad_ˇ_issuîs
 179

	)

1739 
	#OBJ_ad_ˇ_issuîs
 
OBJ_id_ad
,2L

	)

1741 
	#SN_ad_timeSèmpög
 "ad_time°ampög"

	)

1742 
	#LN_ad_timeSèmpög
 "AD TimêSèmpög"

	)

1743 
	#NID_ad_timeSèmpög
 363

	)

1744 
	#OBJ_ad_timeSèmpög
 
OBJ_id_ad
,3L

	)

1746 
	#SN_ad_dvcs
 "AD_DVCS"

	)

1747 
	#LN_ad_dvcs
 "ad dvcs"

	)

1748 
	#NID_ad_dvcs
 364

	)

1749 
	#OBJ_ad_dvcs
 
OBJ_id_ad
,4L

	)

1751 
	#OBJ_id_pkix_OCSP
 
OBJ_ad_OCSP


	)

1753 
	#SN_id_pkix_OCSP_basic
 "basicOCSPRe•⁄£"

	)

1754 
	#LN_id_pkix_OCSP_basic
 "Basi¯OCSP Re•⁄£"

	)

1755 
	#NID_id_pkix_OCSP_basic
 365

	)

1756 
	#OBJ_id_pkix_OCSP_basic
 
OBJ_id_pkix_OCSP
,1L

	)

1758 
	#SN_id_pkix_OCSP_N⁄˚
 "N⁄˚"

	)

1759 
	#LN_id_pkix_OCSP_N⁄˚
 "OCSP N⁄˚"

	)

1760 
	#NID_id_pkix_OCSP_N⁄˚
 366

	)

1761 
	#OBJ_id_pkix_OCSP_N⁄˚
 
OBJ_id_pkix_OCSP
,2L

	)

1763 
	#SN_id_pkix_OCSP_CæID
 "CæID"

	)

1764 
	#LN_id_pkix_OCSP_CæID
 "OCSP CRL ID"

	)

1765 
	#NID_id_pkix_OCSP_CæID
 367

	)

1766 
	#OBJ_id_pkix_OCSP_CæID
 
OBJ_id_pkix_OCSP
,3L

	)

1768 
	#SN_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 "ac˚±abÀRe•⁄£s"

	)

1769 
	#LN_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 "Ac˚±abÀ OCSP Re•⁄£s"

	)

1770 
	#NID_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 368

	)

1771 
	#OBJ_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 
OBJ_id_pkix_OCSP
,4L

	)

1773 
	#SN_id_pkix_OCSP_noCheck
 "noCheck"

	)

1774 
	#LN_id_pkix_OCSP_noCheck
 "OCSP NÿCheck"

	)

1775 
	#NID_id_pkix_OCSP_noCheck
 369

	)

1776 
	#OBJ_id_pkix_OCSP_noCheck
 
OBJ_id_pkix_OCSP
,5L

	)

1778 
	#SN_id_pkix_OCSP_¨chiveCutoff
 "¨chiveCutoff"

	)

1779 
	#LN_id_pkix_OCSP_¨chiveCutoff
 "OCSP ArchivêCutoff"

	)

1780 
	#NID_id_pkix_OCSP_¨chiveCutoff
 370

	)

1781 
	#OBJ_id_pkix_OCSP_¨chiveCutoff
 
OBJ_id_pkix_OCSP
,6L

	)

1783 
	#SN_id_pkix_OCSP_£rvi˚Loˇt‹
 "£rvi˚Loˇt‹"

	)

1784 
	#LN_id_pkix_OCSP_£rvi˚Loˇt‹
 "OCSP Sîvi˚ Loˇt‹"

	)

1785 
	#NID_id_pkix_OCSP_£rvi˚Loˇt‹
 371

	)

1786 
	#OBJ_id_pkix_OCSP_£rvi˚Loˇt‹
 
OBJ_id_pkix_OCSP
,7L

	)

1788 
	#SN_id_pkix_OCSP_exãndedSètus
 "exãndedSètus"

	)

1789 
	#LN_id_pkix_OCSP_exãndedSètus
 "Exãnded OCSP Sètus"

	)

1790 
	#NID_id_pkix_OCSP_exãndedSètus
 372

	)

1791 
	#OBJ_id_pkix_OCSP_exãndedSètus
 
OBJ_id_pkix_OCSP
,8L

	)

1793 
	#SN_id_pkix_OCSP_vÆid
 "vÆid"

	)

1794 
	#NID_id_pkix_OCSP_vÆid
 373

	)

1795 
	#OBJ_id_pkix_OCSP_vÆid
 
OBJ_id_pkix_OCSP
,9L

	)

1797 
	#SN_id_pkix_OCSP_∑th
 "∑th"

	)

1798 
	#NID_id_pkix_OCSP_∑th
 374

	)

1799 
	#OBJ_id_pkix_OCSP_∑th
 
OBJ_id_pkix_OCSP
,10L

	)

1801 
	#SN_id_pkix_OCSP_åu°RoŸ
 "åu°RoŸ"

	)

1802 
	#LN_id_pkix_OCSP_åu°RoŸ
 "Tru° RoŸ"

	)

1803 
	#NID_id_pkix_OCSP_åu°RoŸ
 375

	)

1804 
	#OBJ_id_pkix_OCSP_åu°RoŸ
 
OBJ_id_pkix_OCSP
,11L

	)

1806 
	#SN_Æg‹ôhm
 "Æg‹ôhm"

	)

1807 
	#LN_Æg‹ôhm
 "Æg‹ôhm"

	)

1808 
	#NID_Æg‹ôhm
 376

	)

1809 
	#OBJ_Æg‹ôhm
 1L,3L,14L,3L,2L

	)

1811 
	#SN_md5WôhRSA
 "RSA-NP-MD5"

	)

1812 
	#LN_md5WôhRSA
 "md5WôhRSA"

	)

1813 
	#NID_md5WôhRSA
 104

	)

1814 
	#OBJ_md5WôhRSA
 
OBJ_Æg‹ôhm
,3L

	)

1816 
	#SN_des_ecb
 "DES-ECB"

	)

1817 
	#LN_des_ecb
 "des-ecb"

	)

1818 
	#NID_des_ecb
 29

	)

1819 
	#OBJ_des_ecb
 
OBJ_Æg‹ôhm
,6L

	)

1821 
	#SN_des_cbc
 "DES-CBC"

	)

1822 
	#LN_des_cbc
 "des-cbc"

	)

1823 
	#NID_des_cbc
 31

	)

1824 
	#OBJ_des_cbc
 
OBJ_Æg‹ôhm
,7L

	)

1826 
	#SN_des_ofb64
 "DES-OFB"

	)

1827 
	#LN_des_ofb64
 "des-ofb"

	)

1828 
	#NID_des_ofb64
 45

	)

1829 
	#OBJ_des_ofb64
 
OBJ_Æg‹ôhm
,8L

	)

1831 
	#SN_des_cfb64
 "DES-CFB"

	)

1832 
	#LN_des_cfb64
 "des-cfb"

	)

1833 
	#NID_des_cfb64
 30

	)

1834 
	#OBJ_des_cfb64
 
OBJ_Æg‹ôhm
,9L

	)

1836 
	#SN_rßSig«tuª
 "rßSig«tuª"

	)

1837 
	#NID_rßSig«tuª
 377

	)

1838 
	#OBJ_rßSig«tuª
 
OBJ_Æg‹ôhm
,11L

	)

1840 
	#SN_dß_2
 "DSA-ﬁd"

	)

1841 
	#LN_dß_2
 "dßEn¸y±i⁄-ﬁd"

	)

1842 
	#NID_dß_2
 67

	)

1843 
	#OBJ_dß_2
 
OBJ_Æg‹ôhm
,12L

	)

1845 
	#SN_dßWôhSHA
 "DSA-SHA"

	)

1846 
	#LN_dßWôhSHA
 "dßWôhSHA"

	)

1847 
	#NID_dßWôhSHA
 66

	)

1848 
	#OBJ_dßWôhSHA
 
OBJ_Æg‹ôhm
,13L

	)

1850 
	#SN_shaWôhRSAEn¸y±i⁄
 "RSA-SHA"

	)

1851 
	#LN_shaWôhRSAEn¸y±i⁄
 "shaWôhRSAEn¸y±i⁄"

	)

1852 
	#NID_shaWôhRSAEn¸y±i⁄
 42

	)

1853 
	#OBJ_shaWôhRSAEn¸y±i⁄
 
OBJ_Æg‹ôhm
,15L

	)

1855 
	#SN_des_ede_ecb
 "DES-EDE"

	)

1856 
	#LN_des_ede_ecb
 "des-ede"

	)

1857 
	#NID_des_ede_ecb
 32

	)

1858 
	#OBJ_des_ede_ecb
 
OBJ_Æg‹ôhm
,17L

	)

1860 
	#SN_des_ede3_ecb
 "DES-EDE3"

	)

1861 
	#LN_des_ede3_ecb
 "des-ede3"

	)

1862 
	#NID_des_ede3_ecb
 33

	)

1864 
	#SN_des_ede_cbc
 "DES-EDE-CBC"

	)

1865 
	#LN_des_ede_cbc
 "des-ede-cbc"

	)

1866 
	#NID_des_ede_cbc
 43

	)

1868 
	#SN_des_ede_cfb64
 "DES-EDE-CFB"

	)

1869 
	#LN_des_ede_cfb64
 "des-ede-cfb"

	)

1870 
	#NID_des_ede_cfb64
 60

	)

1872 
	#SN_des_ede3_cfb64
 "DES-EDE3-CFB"

	)

1873 
	#LN_des_ede3_cfb64
 "des-ede3-cfb"

	)

1874 
	#NID_des_ede3_cfb64
 61

	)

1876 
	#SN_des_ede_ofb64
 "DES-EDE-OFB"

	)

1877 
	#LN_des_ede_ofb64
 "des-ede-ofb"

	)

1878 
	#NID_des_ede_ofb64
 62

	)

1880 
	#SN_des_ede3_ofb64
 "DES-EDE3-OFB"

	)

1881 
	#LN_des_ede3_ofb64
 "des-ede3-ofb"

	)

1882 
	#NID_des_ede3_ofb64
 63

	)

1884 
	#SN_desx_cbc
 "DESX-CBC"

	)

1885 
	#LN_desx_cbc
 "desx-cbc"

	)

1886 
	#NID_desx_cbc
 80

	)

1888 
	#SN_sha
 "SHA"

	)

1889 
	#LN_sha
 "sha"

	)

1890 
	#NID_sha
 41

	)

1891 
	#OBJ_sha
 
OBJ_Æg‹ôhm
,18L

	)

1893 
	#SN_sha1
 "SHA1"

	)

1894 
	#LN_sha1
 "sha1"

	)

1895 
	#NID_sha1
 64

	)

1896 
	#OBJ_sha1
 
OBJ_Æg‹ôhm
,26L

	)

1898 
	#SN_dßWôhSHA1_2
 "DSA-SHA1-ﬁd"

	)

1899 
	#LN_dßWôhSHA1_2
 "dßWôhSHA1-ﬁd"

	)

1900 
	#NID_dßWôhSHA1_2
 70

	)

1901 
	#OBJ_dßWôhSHA1_2
 
OBJ_Æg‹ôhm
,27L

	)

1903 
	#SN_sha1WôhRSA
 "RSA-SHA1-2"

	)

1904 
	#LN_sha1WôhRSA
 "sha1WôhRSA"

	)

1905 
	#NID_sha1WôhRSA
 115

	)

1906 
	#OBJ_sha1WôhRSA
 
OBJ_Æg‹ôhm
,29L

	)

1908 
	#SN_rùemd160
 "RIPEMD160"

	)

1909 
	#LN_rùemd160
 "rùemd160"

	)

1910 
	#NID_rùemd160
 117

	)

1911 
	#OBJ_rùemd160
 1L,3L,36L,3L,2L,1L

	)

1913 
	#SN_rùemd160WôhRSA
 "RSA-RIPEMD160"

	)

1914 
	#LN_rùemd160WôhRSA
 "rùemd160WôhRSA"

	)

1915 
	#NID_rùemd160WôhRSA
 119

	)

1916 
	#OBJ_rùemd160WôhRSA
 1L,3L,36L,3L,3L,1L,2L

	)

1918 
	#SN_sx√t
 "SXNëID"

	)

1919 
	#LN_sx√t
 "Så⁄g Exå™ë ID"

	)

1920 
	#NID_sx√t
 143

	)

1921 
	#OBJ_sx√t
 1L,3L,101L,1L,4L,1L

	)

1923 
	#SN_X500
 "X500"

	)

1924 
	#LN_X500
 "dúe˘‹y sîvi˚†(X.500)"

	)

1925 
	#NID_X500
 11

	)

1926 
	#OBJ_X500
 2L,5L

	)

1928 
	#SN_X509
 "X509"

	)

1929 
	#NID_X509
 12

	)

1930 
	#OBJ_X509
 
OBJ_X500
,4L

	)

1932 
	#SN_comm⁄Name
 "CN"

	)

1933 
	#LN_comm⁄Name
 "comm⁄Name"

	)

1934 
	#NID_comm⁄Name
 13

	)

1935 
	#OBJ_comm⁄Name
 
OBJ_X509
,3L

	)

1937 
	#SN_su∫ame
 "SN"

	)

1938 
	#LN_su∫ame
 "su∫ame"

	)

1939 
	#NID_su∫ame
 100

	)

1940 
	#OBJ_su∫ame
 
OBJ_X509
,4L

	)

1942 
	#LN_£rülNumbî
 "£rülNumbî"

	)

1943 
	#NID_£rülNumbî
 105

	)

1944 
	#OBJ_£rülNumbî
 
OBJ_X509
,5L

	)

1946 
	#SN_cou¡ryName
 "C"

	)

1947 
	#LN_cou¡ryName
 "cou¡ryName"

	)

1948 
	#NID_cou¡ryName
 14

	)

1949 
	#OBJ_cou¡ryName
 
OBJ_X509
,6L

	)

1951 
	#SN_loˇlôyName
 "L"

	)

1952 
	#LN_loˇlôyName
 "loˇlôyName"

	)

1953 
	#NID_loˇlôyName
 15

	)

1954 
	#OBJ_loˇlôyName
 
OBJ_X509
,7L

	)

1956 
	#SN_°©eOrProvö˚Name
 "ST"

	)

1957 
	#LN_°©eOrProvö˚Name
 "°©eOrProvö˚Name"

	)

1958 
	#NID_°©eOrProvö˚Name
 16

	)

1959 
	#OBJ_°©eOrProvö˚Name
 
OBJ_X509
,8L

	)

1961 
	#LN_°ªëAddªss
 "°ªëAddªss"

	)

1962 
	#NID_°ªëAddªss
 660

	)

1963 
	#OBJ_°ªëAddªss
 
OBJ_X509
,9L

	)

1965 
	#SN_‹g™iz©i⁄Name
 "O"

	)

1966 
	#LN_‹g™iz©i⁄Name
 "‹g™iz©i⁄Name"

	)

1967 
	#NID_‹g™iz©i⁄Name
 17

	)

1968 
	#OBJ_‹g™iz©i⁄Name
 
OBJ_X509
,10L

	)

1970 
	#SN_‹g™iz©i⁄ÆUnôName
 "OU"

	)

1971 
	#LN_‹g™iz©i⁄ÆUnôName
 "‹g™iz©i⁄ÆUnôName"

	)

1972 
	#NID_‹g™iz©i⁄ÆUnôName
 18

	)

1973 
	#OBJ_‹g™iz©i⁄ÆUnôName
 
OBJ_X509
,11L

	)

1975 
	#LN_tôÀ
 "tôÀ"

	)

1976 
	#NID_tôÀ
 106

	)

1977 
	#OBJ_tôÀ
 
OBJ_X509
,12L

	)

1979 
	#LN_des¸ùti⁄
 "des¸ùti⁄"

	)

1980 
	#NID_des¸ùti⁄
 107

	)

1981 
	#OBJ_des¸ùti⁄
 
OBJ_X509
,13L

	)

1983 
	#LN_po°ÆCode
 "po°ÆCode"

	)

1984 
	#NID_po°ÆCode
 661

	)

1985 
	#OBJ_po°ÆCode
 
OBJ_X509
,17L

	)

1987 
	#SN_«me
 "«me"

	)

1988 
	#LN_«me
 "«me"

	)

1989 
	#NID_«me
 173

	)

1990 
	#OBJ_«me
 
OBJ_X509
,41L

	)

1992 
	#SN_givíName
 "GN"

	)

1993 
	#LN_givíName
 "givíName"

	)

1994 
	#NID_givíName
 99

	)

1995 
	#OBJ_givíName
 
OBJ_X509
,42L

	)

1997 
	#LN_öôüls
 "öôüls"

	)

1998 
	#NID_öôüls
 101

	)

1999 
	#OBJ_öôüls
 
OBJ_X509
,43L

	)

2001 
	#LN_gíî©i⁄QuÆifõr
 "gíî©i⁄QuÆifõr"

	)

2002 
	#NID_gíî©i⁄QuÆifõr
 509

	)

2003 
	#OBJ_gíî©i⁄QuÆifõr
 
OBJ_X509
,44L

	)

2005 
	#LN_x500UniqueIdítifõr
 "x500UniqueIdítifõr"

	)

2006 
	#NID_x500UniqueIdítifõr
 503

	)

2007 
	#OBJ_x500UniqueIdítifõr
 
OBJ_X509
,45L

	)

2009 
	#SN_dnQuÆifõr
 "dnQuÆifõr"

	)

2010 
	#LN_dnQuÆifõr
 "dnQuÆifõr"

	)

2011 
	#NID_dnQuÆifõr
 174

	)

2012 
	#OBJ_dnQuÆifõr
 
OBJ_X509
,46L

	)

2014 
	#LN_p£ud⁄ym
 "p£ud⁄ym"

	)

2015 
	#NID_p£ud⁄ym
 510

	)

2016 
	#OBJ_p£ud⁄ym
 
OBJ_X509
,65L

	)

2018 
	#SN_rﬁe
 "rﬁe"

	)

2019 
	#LN_rﬁe
 "rﬁe"

	)

2020 
	#NID_rﬁe
 400

	)

2021 
	#OBJ_rﬁe
 
OBJ_X509
,72L

	)

2023 
	#SN_X500Æg‹ôhms
 "X500Æg‹ôhms"

	)

2024 
	#LN_X500Æg‹ôhms
 "dúe˘‹y sîvi˚†-álg‹ôhms"

	)

2025 
	#NID_X500Æg‹ôhms
 378

	)

2026 
	#OBJ_X500Æg‹ôhms
 
OBJ_X500
,8L

	)

2028 
	#SN_rß
 "RSA"

	)

2029 
	#LN_rß
 "rß"

	)

2030 
	#NID_rß
 19

	)

2031 
	#OBJ_rß
 
OBJ_X500Æg‹ôhms
,1L,1L

	)

2033 
	#SN_mdc2WôhRSA
 "RSA-MDC2"

	)

2034 
	#LN_mdc2WôhRSA
 "mdc2WôhRSA"

	)

2035 
	#NID_mdc2WôhRSA
 96

	)

2036 
	#OBJ_mdc2WôhRSA
 
OBJ_X500Æg‹ôhms
,3L,100L

	)

2038 
	#SN_mdc2
 "MDC2"

	)

2039 
	#LN_mdc2
 "mdc2"

	)

2040 
	#NID_mdc2
 95

	)

2041 
	#OBJ_mdc2
 
OBJ_X500Æg‹ôhms
,3L,101L

	)

2043 
	#SN_id_˚
 "id-˚"

	)

2044 
	#NID_id_˚
 81

	)

2045 
	#OBJ_id_˚
 
OBJ_X500
,29L

	)

2047 
	#SN_subje˘_key_idítifõr
 "subje˘KeyIdítifõr"

	)

2048 
	#LN_subje˘_key_idítifõr
 "X509v3 Subje˘ Key Idítifõr"

	)

2049 
	#NID_subje˘_key_idítifõr
 82

	)

2050 
	#OBJ_subje˘_key_idítifõr
 
OBJ_id_˚
,14L

	)

2052 
	#SN_key_ußge
 "keyUßge"

	)

2053 
	#LN_key_ußge
 "X509v3 Key Ußge"

	)

2054 
	#NID_key_ußge
 83

	)

2055 
	#OBJ_key_ußge
 
OBJ_id_˚
,15L

	)

2057 
	#SN_¥iv©e_key_ußge_≥riod
 "¥iv©eKeyUßgePîiod"

	)

2058 
	#LN_¥iv©e_key_ußge_≥riod
 "X509v3 Priv©êKey UßgêPîiod"

	)

2059 
	#NID_¥iv©e_key_ußge_≥riod
 84

	)

2060 
	#OBJ_¥iv©e_key_ußge_≥riod
 
OBJ_id_˚
,16L

	)

2062 
	#SN_subje˘_Æt_«me
 "subje˘A…Name"

	)

2063 
	#LN_subje˘_Æt_«me
 "X509v3 Subje˘ A…î«tivêName"

	)

2064 
	#NID_subje˘_Æt_«me
 85

	)

2065 
	#OBJ_subje˘_Æt_«me
 
OBJ_id_˚
,17L

	)

2067 
	#SN_issuî_Æt_«me
 "issuîA…Name"

	)

2068 
	#LN_issuî_Æt_«me
 "X509v3 Issuî A…î«tivêName"

	)

2069 
	#NID_issuî_Æt_«me
 86

	)

2070 
	#OBJ_issuî_Æt_«me
 
OBJ_id_˚
,18L

	)

2072 
	#SN_basic_c⁄°øöts
 "basicC⁄°øöts"

	)

2073 
	#LN_basic_c⁄°øöts
 "X509v3 Basi¯C⁄°øöts"

	)

2074 
	#NID_basic_c⁄°øöts
 87

	)

2075 
	#OBJ_basic_c⁄°øöts
 
OBJ_id_˚
,19L

	)

2077 
	#SN_¸l_numbî
 "¸lNumbî"

	)

2078 
	#LN_¸l_numbî
 "X509v3 CRL Numbî"

	)

2079 
	#NID_¸l_numbî
 88

	)

2080 
	#OBJ_¸l_numbî
 
OBJ_id_˚
,20L

	)

2082 
	#SN_¸l_ªas⁄
 "CRLRós⁄"

	)

2083 
	#LN_¸l_ªas⁄
 "X509v3 CRL Rós⁄ Code"

	)

2084 
	#NID_¸l_ªas⁄
 141

	)

2085 
	#OBJ_¸l_ªas⁄
 
OBJ_id_˚
,21L

	)

2087 
	#SN_övÆidôy_d©e
 "övÆidôyD©e"

	)

2088 
	#LN_övÆidôy_d©e
 "InvÆidôy D©e"

	)

2089 
	#NID_övÆidôy_d©e
 142

	)

2090 
	#OBJ_övÆidôy_d©e
 
OBJ_id_˚
,24L

	)

2092 
	#SN_dñè_¸l
 "dñèCRL"

	)

2093 
	#LN_dñè_¸l
 "X509v3 Dñè CRL Indiˇt‹"

	)

2094 
	#NID_dñè_¸l
 140

	)

2095 
	#OBJ_dñè_¸l
 
OBJ_id_˚
,27L

	)

2097 
	#SN_«me_c⁄°øöts
 "«meC⁄°øöts"

	)

2098 
	#LN_«me_c⁄°øöts
 "X509v3 NamêC⁄°øöts"

	)

2099 
	#NID_«me_c⁄°øöts
 666

	)

2100 
	#OBJ_«me_c⁄°øöts
 
OBJ_id_˚
,30L

	)

2102 
	#SN_¸l_di°ributi⁄_poöts
 "¸lDi°ributi⁄Poöts"

	)

2103 
	#LN_¸l_di°ributi⁄_poöts
 "X509v3 CRL Di°ributi⁄ Poöts"

	)

2104 
	#NID_¸l_di°ributi⁄_poöts
 103

	)

2105 
	#OBJ_¸l_di°ributi⁄_poöts
 
OBJ_id_˚
,31L

	)

2107 
	#SN_˚πifiˇã_pﬁicõs
 "˚πifiˇãPﬁicõs"

	)

2108 
	#LN_˚πifiˇã_pﬁicõs
 "X509v3 Cîtifiˇã Pﬁicõs"

	)

2109 
	#NID_˚πifiˇã_pﬁicõs
 89

	)

2110 
	#OBJ_˚πifiˇã_pﬁicõs
 
OBJ_id_˚
,32L

	)

2112 
	#SN_™y_pﬁicy
 "™yPﬁicy"

	)

2113 
	#LN_™y_pﬁicy
 "X509v3 Any Pﬁicy"

	)

2114 
	#NID_™y_pﬁicy
 746

	)

2115 
	#OBJ_™y_pﬁicy
 
OBJ_˚πifiˇã_pﬁicõs
,0L

	)

2117 
	#SN_pﬁicy_m≠pögs
 "pﬁicyM≠pögs"

	)

2118 
	#LN_pﬁicy_m≠pögs
 "X509v3 Pﬁicy M≠pögs"

	)

2119 
	#NID_pﬁicy_m≠pögs
 747

	)

2120 
	#OBJ_pﬁicy_m≠pögs
 
OBJ_id_˚
,33L

	)

2122 
	#SN_auth‹ôy_key_idítifõr
 "auth‹ôyKeyIdítifõr"

	)

2123 
	#LN_auth‹ôy_key_idítifõr
 "X509v3 Auth‹ôy Key Idítifõr"

	)

2124 
	#NID_auth‹ôy_key_idítifõr
 90

	)

2125 
	#OBJ_auth‹ôy_key_idítifõr
 
OBJ_id_˚
,35L

	)

2127 
	#SN_pﬁicy_c⁄°øöts
 "pﬁicyC⁄°øöts"

	)

2128 
	#LN_pﬁicy_c⁄°øöts
 "X509v3 Pﬁicy C⁄°øöts"

	)

2129 
	#NID_pﬁicy_c⁄°øöts
 401

	)

2130 
	#OBJ_pﬁicy_c⁄°øöts
 
OBJ_id_˚
,36L

	)

2132 
	#SN_ext_key_ußge
 "exãndedKeyUßge"

	)

2133 
	#LN_ext_key_ußge
 "X509v3 Exãnded Key Ußge"

	)

2134 
	#NID_ext_key_ußge
 126

	)

2135 
	#OBJ_ext_key_ußge
 
OBJ_id_˚
,37L

	)

2137 
	#SN_öhibô_™y_pﬁicy
 "öhibôAnyPﬁicy"

	)

2138 
	#LN_öhibô_™y_pﬁicy
 "X509v3 Inhibô Any Pﬁicy"

	)

2139 
	#NID_öhibô_™y_pﬁicy
 748

	)

2140 
	#OBJ_öhibô_™y_pﬁicy
 
OBJ_id_˚
,54L

	)

2142 
	#SN_èrgë_öf‹m©i⁄
 "èrgëInf‹m©i⁄"

	)

2143 
	#LN_èrgë_öf‹m©i⁄
 "X509v3 AC T¨gëög"

	)

2144 
	#NID_èrgë_öf‹m©i⁄
 402

	)

2145 
	#OBJ_èrgë_öf‹m©i⁄
 
OBJ_id_˚
,55L

	)

2147 
	#SN_no_ªv_avaû
 "noRevAvaû"

	)

2148 
	#LN_no_ªv_avaû
 "X509v3 NÿRevoˇti⁄ AvaûabÀ"

	)

2149 
	#NID_no_ªv_avaû
 403

	)

2150 
	#OBJ_no_ªv_avaû
 
OBJ_id_˚
,56L

	)

2152 
	#SN_√tsˇ≥
 "Nësˇ≥"

	)

2153 
	#LN_√tsˇ≥
 "Nësˇ≥ Communiˇti⁄†C‹p."

	)

2154 
	#NID_√tsˇ≥
 57

	)

2155 
	#OBJ_√tsˇ≥
 2L,16L,840L,1L,113730L

	)

2157 
	#SN_√tsˇ≥_˚π_exãnsi⁄
 "nsCîtExt"

	)

2158 
	#LN_√tsˇ≥_˚π_exãnsi⁄
 "Nësˇ≥ Cîtifiˇã Exãnsi⁄"

	)

2159 
	#NID_√tsˇ≥_˚π_exãnsi⁄
 58

	)

2160 
	#OBJ_√tsˇ≥_˚π_exãnsi⁄
 
OBJ_√tsˇ≥
,1L

	)

2162 
	#SN_√tsˇ≥_d©a_ty≥
 "nsD©aTy≥"

	)

2163 
	#LN_√tsˇ≥_d©a_ty≥
 "Nësˇ≥ D©®Ty≥"

	)

2164 
	#NID_√tsˇ≥_d©a_ty≥
 59

	)

2165 
	#OBJ_√tsˇ≥_d©a_ty≥
 
OBJ_√tsˇ≥
,2L

	)

2167 
	#SN_√tsˇ≥_˚π_ty≥
 "nsCîtTy≥"

	)

2168 
	#LN_√tsˇ≥_˚π_ty≥
 "Nësˇ≥ CîàTy≥"

	)

2169 
	#NID_√tsˇ≥_˚π_ty≥
 71

	)

2170 
	#OBJ_√tsˇ≥_˚π_ty≥
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,1L

	)

2172 
	#SN_√tsˇ≥_ba£_uæ
 "nsBa£Uæ"

	)

2173 
	#LN_√tsˇ≥_ba£_uæ
 "Nësˇ≥ Ba£ Uæ"

	)

2174 
	#NID_√tsˇ≥_ba£_uæ
 72

	)

2175 
	#OBJ_√tsˇ≥_ba£_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,2L

	)

2177 
	#SN_√tsˇ≥_ªvoˇti⁄_uæ
 "nsRevoˇti⁄Uæ"

	)

2178 
	#LN_√tsˇ≥_ªvoˇti⁄_uæ
 "Nësˇ≥ Revoˇti⁄ Uæ"

	)

2179 
	#NID_√tsˇ≥_ªvoˇti⁄_uæ
 73

	)

2180 
	#OBJ_√tsˇ≥_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,3L

	)

2182 
	#SN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "nsCaRevoˇti⁄Uæ"

	)

2183 
	#LN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "Nësˇ≥ CA Revoˇti⁄ Uæ"

	)

2184 
	#NID_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 74

	)

2185 
	#OBJ_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,4L

	)

2187 
	#SN_√tsˇ≥_ª√wÆ_uæ
 "nsRíewÆUæ"

	)

2188 
	#LN_√tsˇ≥_ª√wÆ_uæ
 "Nësˇ≥ RíewÆ Uæ"

	)

2189 
	#NID_√tsˇ≥_ª√wÆ_uæ
 75

	)

2190 
	#OBJ_√tsˇ≥_ª√wÆ_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,7L

	)

2192 
	#SN_√tsˇ≥_ˇ_pﬁicy_uæ
 "nsCaPﬁicyUæ"

	)

2193 
	#LN_√tsˇ≥_ˇ_pﬁicy_uæ
 "Nësˇ≥ CA Pﬁicy Uæ"

	)

2194 
	#NID_√tsˇ≥_ˇ_pﬁicy_uæ
 76

	)

2195 
	#OBJ_√tsˇ≥_ˇ_pﬁicy_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,8L

	)

2197 
	#SN_√tsˇ≥_s¶_£rvî_«me
 "nsS¶SîvîName"

	)

2198 
	#LN_√tsˇ≥_s¶_£rvî_«me
 "Nësˇ≥ SSL Sîvî Name"

	)

2199 
	#NID_√tsˇ≥_s¶_£rvî_«me
 77

	)

2200 
	#OBJ_√tsˇ≥_s¶_£rvî_«me
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,12L

	)

2202 
	#SN_√tsˇ≥_commít
 "nsCommít"

	)

2203 
	#LN_√tsˇ≥_commít
 "Nësˇ≥ Commít"

	)

2204 
	#NID_√tsˇ≥_commít
 78

	)

2205 
	#OBJ_√tsˇ≥_commít
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,13L

	)

2207 
	#SN_√tsˇ≥_˚π_£quí˚
 "nsCîtSequí˚"

	)

2208 
	#LN_√tsˇ≥_˚π_£quí˚
 "Nësˇ≥ Cîtifiˇã Sequí˚"

	)

2209 
	#NID_√tsˇ≥_˚π_£quí˚
 79

	)

2210 
	#OBJ_√tsˇ≥_˚π_£quí˚
 
OBJ_√tsˇ≥_d©a_ty≥
,5L

	)

2212 
	#SN_ns_sgc
 "nsSGC"

	)

2213 
	#LN_ns_sgc
 "Nësˇ≥ Sîvî G©ed Cry±o"

	)

2214 
	#NID_ns_sgc
 139

	)

2215 
	#OBJ_ns_sgc
 
OBJ_√tsˇ≥
,4L,1L

	)

2217 
	#SN_‹g
 "ORG"

	)

2218 
	#LN_‹g
 "‹g"

	)

2219 
	#NID_‹g
 379

	)

2220 
	#OBJ_‹g
 
OBJ_iso
,3L

	)

2222 
	#SN_dod
 "DOD"

	)

2223 
	#LN_dod
 "dod"

	)

2224 
	#NID_dod
 380

	)

2225 
	#OBJ_dod
 
OBJ_‹g
,6L

	)

2227 
	#SN_ü«
 "IANA"

	)

2228 
	#LN_ü«
 "ü«"

	)

2229 
	#NID_ü«
 381

	)

2230 
	#OBJ_ü«
 
OBJ_dod
,1L

	)

2232 
	#OBJ_öã∫ë
 
OBJ_ü«


	)

2234 
	#SN_Dúe˘‹y
 "dúe˘‹y"

	)

2235 
	#LN_Dúe˘‹y
 "Dúe˘‹y"

	)

2236 
	#NID_Dúe˘‹y
 382

	)

2237 
	#OBJ_Dúe˘‹y
 
OBJ_öã∫ë
,1L

	)

2239 
	#SN_M™agemít
 "mgmt"

	)

2240 
	#LN_M™agemít
 "M™agemít"

	)

2241 
	#NID_M™agemít
 383

	)

2242 
	#OBJ_M™agemít
 
OBJ_öã∫ë
,2L

	)

2244 
	#SN_Ex≥rimíèl
 "ex≥rimíèl"

	)

2245 
	#LN_Ex≥rimíèl
 "Ex≥rimíèl"

	)

2246 
	#NID_Ex≥rimíèl
 384

	)

2247 
	#OBJ_Ex≥rimíèl
 
OBJ_öã∫ë
,3L

	)

2249 
	#SN_Priv©e
 "¥iv©e"

	)

2250 
	#LN_Priv©e
 "Priv©e"

	)

2251 
	#NID_Priv©e
 385

	)

2252 
	#OBJ_Priv©e
 
OBJ_öã∫ë
,4L

	)

2254 
	#SN_Securôy
 "£curôy"

	)

2255 
	#LN_Securôy
 "Securôy"

	)

2256 
	#NID_Securôy
 386

	)

2257 
	#OBJ_Securôy
 
OBJ_öã∫ë
,5L

	)

2259 
	#SN_SNMPv2
 "¢mpv2"

	)

2260 
	#LN_SNMPv2
 "SNMPv2"

	)

2261 
	#NID_SNMPv2
 387

	)

2262 
	#OBJ_SNMPv2
 
OBJ_öã∫ë
,6L

	)

2264 
	#LN_Maû
 "Maû"

	)

2265 
	#NID_Maû
 388

	)

2266 
	#OBJ_Maû
 
OBJ_öã∫ë
,7L

	)

2268 
	#SN_E¡î¥i£s
 "íãΩri£s"

	)

2269 
	#LN_E¡î¥i£s
 "E¡î¥i£s"

	)

2270 
	#NID_E¡î¥i£s
 389

	)

2271 
	#OBJ_E¡î¥i£s
 
OBJ_Priv©e
,1L

	)

2273 
	#SN_dcObje˘
 "dcobje˘"

	)

2274 
	#LN_dcObje˘
 "dcObje˘"

	)

2275 
	#NID_dcObje˘
 390

	)

2276 
	#OBJ_dcObje˘
 
OBJ_E¡î¥i£s
,1466L,344L

	)

2278 
	#SN_mime_mhs
 "mime-mhs"

	)

2279 
	#LN_mime_mhs
 "MIME MHS"

	)

2280 
	#NID_mime_mhs
 504

	)

2281 
	#OBJ_mime_mhs
 
OBJ_Maû
,1L

	)

2283 
	#SN_mime_mhs_hódögs
 "mime-mhs-hódögs"

	)

2284 
	#LN_mime_mhs_hódögs
 "mime-mhs-hódögs"

	)

2285 
	#NID_mime_mhs_hódögs
 505

	)

2286 
	#OBJ_mime_mhs_hódögs
 
OBJ_mime_mhs
,1L

	)

2288 
	#SN_mime_mhs_bodõs
 "mime-mhs-bodõs"

	)

2289 
	#LN_mime_mhs_bodõs
 "mime-mhs-bodõs"

	)

2290 
	#NID_mime_mhs_bodõs
 506

	)

2291 
	#OBJ_mime_mhs_bodõs
 
OBJ_mime_mhs
,2L

	)

2293 
	#SN_id_hex_∑πül_mesßge
 "id-hex-∑πül-mesßge"

	)

2294 
	#LN_id_hex_∑πül_mesßge
 "id-hex-∑πül-mesßge"

	)

2295 
	#NID_id_hex_∑πül_mesßge
 507

	)

2296 
	#OBJ_id_hex_∑πül_mesßge
 
OBJ_mime_mhs_hódögs
,1L

	)

2298 
	#SN_id_hex_mu…ù¨t_mesßge
 "id-hex-mu…ù¨t-mesßge"

	)

2299 
	#LN_id_hex_mu…ù¨t_mesßge
 "id-hex-mu…ù¨t-mesßge"

	)

2300 
	#NID_id_hex_mu…ù¨t_mesßge
 508

	)

2301 
	#OBJ_id_hex_mu…ù¨t_mesßge
 
OBJ_mime_mhs_hódögs
,2L

	)

2303 
	#SN_æe_com¥essi⁄
 "RLE"

	)

2304 
	#LN_æe_com¥essi⁄
 "ru¿Àngth com¥essi⁄"

	)

2305 
	#NID_æe_com¥essi⁄
 124

	)

2306 
	#OBJ_æe_com¥essi⁄
 1L,1L,1L,1L,666L,1L

	)

2308 
	#SN_zlib_com¥essi⁄
 "ZLIB"

	)

2309 
	#LN_zlib_com¥essi⁄
 "zlib com¥essi⁄"

	)

2310 
	#NID_zlib_com¥essi⁄
 125

	)

2311 
	#OBJ_zlib_com¥essi⁄
 1L,1L,1L,1L,666L,2L

	)

2313 
	#OBJ_cs‹
 2L,16L,840L,1L,101L,3L

	)

2315 
	#OBJ_ni°Alg‹ôhms
 
OBJ_cs‹
,4L

	)

2317 
	#OBJ_´s
 
OBJ_ni°Alg‹ôhms
,1L

	)

2319 
	#SN_´s_128_ecb
 "AES-128-ECB"

	)

2320 
	#LN_´s_128_ecb
 "´s-128-ecb"

	)

2321 
	#NID_´s_128_ecb
 418

	)

2322 
	#OBJ_´s_128_ecb
 
OBJ_´s
,1L

	)

2324 
	#SN_´s_128_cbc
 "AES-128-CBC"

	)

2325 
	#LN_´s_128_cbc
 "´s-128-cbc"

	)

2326 
	#NID_´s_128_cbc
 419

	)

2327 
	#OBJ_´s_128_cbc
 
OBJ_´s
,2L

	)

2329 
	#SN_´s_128_ofb128
 "AES-128-OFB"

	)

2330 
	#LN_´s_128_ofb128
 "´s-128-ofb"

	)

2331 
	#NID_´s_128_ofb128
 420

	)

2332 
	#OBJ_´s_128_ofb128
 
OBJ_´s
,3L

	)

2334 
	#SN_´s_128_cfb128
 "AES-128-CFB"

	)

2335 
	#LN_´s_128_cfb128
 "´s-128-cfb"

	)

2336 
	#NID_´s_128_cfb128
 421

	)

2337 
	#OBJ_´s_128_cfb128
 
OBJ_´s
,4L

	)

2339 
	#SN_´s_192_ecb
 "AES-192-ECB"

	)

2340 
	#LN_´s_192_ecb
 "´s-192-ecb"

	)

2341 
	#NID_´s_192_ecb
 422

	)

2342 
	#OBJ_´s_192_ecb
 
OBJ_´s
,21L

	)

2344 
	#SN_´s_192_cbc
 "AES-192-CBC"

	)

2345 
	#LN_´s_192_cbc
 "´s-192-cbc"

	)

2346 
	#NID_´s_192_cbc
 423

	)

2347 
	#OBJ_´s_192_cbc
 
OBJ_´s
,22L

	)

2349 
	#SN_´s_192_ofb128
 "AES-192-OFB"

	)

2350 
	#LN_´s_192_ofb128
 "´s-192-ofb"

	)

2351 
	#NID_´s_192_ofb128
 424

	)

2352 
	#OBJ_´s_192_ofb128
 
OBJ_´s
,23L

	)

2354 
	#SN_´s_192_cfb128
 "AES-192-CFB"

	)

2355 
	#LN_´s_192_cfb128
 "´s-192-cfb"

	)

2356 
	#NID_´s_192_cfb128
 425

	)

2357 
	#OBJ_´s_192_cfb128
 
OBJ_´s
,24L

	)

2359 
	#SN_´s_256_ecb
 "AES-256-ECB"

	)

2360 
	#LN_´s_256_ecb
 "´s-256-ecb"

	)

2361 
	#NID_´s_256_ecb
 426

	)

2362 
	#OBJ_´s_256_ecb
 
OBJ_´s
,41L

	)

2364 
	#SN_´s_256_cbc
 "AES-256-CBC"

	)

2365 
	#LN_´s_256_cbc
 "´s-256-cbc"

	)

2366 
	#NID_´s_256_cbc
 427

	)

2367 
	#OBJ_´s_256_cbc
 
OBJ_´s
,42L

	)

2369 
	#SN_´s_256_ofb128
 "AES-256-OFB"

	)

2370 
	#LN_´s_256_ofb128
 "´s-256-ofb"

	)

2371 
	#NID_´s_256_ofb128
 428

	)

2372 
	#OBJ_´s_256_ofb128
 
OBJ_´s
,43L

	)

2374 
	#SN_´s_256_cfb128
 "AES-256-CFB"

	)

2375 
	#LN_´s_256_cfb128
 "´s-256-cfb"

	)

2376 
	#NID_´s_256_cfb128
 429

	)

2377 
	#OBJ_´s_256_cfb128
 
OBJ_´s
,44L

	)

2379 
	#SN_´s_128_cfb1
 "AES-128-CFB1"

	)

2380 
	#LN_´s_128_cfb1
 "´s-128-cfb1"

	)

2381 
	#NID_´s_128_cfb1
 650

	)

2383 
	#SN_´s_192_cfb1
 "AES-192-CFB1"

	)

2384 
	#LN_´s_192_cfb1
 "´s-192-cfb1"

	)

2385 
	#NID_´s_192_cfb1
 651

	)

2387 
	#SN_´s_256_cfb1
 "AES-256-CFB1"

	)

2388 
	#LN_´s_256_cfb1
 "´s-256-cfb1"

	)

2389 
	#NID_´s_256_cfb1
 652

	)

2391 
	#SN_´s_128_cfb8
 "AES-128-CFB8"

	)

2392 
	#LN_´s_128_cfb8
 "´s-128-cfb8"

	)

2393 
	#NID_´s_128_cfb8
 653

	)

2395 
	#SN_´s_192_cfb8
 "AES-192-CFB8"

	)

2396 
	#LN_´s_192_cfb8
 "´s-192-cfb8"

	)

2397 
	#NID_´s_192_cfb8
 654

	)

2399 
	#SN_´s_256_cfb8
 "AES-256-CFB8"

	)

2400 
	#LN_´s_256_cfb8
 "´s-256-cfb8"

	)

2401 
	#NID_´s_256_cfb8
 655

	)

2403 
	#SN_des_cfb1
 "DES-CFB1"

	)

2404 
	#LN_des_cfb1
 "des-cfb1"

	)

2405 
	#NID_des_cfb1
 656

	)

2407 
	#SN_des_cfb8
 "DES-CFB8"

	)

2408 
	#LN_des_cfb8
 "des-cfb8"

	)

2409 
	#NID_des_cfb8
 657

	)

2411 
	#SN_des_ede3_cfb1
 "DES-EDE3-CFB1"

	)

2412 
	#LN_des_ede3_cfb1
 "des-ede3-cfb1"

	)

2413 
	#NID_des_ede3_cfb1
 658

	)

2415 
	#SN_des_ede3_cfb8
 "DES-EDE3-CFB8"

	)

2416 
	#LN_des_ede3_cfb8
 "des-ede3-cfb8"

	)

2417 
	#NID_des_ede3_cfb8
 659

	)

2419 
	#OBJ_ni°_hashÆgs
 
OBJ_ni°Alg‹ôhms
,2L

	)

2421 
	#SN_sha256
 "SHA256"

	)

2422 
	#LN_sha256
 "sha256"

	)

2423 
	#NID_sha256
 672

	)

2424 
	#OBJ_sha256
 
OBJ_ni°_hashÆgs
,1L

	)

2426 
	#SN_sha384
 "SHA384"

	)

2427 
	#LN_sha384
 "sha384"

	)

2428 
	#NID_sha384
 673

	)

2429 
	#OBJ_sha384
 
OBJ_ni°_hashÆgs
,2L

	)

2431 
	#SN_sha512
 "SHA512"

	)

2432 
	#LN_sha512
 "sha512"

	)

2433 
	#NID_sha512
 674

	)

2434 
	#OBJ_sha512
 
OBJ_ni°_hashÆgs
,3L

	)

2436 
	#SN_sha224
 "SHA224"

	)

2437 
	#LN_sha224
 "sha224"

	)

2438 
	#NID_sha224
 675

	)

2439 
	#OBJ_sha224
 
OBJ_ni°_hashÆgs
,4L

	)

2441 
	#SN_hﬁd_ö°ru˘i⁄_code
 "hﬁdIn°ru˘i⁄Code"

	)

2442 
	#LN_hﬁd_ö°ru˘i⁄_code
 "Hﬁd In°ru˘i⁄ Code"

	)

2443 
	#NID_hﬁd_ö°ru˘i⁄_code
 430

	)

2444 
	#OBJ_hﬁd_ö°ru˘i⁄_code
 
OBJ_id_˚
,23L

	)

2446 
	#OBJ_hﬁdIn°ru˘i⁄
 
OBJ_X9_57
,2L

	)

2448 
	#SN_hﬁd_ö°ru˘i⁄_n⁄e
 "hﬁdIn°ru˘i⁄N⁄e"

	)

2449 
	#LN_hﬁd_ö°ru˘i⁄_n⁄e
 "Hﬁd In°ru˘i⁄ N⁄e"

	)

2450 
	#NID_hﬁd_ö°ru˘i⁄_n⁄e
 431

	)

2451 
	#OBJ_hﬁd_ö°ru˘i⁄_n⁄e
 
OBJ_hﬁdIn°ru˘i⁄
,1L

	)

2453 
	#SN_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 "hﬁdIn°ru˘i⁄CÆlIssuî"

	)

2454 
	#LN_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 "Hﬁd In°ru˘i⁄ CÆ»Issuî"

	)

2455 
	#NID_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 432

	)

2456 
	#OBJ_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 
OBJ_hﬁdIn°ru˘i⁄
,2L

	)

2458 
	#SN_hﬁd_ö°ru˘i⁄_ªje˘
 "hﬁdIn°ru˘i⁄Reje˘"

	)

2459 
	#LN_hﬁd_ö°ru˘i⁄_ªje˘
 "Hﬁd In°ru˘i⁄ Reje˘"

	)

2460 
	#NID_hﬁd_ö°ru˘i⁄_ªje˘
 433

	)

2461 
	#OBJ_hﬁd_ö°ru˘i⁄_ªje˘
 
OBJ_hﬁdIn°ru˘i⁄
,3L

	)

2463 
	#SN_d©a
 "d©a"

	)

2464 
	#NID_d©a
 434

	)

2465 
	#OBJ_d©a
 
OBJ_ôu_t
,9L

	)

2467 
	#SN_pss
 "pss"

	)

2468 
	#NID_pss
 435

	)

2469 
	#OBJ_pss
 
OBJ_d©a
,2342L

	)

2471 
	#SN_u˛
 "u˛"

	)

2472 
	#NID_u˛
 436

	)

2473 
	#OBJ_u˛
 
OBJ_pss
,19200300L

	)

2475 
	#SN_pûŸ
 "pûŸ"

	)

2476 
	#NID_pûŸ
 437

	)

2477 
	#OBJ_pûŸ
 
OBJ_u˛
,100L

	)

2479 
	#LN_pûŸAâribuãTy≥
 "pûŸAâribuãTy≥"

	)

2480 
	#NID_pûŸAâribuãTy≥
 438

	)

2481 
	#OBJ_pûŸAâribuãTy≥
 
OBJ_pûŸ
,1L

	)

2483 
	#LN_pûŸAâribuãSy¡ax
 "pûŸAâribuãSy¡ax"

	)

2484 
	#NID_pûŸAâribuãSy¡ax
 439

	)

2485 
	#OBJ_pûŸAâribuãSy¡ax
 
OBJ_pûŸ
,3L

	)

2487 
	#LN_pûŸObje˘Cœss
 "pûŸObje˘Cœss"

	)

2488 
	#NID_pûŸObje˘Cœss
 440

	)

2489 
	#OBJ_pûŸObje˘Cœss
 
OBJ_pûŸ
,4L

	)

2491 
	#LN_pûŸGroups
 "pûŸGroups"

	)

2492 
	#NID_pûŸGroups
 441

	)

2493 
	#OBJ_pûŸGroups
 
OBJ_pûŸ
,10L

	)

2495 
	#LN_iA5SåögSy¡ax
 "iA5SåögSy¡ax"

	)

2496 
	#NID_iA5SåögSy¡ax
 442

	)

2497 
	#OBJ_iA5SåögSy¡ax
 
OBJ_pûŸAâribuãSy¡ax
,4L

	)

2499 
	#LN_ˇ£Ign‹eIA5SåögSy¡ax
 "ˇ£Ign‹eIA5SåögSy¡ax"

	)

2500 
	#NID_ˇ£Ign‹eIA5SåögSy¡ax
 443

	)

2501 
	#OBJ_ˇ£Ign‹eIA5SåögSy¡ax
 
OBJ_pûŸAâribuãSy¡ax
,5L

	)

2503 
	#LN_pûŸObje˘
 "pûŸObje˘"

	)

2504 
	#NID_pûŸObje˘
 444

	)

2505 
	#OBJ_pûŸObje˘
 
OBJ_pûŸObje˘Cœss
,3L

	)

2507 
	#LN_pûŸPîs⁄
 "pûŸPîs⁄"

	)

2508 
	#NID_pûŸPîs⁄
 445

	)

2509 
	#OBJ_pûŸPîs⁄
 
OBJ_pûŸObje˘Cœss
,4L

	)

2511 
	#SN_accou¡
 "accou¡"

	)

2512 
	#NID_accou¡
 446

	)

2513 
	#OBJ_accou¡
 
OBJ_pûŸObje˘Cœss
,5L

	)

2515 
	#SN_documít
 "documít"

	)

2516 
	#NID_documít
 447

	)

2517 
	#OBJ_documít
 
OBJ_pûŸObje˘Cœss
,6L

	)

2519 
	#SN_room
 "room"

	)

2520 
	#NID_room
 448

	)

2521 
	#OBJ_room
 
OBJ_pûŸObje˘Cœss
,7L

	)

2523 
	#LN_documítSîõs
 "documítSîõs"

	)

2524 
	#NID_documítSîõs
 449

	)

2525 
	#OBJ_documítSîõs
 
OBJ_pûŸObje˘Cœss
,9L

	)

2527 
	#SN_Domaö
 "domaö"

	)

2528 
	#LN_Domaö
 "Domaö"

	)

2529 
	#NID_Domaö
 392

	)

2530 
	#OBJ_Domaö
 
OBJ_pûŸObje˘Cœss
,13L

	)

2532 
	#LN_rFC822loˇlP¨t
 "rFC822loˇlP¨t"

	)

2533 
	#NID_rFC822loˇlP¨t
 450

	)

2534 
	#OBJ_rFC822loˇlP¨t
 
OBJ_pûŸObje˘Cœss
,14L

	)

2536 
	#LN_dNSDomaö
 "dNSDomaö"

	)

2537 
	#NID_dNSDomaö
 451

	)

2538 
	#OBJ_dNSDomaö
 
OBJ_pûŸObje˘Cœss
,15L

	)

2540 
	#LN_domaöRñ©edObje˘
 "domaöRñ©edObje˘"

	)

2541 
	#NID_domaöRñ©edObje˘
 452

	)

2542 
	#OBJ_domaöRñ©edObje˘
 
OBJ_pûŸObje˘Cœss
,17L

	)

2544 
	#LN_‰õndlyCou¡ry
 "‰õndlyCou¡ry"

	)

2545 
	#NID_‰õndlyCou¡ry
 453

	)

2546 
	#OBJ_‰õndlyCou¡ry
 
OBJ_pûŸObje˘Cœss
,18L

	)

2548 
	#LN_sim∂eSecurôyObje˘
 "sim∂eSecurôyObje˘"

	)

2549 
	#NID_sim∂eSecurôyObje˘
 454

	)

2550 
	#OBJ_sim∂eSecurôyObje˘
 
OBJ_pûŸObje˘Cœss
,19L

	)

2552 
	#LN_pûŸOrg™iz©i⁄
 "pûŸOrg™iz©i⁄"

	)

2553 
	#NID_pûŸOrg™iz©i⁄
 455

	)

2554 
	#OBJ_pûŸOrg™iz©i⁄
 
OBJ_pûŸObje˘Cœss
,20L

	)

2556 
	#LN_pûŸDSA
 "pûŸDSA"

	)

2557 
	#NID_pûŸDSA
 456

	)

2558 
	#OBJ_pûŸDSA
 
OBJ_pûŸObje˘Cœss
,21L

	)

2560 
	#LN_quÆôyLabñÀdD©a
 "quÆôyLabñÀdD©a"

	)

2561 
	#NID_quÆôyLabñÀdD©a
 457

	)

2562 
	#OBJ_quÆôyLabñÀdD©a
 
OBJ_pûŸObje˘Cœss
,22L

	)

2564 
	#SN_u£rId
 "UID"

	)

2565 
	#LN_u£rId
 "u£rId"

	)

2566 
	#NID_u£rId
 458

	)

2567 
	#OBJ_u£rId
 
OBJ_pûŸAâribuãTy≥
,1L

	)

2569 
	#LN_ãxtEncodedORAddªss
 "ãxtEncodedORAddªss"

	)

2570 
	#NID_ãxtEncodedORAddªss
 459

	)

2571 
	#OBJ_ãxtEncodedORAddªss
 
OBJ_pûŸAâribuãTy≥
,2L

	)

2573 
	#SN_rfc822Maûbox
 "maû"

	)

2574 
	#LN_rfc822Maûbox
 "rfc822Maûbox"

	)

2575 
	#NID_rfc822Maûbox
 460

	)

2576 
	#OBJ_rfc822Maûbox
 
OBJ_pûŸAâribuãTy≥
,3L

	)

2578 
	#SN_öfo
 "öfo"

	)

2579 
	#NID_öfo
 461

	)

2580 
	#OBJ_öfo
 
OBJ_pûŸAâribuãTy≥
,4L

	)

2582 
	#LN_ÁvourôeDrök
 "ÁvourôeDrök"

	)

2583 
	#NID_ÁvourôeDrök
 462

	)

2584 
	#OBJ_ÁvourôeDrök
 
OBJ_pûŸAâribuãTy≥
,5L

	)

2586 
	#LN_roomNumbî
 "roomNumbî"

	)

2587 
	#NID_roomNumbî
 463

	)

2588 
	#OBJ_roomNumbî
 
OBJ_pûŸAâribuãTy≥
,6L

	)

2590 
	#SN_phŸo
 "phŸo"

	)

2591 
	#NID_phŸo
 464

	)

2592 
	#OBJ_phŸo
 
OBJ_pûŸAâribuãTy≥
,7L

	)

2594 
	#LN_u£rCœss
 "u£rCœss"

	)

2595 
	#NID_u£rCœss
 465

	)

2596 
	#OBJ_u£rCœss
 
OBJ_pûŸAâribuãTy≥
,8L

	)

2598 
	#SN_ho°
 "ho°"

	)

2599 
	#NID_ho°
 466

	)

2600 
	#OBJ_ho°
 
OBJ_pûŸAâribuãTy≥
,9L

	)

2602 
	#SN_m™agî
 "m™agî"

	)

2603 
	#NID_m™agî
 467

	)

2604 
	#OBJ_m™agî
 
OBJ_pûŸAâribuãTy≥
,10L

	)

2606 
	#LN_documítIdítifõr
 "documítIdítifõr"

	)

2607 
	#NID_documítIdítifõr
 468

	)

2608 
	#OBJ_documítIdítifõr
 
OBJ_pûŸAâribuãTy≥
,11L

	)

2610 
	#LN_documítTôÀ
 "documítTôÀ"

	)

2611 
	#NID_documítTôÀ
 469

	)

2612 
	#OBJ_documítTôÀ
 
OBJ_pûŸAâribuãTy≥
,12L

	)

2614 
	#LN_documítVîsi⁄
 "documítVîsi⁄"

	)

2615 
	#NID_documítVîsi⁄
 470

	)

2616 
	#OBJ_documítVîsi⁄
 
OBJ_pûŸAâribuãTy≥
,13L

	)

2618 
	#LN_documítAuth‹
 "documítAuth‹"

	)

2619 
	#NID_documítAuth‹
 471

	)

2620 
	#OBJ_documítAuth‹
 
OBJ_pûŸAâribuãTy≥
,14L

	)

2622 
	#LN_documítLoˇti⁄
 "documítLoˇti⁄"

	)

2623 
	#NID_documítLoˇti⁄
 472

	)

2624 
	#OBJ_documítLoˇti⁄
 
OBJ_pûŸAâribuãTy≥
,15L

	)

2626 
	#LN_homeTñïh⁄eNumbî
 "homeTñïh⁄eNumbî"

	)

2627 
	#NID_homeTñïh⁄eNumbî
 473

	)

2628 
	#OBJ_homeTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,20L

	)

2630 
	#SN_£¸ë¨y
 "£¸ë¨y"

	)

2631 
	#NID_£¸ë¨y
 474

	)

2632 
	#OBJ_£¸ë¨y
 
OBJ_pûŸAâribuãTy≥
,21L

	)

2634 
	#LN_ŸhîMaûbox
 "ŸhîMaûbox"

	)

2635 
	#NID_ŸhîMaûbox
 475

	)

2636 
	#OBJ_ŸhîMaûbox
 
OBJ_pûŸAâribuãTy≥
,22L

	)

2638 
	#LN_œ°ModifõdTime
 "œ°ModifõdTime"

	)

2639 
	#NID_œ°ModifõdTime
 476

	)

2640 
	#OBJ_œ°ModifõdTime
 
OBJ_pûŸAâribuãTy≥
,23L

	)

2642 
	#LN_œ°ModifõdBy
 "œ°ModifõdBy"

	)

2643 
	#NID_œ°ModifõdBy
 477

	)

2644 
	#OBJ_œ°ModifõdBy
 
OBJ_pûŸAâribuãTy≥
,24L

	)

2646 
	#SN_domaöComp⁄ít
 "DC"

	)

2647 
	#LN_domaöComp⁄ít
 "domaöComp⁄ít"

	)

2648 
	#NID_domaöComp⁄ít
 391

	)

2649 
	#OBJ_domaöComp⁄ít
 
OBJ_pûŸAâribuãTy≥
,25L

	)

2651 
	#LN_aRec‹d
 "aRec‹d"

	)

2652 
	#NID_aRec‹d
 478

	)

2653 
	#OBJ_aRec‹d
 
OBJ_pûŸAâribuãTy≥
,26L

	)

2655 
	#LN_pûŸAâribuãTy≥27
 "pûŸAâribuãTy≥27"

	)

2656 
	#NID_pûŸAâribuãTy≥27
 479

	)

2657 
	#OBJ_pûŸAâribuãTy≥27
 
OBJ_pûŸAâribuãTy≥
,27L

	)

2659 
	#LN_mXRec‹d
 "mXRec‹d"

	)

2660 
	#NID_mXRec‹d
 480

	)

2661 
	#OBJ_mXRec‹d
 
OBJ_pûŸAâribuãTy≥
,28L

	)

2663 
	#LN_nSRec‹d
 "nSRec‹d"

	)

2664 
	#NID_nSRec‹d
 481

	)

2665 
	#OBJ_nSRec‹d
 
OBJ_pûŸAâribuãTy≥
,29L

	)

2667 
	#LN_sOARec‹d
 "sOARec‹d"

	)

2668 
	#NID_sOARec‹d
 482

	)

2669 
	#OBJ_sOARec‹d
 
OBJ_pûŸAâribuãTy≥
,30L

	)

2671 
	#LN_cNAMERec‹d
 "cNAMERec‹d"

	)

2672 
	#NID_cNAMERec‹d
 483

	)

2673 
	#OBJ_cNAMERec‹d
 
OBJ_pûŸAâribuãTy≥
,31L

	)

2675 
	#LN_assocüãdDomaö
 "assocüãdDomaö"

	)

2676 
	#NID_assocüãdDomaö
 484

	)

2677 
	#OBJ_assocüãdDomaö
 
OBJ_pûŸAâribuãTy≥
,37L

	)

2679 
	#LN_assocüãdName
 "assocüãdName"

	)

2680 
	#NID_assocüãdName
 485

	)

2681 
	#OBJ_assocüãdName
 
OBJ_pûŸAâribuãTy≥
,38L

	)

2683 
	#LN_homePo°ÆAddªss
 "homePo°ÆAddªss"

	)

2684 
	#NID_homePo°ÆAddªss
 486

	)

2685 
	#OBJ_homePo°ÆAddªss
 
OBJ_pûŸAâribuãTy≥
,39L

	)

2687 
	#LN_≥rs⁄ÆTôÀ
 "≥rs⁄ÆTôÀ"

	)

2688 
	#NID_≥rs⁄ÆTôÀ
 487

	)

2689 
	#OBJ_≥rs⁄ÆTôÀ
 
OBJ_pûŸAâribuãTy≥
,40L

	)

2691 
	#LN_mobûeTñïh⁄eNumbî
 "mobûeTñïh⁄eNumbî"

	)

2692 
	#NID_mobûeTñïh⁄eNumbî
 488

	)

2693 
	#OBJ_mobûeTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,41L

	)

2695 
	#LN_∑gîTñïh⁄eNumbî
 "∑gîTñïh⁄eNumbî"

	)

2696 
	#NID_∑gîTñïh⁄eNumbî
 489

	)

2697 
	#OBJ_∑gîTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,42L

	)

2699 
	#LN_‰õndlyCou¡ryName
 "‰õndlyCou¡ryName"

	)

2700 
	#NID_‰õndlyCou¡ryName
 490

	)

2701 
	#OBJ_‰õndlyCou¡ryName
 
OBJ_pûŸAâribuãTy≥
,43L

	)

2703 
	#LN_‹g™iz©i⁄ÆSètus
 "‹g™iz©i⁄ÆSètus"

	)

2704 
	#NID_‹g™iz©i⁄ÆSètus
 491

	)

2705 
	#OBJ_‹g™iz©i⁄ÆSètus
 
OBJ_pûŸAâribuãTy≥
,45L

	)

2707 
	#LN_j™ëMaûbox
 "j™ëMaûbox"

	)

2708 
	#NID_j™ëMaûbox
 492

	)

2709 
	#OBJ_j™ëMaûbox
 
OBJ_pûŸAâribuãTy≥
,46L

	)

2711 
	#LN_maûPª„ªn˚O±i⁄
 "maûPª„ªn˚O±i⁄"

	)

2712 
	#NID_maûPª„ªn˚O±i⁄
 493

	)

2713 
	#OBJ_maûPª„ªn˚O±i⁄
 
OBJ_pûŸAâribuãTy≥
,47L

	)

2715 
	#LN_buûdögName
 "buûdögName"

	)

2716 
	#NID_buûdögName
 494

	)

2717 
	#OBJ_buûdögName
 
OBJ_pûŸAâribuãTy≥
,48L

	)

2719 
	#LN_dSAQuÆôy
 "dSAQuÆôy"

	)

2720 
	#NID_dSAQuÆôy
 495

	)

2721 
	#OBJ_dSAQuÆôy
 
OBJ_pûŸAâribuãTy≥
,49L

	)

2723 
	#LN_sögÀLevñQuÆôy
 "sögÀLevñQuÆôy"

	)

2724 
	#NID_sögÀLevñQuÆôy
 496

	)

2725 
	#OBJ_sögÀLevñQuÆôy
 
OBJ_pûŸAâribuãTy≥
,50L

	)

2727 
	#LN_subåìMöimumQuÆôy
 "subåìMöimumQuÆôy"

	)

2728 
	#NID_subåìMöimumQuÆôy
 497

	)

2729 
	#OBJ_subåìMöimumQuÆôy
 
OBJ_pûŸAâribuãTy≥
,51L

	)

2731 
	#LN_subåìMaximumQuÆôy
 "subåìMaximumQuÆôy"

	)

2732 
	#NID_subåìMaximumQuÆôy
 498

	)

2733 
	#OBJ_subåìMaximumQuÆôy
 
OBJ_pûŸAâribuãTy≥
,52L

	)

2735 
	#LN_≥rs⁄ÆSig«tuª
 "≥rs⁄ÆSig«tuª"

	)

2736 
	#NID_≥rs⁄ÆSig«tuª
 499

	)

2737 
	#OBJ_≥rs⁄ÆSig«tuª
 
OBJ_pûŸAâribuãTy≥
,53L

	)

2739 
	#LN_dITRedúe˘
 "dITRedúe˘"

	)

2740 
	#NID_dITRedúe˘
 500

	)

2741 
	#OBJ_dITRedúe˘
 
OBJ_pûŸAâribuãTy≥
,54L

	)

2743 
	#SN_audio
 "audio"

	)

2744 
	#NID_audio
 501

	)

2745 
	#OBJ_audio
 
OBJ_pûŸAâribuãTy≥
,55L

	)

2747 
	#LN_documítPublishî
 "documítPublishî"

	)

2748 
	#NID_documítPublishî
 502

	)

2749 
	#OBJ_documítPublishî
 
OBJ_pûŸAâribuãTy≥
,56L

	)

2751 
	#SN_id_£t
 "id-£t"

	)

2752 
	#LN_id_£t
 "Secuª EÀ˘r⁄i¯Tønß˘i⁄s"

	)

2753 
	#NID_id_£t
 512

	)

2754 
	#OBJ_id_£t
 
OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
,42L

	)

2756 
	#SN_£t_˘y≥
 "£t-˘y≥"

	)

2757 
	#LN_£t_˘y≥
 "c⁄ã¡Åy≥s"

	)

2758 
	#NID_£t_˘y≥
 513

	)

2759 
	#OBJ_£t_˘y≥
 
OBJ_id_£t
,0L

	)

2761 
	#SN_£t_msgExt
 "£t-msgExt"

	)

2762 
	#LN_£t_msgExt
 "mesßgêexãnsi⁄s"

	)

2763 
	#NID_£t_msgExt
 514

	)

2764 
	#OBJ_£t_msgExt
 
OBJ_id_£t
,1L

	)

2766 
	#SN_£t_©å
 "£t-©å"

	)

2767 
	#NID_£t_©å
 515

	)

2768 
	#OBJ_£t_©å
 
OBJ_id_£t
,3L

	)

2770 
	#SN_£t_pﬁicy
 "£t-pﬁicy"

	)

2771 
	#NID_£t_pﬁicy
 516

	)

2772 
	#OBJ_£t_pﬁicy
 
OBJ_id_£t
,5L

	)

2774 
	#SN_£t_˚πExt
 "£t-˚πExt"

	)

2775 
	#LN_£t_˚πExt
 "˚πifiˇãÉxãnsi⁄s"

	)

2776 
	#NID_£t_˚πExt
 517

	)

2777 
	#OBJ_£t_˚πExt
 
OBJ_id_£t
,7L

	)

2779 
	#SN_£t_bønd
 "£t-bønd"

	)

2780 
	#NID_£t_bønd
 518

	)

2781 
	#OBJ_£t_bønd
 
OBJ_id_£t
,8L

	)

2783 
	#SN_£t˘_PAND©a
 "£t˘-PAND©a"

	)

2784 
	#NID_£t˘_PAND©a
 519

	)

2785 
	#OBJ_£t˘_PAND©a
 
OBJ_£t_˘y≥
,0L

	)

2787 
	#SN_£t˘_PANTokí
 "£t˘-PANTokí"

	)

2788 
	#NID_£t˘_PANTokí
 520

	)

2789 
	#OBJ_£t˘_PANTokí
 
OBJ_£t_˘y≥
,1L

	)

2791 
	#SN_£t˘_PANO∆y
 "£t˘-PANO∆y"

	)

2792 
	#NID_£t˘_PANO∆y
 521

	)

2793 
	#OBJ_£t˘_PANO∆y
 
OBJ_£t_˘y≥
,2L

	)

2795 
	#SN_£t˘_OID©a
 "£t˘-OID©a"

	)

2796 
	#NID_£t˘_OID©a
 522

	)

2797 
	#OBJ_£t˘_OID©a
 
OBJ_£t_˘y≥
,3L

	)

2799 
	#SN_£t˘_PI
 "£t˘-PI"

	)

2800 
	#NID_£t˘_PI
 523

	)

2801 
	#OBJ_£t˘_PI
 
OBJ_£t_˘y≥
,4L

	)

2803 
	#SN_£t˘_PID©a
 "£t˘-PID©a"

	)

2804 
	#NID_£t˘_PID©a
 524

	)

2805 
	#OBJ_£t˘_PID©a
 
OBJ_£t_˘y≥
,5L

	)

2807 
	#SN_£t˘_PID©aUnsig√d
 "£t˘-PID©aUnsig√d"

	)

2808 
	#NID_£t˘_PID©aUnsig√d
 525

	)

2809 
	#OBJ_£t˘_PID©aUnsig√d
 
OBJ_£t_˘y≥
,6L

	)

2811 
	#SN_£t˘_HODI≈ut
 "£t˘-HODI≈ut"

	)

2812 
	#NID_£t˘_HODI≈ut
 526

	)

2813 
	#OBJ_£t˘_HODI≈ut
 
OBJ_£t_˘y≥
,7L

	)

2815 
	#SN_£t˘_AuthResBaggage
 "£t˘-AuthResBaggage"

	)

2816 
	#NID_£t˘_AuthResBaggage
 527

	)

2817 
	#OBJ_£t˘_AuthResBaggage
 
OBJ_£t_˘y≥
,8L

	)

2819 
	#SN_£t˘_AuthRevReqBaggage
 "£t˘-AuthRevReqBaggage"

	)

2820 
	#NID_£t˘_AuthRevReqBaggage
 528

	)

2821 
	#OBJ_£t˘_AuthRevReqBaggage
 
OBJ_£t_˘y≥
,9L

	)

2823 
	#SN_£t˘_AuthRevResBaggage
 "£t˘-AuthRevResBaggage"

	)

2824 
	#NID_£t˘_AuthRevResBaggage
 529

	)

2825 
	#OBJ_£t˘_AuthRevResBaggage
 
OBJ_£t_˘y≥
,10L

	)

2827 
	#SN_£t˘_C≠TokíSeq
 "£t˘-C≠TokíSeq"

	)

2828 
	#NID_£t˘_C≠TokíSeq
 530

	)

2829 
	#OBJ_£t˘_C≠TokíSeq
 
OBJ_£t_˘y≥
,11L

	)

2831 
	#SN_£t˘_PInôResD©a
 "£t˘-PInôResD©a"

	)

2832 
	#NID_£t˘_PInôResD©a
 531

	)

2833 
	#OBJ_£t˘_PInôResD©a
 
OBJ_£t_˘y≥
,12L

	)

2835 
	#SN_£t˘_PI_TBS
 "£t˘-PI-TBS"

	)

2836 
	#NID_£t˘_PI_TBS
 532

	)

2837 
	#OBJ_£t˘_PI_TBS
 
OBJ_£t_˘y≥
,13L

	)

2839 
	#SN_£t˘_PResD©a
 "£t˘-PResD©a"

	)

2840 
	#NID_£t˘_PResD©a
 533

	)

2841 
	#OBJ_£t˘_PResD©a
 
OBJ_£t_˘y≥
,14L

	)

2843 
	#SN_£t˘_AuthReqTBS
 "£t˘-AuthReqTBS"

	)

2844 
	#NID_£t˘_AuthReqTBS
 534

	)

2845 
	#OBJ_£t˘_AuthReqTBS
 
OBJ_£t_˘y≥
,16L

	)

2847 
	#SN_£t˘_AuthResTBS
 "£t˘-AuthResTBS"

	)

2848 
	#NID_£t˘_AuthResTBS
 535

	)

2849 
	#OBJ_£t˘_AuthResTBS
 
OBJ_£t_˘y≥
,17L

	)

2851 
	#SN_£t˘_AuthResTBSX
 "£t˘-AuthResTBSX"

	)

2852 
	#NID_£t˘_AuthResTBSX
 536

	)

2853 
	#OBJ_£t˘_AuthResTBSX
 
OBJ_£t_˘y≥
,18L

	)

2855 
	#SN_£t˘_AuthTokíTBS
 "£t˘-AuthTokíTBS"

	)

2856 
	#NID_£t˘_AuthTokíTBS
 537

	)

2857 
	#OBJ_£t˘_AuthTokíTBS
 
OBJ_£t_˘y≥
,19L

	)

2859 
	#SN_£t˘_C≠TokíD©a
 "£t˘-C≠TokíD©a"

	)

2860 
	#NID_£t˘_C≠TokíD©a
 538

	)

2861 
	#OBJ_£t˘_C≠TokíD©a
 
OBJ_£t_˘y≥
,20L

	)

2863 
	#SN_£t˘_C≠TokíTBS
 "£t˘-C≠TokíTBS"

	)

2864 
	#NID_£t˘_C≠TokíTBS
 539

	)

2865 
	#OBJ_£t˘_C≠TokíTBS
 
OBJ_£t_˘y≥
,21L

	)

2867 
	#SN_£t˘_AcqC¨dCodeMsg
 "£t˘-AcqC¨dCodeMsg"

	)

2868 
	#NID_£t˘_AcqC¨dCodeMsg
 540

	)

2869 
	#OBJ_£t˘_AcqC¨dCodeMsg
 
OBJ_£t_˘y≥
,22L

	)

2871 
	#SN_£t˘_AuthRevReqTBS
 "£t˘-AuthRevReqTBS"

	)

2872 
	#NID_£t˘_AuthRevReqTBS
 541

	)

2873 
	#OBJ_£t˘_AuthRevReqTBS
 
OBJ_£t_˘y≥
,23L

	)

2875 
	#SN_£t˘_AuthRevResD©a
 "£t˘-AuthRevResD©a"

	)

2876 
	#NID_£t˘_AuthRevResD©a
 542

	)

2877 
	#OBJ_£t˘_AuthRevResD©a
 
OBJ_£t_˘y≥
,24L

	)

2879 
	#SN_£t˘_AuthRevResTBS
 "£t˘-AuthRevResTBS"

	)

2880 
	#NID_£t˘_AuthRevResTBS
 543

	)

2881 
	#OBJ_£t˘_AuthRevResTBS
 
OBJ_£t_˘y≥
,25L

	)

2883 
	#SN_£t˘_C≠ReqTBS
 "£t˘-C≠ReqTBS"

	)

2884 
	#NID_£t˘_C≠ReqTBS
 544

	)

2885 
	#OBJ_£t˘_C≠ReqTBS
 
OBJ_£t_˘y≥
,26L

	)

2887 
	#SN_£t˘_C≠ReqTBSX
 "£t˘-C≠ReqTBSX"

	)

2888 
	#NID_£t˘_C≠ReqTBSX
 545

	)

2889 
	#OBJ_£t˘_C≠ReqTBSX
 
OBJ_£t_˘y≥
,27L

	)

2891 
	#SN_£t˘_C≠ResD©a
 "£t˘-C≠ResD©a"

	)

2892 
	#NID_£t˘_C≠ResD©a
 546

	)

2893 
	#OBJ_£t˘_C≠ResD©a
 
OBJ_£t_˘y≥
,28L

	)

2895 
	#SN_£t˘_C≠RevReqTBS
 "£t˘-C≠RevReqTBS"

	)

2896 
	#NID_£t˘_C≠RevReqTBS
 547

	)

2897 
	#OBJ_£t˘_C≠RevReqTBS
 
OBJ_£t_˘y≥
,29L

	)

2899 
	#SN_£t˘_C≠RevReqTBSX
 "£t˘-C≠RevReqTBSX"

	)

2900 
	#NID_£t˘_C≠RevReqTBSX
 548

	)

2901 
	#OBJ_£t˘_C≠RevReqTBSX
 
OBJ_£t_˘y≥
,30L

	)

2903 
	#SN_£t˘_C≠RevResD©a
 "£t˘-C≠RevResD©a"

	)

2904 
	#NID_£t˘_C≠RevResD©a
 549

	)

2905 
	#OBJ_£t˘_C≠RevResD©a
 
OBJ_£t_˘y≥
,31L

	)

2907 
	#SN_£t˘_CªdReqTBS
 "£t˘-CªdReqTBS"

	)

2908 
	#NID_£t˘_CªdReqTBS
 550

	)

2909 
	#OBJ_£t˘_CªdReqTBS
 
OBJ_£t_˘y≥
,32L

	)

2911 
	#SN_£t˘_CªdReqTBSX
 "£t˘-CªdReqTBSX"

	)

2912 
	#NID_£t˘_CªdReqTBSX
 551

	)

2913 
	#OBJ_£t˘_CªdReqTBSX
 
OBJ_£t_˘y≥
,33L

	)

2915 
	#SN_£t˘_CªdResD©a
 "£t˘-CªdResD©a"

	)

2916 
	#NID_£t˘_CªdResD©a
 552

	)

2917 
	#OBJ_£t˘_CªdResD©a
 
OBJ_£t_˘y≥
,34L

	)

2919 
	#SN_£t˘_CªdRevReqTBS
 "£t˘-CªdRevReqTBS"

	)

2920 
	#NID_£t˘_CªdRevReqTBS
 553

	)

2921 
	#OBJ_£t˘_CªdRevReqTBS
 
OBJ_£t_˘y≥
,35L

	)

2923 
	#SN_£t˘_CªdRevReqTBSX
 "£t˘-CªdRevReqTBSX"

	)

2924 
	#NID_£t˘_CªdRevReqTBSX
 554

	)

2925 
	#OBJ_£t˘_CªdRevReqTBSX
 
OBJ_£t_˘y≥
,36L

	)

2927 
	#SN_£t˘_CªdRevResD©a
 "£t˘-CªdRevResD©a"

	)

2928 
	#NID_£t˘_CªdRevResD©a
 555

	)

2929 
	#OBJ_£t˘_CªdRevResD©a
 
OBJ_£t_˘y≥
,37L

	)

2931 
	#SN_£t˘_PCîtReqD©a
 "£t˘-PCîtReqD©a"

	)

2932 
	#NID_£t˘_PCîtReqD©a
 556

	)

2933 
	#OBJ_£t˘_PCîtReqD©a
 
OBJ_£t_˘y≥
,38L

	)

2935 
	#SN_£t˘_PCîtResTBS
 "£t˘-PCîtResTBS"

	)

2936 
	#NID_£t˘_PCîtResTBS
 557

	)

2937 
	#OBJ_£t˘_PCîtResTBS
 
OBJ_£t_˘y≥
,39L

	)

2939 
	#SN_£t˘_B©chAdmöReqD©a
 "£t˘-B©chAdmöReqD©a"

	)

2940 
	#NID_£t˘_B©chAdmöReqD©a
 558

	)

2941 
	#OBJ_£t˘_B©chAdmöReqD©a
 
OBJ_£t_˘y≥
,40L

	)

2943 
	#SN_£t˘_B©chAdmöResD©a
 "£t˘-B©chAdmöResD©a"

	)

2944 
	#NID_£t˘_B©chAdmöResD©a
 559

	)

2945 
	#OBJ_£t˘_B©chAdmöResD©a
 
OBJ_£t_˘y≥
,41L

	)

2947 
	#SN_£t˘_C¨dCInôResTBS
 "£t˘-C¨dCInôResTBS"

	)

2948 
	#NID_£t˘_C¨dCInôResTBS
 560

	)

2949 
	#OBJ_£t˘_C¨dCInôResTBS
 
OBJ_£t_˘y≥
,42L

	)

2951 
	#SN_£t˘_MeAqCInôResTBS
 "£t˘-MeAqCInôResTBS"

	)

2952 
	#NID_£t˘_MeAqCInôResTBS
 561

	)

2953 
	#OBJ_£t˘_MeAqCInôResTBS
 
OBJ_£t_˘y≥
,43L

	)

2955 
	#SN_£t˘_RegF‹mResTBS
 "£t˘-RegF‹mResTBS"

	)

2956 
	#NID_£t˘_RegF‹mResTBS
 562

	)

2957 
	#OBJ_£t˘_RegF‹mResTBS
 
OBJ_£t_˘y≥
,44L

	)

2959 
	#SN_£t˘_CîtReqD©a
 "£t˘-CîtReqD©a"

	)

2960 
	#NID_£t˘_CîtReqD©a
 563

	)

2961 
	#OBJ_£t˘_CîtReqD©a
 
OBJ_£t_˘y≥
,45L

	)

2963 
	#SN_£t˘_CîtReqTBS
 "£t˘-CîtReqTBS"

	)

2964 
	#NID_£t˘_CîtReqTBS
 564

	)

2965 
	#OBJ_£t˘_CîtReqTBS
 
OBJ_£t_˘y≥
,46L

	)

2967 
	#SN_£t˘_CîtResD©a
 "£t˘-CîtResD©a"

	)

2968 
	#NID_£t˘_CîtResD©a
 565

	)

2969 
	#OBJ_£t˘_CîtResD©a
 
OBJ_£t_˘y≥
,47L

	)

2971 
	#SN_£t˘_CîtInqReqTBS
 "£t˘-CîtInqReqTBS"

	)

2972 
	#NID_£t˘_CîtInqReqTBS
 566

	)

2973 
	#OBJ_£t˘_CîtInqReqTBS
 
OBJ_£t_˘y≥
,48L

	)

2975 
	#SN_£t˘_Eº‹TBS
 "£t˘-Eº‹TBS"

	)

2976 
	#NID_£t˘_Eº‹TBS
 567

	)

2977 
	#OBJ_£t˘_Eº‹TBS
 
OBJ_£t_˘y≥
,49L

	)

2979 
	#SN_£t˘_PIDuÆSig√dTBE
 "£t˘-PIDuÆSig√dTBE"

	)

2980 
	#NID_£t˘_PIDuÆSig√dTBE
 568

	)

2981 
	#OBJ_£t˘_PIDuÆSig√dTBE
 
OBJ_£t_˘y≥
,50L

	)

2983 
	#SN_£t˘_PIUnsig√dTBE
 "£t˘-PIUnsig√dTBE"

	)

2984 
	#NID_£t˘_PIUnsig√dTBE
 569

	)

2985 
	#OBJ_£t˘_PIUnsig√dTBE
 
OBJ_£t_˘y≥
,51L

	)

2987 
	#SN_£t˘_AuthReqTBE
 "£t˘-AuthReqTBE"

	)

2988 
	#NID_£t˘_AuthReqTBE
 570

	)

2989 
	#OBJ_£t˘_AuthReqTBE
 
OBJ_£t_˘y≥
,52L

	)

2991 
	#SN_£t˘_AuthResTBE
 "£t˘-AuthResTBE"

	)

2992 
	#NID_£t˘_AuthResTBE
 571

	)

2993 
	#OBJ_£t˘_AuthResTBE
 
OBJ_£t_˘y≥
,53L

	)

2995 
	#SN_£t˘_AuthResTBEX
 "£t˘-AuthResTBEX"

	)

2996 
	#NID_£t˘_AuthResTBEX
 572

	)

2997 
	#OBJ_£t˘_AuthResTBEX
 
OBJ_£t_˘y≥
,54L

	)

2999 
	#SN_£t˘_AuthTokíTBE
 "£t˘-AuthTokíTBE"

	)

3000 
	#NID_£t˘_AuthTokíTBE
 573

	)

3001 
	#OBJ_£t˘_AuthTokíTBE
 
OBJ_£t_˘y≥
,55L

	)

3003 
	#SN_£t˘_C≠TokíTBE
 "£t˘-C≠TokíTBE"

	)

3004 
	#NID_£t˘_C≠TokíTBE
 574

	)

3005 
	#OBJ_£t˘_C≠TokíTBE
 
OBJ_£t_˘y≥
,56L

	)

3007 
	#SN_£t˘_C≠TokíTBEX
 "£t˘-C≠TokíTBEX"

	)

3008 
	#NID_£t˘_C≠TokíTBEX
 575

	)

3009 
	#OBJ_£t˘_C≠TokíTBEX
 
OBJ_£t_˘y≥
,57L

	)

3011 
	#SN_£t˘_AcqC¨dCodeMsgTBE
 "£t˘-AcqC¨dCodeMsgTBE"

	)

3012 
	#NID_£t˘_AcqC¨dCodeMsgTBE
 576

	)

3013 
	#OBJ_£t˘_AcqC¨dCodeMsgTBE
 
OBJ_£t_˘y≥
,58L

	)

3015 
	#SN_£t˘_AuthRevReqTBE
 "£t˘-AuthRevReqTBE"

	)

3016 
	#NID_£t˘_AuthRevReqTBE
 577

	)

3017 
	#OBJ_£t˘_AuthRevReqTBE
 
OBJ_£t_˘y≥
,59L

	)

3019 
	#SN_£t˘_AuthRevResTBE
 "£t˘-AuthRevResTBE"

	)

3020 
	#NID_£t˘_AuthRevResTBE
 578

	)

3021 
	#OBJ_£t˘_AuthRevResTBE
 
OBJ_£t_˘y≥
,60L

	)

3023 
	#SN_£t˘_AuthRevResTBEB
 "£t˘-AuthRevResTBEB"

	)

3024 
	#NID_£t˘_AuthRevResTBEB
 579

	)

3025 
	#OBJ_£t˘_AuthRevResTBEB
 
OBJ_£t_˘y≥
,61L

	)

3027 
	#SN_£t˘_C≠ReqTBE
 "£t˘-C≠ReqTBE"

	)

3028 
	#NID_£t˘_C≠ReqTBE
 580

	)

3029 
	#OBJ_£t˘_C≠ReqTBE
 
OBJ_£t_˘y≥
,62L

	)

3031 
	#SN_£t˘_C≠ReqTBEX
 "£t˘-C≠ReqTBEX"

	)

3032 
	#NID_£t˘_C≠ReqTBEX
 581

	)

3033 
	#OBJ_£t˘_C≠ReqTBEX
 
OBJ_£t_˘y≥
,63L

	)

3035 
	#SN_£t˘_C≠ResTBE
 "£t˘-C≠ResTBE"

	)

3036 
	#NID_£t˘_C≠ResTBE
 582

	)

3037 
	#OBJ_£t˘_C≠ResTBE
 
OBJ_£t_˘y≥
,64L

	)

3039 
	#SN_£t˘_C≠RevReqTBE
 "£t˘-C≠RevReqTBE"

	)

3040 
	#NID_£t˘_C≠RevReqTBE
 583

	)

3041 
	#OBJ_£t˘_C≠RevReqTBE
 
OBJ_£t_˘y≥
,65L

	)

3043 
	#SN_£t˘_C≠RevReqTBEX
 "£t˘-C≠RevReqTBEX"

	)

3044 
	#NID_£t˘_C≠RevReqTBEX
 584

	)

3045 
	#OBJ_£t˘_C≠RevReqTBEX
 
OBJ_£t_˘y≥
,66L

	)

3047 
	#SN_£t˘_C≠RevResTBE
 "£t˘-C≠RevResTBE"

	)

3048 
	#NID_£t˘_C≠RevResTBE
 585

	)

3049 
	#OBJ_£t˘_C≠RevResTBE
 
OBJ_£t_˘y≥
,67L

	)

3051 
	#SN_£t˘_CªdReqTBE
 "£t˘-CªdReqTBE"

	)

3052 
	#NID_£t˘_CªdReqTBE
 586

	)

3053 
	#OBJ_£t˘_CªdReqTBE
 
OBJ_£t_˘y≥
,68L

	)

3055 
	#SN_£t˘_CªdReqTBEX
 "£t˘-CªdReqTBEX"

	)

3056 
	#NID_£t˘_CªdReqTBEX
 587

	)

3057 
	#OBJ_£t˘_CªdReqTBEX
 
OBJ_£t_˘y≥
,69L

	)

3059 
	#SN_£t˘_CªdResTBE
 "£t˘-CªdResTBE"

	)

3060 
	#NID_£t˘_CªdResTBE
 588

	)

3061 
	#OBJ_£t˘_CªdResTBE
 
OBJ_£t_˘y≥
,70L

	)

3063 
	#SN_£t˘_CªdRevReqTBE
 "£t˘-CªdRevReqTBE"

	)

3064 
	#NID_£t˘_CªdRevReqTBE
 589

	)

3065 
	#OBJ_£t˘_CªdRevReqTBE
 
OBJ_£t_˘y≥
,71L

	)

3067 
	#SN_£t˘_CªdRevReqTBEX
 "£t˘-CªdRevReqTBEX"

	)

3068 
	#NID_£t˘_CªdRevReqTBEX
 590

	)

3069 
	#OBJ_£t˘_CªdRevReqTBEX
 
OBJ_£t_˘y≥
,72L

	)

3071 
	#SN_£t˘_CªdRevResTBE
 "£t˘-CªdRevResTBE"

	)

3072 
	#NID_£t˘_CªdRevResTBE
 591

	)

3073 
	#OBJ_£t˘_CªdRevResTBE
 
OBJ_£t_˘y≥
,73L

	)

3075 
	#SN_£t˘_B©chAdmöReqTBE
 "£t˘-B©chAdmöReqTBE"

	)

3076 
	#NID_£t˘_B©chAdmöReqTBE
 592

	)

3077 
	#OBJ_£t˘_B©chAdmöReqTBE
 
OBJ_£t_˘y≥
,74L

	)

3079 
	#SN_£t˘_B©chAdmöResTBE
 "£t˘-B©chAdmöResTBE"

	)

3080 
	#NID_£t˘_B©chAdmöResTBE
 593

	)

3081 
	#OBJ_£t˘_B©chAdmöResTBE
 
OBJ_£t_˘y≥
,75L

	)

3083 
	#SN_£t˘_RegF‹mReqTBE
 "£t˘-RegF‹mReqTBE"

	)

3084 
	#NID_£t˘_RegF‹mReqTBE
 594

	)

3085 
	#OBJ_£t˘_RegF‹mReqTBE
 
OBJ_£t_˘y≥
,76L

	)

3087 
	#SN_£t˘_CîtReqTBE
 "£t˘-CîtReqTBE"

	)

3088 
	#NID_£t˘_CîtReqTBE
 595

	)

3089 
	#OBJ_£t˘_CîtReqTBE
 
OBJ_£t_˘y≥
,77L

	)

3091 
	#SN_£t˘_CîtReqTBEX
 "£t˘-CîtReqTBEX"

	)

3092 
	#NID_£t˘_CîtReqTBEX
 596

	)

3093 
	#OBJ_£t˘_CîtReqTBEX
 
OBJ_£t_˘y≥
,78L

	)

3095 
	#SN_£t˘_CîtResTBE
 "£t˘-CîtResTBE"

	)

3096 
	#NID_£t˘_CîtResTBE
 597

	)

3097 
	#OBJ_£t˘_CîtResTBE
 
OBJ_£t_˘y≥
,79L

	)

3099 
	#SN_£t˘_CRLNŸifiˇti⁄TBS
 "£t˘-CRLNŸifiˇti⁄TBS"

	)

3100 
	#NID_£t˘_CRLNŸifiˇti⁄TBS
 598

	)

3101 
	#OBJ_£t˘_CRLNŸifiˇti⁄TBS
 
OBJ_£t_˘y≥
,80L

	)

3103 
	#SN_£t˘_CRLNŸifiˇti⁄ResTBS
 "£t˘-CRLNŸifiˇti⁄ResTBS"

	)

3104 
	#NID_£t˘_CRLNŸifiˇti⁄ResTBS
 599

	)

3105 
	#OBJ_£t˘_CRLNŸifiˇti⁄ResTBS
 
OBJ_£t_˘y≥
,81L

	)

3107 
	#SN_£t˘_BCIDi°ributi⁄TBS
 "£t˘-BCIDi°ributi⁄TBS"

	)

3108 
	#NID_£t˘_BCIDi°ributi⁄TBS
 600

	)

3109 
	#OBJ_£t˘_BCIDi°ributi⁄TBS
 
OBJ_£t_˘y≥
,82L

	)

3111 
	#SN_£ãxt_gíCry±
 "£ãxt-gíCry±"

	)

3112 
	#LN_£ãxt_gíCry±
 "gíîi¯¸y±ogøm"

	)

3113 
	#NID_£ãxt_gíCry±
 601

	)

3114 
	#OBJ_£ãxt_gíCry±
 
OBJ_£t_msgExt
,1L

	)

3116 
	#SN_£ãxt_miAuth
 "£ãxt-miAuth"

	)

3117 
	#LN_£ãxt_miAuth
 "mîch™àöôüãdáuth"

	)

3118 
	#NID_£ãxt_miAuth
 602

	)

3119 
	#OBJ_£ãxt_miAuth
 
OBJ_£t_msgExt
,3L

	)

3121 
	#SN_£ãxt_pöSecuª
 "£ãxt-pöSecuª"

	)

3122 
	#NID_£ãxt_pöSecuª
 603

	)

3123 
	#OBJ_£ãxt_pöSecuª
 
OBJ_£t_msgExt
,4L

	)

3125 
	#SN_£ãxt_pöAny
 "£ãxt-pöAny"

	)

3126 
	#NID_£ãxt_pöAny
 604

	)

3127 
	#OBJ_£ãxt_pöAny
 
OBJ_£t_msgExt
,5L

	)

3129 
	#SN_£ãxt_åack2
 "£ãxt-åack2"

	)

3130 
	#NID_£ãxt_åack2
 605

	)

3131 
	#OBJ_£ãxt_åack2
 
OBJ_£t_msgExt
,7L

	)

3133 
	#SN_£ãxt_cv
 "£ãxt-cv"

	)

3134 
	#LN_£ãxt_cv
 "addôi⁄Æ vîifiˇti⁄"

	)

3135 
	#NID_£ãxt_cv
 606

	)

3136 
	#OBJ_£ãxt_cv
 
OBJ_£t_msgExt
,8L

	)

3138 
	#SN_£t_pﬁicy_roŸ
 "£t-pﬁicy-roŸ"

	)

3139 
	#NID_£t_pﬁicy_roŸ
 607

	)

3140 
	#OBJ_£t_pﬁicy_roŸ
 
OBJ_£t_pﬁicy
,0L

	)

3142 
	#SN_£tCext_hashedRoŸ
 "£tCext-hashedRoŸ"

	)

3143 
	#NID_£tCext_hashedRoŸ
 608

	)

3144 
	#OBJ_£tCext_hashedRoŸ
 
OBJ_£t_˚πExt
,0L

	)

3146 
	#SN_£tCext_˚πTy≥
 "£tCext-˚πTy≥"

	)

3147 
	#NID_£tCext_˚πTy≥
 609

	)

3148 
	#OBJ_£tCext_˚πTy≥
 
OBJ_£t_˚πExt
,1L

	)

3150 
	#SN_£tCext_mîchD©a
 "£tCext-mîchD©a"

	)

3151 
	#NID_£tCext_mîchD©a
 610

	)

3152 
	#OBJ_£tCext_mîchD©a
 
OBJ_£t_˚πExt
,2L

	)

3154 
	#SN_£tCext_cCîtRequúed
 "£tCext-cCîtRequúed"

	)

3155 
	#NID_£tCext_cCîtRequúed
 611

	)

3156 
	#OBJ_£tCext_cCîtRequúed
 
OBJ_£t_˚πExt
,3L

	)

3158 
	#SN_£tCext_tu¬ñög
 "£tCext-tu¬ñög"

	)

3159 
	#NID_£tCext_tu¬ñög
 612

	)

3160 
	#OBJ_£tCext_tu¬ñög
 
OBJ_£t_˚πExt
,4L

	)

3162 
	#SN_£tCext_£tExt
 "£tCext-£tExt"

	)

3163 
	#NID_£tCext_£tExt
 613

	)

3164 
	#OBJ_£tCext_£tExt
 
OBJ_£t_˚πExt
,5L

	)

3166 
	#SN_£tCext_£tQuÆf
 "£tCext-£tQuÆf"

	)

3167 
	#NID_£tCext_£tQuÆf
 614

	)

3168 
	#OBJ_£tCext_£tQuÆf
 
OBJ_£t_˚πExt
,6L

	)

3170 
	#SN_£tCext_PGWYˇ∑bûôõs
 "£tCext-PGWYˇ∑bûôõs"

	)

3171 
	#NID_£tCext_PGWYˇ∑bûôõs
 615

	)

3172 
	#OBJ_£tCext_PGWYˇ∑bûôõs
 
OBJ_£t_˚πExt
,7L

	)

3174 
	#SN_£tCext_TokíIdítifõr
 "£tCext-TokíIdítifõr"

	)

3175 
	#NID_£tCext_TokíIdítifõr
 616

	)

3176 
	#OBJ_£tCext_TokíIdítifõr
 
OBJ_£t_˚πExt
,8L

	)

3178 
	#SN_£tCext_Tøck2D©a
 "£tCext-Tøck2D©a"

	)

3179 
	#NID_£tCext_Tøck2D©a
 617

	)

3180 
	#OBJ_£tCext_Tøck2D©a
 
OBJ_£t_˚πExt
,9L

	)

3182 
	#SN_£tCext_TokíTy≥
 "£tCext-TokíTy≥"

	)

3183 
	#NID_£tCext_TokíTy≥
 618

	)

3184 
	#OBJ_£tCext_TokíTy≥
 
OBJ_£t_˚πExt
,10L

	)

3186 
	#SN_£tCext_IssuîC≠abûôõs
 "£tCext-IssuîC≠abûôõs"

	)

3187 
	#NID_£tCext_IssuîC≠abûôõs
 619

	)

3188 
	#OBJ_£tCext_IssuîC≠abûôõs
 
OBJ_£t_˚πExt
,11L

	)

3190 
	#SN_£tAâr_Cît
 "£tAâr-Cît"

	)

3191 
	#NID_£tAâr_Cît
 620

	)

3192 
	#OBJ_£tAâr_Cît
 
OBJ_£t_©å
,0L

	)

3194 
	#SN_£tAâr_PGWYˇp
 "£tAâr-PGWYˇp"

	)

3195 
	#LN_£tAâr_PGWYˇp
 "∑ymíàg©eway c≠abûôõs"

	)

3196 
	#NID_£tAâr_PGWYˇp
 621

	)

3197 
	#OBJ_£tAâr_PGWYˇp
 
OBJ_£t_©å
,1L

	)

3199 
	#SN_£tAâr_TokíTy≥
 "£tAâr-TokíTy≥"

	)

3200 
	#NID_£tAâr_TokíTy≥
 622

	)

3201 
	#OBJ_£tAâr_TokíTy≥
 
OBJ_£t_©å
,2L

	)

3203 
	#SN_£tAâr_IssC≠
 "£tAâr-IssC≠"

	)

3204 
	#LN_£tAâr_IssC≠
 "issuî c≠abûôõs"

	)

3205 
	#NID_£tAâr_IssC≠
 623

	)

3206 
	#OBJ_£tAâr_IssC≠
 
OBJ_£t_©å
,3L

	)

3208 
	#SN_£t_roŸKeyThumb
 "£t-roŸKeyThumb"

	)

3209 
	#NID_£t_roŸKeyThumb
 624

	)

3210 
	#OBJ_£t_roŸKeyThumb
 
OBJ_£tAâr_Cît
,0L

	)

3212 
	#SN_£t_addPﬁicy
 "£t-addPﬁicy"

	)

3213 
	#NID_£t_addPﬁicy
 625

	)

3214 
	#OBJ_£t_addPﬁicy
 
OBJ_£tAâr_Cît
,1L

	)

3216 
	#SN_£tAâr_Tokí_EMV
 "£tAâr-Tokí-EMV"

	)

3217 
	#NID_£tAâr_Tokí_EMV
 626

	)

3218 
	#OBJ_£tAâr_Tokí_EMV
 
OBJ_£tAâr_TokíTy≥
,1L

	)

3220 
	#SN_£tAâr_Tokí_B0Prime
 "£tAâr-Tokí-B0Prime"

	)

3221 
	#NID_£tAâr_Tokí_B0Prime
 627

	)

3222 
	#OBJ_£tAâr_Tokí_B0Prime
 
OBJ_£tAâr_TokíTy≥
,2L

	)

3224 
	#SN_£tAâr_IssC≠_CVM
 "£tAâr-IssC≠-CVM"

	)

3225 
	#NID_£tAâr_IssC≠_CVM
 628

	)

3226 
	#OBJ_£tAâr_IssC≠_CVM
 
OBJ_£tAâr_IssC≠
,3L

	)

3228 
	#SN_£tAâr_IssC≠_T2
 "£tAâr-IssC≠-T2"

	)

3229 
	#NID_£tAâr_IssC≠_T2
 629

	)

3230 
	#OBJ_£tAâr_IssC≠_T2
 
OBJ_£tAâr_IssC≠
,4L

	)

3232 
	#SN_£tAâr_IssC≠_Sig
 "£tAâr-IssC≠-Sig"

	)

3233 
	#NID_£tAâr_IssC≠_Sig
 630

	)

3234 
	#OBJ_£tAâr_IssC≠_Sig
 
OBJ_£tAâr_IssC≠
,5L

	)

3236 
	#SN_£tAâr_GíCry±grm
 "£tAâr-GíCry±grm"

	)

3237 
	#LN_£tAâr_GíCry±grm
 "gíî©ê¸y±ogøm"

	)

3238 
	#NID_£tAâr_GíCry±grm
 631

	)

3239 
	#OBJ_£tAâr_GíCry±grm
 
OBJ_£tAâr_IssC≠_CVM
,1L

	)

3241 
	#SN_£tAâr_T2Enc
 "£tAâr-T2Enc"

	)

3242 
	#LN_£tAâr_T2Enc
 "í¸y±edÅøck 2"

	)

3243 
	#NID_£tAâr_T2Enc
 632

	)

3244 
	#OBJ_£tAâr_T2Enc
 
OBJ_£tAâr_IssC≠_T2
,1L

	)

3246 
	#SN_£tAâr_T2˛óπxt
 "£tAâr-T2˛óπxt"

	)

3247 
	#LN_£tAâr_T2˛óπxt
 "˛óπexàåack 2"

	)

3248 
	#NID_£tAâr_T2˛óπxt
 633

	)

3249 
	#OBJ_£tAâr_T2˛óπxt
 
OBJ_£tAâr_IssC≠_T2
,2L

	)

3251 
	#SN_£tAâr_TokICCsig
 "£tAâr-TokICCsig"

	)

3252 
	#LN_£tAâr_TokICCsig
 "ICC o∏tokí sig«tuª"

	)

3253 
	#NID_£tAâr_TokICCsig
 634

	)

3254 
	#OBJ_£tAâr_TokICCsig
 
OBJ_£tAâr_IssC≠_Sig
,1L

	)

3256 
	#SN_£tAâr_SecDevSig
 "£tAâr-SecDevSig"

	)

3257 
	#LN_£tAâr_SecDevSig
 "£cuª devi˚ sig«tuª"

	)

3258 
	#NID_£tAâr_SecDevSig
 635

	)

3259 
	#OBJ_£tAâr_SecDevSig
 
OBJ_£tAâr_IssC≠_Sig
,2L

	)

3261 
	#SN_£t_bønd_IATA_ATA
 "£t-bønd-IATA-ATA"

	)

3262 
	#NID_£t_bønd_IATA_ATA
 636

	)

3263 
	#OBJ_£t_bønd_IATA_ATA
 
OBJ_£t_bønd
,1L

	)

3265 
	#SN_£t_bønd_Döîs
 "£t-bønd-Döîs"

	)

3266 
	#NID_£t_bønd_Döîs
 637

	)

3267 
	#OBJ_£t_bønd_Döîs
 
OBJ_£t_bønd
,30L

	)

3269 
	#SN_£t_bønd_AmîiˇnEx¥ess
 "£t-bønd-AmîiˇnEx¥ess"

	)

3270 
	#NID_£t_bønd_AmîiˇnEx¥ess
 638

	)

3271 
	#OBJ_£t_bønd_AmîiˇnEx¥ess
 
OBJ_£t_bønd
,34L

	)

3273 
	#SN_£t_bønd_JCB
 "£t-bønd-JCB"

	)

3274 
	#NID_£t_bønd_JCB
 639

	)

3275 
	#OBJ_£t_bønd_JCB
 
OBJ_£t_bønd
,35L

	)

3277 
	#SN_£t_bønd_Viß
 "£t-bønd-Viß"

	)

3278 
	#NID_£t_bønd_Viß
 640

	)

3279 
	#OBJ_£t_bønd_Viß
 
OBJ_£t_bønd
,4L

	)

3281 
	#SN_£t_bønd_Ma°îC¨d
 "£t-bønd-Ma°îC¨d"

	)

3282 
	#NID_£t_bønd_Ma°îC¨d
 641

	)

3283 
	#OBJ_£t_bønd_Ma°îC¨d
 
OBJ_£t_bønd
,5L

	)

3285 
	#SN_£t_bønd_Novus
 "£t-bønd-Novus"

	)

3286 
	#NID_£t_bønd_Novus
 642

	)

3287 
	#OBJ_£t_bønd_Novus
 
OBJ_£t_bønd
,6011L

	)

3289 
	#SN_des_cdmf
 "DES-CDMF"

	)

3290 
	#LN_des_cdmf
 "des-cdmf"

	)

3291 
	#NID_des_cdmf
 643

	)

3292 
	#OBJ_des_cdmf
 
OBJ_rßdsi
,3L,10L

	)

3294 
	#SN_rßOAEPEn¸y±i⁄SET
 "rßOAEPEn¸y±i⁄SET"

	)

3295 
	#NID_rßOAEPEn¸y±i⁄SET
 644

	)

3296 
	#OBJ_rßOAEPEn¸y±i⁄SET
 
OBJ_rßdsi
,1L,1L,6L

	)

3298 
	#SN_ù£c3
 "OakÀy-EC2N-3"

	)

3299 
	#LN_ù£c3
 "ù£c3"

	)

3300 
	#NID_ù£c3
 749

	)

3302 
	#SN_ù£c4
 "OakÀy-EC2N-4"

	)

3303 
	#LN_ù£c4
 "ù£c4"

	)

3304 
	#NID_ù£c4
 750

	)

	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/timeb.h

19 #i‚de‡
_SYS_TIMEB_H


20 
	#_SYS_TIMEB_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

28 
__BEGIN_DECLS


32 
	stimeb


34 
time_t
 
	mtime
;

35 
	mmûlôm
;

36 
	mtimez⁄e
;

37 
	md°Êag
;

42 
·ime
 (
timeb
 *
__timebuf
);

44 
	g__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

72 
__övÆid_size_¨gumít_f‹_IOC
;

73 
	#_IOC_TYPECHECK
(
t
) \

74 (((
t
) == (t[1]) && \

75 (
t
Ë< (1 << 
_IOC_SIZEBITS
)) ? \

76 (
t
Ë: 
__övÆid_size_¨gumít_f‹_IOC
)

	)

79 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

80 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

81 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

82 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

83 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

84 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

85 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

88 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

89 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

90 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

91 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

95 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

96 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

97 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

98 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

99 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/et/com_err.h

11 #i‡!
deföed
(
__COM_ERR_H
Ë&& !deföed(
__COM_ERR_H__
)

13 #ifde‡
__GNUC__


14 
	#COM_ERR_ATTR
(
x
Ë
	`__©åibuã__
(x)

	)

16 
	#COM_ERR_ATTR
(
x
)

	)

19 
	~<°d¨g.h
>

21 
	tîrcode_t
;

23 
	sîr‹_èbÀ
 {

24 c⁄° * c⁄° * 
	mmsgs
;

25 
	mba£
;

26 
	mn_msgs
;

28 
	gë_li°
;

30 
	$com_îr
 (const *, , const *, ...)

31 
	`COM_ERR_ATTR
((
	`f‹m©
(
¥ötf
, 3, 4)));

33 
	$com_îr_va
 (c⁄° *
whﬂmi
, 
îrcode_t
 
code
, c⁄° *
fmt
,

34 
va_li°
 
¨gs
)

35 
	`COM_ERR_ATTR
((
	`f‹m©
(
¥ötf
, 3, 0)));

37 c⁄° *
	`îr‹_mesßge
 ();

38 (*
com_îr_hook
Ë(c⁄° *, , c⁄° *, 
va_li°
);

39 (*
	`£t_com_îr_hook
 ((*) (const *, ,

40 c⁄° *, 
va_li°
)))

41 (c⁄° *, , c⁄° *, 
va_li°
);

42 (*
	$ª£t_com_îr_hook
 ()) (const *, ,

43 c⁄° *, 
va_li°
);

44 
	`öô_îr‹_èbÀ
(c⁄° * c⁄° *
msgs
, 
ba£
, 
cou¡
);

46 
îrcode_t
 
	`add_îr‹_èbÀ
(c⁄° 
îr‹_èbÀ
 * 
ë
);

47 
îrcode_t
 
	`ªmove_îr‹_èbÀ
(c⁄° 
îr‹_èbÀ
 * 
ë
);

48 
	`add_to_îr‹_èbÀ
(
ë_li°
 *
√w_èbÀ
);

51 c⁄° *
	`com_right
(
ë_li°
 *
li°
, 
code
);

52 
	`öôülize_îr‹_èbÀ_r
(
ë_li°
 **
li°
,

53 c⁄° **
mesßges
,

54 
num_îr‹s
,

55 
ba£
);

56 
	`‰ì_îr‹_èbÀ
(
ë_li°
 *
ë
);

58 
	#__COM_ERR_H


	)

59 
	#__COM_ERR_H__


	)

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

5 #unde‡
NULL


6 #i‡
deföed
(
__˝lu•lus
)

7 
	#NULL
 0

	)

9 
	#NULL
 ((*)0)

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	`__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

659 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

660 i‡(
execuã
) \

661 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

662 } 0)

	)

663 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

664 
__˛ónup_f˘_©åibuã
;

666 #ifde‡
__USE_GNU


670 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

672 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

673 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

674 *
__ˇn˚l_¨g
 = (
¨g
); \

675 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

676 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

677 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

679 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

680 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

684 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

685 dÿ{

	)

686 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

687 
__˛ónup_f˘_©åibuã
;

692 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

694 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

695 i‡(
execuã
) \

696 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

697 
	}
} 0)

	)

698 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

699 
__˛ónup_f˘_©åibuã
;

703 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

705 #i‚de‡
SHARED


706 
	`__©åibuã__
 ((
__wók__
))

712 
__jmp_buf_èg
;

713 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

719 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

720 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

721 
__THROW
 
	`__n⁄nuŒ
 ((1));

724 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

735 #ifde‡
__USE_XOPEN2K


737 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

738 
__c⁄°
 
time•ec
 *
__ª°ri˘


739 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

743 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

744 
__THROW
 
	`__n⁄nuŒ
 ((1));

747 #ifde‡
__USE_UNIX98


749 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

750 
__ª°ri˘
 
__muãx
,

751 *
__ª°ri˘
 
__¥io˚ûög
)

752 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

756 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

757 
__¥io˚ûög
,

758 *
__ª°ri˘
 
__ﬁd_˚ûög
)

759 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

763 #ifde‡
__USE_GNU


765 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

774 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

783 
__ª°ri˘
 
__©å
,

784 *
__ª°ri˘
 
__psh¨ed
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

788 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

789 
__psh¨ed
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1));

792 #ifde‡
__USE_UNIX98


794 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


795 
__©å
, *
__ª°ri˘
 
__köd
)

796 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

801 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__¥Ÿocﬁ
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

812 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

813 
__¥Ÿocﬁ
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

818 
__ª°ri˘
 
__©å
,

819 *
__ª°ri˘
 
__¥io˚ûög
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

823 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

824 
__¥io˚ûög
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_GNU


830 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

831 *
__robu°√ss
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

835 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

836 
__robu°√ss
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


846 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

847 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


848 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

860 
__THROW
 
	`__n⁄nuŒ
 ((1));

862 #ifde‡
__USE_XOPEN2K


864 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
time•ec
 *
__ª°ri˘


866 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

870 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

871 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #ifde‡
__USE_XOPEN2K


879 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 
__c⁄°
 
time•ec
 *
__ª°ri˘


881 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

885 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

896 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

901 
__ª°ri˘
 
__©å
,

902 *
__ª°ri˘
 
__psh¨ed
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

906 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

907 
__psh¨ed
)

908 
__THROW
 
	`__n⁄nuŒ
 ((1));

911 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

912 
__ª°ri˘
 
__©å
,

913 *
__ª°ri˘
 
__¥ef
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

917 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

918 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

927 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


928 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

948 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

949 
	`__n⁄nuŒ
 ((1, 2));

958 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

959 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

960 
__c⁄°
 
time•ec
 *
__ª°ri˘


961 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

966 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

975 
__ª°ri˘
 
__©å
,

976 *
__ª°ri˘
 
__psh¨ed
)

977 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

980 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

981 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

983 #ifde‡
__USE_XOPEN2K


985 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

986 
__ª°ri˘
 
__©å
,

987 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

988 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

992 
__˛ockid_t
 
__˛ock_id
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

997 #ifde‡
__USE_XOPEN2K


1002 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1018 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1026 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1027 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1028 
__©å
, 
__cou¡
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1));

1045 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1049 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1050 
__ª°ri˘
 
__©å
,

1051 *
__ª°ri˘
 
__psh¨ed
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1055 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1056 
__psh¨ed
)

1057 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1070 (*
__de°r_fun˘i⁄
) (*))

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1077 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1080 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1081 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1084 #ifde‡
__USE_XOPEN2K


1086 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1087 
__˛ockid_t
 *
__˛ock_id
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((2));

1103 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1104 (*
__∑ª¡
) (),

1105 (*
__chûd
Ë()Ë
__THROW
;

1108 #ifde‡
__USE_EXTERN_INLINES


1110 
__exã∫_ölöe
 

1111 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1113  
__thªad1
 =
__thªad2
;

1114 
	}
}

1117 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_STOPPED
 0x02000000

	)

66 
	ssched_∑øm


68 
	m__sched_¥i‹ôy
;

71 
	g__BEGIN_DECLS


73 #ifde‡
__USE_MISC


75 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

76 
__Êags
, *
__¨g
, ...Ë
__THROW
;

79 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

82 
	$sched_gë˝u
 (Ë
__THROW
;

85 
__END_DECLS


89 #i‡!
deföed
 
__deföed_sched∑øm
 \

90 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

91 
	#__deföed_sched∑øm
 1

	)

93 
	s__sched_∑øm


95 
__sched_¥i‹ôy
;

97 #unde‡
__√ed_sched∑øm


101 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


102 
	#__˝u_£t_t_deföed


	)

104 
	#__CPU_SETSIZE
 1024

	)

105 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

108 
	t__˝u_mask
;

111 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

112 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

117 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

118 } 
	t˝u_£t_t
;

121 #i‡
	`__GNUC_PREREQ
 (2, 91)

122 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

123 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

125 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

127 
size_t
 
__i
; \

128 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

129 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

130 
__i
 = 0; __ò< 
__imax
; ++__i) \

131 
__¨r
->
__bôs
[
__i
] = 0; \

132 
	}
} 0)

	)

134 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

135 ({ 
size_t
 
__˝u
 = (
˝u
); \

136 
__˝u
 < 8 * (
£tsize
) \

137 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] |
	`__CPUMASK
 (__˝u)Ë: 0; })

	)

138 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

139 ({ 
size_t
 
__˝u
 = (
˝u
); \

140 
__˝u
 < 8 * (
£tsize
) \

141 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] &~
	`__CPUMASK
 (__˝u)Ë: 0; })

	)

142 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 ({ 
size_t
 
__˝u
 = (
˝u
); \

144 
__˝u
 < 8 * (
£tsize
) \

145 ? (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] & 
	`__CPUMASK
 (__˝u))Ë!0 : 0; })

	)

147 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

148 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

150 #i‡
__GNUC_PREREQ
 (2, 91)

151 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

152 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

154 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

155 ({ 
˝u_£t_t
 *
__¨r1
 = (
˝u£ç1
); \

156 
˝u_£t_t
 *
__¨r2
 = (
˝u£ç2
); \

157 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

158 
size_t
 
__i
; \

159 
__i
 = 0; __ò< 
__imax
; ++__i) \

160 i‡(
__¨r1
->
__bôs
[
__i
] !
__¨r2
->__bits[__i]) \

162 
__i
 =
__imax
; })

	)

165 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

166 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

167 
˝u_£t_t
 *
__¨r1
 = (
§c£t1
); \

168 
˝u_£t_t
 *
__¨r2
 = (
§c£t2
); \

169 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

170 
size_t
 
__i
; \

171 
__i
 = 0; __ò< 
__imax
; ++__i) \

172 
__de°
->
__bôs
[
__i
] = 
__¨r1
->__bôs[__i] 
›
 
__¨r2
->__bits[__i]; \

173 
__de°
; })

	)

175 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

176 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË* 8)

	)

177 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

178 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

180 
__BEGIN_DECLS


182 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

183 
__THROW
;

184 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

185 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

187 
__END_DECLS


	@
1
.
1
/usr/include
380
7977
.pc/google.patch/fm.h
.pc/google.patch/main.c
.pc/google.patch/proto.h
.pc/google.patch/rc.c
Str.c
Str.h
anchor.c
backend.c
buffer.c
config.h
cookie.c
ctrlcode.h
display.c
entity.c
entity.h
etc.c
file.c
fm.h
form.c
form.h
frame.c
frame.h
ftp.c
func.c
func.h
funcname.c
funcname1.h
funcname2.h
functable.c
hash.c
hash.h
history.c
history.h
html.c
html.h
image.c
indep.c
indep.h
inflate.c
islang.c
istream.c
istream.h
keybind.c
keybind_lynx.c
libwc/big5.c
libwc/big5.h
libwc/ccs.h
libwc/ces.c
libwc/ces.h
libwc/char_conv.c
libwc/charset.c
libwc/combining.c
libwc/conv.c
libwc/detect.c
libwc/gb18030.c
libwc/gb18030.h
libwc/gbk.c
libwc/gbk.h
libwc/hkscs.c
libwc/hkscs.h
libwc/hz.c
libwc/hz.h
libwc/iso2022.c
libwc/iso2022.h
libwc/jis.c
libwc/jis.h
libwc/johab.c
libwc/johab.h
libwc/priv.c
libwc/priv.h
libwc/putc.c
libwc/search.c
libwc/search.h
libwc/sjis.c
libwc/sjis.h
libwc/status.c
libwc/test.c
libwc/ucs.c
libwc/ucs.h
libwc/uhc.c
libwc/uhc.h
libwc/utf7.c
libwc/utf7.h
libwc/utf8.c
libwc/utf8.h
libwc/viet.c
libwc/viet.h
libwc/wc.h
libwc/wc_types.h
libwc/wtf.c
libwc/wtf.h
linein.c
local.c
local.h
mailcap.c
main.c
map.c
matrix.c
matrix.h
menu.c
menu.h
mimehead.c
mktable.c
myctype.c
myctype.h
news.c
parsetag.c
parsetag.h
parsetagx.c
parsetagx.h
proto.h
rc.c
regex.c
regex.h
scrsize.c
search.c
symbol.c
table.c
table.h
tagtable.c
terms.c
terms.h
textlist.c
textlist.h
url.c
version.c
w3mbookmark.c
w3mhelperpanel.c
w3mimg/fb/fb.c
w3mimg/fb/fb.h
w3mimg/fb/fb_gdkpixbuf.c
w3mimg/fb/fb_img.c
w3mimg/fb/fb_img.h
w3mimg/fb/fb_imlib2.c
w3mimg/fb/fb_w3mimg.c
w3mimg/w3mimg.c
w3mimg/w3mimg.h
w3mimg/x11/x11_w3mimg.c
w3mimgdisplay.c
/usr/include/Imlib.h
/usr/include/X11/Xlib.h
/usr/include/X11/Xutil.h
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/gc.h
/usr/include/gpm.h
/usr/include/inttypes.h
/usr/include/langinfo.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/linux/fb.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/openssl/bio.h
/usr/include/openssl/crypto.h
/usr/include/openssl/err.h
/usr/include/openssl/md5.h
/usr/include/openssl/rand.h
/usr/include/openssl/ssl.h
/usr/include/openssl/x509.h
/usr/include/openssl/x509v3.h
/usr/include/pwd.h
/usr/include/readline/readline.h
/usr/include/search.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/dir.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/termio.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/zlib.h
Symbols/alt.sym
Symbols/big5.sym
Symbols/cp850.sym
Symbols/euccn.sym
Symbols/eucjp.sym
Symbols/euckr.sym
Symbols/euctw.sym
Symbols/graph.sym
Symbols/utf8.sym
/usr/include/Imlib_types.h
/usr/include/X11/X.h
/usr/include/X11/Xfuncproto.h
/usr/include/X11/Xosdefs.h
/usr/include/X11/keysym.h
/usr/include/alloca.h
/usr/include/asm/types.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/gc/gc.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/i2c.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/nl_types.h
/usr/include/openssl/asn1.h
/usr/include/openssl/buffer.h
/usr/include/openssl/comp.h
/usr/include/openssl/conf.h
/usr/include/openssl/dh.h
/usr/include/openssl/dsa.h
/usr/include/openssl/dtls1.h
/usr/include/openssl/e_os2.h
/usr/include/openssl/ebcdic.h
/usr/include/openssl/evp.h
/usr/include/openssl/kssl.h
/usr/include/openssl/lhash.h
/usr/include/openssl/opensslv.h
/usr/include/openssl/ossl_typ.h
/usr/include/openssl/pem.h
/usr/include/openssl/pkcs7.h
/usr/include/openssl/rsa.h
/usr/include/openssl/safestack.h
/usr/include/openssl/sha.h
/usr/include/openssl/ssl2.h
/usr/include/openssl/ssl23.h
/usr/include/openssl/ssl3.h
/usr/include/openssl/stack.h
/usr/include/openssl/symhacks.h
/usr/include/openssl/tls1.h
/usr/include/openssl/x509_vfy.h
/usr/include/paths.h
/usr/include/readline/keymaps.h
/usr/include/readline/rlstdc.h
/usr/include/readline/rltypedefs.h
/usr/include/readline/tilde.h
/usr/include/rpc/netdb.h
/usr/include/sys/resource.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/zconf.h
/usr/include/X11/Xatom.h
/usr/include/X11/Xmd.h
/usr/include/X11/Xos.h
/usr/include/X11/extensions/XShm.h
/usr/include/X11/extensions/shape.h
/usr/include/X11/keysymdef.h
/usr/include/_G_config.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/resource.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/krb5.h
/usr/include/linux/errno.h
/usr/include/linux/types.h
/usr/include/openssl/bn.h
/usr/include/openssl/objects.h
/usr/include/openssl/opensslconf.h
/usr/include/openssl/pem2.h
/usr/include/openssl/pq_compat.h
/usr/include/openssl/pqueue.h
/usr/include/readline/chardefs.h
/usr/include/sys/cdefs.h
/usr/include/sys/ipc.h
/usr/include/sys/shm.h
/usr/include/X11/Xarch.h
/usr/include/X11/Xw32defs.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/sockios.h
/usr/include/assert.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/libc-lock.h
/usr/include/bits/shm.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/krb5/krb5.h
/usr/include/linux/posix_types.h
/usr/include/memory.h
/usr/include/netinet/in_systm.h
/usr/include/openssl/obj_mac.h
/usr/include/sys/file.h
/usr/include/sys/timeb.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/et/com_err.h
/usr/include/linux/stddef.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/sched.h
/usr/include/bits/sched.h
